; ModuleID = 'redis-cli-strip-O3-renamed.bc'
source_filename = "redis-cli.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i8*, i8*, i8*, i32, i8* }
%1 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %2*, %1*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%2 = type { %2*, %1*, i32 }
%3 = type { %4*, i8*, [2 x %5], i64, i64 }
%4 = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%5 = type { %6**, i64, i64, i64 }
%6 = type { i8*, %7, %6* }
%7 = type { i8* }
%8 = type { i8*, i32 (i32, i8**)*, i32, i8*, i8* }
%9 = type { %10*, i32, [128 x i8], i32, i32, i8*, %12*, i32, %15*, %16, %17, %18*, i64, i8* }
%10 = type { void (i8*)*, void (%11*)*, void (%11*)*, i32 (%9*, i8*, i64)*, i32 (%9*)* }
%11 = type opaque
%12 = type { i32, [128 x i8], i8*, i64, i64, i64, [9 x %13], i32, i8*, %14*, i8* }
%13 = type { i32, i32, i32, i8*, %13*, i8* }
%14 = type { i8* (%13*, i8*, i64)*, i8* (%13*, i64)*, i8* (%13*, i64)*, i8* (%13*, double, i8*, i64)*, i8* (%13*)*, i8* (%13*, i32)*, void (i8*)* }
%15 = type { i64, i64 }
%16 = type { i8*, i8*, i32 }
%17 = type { i8* }
%18 = type opaque
%19 = type { i8*, i8*, i8*, i64, i64, i64, i8* }
%20 = type { i8*, i32, i8*, i32, i8*, i8*, i8*, i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i8*, i32, i8*, i32, i8*, [128 x i8], i8*, i32, i32, i32, i32, i32, i32, %21, i32, i32 }
%21 = type { i8*, i32, i8**, i32, i32, i8*, i8*, i8**, i32, i8*, i32, i32, i32, float, i8* }
%22 = type { i64, i64, i32 }
%23 = type { i32, i32, i8**, i8*, %0* }
%24 = type { %25*, %25*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%25 = type { %25*, %25*, i8* }
%26 = type { %25*, i32 }
%27 = type { %9*, i8*, i8*, i32, i64, i64, i64, i32, %24*, i8*, i32, [16384 x i8], i32, i32, %24*, i8**, i8**, i32, i32, float, i32 }
%28 = type { %27**, %27**, i32, i32 }
%29 = type { %27*, i32 }
%30 = type { i32, i64, double, i64, i8*, [4 x i8], i64, %30** }
%31 = type { i32, i32 }
%32 = type { %3*, i64, i32, i32, %6*, %6*, i64 }
%33 = type { i32, i32, i8*, i8* }
%34 = type { i64, i8** }

@0 = private unnamed_addr constant [8 x i8] c"ACL CAT\00", align 1
@1 = private unnamed_addr constant [15 x i8] c"[categoryname]\00", align 1
@2 = private unnamed_addr constant [58 x i8] c"List the ACL categories or the commands inside a category\00", align 1
@3 = private unnamed_addr constant [6 x i8] c"6.0.0\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ACL DELUSER\00", align 1
@5 = private unnamed_addr constant [24 x i8] c"username [username ...]\00", align 1
@6 = private unnamed_addr constant [56 x i8] c"Remove the specified ACL users and the associated rules\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ACL GENPASS\00", align 1
@8 = private unnamed_addr constant [7 x i8] c"[bits]\00", align 1
@9 = private unnamed_addr constant [61 x i8] c"Generate a pseudorandom secure password to use for ACL users\00", align 1
@10 = private unnamed_addr constant [9 x i8] c"ACL LIST\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@12 = private unnamed_addr constant [53 x i8] c"List the current ACL rules in ACL config file format\00", align 1
@13 = private unnamed_addr constant [9 x i8] c"ACL LOAD\00", align 1
@14 = private unnamed_addr constant [45 x i8] c"Reload the ACLs from the configured ACL file\00", align 1
@15 = private unnamed_addr constant [8 x i8] c"ACL LOG\00", align 1
@16 = private unnamed_addr constant [17 x i8] c"[count or RESET]\00", align 1
@17 = private unnamed_addr constant [51 x i8] c"List latest events denied because of ACLs in place\00", align 1
@18 = private unnamed_addr constant [9 x i8] c"ACL SAVE\00", align 1
@19 = private unnamed_addr constant [54 x i8] c"Save the current ACL rules in the configured ACL file\00", align 1
@20 = private unnamed_addr constant [12 x i8] c"ACL SETUSER\00", align 1
@21 = private unnamed_addr constant [16 x i8] c"rule [rule ...]\00", align 1
@22 = private unnamed_addr constant [51 x i8] c"Modify or create the rules for a specific ACL user\00", align 1
@23 = private unnamed_addr constant [10 x i8] c"ACL USERS\00", align 1
@24 = private unnamed_addr constant [50 x i8] c"List the username of all the configured ACL rules\00", align 1
@25 = private unnamed_addr constant [11 x i8] c"ACL WHOAMI\00", align 1
@26 = private unnamed_addr constant [65 x i8] c"Return the name of the user associated to the current connection\00", align 1
@27 = private unnamed_addr constant [7 x i8] c"APPEND\00", align 1
@28 = private unnamed_addr constant [10 x i8] c"key value\00", align 1
@29 = private unnamed_addr constant [24 x i8] c"Append a value to a key\00", align 1
@30 = private unnamed_addr constant [6 x i8] c"2.0.0\00", align 1
@31 = private unnamed_addr constant [5 x i8] c"AUTH\00", align 1
@32 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@33 = private unnamed_addr constant [27 x i8] c"Authenticate to the server\00", align 1
@34 = private unnamed_addr constant [6 x i8] c"1.0.0\00", align 1
@35 = private unnamed_addr constant [13 x i8] c"BGREWRITEAOF\00", align 1
@36 = private unnamed_addr constant [44 x i8] c"Asynchronously rewrite the append-only file\00", align 1
@37 = private unnamed_addr constant [7 x i8] c"BGSAVE\00", align 1
@38 = private unnamed_addr constant [11 x i8] c"[SCHEDULE]\00", align 1
@39 = private unnamed_addr constant [40 x i8] c"Asynchronously save the dataset to disk\00", align 1
@40 = private unnamed_addr constant [9 x i8] c"BITCOUNT\00", align 1
@41 = private unnamed_addr constant [16 x i8] c"key [start end]\00", align 1
@42 = private unnamed_addr constant [27 x i8] c"Count set bits in a string\00", align 1
@43 = private unnamed_addr constant [6 x i8] c"2.6.0\00", align 1
@44 = private unnamed_addr constant [9 x i8] c"BITFIELD\00", align 1
@45 = private unnamed_addr constant [102 x i8] c"key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]\00", align 1
@46 = private unnamed_addr constant [57 x i8] c"Perform arbitrary bitfield integer operations on strings\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"3.2.0\00", align 1
@48 = private unnamed_addr constant [6 x i8] c"BITOP\00", align 1
@49 = private unnamed_addr constant [32 x i8] c"operation destkey key [key ...]\00", align 1
@50 = private unnamed_addr constant [43 x i8] c"Perform bitwise operations between strings\00", align 1
@51 = private unnamed_addr constant [7 x i8] c"BITPOS\00", align 1
@52 = private unnamed_addr constant [22 x i8] c"key bit [start] [end]\00", align 1
@53 = private unnamed_addr constant [40 x i8] c"Find first bit set or clear in a string\00", align 1
@54 = private unnamed_addr constant [6 x i8] c"2.8.7\00", align 1
@55 = private unnamed_addr constant [6 x i8] c"BLPOP\00", align 1
@56 = private unnamed_addr constant [22 x i8] c"key [key ...] timeout\00", align 1
@57 = private unnamed_addr constant [76 x i8] c"Remove and get the first element in a list, or block until one is available\00", align 1
@58 = private unnamed_addr constant [6 x i8] c"BRPOP\00", align 1
@59 = private unnamed_addr constant [75 x i8] c"Remove and get the last element in a list, or block until one is available\00", align 1
@60 = private unnamed_addr constant [11 x i8] c"BRPOPLPUSH\00", align 1
@61 = private unnamed_addr constant [27 x i8] c"source destination timeout\00", align 1
@62 = private unnamed_addr constant [99 x i8] c"Pop an element from a list, push it to another list and return it; or block until one is available\00", align 1
@63 = private unnamed_addr constant [6 x i8] c"2.2.0\00", align 1
@64 = private unnamed_addr constant [9 x i8] c"BZPOPMAX\00", align 1
@65 = private unnamed_addr constant [114 x i8] c"Remove and return the member with the highest score from one or more sorted sets, or block until one is available\00", align 1
@66 = private unnamed_addr constant [6 x i8] c"5.0.0\00", align 1
@67 = private unnamed_addr constant [9 x i8] c"BZPOPMIN\00", align 1
@68 = private unnamed_addr constant [113 x i8] c"Remove and return the member with the lowest score from one or more sorted sets, or block until one is available\00", align 1
@69 = private unnamed_addr constant [15 x i8] c"CLIENT CACHING\00", align 1
@70 = private unnamed_addr constant [7 x i8] c"YES|NO\00", align 1
@71 = private unnamed_addr constant [67 x i8] c"Instruct the server about tracking or not keys in the next request\00", align 1
@72 = private unnamed_addr constant [15 x i8] c"CLIENT GETNAME\00", align 1
@73 = private unnamed_addr constant [32 x i8] c"Get the current connection name\00", align 1
@74 = private unnamed_addr constant [6 x i8] c"2.6.9\00", align 1
@75 = private unnamed_addr constant [16 x i8] c"CLIENT GETREDIR\00", align 1
@76 = private unnamed_addr constant [56 x i8] c"Get tracking notifications redirection client ID if any\00", align 1
@77 = private unnamed_addr constant [10 x i8] c"CLIENT ID\00", align 1
@78 = private unnamed_addr constant [49 x i8] c"Returns the client ID for the current connection\00", align 1
@79 = private unnamed_addr constant [12 x i8] c"CLIENT KILL\00", align 1
@80 = private unnamed_addr constant [90 x i8] c"[ip:port] [ID client-id] [TYPE normal|master|slave|pubsub] [ADDR ip:port] [SKIPME yes/no]\00", align 1
@81 = private unnamed_addr constant [32 x i8] c"Kill the connection of a client\00", align 1
@82 = private unnamed_addr constant [6 x i8] c"2.4.0\00", align 1
@83 = private unnamed_addr constant [12 x i8] c"CLIENT LIST\00", align 1
@84 = private unnamed_addr constant [36 x i8] c"[TYPE normal|master|replica|pubsub]\00", align 1
@85 = private unnamed_addr constant [35 x i8] c"Get the list of client connections\00", align 1
@86 = private unnamed_addr constant [13 x i8] c"CLIENT PAUSE\00", align 1
@87 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@88 = private unnamed_addr constant [52 x i8] c"Stop processing commands from clients for some time\00", align 1
@89 = private unnamed_addr constant [7 x i8] c"2.9.50\00", align 1
@90 = private unnamed_addr constant [13 x i8] c"CLIENT REPLY\00", align 1
@91 = private unnamed_addr constant [12 x i8] c"ON|OFF|SKIP\00", align 1
@92 = private unnamed_addr constant [49 x i8] c"Instruct the server whether to reply to commands\00", align 1
@93 = private unnamed_addr constant [4 x i8] c"3.2\00", align 1
@94 = private unnamed_addr constant [15 x i8] c"CLIENT SETNAME\00", align 1
@95 = private unnamed_addr constant [16 x i8] c"connection-name\00", align 1
@96 = private unnamed_addr constant [32 x i8] c"Set the current connection name\00", align 1
@97 = private unnamed_addr constant [16 x i8] c"CLIENT TRACKING\00", align 1
@98 = private unnamed_addr constant [78 x i8] c"ON|OFF [REDIRECT client-id] [PREFIX prefix] [BCAST] [OPTIN] [OPTOUT] [NOLOOP]\00", align 1
@99 = private unnamed_addr constant [62 x i8] c"Enable or disable server assisted client side caching support\00", align 1
@100 = private unnamed_addr constant [15 x i8] c"CLIENT UNBLOCK\00", align 1
@101 = private unnamed_addr constant [26 x i8] c"client-id [TIMEOUT|ERROR]\00", align 1
@102 = private unnamed_addr constant [75 x i8] c"Unblock a client blocked in a blocking command from a different connection\00", align 1
@103 = private unnamed_addr constant [17 x i8] c"CLUSTER ADDSLOTS\00", align 1
@104 = private unnamed_addr constant [16 x i8] c"slot [slot ...]\00", align 1
@105 = private unnamed_addr constant [40 x i8] c"Assign new hash slots to receiving node\00", align 1
@106 = private unnamed_addr constant [6 x i8] c"3.0.0\00", align 1
@107 = private unnamed_addr constant [18 x i8] c"CLUSTER BUMPEPOCH\00", align 1
@108 = private unnamed_addr constant [33 x i8] c"Advance the cluster config epoch\00", align 1
@109 = private unnamed_addr constant [30 x i8] c"CLUSTER COUNT-FAILURE-REPORTS\00", align 1
@110 = private unnamed_addr constant [8 x i8] c"node-id\00", align 1
@111 = private unnamed_addr constant [61 x i8] c"Return the number of failure reports active for a given node\00", align 1
@112 = private unnamed_addr constant [24 x i8] c"CLUSTER COUNTKEYSINSLOT\00", align 1
@113 = private unnamed_addr constant [5 x i8] c"slot\00", align 1
@114 = private unnamed_addr constant [59 x i8] c"Return the number of local keys in the specified hash slot\00", align 1
@115 = private unnamed_addr constant [17 x i8] c"CLUSTER DELSLOTS\00", align 1
@116 = private unnamed_addr constant [44 x i8] c"Set hash slots as unbound in receiving node\00", align 1
@117 = private unnamed_addr constant [17 x i8] c"CLUSTER FAILOVER\00", align 1
@118 = private unnamed_addr constant [17 x i8] c"[FORCE|TAKEOVER]\00", align 1
@119 = private unnamed_addr constant [61 x i8] c"Forces a replica to perform a manual failover of its master.\00", align 1
@120 = private unnamed_addr constant [19 x i8] c"CLUSTER FLUSHSLOTS\00", align 1
@121 = private unnamed_addr constant [38 x i8] c"Delete a node's own slots information\00", align 1
@122 = private unnamed_addr constant [15 x i8] c"CLUSTER FORGET\00", align 1
@123 = private unnamed_addr constant [35 x i8] c"Remove a node from the nodes table\00", align 1
@124 = private unnamed_addr constant [22 x i8] c"CLUSTER GETKEYSINSLOT\00", align 1
@125 = private unnamed_addr constant [11 x i8] c"slot count\00", align 1
@126 = private unnamed_addr constant [50 x i8] c"Return local key names in the specified hash slot\00", align 1
@127 = private unnamed_addr constant [13 x i8] c"CLUSTER INFO\00", align 1
@128 = private unnamed_addr constant [45 x i8] c"Provides info about Redis Cluster node state\00", align 1
@129 = private unnamed_addr constant [16 x i8] c"CLUSTER KEYSLOT\00", align 1
@130 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@131 = private unnamed_addr constant [43 x i8] c"Returns the hash slot of the specified key\00", align 1
@132 = private unnamed_addr constant [13 x i8] c"CLUSTER MEET\00", align 1
@133 = private unnamed_addr constant [8 x i8] c"ip port\00", align 1
@134 = private unnamed_addr constant [52 x i8] c"Force a node cluster to handshake with another node\00", align 1
@135 = private unnamed_addr constant [13 x i8] c"CLUSTER MYID\00", align 1
@136 = private unnamed_addr constant [19 x i8] c"Return the node id\00", align 1
@137 = private unnamed_addr constant [14 x i8] c"CLUSTER NODES\00", align 1
@138 = private unnamed_addr constant [32 x i8] c"Get Cluster config for the node\00", align 1
@139 = private unnamed_addr constant [17 x i8] c"CLUSTER REPLICAS\00", align 1
@140 = private unnamed_addr constant [48 x i8] c"List replica nodes of the specified master node\00", align 1
@141 = private unnamed_addr constant [18 x i8] c"CLUSTER REPLICATE\00", align 1
@142 = private unnamed_addr constant [61 x i8] c"Reconfigure a node as a replica of the specified master node\00", align 1
@143 = private unnamed_addr constant [14 x i8] c"CLUSTER RESET\00", align 1
@144 = private unnamed_addr constant [12 x i8] c"[HARD|SOFT]\00", align 1
@145 = private unnamed_addr constant [27 x i8] c"Reset a Redis Cluster node\00", align 1
@146 = private unnamed_addr constant [19 x i8] c"CLUSTER SAVECONFIG\00", align 1
@147 = private unnamed_addr constant [46 x i8] c"Forces the node to save cluster state on disk\00", align 1
@148 = private unnamed_addr constant [25 x i8] c"CLUSTER SET-CONFIG-EPOCH\00", align 1
@149 = private unnamed_addr constant [13 x i8] c"config-epoch\00", align 1
@150 = private unnamed_addr constant [42 x i8] c"Set the configuration epoch in a new node\00", align 1
@151 = private unnamed_addr constant [16 x i8] c"CLUSTER SETSLOT\00", align 1
@152 = private unnamed_addr constant [47 x i8] c"slot IMPORTING|MIGRATING|STABLE|NODE [node-id]\00", align 1
@153 = private unnamed_addr constant [36 x i8] c"Bind a hash slot to a specific node\00", align 1
@154 = private unnamed_addr constant [15 x i8] c"CLUSTER SLAVES\00", align 1
@155 = private unnamed_addr constant [14 x i8] c"CLUSTER SLOTS\00", align 1
@156 = private unnamed_addr constant [43 x i8] c"Get array of Cluster slot to node mappings\00", align 1
@157 = private unnamed_addr constant [8 x i8] c"COMMAND\00", align 1
@158 = private unnamed_addr constant [35 x i8] c"Get array of Redis command details\00", align 1
@159 = private unnamed_addr constant [7 x i8] c"2.8.13\00", align 1
@160 = private unnamed_addr constant [14 x i8] c"COMMAND COUNT\00", align 1
@161 = private unnamed_addr constant [35 x i8] c"Get total number of Redis commands\00", align 1
@162 = private unnamed_addr constant [16 x i8] c"COMMAND GETKEYS\00", align 1
@163 = private unnamed_addr constant [40 x i8] c"Extract keys given a full Redis command\00", align 1
@164 = private unnamed_addr constant [13 x i8] c"COMMAND INFO\00", align 1
@165 = private unnamed_addr constant [32 x i8] c"command-name [command-name ...]\00", align 1
@166 = private unnamed_addr constant [44 x i8] c"Get array of specific Redis command details\00", align 1
@167 = private unnamed_addr constant [11 x i8] c"CONFIG GET\00", align 1
@168 = private unnamed_addr constant [10 x i8] c"parameter\00", align 1
@169 = private unnamed_addr constant [43 x i8] c"Get the value of a configuration parameter\00", align 1
@170 = private unnamed_addr constant [17 x i8] c"CONFIG RESETSTAT\00", align 1
@171 = private unnamed_addr constant [33 x i8] c"Reset the stats returned by INFO\00", align 1
@172 = private unnamed_addr constant [15 x i8] c"CONFIG REWRITE\00", align 1
@173 = private unnamed_addr constant [64 x i8] c"Rewrite the configuration file with the in memory configuration\00", align 1
@174 = private unnamed_addr constant [6 x i8] c"2.8.0\00", align 1
@175 = private unnamed_addr constant [11 x i8] c"CONFIG SET\00", align 1
@176 = private unnamed_addr constant [16 x i8] c"parameter value\00", align 1
@177 = private unnamed_addr constant [49 x i8] c"Set a configuration parameter to the given value\00", align 1
@178 = private unnamed_addr constant [7 x i8] c"DBSIZE\00", align 1
@179 = private unnamed_addr constant [51 x i8] c"Return the number of keys in the selected database\00", align 1
@180 = private unnamed_addr constant [13 x i8] c"DEBUG OBJECT\00", align 1
@181 = private unnamed_addr constant [38 x i8] c"Get debugging information about a key\00", align 1
@182 = private unnamed_addr constant [15 x i8] c"DEBUG SEGFAULT\00", align 1
@183 = private unnamed_addr constant [22 x i8] c"Make the server crash\00", align 1
@184 = private unnamed_addr constant [5 x i8] c"DECR\00", align 1
@185 = private unnamed_addr constant [44 x i8] c"Decrement the integer value of a key by one\00", align 1
@186 = private unnamed_addr constant [7 x i8] c"DECRBY\00", align 1
@187 = private unnamed_addr constant [14 x i8] c"key decrement\00", align 1
@188 = private unnamed_addr constant [57 x i8] c"Decrement the integer value of a key by the given number\00", align 1
@189 = private unnamed_addr constant [4 x i8] c"DEL\00", align 1
@190 = private unnamed_addr constant [14 x i8] c"key [key ...]\00", align 1
@191 = private unnamed_addr constant [13 x i8] c"Delete a key\00", align 1
@192 = private unnamed_addr constant [8 x i8] c"DISCARD\00", align 1
@193 = private unnamed_addr constant [40 x i8] c"Discard all commands issued after MULTI\00", align 1
@194 = private unnamed_addr constant [5 x i8] c"DUMP\00", align 1
@195 = private unnamed_addr constant [70 x i8] c"Return a serialized version of the value stored at the specified key.\00", align 1
@196 = private unnamed_addr constant [5 x i8] c"ECHO\00", align 1
@197 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@198 = private unnamed_addr constant [22 x i8] c"Echo the given string\00", align 1
@199 = private unnamed_addr constant [5 x i8] c"EVAL\00", align 1
@200 = private unnamed_addr constant [43 x i8] c"script numkeys key [key ...] arg [arg ...]\00", align 1
@201 = private unnamed_addr constant [33 x i8] c"Execute a Lua script server side\00", align 1
@202 = private unnamed_addr constant [8 x i8] c"EVALSHA\00", align 1
@203 = private unnamed_addr constant [41 x i8] c"sha1 numkeys key [key ...] arg [arg ...]\00", align 1
@204 = private unnamed_addr constant [5 x i8] c"EXEC\00", align 1
@205 = private unnamed_addr constant [40 x i8] c"Execute all commands issued after MULTI\00", align 1
@206 = private unnamed_addr constant [6 x i8] c"1.2.0\00", align 1
@207 = private unnamed_addr constant [7 x i8] c"EXISTS\00", align 1
@208 = private unnamed_addr constant [26 x i8] c"Determine if a key exists\00", align 1
@209 = private unnamed_addr constant [7 x i8] c"EXPIRE\00", align 1
@210 = private unnamed_addr constant [12 x i8] c"key seconds\00", align 1
@211 = private unnamed_addr constant [36 x i8] c"Set a key's time to live in seconds\00", align 1
@212 = private unnamed_addr constant [9 x i8] c"EXPIREAT\00", align 1
@213 = private unnamed_addr constant [14 x i8] c"key timestamp\00", align 1
@214 = private unnamed_addr constant [49 x i8] c"Set the expiration for a key as a UNIX timestamp\00", align 1
@215 = private unnamed_addr constant [9 x i8] c"FLUSHALL\00", align 1
@216 = private unnamed_addr constant [8 x i8] c"[ASYNC]\00", align 1
@217 = private unnamed_addr constant [35 x i8] c"Remove all keys from all databases\00", align 1
@218 = private unnamed_addr constant [8 x i8] c"FLUSHDB\00", align 1
@219 = private unnamed_addr constant [42 x i8] c"Remove all keys from the current database\00", align 1
@220 = private unnamed_addr constant [7 x i8] c"GEOADD\00", align 1
@221 = private unnamed_addr constant [62 x i8] c"key longitude latitude member [longitude latitude member ...]\00", align 1
@222 = private unnamed_addr constant [88 x i8] c"Add one or more geospatial items in the geospatial index represented using a sorted set\00", align 1
@223 = private unnamed_addr constant [8 x i8] c"GEODIST\00", align 1
@224 = private unnamed_addr constant [33 x i8] c"key member1 member2 [m|km|ft|mi]\00", align 1
@225 = private unnamed_addr constant [63 x i8] c"Returns the distance between two members of a geospatial index\00", align 1
@226 = private unnamed_addr constant [8 x i8] c"GEOHASH\00", align 1
@227 = private unnamed_addr constant [24 x i8] c"key member [member ...]\00", align 1
@228 = private unnamed_addr constant [66 x i8] c"Returns members of a geospatial index as standard geohash strings\00", align 1
@229 = private unnamed_addr constant [7 x i8] c"GEOPOS\00", align 1
@230 = private unnamed_addr constant [64 x i8] c"Returns longitude and latitude of members of a geospatial index\00", align 1
@231 = private unnamed_addr constant [10 x i8] c"GEORADIUS\00", align 1
@232 = private unnamed_addr constant [128 x i8] c"key longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]\00", align 1
@233 = private unnamed_addr constant [115 x i8] c"Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point\00", align 1
@234 = private unnamed_addr constant [18 x i8] c"GEORADIUSBYMEMBER\00", align 1
@235 = private unnamed_addr constant [116 x i8] c"key member radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]\00", align 1
@236 = private unnamed_addr constant [116 x i8] c"Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member\00", align 1
@237 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@238 = private unnamed_addr constant [23 x i8] c"Get the value of a key\00", align 1
@239 = private unnamed_addr constant [7 x i8] c"GETBIT\00", align 1
@240 = private unnamed_addr constant [11 x i8] c"key offset\00", align 1
@241 = private unnamed_addr constant [66 x i8] c"Returns the bit value at offset in the string value stored at key\00", align 1
@242 = private unnamed_addr constant [9 x i8] c"GETRANGE\00", align 1
@243 = private unnamed_addr constant [14 x i8] c"key start end\00", align 1
@244 = private unnamed_addr constant [46 x i8] c"Get a substring of the string stored at a key\00", align 1
@245 = private unnamed_addr constant [7 x i8] c"GETSET\00", align 1
@246 = private unnamed_addr constant [55 x i8] c"Set the string value of a key and return its old value\00", align 1
@247 = private unnamed_addr constant [5 x i8] c"HDEL\00", align 1
@248 = private unnamed_addr constant [22 x i8] c"key field [field ...]\00", align 1
@249 = private unnamed_addr constant [31 x i8] c"Delete one or more hash fields\00", align 1
@250 = private unnamed_addr constant [6 x i8] c"HELLO\00", align 1
@251 = private unnamed_addr constant [55 x i8] c"protover [AUTH username password] [SETNAME clientname]\00", align 1
@252 = private unnamed_addr constant [22 x i8] c"switch Redis protocol\00", align 1
@253 = private unnamed_addr constant [8 x i8] c"HEXISTS\00", align 1
@254 = private unnamed_addr constant [10 x i8] c"key field\00", align 1
@255 = private unnamed_addr constant [33 x i8] c"Determine if a hash field exists\00", align 1
@256 = private unnamed_addr constant [5 x i8] c"HGET\00", align 1
@257 = private unnamed_addr constant [30 x i8] c"Get the value of a hash field\00", align 1
@258 = private unnamed_addr constant [8 x i8] c"HGETALL\00", align 1
@259 = private unnamed_addr constant [40 x i8] c"Get all the fields and values in a hash\00", align 1
@260 = private unnamed_addr constant [8 x i8] c"HINCRBY\00", align 1
@261 = private unnamed_addr constant [20 x i8] c"key field increment\00", align 1
@262 = private unnamed_addr constant [64 x i8] c"Increment the integer value of a hash field by the given number\00", align 1
@263 = private unnamed_addr constant [13 x i8] c"HINCRBYFLOAT\00", align 1
@264 = private unnamed_addr constant [62 x i8] c"Increment the float value of a hash field by the given amount\00", align 1
@265 = private unnamed_addr constant [6 x i8] c"HKEYS\00", align 1
@266 = private unnamed_addr constant [29 x i8] c"Get all the fields in a hash\00", align 1
@267 = private unnamed_addr constant [5 x i8] c"HLEN\00", align 1
@268 = private unnamed_addr constant [35 x i8] c"Get the number of fields in a hash\00", align 1
@269 = private unnamed_addr constant [6 x i8] c"HMGET\00", align 1
@270 = private unnamed_addr constant [44 x i8] c"Get the values of all the given hash fields\00", align 1
@271 = private unnamed_addr constant [6 x i8] c"HMSET\00", align 1
@272 = private unnamed_addr constant [34 x i8] c"key field value [field value ...]\00", align 1
@273 = private unnamed_addr constant [44 x i8] c"Set multiple hash fields to multiple values\00", align 1
@274 = private unnamed_addr constant [6 x i8] c"HSCAN\00", align 1
@275 = private unnamed_addr constant [41 x i8] c"key cursor [MATCH pattern] [COUNT count]\00", align 1
@276 = private unnamed_addr constant [56 x i8] c"Incrementally iterate hash fields and associated values\00", align 1
@277 = private unnamed_addr constant [5 x i8] c"HSET\00", align 1
@278 = private unnamed_addr constant [37 x i8] c"Set the string value of a hash field\00", align 1
@279 = private unnamed_addr constant [7 x i8] c"HSETNX\00", align 1
@280 = private unnamed_addr constant [16 x i8] c"key field value\00", align 1
@281 = private unnamed_addr constant [64 x i8] c"Set the value of a hash field, only if the field does not exist\00", align 1
@282 = private unnamed_addr constant [8 x i8] c"HSTRLEN\00", align 1
@283 = private unnamed_addr constant [44 x i8] c"Get the length of the value of a hash field\00", align 1
@284 = private unnamed_addr constant [6 x i8] c"HVALS\00", align 1
@285 = private unnamed_addr constant [29 x i8] c"Get all the values in a hash\00", align 1
@286 = private unnamed_addr constant [5 x i8] c"INCR\00", align 1
@287 = private unnamed_addr constant [44 x i8] c"Increment the integer value of a key by one\00", align 1
@288 = private unnamed_addr constant [7 x i8] c"INCRBY\00", align 1
@289 = private unnamed_addr constant [14 x i8] c"key increment\00", align 1
@290 = private unnamed_addr constant [57 x i8] c"Increment the integer value of a key by the given amount\00", align 1
@291 = private unnamed_addr constant [12 x i8] c"INCRBYFLOAT\00", align 1
@292 = private unnamed_addr constant [55 x i8] c"Increment the float value of a key by the given amount\00", align 1
@293 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@294 = private unnamed_addr constant [10 x i8] c"[section]\00", align 1
@295 = private unnamed_addr constant [48 x i8] c"Get information and statistics about the server\00", align 1
@296 = private unnamed_addr constant [5 x i8] c"KEYS\00", align 1
@297 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@298 = private unnamed_addr constant [41 x i8] c"Find all keys matching the given pattern\00", align 1
@299 = private unnamed_addr constant [9 x i8] c"LASTSAVE\00", align 1
@300 = private unnamed_addr constant [60 x i8] c"Get the UNIX time stamp of the last successful save to disk\00", align 1
@301 = private unnamed_addr constant [15 x i8] c"LATENCY DOCTOR\00", align 1
@302 = private unnamed_addr constant [49 x i8] c"Return a human readable latency analysis report.\00", align 1
@303 = private unnamed_addr constant [14 x i8] c"LATENCY GRAPH\00", align 1
@304 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@305 = private unnamed_addr constant [38 x i8] c"Return a latency graph for the event.\00", align 1
@306 = private unnamed_addr constant [13 x i8] c"LATENCY HELP\00", align 1
@307 = private unnamed_addr constant [51 x i8] c"Show helpful text about the different subcommands.\00", align 1
@308 = private unnamed_addr constant [16 x i8] c"LATENCY HISTORY\00", align 1
@309 = private unnamed_addr constant [48 x i8] c"Return timestamp-latency samples for the event.\00", align 1
@310 = private unnamed_addr constant [15 x i8] c"LATENCY LATEST\00", align 1
@311 = private unnamed_addr constant [50 x i8] c"Return the latest latency samples for all events.\00", align 1
@312 = private unnamed_addr constant [14 x i8] c"LATENCY RESET\00", align 1
@313 = private unnamed_addr constant [8 x i8] c"[event]\00", align 1
@314 = private unnamed_addr constant [43 x i8] c"Reset latency data for one or more events.\00", align 1
@315 = private unnamed_addr constant [7 x i8] c"LINDEX\00", align 1
@316 = private unnamed_addr constant [10 x i8] c"key index\00", align 1
@317 = private unnamed_addr constant [40 x i8] c"Get an element from a list by its index\00", align 1
@318 = private unnamed_addr constant [8 x i8] c"LINSERT\00", align 1
@319 = private unnamed_addr constant [31 x i8] c"key BEFORE|AFTER pivot element\00", align 1
@320 = private unnamed_addr constant [60 x i8] c"Insert an element before or after another element in a list\00", align 1
@321 = private unnamed_addr constant [5 x i8] c"LLEN\00", align 1
@322 = private unnamed_addr constant [25 x i8] c"Get the length of a list\00", align 1
@323 = private unnamed_addr constant [7 x i8] c"LOLWUT\00", align 1
@324 = private unnamed_addr constant [18 x i8] c"[VERSION version]\00", align 1
@325 = private unnamed_addr constant [48 x i8] c"Display some computer art and the Redis version\00", align 1
@326 = private unnamed_addr constant [5 x i8] c"LPOP\00", align 1
@327 = private unnamed_addr constant [43 x i8] c"Remove and get the first element in a list\00", align 1
@328 = private unnamed_addr constant [6 x i8] c"LPUSH\00", align 1
@329 = private unnamed_addr constant [26 x i8] c"key element [element ...]\00", align 1
@330 = private unnamed_addr constant [43 x i8] c"Prepend one or multiple elements to a list\00", align 1
@331 = private unnamed_addr constant [7 x i8] c"LPUSHX\00", align 1
@332 = private unnamed_addr constant [54 x i8] c"Prepend an element to a list, only if the list exists\00", align 1
@333 = private unnamed_addr constant [7 x i8] c"LRANGE\00", align 1
@334 = private unnamed_addr constant [15 x i8] c"key start stop\00", align 1
@335 = private unnamed_addr constant [36 x i8] c"Get a range of elements from a list\00", align 1
@336 = private unnamed_addr constant [5 x i8] c"LREM\00", align 1
@337 = private unnamed_addr constant [18 x i8] c"key count element\00", align 1
@338 = private unnamed_addr constant [28 x i8] c"Remove elements from a list\00", align 1
@339 = private unnamed_addr constant [5 x i8] c"LSET\00", align 1
@340 = private unnamed_addr constant [18 x i8] c"key index element\00", align 1
@341 = private unnamed_addr constant [51 x i8] c"Set the value of an element in a list by its index\00", align 1
@342 = private unnamed_addr constant [6 x i8] c"LTRIM\00", align 1
@343 = private unnamed_addr constant [35 x i8] c"Trim a list to the specified range\00", align 1
@344 = private unnamed_addr constant [14 x i8] c"MEMORY DOCTOR\00", align 1
@345 = private unnamed_addr constant [31 x i8] c"Outputs memory problems report\00", align 1
@346 = private unnamed_addr constant [6 x i8] c"4.0.0\00", align 1
@347 = private unnamed_addr constant [12 x i8] c"MEMORY HELP\00", align 1
@348 = private unnamed_addr constant [50 x i8] c"Show helpful text about the different subcommands\00", align 1
@349 = private unnamed_addr constant [20 x i8] c"MEMORY MALLOC-STATS\00", align 1
@350 = private unnamed_addr constant [30 x i8] c"Show allocator internal stats\00", align 1
@351 = private unnamed_addr constant [13 x i8] c"MEMORY PURGE\00", align 1
@352 = private unnamed_addr constant [36 x i8] c"Ask the allocator to release memory\00", align 1
@353 = private unnamed_addr constant [13 x i8] c"MEMORY STATS\00", align 1
@354 = private unnamed_addr constant [26 x i8] c"Show memory usage details\00", align 1
@355 = private unnamed_addr constant [13 x i8] c"MEMORY USAGE\00", align 1
@356 = private unnamed_addr constant [20 x i8] c"key [SAMPLES count]\00", align 1
@357 = private unnamed_addr constant [35 x i8] c"Estimate the memory usage of a key\00", align 1
@358 = private unnamed_addr constant [5 x i8] c"MGET\00", align 1
@359 = private unnamed_addr constant [37 x i8] c"Get the values of all the given keys\00", align 1
@360 = private unnamed_addr constant [8 x i8] c"MIGRATE\00", align 1
@361 = private unnamed_addr constant [82 x i8] c"host port key| destination-db timeout [COPY] [REPLACE] [AUTH password] [KEYS key]\00", align 1
@362 = private unnamed_addr constant [64 x i8] c"Atomically transfer a key from a Redis instance to another one.\00", align 1
@363 = private unnamed_addr constant [12 x i8] c"MODULE LIST\00", align 1
@364 = private unnamed_addr constant [38 x i8] c"List all modules loaded by the server\00", align 1
@365 = private unnamed_addr constant [12 x i8] c"MODULE LOAD\00", align 1
@366 = private unnamed_addr constant [11 x i8] c"path [arg]\00", align 1
@367 = private unnamed_addr constant [14 x i8] c"Load a module\00", align 1
@368 = private unnamed_addr constant [14 x i8] c"MODULE UNLOAD\00", align 1
@369 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@370 = private unnamed_addr constant [16 x i8] c"Unload a module\00", align 1
@371 = private unnamed_addr constant [8 x i8] c"MONITOR\00", align 1
@372 = private unnamed_addr constant [60 x i8] c"Listen for all requests received by the server in real time\00", align 1
@373 = private unnamed_addr constant [5 x i8] c"MOVE\00", align 1
@374 = private unnamed_addr constant [7 x i8] c"key db\00", align 1
@375 = private unnamed_addr constant [31 x i8] c"Move a key to another database\00", align 1
@376 = private unnamed_addr constant [5 x i8] c"MSET\00", align 1
@377 = private unnamed_addr constant [26 x i8] c"key value [key value ...]\00", align 1
@378 = private unnamed_addr constant [37 x i8] c"Set multiple keys to multiple values\00", align 1
@379 = private unnamed_addr constant [6 x i8] c"1.0.1\00", align 1
@380 = private unnamed_addr constant [7 x i8] c"MSETNX\00", align 1
@381 = private unnamed_addr constant [69 x i8] c"Set multiple keys to multiple values, only if none of the keys exist\00", align 1
@382 = private unnamed_addr constant [6 x i8] c"MULTI\00", align 1
@383 = private unnamed_addr constant [38 x i8] c"Mark the start of a transaction block\00", align 1
@384 = private unnamed_addr constant [7 x i8] c"OBJECT\00", align 1
@385 = private unnamed_addr constant [39 x i8] c"subcommand [arguments [arguments ...]]\00", align 1
@386 = private unnamed_addr constant [39 x i8] c"Inspect the internals of Redis objects\00", align 1
@387 = private unnamed_addr constant [6 x i8] c"2.2.3\00", align 1
@388 = private unnamed_addr constant [8 x i8] c"PERSIST\00", align 1
@389 = private unnamed_addr constant [33 x i8] c"Remove the expiration from a key\00", align 1
@390 = private unnamed_addr constant [8 x i8] c"PEXPIRE\00", align 1
@391 = private unnamed_addr constant [17 x i8] c"key milliseconds\00", align 1
@392 = private unnamed_addr constant [41 x i8] c"Set a key's time to live in milliseconds\00", align 1
@393 = private unnamed_addr constant [10 x i8] c"PEXPIREAT\00", align 1
@394 = private unnamed_addr constant [27 x i8] c"key milliseconds-timestamp\00", align 1
@395 = private unnamed_addr constant [75 x i8] c"Set the expiration for a key as a UNIX timestamp specified in milliseconds\00", align 1
@396 = private unnamed_addr constant [6 x i8] c"PFADD\00", align 1
@397 = private unnamed_addr constant [58 x i8] c"Adds the specified elements to the specified HyperLogLog.\00", align 1
@398 = private unnamed_addr constant [6 x i8] c"2.8.9\00", align 1
@399 = private unnamed_addr constant [8 x i8] c"PFCOUNT\00", align 1
@400 = private unnamed_addr constant [89 x i8] c"Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).\00", align 1
@401 = private unnamed_addr constant [8 x i8] c"PFMERGE\00", align 1
@402 = private unnamed_addr constant [34 x i8] c"destkey sourcekey [sourcekey ...]\00", align 1
@403 = private unnamed_addr constant [50 x i8] c"Merge N different HyperLogLogs into a single one.\00", align 1
@404 = private unnamed_addr constant [5 x i8] c"PING\00", align 1
@405 = private unnamed_addr constant [10 x i8] c"[message]\00", align 1
@406 = private unnamed_addr constant [16 x i8] c"Ping the server\00", align 1
@407 = private unnamed_addr constant [7 x i8] c"PSETEX\00", align 1
@408 = private unnamed_addr constant [23 x i8] c"key milliseconds value\00", align 1
@409 = private unnamed_addr constant [54 x i8] c"Set the value and expiration in milliseconds of a key\00", align 1
@410 = private unnamed_addr constant [11 x i8] c"PSUBSCRIBE\00", align 1
@411 = private unnamed_addr constant [22 x i8] c"pattern [pattern ...]\00", align 1
@412 = private unnamed_addr constant [70 x i8] c"Listen for messages published to channels matching the given patterns\00", align 1
@413 = private unnamed_addr constant [6 x i8] c"PSYNC\00", align 1
@414 = private unnamed_addr constant [21 x i8] c"replicationid offset\00", align 1
@415 = private unnamed_addr constant [38 x i8] c"Internal command used for replication\00", align 1
@416 = private unnamed_addr constant [5 x i8] c"PTTL\00", align 1
@417 = private unnamed_addr constant [47 x i8] c"Get the time to live for a key in milliseconds\00", align 1
@418 = private unnamed_addr constant [8 x i8] c"PUBLISH\00", align 1
@419 = private unnamed_addr constant [16 x i8] c"channel message\00", align 1
@420 = private unnamed_addr constant [28 x i8] c"Post a message to a channel\00", align 1
@421 = private unnamed_addr constant [7 x i8] c"PUBSUB\00", align 1
@422 = private unnamed_addr constant [37 x i8] c"subcommand [argument [argument ...]]\00", align 1
@423 = private unnamed_addr constant [43 x i8] c"Inspect the state of the Pub/Sub subsystem\00", align 1
@424 = private unnamed_addr constant [13 x i8] c"PUNSUBSCRIBE\00", align 1
@425 = private unnamed_addr constant [24 x i8] c"[pattern [pattern ...]]\00", align 1
@426 = private unnamed_addr constant [75 x i8] c"Stop listening for messages posted to channels matching the given patterns\00", align 1
@427 = private unnamed_addr constant [5 x i8] c"QUIT\00", align 1
@428 = private unnamed_addr constant [21 x i8] c"Close the connection\00", align 1
@429 = private unnamed_addr constant [10 x i8] c"RANDOMKEY\00", align 1
@430 = private unnamed_addr constant [38 x i8] c"Return a random key from the keyspace\00", align 1
@431 = private unnamed_addr constant [9 x i8] c"READONLY\00", align 1
@432 = private unnamed_addr constant [64 x i8] c"Enables read queries for a connection to a cluster replica node\00", align 1
@433 = private unnamed_addr constant [10 x i8] c"READWRITE\00", align 1
@434 = private unnamed_addr constant [65 x i8] c"Disables read queries for a connection to a cluster replica node\00", align 1
@435 = private unnamed_addr constant [7 x i8] c"RENAME\00", align 1
@436 = private unnamed_addr constant [11 x i8] c"key newkey\00", align 1
@437 = private unnamed_addr constant [13 x i8] c"Rename a key\00", align 1
@438 = private unnamed_addr constant [9 x i8] c"RENAMENX\00", align 1
@439 = private unnamed_addr constant [49 x i8] c"Rename a key, only if the new key does not exist\00", align 1
@440 = private unnamed_addr constant [10 x i8] c"REPLICAOF\00", align 1
@441 = private unnamed_addr constant [10 x i8] c"host port\00", align 1
@442 = private unnamed_addr constant [72 x i8] c"Make the server a replica of another instance, or promote it as master.\00", align 1
@443 = private unnamed_addr constant [8 x i8] c"RESTORE\00", align 1
@444 = private unnamed_addr constant [80 x i8] c"key ttl serialized-value [REPLACE] [ABSTTL] [IDLETIME seconds] [FREQ frequency]\00", align 1
@445 = private unnamed_addr constant [82 x i8] c"Create a key using the provided serialized value, previously obtained using DUMP.\00", align 1
@446 = private unnamed_addr constant [5 x i8] c"ROLE\00", align 1
@447 = private unnamed_addr constant [62 x i8] c"Return the role of the instance in the context of replication\00", align 1
@448 = private unnamed_addr constant [7 x i8] c"2.8.12\00", align 1
@449 = private unnamed_addr constant [5 x i8] c"RPOP\00", align 1
@450 = private unnamed_addr constant [42 x i8] c"Remove and get the last element in a list\00", align 1
@451 = private unnamed_addr constant [10 x i8] c"RPOPLPUSH\00", align 1
@452 = private unnamed_addr constant [19 x i8] c"source destination\00", align 1
@453 = private unnamed_addr constant [76 x i8] c"Remove the last element in a list, prepend it to another list and return it\00", align 1
@454 = private unnamed_addr constant [6 x i8] c"RPUSH\00", align 1
@455 = private unnamed_addr constant [42 x i8] c"Append one or multiple elements to a list\00", align 1
@456 = private unnamed_addr constant [7 x i8] c"RPUSHX\00", align 1
@457 = private unnamed_addr constant [53 x i8] c"Append an element to a list, only if the list exists\00", align 1
@458 = private unnamed_addr constant [5 x i8] c"SADD\00", align 1
@459 = private unnamed_addr constant [33 x i8] c"Add one or more members to a set\00", align 1
@460 = private unnamed_addr constant [5 x i8] c"SAVE\00", align 1
@461 = private unnamed_addr constant [39 x i8] c"Synchronously save the dataset to disk\00", align 1
@462 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@463 = private unnamed_addr constant [49 x i8] c"cursor [MATCH pattern] [COUNT count] [TYPE type]\00", align 1
@464 = private unnamed_addr constant [37 x i8] c"Incrementally iterate the keys space\00", align 1
@465 = private unnamed_addr constant [6 x i8] c"SCARD\00", align 1
@466 = private unnamed_addr constant [35 x i8] c"Get the number of members in a set\00", align 1
@467 = private unnamed_addr constant [13 x i8] c"SCRIPT DEBUG\00", align 1
@468 = private unnamed_addr constant [12 x i8] c"YES|SYNC|NO\00", align 1
@469 = private unnamed_addr constant [41 x i8] c"Set the debug mode for executed scripts.\00", align 1
@470 = private unnamed_addr constant [14 x i8] c"SCRIPT EXISTS\00", align 1
@471 = private unnamed_addr constant [16 x i8] c"sha1 [sha1 ...]\00", align 1
@472 = private unnamed_addr constant [48 x i8] c"Check existence of scripts in the script cache.\00", align 1
@473 = private unnamed_addr constant [13 x i8] c"SCRIPT FLUSH\00", align 1
@474 = private unnamed_addr constant [46 x i8] c"Remove all the scripts from the script cache.\00", align 1
@475 = private unnamed_addr constant [12 x i8] c"SCRIPT KILL\00", align 1
@476 = private unnamed_addr constant [40 x i8] c"Kill the script currently in execution.\00", align 1
@477 = private unnamed_addr constant [12 x i8] c"SCRIPT LOAD\00", align 1
@478 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@479 = private unnamed_addr constant [53 x i8] c"Load the specified Lua script into the script cache.\00", align 1
@480 = private unnamed_addr constant [6 x i8] c"SDIFF\00", align 1
@481 = private unnamed_addr constant [23 x i8] c"Subtract multiple sets\00", align 1
@482 = private unnamed_addr constant [11 x i8] c"SDIFFSTORE\00", align 1
@483 = private unnamed_addr constant [26 x i8] c"destination key [key ...]\00", align 1
@484 = private unnamed_addr constant [60 x i8] c"Subtract multiple sets and store the resulting set in a key\00", align 1
@485 = private unnamed_addr constant [7 x i8] c"SELECT\00", align 1
@486 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@487 = private unnamed_addr constant [56 x i8] c"Change the selected database for the current connection\00", align 1
@488 = private unnamed_addr constant [4 x i8] c"SET\00", align 1
@489 = private unnamed_addr constant [57 x i8] c"key value [EX seconds|PX milliseconds] [NX|XX] [KEEPTTL]\00", align 1
@490 = private unnamed_addr constant [30 x i8] c"Set the string value of a key\00", align 1
@491 = private unnamed_addr constant [7 x i8] c"SETBIT\00", align 1
@492 = private unnamed_addr constant [17 x i8] c"key offset value\00", align 1
@493 = private unnamed_addr constant [67 x i8] c"Sets or clears the bit at offset in the string value stored at key\00", align 1
@494 = private unnamed_addr constant [6 x i8] c"SETEX\00", align 1
@495 = private unnamed_addr constant [18 x i8] c"key seconds value\00", align 1
@496 = private unnamed_addr constant [38 x i8] c"Set the value and expiration of a key\00", align 1
@497 = private unnamed_addr constant [6 x i8] c"SETNX\00", align 1
@498 = private unnamed_addr constant [55 x i8] c"Set the value of a key, only if the key does not exist\00", align 1
@499 = private unnamed_addr constant [9 x i8] c"SETRANGE\00", align 1
@500 = private unnamed_addr constant [67 x i8] c"Overwrite part of a string at key starting at the specified offset\00", align 1
@501 = private unnamed_addr constant [9 x i8] c"SHUTDOWN\00", align 1
@502 = private unnamed_addr constant [14 x i8] c"[NOSAVE|SAVE]\00", align 1
@503 = private unnamed_addr constant [69 x i8] c"Synchronously save the dataset to disk and then shut down the server\00", align 1
@504 = private unnamed_addr constant [7 x i8] c"SINTER\00", align 1
@505 = private unnamed_addr constant [24 x i8] c"Intersect multiple sets\00", align 1
@506 = private unnamed_addr constant [12 x i8] c"SINTERSTORE\00", align 1
@507 = private unnamed_addr constant [61 x i8] c"Intersect multiple sets and store the resulting set in a key\00", align 1
@508 = private unnamed_addr constant [10 x i8] c"SISMEMBER\00", align 1
@509 = private unnamed_addr constant [11 x i8] c"key member\00", align 1
@510 = private unnamed_addr constant [48 x i8] c"Determine if a given value is a member of a set\00", align 1
@511 = private unnamed_addr constant [8 x i8] c"SLAVEOF\00", align 1
@512 = private unnamed_addr constant [129 x i8] c"Make the server a replica of another instance, or promote it as master. Deprecated starting with Redis 5. Use REPLICAOF instead.\00", align 1
@513 = private unnamed_addr constant [8 x i8] c"SLOWLOG\00", align 1
@514 = private unnamed_addr constant [22 x i8] c"subcommand [argument]\00", align 1
@515 = private unnamed_addr constant [35 x i8] c"Manages the Redis slow queries log\00", align 1
@516 = private unnamed_addr constant [7 x i8] c"2.2.12\00", align 1
@517 = private unnamed_addr constant [9 x i8] c"SMEMBERS\00", align 1
@518 = private unnamed_addr constant [29 x i8] c"Get all the members in a set\00", align 1
@519 = private unnamed_addr constant [6 x i8] c"SMOVE\00", align 1
@520 = private unnamed_addr constant [26 x i8] c"source destination member\00", align 1
@521 = private unnamed_addr constant [38 x i8] c"Move a member from one set to another\00", align 1
@522 = private unnamed_addr constant [5 x i8] c"SORT\00", align 1
@523 = private unnamed_addr constant [109 x i8] c"key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA] [STORE destination]\00", align 1
@524 = private unnamed_addr constant [47 x i8] c"Sort the elements in a list, set or sorted set\00", align 1
@525 = private unnamed_addr constant [5 x i8] c"SPOP\00", align 1
@526 = private unnamed_addr constant [12 x i8] c"key [count]\00", align 1
@527 = private unnamed_addr constant [60 x i8] c"Remove and return one or multiple random members from a set\00", align 1
@528 = private unnamed_addr constant [12 x i8] c"SRANDMEMBER\00", align 1
@529 = private unnamed_addr constant [46 x i8] c"Get one or multiple random members from a set\00", align 1
@530 = private unnamed_addr constant [5 x i8] c"SREM\00", align 1
@531 = private unnamed_addr constant [38 x i8] c"Remove one or more members from a set\00", align 1
@532 = private unnamed_addr constant [6 x i8] c"SSCAN\00", align 1
@533 = private unnamed_addr constant [35 x i8] c"Incrementally iterate Set elements\00", align 1
@534 = private unnamed_addr constant [8 x i8] c"STRALGO\00", align 1
@535 = private unnamed_addr constant [56 x i8] c"LCS algo-specific-argument [algo-specific-argument ...]\00", align 1
@536 = private unnamed_addr constant [47 x i8] c"Run algorithms (currently LCS) against strings\00", align 1
@537 = private unnamed_addr constant [7 x i8] c"STRLEN\00", align 1
@538 = private unnamed_addr constant [44 x i8] c"Get the length of the value stored in a key\00", align 1
@539 = private unnamed_addr constant [10 x i8] c"SUBSCRIBE\00", align 1
@540 = private unnamed_addr constant [22 x i8] c"channel [channel ...]\00", align 1
@541 = private unnamed_addr constant [52 x i8] c"Listen for messages published to the given channels\00", align 1
@542 = private unnamed_addr constant [7 x i8] c"SUNION\00", align 1
@543 = private unnamed_addr constant [18 x i8] c"Add multiple sets\00", align 1
@544 = private unnamed_addr constant [12 x i8] c"SUNIONSTORE\00", align 1
@545 = private unnamed_addr constant [55 x i8] c"Add multiple sets and store the resulting set in a key\00", align 1
@546 = private unnamed_addr constant [7 x i8] c"SWAPDB\00", align 1
@547 = private unnamed_addr constant [14 x i8] c"index1 index2\00", align 1
@548 = private unnamed_addr constant [26 x i8] c"Swaps two Redis databases\00", align 1
@549 = private unnamed_addr constant [5 x i8] c"SYNC\00", align 1
@550 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@551 = private unnamed_addr constant [31 x i8] c"Return the current server time\00", align 1
@552 = private unnamed_addr constant [6 x i8] c"TOUCH\00", align 1
@553 = private unnamed_addr constant [88 x i8] c"Alters the last access time of a key(s). Returns the number of existing keys specified.\00", align 1
@554 = private unnamed_addr constant [6 x i8] c"3.2.1\00", align 1
@555 = private unnamed_addr constant [4 x i8] c"TTL\00", align 1
@556 = private unnamed_addr constant [31 x i8] c"Get the time to live for a key\00", align 1
@557 = private unnamed_addr constant [5 x i8] c"TYPE\00", align 1
@558 = private unnamed_addr constant [33 x i8] c"Determine the type stored at key\00", align 1
@559 = private unnamed_addr constant [7 x i8] c"UNLINK\00", align 1
@560 = private unnamed_addr constant [94 x i8] c"Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.\00", align 1
@561 = private unnamed_addr constant [12 x i8] c"UNSUBSCRIBE\00", align 1
@562 = private unnamed_addr constant [24 x i8] c"[channel [channel ...]]\00", align 1
@563 = private unnamed_addr constant [57 x i8] c"Stop listening for messages posted to the given channels\00", align 1
@564 = private unnamed_addr constant [8 x i8] c"UNWATCH\00", align 1
@565 = private unnamed_addr constant [30 x i8] c"Forget about all watched keys\00", align 1
@566 = private unnamed_addr constant [5 x i8] c"WAIT\00", align 1
@567 = private unnamed_addr constant [20 x i8] c"numreplicas timeout\00", align 1
@568 = private unnamed_addr constant [109 x i8] c"Wait for the synchronous replication of all the write commands sent in the context of the current connection\00", align 1
@569 = private unnamed_addr constant [6 x i8] c"WATCH\00", align 1
@570 = private unnamed_addr constant [68 x i8] c"Watch the given keys to determine execution of the MULTI/EXEC block\00", align 1
@571 = private unnamed_addr constant [5 x i8] c"XACK\00", align 1
@572 = private unnamed_addr constant [22 x i8] c"key group ID [ID ...]\00", align 1
@573 = private unnamed_addr constant [268 x i8] c"Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL.\00", align 1
@574 = private unnamed_addr constant [5 x i8] c"XADD\00", align 1
@575 = private unnamed_addr constant [37 x i8] c"key ID field value [field value ...]\00", align 1
@576 = private unnamed_addr constant [32 x i8] c"Appends a new entry to a stream\00", align 1
@577 = private unnamed_addr constant [7 x i8] c"XCLAIM\00", align 1
@578 = private unnamed_addr constant [111 x i8] c"key group consumer min-idle-time ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT count] [force] [justid]\00", align 1
@579 = private unnamed_addr constant [125 x i8] c"Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer.\00", align 1
@580 = private unnamed_addr constant [5 x i8] c"XDEL\00", align 1
@581 = private unnamed_addr constant [16 x i8] c"key ID [ID ...]\00", align 1
@582 = private unnamed_addr constant [179 x i8] c"Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist.\00", align 1
@583 = private unnamed_addr constant [7 x i8] c"XGROUP\00", align 1
@584 = private unnamed_addr constant [126 x i8] c"[CREATE key groupname id-or-$] [SETID key groupname id-or-$] [DESTROY key groupname] [DELCONSUMER key groupname consumername]\00", align 1
@585 = private unnamed_addr constant [45 x i8] c"Create, destroy, and manage consumer groups.\00", align 1
@586 = private unnamed_addr constant [6 x i8] c"XINFO\00", align 1
@587 = private unnamed_addr constant [59 x i8] c"[CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]\00", align 1
@588 = private unnamed_addr constant [47 x i8] c"Get information on streams and consumer groups\00", align 1
@589 = private unnamed_addr constant [5 x i8] c"XLEN\00", align 1
@590 = private unnamed_addr constant [41 x i8] c"Return the number of entires in a stream\00", align 1
@591 = private unnamed_addr constant [9 x i8] c"XPENDING\00", align 1
@592 = private unnamed_addr constant [39 x i8] c"key group [start end count] [consumer]\00", align 1
@593 = private unnamed_addr constant [132 x i8] c"Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.\00", align 1
@594 = private unnamed_addr constant [7 x i8] c"XRANGE\00", align 1
@595 = private unnamed_addr constant [28 x i8] c"key start end [COUNT count]\00", align 1
@596 = private unnamed_addr constant [85 x i8] c"Return a range of elements in a stream, with IDs matching the specified IDs interval\00", align 1
@597 = private unnamed_addr constant [6 x i8] c"XREAD\00", align 1
@598 = private unnamed_addr constant [69 x i8] c"[COUNT count] [BLOCK milliseconds] STREAMS key [key ...] id [id ...]\00", align 1
@599 = private unnamed_addr constant [130 x i8] c"Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block.\00", align 1
@600 = private unnamed_addr constant [11 x i8] c"XREADGROUP\00", align 1
@601 = private unnamed_addr constant [98 x i8] c"GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] ID [ID ...]\00", align 1
@602 = private unnamed_addr constant [135 x i8] c"Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block.\00", align 1
@603 = private unnamed_addr constant [10 x i8] c"XREVRANGE\00", align 1
@604 = private unnamed_addr constant [28 x i8] c"key end start [COUNT count]\00", align 1
@605 = private unnamed_addr constant [152 x i8] c"Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE\00", align 1
@606 = private unnamed_addr constant [6 x i8] c"XTRIM\00", align 1
@607 = private unnamed_addr constant [21 x i8] c"key MAXLEN [~] count\00", align 1
@608 = private unnamed_addr constant [68 x i8] c"Trims the stream to (approximately if '~' is passed) a certain size\00", align 1
@609 = private unnamed_addr constant [5 x i8] c"ZADD\00", align 1
@610 = private unnamed_addr constant [56 x i8] c"key [NX|XX] [CH] [INCR] score member [score member ...]\00", align 1
@611 = private unnamed_addr constant [82 x i8] c"Add one or more members to a sorted set, or update its score if it already exists\00", align 1
@612 = private unnamed_addr constant [6 x i8] c"ZCARD\00", align 1
@613 = private unnamed_addr constant [42 x i8] c"Get the number of members in a sorted set\00", align 1
@614 = private unnamed_addr constant [7 x i8] c"ZCOUNT\00", align 1
@615 = private unnamed_addr constant [12 x i8] c"key min max\00", align 1
@616 = private unnamed_addr constant [70 x i8] c"Count the members in a sorted set with scores within the given values\00", align 1
@617 = private unnamed_addr constant [8 x i8] c"ZINCRBY\00", align 1
@618 = private unnamed_addr constant [21 x i8] c"key increment member\00", align 1
@619 = private unnamed_addr constant [48 x i8] c"Increment the score of a member in a sorted set\00", align 1
@620 = private unnamed_addr constant [12 x i8] c"ZINTERSTORE\00", align 1
@621 = private unnamed_addr constant [75 x i8] c"destination numkeys key [key ...] [WEIGHTS weight] [AGGREGATE SUM|MIN|MAX]\00", align 1
@622 = private unnamed_addr constant [79 x i8] c"Intersect multiple sorted sets and store the resulting sorted set in a new key\00", align 1
@623 = private unnamed_addr constant [10 x i8] c"ZLEXCOUNT\00", align 1
@624 = private unnamed_addr constant [82 x i8] c"Count the number of members in a sorted set between a given lexicographical range\00", align 1
@625 = private unnamed_addr constant [8 x i8] c"ZPOPMAX\00", align 1
@626 = private unnamed_addr constant [66 x i8] c"Remove and return members with the highest scores in a sorted set\00", align 1
@627 = private unnamed_addr constant [8 x i8] c"ZPOPMIN\00", align 1
@628 = private unnamed_addr constant [65 x i8] c"Remove and return members with the lowest scores in a sorted set\00", align 1
@629 = private unnamed_addr constant [7 x i8] c"ZRANGE\00", align 1
@630 = private unnamed_addr constant [28 x i8] c"key start stop [WITHSCORES]\00", align 1
@631 = private unnamed_addr constant [52 x i8] c"Return a range of members in a sorted set, by index\00", align 1
@632 = private unnamed_addr constant [12 x i8] c"ZRANGEBYLEX\00", align 1
@633 = private unnamed_addr constant [33 x i8] c"key min max [LIMIT offset count]\00", align 1
@634 = private unnamed_addr constant [68 x i8] c"Return a range of members in a sorted set, by lexicographical range\00", align 1
@635 = private unnamed_addr constant [14 x i8] c"ZRANGEBYSCORE\00", align 1
@636 = private unnamed_addr constant [46 x i8] c"key min max [WITHSCORES] [LIMIT offset count]\00", align 1
@637 = private unnamed_addr constant [52 x i8] c"Return a range of members in a sorted set, by score\00", align 1
@638 = private unnamed_addr constant [6 x i8] c"1.0.5\00", align 1
@639 = private unnamed_addr constant [6 x i8] c"ZRANK\00", align 1
@640 = private unnamed_addr constant [48 x i8] c"Determine the index of a member in a sorted set\00", align 1
@641 = private unnamed_addr constant [5 x i8] c"ZREM\00", align 1
@642 = private unnamed_addr constant [45 x i8] c"Remove one or more members from a sorted set\00", align 1
@643 = private unnamed_addr constant [15 x i8] c"ZREMRANGEBYLEX\00", align 1
@644 = private unnamed_addr constant [75 x i8] c"Remove all members in a sorted set between the given lexicographical range\00", align 1
@645 = private unnamed_addr constant [16 x i8] c"ZREMRANGEBYRANK\00", align 1
@646 = private unnamed_addr constant [60 x i8] c"Remove all members in a sorted set within the given indexes\00", align 1
@647 = private unnamed_addr constant [17 x i8] c"ZREMRANGEBYSCORE\00", align 1
@648 = private unnamed_addr constant [59 x i8] c"Remove all members in a sorted set within the given scores\00", align 1
@649 = private unnamed_addr constant [10 x i8] c"ZREVRANGE\00", align 1
@650 = private unnamed_addr constant [90 x i8] c"Return a range of members in a sorted set, by index, with scores ordered from high to low\00", align 1
@651 = private unnamed_addr constant [15 x i8] c"ZREVRANGEBYLEX\00", align 1
@652 = private unnamed_addr constant [33 x i8] c"key max min [LIMIT offset count]\00", align 1
@653 = private unnamed_addr constant [107 x i8] c"Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.\00", align 1
@654 = private unnamed_addr constant [17 x i8] c"ZREVRANGEBYSCORE\00", align 1
@655 = private unnamed_addr constant [46 x i8] c"key max min [WITHSCORES] [LIMIT offset count]\00", align 1
@656 = private unnamed_addr constant [90 x i8] c"Return a range of members in a sorted set, by score, with scores ordered from high to low\00", align 1
@657 = private unnamed_addr constant [9 x i8] c"ZREVRANK\00", align 1
@658 = private unnamed_addr constant [86 x i8] c"Determine the index of a member in a sorted set, with scores ordered from high to low\00", align 1
@659 = private unnamed_addr constant [6 x i8] c"ZSCAN\00", align 1
@660 = private unnamed_addr constant [65 x i8] c"Incrementally iterate sorted sets elements and associated scores\00", align 1
@661 = private unnamed_addr constant [7 x i8] c"ZSCORE\00", align 1
@662 = private unnamed_addr constant [63 x i8] c"Get the score associated with the given member in a sorted set\00", align 1
@663 = private unnamed_addr constant [12 x i8] c"ZUNIONSTORE\00", align 1
@664 = private unnamed_addr constant [73 x i8] c"Add multiple sorted sets and store the resulting sorted set in a new key\00", align 1
@commandHelp = dso_local global [256 x %0] [%0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @2, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @6, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @9, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @12, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @14, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @17, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @19, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @22, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @24, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @26, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @29, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @33, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @36, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @39, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @42, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @46, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @50, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @53, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @54, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @57, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @59, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* @62, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @65, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @68, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @71, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @73, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @74, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @76, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @78, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @81, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @82, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @85, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @82, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @86, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @88, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @89, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @92, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @93, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @94, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @96, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @74, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @97, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @98, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @99, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @100, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @101, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @102, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @103, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @105, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @107, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @108, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @111, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @113, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @114, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @115, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @116, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @117, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @118, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @119, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @120, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @121, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @122, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @123, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @124, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @125, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @126, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @128, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @131, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @133, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @134, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @135, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @136, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @138, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @140, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @141, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @142, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @143, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @144, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @145, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @146, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @147, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @148, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @149, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @150, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @151, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @152, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @153, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @140, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @155, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @156, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @158, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @160, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @161, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @162, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @163, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @164, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @165, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @166, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @167, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @168, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @169, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @170, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @171, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @172, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @173, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @175, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @176, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @177, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @179, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @180, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @181, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @182, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @183, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @184, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @185, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @186, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @187, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @188, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @189, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @193, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @194, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @195, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @196, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @197, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @198, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @199, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @200, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @201, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @202, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @203, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @201, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @205, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @207, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @208, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @209, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @210, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @211, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @212, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @213, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @214, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @216, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @217, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @218, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @216, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @219, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @220, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @221, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @222, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @223, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @224, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @225, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @226, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @228, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @229, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @230, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @231, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @232, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @233, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @234, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @235, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @236, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @237, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @238, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @239, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @240, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @241, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @242, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @243, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @244, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @82, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @245, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @246, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @247, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @248, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @249, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @250, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @251, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @252, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @255, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @256, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @257, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @258, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @259, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @260, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @261, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @262, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @263, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @261, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @264, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @265, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @266, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @267, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @268, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @269, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @248, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @270, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @271, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @272, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @273, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @274, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @276, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @277, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @272, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @278, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @279, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @280, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @281, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @282, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @283, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @284, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @285, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @287, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @288, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @289, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @290, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @291, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @289, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @292, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @294, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @295, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @297, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @298, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @299, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @300, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @301, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @302, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @303, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @304, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @305, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @307, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @304, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @309, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @310, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @311, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @313, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @314, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @315, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @316, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @317, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @318, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @319, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @320, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @321, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @322, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @323, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @324, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @325, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @326, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @327, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @328, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @330, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @331, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @332, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @333, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @335, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @337, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @338, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @339, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @340, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @341, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @343, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @344, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @345, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @347, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @348, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @349, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @350, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @351, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @352, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @353, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @354, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @355, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @356, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @357, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @358, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @359, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @360, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @361, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @362, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @363, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @364, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @366, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @367, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @368, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @369, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @370, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @371, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @372, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @373, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @374, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @375, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @376, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @377, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @378, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @379, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @380, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @377, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @381, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @379, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @382, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @383, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @384, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @385, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @386, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @387, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @388, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @389, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @390, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @391, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @392, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @393, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @394, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @395, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @396, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @397, i32 0, i32 0), i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @399, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @400, i32 0, i32 0), i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @401, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @402, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @403, i32 0, i32 0), i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @405, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @406, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @407, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @408, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @409, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @410, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @411, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @412, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @413, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @414, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @415, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @416, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @417, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @418, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @419, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @420, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @421, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @422, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @423, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @424, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @425, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @426, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @427, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @428, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @429, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @430, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @431, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @432, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @433, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @434, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @435, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @436, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @437, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @438, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @436, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @439, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @440, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @441, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @442, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @443, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @444, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @445, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @446, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @447, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @448, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @449, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @450, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @451, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @452, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @453, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @454, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @455, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @456, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @457, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @458, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @459, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @460, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @461, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @462, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @463, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @464, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @465, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @466, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @467, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @468, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @469, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @470, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @471, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @472, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @473, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @474, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @475, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @476, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @477, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @478, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @479, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @480, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @481, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @482, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @483, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @484, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @486, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @487, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @488, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @489, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @490, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @491, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @492, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @493, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @494, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @495, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @496, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @497, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @498, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @499, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @492, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @500, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @501, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @502, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @503, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @504, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @505, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @506, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @483, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @507, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @510, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @511, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @441, i32 0, i32 0), i8* getelementptr inbounds ([129 x i8], [129 x i8]* @512, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @513, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @514, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @515, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @516, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @517, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @518, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @519, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @520, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @521, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @522, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @523, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @524, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @525, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @527, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @528, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @529, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @530, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @531, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @532, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @533, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @534, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @535, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @536, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @537, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @538, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @539, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @540, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @541, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @542, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @543, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @544, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @483, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @545, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @546, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @547, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @548, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @549, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @415, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @550, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @551, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @552, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @553, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @554, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @555, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @556, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @557, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @558, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @559, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @560, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @561, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @562, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @563, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @564, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @565, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @566, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @567, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @568, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @569, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @570, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @571, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @572, i32 0, i32 0), i8* getelementptr inbounds ([268 x i8], [268 x i8]* @573, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @574, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @575, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @576, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @577, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @578, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @579, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @580, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @581, i32 0, i32 0), i8* getelementptr inbounds ([179 x i8], [179 x i8]* @582, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @583, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @584, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @585, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @586, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @587, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @588, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @589, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @590, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @591, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @592, i32 0, i32 0), i8* getelementptr inbounds ([132 x i8], [132 x i8]* @593, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @594, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @595, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @596, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @597, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @598, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @599, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @600, i32 0, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @601, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @602, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @603, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @604, i32 0, i32 0), i8* getelementptr inbounds ([152 x i8], [152 x i8]* @605, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @606, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @607, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @608, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @609, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @610, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @611, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @613, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @614, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @616, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @617, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @618, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @619, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @620, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @621, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @622, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @623, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @624, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @625, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @626, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @627, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @628, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @629, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @630, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @631, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @632, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @633, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @634, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @635, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @636, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @637, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @638, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @639, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @640, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @641, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @642, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @643, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @644, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @645, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @646, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @647, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @648, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @649, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @630, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @650, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @651, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @652, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @653, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @654, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @655, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @656, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @657, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @658, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @659, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @660, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @661, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @662, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @663, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @621, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @664, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }], align 16
@spectrum_palette_color_size = dso_local local_unnamed_addr global i32 19, align 4
@spectrum_palette_color = dso_local global [19 x i32] [i32 0, i32 233, i32 234, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 144, i32 143, i32 142, i32 184, i32 226, i32 214, i32 208, i32 202, i32 196], align 16
@spectrum_palette_mono_size = dso_local local_unnamed_addr global i32 13, align 4
@spectrum_palette_mono = dso_local global [13 x i32] [i32 0, i32 233, i32 234, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 249, i32 251, i32 253], align 16
@stderr = external dso_local local_unnamed_addr global %1*, align 8
@665 = private unnamed_addr constant [25 x i8] c"=== ASSERTION FAILED ===\00", align 1
@666 = private unnamed_addr constant [27 x i8] c"==> %s:%d '%s' is not true\00", align 1
@667 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@668 = private unnamed_addr constant [6 x i8] c"xterm\00", align 1
@669 = private unnamed_addr constant [5 x i8] c"bold\00", align 1
@670 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@671 = private unnamed_addr constant [6 x i8] c"green\00", align 1
@672 = private unnamed_addr constant [7 x i8] c"yellow\00", align 1
@673 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@674 = private unnamed_addr constant [8 x i8] c"magenta\00", align 1
@675 = private unnamed_addr constant [5 x i8] c"cyan\00", align 1
@676 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@677 = private unnamed_addr constant [12 x i8] c"\1B[%i;%i;49m\00", align 1
@678 = private unnamed_addr constant [8 x i8] c"<debug>\00", align 1
@679 = private unnamed_addr constant [8 x i8] c"<redis>\00", align 1
@680 = private unnamed_addr constant [8 x i8] c"<reply>\00", align 1
@681 = private unnamed_addr constant [8 x i8] c"<error>\00", align 1
@682 = private unnamed_addr constant [7 x i8] c"<hint>\00", align 1
@683 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@684 = private unnamed_addr constant [9 x i8] c"<retval>\00", align 1
@685 = private unnamed_addr constant [5 x i8] c":set\00", align 1
@686 = private unnamed_addr constant [6 x i8] c"hints\00", align 1
@687 = private unnamed_addr constant [8 x i8] c"nohints\00", align 1
@688 = private unnamed_addr constant [37 x i8] c"%sunknown redis-cli preference '%s'\0A\00", align 1
@689 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@690 = private unnamed_addr constant [14 x i8] c".redisclirc: \00", align 1
@691 = private unnamed_addr constant [43 x i8] c"%sunknown redis-cli internal command '%s'\0A\00", align 1
@692 = private unnamed_addr constant [16 x i8] c"REDISCLI_RCFILE\00", align 1
@693 = private unnamed_addr constant [12 x i8] c".redisclirc\00", align 1
@694 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@clusterManagerUncoveredSlots = dso_local local_unnamed_addr global %3* null, align 8
@695 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@696 = private unnamed_addr constant [28 x i8] c"host1:port1 ... hostN:portN\00", align 1
@697 = private unnamed_addr constant [15 x i8] c"replicas <arg>\00", align 1
@698 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@699 = private unnamed_addr constant [10 x i8] c"host:port\00", align 1
@700 = private unnamed_addr constant [23 x i8] c"search-multiple-owners\00", align 1
@701 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@702 = private unnamed_addr constant [4 x i8] c"fix\00", align 1
@703 = private unnamed_addr constant [52 x i8] c"search-multiple-owners,fix-with-unreachable-masters\00", align 1
@704 = private unnamed_addr constant [8 x i8] c"reshard\00", align 1
@705 = private unnamed_addr constant [73 x i8] c"from <arg>,to <arg>,slots <arg>,yes,timeout <arg>,pipeline <arg>,replace\00", align 1
@706 = private unnamed_addr constant [10 x i8] c"rebalance\00", align 1
@707 = private unnamed_addr constant [109 x i8] c"weight <node1=w1...nodeN=wN>,use-empty-masters,timeout <arg>,simulate,pipeline <arg>,threshold <arg>,replace\00", align 1
@708 = private unnamed_addr constant [9 x i8] c"add-node\00", align 1
@709 = private unnamed_addr constant [46 x i8] c"new_host:new_port existing_host:existing_port\00", align 1
@710 = private unnamed_addr constant [22 x i8] c"slave,master-id <arg>\00", align 1
@711 = private unnamed_addr constant [9 x i8] c"del-node\00", align 1
@712 = private unnamed_addr constant [18 x i8] c"host:port node_id\00", align 1
@713 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@714 = private unnamed_addr constant [33 x i8] c"host:port command arg arg .. arg\00", align 1
@715 = private unnamed_addr constant [12 x i8] c"set-timeout\00", align 1
@716 = private unnamed_addr constant [23 x i8] c"host:port milliseconds\00", align 1
@717 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@718 = private unnamed_addr constant [24 x i8] c"from <arg>,copy,replace\00", align 1
@719 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@720 = private unnamed_addr constant [27 x i8] c"host:port backup_directory\00", align 1
@721 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@clusterManagerCommands = dso_local local_unnamed_addr global [13 x %8] [%8 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @695, i32 0, i32 0), i32 (i32, i8**)* @1331, i32 -2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @696, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @697, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @698, i32 0, i32 0), i32 (i32, i8**)* @1332, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @699, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @700, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @701, i32 0, i32 0), i32 (i32, i8**)* @1333, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @699, i32 0, i32 0), i8* null }, %8 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @702, i32 0, i32 0), i32 (i32, i8**)* @1334, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @699, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @703, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @704, i32 0, i32 0), i32 (i32, i8**)* @1335, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @699, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @705, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @706, i32 0, i32 0), i32 (i32, i8**)* @1336, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @699, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @707, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @708, i32 0, i32 0), i32 (i32, i8**)* @1337, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @709, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @710, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @711, i32 0, i32 0), i32 (i32, i8**)* @1338, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @712, i32 0, i32 0), i8* null }, %8 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @713, i32 0, i32 0), i32 (i32, i8**)* @1339, i32 -2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @714, i32 0, i32 0), i8* null }, %8 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @715, i32 0, i32 0), i32 (i32, i8**)* @1340, i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @716, i32 0, i32 0), i8* null }, %8 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @717, i32 0, i32 0), i32 (i32, i8**)* @1341, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @699, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @718, i32 0, i32 0) }, %8 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @719, i32 0, i32 0), i32 (i32, i8**)* @1342, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @720, i32 0, i32 0), i8* null }, %8 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @721, i32 0, i32 0), i32 (i32, i8**)* @1343, i32 0, i8* null, i8* null }], align 16
@722 = private unnamed_addr constant [10 x i8] c"\1B[38;5;0m\00", align 1
@spectrum_palette_size = common dso_local local_unnamed_addr global i32 0, align 4
@spectrum_palette = common dso_local local_unnamed_addr global i32* null, align 8
@723 = private unnamed_addr constant [13 x i8] c"\1B[48;5;%dm%c\00", align 1
@stdout = external dso_local local_unnamed_addr global %1*, align 8
@724 = private unnamed_addr constant [18 x i8] c"From 0 to 100%%: \00", align 1
@725 = private unnamed_addr constant [12 x i8] c"\1B[48;5;%dm \00", align 1
@726 = private unnamed_addr constant [24 x i8] c"sending REPLCONF %s %s\0A\00", align 1
@727 = internal unnamed_addr global %9* null, align 8
@728 = private unnamed_addr constant [15 x i8] c"REPLCONF %s %s\00", align 1
@729 = private unnamed_addr constant [12 x i8] c"\0AI/O error\0A\00", align 1
@730 = private unnamed_addr constant [23 x i8] c"REPLCONF %s error: %s\0A\00", align 1
@731 = private unnamed_addr constant [5 x i8] c"capa\00", align 1
@732 = private unnamed_addr constant [4 x i8] c"eof\00", align 1
@733 = private unnamed_addr constant [7 x i8] c"SYNC\0D\0A\00", align 1
@734 = private unnamed_addr constant [25 x i8] c"Error writing to master\0A\00", align 1
@735 = private unnamed_addr constant [41 x i8] c"Error reading bulk length while SYNCing\0A\00", align 1
@736 = private unnamed_addr constant [29 x i8] c"SYNC with master failed: %s\0A\00", align 1
@737 = private unnamed_addr constant [5 x i8] c"EOF:\00", align 1
@738 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@739 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@type_string = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @738, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @739, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@740 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@741 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@type_list = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @741, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@742 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@743 = private unnamed_addr constant [8 x i8] c"members\00", align 1
@type_set = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @742, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @465, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @743, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@744 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@745 = private unnamed_addr constant [7 x i8] c"fields\00", align 1
@type_hash = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @745, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@746 = private unnamed_addr constant [5 x i8] c"zset\00", align 1
@type_zset = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @746, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @612, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @743, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@747 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@748 = private unnamed_addr constant [8 x i8] c"entries\00", align 1
@type_stream = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @589, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @748, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@749 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@750 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@type_other = dso_local local_unnamed_addr global %19 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @749, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @750, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@751 = private unnamed_addr constant [6 x i8] c"%lldB\00", align 1
@752 = private unnamed_addr constant [6 x i8] c"%.2fK\00", align 1
@753 = private unnamed_addr constant [6 x i8] c"%.2fM\00", align 1
@754 = private unnamed_addr constant [6 x i8] c"%.2fG\00", align 1
@755 = private unnamed_addr constant [9 x i8] c"lru:%lld\00", align 1
@756 = internal global %20 zeroinitializer, align 8
@757 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@758 = private unnamed_addr constant [8 x i8] c"FAKETTY\00", align 1
@759 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@760 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@761 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@762 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@763 = private unnamed_addr constant [28 x i8] c"Invalid address format: %s\0A\00", align 1
@764 = private unnamed_addr constant [35 x i8] c"Node %s:%d replied with error:\0A%s\0A\00", align 1
@765 = private unnamed_addr constant [172 x i8] c"*** ERROR: Invalid configuration for cluster creation.\0A*** Redis Cluster requires at least 3 master nodes.\0A*** This is not possible with %d nodes and %d replicas per node.\00", align 1
@766 = private unnamed_addr constant [38 x i8] c"\0A*** At least %d nodes are required.\0A\00", align 1
@767 = private unnamed_addr constant [53 x i8] c">>> Performing hash slots allocation on %d nodes...\0A\00", align 1
@768 = private unnamed_addr constant [31 x i8] c"Master[%d] -> Slots %lu - %lu\0A\00", align 1
@769 = private unnamed_addr constant [31 x i8] c"Adding replica %s:%d to %s:%d\0A\00", align 1
@770 = private unnamed_addr constant [35 x i8] c"Can I set the above configuration?\00", align 1
@771 = private unnamed_addr constant [33 x i8] c">>> Nodes configuration updated\0A\00", align 1
@772 = private unnamed_addr constant [50 x i8] c">>> Assign a different config epoch to each node\0A\00", align 1
@773 = private unnamed_addr constant [28 x i8] c"cluster set-config-epoch %d\00", align 1
@774 = private unnamed_addr constant [55 x i8] c">>> Sending CLUSTER MEET messages to join the cluster\0A\00", align 1
@775 = private unnamed_addr constant [19 x i8] c"cluster meet %s %d\00", align 1
@776 = private unnamed_addr constant [38 x i8] c"Failed to send CLUSTER MEET command.\0A\00", align 1
@777 = private unnamed_addr constant [31 x i8] c"Could not connect to Redis at \00", align 1
@778 = private unnamed_addr constant [11 x i8] c"%s:%d: %s\0A\00", align 1
@779 = private unnamed_addr constant [8 x i8] c"AUTH %s\00", align 1
@780 = private unnamed_addr constant [11 x i8] c"AUTH %s %s\00", align 1
@781 = private unnamed_addr constant [16 x i8] c"cluster_enabled\00", align 1
@782 = private unnamed_addr constant [37 x i8] c"is not configured as a cluster node.\00", align 1
@783 = private unnamed_addr constant [21 x i8] c"[ERR] Node %s:%d %s\0A\00", align 1
@784 = private unnamed_addr constant [7 x i8] c"myself\00", align 1
@785 = private unnamed_addr constant [4 x i8] c"->-\00", align 1
@786 = private unnamed_addr constant [4 x i8] c"-<-\00", align 1
@787 = private unnamed_addr constant [36 x i8] c"Error: invalid CLUSTER NODES reply\0A\00", align 1
@788 = private unnamed_addr constant [7 x i8] c"noaddr\00", align 1
@789 = private unnamed_addr constant [13 x i8] c"disconnected\00", align 1
@790 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@791 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@792 = private unnamed_addr constant [3 x i8] c"\1B[\00", align 1
@793 = private unnamed_addr constant [6 x i8] c"29;1m\00", align 1
@794 = private unnamed_addr constant [6 x i8] c"33;1m\00", align 1
@795 = private unnamed_addr constant [6 x i8] c"31;1m\00", align 1
@796 = private unnamed_addr constant [6 x i8] c"32;1m\00", align 1
@797 = private unnamed_addr constant [3 x i8] c"0m\00", align 1
@798 = private unnamed_addr constant [5 x i8] c"db0:\00", align 1
@799 = private unnamed_addr constant [20 x i8] c"cluster_known_nodes\00", align 1
@800 = private unnamed_addr constant [119 x i8] c"is not empty. Either the node already knows other nodes (check with CLUSTER NODES) or contains some key in database 0.\00", align 1
@801 = private unnamed_addr constant [43 x i8] c"array->nodes < (array->nodes + array->len)\00", align 1
@802 = private unnamed_addr constant [12 x i8] c"redis-cli.c\00", align 1
@803 = private unnamed_addr constant [81 x i8] c"void clusterManagerNodeArrayAdd(clusterManagerNodeArray *, clusterManagerNode *)\00", align 1
@804 = private unnamed_addr constant [13 x i8] c"node != NULL\00", align 1
@805 = private unnamed_addr constant [26 x i8] c"array->count < array->len\00", align 1
@806 = private unnamed_addr constant [84 x i8] c"void clusterManagerNodeArrayShift(clusterManagerNodeArray *, clusterManagerNode **)\00", align 1
@807 = private unnamed_addr constant [60 x i8] c">>> Trying to optimize slaves allocation for anti-affinity\0A\00", align 1
@808 = private unnamed_addr constant [37 x i8] c"[OK] Perfect anti-affinity obtained!\00", align 1
@809 = private unnamed_addr constant [59 x i8] c"[WARNING] Some slaves are in the same host as their master\00", align 1
@810 = private unnamed_addr constant [62 x i8] c"[WARNING] Some slaves of the same master are in the same host\00", align 1
@811 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@812 = internal global %4 { i64 (i8*)* @1369, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @1370, void (i8*, i8*)* null, void (i8*, i8*)* @1371 }, align 8
@813 = private unnamed_addr constant [12 x i8] c"key != NULL\00", align 1
@814 = private unnamed_addr constant [102 x i8] c"int clusterManagerGetAntiAffinityScore(clusterManagerNodeArray *, int, clusterManagerNode ***, int *)\00", align 1
@815 = private unnamed_addr constant [4 x i8] c"m%s\00", align 1
@816 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@817 = private unnamed_addr constant [2 x i8] c" \00", align 1
@818 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@819 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@820 = private unnamed_addr constant [12 x i8] c"S: %S %s:%u\00", align 1
@821 = private unnamed_addr constant [41 x i8] c"%s: %S %s:%u\0A%s   slots:%S (%u slots) %S\00", align 1
@822 = private unnamed_addr constant [20 x i8] c"\0A%s   replicates %S\00", align 1
@823 = private unnamed_addr constant [31 x i8] c"\0A%s   %U additional replica(s)\00", align 1
@824 = private unnamed_addr constant [2 x i8] c",\00", align 1
@825 = private unnamed_addr constant [4 x i8] c"[%u\00", align 1
@826 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@827 = private unnamed_addr constant [5 x i8] c"-%u]\00", align 1
@828 = private unnamed_addr constant [3 x i8] c"%S\00", align 1
@829 = private unnamed_addr constant [28 x i8] c"%s (type 'yes' to accept): \00", align 1
@stdin = external dso_local local_unnamed_addr global %1*, align 8
@830 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@831 = private unnamed_addr constant [21 x i8] c"CLUSTER REPLICATE %s\00", align 1
@832 = private unnamed_addr constant [8 x i8] c"CLUSTER\00", align 1
@833 = private unnamed_addr constant [9 x i8] c"ADDSLOTS\00", align 1
@834 = private unnamed_addr constant [2 x i8] c".\00", align 1
@835 = private unnamed_addr constant [40 x i8] c"Warning: %d node(s) may be unreachable\0A\00", align 1
@836 = private unnamed_addr constant [52 x i8] c" - The port %d of node %s may be unreachable from:\0A\00", align 1
@837 = private unnamed_addr constant [37 x i8] c" - Node %s may be unreachable from:\0A\00", align 1
@838 = private unnamed_addr constant [7 x i8] c"   %s\0A\00", align 1
@839 = private unnamed_addr constant [128 x i8] c"Cluster bus ports must be reachable by every node.\0ARemember that cluster bus ports are different from standard instance ports.\0A\00", align 1
@840 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@841 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@842 = internal global %4 { i64 (i8*)* @1369, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @1370, void (i8*, i8*)* @1371, void (i8*, i8*)* @1376 }, align 8
@843 = private unnamed_addr constant [6 x i8] c"%s:%u\00", align 1
@844 = private unnamed_addr constant [10 x i8] c"handshake\00", align 1
@845 = private unnamed_addr constant [42 x i8] c"[ERR] Unable to load info for node %s:%d\0A\00", align 1
@846 = private unnamed_addr constant [62 x i8] c"*** WARNING: %s:%d claims to be slave of unknown node ID %s.\0A\00", align 1
@847 = private unnamed_addr constant [49 x i8] c">>> Performing Cluster Check (using node %s:%d)\0A\00", align 1
@848 = private unnamed_addr constant [45 x i8] c"[ERR] Nodes don't agree about configuration!\00", align 1
@849 = private unnamed_addr constant [49 x i8] c"[OK] All nodes agree about slots configuration.\0A\00", align 1
@850 = private unnamed_addr constant [29 x i8] c">>> Check for open slots...\0A\00", align 1
@851 = private unnamed_addr constant [51 x i8] c"[WARNING] Node %s:%d has slots in migrating state \00", align 1
@852 = private unnamed_addr constant [4 x i8] c",%S\00", align 1
@853 = private unnamed_addr constant [51 x i8] c"[WARNING] Node %s:%d has slots in importing state \00", align 1
@854 = private unnamed_addr constant [41 x i8] c"[WARNING] The following slots are open: \00", align 1
@855 = private unnamed_addr constant [5 x i8] c"%s.\0A\00", align 1
@856 = private unnamed_addr constant [29 x i8] c">>> Check slots coverage...\0A\00", align 1
@857 = private unnamed_addr constant [28 x i8] c"[OK] All %d slots covered.\0A\00", align 1
@858 = private unnamed_addr constant [46 x i8] c"[ERR] Not all %d slots are covered by nodes.\0A\00", align 1
@859 = private unnamed_addr constant [39 x i8] c">>> Check for multiple slot owners...\0A\00", align 1
@860 = private unnamed_addr constant [34 x i8] c"[WARNING] Slot %d has %d owners:\0A\00", align 1
@861 = private unnamed_addr constant [11 x i8] c"    %s:%d\0A\00", align 1
@862 = private unnamed_addr constant [43 x i8] c"Failed to fix multiple owners for slot %d\0A\00", align 1
@863 = private unnamed_addr constant [32 x i8] c"[OK] No multiple owners found.\0A\00", align 1
@864 = private unnamed_addr constant [351 x i8] c"*** Fixing open slots with %d unreachable masters is dangerous: redis-cli will assume that slots about masters that are not reachable are not covered, and will try to reassign them to the reachable nodes. This can cause data loss and is rarely what you want to do. If you really want to proceed use the --cluster-fix-with-unreachable-masters option.\0A\00", align 1
@865 = private unnamed_addr constant [25 x i8] c">>> Fixing open slot %d\0A\00", align 1
@866 = private unnamed_addr constant [27 x i8] c"CLUSTER COUNTKEYSINSLOT %d\00", align 1
@867 = private unnamed_addr constant [55 x i8] c"*** Found keys about slot %d in non-owner node %s:%d!\0A\00", align 1
@868 = private unnamed_addr constant [8 x i8] c"%s%s:%u\00", align 1
@869 = private unnamed_addr constant [45 x i8] c"*** Found keys about slot %d in node %s:%d!\0A\00", align 1
@870 = private unnamed_addr constant [8 x i8] c"%s%S:%u\00", align 1
@871 = private unnamed_addr constant [25 x i8] c"Set as migrating in: %s\0A\00", align 1
@872 = private unnamed_addr constant [25 x i8] c"Set as importing in: %s\0A\00", align 1
@873 = private unnamed_addr constant [76 x i8] c">>> No single clear owner for the slot, selecting an owner by # of keys...\0A\00", align 1
@874 = private unnamed_addr constant [53 x i8] c"[ERR] Can't select a slot owner. Impossible to fix.\0A\00", align 1
@875 = private unnamed_addr constant [41 x i8] c"*** Configuring %s:%d as the slot owner\0A\00", align 1
@876 = private unnamed_addr constant [14 x i8] c"owner != NULL\00", align 1
@877 = private unnamed_addr constant [35 x i8] c"int clusterManagerFixOpenSlot(int)\00", align 1
@878 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@879 = private unnamed_addr constant [10 x i8] c"importing\00", align 1
@880 = private unnamed_addr constant [48 x i8] c">>> Case 1: Moving slot %d from %s:%d to %s:%d\0A\00", align 1
@881 = private unnamed_addr constant [60 x i8] c">>> Case 2: Moving all the %d slot keys to its owner %s:%d\0A\00", align 1
@882 = private unnamed_addr constant [35 x i8] c">>> Setting %d as STABLE in %s:%d\0A\00", align 1
@883 = private unnamed_addr constant [5 x i8] c"NODE\00", align 1
@884 = private unnamed_addr constant [18 x i8] c"target_id != NULL\00", align 1
@885 = private unnamed_addr constant [97 x i8] c">>> Case 3: Moving slot %d from %s:%d to %s:%d and closing it on all the other importing nodes.\0A\00", align 1
@886 = private unnamed_addr constant [68 x i8] c">>> Case 3: Closing slot %d on both migrating and importing nodes.\0A\00", align 1
@887 = private unnamed_addr constant [28 x i8] c"CLUSTER GETKEYSINSLOT %d %d\00", align 1
@888 = private unnamed_addr constant [38 x i8] c">>> Case 4: Closing slot %d on %s:%d\0A\00", align 1
@889 = private unnamed_addr constant [22 x i8] c"CLUSTER SETSLOT %d %s\00", align 1
@890 = private unnamed_addr constant [7 x i8] c"STABLE\00", align 1
@891 = private unnamed_addr constant [135 x i8] c"[ERR] Sorry, redis-cli can't fix this slot yet (work in progress). Slot is set as migrating in %s, as importing in %s, owner is %s:%d\0A\00", align 1
@892 = private unnamed_addr constant [20 x i8] c"CLUSTER ADDSLOTS %d\00", align 1
@893 = private unnamed_addr constant [20 x i8] c"CLUSTER DELSLOTS %d\00", align 1
@894 = private unnamed_addr constant [42 x i8] c"slot >= 0 && slot < CLUSTER_MANAGER_SLOTS\00", align 1
@895 = private unnamed_addr constant [83 x i8] c"clusterManagerNode *clusterManagerGetSlotOwner(clusterManagerNode *, int, char **)\00", align 1
@896 = private unnamed_addr constant [33 x i8] c"reply->type == REDIS_REPLY_ARRAY\00", align 1
@897 = private unnamed_addr constant [49 x i8] c"r->type == REDIS_REPLY_ARRAY && r->elements >= 3\00", align 1
@898 = private unnamed_addr constant [51 x i8] c"nr->type == REDIS_REPLY_ARRAY && nr->elements >= 2\00", align 1
@899 = private unnamed_addr constant [11 x i8] c"ip != NULL\00", align 1
@900 = private unnamed_addr constant [25 x i8] c"CLUSTER SETSLOT %d %s %s\00", align 1
@901 = private unnamed_addr constant [37 x i8] c"Moving slot %d from %s:%d to %s:%d: \00", align 1
@902 = private unnamed_addr constant [10 x i8] c"migrating\00", align 1
@903 = private unnamed_addr constant [109 x i8] c"int clusterManagerMigrateKeysInSlot(clusterManagerNode *, clusterManagerNode *, int, int, int, int, char **)\00", align 1
@904 = private unnamed_addr constant [8 x i8] c"BUSYKEY\00", align 1
@905 = private unnamed_addr constant [55 x i8] c"*** Slot was not served, setting owner to node %s:%d.\0A\00", align 1
@906 = private unnamed_addr constant [24 x i8] c"\0A*** Target key exists\0A\00", align 1
@907 = private unnamed_addr constant [42 x i8] c"*** Checking key values on both nodes...\0A\00", align 1
@908 = private unnamed_addr constant [25 x i8] c"*** Value check failed!\0A\00", align 1
@909 = private unnamed_addr constant [141 x i8] c"*** Found %d key(s) in both source node and target node having different values.\0A    Source node: %s:%d\0A    Target node: %s:%d\0A    Keys(s):\0A\00", align 1
@910 = private unnamed_addr constant [10 x i8] c"    - %s\0A\00", align 1
@911 = private unnamed_addr constant [132 x i8] c"Please fix the above key(s) manually and try again or relaunch the command \0Awith --cluster-replace option to force key overriding.\0A\00", align 1
@912 = private unnamed_addr constant [30 x i8] c"*** Replacing target keys...\0A\00", align 1
@913 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@914 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@915 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@916 = private unnamed_addr constant [6 x i8] c"AUTH2\00", align 1
@917 = private unnamed_addr constant [34 x i8] c"entry->type == REDIS_REPLY_STRING\00", align 1
@918 = private unnamed_addr constant [121 x i8] c"redisReply *clusterManagerMigrateKeysInReply(clusterManagerNode *, clusterManagerNode *, redisReply *, int, int, char *)\00", align 1
@919 = private unnamed_addr constant [41 x i8] c"0000000000000000000000000000000000000000\00", align 1
@920 = private unnamed_addr constant [6 x i8] c"DEBUG\00", align 1
@921 = private unnamed_addr constant [13 x i8] c"DIGEST-VALUE\00", align 1
@922 = private unnamed_addr constant [77 x i8] c"keys_reply->elements == r1->elements && keys_reply->elements == r2->elements\00", align 1
@923 = private unnamed_addr constant [102 x i8] c"int clusterManagerCompareKeysValues(clusterManagerNode *, clusterManagerNode *, redisReply *, list *)\00", align 1
@924 = private unnamed_addr constant [355 x i8] c"*** Fixing slots coverage with %d unreachable masters is dangerous: redis-cli will assume that slots about masters that are not reachable are not covered, and will try to reassign them to the reachable nodes. This can cause data loss and is rarely what you want to do. If you really want to proceed use the --cluster-fix-with-unreachable-masters option.\0A\00", align 1
@925 = private unnamed_addr constant [30 x i8] c">>> Fixing slots coverage...\0A\00", align 1
@926 = private unnamed_addr constant [43 x i8] c"int clusterManagerFixSlotsCoverage(char *)\00", align 1
@927 = private unnamed_addr constant [3 x i8] c", \00", align 1
@928 = private unnamed_addr constant [48 x i8] c"Fix these slots by covering with a random node?\00", align 1
@929 = private unnamed_addr constant [33 x i8] c">>> Covering slot %s with %s:%d\0A\00", align 1
@930 = private unnamed_addr constant [46 x i8] c"Fix these slots by covering with those nodes?\00", align 1
@931 = private unnamed_addr constant [14 x i8] c"entry != NULL\00", align 1
@932 = private unnamed_addr constant [11 x i8] c"fn != NULL\00", align 1
@933 = private unnamed_addr constant [51 x i8] c"Fix these slots by moving keys into a single node?\00", align 1
@934 = private unnamed_addr constant [43 x i8] c">>> Covering slot %s moving keys to %s:%d\0A\00", align 1
@935 = private unnamed_addr constant [10 x i8] c"IMPORTING\00", align 1
@936 = private unnamed_addr constant [43 x i8] c">>> Fixing multiple owners for slot %d...\0A\00", align 1
@937 = private unnamed_addr constant [23 x i8] c"listLength(owners) > 1\00", align 1
@938 = private unnamed_addr constant [53 x i8] c"int clusterManagerFixMultipleSlotOwners(int, list *)\00", align 1
@939 = private unnamed_addr constant [34 x i8] c">>> Setting slot %d owner: %s:%d\0A\00", align 1
@940 = private unnamed_addr constant [40 x i8] c">>> Adding node %s:%d to cluster %s:%d\0A\00", align 1
@941 = private unnamed_addr constant [28 x i8] c"[ERR] No such master ID %s\0A\00", align 1
@942 = private unnamed_addr constant [20 x i8] c"master_node != NULL\00", align 1
@943 = private unnamed_addr constant [47 x i8] c"int clusterManagerCommandAddNode(int, char **)\00", align 1
@944 = private unnamed_addr constant [37 x i8] c"Automatically selected master %s:%d\0A\00", align 1
@945 = private unnamed_addr constant [42 x i8] c"[ERR] Sorry, can't connect to node %s:%d\0A\00", align 1
@946 = private unnamed_addr constant [66 x i8] c">>> Send CLUSTER MEET to node %s:%d to make it join the cluster.\0A\00", align 1
@947 = private unnamed_addr constant [19 x i8] c"CLUSTER MEET %s %d\00", align 1
@948 = private unnamed_addr constant [41 x i8] c">>> Configure node as replica of %s:%d.\0A\00", align 1
@949 = private unnamed_addr constant [32 x i8] c"[OK] New node added correctly.\0A\00", align 1
@950 = private unnamed_addr constant [139 x i8] c"[ERR] Invalid arguments: you need to pass either a valid address (ie. 120.0.0.1:7000) or space separated IP and port (ie. 120.0.0.1 7000)\0A\00", align 1
@951 = private unnamed_addr constant [41 x i8] c">>> Removing node %s from cluster %s:%d\0A\00", align 1
@952 = private unnamed_addr constant [26 x i8] c"[ERR] No such node ID %s\0A\00", align 1
@953 = private unnamed_addr constant [65 x i8] c"[ERR] Node %s:%d is not empty! Reshard data away and try again.\0A\00", align 1
@954 = private unnamed_addr constant [55 x i8] c">>> Sending CLUSTER FORGET messages to the cluster...\0A\00", align 1
@955 = private unnamed_addr constant [15 x i8] c"master != NULL\00", align 1
@956 = private unnamed_addr constant [50 x i8] c"int clusterManagerCommandDeleteNode(int, char **)\00", align 1
@957 = private unnamed_addr constant [31 x i8] c">>> %s:%d as replica of %s:%d\0A\00", align 1
@958 = private unnamed_addr constant [18 x i8] c"CLUSTER FORGET %s\00", align 1
@959 = private unnamed_addr constant [53 x i8] c">>> Sending CLUSTER RESET SOFT to the deleted node.\0A\00", align 1
@960 = private unnamed_addr constant [17 x i8] c"CLUSTER RESET %s\00", align 1
@961 = private unnamed_addr constant [5 x i8] c"SOFT\00", align 1
@962 = private unnamed_addr constant [50 x i8] c"%s:%d (%s...) -> %d keys | %d slots | %d slaves.\0A\00", align 1
@963 = private unnamed_addr constant [29 x i8] c"[OK] %d keys in %d masters.\0A\00", align 1
@964 = private unnamed_addr constant [32 x i8] c"%.2f keys per slot on average.\0A\00", align 1
@965 = private unnamed_addr constant [56 x i8] c"*** Please fix your cluster problems before resharding\0A\00", align 1
@966 = private unnamed_addr constant [52 x i8] c"How many slots do you want to move (from 1 to %d)? \00", align 1
@967 = private unnamed_addr constant [32 x i8] c"What is the receiving node ID? \00", align 1
@968 = private unnamed_addr constant [19 x i8] c"Source node #%lu: \00", align 1
@969 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@970 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@971 = private unnamed_addr constant [47 x i8] c"*** No source nodes given, operation aborted.\0A\00", align 1
@972 = private unnamed_addr constant [26 x i8] c"\0AReady to move %d slots.\0A\00", align 1
@973 = private unnamed_addr constant [65 x i8] c"Do you want to proceed with the proposed reshard plan (yes/no)? \00", align 1
@974 = private unnamed_addr constant [73 x i8] c"*** The specified node (%s) is not known or not a master, please retry.\0A\00", align 1
@975 = private unnamed_addr constant [63 x i8] c"*** It is not possible to use the target node as source node.\0A\00", align 1
@976 = private unnamed_addr constant [28 x i8] c"    Moving slot %d from %s\0A\00", align 1
@977 = private unnamed_addr constant [28 x i8] c"*** No such master node %s\0A\00", align 1
@978 = private unnamed_addr constant [57 x i8] c"*** Please fix your cluster problems before rebalancing\0A\00", align 1
@979 = private unnamed_addr constant [71 x i8] c"*** No rebalancing needed! All nodes are within the %.2f%% threshold.\0A\00", align 1
@980 = private unnamed_addr constant [54 x i8] c">>> Rebalancing across %d nodes. Total weight = %.2f\0A\00", align 1
@981 = private unnamed_addr constant [27 x i8] c"%s:%d balance is %d slots\0A\00", align 1
@982 = private unnamed_addr constant [37 x i8] c"Moving %d slots from %s:%d to %s:%d\0A\00", align 1
@983 = private unnamed_addr constant [55 x i8] c"*** Assertion failed: Reshard table != number of slots\00", align 1
@984 = private unnamed_addr constant [69 x i8] c"Setting a node timeout of less than 100 milliseconds is a bad idea.\0A\00", align 1
@985 = private unnamed_addr constant [57 x i8] c">>> Reconfiguring node timeout in every cluster node...\0A\00", align 1
@986 = private unnamed_addr constant [16 x i8] c"CONFIG %s %s %d\00", align 1
@987 = private unnamed_addr constant [21 x i8] c"cluster-node-timeout\00", align 1
@988 = private unnamed_addr constant [10 x i8] c"CONFIG %s\00", align 1
@989 = private unnamed_addr constant [8 x i8] c"REWRITE\00", align 1
@990 = private unnamed_addr constant [31 x i8] c"*** New timeout set for %s:%d\0A\00", align 1
@991 = private unnamed_addr constant [39 x i8] c"ERR setting node-timeot for %s:%d: %s\0A\00", align 1
@992 = private unnamed_addr constant [42 x i8] c">>> New node timeout set. %d OK, %d ERR.\0A\00", align 1
@993 = private unnamed_addr constant [68 x i8] c"[ERR] Option '--cluster-from' is required for subcommand 'import'.\0A\00", align 1
@994 = private unnamed_addr constant [91 x i8] c"[ERR] Invalid --cluster-from host. You need to pass a valid address (ie. 120.0.0.1:7000).\0A\00", align 1
@995 = private unnamed_addr constant [48 x i8] c">>> Importing data from %s:%d to cluster %s:%d\0A\00", align 1
@996 = private unnamed_addr constant [42 x i8] c"Could not connect to Redis at %s:%d: %s.\0A\00", align 1
@997 = private unnamed_addr constant [53 x i8] c"[ERR] The source node should not be a cluster node.\0A\00", align 1
@998 = private unnamed_addr constant [33 x i8] c"*** Importing %d keys from DB 0\0A\00", align 1
@999 = private unnamed_addr constant [50 x i8] c"MIGRATE %s %d %s %d %d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@1000 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@1001 = private unnamed_addr constant [17 x i8] c"SCAN %d COUNT %d\00", align 1
@1002 = private unnamed_addr constant [37 x i8] c"src_reply->type == REDIS_REPLY_ARRAY\00", align 1
@1003 = private unnamed_addr constant [46 x i8] c"int clusterManagerCommandImport(int, char **)\00", align 1
@1004 = private unnamed_addr constant [25 x i8] c"src_reply->elements >= 2\00", align 1
@1005 = private unnamed_addr constant [49 x i8] c"src_reply->element[1]->type == REDIS_REPLY_ARRAY\00", align 1
@1006 = private unnamed_addr constant [31 x i8] c"kr->type == REDIS_REPLY_STRING\00", align 1
@1007 = private unnamed_addr constant [24 x i8] c"Migrating %s to %s:%d: \00", align 1
@1008 = private unnamed_addr constant [5 x i8] c"COPY\00", align 1
@1009 = private unnamed_addr constant [37 x i8] c"Source %s:%d replied with error:\0A%s\0A\00", align 1
@1010 = private unnamed_addr constant [4 x i8] c"OK\0A\00", align 1
@1011 = private unnamed_addr constant [8 x i8] c"!c->err\00", align 1
@1012 = private unnamed_addr constant [72 x i8] c"redisReply *reconnectingRedisCommand(redisContext *, const char *, ...)\00", align 1
@1013 = private unnamed_addr constant [6 x i8] c"\0D\1B[0K\00", align 1
@1014 = private unnamed_addr constant [20 x i8] c"Reconnecting... %d\0D\00", align 1
@1015 = private unnamed_addr constant [11 x i8] c"Error: %s\0A\00", align 1
@1016 = private unnamed_addr constant [12 x i8] c">>> Calling\00", align 1
@1017 = private unnamed_addr constant [16 x i8] c"%s:%d: Failed!\0A\00", align 1
@1018 = private unnamed_addr constant [13 x i8] c"<endsession>\00", align 1
@1019 = private unnamed_addr constant [7 x i8] c"(true)\00", align 1
@1020 = private unnamed_addr constant [8 x i8] c"(false)\00", align 1
@1021 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@1022 = private unnamed_addr constant [24 x i8] c"Unknown reply type: %d\0A\00", align 1
@1023 = private unnamed_addr constant [9 x i8] c"redis %s\00", align 1
@1024 = private unnamed_addr constant [5 x i8] c"[%i]\00", align 1
@1025 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@1026 = private unnamed_addr constant [3 x i8] c"[\0A\00", align 1
@1027 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@1028 = private unnamed_addr constant [33 x i8] c">>> Node %s:%d -> Saving RDB...\0A\00", align 1
@1029 = private unnamed_addr constant [3 x i8] c"\0A]\00", align 1
@1030 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@1031 = private unnamed_addr constant [11 x i8] c"nodes.json\00", align 1
@1032 = private unnamed_addr constant [37 x i8] c"Saving cluster configuration to: %s\0A\00", align 1
@1033 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@1034 = private unnamed_addr constant [29 x i8] c"Could not save nodes to: %s\0A\00", align 1
@1035 = private unnamed_addr constant [104 x i8] c"*** Cluster seems to have some problems, please be aware of it if you're going to restore this backup.\0A\00", align 1
@1036 = private unnamed_addr constant [30 x i8] c"[OK] Backup created into: %s\0A\00", align 1
@1037 = private unnamed_addr constant [31 x i8] c"[ERR] Failed to back cluster!\0A\00", align 1
@1038 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@1039 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@1040 = private unnamed_addr constant [164 x i8] c"  {\0A    \22name\22: \22%s\22,\0A    \22host\22: \22%s\22,\0A    \22port\22: %d,\0A    \22replicate\22: %s,\0A    \22slots\22: [%s],\0A    \22slots_count\22: %d,\0A    \22flags\22: \22%s\22,\0A    \22current_epoch\22: %llu\00", align 1
@1041 = private unnamed_addr constant [28 x i8] c",\0A    \22cluster_errors\22: %lu\00", align 1
@1042 = private unnamed_addr constant [11 x i8] c"\22%S\22: \22%S\22\00", align 1
@1043 = private unnamed_addr constant [24 x i8] c",\0A    \22migrating\22: {%S}\00", align 1
@1044 = private unnamed_addr constant [24 x i8] c",\0A    \22importing\22: {%S}\00", align 1
@1045 = private unnamed_addr constant [5 x i8] c"\0A  }\00", align 1
@1046 = private unnamed_addr constant [27 x i8] c"Cluster Manager Commands:\0A\00", align 1
@1047 = private unnamed_addr constant [5 x i8] c"  %s\00", align 1
@1048 = private unnamed_addr constant [16 x i8] c"  --cluster-%s\0A\00", align 1
@1049 = private unnamed_addr constant [120 x i8] c"\0AFor check, fix, reshard, del-node, set-timeout you can specify the host and port of any working node in the cluster.\0A\0A\00", align 1
@1050 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@1051 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@1052 = private unnamed_addr constant [3 x i8] c"-x\00", align 1
@1053 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@1054 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@1055 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@1056 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@1057 = private unnamed_addr constant [3 x i8] c"-n\00", align 1
@1058 = private unnamed_addr constant [18 x i8] c"--no-auth-warning\00", align 1
@1059 = private unnamed_addr constant [10 x i8] c"--askpass\00", align 1
@1060 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@1061 = private unnamed_addr constant [7 x i8] c"--pass\00", align 1
@1062 = private unnamed_addr constant [7 x i8] c"--user\00", align 1
@1063 = private unnamed_addr constant [3 x i8] c"-u\00", align 1
@1064 = private unnamed_addr constant [6 x i8] c"--raw\00", align 1
@1065 = private unnamed_addr constant [9 x i8] c"--no-raw\00", align 1
@1066 = private unnamed_addr constant [6 x i8] c"--csv\00", align 1
@1067 = private unnamed_addr constant [10 x i8] c"--latency\00", align 1
@1068 = private unnamed_addr constant [15 x i8] c"--latency-dist\00", align 1
@1069 = private unnamed_addr constant [7 x i8] c"--mono\00", align 1
@1070 = private unnamed_addr constant [18 x i8] c"--latency-history\00", align 1
@1071 = private unnamed_addr constant [11 x i8] c"--lru-test\00", align 1
@1072 = private unnamed_addr constant [8 x i8] c"--slave\00", align 1
@1073 = private unnamed_addr constant [10 x i8] c"--replica\00", align 1
@1074 = private unnamed_addr constant [7 x i8] c"--stat\00", align 1
@1075 = private unnamed_addr constant [7 x i8] c"--scan\00", align 1
@1076 = private unnamed_addr constant [10 x i8] c"--pattern\00", align 1
@1077 = private unnamed_addr constant [20 x i8] c"--intrinsic-latency\00", align 1
@1078 = private unnamed_addr constant [6 x i8] c"--rdb\00", align 1
@1079 = private unnamed_addr constant [7 x i8] c"--pipe\00", align 1
@1080 = private unnamed_addr constant [15 x i8] c"--pipe-timeout\00", align 1
@1081 = private unnamed_addr constant [10 x i8] c"--bigkeys\00", align 1
@1082 = private unnamed_addr constant [10 x i8] c"--memkeys\00", align 1
@1083 = private unnamed_addr constant [18 x i8] c"--memkeys-samples\00", align 1
@1084 = private unnamed_addr constant [10 x i8] c"--hotkeys\00", align 1
@1085 = private unnamed_addr constant [7 x i8] c"--eval\00", align 1
@1086 = private unnamed_addr constant [6 x i8] c"--ldb\00", align 1
@1087 = private unnamed_addr constant [16 x i8] c"--ldb-sync-mode\00", align 1
@1088 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@1089 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@1090 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@1091 = private unnamed_addr constant [10 x i8] c"--cluster\00", align 1
@1092 = private unnamed_addr constant [19 x i8] c"--cluster-replicas\00", align 1
@1093 = private unnamed_addr constant [20 x i8] c"--cluster-master-id\00", align 1
@1094 = private unnamed_addr constant [15 x i8] c"--cluster-from\00", align 1
@1095 = private unnamed_addr constant [13 x i8] c"--cluster-to\00", align 1
@1096 = private unnamed_addr constant [17 x i8] c"--cluster-weight\00", align 1
@1097 = private unnamed_addr constant [156 x i8] c"WARNING: you cannot use --cluster-weight more than once.\0AYou can set more weights by adding them as a space-separated list, ie:\0A--cluster-weight n1=w n2=w\0A\00", align 1
@1098 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@1099 = private unnamed_addr constant [16 x i8] c"--cluster-slots\00", align 1
@1100 = private unnamed_addr constant [18 x i8] c"--cluster-timeout\00", align 1
@1101 = private unnamed_addr constant [19 x i8] c"--cluster-pipeline\00", align 1
@1102 = private unnamed_addr constant [20 x i8] c"--cluster-threshold\00", align 1
@1103 = private unnamed_addr constant [14 x i8] c"--cluster-yes\00", align 1
@1104 = private unnamed_addr constant [19 x i8] c"--cluster-simulate\00", align 1
@1105 = private unnamed_addr constant [18 x i8] c"--cluster-replace\00", align 1
@1106 = private unnamed_addr constant [15 x i8] c"--cluster-copy\00", align 1
@1107 = private unnamed_addr constant [16 x i8] c"--cluster-slave\00", align 1
@1108 = private unnamed_addr constant [28 x i8] c"--cluster-use-empty-masters\00", align 1
@1109 = private unnamed_addr constant [33 x i8] c"--cluster-search-multiple-owners\00", align 1
@1110 = private unnamed_addr constant [39 x i8] c"--cluster-fix-with-unreachable-masters\00", align 1
@1111 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@1112 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@1113 = private unnamed_addr constant [14 x i8] c"redis-cli %s\0A\00", align 1
@1114 = private unnamed_addr constant [3 x i8] c"-3\00", align 1
@1115 = private unnamed_addr constant [53 x i8] c"Unrecognized option or bad number of args for: '%s'\0A\00", align 1
@1116 = private unnamed_addr constant [51 x i8] c"Options --ldb and --ldb-sync-mode require --eval.\0A\00", align 1
@1117 = private unnamed_addr constant [37 x i8] c"Try %s --help for more information.\0A\00", align 1
@1118 = private unnamed_addr constant [99 x i8] c"Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\0A\00", align 1
@1119 = private unnamed_addr constant [2210 x i8] c"redis-cli %s\0A\0AUsage: redis-cli [OPTIONS] [cmd [arg [arg ...]]]\0A  -h <hostname>      Server hostname (default: 127.0.0.1).\0A  -p <port>          Server port (default: 6379).\0A  -s <socket>        Server socket (overrides hostname and port).\0A  -a <password>      Password to use when connecting to the server.\0A                     You can also use the REDISCLI_AUTH environment\0A                     variable to pass this password more safely\0A                     (if both are used, this argument takes predecence).\0A  --user <username>  Used to send ACL style 'AUTH username pass'. Needs -a.\0A  --pass <password>  Alias of -a for consistency with the new --user option.\0A  --askpass          Force user to input password with mask from STDIN.\0A                     If this argument is used, '-a' and REDISCLI_AUTH\0A                     environment variable will be ignored.\0A  -u <uri>           Server URI.\0A  -r <repeat>        Execute specified command N times.\0A  -i <interval>      When -r is used, waits <interval> seconds per command.\0A                     It is possible to specify sub-second times like -i 0.1.\0A  -n <db>            Database number.\0A  -3                 Start session in RESP3 protocol mode.\0A  -x                 Read last argument from STDIN.\0A  -d <delimiter>     Multi-bulk delimiter in for raw formatting (default: \\n).\0A  -c                 Enable cluster mode (follow -ASK and -MOVED redirections).\0A  --raw              Use raw formatting for replies (default when STDOUT is\0A                     not a tty).\0A  --no-raw           Force formatted output even when STDOUT is not a tty.\0A  --csv              Output in CSV format.\0A  --stat             Print rolling stats about server: mem, clients, ...\0A  --latency          Enter a special mode continuously sampling latency.\0A                     If you use this mode in an interactive session it runs\0A                     forever displaying real-time stats. Otherwise if --raw or\0A                     --csv is specified, or if you redirect the output to a non\0A                     TTY, it samples the latency for 1 second (you can use\0A                     -i to change the interval), then produces a single output\0A                     and exits.\0A\00", align 1
@1120 = private unnamed_addr constant [814 x i8] c"  --latency-history  Like --latency but tracking latency changes over time.\0A                     Default time interval is 15 sec. Change it using -i.\0A  --latency-dist     Shows latency as a spectrum, requires xterm 256 colors.\0A                     Default time interval is 1 sec. Change it using -i.\0A  --lru-test <keys>  Simulate a cache workload with an 80-20 distribution.\0A  --replica          Simulate a replica showing commands received from the master.\0A  --rdb <filename>   Transfer an RDB dump from remote server to local file.\0A  --pipe             Transfer raw Redis protocol from stdin to server.\0A  --pipe-timeout <n> In --pipe mode, abort with error if after sending all data.\0A                     no reply is received within <n> seconds.\0A                     Default timeout: %d. Use 0 to wait forever.\0A\00", align 1
@1121 = private unnamed_addr constant [1440 x i8] c"  --bigkeys          Sample Redis keys looking for keys with many elements (complexity).\0A  --memkeys          Sample Redis keys looking for keys consuming a lot of memory.\0A  --memkeys-samples <n> Sample Redis keys looking for keys consuming a lot of memory.\0A                     And define number of key elements to sample\0A  --hotkeys          Sample Redis keys looking for hot keys.\0A                     only works when maxmemory-policy is *lfu.\0A  --scan             List all keys using the SCAN command.\0A  --pattern <pat>    Useful with --scan to specify a SCAN pattern.\0A  --intrinsic-latency <sec> Run a test to measure intrinsic system latency.\0A                     The test will run for the specified amount of seconds.\0A  --eval <file>      Send an EVAL command using the Lua script at <file>.\0A  --ldb              Used with --eval enable the Redis Lua debugger.\0A  --ldb-sync-mode    Like --ldb but uses the synchronous Lua debugger, in\0A                     this mode the server is blocked and script changes are\0A                     not rolled back from the server memory.\0A  --cluster <command> [args...] [opts...]\0A                     Cluster Manager command and arguments (see below).\0A  --verbose          Verbose mode.\0A  --no-auth-warning  Don't show warning message when using password on command\0A                     line interface.\0A  --help             Output this help and exit.\0A  --version          Output version and exit.\0A\0A\00", align 1
@1122 = private unnamed_addr constant [590 x i8] c"Cluster Manager Commands:\0A  Use --cluster help to list all available cluster manager commands.\0A\0AExamples:\0A  cat /etc/passwd | redis-cli -x set mypasswd\0A  redis-cli get mypasswd\0A  redis-cli -r 100 lpush mylist x\0A  redis-cli -r 100 -i 1 info | grep used_memory_human:\0A  redis-cli --eval myscript.lua key1 key2 , arg1 arg2 arg3\0A  redis-cli --scan --pattern '*:12345*'\0A\0A  (Note: when using --eval the comma separates KEYS[] from ARGV[] items)\0A\0AWhen no command is given, redis-cli starts in interactive mode.\0AType \22help\22 in interactive mode for information on available commands\0Aand settings.\0A\0A\00", align 1
@1123 = private unnamed_addr constant [9 x i8] c"redis://\00", align 1
@1124 = private unnamed_addr constant [20 x i8] c"Invalid URI scheme\0A\00", align 1
@1125 = private unnamed_addr constant [25 x i8] c"Incomplete URI encoding\0A\00", align 1
@1126 = private unnamed_addr constant [35 x i8] c"Illegal character in URI encoding\0A\00", align 1
@1127 = private unnamed_addr constant [12 x i8] c"999.999.999\00", align 1
@1128 = private unnamed_addr constant [9 x i8] c" (git:%s\00", align 1
@1129 = private unnamed_addr constant [7 x i8] c"-dirty\00", align 1
@1130 = private unnamed_addr constant [2 x i8] c")\00", align 1
@1131 = private unnamed_addr constant [14 x i8] c"REDISCLI_AUTH\00", align 1
@1132 = private unnamed_addr constant [24 x i8] c"Please input password: \00", align 1
@1133 = private unnamed_addr constant [69 x i8] c"[ERR] Wrong number of arguments for specified --cluster sub command\0A\00", align 1
@1134 = private unnamed_addr constant [30 x i8] c"Unknown --cluster subcommand\0A\00", align 1
@1135 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@1136 = private unnamed_addr constant [22 x i8] c"Warning: AUTH failed\0A\00", align 1
@1137 = private unnamed_addr constant [10 x i8] c"SELECT %d\00", align 1
@1138 = private unnamed_addr constant [8 x i8] c"HELLO 3\00", align 1
@1139 = private unnamed_addr constant [9 x i8] c"\1B[0G\1B[2K\00", align 1
@1140 = private unnamed_addr constant [24 x i8] c" -- %.2f seconds range\0A\00", align 1
@1141 = private unnamed_addr constant [47 x i8] c"min: %lld, max: %lld, avg: %.2f (%lld samples)\00", align 1
@1142 = private unnamed_addr constant [21 x i8] c"%lld,%lld,%.2f,%lld\0A\00", align 1
@1143 = private unnamed_addr constant [21 x i8] c"%lld %lld %.2f %lld\0A\00", align 1
@1144 = private unnamed_addr constant [31 x %22] [%22 { i64 10, i64 0, i32 46 }, %22 { i64 125, i64 0, i32 45 }, %22 { i64 250, i64 0, i32 42 }, %22 { i64 500, i64 0, i32 35 }, %22 { i64 1000, i64 0, i32 49 }, %22 { i64 2000, i64 0, i32 50 }, %22 { i64 3000, i64 0, i32 51 }, %22 { i64 4000, i64 0, i32 52 }, %22 { i64 5000, i64 0, i32 53 }, %22 { i64 6000, i64 0, i32 54 }, %22 { i64 7000, i64 0, i32 55 }, %22 { i64 8000, i64 0, i32 56 }, %22 { i64 9000, i64 0, i32 57 }, %22 { i64 10000, i64 0, i32 65 }, %22 { i64 20000, i64 0, i32 66 }, %22 { i64 30000, i64 0, i32 67 }, %22 { i64 40000, i64 0, i32 68 }, %22 { i64 50000, i64 0, i32 69 }, %22 { i64 100000, i64 0, i32 70 }, %22 { i64 200000, i64 0, i32 71 }, %22 { i64 300000, i64 0, i32 72 }, %22 { i64 400000, i64 0, i32 73 }, %22 { i64 500000, i64 0, i32 74 }, %22 { i64 1000000, i64 0, i32 75 }, %22 { i64 2000000, i64 0, i32 76 }, %22 { i64 4000000, i64 0, i32 77 }, %22 { i64 8000000, i64 0, i32 78 }, %22 { i64 16000000, i64 0, i32 79 }, %22 { i64 30000000, i64 0, i32 80 }, %22 { i64 60000000, i64 0, i32 81 }, %22 { i64 0, i64 0, i32 63 }], align 16
@1145 = internal global [40 x i8] zeroinitializer, align 16
@1146 = internal global [40 x i8] zeroinitializer, align 16
@1147 = internal unnamed_addr global i1 false, align 4
@1148 = private unnamed_addr constant [73 x i8] c"SYNC with master, discarding bytes of bulk transfer until EOF marker...\0A\00", align 1
@1149 = private unnamed_addr constant [61 x i8] c"SYNC with master, discarding %llu bytes of bulk transfer...\0A\00", align 1
@1150 = private unnamed_addr constant [41 x i8] c"Error reading RDB payload while SYNCing\0A\00", align 1
@1151 = private unnamed_addr constant [59 x i8] c"SYNC done after %llu bytes. Logging commands from master.\0A\00", align 1
@1152 = private unnamed_addr constant [4 x i8] c"ACK\00", align 1
@1153 = private unnamed_addr constant [42 x i8] c"SYNC done. Logging commands from master.\0A\00", align 1
@1154 = private unnamed_addr constant [6 x i8] c"MOVED\00", align 1
@1155 = private unnamed_addr constant [4 x i8] c"ASK\00", align 1
@1156 = private unnamed_addr constant [45 x i8] c"-> Redirected to slot [%d] located at %s:%d\0A\00", align 1
@1157 = private unnamed_addr constant [12 x i8] c"(error) %s\0A\00", align 1
@1158 = private unnamed_addr constant [16 x i8] c"(integer) %lld\0A\00", align 1
@1159 = private unnamed_addr constant [13 x i8] c"(double) %s\0A\00", align 1
@1160 = private unnamed_addr constant [7 x i8] c"(nil)\0A\00", align 1
@1161 = private unnamed_addr constant [8 x i8] c"(true)\0A\00", align 1
@1162 = private unnamed_addr constant [9 x i8] c"(false)\0A\00", align 1
@1163 = private unnamed_addr constant [15 x i8] c"(empty array)\0A\00", align 1
@1164 = private unnamed_addr constant [14 x i8] c"(empty hash)\0A\00", align 1
@1165 = private unnamed_addr constant [13 x i8] c"(empty set)\0A\00", align 1
@1166 = private unnamed_addr constant [24 x i8] c"(empty aggregate type)\0A\00", align 1
@1167 = private unnamed_addr constant [12 x i8] c"%%s%%%ud%c \00", align 1
@1168 = private unnamed_addr constant [5 x i8] c" => \00", align 1
@1169 = private unnamed_addr constant [7 x i8] c"ERROR,\00", align 1
@1170 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@1171 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@1172 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@1173 = private unnamed_addr constant [14 x i8] c"node->context\00", align 1
@1174 = private unnamed_addr constant [34 x i8] c"void getRDB(clusterManagerNode *)\00", align 1
@1175 = internal global [40 x i8] zeroinitializer, align 16
@1176 = internal global [40 x i8] zeroinitializer, align 16
@1177 = internal unnamed_addr global i1 false, align 4
@1178 = private unnamed_addr constant [78 x i8] c"SYNC sent to master, writing bytes of bulk transfer until EOF marker to '%s'\0A\00", align 1
@1179 = private unnamed_addr constant [49 x i8] c"SYNC sent to master, writing %llu bytes to '%s'\0A\00", align 1
@1180 = private unnamed_addr constant [24 x i8] c"Error opening '%s': %s\0A\00", align 1
@1181 = private unnamed_addr constant [43 x i8] c"I/O Error reading RDB payload from socket\0A\00", align 1
@1182 = private unnamed_addr constant [32 x i8] c"Error writing data to file: %s\0A\00", align 1
@1183 = private unnamed_addr constant [12 x i8] c"short write\00", align 1
@1184 = private unnamed_addr constant [23 x i8] c"ftruncate failed: %s.\0A\00", align 1
@1185 = private unnamed_addr constant [49 x i8] c"Transfer finished with success after %llu bytes\0A\00", align 1
@1186 = private unnamed_addr constant [33 x i8] c"Transfer finished with success.\0A\00", align 1
@1187 = private unnamed_addr constant [42 x i8] c"config.cluster_manager_command.backup_dir\00", align 1
@1188 = private unnamed_addr constant [59 x i8] c"sds clusterManagerGetNodeRDBFilename(clusterManagerNode *)\00", align 1
@1189 = private unnamed_addr constant [24 x i8] c"redis-node-%s-%d-%s.rdb\00", align 1
@1190 = private unnamed_addr constant [47 x i8] c"Can't set the socket in non blocking mode: %s\0A\00", align 1
@1191 = private unnamed_addr constant [35 x i8] c"Error reading from the server: %s\0A\00", align 1
@1192 = private unnamed_addr constant [35 x i8] c"Error reading replies from server\0A\00", align 1
@1193 = private unnamed_addr constant [33 x i8] c"Error writing to the server: %s\0A\00", align 1
@1194 = private unnamed_addr constant [44 x i8] c"\0D\0A*2\0D\0A$4\0D\0AECHO\0D\0A$20\0D\0A01234567890123456789\0D\0A\00", align 16
@1195 = private unnamed_addr constant [30 x i8] c"Error reading from stdin: %s\0A\00", align 1
@1196 = private unnamed_addr constant [37 x i8] c"No replies for %d seconds: exiting.\0A\00", align 1
@1197 = private unnamed_addr constant [29 x i8] c"errors: %lld, replies: %lld\0A\00", align 1
@1198 = internal global %4 { i64 (i8*)* @1369, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @1370, void (i8*, i8*)* null, void (i8*, i8*)* @type_free }, align 8
@1199 = private unnamed_addr constant [38 x i8] c"Failed to allocate storage for keys!\0A\00", align 1
@1200 = private unnamed_addr constant [56 x i8] c"[%05.2f%%] Biggest %-6s found so far '%s' with %llu %s\0A\00", align 1
@1201 = private unnamed_addr constant [36 x i8] c"Failed to allocate memory for key!\0A\00", align 1
@1202 = private unnamed_addr constant [37 x i8] c"[%05.2f%%] Sampled %llu keys so far\0A\00", align 1
@1203 = private unnamed_addr constant [36 x i8] c"Sampled %llu keys in the keyspace!\0A\00", align 1
@1204 = private unnamed_addr constant [51 x i8] c"Total key length in bytes is %llu (avg len %.2f)\0A\0A\00", align 1
@1205 = private unnamed_addr constant [36 x i8] c"Biggest %6s found '%s' has %llu %s\0A\00", align 1
@1206 = private unnamed_addr constant [57 x i8] c"%llu %ss with %llu %s (%05.2f%% of keys, avg size %.2f)\0A\00", align 1
@1207 = private unnamed_addr constant [28 x i8] c"Couldn't determine DBSIZE!\0A\00", align 1
@1208 = private unnamed_addr constant [10 x i8] c"SCAN %llu\00", align 1
@1209 = private unnamed_addr constant [16 x i8] c"SCAN error: %s\0A\00", align 1
@1210 = private unnamed_addr constant [31 x i8] c"Non ARRAY response from SCAN!\0A\00", align 1
@1211 = private unnamed_addr constant [34 x i8] c"Invalid element count from SCAN!\0A\00", align 1
@1212 = private unnamed_addr constant [46 x i8] c"reply->element[0]->type == REDIS_REPLY_STRING\00", align 1
@1213 = private unnamed_addr constant [43 x i8] c"redisReply *sendScan(unsigned long long *)\00", align 1
@1214 = private unnamed_addr constant [45 x i8] c"reply->element[1]->type == REDIS_REPLY_ARRAY\00", align 1
@1215 = private unnamed_addr constant [8 x i8] c"TYPE %s\00", align 1
@1216 = private unnamed_addr constant [42 x i8] c"Error getting type for key '%s' (%d: %s)\0A\00", align 1
@1217 = private unnamed_addr constant [28 x i8] c"TYPE returned an error: %s\0A\00", align 1
@1218 = private unnamed_addr constant [47 x i8] c"Invalid reply type (%d) for TYPE on key '%s'!\0A\00", align 1
@1219 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@1220 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@1221 = private unnamed_addr constant [9 x i8] c"%s %s %s\00", align 1
@1222 = private unnamed_addr constant [7 x i8] c"MEMORY\00", align 1
@1223 = private unnamed_addr constant [6 x i8] c"USAGE\00", align 1
@1224 = private unnamed_addr constant [20 x i8] c"%s %s %s SAMPLES %u\00", align 1
@1225 = private unnamed_addr constant [42 x i8] c"Error getting size for key '%s' (%d: %s)\0A\00", align 1
@1226 = private unnamed_addr constant [53 x i8] c"Warning:  %s on '%s' failed (may have changed type)\0A\00", align 1
@1227 = private unnamed_addr constant [56 x i8] c"[%05.2f%%] Hot key '%s' found so far with counter %llu\0A\00", align 1
@1228 = private unnamed_addr constant [46 x i8] c"hot key found with counter: %llu\09keyname: %s\0A\00", align 1
@1229 = private unnamed_addr constant [15 x i8] c"OBJECT freq %s\00", align 1
@1230 = private unnamed_addr constant [42 x i8] c"Error getting freq for key '%s' (%d: %s)\0A\00", align 1
@1231 = private unnamed_addr constant [61 x i8] c"Warning: OBJECT freq on '%s' failed (may have been deleted)\0A\00", align 1
@1232 = private unnamed_addr constant [11 x i8] c"ERROR: %s\0A\00", align 1
@1233 = private unnamed_addr constant [10 x i8] c"db%d:keys\00", align 1
@1234 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@1235 = private unnamed_addr constant [6 x i8] c"%-11s\00", align 1
@1236 = private unnamed_addr constant [12 x i8] c"used_memory\00", align 1
@1237 = private unnamed_addr constant [5 x i8] c"%-8s\00", align 1
@1238 = private unnamed_addr constant [18 x i8] c"connected_clients\00", align 1
@1239 = private unnamed_addr constant [6 x i8] c" %-8s\00", align 1
@1240 = private unnamed_addr constant [16 x i8] c"blocked_clients\00", align 1
@1241 = private unnamed_addr constant [25 x i8] c"total_commands_processed\00", align 1
@1242 = private unnamed_addr constant [11 x i8] c"%ld (+%ld)\00", align 1
@1243 = private unnamed_addr constant [6 x i8] c"%-19s\00", align 1
@1244 = private unnamed_addr constant [27 x i8] c"total_connections_received\00", align 1
@1245 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@1246 = private unnamed_addr constant [19 x i8] c"bgsave_in_progress\00", align 1
@1247 = private unnamed_addr constant [24 x i8] c"aof_rewrite_in_progress\00", align 1
@1248 = private unnamed_addr constant [8 x i8] c"loading\00", align 1
@1249 = private unnamed_addr constant [4 x i8] c"AOF\00", align 1
@1250 = private unnamed_addr constant [9 x i8] c"SAVE+AOF\00", align 1
@1251 = private unnamed_addr constant [5 x i8] c"LOAD\00", align 1
@1252 = private unnamed_addr constant [19 x i8] c"SCAN %llu MATCH %s\00", align 1
@1253 = private unnamed_addr constant [10 x i8] c"SET %s %s\00", align 1
@1254 = private unnamed_addr constant [7 x i8] c"GET %s\00", align 1
@1255 = private unnamed_addr constant [27 x i8] c"I/O error during LRU test\0A\00", align 1
@1256 = private unnamed_addr constant [61 x i8] c"%lld Gets/sec | Hits: %lld (%.2f%%) | Misses: %lld (%.2f%%)\0A\00", align 1
@1257 = private unnamed_addr constant [40 x i8] c"Max latency so far: %lld microseconds.\0A\00", align 1
@1258 = internal global i32 0, align 4
@1259 = private unnamed_addr constant [79 x i8] c"\0A%lld total runs (avg latency: %.4f microseconds / %.2f nanoseconds per run).\0A\00", align 1
@1260 = private unnamed_addr constant [55 x i8] c"Worst run took %.0fx longer than the average latency.\0A\00", align 1
@1261 = private unnamed_addr constant [18 x i8] c"REDISCLI_HISTFILE\00", align 1
@1262 = private unnamed_addr constant [18 x i8] c".rediscli_history\00", align 1
@1263 = private unnamed_addr constant [16 x i8] c"not connected> \00", align 1
@1264 = private unnamed_addr constant [48 x i8] c"Invalid redis-cli repeat command option value.\0A\00", align 1
@1265 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@1266 = private unnamed_addr constant [4 x i8] c"acl\00", align 1
@1267 = private unnamed_addr constant [8 x i8] c"setuser\00", align 1
@1268 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@1269 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@1270 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@1271 = private unnamed_addr constant [42 x i8] c"Use 'restart' only in Lua debugging mode.\00", align 1
@1272 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@1273 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@1274 = private unnamed_addr constant [35 x i8] c"\0A(Lua debugging session ended%s)\0A\0A\00", align 1
@1275 = private unnamed_addr constant [32 x i8] c" -- dataset changes rolled back\00", align 1
@1276 = private unnamed_addr constant [9 x i8] c"(%.2fs)\0A\00", align 1
@1277 = internal unnamed_addr global i32 0, align 4
@1278 = internal unnamed_addr global %23* null, align 8
@1279 = private unnamed_addr constant [4 x i8] c"@%s\00", align 1
@1280 = internal unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @740, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @742, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1282, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1283, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1284, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1286, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1287, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1288, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1289, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1290, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i32 0, i32 0)], align 16
@1281 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@1282 = private unnamed_addr constant [11 x i8] c"sorted_set\00", align 1
@1283 = private unnamed_addr constant [7 x i8] c"pubsub\00", align 1
@1284 = private unnamed_addr constant [13 x i8] c"transactions\00", align 1
@1285 = private unnamed_addr constant [11 x i8] c"connection\00", align 1
@1286 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@1287 = private unnamed_addr constant [10 x i8] c"scripting\00", align 1
@1288 = private unnamed_addr constant [12 x i8] c"hyperloglog\00", align 1
@1289 = private unnamed_addr constant [8 x i8] c"cluster\00", align 1
@1290 = private unnamed_addr constant [4 x i8] c"geo\00", align 1
@1291 = private unnamed_addr constant [5 x i8] c"key \00", align 1
@1292 = private unnamed_addr constant [5 x i8] c"arg \00", align 1
@1293 = private unnamed_addr constant [14 x i8] c"...options...\00", align 1
@1294 = private unnamed_addr constant [19 x i8] c"Help not available\00", align 1
@1295 = private unnamed_addr constant [10 x i8] c"not known\00", align 1
@1296 = private unnamed_addr constant [6 x i8] c"help \00", align 1
@1297 = private unnamed_addr constant [6 x i8] c"eval \00", align 1
@1298 = private unnamed_addr constant [3 x i8] c"e \00", align 1
@1299 = private unnamed_addr constant [7 x i8] c"lolwut\00", align 1
@1300 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@1301 = private unnamed_addr constant [8 x i8] c"htstats\00", align 1
@1302 = private unnamed_addr constant [12 x i8] c"htstats-key\00", align 1
@1303 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@1304 = private unnamed_addr constant [13 x i8] c"malloc-stats\00", align 1
@1305 = private unnamed_addr constant [7 x i8] c"doctor\00", align 1
@1306 = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@1307 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@1308 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@1309 = private unnamed_addr constant [6 x i8] c"graph\00", align 1
@1310 = private unnamed_addr constant [6 x i8] c"proxy\00", align 1
@1311 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@1312 = private unnamed_addr constant [8 x i8] c"monitor\00", align 1
@1313 = private unnamed_addr constant [10 x i8] c"subscribe\00", align 1
@1314 = private unnamed_addr constant [11 x i8] c"psubscribe\00", align 1
@1315 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@1316 = private unnamed_addr constant [6 x i8] c"psync\00", align 1
@1317 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@1318 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@1319 = private unnamed_addr constant [9 x i8] c"argc > 0\00", align 1
@1320 = private unnamed_addr constant [33 x i8] c"void cliOutputHelp(int, char **)\00", align 1
@1321 = private unnamed_addr constant [385 x i8] c"redis-cli %s\0ATo get help about Redis commands type:\0A      \22help @<group>\22 to get a list of commands in <group>\0A      \22help <command>\22 for help on <command>\0A      \22help <tab>\22 to get a list of possible help topics\0A      \22quit\22 to exit\0A\0ATo set redis-cli preferences:\0A      \22:set hints\22 enable online hints\0A      \22:set nohints\22 disable online hints\0ASet your preferences in ~/.redisclirc\0A\00", align 1
@1322 = private unnamed_addr constant [29 x i8] c"\0D\0A  \1B[1m%s\1B[0m \1B[90m%s\1B[0m\0D\0A\00", align 1
@1323 = private unnamed_addr constant [25 x i8] c"  \1B[33msummary:\1B[0m %s\0D\0A\00", align 1
@1324 = private unnamed_addr constant [23 x i8] c"  \1B[33msince:\1B[0m %s\0D\0A\00", align 1
@1325 = private unnamed_addr constant [23 x i8] c"  \1B[33mgroup:\1B[0m %s\0D\0A\00", align 1
@1326 = private unnamed_addr constant [26 x i8] c"Can't open file '%s': %s\0A\00", align 1
@1327 = private unnamed_addr constant [18 x i8] c"SCRIPT DEBUG sync\00", align 1
@1328 = private unnamed_addr constant [17 x i8] c"SCRIPT DEBUG yes\00", align 1
@1329 = private unnamed_addr constant [15 x i8] c"lua debugger> \00", align 1
@1330 = private unnamed_addr constant [28 x i8] c"Reading from standard input\00", align 1
@.0 = internal unnamed_addr global i1 false, align 4
@.0.1 = internal unnamed_addr global %24* null, align 8
@.1 = internal unnamed_addr global %24* null, align 8
@.2 = internal unnamed_addr global i32 0, align 8
@str = private unnamed_addr constant [25 x i8] c"Adding extra replicas...\00"
@str.2 = private unnamed_addr constant [16 x i8] c"  Source nodes:\00"
@str.3 = private unnamed_addr constant [20 x i8] c"  Destination node:\00"
@str.4 = private unnamed_addr constant [19 x i8] c"  Resharding plan:\00"
@str.5 = private unnamed_addr constant [38 x i8] c"Please enter all the source node IDs.\00"
@str.6 = private unnamed_addr constant [70 x i8] c"  Type 'all' to use all the nodes as source nodes for the hash slots.\00"
@str.7 = private unnamed_addr constant [57 x i8] c"  Type 'done' once you entered all the source nodes IDs.\00"
@str.10 = private unnamed_addr constant [46 x i8] c". - * #          .01 .125 .25 .5 milliseconds\00"
@str.11 = private unnamed_addr constant [46 x i8] c"1,2,3,...,9      from 1 to 9     milliseconds\00"
@str.12 = private unnamed_addr constant [46 x i8] c"A,B,C,D,E        10,20,30,40,50  milliseconds\00"
@str.13 = private unnamed_addr constant [46 x i8] c"F,G,H,I,J        .1,.2,.3,.4,.5       seconds\00"
@str.14 = private unnamed_addr constant [46 x i8] c"K,L,M,N,O,P,Q,?  1,2,4,8,16,30,60,>60 seconds\00"
@str.15 = private unnamed_addr constant [5 x i8] c"\1B[0m\00", align 1
@str.16 = private unnamed_addr constant [46 x i8] c"---------------------------------------------\00"
@str.17 = private unnamed_addr constant [52 x i8] c"All data transferred. Waiting for the last reply...\00"
@str.18 = private unnamed_addr constant [33 x i8] c"Last reply received from server.\00"
@str.19 = private unnamed_addr constant [64 x i8] c"\0A# Scanning the entire keyspace to find biggest keys as well as\00"
@str.23 = private unnamed_addr constant [60 x i8] c"\0A# Scanning the entire keyspace to find hot keys as well as\00"
@str.24 = private unnamed_addr constant [67 x i8] c"# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\00"
@str.25 = private unnamed_addr constant [47 x i8] c"# per 100 SCAN commands (not usually needed).\0A\00"
@str.26 = private unnamed_addr constant [27 x i8] c"\0A-------- summary -------\0A\00"
@str.27 = private unnamed_addr constant [156 x i8] c"------- data ------ --------------------- load -------------------- - child -\0Akeys       mem      clients blocked requests            connections          \00"
@str.28 = private unnamed_addr constant [10 x i8] c"I/O error\00"
@str.29 = private unnamed_addr constant [20 x i8] c"Invalid argument(s)\00"
@str.30 = private unnamed_addr constant [36 x i8] c"Eval debugging session can't start:\00"
@str.31 = private unnamed_addr constant [170 x i8] c"Lua debugging session started, please use:\0Aquit    -- End the session.\0Arestart -- Restart the script in debug mode again.\0Ahelp    -- Show Lua script debugging commands.\0A\00"
@str.32 = private unnamed_addr constant [32 x i8] c"Waiting for the cluster to join\00"
@str.33 = private unnamed_addr constant [59 x i8] c"The following uncovered slots have keys in multiple nodes:\00"
@str.34 = private unnamed_addr constant [58 x i8] c"The following uncovered slots have keys in just one node:\00"
@str.35 = private unnamed_addr constant [63 x i8] c"The following uncovered slots have no keys across the cluster:\00"
@str.36 = private unnamed_addr constant [56 x i8] c"Entering replica output mode...  (press Ctrl-C to quit)\00"
@str.37 = private unnamed_addr constant [43 x i8] c"Reading messages... (press Ctrl-C to quit)\00"
@str.38 = private unnamed_addr constant [2 x i8] c"\0D\00"

; Function Attrs: nounwind uwtable
define dso_local void @_serverAssert(i8* %0, i8* %1, i32 %2) local_unnamed_addr #0 {
  %4 = load %1*, %1** @stderr, align 8
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @665, i64 0, i64 0), i64 24, i64 1, %1* %4) #16
  %6 = load %1*, %1** @stderr, align 8
  %7 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @666, i64 0, i64 0), i8* %1, i32 %2, i8* %0) #16
  store i8 120, i8* inttoptr (i64 -1 to i8*), align 1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @fprintf(%1* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @isColorTerm() local_unnamed_addr #2 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @667, i64 0, i64 0)) #14
  %2 = icmp eq i8* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = tail call i8* @strstr(i8* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @668, i64 0, i64 0)) #17
  %5 = icmp ne i8* %4, null
  %6 = zext i1 %5 to i32
  br label %7

7:                                                ; preds = %0, %3
  %8 = phi i32 [ 0, %0 ], [ %6, %3 ]
  ret i32 %8
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @getenv(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define dso_local i8* @sdscatcolor(i8* %0, i8* %1, i64 %2, i8* readonly %3) local_unnamed_addr #0 {
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @667, i64 0, i64 0)) #14
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @strstr(i8* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @668, i64 0, i64 0)) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %4, %7
  %11 = tail call i8* @sdscatlen(i8* %0, i8* %1, i64 %2) #14
  br label %39

12:                                               ; preds = %7
  %13 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i64 0, i64 0)) #17
  %14 = icmp ne i8* %13, null
  %15 = zext i1 %14 to i32
  %16 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @670, i64 0, i64 0)) #17
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %34

18:                                               ; preds = %12
  %19 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @671, i64 0, i64 0)) #17
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @672, i64 0, i64 0)) #17
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @673, i64 0, i64 0)) #17
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @674, i64 0, i64 0)) #17
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @675, i64 0, i64 0)) #17
  %32 = icmp eq i8* %31, null
  %33 = select i1 %32, i32 37, i32 36
  br label %34

34:                                               ; preds = %30, %27, %24, %21, %18, %12
  %35 = phi i32 [ 31, %12 ], [ 32, %18 ], [ 33, %21 ], [ 34, %24 ], [ 35, %27 ], [ %33, %30 ]
  %36 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @677, i64 0, i64 0), i32 %15, i32 %35) #14
  %37 = tail call i8* @sdscatlen(i8* %36, i8* %1, i64 %2) #14
  %38 = tail call i8* @sdscat(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i64 0, i64 0)) #14
  br label %39

39:                                               ; preds = %34, %10
  %40 = phi i8* [ %38, %34 ], [ %11, %10 ]
  ret i8* %40
}

declare dso_local i8* @sdscatlen(i8*, i8*, i64) local_unnamed_addr #5

declare dso_local i8* @sdscatfmt(i8*, i8*, ...) local_unnamed_addr #5

declare dso_local i8* @sdscat(i8*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i8* @sdsCatColorizedLdbReply(i8* %0, i8* %1, i64 %2) local_unnamed_addr #0 {
  %4 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @683, i64 0, i64 0)) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @682, i64 0, i64 0)) #17
  %8 = icmp eq i8* %7, null
  %9 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @681, i64 0, i64 0)) #17
  %10 = icmp eq i8* %9, null
  %11 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @680, i64 0, i64 0)) #17
  %12 = icmp eq i8* %11, null
  %13 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @679, i64 0, i64 0)) #17
  %14 = icmp eq i8* %13, null
  %15 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @678, i64 0, i64 0)) #17
  %16 = icmp eq i8* %15, null
  %17 = select i1 %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @676, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i64 0, i64 0)
  %18 = select i1 %14, i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @671, i64 0, i64 0)
  %19 = select i1 %12, i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @675, i64 0, i64 0)
  %20 = select i1 %10, i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @670, i64 0, i64 0)
  %21 = select i1 %8, i8* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i64 0, i64 0)
  %22 = tail call i8* @strstr(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @684, i64 0, i64 0)) #17
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %6, %3
  br label %25

25:                                               ; preds = %6, %24
  %26 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @674, i64 0, i64 0), %24 ], [ %21, %6 ]
  %27 = icmp ugt i64 %2, 4
  br i1 %27, label %28, label %47

28:                                               ; preds = %25
  %29 = tail call i16** @__ctype_b_loc() #18
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds i8, i8* %1, i64 3
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i64
  %34 = getelementptr inbounds i16, i16* %30, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = and i16 %35, 2048
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds i8, i8* %1, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 62
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %1, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 35
  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i64 0, i64 0), i8* %26
  br label %47

47:                                               ; preds = %42, %38, %28, %25
  %48 = phi i8* [ %26, %28 ], [ %26, %25 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @672, i64 0, i64 0), %38 ], [ %46, %42 ]
  %49 = tail call i8* @sdscatcolor(i8* %0, i8* %1, i64 %2, i8* %48)
  ret i8* %49
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define dso_local void @cliSetPreferences(i8** nocapture readonly %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = load i8*, i8** %0, align 8
  %5 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @685, i64 0, i64 0)) #17
  %6 = icmp eq i32 %5, 0
  %7 = icmp sgt i32 %1, 1
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %23

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8*, i8** %0, i64 1
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i32 @strcasecmp(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @686, i64 0, i64 0)) #17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i1 true, i1* @.0, align 4
  br label %27

15:                                               ; preds = %9
  %16 = tail call i32 @strcasecmp(i8* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @687, i64 0, i64 0)) #17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  store i1 false, i1* @.0, align 4
  br label %27

19:                                               ; preds = %15
  %20 = icmp eq i32 %2, 0
  %21 = select i1 %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @690, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0)
  %22 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @688, i64 0, i64 0), i8* %21, i8* %11)
  br label %27

23:                                               ; preds = %3
  %24 = icmp eq i32 %2, 0
  %25 = select i1 %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @690, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0)
  %26 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @691, i64 0, i64 0), i8* %25, i8* %4)
  br label %27

27:                                               ; preds = %14, %19, %18, %23
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @cliLoadPreferences() local_unnamed_addr #0 {
  %1 = alloca [1024 x i8], align 16
  %2 = alloca i32, align 4
  %3 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @692, i64 0, i64 0)) #14
  %4 = icmp eq i8* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %0
  %6 = load i8, i8* %3, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @760, i64 0, i64 0), i8* nonnull %3) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %8
  %12 = tail call i8* @sdsnew(i8* nonnull %3) #14
  br label %22

13:                                               ; preds = %5, %0
  %14 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @761, i64 0, i64 0)) #14
  %15 = icmp eq i8* %14, null
  br i1 %15, label %65, label %16

16:                                               ; preds = %13
  %17 = load i8, i8* %14, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %16
  %20 = tail call i8* @sdsempty() #14
  %21 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @762, i64 0, i64 0), i8* nonnull %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @693, i64 0, i64 0)) #14
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i8* [ %12, %11 ], [ %21, %19 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %65, label %25

25:                                               ; preds = %22
  %26 = tail call %1* @fopen64(i8* nonnull %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @694, i64 0, i64 0))
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %27) #14
  %28 = icmp eq %1* %26, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %25
  %30 = call i8* @fgets(i8* nonnull %27, i32 1024, %1* nonnull %26)
  %31 = icmp eq i8* %30, null
  br i1 %31, label %62, label %32

32:                                               ; preds = %29
  %33 = bitcast i32* %2 to i8*
  br label %34

34:                                               ; preds = %32, %58
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #14
  %35 = call i8** @sdssplitargs(i8* nonnull %27, i32* nonnull %2) #14
  %36 = load i32, i32* %2, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %58

38:                                               ; preds = %34
  %39 = load i8*, i8** %35, align 8
  %40 = call i32 @strcasecmp(i8* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @685, i64 0, i64 0)) #17
  %41 = icmp eq i32 %40, 0
  %42 = icmp ne i32 %36, 1
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %56

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8*, i8** %35, i64 1
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 @strcasecmp(i8* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @686, i64 0, i64 0)) #17
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store i1 true, i1* @.0, align 4
  br label %58

50:                                               ; preds = %44
  %51 = call i32 @strcasecmp(i8* %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @687, i64 0, i64 0)) #17
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  store i1 false, i1* @.0, align 4
  br label %58

54:                                               ; preds = %50
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @688, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @690, i64 0, i64 0), i8* %46) #14
  br label %58

56:                                               ; preds = %38
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @691, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @690, i64 0, i64 0), i8* %39) #14
  br label %58

58:                                               ; preds = %56, %54, %53, %49, %34
  %59 = load i32, i32* %2, align 4
  call void @sdsfreesplitres(i8** %35, i32 %59) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #14
  %60 = call i8* @fgets(i8* nonnull %27, i32 1024, %1* nonnull %26)
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %34

62:                                               ; preds = %58, %29
  %63 = call i32 @fclose(%1* nonnull %26)
  br label %64

64:                                               ; preds = %25, %62
  call void @sdsfree(i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %27) #14
  br label %65

65:                                               ; preds = %13, %16, %8, %22, %64
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias %1* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local i8* @fgets(i8*, i32, %1* nocapture) local_unnamed_addr #1

declare dso_local i8** @sdssplitargs(i8*, i32*) local_unnamed_addr #5

declare dso_local void @sdsfreesplitres(i8**, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i32 @fclose(%1* nocapture) local_unnamed_addr #1

declare dso_local void @sdsfree(i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal i32 @1331(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca [4 x i8], align 1
  %4 = alloca %26, align 8
  %5 = alloca %27**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %26, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %26, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = tail call %24* @listCreate() #14
  store %24* %12, %24** @.0.1, align 8
  %13 = icmp sgt i32 %0, 0
  br i1 %13, label %14, label %131

14:                                               ; preds = %2
  %15 = bitcast i8** %8 to i8*
  %16 = sext i32 %0 to i64
  br label %17

17:                                               ; preds = %14, %124
  %18 = phi i64 [ 0, %14 ], [ %127, %124 ]
  %19 = getelementptr inbounds i8*, i8** %1, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = call i8* @strrchr(i8* %20, i32 64) #17
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  store i8 0, i8* %21, align 1
  br label %24

24:                                               ; preds = %17, %23
  %25 = call i8* @strrchr(i8* %20, i32 58) #17
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load %1*, %1** @stderr, align 8
  %29 = call i32 (%1*, i8*, ...) @fprintf(%1* %28, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @763, i64 0, i64 0), i8* %20) #16
  br label %963

30:                                               ; preds = %24
  store i8 0, i8* %25, align 1
  %31 = getelementptr inbounds i8, i8* %25, i64 1
  %32 = call i64 @strtol(i8* nocapture nonnull %31, i8** null, i32 10) #14
  %33 = trunc i64 %32 to i32
  %34 = call i8* @zmalloc(i64 16520) #14
  %35 = bitcast i8* %34 to %27*
  %36 = getelementptr i8, i8* %34, i64 16
  %37 = bitcast i8* %36 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #14
  store i8* %20, i8** %37, align 8
  %38 = getelementptr i8, i8* %34, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 %33, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 32
  %41 = getelementptr inbounds i8, i8* %34, i64 64
  %42 = getelementptr inbounds i8, i8* %34, i64 16480
  %43 = getelementptr inbounds i8, i8* %34, i64 16472
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %34, i64 16512
  %46 = bitcast i8* %45 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 28, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 20, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %46, align 8
  %47 = getelementptr inbounds i8, i8* %34, i64 16516
  %48 = bitcast i8* %47 to i32*
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %34, i64 84
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 0, i64 16388, i1 false) #14
  %50 = call fastcc i32 @1358(%27* %35)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %30
  %53 = bitcast i8* %34 to %27*
  call fastcc void @1359(%27* %53)
  br label %963

54:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  store i8* null, i8** %8, align 8
  %55 = bitcast i8* %34 to %9**
  %56 = load %9*, %9** %55, align 8
  %57 = call i8* (%9*, i8*, ...) @redisCommand(%9* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0)) #14
  store i8* null, i8** %8, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %80, label %59

59:                                               ; preds = %54
  %60 = bitcast i8* %57 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 6
  br i1 %62, label %63, label %73

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %57, i64 24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  %68 = call i8* @zmalloc(i64 %67) #14
  store i8* %68, i8** %8, align 8
  %69 = getelementptr inbounds i8, i8* %57, i64 32
  %70 = bitcast i8* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = call i8* @strcpy(i8* %68, i8* %71) #14
  call void @freeReplyObject(i8* nonnull %57) #14
  br label %80

73:                                               ; preds = %59
  %74 = getelementptr inbounds i8, i8* %57, i64 32
  %75 = bitcast i8* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = call fastcc i64 @1367(i8* %76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @781, i64 0, i64 0)) #14
  %78 = trunc i64 %77 to i32
  call void @freeReplyObject(i8* nonnull %57) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %54, %73, %63
  %81 = bitcast i8* %38 to i32*
  %82 = bitcast i8* %36 to i8**
  %83 = bitcast i8* %34 to %27*
  %84 = load i8*, i8** %8, align 8
  %85 = load i8*, i8** %82, align 8
  %86 = load i32, i32* %81, align 8
  %87 = icmp eq i8* %84, null
  %88 = select i1 %87, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @782, i64 0, i64 0), i8* %84
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @783, i64 0, i64 0), i8* %85, i32 %86, i8* %88) #14
  %89 = load i8*, i8** %8, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %80
  call void @zfree(i8* nonnull %89) #14
  br label %92

92:                                               ; preds = %80, %91
  call fastcc void @1359(%27* nonnull %83)
  br label %123

93:                                               ; preds = %73
  store i8* null, i8** %8, align 8
  %94 = call fastcc i32 @1360(%27* nonnull %35, i32 0, i8** nonnull %8)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %107

96:                                               ; preds = %93
  %97 = bitcast i8* %34 to %27*
  %98 = load i8*, i8** %8, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = bitcast i8* %38 to i32*
  %102 = bitcast i8* %36 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = load i32, i32* %101, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %103, i32 %104, i8* nonnull %98)
  %105 = load i8*, i8** %8, align 8
  call void @zfree(i8* %105) #14
  br label %106

106:                                              ; preds = %96, %100
  call fastcc void @1359(%27* nonnull %97)
  br label %123

107:                                              ; preds = %93
  store i8* null, i8** %8, align 8
  %108 = call fastcc i32 @1362(%27* nonnull %35, i8** nonnull %8)
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %124

110:                                              ; preds = %107
  %111 = bitcast i8* %34 to %27*
  %112 = bitcast i8* %36 to i8**
  %113 = bitcast i8* %38 to i32*
  %114 = load i8*, i8** %8, align 8
  %115 = load i8*, i8** %112, align 8
  %116 = load i32, i32* %113, align 8
  %117 = icmp eq i8* %114, null
  %118 = select i1 %117, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @800, i64 0, i64 0), i8* %114
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @783, i64 0, i64 0), i8* %115, i32 %116, i8* %118) #14
  %119 = load i8*, i8** %8, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %122, label %121

121:                                              ; preds = %110
  call void @zfree(i8* nonnull %119) #14
  br label %122

122:                                              ; preds = %110, %121
  call fastcc void @1359(%27* nonnull %111)
  br label %123

123:                                              ; preds = %122, %106, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  br label %963

124:                                              ; preds = %107
  %125 = load %24*, %24** @.0.1, align 8
  %126 = call %24* @listAddNodeTail(%24* %125, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  %127 = add nuw nsw i64 %18, 1
  %128 = icmp slt i64 %127, %16
  br i1 %128, label %17, label %129

129:                                              ; preds = %124
  %130 = load %24*, %24** @.0.1, align 8
  br label %131

131:                                              ; preds = %129, %2
  %132 = phi %24* [ %130, %129 ], [ %12, %2 ]
  %133 = getelementptr inbounds %24, %24* %132, i64 0, i32 5
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 4), align 4
  %137 = add nsw i32 %136, 1
  %138 = sdiv i32 %135, %137
  %139 = icmp slt i32 %138, 3
  br i1 %139, label %140, label %142

140:                                              ; preds = %131
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @765, i64 0, i64 0), i32 %135, i32 %136)
  %141 = mul nsw i32 %137, 3
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @766, i64 0, i64 0), i32 %141)
  br label %963

142:                                              ; preds = %131
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @767, i64 0, i64 0), i32 %135)
  %143 = shl i64 %134, 32
  %144 = ashr exact i64 %143, 32
  %145 = mul nsw i64 %144, 16520
  %146 = call i8* @zcalloc(i64 %145) #14
  %147 = bitcast i8* %146 to %27**
  %148 = ashr exact i64 %143, 29
  %149 = call i8* @zcalloc(i64 %148) #14
  %150 = bitcast i8* %149 to i8**
  %151 = mul nsw i64 %144, 24
  %152 = call i8* @zcalloc(i64 %151) #14
  %153 = bitcast i8* %152 to %28*
  %154 = bitcast %26* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #14
  %155 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %155, %26* nonnull %9) #14
  %156 = call %25* @listNext(%26* nonnull %9) #14
  %157 = icmp eq %25* %156, null
  br i1 %157, label %158, label %198

158:                                              ; preds = %266, %142
  %159 = phi i32 [ 0, %142 ], [ %236, %266 ]
  %160 = icmp sgt i32 %135, 0
  br i1 %160, label %161, label %274

161:                                              ; preds = %158
  %162 = icmp sgt i32 %159, 0
  br i1 %162, label %163, label %272

163:                                              ; preds = %161
  %164 = sext i32 %159 to i64
  br label %165

165:                                              ; preds = %194, %163
  %166 = phi i64 [ 0, %163 ], [ %195, %194 ]
  %167 = phi i32 [ 0, %163 ], [ %191, %194 ]
  %168 = getelementptr inbounds %28, %28* %153, i64 %166, i32 3
  %169 = load i32, i32* %168, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %190

171:                                              ; preds = %165
  %172 = getelementptr inbounds %28, %28* %153, i64 %166, i32 0
  %173 = getelementptr inbounds %28, %28* %153, i64 %166, i32 2
  %174 = load i32, i32* %173, align 8
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %273

176:                                              ; preds = %171
  %177 = load %27**, %27*** %172, align 8
  %178 = load %27*, %27** %177, align 8
  %179 = icmp eq %27* %178, null
  %180 = ptrtoint %27* %178 to i64
  br i1 %179, label %183, label %181

181:                                              ; preds = %176
  %182 = add nsw i32 %169, -1
  store i32 %182, i32* %168, align 4
  br label %183

183:                                              ; preds = %181, %176
  %184 = getelementptr inbounds %27*, %27** %177, i64 1
  store %27** %184, %27*** %172, align 8
  %185 = add nsw i32 %174, -1
  store i32 %185, i32* %173, align 8
  %186 = add nsw i32 %167, 1
  %187 = sext i32 %167 to i64
  %188 = getelementptr inbounds %27*, %27** %147, i64 %187
  %189 = bitcast %27** %188 to i64*
  store i64 %180, i64* %189, align 8
  br label %190

190:                                              ; preds = %183, %165
  %191 = phi i32 [ %186, %183 ], [ %167, %165 ]
  %192 = add nuw nsw i64 %166, 1
  %193 = icmp slt i64 %192, %164
  br i1 %193, label %194, label %196

194:                                              ; preds = %190, %196
  %195 = phi i64 [ %192, %190 ], [ 0, %196 ]
  br label %165

196:                                              ; preds = %190
  %197 = icmp slt i32 %191, %135
  br i1 %197, label %194, label %274

198:                                              ; preds = %142, %266
  %199 = phi %25* [ %270, %266 ], [ %156, %142 ]
  %200 = phi i32 [ %236, %266 ], [ 0, %142 ]
  %201 = getelementptr inbounds %25, %25* %199, i64 0, i32 2
  %202 = bitcast i8** %201 to %27**
  %203 = load %27*, %27** %202, align 8
  %204 = icmp sgt i32 %200, 0
  br i1 %204, label %205, label %225

205:                                              ; preds = %198
  %206 = getelementptr inbounds %27, %27* %203, i64 0, i32 2
  %207 = load i8*, i8** %206, align 8
  %208 = sext i32 %200 to i64
  br label %209

209:                                              ; preds = %205, %216
  %210 = phi i64 [ 0, %205 ], [ %217, %216 ]
  %211 = phi i32 [ 0, %205 ], [ %218, %216 ]
  %212 = getelementptr inbounds i8*, i8** %150, i64 %210
  %213 = load i8*, i8** %212, align 8
  %214 = call i32 @strcmp(i8* %213, i8* %207) #17
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %209
  %217 = add nuw nsw i64 %210, 1
  %218 = add nuw nsw i32 %211, 1
  %219 = icmp slt i64 %217, %208
  br i1 %219, label %209, label %222

220:                                              ; preds = %209
  %221 = trunc i64 %210 to i32
  br label %222

222:                                              ; preds = %216, %220
  %223 = phi i32 [ %221, %220 ], [ %218, %216 ]
  %224 = phi i1 [ false, %220 ], [ true, %216 ]
  br i1 %224, label %225, label %234

225:                                              ; preds = %198, %222
  %226 = phi i32 [ %223, %222 ], [ 0, %198 ]
  %227 = getelementptr inbounds %27, %27* %203, i64 0, i32 2
  %228 = bitcast i8** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = add nsw i32 %200, 1
  %231 = sext i32 %200 to i64
  %232 = getelementptr inbounds i8*, i8** %150, i64 %231
  %233 = bitcast i8** %232 to i64*
  store i64 %229, i64* %233, align 8
  br label %234

234:                                              ; preds = %222, %225
  %235 = phi i32 [ %223, %222 ], [ %226, %225 ]
  %236 = phi i32 [ %200, %222 ], [ %230, %225 ]
  %237 = zext i32 %235 to i64
  %238 = getelementptr inbounds %28, %28* %153, i64 %237
  %239 = getelementptr inbounds %28, %28* %238, i64 0, i32 0
  %240 = load %27**, %27*** %239, align 8
  %241 = icmp eq %27** %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %234
  %243 = getelementptr inbounds %28, %28* %153, i64 %237, i32 2
  %244 = load i32, i32* %243, align 8
  br label %253

245:                                              ; preds = %234
  %246 = call i8* @zcalloc(i64 %148) #14
  %247 = bitcast %28* %238 to i8**
  store i8* %246, i8** %247, align 8
  %248 = getelementptr inbounds %28, %28* %153, i64 %237, i32 1
  %249 = bitcast %27*** %248 to i8**
  store i8* %246, i8** %249, align 8
  %250 = getelementptr inbounds %28, %28* %153, i64 %237, i32 2
  store i32 %135, i32* %250, align 8
  %251 = getelementptr inbounds %28, %28* %153, i64 %237, i32 3
  store i32 0, i32* %251, align 4
  %252 = bitcast i8* %246 to %27**
  br label %253

253:                                              ; preds = %242, %245
  %254 = phi i32 [ %135, %245 ], [ %244, %242 ]
  %255 = phi %27** [ %252, %245 ], [ %240, %242 ]
  %256 = icmp sgt i32 %254, 0
  br i1 %256, label %258, label %257

257:                                              ; preds = %253
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @801, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 5299, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @803, i64 0, i64 0)) #19
  unreachable

258:                                              ; preds = %253
  %259 = icmp eq %27* %203, null
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @804, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 5300, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @803, i64 0, i64 0)) #19
  unreachable

261:                                              ; preds = %258
  %262 = getelementptr inbounds %28, %28* %153, i64 %237, i32 3
  %263 = load i32, i32* %262, align 4
  %264 = icmp slt i32 %263, %254
  br i1 %264, label %266, label %265

265:                                              ; preds = %261
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @805, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 5301, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @803, i64 0, i64 0)) #19
  unreachable

266:                                              ; preds = %261
  %267 = add nsw i32 %263, 1
  store i32 %267, i32* %262, align 4
  %268 = sext i32 %263 to i64
  %269 = getelementptr inbounds %27*, %27** %255, i64 %268
  store %27* %203, %27** %269, align 8
  %270 = call %25* @listNext(%26* nonnull %9) #14
  %271 = icmp eq %25* %270, null
  br i1 %271, label %158, label %198

272:                                              ; preds = %161, %272
  br label %272

273:                                              ; preds = %171
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @801, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 5286, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @806, i64 0, i64 0)) #19
  unreachable

274:                                              ; preds = %196, %158
  %275 = phi i32 [ 0, %158 ], [ %191, %196 ]
  %276 = sext i32 %138 to i64
  %277 = getelementptr inbounds %27*, %27** %147, i64 %276
  %278 = sub nsw i32 %275, %138
  %279 = sitofp i32 %138 to float
  %280 = fdiv float 1.638400e+04, %279
  %281 = icmp sgt i32 %138, 0
  br i1 %281, label %282, label %323

282:                                              ; preds = %274
  %283 = add nsw i32 %138, -1
  %284 = zext i32 %283 to i64
  %285 = zext i32 %138 to i64
  br label %286

286:                                              ; preds = %318, %282
  %287 = phi i64 [ 0, %282 ], [ %321, %318 ]
  %288 = phi i64 [ 0, %282 ], [ %320, %318 ]
  %289 = phi float [ 0.000000e+00, %282 ], [ %292, %318 ]
  %290 = getelementptr inbounds %27*, %27** %147, i64 %287
  %291 = load %27*, %27** %290, align 8
  %292 = fadd float %280, %289
  %293 = fadd float %292, -1.000000e+00
  %294 = fpext float %293 to double
  %295 = call i64 @lround(double %294) #14
  %296 = icmp sgt i64 %295, 16384
  %297 = icmp eq i64 %287, %284
  %298 = or i1 %297, %296
  %299 = select i1 %298, i64 16383, i64 %295
  %300 = icmp slt i64 %299, %288
  %301 = select i1 %300, i64 %288, i64 %299
  %302 = trunc i64 %287 to i32
  %303 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @768, i64 0, i64 0), i32 %302, i64 %288, i64 %301)
  %304 = getelementptr inbounds %27, %27* %291, i64 0, i32 12
  store i32 0, i32* %304, align 4
  %305 = shl i64 %288, 32
  %306 = ashr exact i64 %305, 32
  %307 = icmp slt i64 %301, %306
  br i1 %307, label %318, label %308

308:                                              ; preds = %286
  %309 = shl i64 %288, 32
  %310 = ashr exact i64 %309, 32
  br label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %310, %308 ], [ %316, %311 ]
  %313 = getelementptr inbounds %27, %27* %291, i64 0, i32 11, i64 %312
  store i8 1, i8* %313, align 1
  %314 = load i32, i32* %304, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %304, align 4
  %316 = add i64 %312, 1
  %317 = icmp slt i64 %301, %316
  br i1 %317, label %318, label %311

318:                                              ; preds = %311, %286
  %319 = getelementptr inbounds %27, %27* %291, i64 0, i32 10
  store i32 1, i32* %319, align 8
  %320 = add nsw i64 %301, 1
  %321 = add nuw nsw i64 %287, 1
  %322 = icmp eq i64 %321, %285
  br i1 %322, label %323, label %286

323:                                              ; preds = %318, %274
  %324 = bitcast %27** %277 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = add nsw i32 %278, -1
  %327 = icmp sgt i32 %278, 1
  %328 = sext i32 %326 to i64
  br i1 %327, label %329, label %428

329:                                              ; preds = %323
  %330 = icmp sgt i64 %328, 1
  %331 = select i1 %330, i64 %328, i64 1
  %332 = icmp ult i64 %331, 4
  br i1 %332, label %417, label %333

333:                                              ; preds = %329
  %334 = and i64 %331, 9223372036854775804
  %335 = add nsw i64 %334, -4
  %336 = lshr exact i64 %335, 2
  %337 = add nuw nsw i64 %336, 1
  %338 = and i64 %337, 3
  %339 = icmp ult i64 %335, 12
  br i1 %339, label %395, label %340

340:                                              ; preds = %333
  %341 = sub nsw i64 %337, %338
  br label %342

342:                                              ; preds = %342, %340
  %343 = phi i64 [ 0, %340 ], [ %392, %342 ]
  %344 = phi i64 [ %341, %340 ], [ %393, %342 ]
  %345 = or i64 %343, 1
  %346 = getelementptr inbounds %27*, %27** %277, i64 %345
  %347 = bitcast %27** %346 to <2 x i64>*
  %348 = load <2 x i64>, <2 x i64>* %347, align 8
  %349 = getelementptr inbounds %27*, %27** %346, i64 2
  %350 = bitcast %27** %349 to <2 x i64>*
  %351 = load <2 x i64>, <2 x i64>* %350, align 8
  %352 = getelementptr inbounds %27*, %27** %277, i64 %343
  %353 = bitcast %27** %352 to <2 x i64>*
  store <2 x i64> %348, <2 x i64>* %353, align 8
  %354 = getelementptr inbounds %27*, %27** %352, i64 2
  %355 = bitcast %27** %354 to <2 x i64>*
  store <2 x i64> %351, <2 x i64>* %355, align 8
  %356 = or i64 %343, 4
  %357 = or i64 %343, 5
  %358 = getelementptr inbounds %27*, %27** %277, i64 %357
  %359 = bitcast %27** %358 to <2 x i64>*
  %360 = load <2 x i64>, <2 x i64>* %359, align 8
  %361 = getelementptr inbounds %27*, %27** %358, i64 2
  %362 = bitcast %27** %361 to <2 x i64>*
  %363 = load <2 x i64>, <2 x i64>* %362, align 8
  %364 = getelementptr inbounds %27*, %27** %277, i64 %356
  %365 = bitcast %27** %364 to <2 x i64>*
  store <2 x i64> %360, <2 x i64>* %365, align 8
  %366 = getelementptr inbounds %27*, %27** %364, i64 2
  %367 = bitcast %27** %366 to <2 x i64>*
  store <2 x i64> %363, <2 x i64>* %367, align 8
  %368 = or i64 %343, 8
  %369 = or i64 %343, 9
  %370 = getelementptr inbounds %27*, %27** %277, i64 %369
  %371 = bitcast %27** %370 to <2 x i64>*
  %372 = load <2 x i64>, <2 x i64>* %371, align 8
  %373 = getelementptr inbounds %27*, %27** %370, i64 2
  %374 = bitcast %27** %373 to <2 x i64>*
  %375 = load <2 x i64>, <2 x i64>* %374, align 8
  %376 = getelementptr inbounds %27*, %27** %277, i64 %368
  %377 = bitcast %27** %376 to <2 x i64>*
  store <2 x i64> %372, <2 x i64>* %377, align 8
  %378 = getelementptr inbounds %27*, %27** %376, i64 2
  %379 = bitcast %27** %378 to <2 x i64>*
  store <2 x i64> %375, <2 x i64>* %379, align 8
  %380 = or i64 %343, 12
  %381 = or i64 %343, 13
  %382 = getelementptr inbounds %27*, %27** %277, i64 %381
  %383 = bitcast %27** %382 to <2 x i64>*
  %384 = load <2 x i64>, <2 x i64>* %383, align 8
  %385 = getelementptr inbounds %27*, %27** %382, i64 2
  %386 = bitcast %27** %385 to <2 x i64>*
  %387 = load <2 x i64>, <2 x i64>* %386, align 8
  %388 = getelementptr inbounds %27*, %27** %277, i64 %380
  %389 = bitcast %27** %388 to <2 x i64>*
  store <2 x i64> %384, <2 x i64>* %389, align 8
  %390 = getelementptr inbounds %27*, %27** %388, i64 2
  %391 = bitcast %27** %390 to <2 x i64>*
  store <2 x i64> %387, <2 x i64>* %391, align 8
  %392 = add i64 %343, 16
  %393 = add i64 %344, -4
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %342

395:                                              ; preds = %342, %333
  %396 = phi i64 [ 0, %333 ], [ %392, %342 ]
  %397 = icmp eq i64 %338, 0
  br i1 %397, label %415, label %398

398:                                              ; preds = %395, %398
  %399 = phi i64 [ %412, %398 ], [ %396, %395 ]
  %400 = phi i64 [ %413, %398 ], [ %338, %395 ]
  %401 = or i64 %399, 1
  %402 = getelementptr inbounds %27*, %27** %277, i64 %401
  %403 = bitcast %27** %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8
  %405 = getelementptr inbounds %27*, %27** %402, i64 2
  %406 = bitcast %27** %405 to <2 x i64>*
  %407 = load <2 x i64>, <2 x i64>* %406, align 8
  %408 = getelementptr inbounds %27*, %27** %277, i64 %399
  %409 = bitcast %27** %408 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %409, align 8
  %410 = getelementptr inbounds %27*, %27** %408, i64 2
  %411 = bitcast %27** %410 to <2 x i64>*
  store <2 x i64> %407, <2 x i64>* %411, align 8
  %412 = add i64 %399, 4
  %413 = add i64 %400, -1
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %398

415:                                              ; preds = %398, %395
  %416 = icmp eq i64 %331, %334
  br i1 %416, label %428, label %417

417:                                              ; preds = %415, %329
  %418 = phi i64 [ 0, %329 ], [ %334, %415 ]
  br label %419

419:                                              ; preds = %417, %419
  %420 = phi i64 [ %421, %419 ], [ %418, %417 ]
  %421 = add nuw nsw i64 %420, 1
  %422 = getelementptr inbounds %27*, %27** %277, i64 %421
  %423 = bitcast %27** %422 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = getelementptr inbounds %27*, %27** %277, i64 %420
  %426 = bitcast %27** %425 to i64*
  store i64 %424, i64* %426, align 8
  %427 = icmp slt i64 %421, %328
  br i1 %427, label %419, label %428

428:                                              ; preds = %419, %415, %323
  %429 = getelementptr inbounds %27*, %27** %277, i64 %328
  %430 = bitcast %27** %429 to i64*
  store i64 %325, i64* %430, align 8
  %431 = icmp sgt i32 %136, 0
  %432 = zext i32 %138 to i64
  %433 = icmp sgt i32 %136, 0
  br label %434

434:                                              ; preds = %607, %428
  %435 = phi i32 [ 0, %428 ], [ 1, %607 ]
  %436 = phi i32 [ %278, %428 ], [ %597, %607 ]
  %437 = phi %27** [ %277, %428 ], [ %598, %607 ]
  %438 = phi i32 [ %278, %428 ], [ %599, %607 ]
  br i1 %281, label %439, label %596

439:                                              ; preds = %434
  %440 = icmp eq i32 %435, 0
  br label %441

441:                                              ; preds = %590, %439
  %442 = phi i64 [ 0, %439 ], [ %594, %590 ]
  %443 = phi i32 [ %438, %439 ], [ %593, %590 ]
  %444 = phi %27** [ %437, %439 ], [ %592, %590 ]
  %445 = phi i32 [ %436, %439 ], [ %591, %590 ]
  %446 = getelementptr inbounds %27*, %27** %147, i64 %442
  %447 = load %27*, %27** %446, align 8
  %448 = getelementptr inbounds %27, %27* %447, i64 0, i32 2
  %449 = getelementptr inbounds %27, %27* %447, i64 0, i32 1
  %450 = getelementptr inbounds %27, %27* %447, i64 0, i32 3
  %451 = icmp ne i32 %445, 0
  br i1 %440, label %452, label %526

452:                                              ; preds = %441
  %453 = and i1 %433, %451
  %454 = icmp sgt i32 %443, 0
  %455 = and i1 %453, %454
  br i1 %455, label %520, label %590

456:                                              ; preds = %516
  %457 = icmp sgt i32 %517, -1
  br i1 %457, label %458, label %590

458:                                              ; preds = %456
  %459 = sext i32 %517 to i64
  %460 = getelementptr inbounds %27*, %27** %522, i64 %459
  %461 = load %27*, %27** %460, align 8
  %462 = shl nuw nsw i64 %459, 3
  %463 = sub nsw i64 0, %462
  %464 = lshr exact i64 %463, 3
  %465 = trunc i64 %464 to i32
  %466 = sub i32 %521, %465
  %467 = add nsw i32 %517, 1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds %27*, %27** %522, i64 %468
  %470 = icmp eq %27* %461, null
  br i1 %470, label %590, label %486

471:                                              ; preds = %520, %516
  %472 = phi i64 [ 0, %520 ], [ %518, %516 ]
  %473 = phi i32 [ -1, %520 ], [ %517, %516 ]
  %474 = getelementptr inbounds %27*, %27** %522, i64 %472
  %475 = load %27*, %27** %474, align 8
  %476 = icmp eq %27* %475, null
  br i1 %476, label %516, label %477

477:                                              ; preds = %471
  %478 = getelementptr inbounds %27, %27* %475, i64 0, i32 2
  %479 = load i8*, i8** %478, align 8
  %480 = load i8*, i8** %448, align 8
  %481 = call i32 @strcmp(i8* %479, i8* %480) #17
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %512, label %483

483:                                              ; preds = %477
  %484 = and i64 %472, 4294967295
  %485 = getelementptr inbounds %27*, %27** %522, i64 %484
  store %27* null, %27** %485, align 8
  br label %486

486:                                              ; preds = %483, %458
  %487 = phi i32 [ %521, %483 ], [ %466, %458 ]
  %488 = phi %27** [ %522, %483 ], [ %469, %458 ]
  %489 = phi %27* [ %475, %483 ], [ %461, %458 ]
  %490 = add nuw nsw i32 %523, 1
  %491 = add nsw i32 %524, -1
  %492 = getelementptr inbounds %27, %27* %489, i64 0, i32 9
  %493 = load i8*, i8** %492, align 8
  %494 = icmp eq i8* %493, null
  br i1 %494, label %496, label %495

495:                                              ; preds = %486
  call void @sdsfree(i8* nonnull %493) #14
  br label %496

496:                                              ; preds = %495, %486
  %497 = load i8*, i8** %449, align 8
  %498 = call i8* @sdsnew(i8* %497) #14
  store i8* %498, i8** %492, align 8
  %499 = getelementptr inbounds %27, %27* %489, i64 0, i32 10
  store i32 1, i32* %499, align 8
  %500 = getelementptr inbounds %27, %27* %489, i64 0, i32 2
  %501 = load i8*, i8** %500, align 8
  %502 = getelementptr inbounds %27, %27* %489, i64 0, i32 3
  %503 = load i32, i32* %502, align 8
  %504 = load i8*, i8** %448, align 8
  %505 = load i32, i32* %450, align 8
  %506 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @769, i64 0, i64 0), i8* %501, i32 %503, i8* %504, i32 %505)
  %507 = icmp slt i32 %490, %136
  %508 = icmp ne i32 %491, 0
  %509 = and i1 %507, %508
  %510 = icmp sgt i32 %487, 0
  %511 = and i1 %509, %510
  br i1 %511, label %520, label %590

512:                                              ; preds = %477
  %513 = icmp slt i32 %473, 0
  %514 = trunc i64 %472 to i32
  %515 = select i1 %513, i32 %514, i32 %473
  br label %516

516:                                              ; preds = %512, %471
  %517 = phi i32 [ %473, %471 ], [ %515, %512 ]
  %518 = add nuw nsw i64 %472, 1
  %519 = icmp slt i64 %518, %525
  br i1 %519, label %471, label %456

520:                                              ; preds = %452, %496
  %521 = phi i32 [ %487, %496 ], [ %443, %452 ]
  %522 = phi %27** [ %488, %496 ], [ %444, %452 ]
  %523 = phi i32 [ %490, %496 ], [ 0, %452 ]
  %524 = phi i32 [ %491, %496 ], [ %445, %452 ]
  %525 = sext i32 %521 to i64
  br label %471

526:                                              ; preds = %441
  %527 = and i1 %431, %451
  %528 = icmp sgt i32 %443, 0
  %529 = and i1 %527, %528
  br i1 %529, label %530, label %590

530:                                              ; preds = %526
  %531 = sext i32 %443 to i64
  br label %532

532:                                              ; preds = %530, %548
  %533 = phi i64 [ 0, %530 ], [ %550, %548 ]
  %534 = phi i32 [ -1, %530 ], [ %549, %548 ]
  %535 = getelementptr inbounds %27*, %27** %444, i64 %533
  %536 = load %27*, %27** %535, align 8
  %537 = icmp eq %27* %536, null
  br i1 %537, label %548, label %538

538:                                              ; preds = %532
  %539 = getelementptr inbounds %27, %27* %536, i64 0, i32 2
  %540 = load i8*, i8** %539, align 8
  %541 = load i8*, i8** %448, align 8
  %542 = call i32 @strcmp(i8* %540, i8* %541) #17
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %552

544:                                              ; preds = %538
  %545 = icmp slt i32 %534, 0
  %546 = trunc i64 %533 to i32
  %547 = select i1 %545, i32 %546, i32 %534
  br label %548

548:                                              ; preds = %544, %532
  %549 = phi i32 [ %534, %532 ], [ %547, %544 ]
  %550 = add nuw nsw i64 %533, 1
  %551 = icmp slt i64 %550, %531
  br i1 %551, label %532, label %555

552:                                              ; preds = %538
  %553 = and i64 %533, 4294967295
  %554 = getelementptr inbounds %27*, %27** %444, i64 %553
  store %27* null, %27** %554, align 8
  br label %570

555:                                              ; preds = %548
  %556 = icmp sgt i32 %549, -1
  br i1 %556, label %557, label %590

557:                                              ; preds = %555
  %558 = sext i32 %549 to i64
  %559 = getelementptr inbounds %27*, %27** %444, i64 %558
  %560 = load %27*, %27** %559, align 8
  %561 = shl nuw nsw i64 %558, 3
  %562 = sub nsw i64 0, %561
  %563 = lshr exact i64 %562, 3
  %564 = trunc i64 %563 to i32
  %565 = sub i32 %443, %564
  %566 = add nsw i32 %549, 1
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds %27*, %27** %444, i64 %567
  %569 = icmp eq %27* %560, null
  br i1 %569, label %590, label %570

570:                                              ; preds = %552, %557
  %571 = phi i32 [ %443, %552 ], [ %565, %557 ]
  %572 = phi %27** [ %444, %552 ], [ %568, %557 ]
  %573 = phi %27* [ %536, %552 ], [ %560, %557 ]
  %574 = add nsw i32 %445, -1
  %575 = getelementptr inbounds %27, %27* %573, i64 0, i32 9
  %576 = load i8*, i8** %575, align 8
  %577 = icmp eq i8* %576, null
  br i1 %577, label %579, label %578

578:                                              ; preds = %570
  call void @sdsfree(i8* nonnull %576) #14
  br label %579

579:                                              ; preds = %578, %570
  %580 = load i8*, i8** %449, align 8
  %581 = call i8* @sdsnew(i8* %580) #14
  store i8* %581, i8** %575, align 8
  %582 = getelementptr inbounds %27, %27* %573, i64 0, i32 10
  store i32 1, i32* %582, align 8
  %583 = getelementptr inbounds %27, %27* %573, i64 0, i32 2
  %584 = load i8*, i8** %583, align 8
  %585 = getelementptr inbounds %27, %27* %573, i64 0, i32 3
  %586 = load i32, i32* %585, align 8
  %587 = load i8*, i8** %448, align 8
  %588 = load i32, i32* %450, align 8
  %589 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @769, i64 0, i64 0), i8* %584, i32 %586, i8* %587, i32 %588)
  br label %590

590:                                              ; preds = %496, %458, %456, %452, %526, %555, %557, %579
  %591 = phi i32 [ %445, %555 ], [ %445, %557 ], [ %574, %579 ], [ %445, %526 ], [ %445, %452 ], [ %524, %456 ], [ %524, %458 ], [ %491, %496 ]
  %592 = phi %27** [ %444, %555 ], [ %568, %557 ], [ %572, %579 ], [ %444, %526 ], [ %444, %452 ], [ %522, %456 ], [ %469, %458 ], [ %488, %496 ]
  %593 = phi i32 [ %443, %555 ], [ %565, %557 ], [ %571, %579 ], [ %443, %526 ], [ %443, %452 ], [ %521, %456 ], [ %466, %458 ], [ %487, %496 ]
  %594 = add nuw nsw i64 %442, 1
  %595 = icmp eq i64 %594, %432
  br i1 %595, label %596, label %441

596:                                              ; preds = %590, %434
  %597 = phi i32 [ %436, %434 ], [ %591, %590 ]
  %598 = phi %27** [ %437, %434 ], [ %592, %590 ]
  %599 = phi i32 [ %438, %434 ], [ %593, %590 ]
  %600 = icmp eq i32 %435, 0
  %601 = icmp sgt i32 %597, 0
  %602 = and i1 %600, %601
  br i1 %602, label %607, label %603

603:                                              ; preds = %596
  %604 = icmp sgt i32 %159, 0
  br i1 %604, label %605, label %661

605:                                              ; preds = %603
  %606 = zext i32 %159 to i64
  br label %609

607:                                              ; preds = %596
  %608 = call i32 @puts(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str, i64 0, i64 0))
  br label %434

609:                                              ; preds = %658, %605
  %610 = phi i64 [ 0, %605 ], [ %659, %658 ]
  %611 = getelementptr inbounds %28, %28* %153, i64 %610
  %612 = getelementptr inbounds %28, %28* %611, i64 0, i32 0
  %613 = load %27**, %27*** %612, align 8
  %614 = getelementptr inbounds %28, %28* %153, i64 %610, i32 1
  %615 = load %27**, %27*** %614, align 8
  %616 = icmp ugt %27** %613, %615
  %617 = ptrtoint %27** %615 to i64
  br i1 %616, label %618, label %658

618:                                              ; preds = %609
  %619 = ptrtoint %27** %613 to i64
  %620 = sub i64 %619, %617
  %621 = lshr exact i64 %620, 3
  %622 = trunc i64 %621 to i32
  %623 = getelementptr inbounds %28, %28* %153, i64 %610, i32 2
  store i32 %622, i32* %623, align 8
  %624 = bitcast %28* %611 to i64*
  store i64 %617, i64* %624, align 8
  %625 = getelementptr inbounds %28, %28* %153, i64 %610, i32 3
  store i32 0, i32* %625, align 4
  %626 = icmp sgt i32 %622, 0
  br i1 %626, label %627, label %658

627:                                              ; preds = %618
  %628 = and i64 %621, 4294967295
  %629 = and i64 %621, 1
  %630 = icmp eq i64 %628, 1
  br i1 %630, label %648, label %631

631:                                              ; preds = %627
  %632 = sub nsw i64 %628, %629
  br label %633

633:                                              ; preds = %967, %631
  %634 = phi i32 [ 0, %631 ], [ %968, %967 ]
  %635 = phi i64 [ 0, %631 ], [ %969, %967 ]
  %636 = phi i64 [ %632, %631 ], [ %970, %967 ]
  %637 = getelementptr inbounds %27*, %27** %615, i64 %635
  %638 = load %27*, %27** %637, align 8
  %639 = icmp eq %27* %638, null
  br i1 %639, label %642, label %640

640:                                              ; preds = %633
  %641 = add nsw i32 %634, 1
  store i32 %641, i32* %625, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %634, %633 ], [ %641, %640 ]
  %644 = or i64 %635, 1
  %645 = getelementptr inbounds %27*, %27** %615, i64 %644
  %646 = load %27*, %27** %645, align 8
  %647 = icmp eq %27* %646, null
  br i1 %647, label %967, label %965

648:                                              ; preds = %967, %627
  %649 = phi i32 [ 0, %627 ], [ %968, %967 ]
  %650 = phi i64 [ 0, %627 ], [ %969, %967 ]
  %651 = icmp eq i64 %629, 0
  br i1 %651, label %658, label %652

652:                                              ; preds = %648
  %653 = getelementptr inbounds %27*, %27** %615, i64 %650
  %654 = load %27*, %27** %653, align 8
  %655 = icmp eq %27* %654, null
  br i1 %655, label %658, label %656

656:                                              ; preds = %652
  %657 = add nsw i32 %649, 1
  store i32 %657, i32* %625, align 4
  br label %658

658:                                              ; preds = %648, %652, %656, %609, %618
  %659 = add nuw nsw i64 %610, 1
  %660 = icmp eq i64 %659, %606
  br i1 %660, label %661, label %609

661:                                              ; preds = %658, %603
  %662 = bitcast %27*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %662) #14
  store %27** null, %27*** %5, align 8
  %663 = call fastcc i32 @1368(%28* %153, i32 %159, %27*** null, i32* null) #14
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %757, label %665

665:                                              ; preds = %661
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @807, i64 0, i64 0)) #14
  %666 = load %24*, %24** @.0.1, align 8
  %667 = getelementptr inbounds %24, %24* %666, i64 0, i32 5
  %668 = load i64, i64* %667, align 8
  %669 = trunc i64 %668 to i32
  %670 = call i64 @time(i64* null) #14
  %671 = trunc i64 %670 to i32
  call void @srand(i32 %671) #14
  %672 = icmp sgt i32 %669, 0
  br i1 %672, label %673, label %748

673:                                              ; preds = %665
  %674 = mul nsw i32 %669, 500
  %675 = bitcast i32* %6 to i8*
  %676 = shl i64 %668, 32
  %677 = add i64 %676, -4294967296
  %678 = ashr exact i64 %677, 29
  %679 = bitcast %26* %7 to i8*
  br label %680

680:                                              ; preds = %744, %673
  %681 = phi i8* [ %747, %744 ], [ null, %673 ]
  %682 = phi %27** [ %746, %744 ], [ null, %673 ]
  %683 = phi i32 [ %745, %744 ], [ %674, %673 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %675) #14
  store i32 0, i32* %6, align 4
  %684 = icmp eq %27** %682, null
  br i1 %684, label %686, label %685

685:                                              ; preds = %680
  call void @zfree(i8* %681) #14
  store %27** null, %27*** %5, align 8
  br label %686

686:                                              ; preds = %685, %680
  %687 = call fastcc i32 @1368(%28* %153, i32 %159, %27*** nonnull %5, i32* nonnull %6) #14
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %675) #14
  br label %748

690:                                              ; preds = %686
  %691 = call i32 @rand() #14
  %692 = load i32, i32* %6, align 4
  %693 = srem i32 %691, %692
  %694 = load %27**, %27*** %5, align 8
  %695 = sext i32 %693 to i64
  %696 = getelementptr inbounds %27*, %27** %694, i64 %695
  %697 = load %27*, %27** %696, align 8
  %698 = call i8* @zcalloc(i64 %678) #14
  %699 = bitcast i8* %698 to %27**
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %679) #14
  %700 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %700, %26* nonnull %7) #14
  %701 = call %25* @listNext(%26* nonnull %7) #14
  %702 = icmp eq %25* %701, null
  br i1 %702, label %724, label %703

703:                                              ; preds = %690, %718
  %704 = phi %25* [ %720, %718 ], [ %701, %690 ]
  %705 = phi i32 [ %719, %718 ], [ 0, %690 ]
  %706 = getelementptr inbounds %25, %25* %704, i64 0, i32 2
  %707 = bitcast i8** %706 to %27**
  %708 = load %27*, %27** %707, align 8
  %709 = icmp eq %27* %708, %697
  br i1 %709, label %718, label %710

710:                                              ; preds = %703
  %711 = getelementptr inbounds %27, %27* %708, i64 0, i32 9
  %712 = load i8*, i8** %711, align 8
  %713 = icmp eq i8* %712, null
  br i1 %713, label %718, label %714

714:                                              ; preds = %710
  %715 = add nsw i32 %705, 1
  %716 = sext i32 %705 to i64
  %717 = getelementptr inbounds %27*, %27** %699, i64 %716
  store %27* %708, %27** %717, align 8
  br label %718

718:                                              ; preds = %714, %710, %703
  %719 = phi i32 [ %715, %714 ], [ %705, %710 ], [ %705, %703 ]
  %720 = call %25* @listNext(%26* nonnull %7) #14
  %721 = icmp eq %25* %720, null
  br i1 %721, label %722, label %703

722:                                              ; preds = %718
  %723 = icmp eq i32 %719, 0
  br i1 %723, label %724, label %725

724:                                              ; preds = %722, %690
  call void @zfree(i8* %698) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %679) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %675) #14
  br label %748

725:                                              ; preds = %722
  %726 = call i32 @rand() #14
  %727 = srem i32 %726, %719
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds %27*, %27** %699, i64 %728
  %730 = load %27*, %27** %729, align 8
  %731 = getelementptr inbounds %27, %27* %697, i64 0, i32 9
  %732 = bitcast i8** %731 to i64*
  %733 = load i64, i64* %732, align 8
  %734 = getelementptr inbounds %27, %27* %730, i64 0, i32 9
  %735 = bitcast i8** %734 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %732, align 8
  %737 = getelementptr inbounds %27, %27* %697, i64 0, i32 10
  store i32 1, i32* %737, align 8
  store i64 %733, i64* %735, align 8
  %738 = getelementptr inbounds %27, %27* %730, i64 0, i32 10
  store i32 1, i32* %738, align 8
  %739 = call fastcc i32 @1368(%28* %153, i32 %159, %27*** null, i32* null) #14
  %740 = icmp sgt i32 %739, %687
  br i1 %740, label %741, label %742

741:                                              ; preds = %725
  store i64 %733, i64* %732, align 8
  store i64 %736, i64* %735, align 8
  br label %742

742:                                              ; preds = %741, %725
  call void @zfree(i8* nonnull %698) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %679) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %675) #14
  %743 = icmp sgt i32 %683, 1
  br i1 %743, label %744, label %748

744:                                              ; preds = %742
  %745 = add nsw i32 %683, -1
  %746 = load %27**, %27*** %5, align 8
  %747 = bitcast %27** %746 to i8*
  br label %680

748:                                              ; preds = %742, %724, %689, %665
  %749 = call fastcc i32 @1368(%28* %153, i32 %159, %27*** null, i32* null) #14
  %750 = icmp eq i32 %749, 0
  %751 = select i1 %750, i32 4, i32 2
  %752 = icmp sgt i32 %749, 9999
  %753 = select i1 %752, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @809, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @810, i64 0, i64 0)
  %754 = select i1 %750, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @808, i64 0, i64 0), i8* %753
  call void (i32, i8*, ...) @1361(i32 %751, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %754) #14
  %755 = bitcast %27*** %5 to i8**
  %756 = load i8*, i8** %755, align 8
  br label %757

757:                                              ; preds = %661, %748
  %758 = phi i8* [ %756, %748 ], [ null, %661 ]
  call void @zfree(i8* %758) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %662) #14
  %759 = bitcast %26* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %759) #14
  %760 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %760, %26* nonnull %4) #14
  %761 = call %25* @listNext(%26* nonnull %4) #14
  %762 = icmp eq %25* %761, null
  br i1 %762, label %772, label %763

763:                                              ; preds = %757, %763
  %764 = phi %25* [ %770, %763 ], [ %761, %757 ]
  %765 = getelementptr inbounds %25, %25* %764, i64 0, i32 2
  %766 = bitcast i8** %765 to %27**
  %767 = load %27*, %27** %766, align 8
  %768 = call fastcc i8* @1372(%27* %767, i32 0) #14
  %769 = call i32 @puts(i8* %768) #14
  call void @sdsfree(i8* %768) #14
  %770 = call %25* @listNext(%26* nonnull %4) #14
  %771 = icmp eq %25* %770, null
  br i1 %771, label %772, label %763

772:                                              ; preds = %763, %757
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %759) #14
  %773 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @829, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @770, i64 0, i64 0)) #14
  %774 = load %1*, %1** @stdout, align 8
  %775 = call i32 @fflush(%1* %774) #14
  %776 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %776) #14
  %777 = load %1*, %1** @stdin, align 8
  %778 = call i32 @fileno(%1* %777) #14
  %779 = call i64 @read(i32 %778, i8* nonnull %776, i64 4) #14
  %780 = trunc i64 %779 to i32
  %781 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  store i8 0, i8* %781, align 1
  %782 = icmp eq i32 %780, 0
  br i1 %782, label %783, label %784

783:                                              ; preds = %772
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %776) #14
  br label %951

784:                                              ; preds = %772
  %785 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @830, i64 0, i64 0), i8* nonnull %776) #17
  %786 = icmp eq i32 %785, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %776) #14
  br i1 %786, label %787, label %951

787:                                              ; preds = %784
  %788 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %788, %26* nonnull %9) #14
  %789 = call %25* @listNext(%26* nonnull %9) #14
  %790 = icmp eq %25* %789, null
  br i1 %790, label %825, label %791

791:                                              ; preds = %787
  %792 = bitcast i8** %10 to i8*
  br label %793

793:                                              ; preds = %791, %822
  %794 = phi %25* [ %789, %791 ], [ %823, %822 ]
  %795 = getelementptr inbounds %25, %25* %794, i64 0, i32 2
  %796 = bitcast i8** %795 to %27**
  %797 = load %27*, %27** %796, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %792) #14
  store i8* null, i8** %10, align 8
  %798 = call fastcc i32 @1363(%27* %797, i8** nonnull %10)
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %800, label %817

800:                                              ; preds = %793
  %801 = getelementptr inbounds %27, %27* %797, i64 0, i32 10
  %802 = load i32, i32* %801, align 8
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %817, label %804

804:                                              ; preds = %800
  %805 = getelementptr inbounds %27, %27* %797, i64 0, i32 9
  %806 = load i8*, i8** %805, align 8
  %807 = icmp eq i8* %806, null
  br i1 %807, label %808, label %817

808:                                              ; preds = %804
  %809 = load i8*, i8** %10, align 8
  %810 = icmp eq i8* %809, null
  br i1 %810, label %821, label %811

811:                                              ; preds = %808
  %812 = getelementptr inbounds %27, %27* %797, i64 0, i32 2
  %813 = load i8*, i8** %812, align 8
  %814 = getelementptr inbounds %27, %27* %797, i64 0, i32 3
  %815 = load i32, i32* %814, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %813, i32 %815, i8* nonnull %809)
  %816 = load i8*, i8** %10, align 8
  call void @zfree(i8* %816) #14
  br label %821

817:                                              ; preds = %804, %800, %793
  %818 = load i8*, i8** %10, align 8
  %819 = icmp eq i8* %818, null
  br i1 %819, label %822, label %820

820:                                              ; preds = %817
  call void @zfree(i8* nonnull %818) #14
  br label %822

821:                                              ; preds = %808, %811
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %792) #14
  br label %951

822:                                              ; preds = %820, %817
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %792) #14
  %823 = call %25* @listNext(%26* nonnull %9) #14
  %824 = icmp eq %25* %823, null
  br i1 %824, label %825, label %793

825:                                              ; preds = %822, %787
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @771, i64 0, i64 0))
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @772, i64 0, i64 0))
  %826 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %826, %26* nonnull %9) #14
  %827 = call %25* @listNext(%26* nonnull %9) #14
  %828 = icmp eq %25* %827, null
  br i1 %828, label %844, label %829

829:                                              ; preds = %825, %841
  %830 = phi %25* [ %842, %841 ], [ %827, %825 ]
  %831 = phi i32 [ %837, %841 ], [ 1, %825 ]
  %832 = getelementptr inbounds %25, %25* %830, i64 0, i32 2
  %833 = bitcast i8** %832 to %27**
  %834 = load %27*, %27** %833, align 8
  %835 = getelementptr inbounds %27, %27* %834, i64 0, i32 0
  %836 = load %9*, %9** %835, align 8
  %837 = add nuw nsw i32 %831, 1
  %838 = call i8* (%9*, i8*, ...) @redisCommand(%9* %836, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @773, i64 0, i64 0), i32 %831) #14
  %839 = icmp eq i8* %838, null
  br i1 %839, label %841, label %840

840:                                              ; preds = %829
  call void @freeReplyObject(i8* nonnull %838) #14
  br label %841

841:                                              ; preds = %829, %840
  %842 = call %25* @listNext(%26* nonnull %9) #14
  %843 = icmp eq %25* %842, null
  br i1 %843, label %844, label %829

844:                                              ; preds = %841, %825
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @774, i64 0, i64 0))
  %845 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %845, %26* nonnull %9) #14
  %846 = call %25* @listNext(%26* nonnull %9) #14
  %847 = icmp eq %25* %846, null
  br i1 %847, label %891, label %848

848:                                              ; preds = %844, %886
  %849 = phi %25* [ %889, %886 ], [ %846, %844 ]
  %850 = phi i32 [ %887, %886 ], [ 1, %844 ]
  %851 = phi %27* [ %888, %886 ], [ null, %844 ]
  %852 = getelementptr inbounds %25, %25* %849, i64 0, i32 2
  %853 = bitcast i8** %852 to %27**
  %854 = load %27*, %27** %853, align 8
  %855 = icmp eq %27* %851, null
  br i1 %855, label %886, label %856

856:                                              ; preds = %848
  %857 = getelementptr inbounds %27, %27* %854, i64 0, i32 0
  %858 = load %9*, %9** %857, align 8
  %859 = getelementptr inbounds %27, %27* %851, i64 0, i32 2
  %860 = load i8*, i8** %859, align 8
  %861 = getelementptr inbounds %27, %27* %851, i64 0, i32 3
  %862 = load i32, i32* %861, align 8
  %863 = call i8* (%9*, i8*, ...) @redisCommand(%9* %858, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @775, i64 0, i64 0), i8* %860, i32 %862) #14
  %864 = icmp eq i8* %863, null
  br i1 %864, label %879, label %865

865:                                              ; preds = %856
  %866 = bitcast i8* %863 to i32*
  %867 = load i32, i32* %866, align 8
  %868 = icmp eq i32 %867, 6
  %869 = zext i1 %868 to i32
  br i1 %868, label %870, label %878

870:                                              ; preds = %865
  %871 = getelementptr inbounds %27, %27* %854, i64 0, i32 2
  %872 = load i8*, i8** %871, align 8
  %873 = getelementptr inbounds %27, %27* %854, i64 0, i32 3
  %874 = load i32, i32* %873, align 8
  %875 = getelementptr inbounds i8, i8* %863, i64 32
  %876 = bitcast i8* %875 to i8**
  %877 = load i8*, i8** %876, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %872, i32 %874, i8* %877)
  br label %878

878:                                              ; preds = %870, %865
  call void @freeReplyObject(i8* nonnull %863) #14
  br label %882

879:                                              ; preds = %856
  %880 = load %1*, %1** @stderr, align 8
  %881 = call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @776, i64 0, i64 0), i64 37, i64 1, %1* %880) #16
  br label %882

882:                                              ; preds = %878, %879
  %883 = phi i32 [ %869, %878 ], [ 1, %879 ]
  %884 = icmp eq i32 %883, 0
  %885 = select i1 %884, i32 %850, i32 0
  br i1 %884, label %886, label %951

886:                                              ; preds = %882, %848
  %887 = phi i32 [ %885, %882 ], [ %850, %848 ]
  %888 = phi %27* [ %851, %882 ], [ %854, %848 ]
  %889 = call %25* @listNext(%26* nonnull %9) #14
  %890 = icmp eq %25* %889, null
  br i1 %890, label %891, label %848

891:                                              ; preds = %886, %844
  %892 = phi i32 [ 1, %844 ], [ %887, %886 ]
  %893 = call i32 @sleep(i32 1) #14
  call fastcc void @1364()
  %894 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %894, %26* nonnull %9) #14
  %895 = call %25* @listNext(%26* nonnull %9) #14
  %896 = icmp eq %25* %895, null
  br i1 %896, label %927, label %897

897:                                              ; preds = %891
  %898 = bitcast i8** %11 to i8*
  br label %899

899:                                              ; preds = %897, %924
  %900 = phi %25* [ %895, %897 ], [ %925, %924 ]
  %901 = getelementptr inbounds %25, %25* %900, i64 0, i32 2
  %902 = bitcast i8** %901 to %27**
  %903 = load %27*, %27** %902, align 8
  %904 = getelementptr inbounds %27, %27* %903, i64 0, i32 10
  %905 = load i32, i32* %904, align 8
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %924, label %907

907:                                              ; preds = %899
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %898) #14
  store i8* null, i8** %11, align 8
  %908 = call fastcc i32 @1363(%27* %903, i8** nonnull %11)
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %923

910:                                              ; preds = %907
  %911 = getelementptr inbounds %27, %27* %903, i64 0, i32 9
  %912 = load i8*, i8** %911, align 8
  %913 = icmp eq i8* %912, null
  br i1 %913, label %914, label %923

914:                                              ; preds = %910
  %915 = load i8*, i8** %11, align 8
  %916 = icmp eq i8* %915, null
  br i1 %916, label %950, label %917

917:                                              ; preds = %914
  %918 = getelementptr inbounds %27, %27* %903, i64 0, i32 2
  %919 = load i8*, i8** %918, align 8
  %920 = getelementptr inbounds %27, %27* %903, i64 0, i32 3
  %921 = load i32, i32* %920, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %919, i32 %921, i8* nonnull %915)
  %922 = load i8*, i8** %11, align 8
  call void @zfree(i8* %922) #14
  br label %950

923:                                              ; preds = %910, %907
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %898) #14
  br label %924

924:                                              ; preds = %899, %923
  %925 = call %25* @listNext(%26* nonnull %9) #14
  %926 = icmp eq %25* %925, null
  br i1 %926, label %927, label %899

927:                                              ; preds = %924, %891
  %928 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %928, %26* nonnull %9) #14
  %929 = call %25* @listNext(%26* nonnull %9) #14
  %930 = icmp eq %25* %929, null
  br i1 %930, label %943, label %931

931:                                              ; preds = %927, %939
  %932 = phi %25* [ %941, %939 ], [ %929, %927 ]
  %933 = phi %27* [ %940, %939 ], [ null, %927 ]
  %934 = getelementptr inbounds %25, %25* %932, i64 0, i32 2
  %935 = bitcast i8** %934 to %27**
  %936 = load %27*, %27** %935, align 8
  %937 = icmp eq %27* %933, null
  br i1 %937, label %939, label %938

938:                                              ; preds = %931
  call fastcc void @1359(%27* %936)
  br label %939

939:                                              ; preds = %931, %938
  %940 = phi %27* [ %933, %938 ], [ %936, %931 ]
  %941 = call %25* @listNext(%26* nonnull %9) #14
  %942 = icmp eq %25* %941, null
  br i1 %942, label %943, label %931

943:                                              ; preds = %939, %927
  %944 = phi %27* [ null, %927 ], [ %940, %939 ]
  %945 = load %24*, %24** @.0.1, align 8
  call void @listEmpty(%24* %945) #14
  %946 = call fastcc i32 @1365(%27* %944)
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %951, label %948

948:                                              ; preds = %943
  %949 = call fastcc i32 @1366(i32 0)
  br label %951

950:                                              ; preds = %917, %914
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %898) #14
  br label %951

951:                                              ; preds = %882, %950, %784, %943, %948, %821, %783
  %952 = phi i32 [ 1, %784 ], [ 1, %783 ], [ 0, %821 ], [ 0, %943 ], [ %892, %948 ], [ 0, %950 ], [ %885, %882 ]
  call void @zfree(i8* %146) #14
  call void @zfree(i8* %149) #14
  br i1 %160, label %953, label %962

953:                                              ; preds = %951
  %954 = and i64 %134, 4294967295
  br label %955

955:                                              ; preds = %955, %953
  %956 = phi i64 [ 0, %953 ], [ %960, %955 ]
  %957 = getelementptr inbounds %28, %28* %153, i64 %956, i32 1
  %958 = bitcast %27*** %957 to i8**
  %959 = load i8*, i8** %958, align 8
  call void @zfree(i8* %959) #14
  %960 = add nuw nsw i64 %956, 1
  %961 = icmp eq i64 %960, %954
  br i1 %961, label %962, label %955

962:                                              ; preds = %955, %951
  call void @zfree(i8* %152) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #14
  br label %963

963:                                              ; preds = %52, %27, %123, %140, %962
  %964 = phi i32 [ 0, %140 ], [ %952, %962 ], [ 0, %123 ], [ 0, %27 ], [ 0, %52 ]
  ret i32 %964

965:                                              ; preds = %642
  %966 = add nsw i32 %643, 1
  store i32 %966, i32* %625, align 4
  br label %967

967:                                              ; preds = %965, %642
  %968 = phi i32 [ %643, %642 ], [ %966, %965 ]
  %969 = add nuw nsw i64 %635, 2
  %970 = add i64 %636, -2
  %971 = icmp eq i64 %970, 0
  br i1 %971, label %648, label %633
}

; Function Attrs: nounwind uwtable
define internal i32 @1332(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = icmp eq i32 %0, 1
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = load i8*, i8** %1, align 8
  %6 = tail call i8* @strrchr(i8* %5, i32 64) #17
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  store i8 0, i8* %6, align 1
  br label %9

9:                                                ; preds = %8, %4
  %10 = tail call i8* @strrchr(i8* %5, i32 58) #17
  %11 = icmp eq i8* %10, null
  br i1 %11, label %50, label %12

12:                                               ; preds = %9
  store i8 0, i8* %10, align 1
  %13 = ptrtoint i8* %5 to i64
  %14 = getelementptr inbounds i8, i8* %10, i64 1
  br label %20

15:                                               ; preds = %2
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8*, i8** %1, i64 1
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %12
  %21 = phi i8* [ %19, %15 ], [ %14, %12 ]
  %22 = phi i64 [ %17, %15 ], [ %13, %12 ]
  %23 = tail call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #14
  %24 = trunc i64 %23 to i32
  %25 = icmp ne i64 %22, 0
  %26 = icmp ne i32 %24, 0
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %50

28:                                               ; preds = %20
  %29 = inttoptr i64 %22 to i8*
  %30 = tail call i8* @zmalloc(i64 16520) #14
  %31 = bitcast i8* %30 to %27*
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #14
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 24
  %35 = bitcast i8* %34 to i32*
  store i32 %24, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 32
  %37 = getelementptr inbounds i8, i8* %30, i64 64
  %38 = getelementptr inbounds i8, i8* %30, i64 16480
  %39 = getelementptr inbounds i8, i8* %30, i64 16472
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %30, i64 16512
  %42 = bitcast i8* %41 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %42, align 8
  %43 = getelementptr inbounds i8, i8* %30, i64 16516
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %30, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 0, i64 16388, i1 false) #14
  %46 = tail call fastcc i32 @1365(%27* %31)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %28
  tail call fastcc void @1386()
  %49 = tail call fastcc i32 @1366(i32 0)
  br label %53

50:                                               ; preds = %20, %9
  %51 = load %1*, %1** @stderr, align 8
  %52 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %51) #16
  br label %53

53:                                               ; preds = %28, %50, %48
  %54 = phi i32 [ %49, %48 ], [ 0, %50 ], [ 0, %28 ]
  ret i32 %54
}

; Function Attrs: nounwind uwtable
define internal i32 @1333(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = icmp eq i32 %0, 1
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = load i8*, i8** %1, align 8
  %6 = tail call i8* @strrchr(i8* %5, i32 64) #17
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  store i8 0, i8* %6, align 1
  br label %9

9:                                                ; preds = %8, %4
  %10 = tail call i8* @strrchr(i8* %5, i32 58) #17
  %11 = icmp eq i8* %10, null
  br i1 %11, label %49, label %12

12:                                               ; preds = %9
  store i8 0, i8* %10, align 1
  %13 = ptrtoint i8* %5 to i64
  %14 = getelementptr inbounds i8, i8* %10, i64 1
  br label %20

15:                                               ; preds = %2
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8*, i8** %1, i64 1
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %12
  %21 = phi i8* [ %19, %15 ], [ %14, %12 ]
  %22 = phi i64 [ %17, %15 ], [ %13, %12 ]
  %23 = tail call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #14
  %24 = trunc i64 %23 to i32
  %25 = icmp ne i64 %22, 0
  %26 = icmp ne i32 %24, 0
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %49

28:                                               ; preds = %20
  %29 = inttoptr i64 %22 to i8*
  %30 = tail call i8* @zmalloc(i64 16520) #14
  %31 = bitcast i8* %30 to %27*
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #14
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 24
  %35 = bitcast i8* %34 to i32*
  store i32 %24, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 32
  %37 = getelementptr inbounds i8, i8* %30, i64 64
  %38 = getelementptr inbounds i8, i8* %30, i64 16480
  %39 = getelementptr inbounds i8, i8* %30, i64 16472
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %30, i64 16512
  %42 = bitcast i8* %41 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %42, align 8
  %43 = getelementptr inbounds i8, i8* %30, i64 16516
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %30, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 0, i64 16388, i1 false) #14
  %46 = tail call fastcc i32 @1365(%27* %31)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %28
  tail call fastcc void @1386()
  br label %52

49:                                               ; preds = %20, %9
  %50 = load %1*, %1** @stderr, align 8
  %51 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %50) #16
  br label %52

52:                                               ; preds = %28, %49, %48
  %53 = phi i32 [ 1, %48 ], [ 0, %49 ], [ 0, %28 ]
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @1334(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %4 = or i32 %3, 1
  store i32 %4, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %5 = tail call i32 @1332(i32 %0, i8** %1)
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal i32 @1335(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca %26, align 8
  %4 = alloca %26, align 8
  %5 = alloca [6 x i8], align 1
  %6 = alloca [255 x i8], align 16
  %7 = alloca %26, align 8
  %8 = alloca [4 x i8], align 1
  %9 = alloca i8*, align 8
  %10 = icmp eq i32 %0, 1
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = load i8*, i8** %1, align 8
  %13 = tail call i8* @strrchr(i8* %12, i32 64) #17
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  store i8 0, i8* %13, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = tail call i8* @strrchr(i8* %12, i32 58) #17
  %18 = icmp eq i8* %17, null
  br i1 %18, label %391, label %19

19:                                               ; preds = %16
  store i8 0, i8* %17, align 1
  %20 = ptrtoint i8* %12 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 1
  br label %27

22:                                               ; preds = %2
  %23 = bitcast i8** %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8*, i8** %1, i64 1
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi i8* [ %26, %22 ], [ %21, %19 ]
  %29 = phi i64 [ %24, %22 ], [ %20, %19 ]
  %30 = tail call i64 @strtol(i8* nocapture nonnull %28, i8** null, i32 10) #14
  %31 = trunc i64 %30 to i32
  %32 = icmp ne i64 %29, 0
  %33 = icmp ne i32 %31, 0
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %391

35:                                               ; preds = %27
  %36 = inttoptr i64 %29 to i8*
  %37 = tail call i8* @zmalloc(i64 16520) #14
  %38 = bitcast i8* %37 to %27*
  %39 = getelementptr inbounds i8, i8* %37, i64 16
  %40 = bitcast i8* %39 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #14
  store i8* %36, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 24
  %42 = bitcast i8* %41 to i32*
  store i32 %31, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 32
  %44 = getelementptr inbounds i8, i8* %37, i64 64
  %45 = getelementptr inbounds i8, i8* %37, i64 16480
  %46 = getelementptr inbounds i8, i8* %37, i64 16472
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 16512
  %49 = bitcast i8* %48 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %49, align 8
  %50 = getelementptr inbounds i8, i8* %37, i64 16516
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %37, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %52, i8 0, i64 16388, i1 false) #14
  %53 = tail call fastcc i32 @1365(%27* %38)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %394, label %55

55:                                               ; preds = %35
  %56 = tail call fastcc i32 @1366(i32 0)
  %57 = load %24*, %24** @.1, align 8
  %58 = icmp eq %24* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %24, %24* %57, i64 0, i32 5
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = load %1*, %1** @stdout, align 8
  %65 = tail call i32 @fflush(%1* %64)
  %66 = load %1*, %1** @stderr, align 8
  %67 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @965, i64 0, i64 0), i64 55, i64 1, %1* %66) #16
  br label %394

68:                                               ; preds = %59, %55
  %69 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 10), align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %100

71:                                               ; preds = %68
  %72 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 0
  br label %73

73:                                               ; preds = %71, %96
  %74 = phi i32 [ 0, %71 ], [ %97, %96 ]
  %75 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @966, i64 0, i64 0), i32 16384)
  %76 = load %1*, %1** @stdout, align 8
  %77 = tail call i32 @fflush(%1* %76)
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %72) #14
  %78 = load %1*, %1** @stdin, align 8
  %79 = tail call i32 @fileno(%1* %78) #14
  %80 = call i64 @read(i32 %79, i8* nonnull %72, i64 6) #14
  %81 = trunc i64 %80 to i32
  %82 = icmp slt i32 %81, 1
  br i1 %82, label %96, label %83

83:                                               ; preds = %73
  %84 = shl i64 %80, 32
  %85 = add i64 %84, -4294967296
  %86 = ashr exact i64 %85, 32
  %87 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 10
  br i1 %89, label %93, label %90

90:                                               ; preds = %83, %90
  %91 = load %1*, %1** @stdin, align 8
  %92 = tail call i32 @_IO_getc(%1* %91) #14
  switch i32 %92, label %90 [
    i32 -1, label %93
    i32 10, label %93
  ]

93:                                               ; preds = %90, %90, %83
  store i8 0, i8* %87, align 1
  %94 = call i64 @strtol(i8* nocapture nonnull %72, i8** null, i32 10) #14
  %95 = trunc i64 %94 to i32
  br label %96

96:                                               ; preds = %73, %93
  %97 = phi i32 [ %95, %93 ], [ %74, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %72) #14
  %98 = add i32 %97, -1
  %99 = icmp ugt i32 %98, 16383
  br i1 %99, label %73, label %100

100:                                              ; preds = %96, %68
  %101 = phi i32 [ %69, %68 ], [ %97, %96 ]
  %102 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 6), align 8
  %103 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 5), align 8
  %104 = icmp eq i8* %102, null
  br i1 %104, label %105, label %130

105:                                              ; preds = %100
  %106 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 0
  br label %107

107:                                              ; preds = %129, %105
  %108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @967, i64 0, i64 0))
  %109 = load %1*, %1** @stdout, align 8
  %110 = call i32 @fflush(%1* %109)
  %111 = load %1*, %1** @stdin, align 8
  %112 = call i32 @fileno(%1* %111) #14
  %113 = call i64 @read(i32 %112, i8* nonnull %106, i64 255) #14
  %114 = trunc i64 %113 to i32
  %115 = icmp slt i32 %114, 1
  br i1 %115, label %129, label %116

116:                                              ; preds = %107
  %117 = shl i64 %113, 32
  %118 = add i64 %117, -4294967296
  %119 = ashr exact i64 %118, 32
  %120 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 10
  br i1 %122, label %126, label %123

123:                                              ; preds = %116, %123
  %124 = load %1*, %1** @stdin, align 8
  %125 = call i32 @_IO_getc(%1* %124) #14
  switch i32 %125, label %123 [
    i32 -1, label %126
    i32 10, label %126
  ]

126:                                              ; preds = %123, %123, %116
  store i8 0, i8* %120, align 1
  %127 = call i64 @strlen(i8* nonnull %106) #17
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126, %107
  br label %107

130:                                              ; preds = %126, %100
  %131 = phi i8* [ %102, %100 ], [ %106, %126 ]
  %132 = call fastcc %27* @1377(i8* nonnull %131) #14
  %133 = icmp eq %27* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %27, %27* %132, i64 0, i32 7
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %130, %134
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @974, i64 0, i64 0), i8* nonnull %131) #14
  br label %394

140:                                              ; preds = %134
  %141 = call %24* @listCreate() #14
  %142 = icmp eq i8* %103, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %140
  %144 = call i8* @strchr(i8* nonnull %103, i32 44) #17
  %145 = icmp eq i8* %144, null
  br i1 %145, label %229, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %27, %27* %132, i64 0, i32 1
  br label %201

148:                                              ; preds = %140
  %149 = call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.5, i64 0, i64 0))
  %150 = call i32 @puts(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.6, i64 0, i64 0))
  %151 = call i32 @puts(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.7, i64 0, i64 0))
  %152 = getelementptr inbounds %24, %24* %141, i64 0, i32 5
  %153 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 0
  %154 = getelementptr inbounds %27, %27* %132, i64 0, i32 1
  br label %155

155:                                              ; preds = %166, %148
  %156 = load i64, i64* %152, align 8
  %157 = add i64 %156, 1
  %158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @968, i64 0, i64 0), i64 %157)
  %159 = load %1*, %1** @stdout, align 8
  %160 = call i32 @fflush(%1* %159)
  %161 = load %1*, %1** @stdin, align 8
  %162 = call i32 @fileno(%1* %161) #14
  %163 = call i64 @read(i32 %162, i8* nonnull %153, i64 255) #14
  %164 = trunc i64 %163 to i32
  %165 = icmp slt i32 %164, 1
  br i1 %165, label %166, label %167

166:                                              ; preds = %155, %197, %198
  br label %155

167:                                              ; preds = %155
  %168 = shl i64 %163, 32
  %169 = add i64 %168, -4294967296
  %170 = ashr exact i64 %169, 32
  %171 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, 10
  br i1 %173, label %177, label %174

174:                                              ; preds = %167, %174
  %175 = load %1*, %1** @stdin, align 8
  %176 = call i32 @_IO_getc(%1* %175) #14
  switch i32 %176, label %174 [
    i32 -1, label %177
    i32 10, label %177
  ]

177:                                              ; preds = %174, %174, %167
  store i8 0, i8* %171, align 1
  %178 = call i32 @strcmp(i8* nonnull %153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @969, i64 0, i64 0)) #17
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %288, label %180

180:                                              ; preds = %177
  %181 = call i32 @strcmp(i8* nonnull %153, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @970, i64 0, i64 0)) #17
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %256, label %183

183:                                              ; preds = %180
  %184 = call fastcc %27* @1377(i8* nonnull %153) #14
  %185 = icmp eq %27* %184, null
  br i1 %185, label %375, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %27, %27* %184, i64 0, i32 7
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %375

191:                                              ; preds = %186
  %192 = getelementptr inbounds %27, %27* %184, i64 0, i32 1
  %193 = load i8*, i8** %192, align 8
  %194 = load i8*, i8** %154, align 8
  %195 = call i32 @strcmp(i8* %193, i8* %194) #17
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %191
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @975, i64 0, i64 0)) #14
  br label %166

198:                                              ; preds = %191
  %199 = bitcast %27* %184 to i8*
  %200 = call %24* @listAddNodeTail(%24* %141, i8* %199) #14
  br label %166

201:                                              ; preds = %146, %225
  %202 = phi i8* [ %144, %146 ], [ %227, %225 ]
  %203 = phi i8* [ %103, %146 ], [ %226, %225 ]
  store i8 0, i8* %202, align 1
  %204 = call i32 @strcmp(i8* nonnull %203, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @970, i64 0, i64 0)) #17
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %256, label %206

206:                                              ; preds = %201
  %207 = call fastcc %27* @1377(i8* nonnull %203) #14
  %208 = icmp eq %27* %207, null
  br i1 %208, label %224, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %27, %27* %207, i64 0, i32 7
  %211 = load i32, i32* %210, align 8
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %224

214:                                              ; preds = %209
  %215 = getelementptr inbounds %27, %27* %207, i64 0, i32 1
  %216 = load i8*, i8** %215, align 8
  %217 = load i8*, i8** %147, align 8
  %218 = call i32 @strcmp(i8* %216, i8* %217) #17
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %214
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @975, i64 0, i64 0)) #14
  br label %225

221:                                              ; preds = %214
  %222 = bitcast %27* %207 to i8*
  %223 = call %24* @listAddNodeTail(%24* %141, i8* %222) #14
  br label %225

224:                                              ; preds = %209, %206
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @974, i64 0, i64 0), i8* nonnull %203) #14
  br label %376

225:                                              ; preds = %220, %221
  %226 = getelementptr inbounds i8, i8* %202, i64 1
  %227 = call i8* @strchr(i8* nonnull %226, i32 44) #17
  %228 = icmp eq i8* %227, null
  br i1 %228, label %229, label %201

229:                                              ; preds = %225, %143
  %230 = phi i8* [ %103, %143 ], [ %226, %225 ]
  %231 = load i8, i8* %230, align 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %288, label %233

233:                                              ; preds = %229
  %234 = call i32 @strcmp(i8* nonnull %230, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @970, i64 0, i64 0)) #17
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %256, label %236

236:                                              ; preds = %233
  %237 = call fastcc %27* @1377(i8* nonnull %230) #14
  %238 = icmp eq %27* %237, null
  br i1 %238, label %255, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %27, %27* %237, i64 0, i32 7
  %241 = load i32, i32* %240, align 8
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %255

244:                                              ; preds = %239
  %245 = getelementptr inbounds %27, %27* %237, i64 0, i32 1
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds %27, %27* %132, i64 0, i32 1
  %248 = load i8*, i8** %247, align 8
  %249 = call i32 @strcmp(i8* %246, i8* %248) #17
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @975, i64 0, i64 0)) #14
  br label %288

252:                                              ; preds = %244
  %253 = bitcast %27* %237 to i8*
  %254 = call %24* @listAddNodeTail(%24* %141, i8* %253) #14
  br label %288

255:                                              ; preds = %239, %236
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @974, i64 0, i64 0), i8* nonnull %230) #14
  br label %376

256:                                              ; preds = %201, %180, %233
  call void @listEmpty(%24* %141) #14
  %257 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %257, %26* nonnull %7) #14
  %258 = call %25* @listNext(%26* nonnull %7) #14
  %259 = icmp eq %25* %258, null
  br i1 %259, label %288, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %27, %27* %132, i64 0, i32 1
  br label %262

262:                                              ; preds = %260, %285
  %263 = phi %25* [ %258, %260 ], [ %286, %285 ]
  %264 = getelementptr inbounds %25, %25* %263, i64 0, i32 2
  %265 = load i8*, i8** %264, align 8
  %266 = getelementptr inbounds i8, i8* %265, i64 56
  %267 = bitcast i8* %266 to i32*
  %268 = load i32, i32* %267, align 8
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %285

271:                                              ; preds = %262
  %272 = getelementptr inbounds i8, i8* %265, i64 72
  %273 = bitcast i8* %272 to i8**
  %274 = load i8*, i8** %273, align 8
  %275 = icmp eq i8* %274, null
  br i1 %275, label %276, label %285

276:                                              ; preds = %271
  %277 = getelementptr inbounds i8, i8* %265, i64 8
  %278 = bitcast i8* %277 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = load i8*, i8** %261, align 8
  %281 = call i32 @sdscmp(i8* %279, i8* %280) #14
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %285, label %283

283:                                              ; preds = %276
  %284 = call %24* @listAddNodeTail(%24* %141, i8* nonnull %265) #14
  br label %285

285:                                              ; preds = %276, %262, %271, %283
  %286 = call %25* @listNext(%26* nonnull %7) #14
  %287 = icmp eq %25* %286, null
  br i1 %287, label %288, label %262

288:                                              ; preds = %177, %285, %256, %252, %251, %229
  %289 = getelementptr inbounds %24, %24* %141, i64 0, i32 5
  %290 = load i64, i64* %289, align 8
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %288
  %293 = load %1*, %1** @stderr, align 8
  %294 = call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @971, i64 0, i64 0), i64 46, i64 1, %1* %293) #16
  br label %376

295:                                              ; preds = %288
  %296 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @972, i64 0, i64 0), i32 %101)
  %297 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.2, i64 0, i64 0))
  call void @listRewind(%24* nonnull %141, %26* nonnull %7) #14
  %298 = call %25* @listNext(%26* nonnull %7) #14
  %299 = icmp eq %25* %298, null
  br i1 %299, label %309, label %300

300:                                              ; preds = %295, %300
  %301 = phi %25* [ %307, %300 ], [ %298, %295 ]
  %302 = getelementptr inbounds %25, %25* %301, i64 0, i32 2
  %303 = bitcast i8** %302 to %27**
  %304 = load %27*, %27** %303, align 8
  %305 = call fastcc i8* @1372(%27* %304, i32 4)
  %306 = call i32 @puts(i8* %305)
  call void @sdsfree(i8* %305) #14
  %307 = call %25* @listNext(%26* nonnull %7) #14
  %308 = icmp eq %25* %307, null
  br i1 %308, label %309, label %300

309:                                              ; preds = %300, %295
  %310 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.3, i64 0, i64 0))
  %311 = call fastcc i8* @1372(%27* nonnull %132, i32 4)
  %312 = call i32 @puts(i8* %311)
  call void @sdsfree(i8* %311) #14
  %313 = call fastcc %24* @1387(%24* %141, i32 %101)
  %314 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.4, i64 0, i64 0))
  %315 = bitcast %26* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #14
  call void @listRewind(%24* %313, %26* nonnull %4) #14
  %316 = call %25* @listNext(%26* nonnull %4) #14
  %317 = icmp eq %25* %316, null
  br i1 %317, label %332, label %318

318:                                              ; preds = %309, %318
  %319 = phi %25* [ %330, %318 ], [ %316, %309 ]
  %320 = getelementptr inbounds %25, %25* %319, i64 0, i32 2
  %321 = bitcast i8** %320 to %29**
  %322 = load %29*, %29** %321, align 8
  %323 = getelementptr inbounds %29, %29* %322, i64 0, i32 0
  %324 = load %27*, %27** %323, align 8
  %325 = getelementptr inbounds %29, %29* %322, i64 0, i32 1
  %326 = load i32, i32* %325, align 8
  %327 = getelementptr inbounds %27, %27* %324, i64 0, i32 1
  %328 = load i8*, i8** %327, align 8
  %329 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @976, i64 0, i64 0), i32 %326, i8* %328) #14
  %330 = call %25* @listNext(%26* nonnull %4) #14
  %331 = icmp eq %25* %330, null
  br i1 %331, label %332, label %318

332:                                              ; preds = %318, %309
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #14
  %333 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %334 = and i32 %333, 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %351

336:                                              ; preds = %332
  %337 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @973, i64 0, i64 0))
  %338 = load %1*, %1** @stdout, align 8
  %339 = call i32 @fflush(%1* %338)
  %340 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %340) #14
  %341 = load %1*, %1** @stdin, align 8
  %342 = call i32 @fileno(%1* %341) #14
  %343 = call i64 @read(i32 %342, i8* nonnull %340, i64 4) #14
  %344 = trunc i64 %343 to i32
  %345 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 3
  store i8 0, i8* %345, align 1
  %346 = icmp slt i32 %344, 1
  br i1 %346, label %347, label %348

347:                                              ; preds = %336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %340) #14
  br label %377

348:                                              ; preds = %336
  %349 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @830, i64 0, i64 0), i8* nonnull %340) #17
  %350 = icmp eq i32 %349, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %340) #14
  br i1 %350, label %351, label %377

351:                                              ; preds = %348, %332
  call void @listRewind(%24* %313, %26* nonnull %7) #14
  %352 = call %25* @listNext(%26* nonnull %7) #14
  %353 = icmp eq %25* %352, null
  br i1 %353, label %377, label %354

354:                                              ; preds = %351
  %355 = bitcast i8** %9 to i8*
  br label %356

356:                                              ; preds = %354, %372
  %357 = phi %25* [ %352, %354 ], [ %373, %372 ]
  %358 = getelementptr inbounds %25, %25* %357, i64 0, i32 2
  %359 = bitcast i8** %358 to %29**
  %360 = load %29*, %29** %359, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #14
  store i8* null, i8** %9, align 8
  %361 = getelementptr inbounds %29, %29* %360, i64 0, i32 0
  %362 = load %27*, %27** %361, align 8
  %363 = getelementptr inbounds %29, %29* %360, i64 0, i32 1
  %364 = load i32, i32* %363, align 8
  %365 = call fastcc i32 @1382(%27* %362, %27* nonnull %132, i32 %364, i32 128, i8** nonnull %9)
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %372

367:                                              ; preds = %356
  %368 = load i8*, i8** %9, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %371, label %370

370:                                              ; preds = %367
  call void @zfree(i8* nonnull %368) #14
  br label %371

371:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #14
  br label %377

372:                                              ; preds = %356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #14
  %373 = call %25* @listNext(%26* nonnull %7) #14
  %374 = icmp eq %25* %373, null
  br i1 %374, label %377, label %356

375:                                              ; preds = %183, %186
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @974, i64 0, i64 0), i8* nonnull %153) #14
  br label %376

376:                                              ; preds = %375, %292, %255, %224
  call void @listRelease(%24* %141) #14
  br label %394

377:                                              ; preds = %372, %351, %348, %371, %347
  %378 = phi i32 [ 0, %348 ], [ 0, %347 ], [ 0, %371 ], [ 1, %351 ], [ %365, %372 ]
  call void @listRelease(%24* %141) #14
  %379 = icmp eq %24* %313, null
  br i1 %379, label %394, label %380

380:                                              ; preds = %377
  %381 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %381) #14
  call void @listRewind(%24* nonnull %313, %26* nonnull %3) #14
  %382 = call %25* @listNext(%26* nonnull %3) #14
  %383 = icmp eq %25* %382, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %380, %384
  %385 = phi %25* [ %388, %384 ], [ %382, %380 ]
  %386 = getelementptr inbounds %25, %25* %385, i64 0, i32 2
  %387 = load i8*, i8** %386, align 8
  call void @zfree(i8* %387) #14
  %388 = call %25* @listNext(%26* nonnull %3) #14
  %389 = icmp eq %25* %388, null
  br i1 %389, label %390, label %384

390:                                              ; preds = %384, %380
  call void @listRelease(%24* nonnull %313) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %381) #14
  br label %394

391:                                              ; preds = %27, %16
  %392 = load %1*, %1** @stderr, align 8
  %393 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %392) #16
  br label %394

394:                                              ; preds = %390, %377, %376, %139, %35, %391, %63
  %395 = phi i32 [ 0, %63 ], [ 0, %391 ], [ 0, %35 ], [ 0, %139 ], [ 0, %376 ], [ %378, %377 ], [ %378, %390 ]
  ret i32 %395
}

; Function Attrs: nounwind uwtable
define internal i32 @1336(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca %26, align 8
  %4 = alloca %26, align 8
  %5 = alloca %26, align 8
  %6 = icmp eq i32 %0, 1
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = load i8*, i8** %1, align 8
  %9 = tail call i8* @strrchr(i8* %8, i32 64) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i8 0, i8* %9, align 1
  br label %12

12:                                               ; preds = %11, %7
  %13 = tail call i8* @strrchr(i8* %8, i32 58) #17
  %14 = icmp eq i8* %13, null
  br i1 %14, label %429, label %15

15:                                               ; preds = %12
  store i8 0, i8* %13, align 1
  %16 = ptrtoint i8* %8 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  br label %23

18:                                               ; preds = %2
  %19 = bitcast i8** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8*, i8** %1, i64 1
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %18, %15
  %24 = phi i8* [ %22, %18 ], [ %17, %15 ]
  %25 = phi i64 [ %20, %18 ], [ %16, %15 ]
  %26 = tail call i64 @strtol(i8* nocapture nonnull %24, i8** null, i32 10) #14
  %27 = trunc i64 %26 to i32
  %28 = icmp ne i64 %25, 0
  %29 = icmp ne i32 %27, 0
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %429

31:                                               ; preds = %23
  %32 = inttoptr i64 %25 to i8*
  %33 = tail call i8* @zmalloc(i64 16520) #14
  %34 = bitcast i8* %33 to %27*
  %35 = getelementptr inbounds i8, i8* %33, i64 16
  %36 = bitcast i8* %35 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #14
  store i8* %32, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 24
  %38 = bitcast i8* %37 to i32*
  store i32 %27, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %33, i64 32
  %40 = getelementptr inbounds i8, i8* %33, i64 64
  %41 = getelementptr inbounds i8, i8* %33, i64 16480
  %42 = getelementptr inbounds i8, i8* %33, i64 16472
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %33, i64 16512
  %45 = bitcast i8* %44 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16516
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %33, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 0, i64 16388, i1 false) #14
  %49 = tail call fastcc i32 @1365(%27* %34)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %432, label %51

51:                                               ; preds = %31
  %52 = load i8**, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 7), align 8
  %53 = icmp ne i8** %52, null
  %54 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 8), align 8
  %55 = icmp sgt i32 %54, 0
  %56 = and i1 %53, %55
  br i1 %56, label %57, label %108

57:                                               ; preds = %51
  %58 = bitcast %26* %4 to i8*
  %59 = load i8*, i8** %52, align 8
  %60 = call i8* @strchr(i8* %59, i32 61) #17
  %61 = icmp eq i8* %60, null
  br i1 %61, label %432, label %62

62:                                               ; preds = %57, %102
  %63 = phi i8* [ %106, %102 ], [ %60, %57 ]
  %64 = phi i8* [ %105, %102 ], [ %59, %57 ]
  %65 = phi i64 [ %98, %102 ], [ 0, %57 ]
  store i8 0, i8* %63, align 1
  %66 = getelementptr inbounds i8, i8* %63, i64 1
  %67 = call double @strtod(i8* nocapture nonnull %66, i8** null) #14
  %68 = load %24*, %24** @.0.1, align 8
  %69 = icmp eq %24* %68, null
  br i1 %69, label %94, label %70

70:                                               ; preds = %62
  %71 = call i8* @sdsempty() #14
  %72 = call i8* @sdscpy(i8* %71, i8* %64) #14
  call void @sdstolower(i8* %72) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #14
  %73 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %73, %26* nonnull %4) #14
  %74 = call %25* @listNext(%26* nonnull %4) #14
  %75 = icmp eq %25* %74, null
  br i1 %75, label %91, label %76

76:                                               ; preds = %70, %88
  %77 = phi %25* [ %89, %88 ], [ %74, %70 ]
  %78 = getelementptr inbounds %25, %25* %77, i64 0, i32 2
  %79 = bitcast i8** %78 to %27**
  %80 = load %27*, %27** %79, align 8
  %81 = getelementptr inbounds %27, %27* %80, i64 0, i32 1
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %76
  %85 = call i64 @strlen(i8* %72) #14
  %86 = call i32 @strncmp(i8* nonnull %82, i8* %72, i64 %85) #14
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %84, %76
  %89 = call %25* @listNext(%26* nonnull %4) #14
  %90 = icmp eq %25* %89, null
  br i1 %90, label %91, label %76

91:                                               ; preds = %84, %88, %70
  %92 = phi %27* [ null, %70 ], [ null, %88 ], [ %80, %84 ]
  call void @sdsfree(i8* %72) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #14
  %93 = icmp eq %27* %92, null
  br i1 %93, label %94, label %95

94:                                               ; preds = %62, %91
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @977, i64 0, i64 0), i8* %64)
  br label %432

95:                                               ; preds = %91
  %96 = fptrunc double %67 to float
  %97 = getelementptr inbounds %27, %27* %92, i64 0, i32 19
  store float %96, float* %97, align 8
  %98 = add nuw nsw i64 %65, 1
  %99 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 8), align 8
  %100 = sext i32 %99 to i64
  %101 = icmp slt i64 %98, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %95
  %103 = load i8**, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 7), align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 %98
  %105 = load i8*, i8** %104, align 8
  %106 = call i8* @strchr(i8* %105, i32 61) #17
  %107 = icmp eq i8* %106, null
  br i1 %107, label %432, label %62

108:                                              ; preds = %95, %51
  %109 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %110 = call %24* @listCreate() #14
  %111 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %111, %26* nonnull %5) #14
  %112 = call %25* @listNext(%26* nonnull %5) #14
  %113 = icmp eq %25* %112, null
  br i1 %113, label %179, label %114

114:                                              ; preds = %108
  %115 = and i32 %109, 16
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %151

117:                                              ; preds = %114, %146
  %118 = phi %25* [ %149, %146 ], [ %112, %114 ]
  %119 = phi float [ %148, %146 ], [ 0.000000e+00, %114 ]
  %120 = phi i32 [ %147, %146 ], [ 0, %114 ]
  %121 = getelementptr inbounds %25, %25* %118, i64 0, i32 2
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 56
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %146

128:                                              ; preds = %117
  %129 = getelementptr inbounds i8, i8* %122, i64 72
  %130 = bitcast i8* %129 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %146

133:                                              ; preds = %128
  %134 = getelementptr inbounds i8, i8* %122, i64 16468
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds i8, i8* %122, i64 16512
  %139 = bitcast i8* %138 to float*
  br i1 %137, label %145, label %140

140:                                              ; preds = %133
  %141 = load float, float* %139, align 8
  %142 = fadd float %119, %141
  %143 = add nsw i32 %120, 1
  %144 = call %24* @listAddNodeTail(%24* %110, i8* nonnull %122) #14
  br label %146

145:                                              ; preds = %133
  store float 0.000000e+00, float* %139, align 8
  br label %146

146:                                              ; preds = %145, %140, %128, %117
  %147 = phi i32 [ %143, %140 ], [ %120, %145 ], [ %120, %128 ], [ %120, %117 ]
  %148 = phi float [ %142, %140 ], [ %119, %145 ], [ %119, %128 ], [ %119, %117 ]
  %149 = call %25* @listNext(%26* nonnull %5) #14
  %150 = icmp eq %25* %149, null
  br i1 %150, label %179, label %117

151:                                              ; preds = %114, %174
  %152 = phi %25* [ %177, %174 ], [ %112, %114 ]
  %153 = phi float [ %176, %174 ], [ 0.000000e+00, %114 ]
  %154 = phi i32 [ %175, %174 ], [ 0, %114 ]
  %155 = getelementptr inbounds %25, %25* %152, i64 0, i32 2
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 56
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %151
  %163 = getelementptr inbounds i8, i8* %156, i64 72
  %164 = bitcast i8* %163 to i8**
  %165 = load i8*, i8** %164, align 8
  %166 = icmp eq i8* %165, null
  br i1 %166, label %167, label %174

167:                                              ; preds = %162
  %168 = getelementptr inbounds i8, i8* %156, i64 16512
  %169 = bitcast i8* %168 to float*
  %170 = load float, float* %169, align 8
  %171 = fadd float %153, %170
  %172 = add nsw i32 %154, 1
  %173 = call %24* @listAddNodeTail(%24* %110, i8* nonnull %156) #14
  br label %174

174:                                              ; preds = %151, %162, %167
  %175 = phi i32 [ %172, %167 ], [ %154, %162 ], [ %154, %151 ]
  %176 = phi float [ %171, %167 ], [ %153, %162 ], [ %153, %151 ]
  %177 = call %25* @listNext(%26* nonnull %5) #14
  %178 = icmp eq %25* %177, null
  br i1 %178, label %179, label %151

179:                                              ; preds = %174, %146, %108
  %180 = phi i32 [ 0, %108 ], [ %147, %146 ], [ %175, %174 ]
  %181 = phi float [ 0.000000e+00, %108 ], [ %148, %146 ], [ %176, %174 ]
  %182 = sext i32 %180 to i64
  %183 = shl nsw i64 %182, 3
  %184 = call i8* @zmalloc(i64 %183) #14
  %185 = bitcast i8* %184 to %27**
  %186 = icmp eq i8* %184, null
  br i1 %186, label %423, label %187

187:                                              ; preds = %179
  %188 = call fastcc i32 @1366(i32 1)
  %189 = load %24*, %24** @.1, align 8
  %190 = icmp eq %24* %189, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %24, %24* %189, i64 0, i32 5
  %193 = load i64, i64* %192, align 8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %196, label %195

195:                                              ; preds = %191
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @978, i64 0, i64 0))
  br label %423

196:                                              ; preds = %191, %187
  %197 = load float, float* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 13), align 4
  call void @listRewind(%24* %110, %26* nonnull %5) #14
  %198 = call %25* @listNext(%26* nonnull %5) #14
  %199 = icmp eq %25* %198, null
  br i1 %199, label %262, label %200

200:                                              ; preds = %196
  %201 = fdiv float 1.638400e+04, %181
  %202 = fcmp ogt float %197, 0.000000e+00
  br i1 %202, label %203, label %240

203:                                              ; preds = %200, %236
  %204 = phi i64 [ %211, %236 ], [ 0, %200 ]
  %205 = phi %25* [ %238, %236 ], [ %198, %200 ]
  %206 = phi i32 [ %237, %236 ], [ 0, %200 ]
  %207 = phi i32 [ %221, %236 ], [ 0, %200 ]
  %208 = getelementptr inbounds %25, %25* %205, i64 0, i32 2
  %209 = bitcast i8** %208 to %27**
  %210 = load %27*, %27** %209, align 8
  %211 = add nuw i64 %204, 1
  %212 = getelementptr inbounds %27*, %27** %185, i64 %204
  store %27* %210, %27** %212, align 8
  %213 = getelementptr inbounds %27, %27* %210, i64 0, i32 19
  %214 = load float, float* %213, align 8
  %215 = fmul float %201, %214
  %216 = fptosi float %215 to i32
  %217 = getelementptr inbounds %27, %27* %210, i64 0, i32 12
  %218 = load i32, i32* %217, align 4
  %219 = sub nsw i32 %218, %216
  %220 = getelementptr inbounds %27, %27* %210, i64 0, i32 20
  store i32 %219, i32* %220, align 4
  %221 = add nsw i32 %219, %207
  %222 = icmp sgt i32 %218, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %203
  %224 = icmp sgt i32 %216, 1
  %225 = select i1 %224, i32 1, i32 %206
  br label %236

226:                                              ; preds = %203
  %227 = sitofp i32 %216 to double
  %228 = fmul double %227, 1.000000e+02
  %229 = sitofp i32 %218 to double
  %230 = fdiv double %228, %229
  %231 = fsub double 1.000000e+02, %230
  %232 = fptrunc double %231 to float
  %233 = call float @llvm.fabs.f32(float %232)
  %234 = fcmp ogt float %233, %197
  br i1 %234, label %235, label %236

235:                                              ; preds = %226
  br label %236

236:                                              ; preds = %235, %226, %223
  %237 = phi i32 [ 1, %235 ], [ %206, %226 ], [ %225, %223 ]
  %238 = call %25* @listNext(%26* nonnull %5) #14
  %239 = icmp eq %25* %238, null
  br i1 %239, label %258, label %203

240:                                              ; preds = %200, %240
  %241 = phi i64 [ %246, %240 ], [ 0, %200 ]
  %242 = phi %25* [ %256, %240 ], [ %198, %200 ]
  %243 = getelementptr inbounds %25, %25* %242, i64 0, i32 2
  %244 = bitcast i8** %243 to %27**
  %245 = load %27*, %27** %244, align 8
  %246 = add nuw i64 %241, 1
  %247 = getelementptr inbounds %27*, %27** %185, i64 %241
  store %27* %245, %27** %247, align 8
  %248 = getelementptr inbounds %27, %27* %245, i64 0, i32 19
  %249 = load float, float* %248, align 8
  %250 = fmul float %201, %249
  %251 = fptosi float %250 to i32
  %252 = getelementptr inbounds %27, %27* %245, i64 0, i32 12
  %253 = load i32, i32* %252, align 4
  %254 = sub nsw i32 %253, %251
  %255 = getelementptr inbounds %27, %27* %245, i64 0, i32 20
  store i32 %254, i32* %255, align 4
  %256 = call %25* @listNext(%26* nonnull %5) #14
  %257 = icmp eq %25* %256, null
  br i1 %257, label %262, label %240

258:                                              ; preds = %236
  %259 = icmp eq i32 %237, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = icmp sgt i32 %221, 0
  br i1 %261, label %268, label %290

262:                                              ; preds = %240, %196, %258
  %263 = load float, float* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 13), align 4
  %264 = fpext float %263 to double
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @979, i64 0, i64 0), double %264)
  br label %423

265:                                              ; preds = %286, %268
  %266 = phi i32 [ %269, %268 ], [ %287, %286 ]
  %267 = icmp sgt i32 %266, 0
  br i1 %267, label %268, label %290

268:                                              ; preds = %260, %265
  %269 = phi i32 [ %266, %265 ], [ %221, %260 ]
  call void @listRewind(%24* %110, %26* nonnull %5) #14
  %270 = call %25* @listNext(%26* nonnull %5) #14
  %271 = icmp eq %25* %270, null
  br i1 %271, label %265, label %272

272:                                              ; preds = %268, %286
  %273 = phi %25* [ %288, %286 ], [ %270, %268 ]
  %274 = phi i32 [ %287, %286 ], [ %269, %268 ]
  %275 = getelementptr inbounds %25, %25* %273, i64 0, i32 2
  %276 = bitcast i8** %275 to %27**
  %277 = load %27*, %27** %276, align 8
  %278 = getelementptr inbounds %27, %27* %277, i64 0, i32 20
  %279 = load i32, i32* %278, align 4
  %280 = icmp slt i32 %279, 1
  %281 = icmp sgt i32 %274, 0
  %282 = and i1 %281, %280
  br i1 %282, label %283, label %286

283:                                              ; preds = %272
  %284 = add nsw i32 %279, -1
  store i32 %284, i32* %278, align 4
  %285 = add nsw i32 %274, -1
  br label %286

286:                                              ; preds = %283, %272
  %287 = phi i32 [ %285, %283 ], [ %274, %272 ]
  %288 = call %25* @listNext(%26* nonnull %5) #14
  %289 = icmp eq %25* %288, null
  br i1 %289, label %265, label %272

290:                                              ; preds = %265, %260
  call void @qsort(i8* nonnull %184, i64 %182, i64 8, i32 (i8*, i8*)* nonnull @clusterManagerCompareNodeBalance) #14
  %291 = fpext float %181 to double
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @980, i64 0, i64 0), i32 %180, double %291)
  %292 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 50), align 4
  %293 = icmp ne i32 %292, 0
  %294 = icmp sgt i32 %180, 0
  %295 = and i1 %293, %294
  br i1 %295, label %296, label %311

296:                                              ; preds = %290
  %297 = zext i32 %180 to i64
  br label %298

298:                                              ; preds = %298, %296
  %299 = phi i64 [ 0, %296 ], [ %309, %298 ]
  %300 = getelementptr inbounds %27*, %27** %185, i64 %299
  %301 = load %27*, %27** %300, align 8
  %302 = getelementptr inbounds %27, %27* %301, i64 0, i32 2
  %303 = load i8*, i8** %302, align 8
  %304 = getelementptr inbounds %27, %27* %301, i64 0, i32 3
  %305 = load i32, i32* %304, align 8
  %306 = getelementptr inbounds %27, %27* %301, i64 0, i32 20
  %307 = load i32, i32* %306, align 4
  %308 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @981, i64 0, i64 0), i8* %303, i32 %305, i32 %307)
  %309 = add nuw nsw i64 %299, 1
  %310 = icmp eq i64 %309, %297
  br i1 %310, label %311, label %298

311:                                              ; preds = %298, %290
  %312 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %313 = and i32 %312, 32
  %314 = icmp eq i32 %313, 0
  %315 = bitcast %26* %3 to i8*
  %316 = icmp sgt i32 %180, 1
  br i1 %316, label %317, label %423

317:                                              ; preds = %311
  %318 = add nsw i32 %180, -1
  br label %319

319:                                              ; preds = %317, %409
  %320 = phi i32 [ 1, %317 ], [ %411, %409 ]
  %321 = phi i32 [ %318, %317 ], [ %421, %409 ]
  %322 = phi i32 [ 0, %317 ], [ %418, %409 ]
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds %27*, %27** %185, i64 %323
  %325 = load %27*, %27** %324, align 8
  %326 = sext i32 %321 to i64
  %327 = getelementptr inbounds %27*, %27** %185, i64 %326
  %328 = load %27*, %27** %327, align 8
  %329 = getelementptr inbounds %27, %27* %325, i64 0, i32 20
  %330 = load i32, i32* %329, align 4
  %331 = icmp slt i32 %330, 0
  %332 = sub nsw i32 0, %330
  %333 = select i1 %331, i32 %332, i32 %330
  %334 = getelementptr inbounds %27, %27* %328, i64 0, i32 20
  %335 = load i32, i32* %334, align 4
  %336 = icmp slt i32 %335, 0
  %337 = sub nsw i32 0, %335
  %338 = select i1 %336, i32 %337, i32 %335
  %339 = icmp slt i32 %333, %338
  %340 = select i1 %339, i32 %333, i32 %338
  %341 = icmp sgt i32 %340, 0
  br i1 %341, label %342, label %409

342:                                              ; preds = %319
  %343 = getelementptr inbounds %27, %27* %328, i64 0, i32 2
  %344 = load i8*, i8** %343, align 8
  %345 = getelementptr inbounds %27, %27* %328, i64 0, i32 3
  %346 = load i32, i32* %345, align 8
  %347 = getelementptr inbounds %27, %27* %325, i64 0, i32 2
  %348 = load i8*, i8** %347, align 8
  %349 = getelementptr inbounds %27, %27* %325, i64 0, i32 3
  %350 = load i32, i32* %349, align 8
  %351 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @982, i64 0, i64 0), i32 %340, i8* %344, i32 %346, i8* %348, i32 %350)
  %352 = call %24* @listCreate() #14
  %353 = bitcast %27* %328 to i8*
  %354 = call %24* @listAddNodeTail(%24* %352, i8* %353) #14
  %355 = call fastcc %24* @1387(%24* %352, i32 %340)
  call void @listRelease(%24* %352) #14
  %356 = getelementptr inbounds %24, %24* %355, i64 0, i32 5
  %357 = load i64, i64* %356, align 8
  %358 = trunc i64 %357 to i32
  %359 = icmp ne %24* %355, null
  %360 = icmp eq i32 %340, %358
  %361 = and i1 %359, %360
  br i1 %361, label %363, label %362

362:                                              ; preds = %342
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @983, i64 0, i64 0))
  br label %392

363:                                              ; preds = %342
  br i1 %314, label %369, label %364

364:                                              ; preds = %363, %364
  %365 = phi i32 [ %367, %364 ], [ 0, %363 ]
  %366 = call i32 @putchar(i32 35)
  %367 = add nuw nsw i32 %365, 1
  %368 = icmp eq i32 %367, %340
  br i1 %368, label %389, label %364

369:                                              ; preds = %363
  call void @listRewind(%24* nonnull %355, %26* nonnull %5) #14
  %370 = call %25* @listNext(%26* nonnull %5) #14
  %371 = icmp eq %25* %370, null
  br i1 %371, label %389, label %372

372:                                              ; preds = %369, %383
  %373 = phi %25* [ %387, %383 ], [ %370, %369 ]
  %374 = getelementptr inbounds %25, %25* %373, i64 0, i32 2
  %375 = bitcast i8** %374 to %29**
  %376 = load %29*, %29** %375, align 8
  %377 = getelementptr inbounds %29, %29* %376, i64 0, i32 0
  %378 = load %27*, %27** %377, align 8
  %379 = getelementptr inbounds %29, %29* %376, i64 0, i32 1
  %380 = load i32, i32* %379, align 8
  %381 = call fastcc i32 @1382(%27* %378, %27* %325, i32 %380, i32 68, i8** null)
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %392, label %383

383:                                              ; preds = %372
  %384 = call i32 @putchar(i32 35)
  %385 = load %1*, %1** @stdout, align 8
  %386 = call i32 @fflush(%1* %385)
  %387 = call %25* @listNext(%26* nonnull %5) #14
  %388 = icmp eq %25* %387, null
  br i1 %388, label %389, label %372

389:                                              ; preds = %364, %383, %369
  %390 = phi i32 [ %320, %369 ], [ %381, %383 ], [ %320, %364 ]
  %391 = call i32 @putchar(i32 10)
  br label %392

392:                                              ; preds = %372, %389, %362
  %393 = phi i32 [ 0, %362 ], [ %390, %389 ], [ 0, %372 ]
  %394 = icmp eq %24* %355, null
  br i1 %394, label %405, label %395

395:                                              ; preds = %392
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #14
  call void @listRewind(%24* nonnull %355, %26* nonnull %3) #14
  %396 = call %25* @listNext(%26* nonnull %3) #14
  %397 = icmp eq %25* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %395, %398
  %399 = phi %25* [ %402, %398 ], [ %396, %395 ]
  %400 = getelementptr inbounds %25, %25* %399, i64 0, i32 2
  %401 = load i8*, i8** %400, align 8
  call void @zfree(i8* %401) #14
  %402 = call %25* @listNext(%26* nonnull %3) #14
  %403 = icmp eq %25* %402, null
  br i1 %403, label %404, label %398

404:                                              ; preds = %398, %395
  call void @listRelease(%24* nonnull %355) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #14
  br label %405

405:                                              ; preds = %404, %392
  %406 = icmp eq i32 %393, 0
  br i1 %406, label %423, label %407

407:                                              ; preds = %405
  %408 = load i32, i32* %329, align 4
  br label %409

409:                                              ; preds = %319, %407
  %410 = phi i32 [ %408, %407 ], [ %330, %319 ]
  %411 = phi i32 [ %393, %407 ], [ %320, %319 ]
  %412 = add nsw i32 %410, %340
  store i32 %412, i32* %329, align 4
  %413 = load i32, i32* %334, align 4
  %414 = sub nsw i32 %413, %340
  store i32 %414, i32* %334, align 4
  %415 = load i32, i32* %329, align 4
  %416 = icmp eq i32 %415, 0
  %417 = zext i1 %416 to i32
  %418 = add nuw nsw i32 %322, %417
  %419 = icmp eq i32 %414, 0
  %420 = sext i1 %419 to i32
  %421 = add nsw i32 %321, %420
  %422 = icmp slt i32 %418, %421
  br i1 %422, label %319, label %423

423:                                              ; preds = %409, %405, %311, %179, %262, %195
  %424 = phi i32 [ 1, %179 ], [ 0, %195 ], [ 1, %262 ], [ 1, %311 ], [ 0, %405 ], [ %411, %409 ]
  %425 = icmp eq %24* %110, null
  br i1 %425, label %427, label %426

426:                                              ; preds = %423
  call void @listRelease(%24* nonnull %110) #14
  br label %427

427:                                              ; preds = %423, %426
  br i1 %186, label %432, label %428

428:                                              ; preds = %427
  call void @zfree(i8* nonnull %184) #14
  br label %432

429:                                              ; preds = %23, %12
  %430 = load %1*, %1** @stderr, align 8
  %431 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %430) #16
  br label %432

432:                                              ; preds = %102, %57, %94, %428, %427, %31, %429
  %433 = phi i32 [ 0, %429 ], [ 0, %31 ], [ %424, %427 ], [ %424, %428 ], [ 0, %94 ], [ 0, %57 ], [ 0, %102 ]
  ret i32 %433
}

; Function Attrs: nounwind uwtable
define internal i32 @1337(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca %26, align 8
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds i8*, i8** %1, i64 1
  %6 = icmp eq i32 %0, 2
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = load i8*, i8** %5, align 8
  %9 = tail call i8* @strrchr(i8* %8, i32 64) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i8 0, i8* %9, align 1
  br label %12

12:                                               ; preds = %11, %7
  %13 = tail call i8* @strrchr(i8* %8, i32 58) #17
  %14 = icmp eq i8* %13, null
  br i1 %14, label %253, label %15

15:                                               ; preds = %12
  store i8 0, i8* %13, align 1
  %16 = ptrtoint i8* %8 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  br label %23

18:                                               ; preds = %2
  %19 = bitcast i8** %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8*, i8** %1, i64 2
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %18, %15
  %24 = phi i8* [ %22, %18 ], [ %17, %15 ]
  %25 = phi i64 [ %20, %18 ], [ %16, %15 ]
  %26 = tail call i64 @strtol(i8* nocapture nonnull %24, i8** null, i32 10) #14
  %27 = trunc i64 %26 to i32
  %28 = icmp ne i64 %25, 0
  %29 = icmp ne i32 %27, 0
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %253

31:                                               ; preds = %23
  %32 = inttoptr i64 %25 to i8*
  %33 = load i8*, i8** %1, align 8
  %34 = tail call i8* @strrchr(i8* %33, i32 64) #17
  %35 = icmp eq i8* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  store i8 0, i8* %34, align 1
  br label %37

37:                                               ; preds = %36, %31
  %38 = tail call i8* @strrchr(i8* %33, i32 58) #17
  %39 = icmp eq i8* %38, null
  br i1 %39, label %253, label %40

40:                                               ; preds = %37
  store i8 0, i8* %38, align 1
  %41 = getelementptr inbounds i8, i8* %38, i64 1
  %42 = tail call i64 @strtol(i8* nocapture nonnull %41, i8** null, i32 10) #14
  %43 = trunc i64 %42 to i32
  %44 = icmp ne i8* %33, null
  %45 = icmp ne i32 %43, 0
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %253

47:                                               ; preds = %40
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @940, i64 0, i64 0), i8* nonnull %33, i32 %43, i8* %32, i32 %27)
  %48 = tail call i8* @zmalloc(i64 16520) #14
  %49 = bitcast i8* %48 to %27*
  %50 = getelementptr inbounds i8, i8* %48, i64 16
  %51 = bitcast i8* %50 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #14
  store i8* %32, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 24
  %53 = bitcast i8* %52 to i32*
  store i32 %27, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 32
  %55 = getelementptr inbounds i8, i8* %48, i64 64
  %56 = getelementptr inbounds i8, i8* %48, i64 16480
  %57 = getelementptr inbounds i8, i8* %48, i64 16472
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %48, i64 16512
  %60 = bitcast i8* %59 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %60, align 8
  %61 = getelementptr inbounds i8, i8* %48, i64 16516
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %48, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 0, i64 16388, i1 false) #14
  %64 = tail call fastcc i32 @1365(%27* %49)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %256, label %66

66:                                               ; preds = %47
  %67 = tail call fastcc i32 @1366(i32 0)
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %256, label %69

69:                                               ; preds = %66
  %70 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %119, label %73

73:                                               ; preds = %69
  %74 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 9), align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = tail call fastcc %27* @1377(i8* nonnull %74)
  %78 = icmp eq %27* %77, null
  br i1 %78, label %118, label %119

79:                                               ; preds = %73
  %80 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #14
  %81 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %81, %26* nonnull %3) #14
  %82 = call %25* @listNext(%26* nonnull %3) #14
  %83 = icmp eq %25* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #14
  br label %111

85:                                               ; preds = %79, %104
  %86 = phi %25* [ %107, %104 ], [ %82, %79 ]
  %87 = phi %27* [ %106, %104 ], [ null, %79 ]
  %88 = phi i32 [ %105, %104 ], [ 0, %79 ]
  %89 = getelementptr inbounds %25, %25* %86, i64 0, i32 2
  %90 = bitcast i8** %89 to %27**
  %91 = load %27*, %27** %90, align 8
  %92 = getelementptr inbounds %27, %27* %91, i64 0, i32 7
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %85
  %97 = icmp eq %27* %87, null
  %98 = getelementptr inbounds %27, %27* %91, i64 0, i32 13
  %99 = load i32, i32* %98, align 8
  %100 = icmp slt i32 %99, %88
  %101 = or i1 %97, %100
  %102 = select i1 %101, i32 %99, i32 %88
  %103 = select i1 %101, %27* %91, %27* %87
  br label %104

104:                                              ; preds = %96, %85
  %105 = phi i32 [ %88, %85 ], [ %102, %96 ]
  %106 = phi %27* [ %87, %85 ], [ %103, %96 ]
  %107 = call %25* @listNext(%26* nonnull %3) #14
  %108 = icmp eq %25* %107, null
  br i1 %108, label %109, label %85

109:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #14
  %110 = icmp eq %27* %106, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %84, %109
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @942, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 5646, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @943, i64 0, i64 0)) #19
  unreachable

112:                                              ; preds = %109
  %113 = getelementptr inbounds %27, %27* %106, i64 0, i32 2
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %27, %27* %106, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @944, i64 0, i64 0), i8* %114, i32 %116)
  br label %119

118:                                              ; preds = %76
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @941, i64 0, i64 0), i8* nonnull %74)
  br label %256

119:                                              ; preds = %112, %76, %69
  %120 = phi %27* [ null, %69 ], [ %106, %112 ], [ %77, %76 ]
  %121 = call i8* @zmalloc(i64 16520) #14
  %122 = bitcast i8* %121 to %27*
  %123 = getelementptr i8, i8* %121, i64 16
  %124 = bitcast i8* %123 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #14
  store i8* %33, i8** %124, align 8
  %125 = getelementptr i8, i8* %121, i64 24
  %126 = bitcast i8* %125 to i32*
  store i32 %43, i32* %126, align 8
  %127 = getelementptr inbounds i8, i8* %121, i64 32
  %128 = getelementptr inbounds i8, i8* %121, i64 64
  %129 = getelementptr inbounds i8, i8* %121, i64 16480
  %130 = getelementptr inbounds i8, i8* %121, i64 16472
  %131 = bitcast i8* %130 to i32*
  store i32 0, i32* %131, align 8
  %132 = getelementptr inbounds i8, i8* %121, i64 16512
  %133 = bitcast i8* %132 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 28, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 20, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %133, align 8
  %134 = getelementptr inbounds i8, i8* %121, i64 16516
  %135 = bitcast i8* %134 to i32*
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds i8, i8* %121, i64 84
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %136, i8 0, i64 16388, i1 false) #14
  %137 = call fastcc i32 @1358(%27* %122)
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %247, label %139

139:                                              ; preds = %119
  store i8* null, i8** %4, align 8
  %140 = bitcast i8* %121 to %9**
  %141 = load %9*, %9** %140, align 8
  %142 = call i8* (%9*, i8*, ...) @redisCommand(%9* %141, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0)) #14
  store i8* null, i8** %4, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %166, label %144

144:                                              ; preds = %139
  %145 = bitcast i8* %142 to i32*
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 6
  br i1 %147, label %148, label %159

148:                                              ; preds = %144
  %149 = getelementptr inbounds i8, i8* %142, i64 24
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  %153 = call i8* @zmalloc(i64 %152) #14
  store i8* %153, i8** %4, align 8
  %154 = getelementptr inbounds i8, i8* %142, i64 32
  %155 = bitcast i8* %154 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = call i8* @strcpy(i8* %153, i8* %156) #14
  call void @freeReplyObject(i8* nonnull %142) #14
  %158 = load i8*, i8** %4, align 8
  br label %166

159:                                              ; preds = %144
  %160 = getelementptr inbounds i8, i8* %142, i64 32
  %161 = bitcast i8* %160 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = call fastcc i64 @1367(i8* %162, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @781, i64 0, i64 0)) #14
  %164 = trunc i64 %163 to i32
  call void @freeReplyObject(i8* nonnull %142) #14
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %175

166:                                              ; preds = %148, %139, %159
  %167 = phi i8* [ %158, %148 ], [ null, %139 ], [ null, %159 ]
  %168 = load i8*, i8** %124, align 8
  %169 = load i32, i32* %126, align 8
  %170 = icmp eq i8* %167, null
  %171 = select i1 %170, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @782, i64 0, i64 0), i8* %167
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @783, i64 0, i64 0), i8* %168, i32 %169, i8* %171) #14
  %172 = load i8*, i8** %4, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %249, label %174

174:                                              ; preds = %166
  call void @zfree(i8* nonnull %172) #14
  br label %249

175:                                              ; preds = %159
  %176 = call fastcc i32 @1360(%27* nonnull %122, i32 0, i8** nonnull %4)
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %185

178:                                              ; preds = %175
  %179 = load i8*, i8** %4, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %249, label %181

181:                                              ; preds = %178
  %182 = load i8*, i8** %124, align 8
  %183 = load i32, i32* %126, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %182, i32 %183, i8* nonnull %179)
  %184 = load i8*, i8** %4, align 8
  call void @zfree(i8* %184) #14
  br label %249

185:                                              ; preds = %175
  %186 = call fastcc i32 @1362(%27* nonnull %122, i8** nonnull %4)
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %197

188:                                              ; preds = %185
  %189 = load i8*, i8** %4, align 8
  %190 = load i8*, i8** %124, align 8
  %191 = load i32, i32* %126, align 8
  %192 = icmp eq i8* %189, null
  %193 = select i1 %192, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @800, i64 0, i64 0), i8* %189
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @783, i64 0, i64 0), i8* %190, i32 %191, i8* %193) #14
  %194 = load i8*, i8** %4, align 8
  %195 = icmp eq i8* %194, null
  br i1 %195, label %249, label %196

196:                                              ; preds = %188
  call void @zfree(i8* nonnull %194) #14
  br label %249

197:                                              ; preds = %185
  %198 = load %24*, %24** @.0.1, align 8
  %199 = getelementptr inbounds %24, %24* %198, i64 0, i32 0
  %200 = load %25*, %25** %199, align 8
  %201 = getelementptr inbounds %25, %25* %200, i64 0, i32 2
  %202 = bitcast i8** %201 to %27**
  %203 = load %27*, %27** %202, align 8
  %204 = call %24* @listAddNodeTail(%24* %198, i8* nonnull %121) #14
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @946, i64 0, i64 0), i8* %33, i32 %43)
  %205 = load %9*, %9** %140, align 8
  %206 = getelementptr inbounds %27, %27* %203, i64 0, i32 2
  %207 = load i8*, i8** %206, align 8
  %208 = getelementptr inbounds %27, %27* %203, i64 0, i32 3
  %209 = load i32, i32* %208, align 8
  %210 = call i8* (%9*, i8*, ...) @redisCommand(%9* %205, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @947, i64 0, i64 0), i8* %207, i32 %209) #14
  %211 = icmp eq i8* %210, null
  br i1 %211, label %256, label %212

212:                                              ; preds = %197
  %213 = bitcast i8* %210 to i32*
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %214, 6
  br i1 %215, label %216, label %222

216:                                              ; preds = %212
  %217 = load i8*, i8** %124, align 8
  %218 = load i32, i32* %126, align 8
  %219 = getelementptr inbounds i8, i8* %210, i64 32
  %220 = bitcast i8* %219 to i8**
  %221 = load i8*, i8** %220, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %217, i32 %218, i8* %221) #14
  br label %250

222:                                              ; preds = %212
  %223 = icmp eq %27* %120, null
  br i1 %223, label %245, label %224

224:                                              ; preds = %222
  %225 = call i32 @sleep(i32 1) #14
  call fastcc void @1364()
  %226 = getelementptr inbounds %27, %27* %120, i64 0, i32 2
  %227 = load i8*, i8** %226, align 8
  %228 = getelementptr inbounds %27, %27* %120, i64 0, i32 3
  %229 = load i32, i32* %228, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @948, i64 0, i64 0), i8* %227, i32 %229)
  call void @freeReplyObject(i8* nonnull %210) #14
  %230 = load %9*, %9** %140, align 8
  %231 = getelementptr inbounds %27, %27* %120, i64 0, i32 1
  %232 = load i8*, i8** %231, align 8
  %233 = call i8* (%9*, i8*, ...) @redisCommand(%9* %230, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @831, i64 0, i64 0), i8* %232) #14
  %234 = icmp eq i8* %233, null
  br i1 %234, label %256, label %235

235:                                              ; preds = %224
  %236 = bitcast i8* %233 to i32*
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %237, 6
  br i1 %238, label %239, label %245

239:                                              ; preds = %235
  %240 = load i8*, i8** %124, align 8
  %241 = load i32, i32* %126, align 8
  %242 = getelementptr inbounds i8, i8* %233, i64 32
  %243 = bitcast i8* %242 to i8**
  %244 = load i8*, i8** %243, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %240, i32 %241, i8* %244) #14
  br label %250

245:                                              ; preds = %222, %235
  %246 = phi i8* [ %210, %222 ], [ %233, %235 ]
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @949, i64 0, i64 0))
  br label %250

247:                                              ; preds = %119
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @945, i64 0, i64 0), i8* %33, i32 %43)
  %248 = icmp eq i8* %121, null
  br i1 %248, label %256, label %249

249:                                              ; preds = %174, %196, %166, %188, %178, %181, %247
  call fastcc void @1359(%27* nonnull %122)
  br label %256

250:                                              ; preds = %216, %239, %245
  %251 = phi i32 [ 1, %245 ], [ 0, %216 ], [ 0, %239 ]
  %252 = phi i8* [ %246, %245 ], [ %210, %216 ], [ %233, %239 ]
  call void @freeReplyObject(i8* nonnull %252) #14
  br label %256

253:                                              ; preds = %37, %40, %12, %23
  %254 = load %1*, %1** @stderr, align 8
  %255 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %254) #16
  br label %256

256:                                              ; preds = %247, %224, %197, %249, %118, %250, %66, %47, %253
  %257 = phi i32 [ 0, %118 ], [ 0, %253 ], [ 0, %47 ], [ 0, %66 ], [ %251, %250 ], [ 0, %247 ], [ 0, %249 ], [ 0, %197 ], [ 0, %224 ]
  ret i32 %257
}

; Function Attrs: nounwind uwtable
define internal i32 @1338(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca %26, align 8
  %4 = alloca %26, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = tail call i8* @strrchr(i8* %5, i32 64) #17
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i8 0, i8* %6, align 1
  br label %9

9:                                                ; preds = %8, %2
  %10 = tail call i8* @strrchr(i8* %5, i32 58) #17
  %11 = icmp eq i8* %10, null
  br i1 %11, label %176, label %12

12:                                               ; preds = %9
  store i8 0, i8* %10, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 1
  %14 = tail call i64 @strtol(i8* nocapture nonnull %13, i8** null, i32 10) #14
  %15 = trunc i64 %14 to i32
  %16 = icmp ne i8* %5, null
  %17 = icmp ne i32 %15, 0
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %176

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8*, i8** %1, i64 1
  %21 = load i8*, i8** %20, align 8
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @951, i64 0, i64 0), i8* %21, i8* nonnull %5, i32 %15)
  %22 = tail call i8* @zmalloc(i64 16520) #14
  %23 = bitcast i8* %22 to %27*
  %24 = getelementptr inbounds i8, i8* %22, i64 16
  %25 = bitcast i8* %24 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #14
  store i8* %5, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 24
  %27 = bitcast i8* %26 to i32*
  store i32 %15, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 32
  %29 = getelementptr inbounds i8, i8* %22, i64 64
  %30 = getelementptr inbounds i8, i8* %22, i64 16480
  %31 = getelementptr inbounds i8, i8* %22, i64 16472
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %22, i64 16512
  %34 = bitcast i8* %33 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %34, align 8
  %35 = getelementptr inbounds i8, i8* %22, i64 16516
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %22, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 16388, i1 false) #14
  %38 = tail call fastcc i32 @1365(%27* %23)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %179, label %40

40:                                               ; preds = %19
  %41 = tail call fastcc %27* @1377(i8* %21)
  %42 = icmp eq %27* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @952, i64 0, i64 0), i8* %21)
  br label %179

44:                                               ; preds = %40
  %45 = getelementptr inbounds %27, %27* %41, i64 0, i32 12
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %27, %27* %41, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %27, %27* %41, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @953, i64 0, i64 0), i8* %50, i32 %52)
  br label %179

53:                                               ; preds = %44
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @954, i64 0, i64 0))
  %54 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %54, %26* nonnull %4) #14
  %55 = call %25* @listNext(%26* nonnull %4) #14
  %56 = icmp eq %25* %55, null
  br i1 %56, label %157, label %57

57:                                               ; preds = %53
  %58 = bitcast %26* %3 to i8*
  br label %59

59:                                               ; preds = %57, %154
  %60 = phi %25* [ %55, %57 ], [ %155, %154 ]
  %61 = getelementptr inbounds %25, %25* %60, i64 0, i32 2
  %62 = bitcast i8** %61 to %27**
  %63 = load %27*, %27** %62, align 8
  %64 = icmp eq %27* %63, %41
  br i1 %64, label %154, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %27, %27* %63, i64 0, i32 9
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %132, label %69

69:                                               ; preds = %65
  %70 = call i32 @strcasecmp(i8* nonnull %67, i8* %21) #17
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %132

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #14
  %73 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %73, %26* nonnull %3) #14
  %74 = call %25* @listNext(%26* nonnull %3) #14
  %75 = icmp eq %25* %74, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #14
  br label %103

77:                                               ; preds = %72, %96
  %78 = phi %25* [ %99, %96 ], [ %74, %72 ]
  %79 = phi %27* [ %98, %96 ], [ null, %72 ]
  %80 = phi i32 [ %97, %96 ], [ 0, %72 ]
  %81 = getelementptr inbounds %25, %25* %78, i64 0, i32 2
  %82 = bitcast i8** %81 to %27**
  %83 = load %27*, %27** %82, align 8
  %84 = getelementptr inbounds %27, %27* %83, i64 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %96

88:                                               ; preds = %77
  %89 = icmp eq %27* %79, null
  %90 = getelementptr inbounds %27, %27* %83, i64 0, i32 13
  %91 = load i32, i32* %90, align 8
  %92 = icmp slt i32 %91, %80
  %93 = or i1 %89, %92
  %94 = select i1 %93, i32 %91, i32 %80
  %95 = select i1 %93, %27* %83, %27* %79
  br label %96

96:                                               ; preds = %88, %77
  %97 = phi i32 [ %80, %77 ], [ %94, %88 ]
  %98 = phi %27* [ %79, %77 ], [ %95, %88 ]
  %99 = call %25* @listNext(%26* nonnull %3) #14
  %100 = icmp eq %25* %99, null
  br i1 %100, label %101, label %77

101:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #14
  %102 = icmp eq %27* %98, null
  br i1 %102, label %103, label %104

103:                                              ; preds = %101, %76
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @955, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 5753, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @956, i64 0, i64 0)) #19
  unreachable

104:                                              ; preds = %101
  %105 = getelementptr inbounds %27, %27* %63, i64 0, i32 2
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %27, %27* %63, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %27, %27* %98, i64 0, i32 2
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %27, %27* %98, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @957, i64 0, i64 0), i8* %106, i32 %108, i8* %110, i32 %112)
  %113 = getelementptr inbounds %27, %27* %63, i64 0, i32 0
  %114 = load %9*, %9** %113, align 8
  %115 = getelementptr inbounds %27, %27* %98, i64 0, i32 1
  %116 = load i8*, i8** %115, align 8
  %117 = call i8* (%9*, i8*, ...) @redisCommand(%9* %114, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @831, i64 0, i64 0), i8* %116) #14
  %118 = icmp eq i8* %117, null
  br i1 %118, label %179, label %119

119:                                              ; preds = %104
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 6
  br i1 %122, label %123, label %131

123:                                              ; preds = %119
  %124 = getelementptr inbounds %27, %27* %63, i64 0, i32 2
  %125 = getelementptr inbounds %27, %27* %63, i64 0, i32 3
  %126 = load i8*, i8** %124, align 8
  %127 = load i32, i32* %125, align 8
  %128 = getelementptr inbounds i8, i8* %117, i64 32
  %129 = bitcast i8* %128 to i8**
  %130 = load i8*, i8** %129, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %126, i32 %127, i8* %130) #14
  call void @freeReplyObject(i8* nonnull %117) #14
  br label %179

131:                                              ; preds = %119
  call void @freeReplyObject(i8* nonnull %117) #14
  br label %132

132:                                              ; preds = %131, %69, %65
  %133 = getelementptr inbounds %27, %27* %63, i64 0, i32 0
  %134 = load %9*, %9** %133, align 8
  %135 = call i8* (%9*, i8*, ...) @redisCommand(%9* %134, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @958, i64 0, i64 0), i8* %21) #14
  %136 = icmp eq i8* %135, null
  br i1 %136, label %151, label %137

137:                                              ; preds = %132
  %138 = bitcast i8* %135 to i32*
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 6
  br i1 %140, label %141, label %149

141:                                              ; preds = %137
  %142 = getelementptr inbounds %27, %27* %63, i64 0, i32 2
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds %27, %27* %63, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds i8, i8* %135, i64 32
  %147 = bitcast i8* %146 to i8**
  %148 = load i8*, i8** %147, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %143, i32 %145, i8* %148) #14
  br label %149

149:                                              ; preds = %141, %137
  %150 = phi i32 [ 1, %137 ], [ 0, %141 ]
  call void @freeReplyObject(i8* nonnull %135) #14
  br label %151

151:                                              ; preds = %149, %132
  %152 = phi i32 [ %150, %149 ], [ 0, %132 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %179, label %154

154:                                              ; preds = %151, %59
  %155 = call %25* @listNext(%26* nonnull %4) #14
  %156 = icmp eq %25* %155, null
  br i1 %156, label %157, label %59

157:                                              ; preds = %154, %53
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @959, i64 0, i64 0))
  %158 = getelementptr inbounds %27, %27* %41, i64 0, i32 0
  %159 = load %9*, %9** %158, align 8
  %160 = call i8* (%9*, i8*, ...) @redisCommand(%9* %159, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @960, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @961, i64 0, i64 0)) #14
  %161 = icmp eq i8* %160, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %157
  %163 = bitcast i8* %160 to i32*
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 6
  br i1 %165, label %166, label %174

166:                                              ; preds = %162
  %167 = getelementptr inbounds %27, %27* %41, i64 0, i32 2
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds %27, %27* %41, i64 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds i8, i8* %160, i64 32
  %172 = bitcast i8* %171 to i8**
  %173 = load i8*, i8** %172, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %168, i32 %170, i8* %173) #14
  br label %174

174:                                              ; preds = %166, %162
  %175 = phi i32 [ 1, %162 ], [ 0, %166 ]
  call void @freeReplyObject(i8* nonnull %160) #14
  br label %179

176:                                              ; preds = %12, %9
  %177 = load %1*, %1** @stderr, align 8
  %178 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %177) #16
  br label %179

179:                                              ; preds = %151, %104, %157, %123, %174, %19, %176, %48, %43
  %180 = phi i32 [ 0, %43 ], [ 0, %48 ], [ 0, %176 ], [ 0, %19 ], [ %175, %174 ], [ 0, %123 ], [ 0, %157 ], [ 0, %104 ], [ 0, %151 ]
  ret i32 %180
}

; Function Attrs: nounwind uwtable
define internal i32 @1339(i32 %0, i8** %1) #0 {
  %3 = alloca %26, align 8
  %4 = alloca %30*, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = tail call i8* @strrchr(i8* %5, i32 64) #17
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i8 0, i8* %6, align 1
  br label %9

9:                                                ; preds = %8, %2
  %10 = tail call i8* @strrchr(i8* %5, i32 58) #17
  %11 = icmp eq i8* %10, null
  br i1 %11, label %108, label %12

12:                                               ; preds = %9
  store i8 0, i8* %10, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 1
  %14 = tail call i64 @strtol(i8* nocapture nonnull %13, i8** null, i32 10) #14
  %15 = trunc i64 %14 to i32
  %16 = icmp ne i8* %5, null
  %17 = icmp ne i32 %15, 0
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %108

19:                                               ; preds = %12
  %20 = tail call i8* @zmalloc(i64 16520) #14
  %21 = bitcast i8* %20 to %27*
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = bitcast i8* %22 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #14
  store i8* %5, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 %15, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 32
  %27 = getelementptr inbounds i8, i8* %20, i64 64
  %28 = getelementptr inbounds i8, i8* %20, i64 16480
  %29 = getelementptr inbounds i8, i8* %20, i64 16472
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %20, i64 16512
  %32 = bitcast i8* %31 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %32, align 8
  %33 = getelementptr inbounds i8, i8* %20, i64 16516
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %20, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 16388, i1 false) #14
  %36 = tail call fastcc i32 @1365(%27* %21)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %111, label %38

38:                                               ; preds = %19
  %39 = add i32 %0, -1
  %40 = getelementptr inbounds i8*, i8** %1, i64 1
  %41 = sext i32 %39 to i64
  %42 = shl nsw i64 %41, 3
  %43 = tail call i8* @zmalloc(i64 %42) #14
  %44 = bitcast i8* %43 to i64*
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1016, i64 0, i64 0))
  %45 = icmp sgt i32 %0, 1
  br i1 %45, label %46, label %57

46:                                               ; preds = %38
  %47 = zext i32 %39 to i64
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %55, %48 ]
  %50 = getelementptr inbounds i8*, i8** %40, i64 %49
  %51 = load i8*, i8** %50, align 8
  %52 = tail call i64 @strlen(i8* %51) #17
  %53 = getelementptr inbounds i64, i64* %44, i64 %49
  store i64 %52, i64* %53, align 8
  %54 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1000, i64 0, i64 0), i8* %51)
  %55 = add nuw nsw i64 %49, 1
  %56 = icmp eq i64 %55, %47
  br i1 %56, label %57, label %48

57:                                               ; preds = %48, %38
  %58 = tail call i32 @putchar(i32 10)
  %59 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %59, %26* nonnull %3) #14
  %60 = call %25* @listNext(%26* nonnull %3) #14
  %61 = icmp eq %25* %60, null
  br i1 %61, label %107, label %62

62:                                               ; preds = %57
  %63 = bitcast %30** %4 to i8*
  %64 = bitcast %30** %4 to i8**
  br label %65

65:                                               ; preds = %62, %104
  %66 = phi %25* [ %60, %62 ], [ %105, %104 ]
  %67 = getelementptr inbounds %25, %25* %66, i64 0, i32 2
  %68 = bitcast i8** %67 to %27**
  %69 = load %27*, %27** %68, align 8
  %70 = getelementptr inbounds %27, %27* %69, i64 0, i32 0
  %71 = load %9*, %9** %70, align 8
  %72 = icmp eq %9* %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %65
  %74 = call fastcc i32 @1358(%27* %69)
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %104, label %76

76:                                               ; preds = %73, %65
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #14
  store %30* null, %30** %4, align 8
  %77 = load %9*, %9** %70, align 8
  %78 = call i32 @redisAppendCommandArgv(%9* %77, i32 %39, i8** nonnull %40, i64* %44) #14
  %79 = load %9*, %9** %70, align 8
  %80 = call i32 @redisGetReply(%9* %79, i8** nonnull %64) #14
  %81 = icmp ne i32 %80, 0
  %82 = load %30*, %30** %4, align 8
  %83 = icmp eq %30* %82, null
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %76
  %86 = getelementptr inbounds %27, %27* %69, i64 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds %27, %27* %69, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1017, i64 0, i64 0), i8* %87, i32 %89)
  br label %98

91:                                               ; preds = %76
  %92 = call fastcc i8* @1389(%30* nonnull %82)
  %93 = getelementptr inbounds %27, %27* %69, i64 0, i32 2
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %27, %27* %69, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @778, i64 0, i64 0), i8* %94, i32 %96, i8* %92)
  call void @sdsfree(i8* %92) #14
  br label %98

98:                                               ; preds = %91, %85
  %99 = load %30*, %30** %4, align 8
  %100 = icmp eq %30* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %30* %99 to i8*
  call void @freeReplyObject(i8* %102) #14
  br label %103

103:                                              ; preds = %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #14
  br label %104

104:                                              ; preds = %73, %103
  %105 = call %25* @listNext(%26* nonnull %3) #14
  %106 = icmp eq %25* %105, null
  br i1 %106, label %107, label %65

107:                                              ; preds = %104, %57
  call void @zfree(i8* %43) #14
  br label %111

108:                                              ; preds = %12, %9
  %109 = load %1*, %1** @stderr, align 8
  %110 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %109) #16
  br label %111

111:                                              ; preds = %19, %108, %107
  %112 = phi i32 [ 1, %107 ], [ 0, %108 ], [ 0, %19 ]
  ret i32 %112
}

; Function Attrs: nounwind uwtable
define internal i32 @1340(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca %26, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = tail call i8* @strrchr(i8* %4, i32 64) #17
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i8 0, i8* %5, align 1
  br label %8

8:                                                ; preds = %7, %2
  %9 = tail call i8* @strrchr(i8* %4, i32 58) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %122, label %11

11:                                               ; preds = %8
  store i8 0, i8* %9, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  %13 = tail call i64 @strtol(i8* nocapture nonnull %12, i8** null, i32 10) #14
  %14 = trunc i64 %13 to i32
  %15 = icmp ne i8* %4, null
  %16 = icmp ne i32 %14, 0
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %122

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8*, i8** %1, i64 1
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i64 @strtol(i8* nocapture nonnull %20, i8** null, i32 10) #14
  %22 = trunc i64 %21 to i32
  %23 = icmp slt i32 %22, 100
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = load %1*, %1** @stderr, align 8
  %26 = tail call i64 @fwrite(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @984, i64 0, i64 0), i64 68, i64 1, %1* %25) #16
  br label %125

27:                                               ; preds = %18
  %28 = tail call i8* @zmalloc(i64 16520) #14
  %29 = bitcast i8* %28 to %27*
  %30 = getelementptr inbounds i8, i8* %28, i64 16
  %31 = bitcast i8* %30 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #14
  store i8* %4, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 24
  %33 = bitcast i8* %32 to i32*
  store i32 %14, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 32
  %35 = getelementptr inbounds i8, i8* %28, i64 64
  %36 = getelementptr inbounds i8, i8* %28, i64 16480
  %37 = getelementptr inbounds i8, i8* %28, i64 16472
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %28, i64 16512
  %40 = bitcast i8* %39 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %40, align 8
  %41 = getelementptr inbounds i8, i8* %28, i64 16516
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %28, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %43, i8 0, i64 16388, i1 false) #14
  %44 = tail call fastcc i32 @1365(%27* %29)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %125, label %46

46:                                               ; preds = %27
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @985, i64 0, i64 0))
  %47 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %47, %26* nonnull %3) #14
  %48 = call %25* @listNext(%26* nonnull %3) #14
  %49 = icmp eq %25* %48, null
  br i1 %49, label %119, label %50

50:                                               ; preds = %46, %114
  %51 = phi %25* [ %117, %114 ], [ %48, %46 ]
  %52 = phi i32 [ %116, %114 ], [ 0, %46 ]
  %53 = phi i32 [ %115, %114 ], [ 0, %46 ]
  %54 = getelementptr inbounds %25, %25* %51, i64 0, i32 2
  %55 = bitcast i8** %54 to %27**
  %56 = load %27*, %27** %55, align 8
  %57 = getelementptr inbounds %27, %27* %56, i64 0, i32 0
  %58 = load %9*, %9** %57, align 8
  %59 = call i8* (%9*, i8*, ...) @redisCommand(%9* %58, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @986, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @488, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @987, i64 0, i64 0), i32 %22) #14
  %60 = icmp eq i8* %59, null
  br i1 %60, label %102, label %61

61:                                               ; preds = %50
  %62 = bitcast i8* %59 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 6
  br i1 %64, label %65, label %75

65:                                               ; preds = %61
  %66 = getelementptr inbounds i8, i8* %59, i64 24
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = call i8* @zmalloc(i64 %69) #14
  %71 = getelementptr inbounds i8, i8* %59, i64 32
  %72 = bitcast i8* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = call i8* @strcpy(i8* %70, i8* %73) #14
  call void @freeReplyObject(i8* nonnull %59) #14
  br label %99

75:                                               ; preds = %61
  call void @freeReplyObject(i8* nonnull %59) #14
  %76 = load %9*, %9** %57, align 8
  %77 = call i8* (%9*, i8*, ...) @redisCommand(%9* %76, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @988, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @989, i64 0, i64 0)) #14
  %78 = icmp eq i8* %77, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  %80 = bitcast i8* %77 to i32*
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 6
  br i1 %82, label %83, label %93

83:                                               ; preds = %79
  %84 = getelementptr inbounds i8, i8* %77, i64 24
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  %88 = call i8* @zmalloc(i64 %87) #14
  %89 = getelementptr inbounds i8, i8* %77, i64 32
  %90 = bitcast i8* %89 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = call i8* @strcpy(i8* %88, i8* %91) #14
  call void @freeReplyObject(i8* nonnull %77) #14
  br label %99

93:                                               ; preds = %79
  call void @freeReplyObject(i8* nonnull %77) #14
  %94 = getelementptr inbounds %27, %27* %56, i64 0, i32 2
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %27, %27* %56, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @990, i64 0, i64 0), i8* %95, i32 %97)
  %98 = add nsw i32 %53, 1
  br label %114

99:                                               ; preds = %83, %65
  %100 = phi i8* [ %70, %65 ], [ %88, %83 ]
  %101 = icmp eq i8* %100, null
  br i1 %101, label %102, label %107

102:                                              ; preds = %75, %50, %99
  %103 = getelementptr inbounds %27, %27* %56, i64 0, i32 2
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %27, %27* %56, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @991, i64 0, i64 0), i8* %104, i32 %106, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0))
  br label %112

107:                                              ; preds = %99
  %108 = getelementptr inbounds %27, %27* %56, i64 0, i32 2
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %27, %27* %56, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @991, i64 0, i64 0), i8* %109, i32 %111, i8* nonnull %100)
  call void @zfree(i8* nonnull %100) #14
  br label %112

112:                                              ; preds = %102, %107
  %113 = add nsw i32 %52, 1
  br label %114

114:                                              ; preds = %112, %93
  %115 = phi i32 [ %53, %112 ], [ %98, %93 ]
  %116 = phi i32 [ %113, %112 ], [ %52, %93 ]
  %117 = call %25* @listNext(%26* nonnull %3) #14
  %118 = icmp eq %25* %117, null
  br i1 %118, label %119, label %50

119:                                              ; preds = %114, %46
  %120 = phi i32 [ 0, %46 ], [ %115, %114 ]
  %121 = phi i32 [ 0, %46 ], [ %116, %114 ]
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @992, i64 0, i64 0), i32 %120, i32 %121)
  br label %125

122:                                              ; preds = %11, %8
  %123 = load %1*, %1** @stderr, align 8
  %124 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %123) #16
  br label %125

125:                                              ; preds = %27, %122, %119, %24
  %126 = phi i32 [ 0, %24 ], [ 1, %119 ], [ 0, %122 ], [ 0, %27 ]
  ret i32 %126
}

; Function Attrs: nounwind uwtable
define internal i32 @1341(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca [16384 x %27*], align 16
  %4 = alloca %26, align 8
  %5 = alloca [50 x i8], align 16
  %6 = icmp eq i32 %0, 1
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = load i8*, i8** %1, align 8
  %9 = tail call i8* @strrchr(i8* %8, i32 64) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i8 0, i8* %9, align 1
  br label %12

12:                                               ; preds = %11, %7
  %13 = tail call i8* @strrchr(i8* %8, i32 58) #17
  %14 = icmp eq i8* %13, null
  br i1 %14, label %334, label %15

15:                                               ; preds = %12
  store i8 0, i8* %13, align 1
  %16 = ptrtoint i8* %8 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  br label %23

18:                                               ; preds = %2
  %19 = bitcast i8** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8*, i8** %1, i64 1
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %18, %15
  %24 = phi i8* [ %22, %18 ], [ %17, %15 ]
  %25 = phi i64 [ %20, %18 ], [ %16, %15 ]
  %26 = tail call i64 @strtol(i8* nocapture nonnull %24, i8** null, i32 10) #14
  %27 = trunc i64 %26 to i32
  %28 = icmp ne i64 %25, 0
  %29 = icmp ne i32 %27, 0
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %334

31:                                               ; preds = %23
  %32 = inttoptr i64 %25 to i8*
  %33 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 5), align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %334, label %35

35:                                               ; preds = %31
  %36 = tail call i8* @strrchr(i8* nonnull %33, i32 64) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  store i8 0, i8* %36, align 1
  br label %39

39:                                               ; preds = %38, %35
  %40 = tail call i8* @strrchr(i8* nonnull %33, i32 58) #17
  %41 = icmp eq i8* %40, null
  br i1 %41, label %334, label %42

42:                                               ; preds = %39
  store i8 0, i8* %40, align 1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  %44 = tail call i64 @strtol(i8* nocapture nonnull %43, i8** null, i32 10) #14
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %334, label %47

47:                                               ; preds = %42
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @995, i64 0, i64 0), i8* nonnull %33, i32 %45, i8* %32, i32 %27)
  %48 = tail call i8* @zmalloc(i64 16520) #14
  %49 = bitcast i8* %48 to %27*
  %50 = getelementptr inbounds i8, i8* %48, i64 16
  %51 = bitcast i8* %50 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #14
  store i8* %32, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 24
  %53 = bitcast i8* %52 to i32*
  store i32 %27, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 32
  %55 = getelementptr inbounds i8, i8* %48, i64 64
  %56 = getelementptr inbounds i8, i8* %48, i64 16480
  %57 = getelementptr inbounds i8, i8* %48, i64 16472
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %48, i64 16512
  %60 = bitcast i8* %59 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %60, align 8
  %61 = getelementptr inbounds i8, i8* %48, i64 16516
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %48, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 0, i64 16388, i1 false) #14
  %64 = tail call fastcc i32 @1365(%27* %49)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %338, label %66

66:                                               ; preds = %47
  %67 = tail call fastcc i32 @1366(i32 0)
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %338, label %69

69:                                               ; preds = %66
  %70 = tail call %9* @redisConnect(i8* nonnull %33, i32 %45) #14
  %71 = getelementptr inbounds %9, %9* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = load %1*, %1** @stderr, align 8
  %76 = getelementptr inbounds %9, %9* %70, i64 0, i32 2, i64 0
  %77 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %75, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @996, i64 0, i64 0), i8* nonnull %33, i32 %45, i8* nonnull %76) #16
  br label %325

78:                                               ; preds = %69
  %79 = tail call %30* (%9*, i8*, ...) @1388(%9* %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0))
  %80 = icmp eq %30* %79, null
  br i1 %80, label %325, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %30, %30* %79, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 6
  %85 = getelementptr inbounds %30, %30* %79, i64 0, i32 4
  %86 = load i8*, i8** %85, align 8
  br i1 %84, label %320, label %87

87:                                               ; preds = %81
  %88 = tail call fastcc i64 @1367(i8* %86, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @781, i64 0, i64 0))
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @997, i64 0, i64 0))
  br label %325

91:                                               ; preds = %87
  %92 = bitcast %30* %79 to i8*
  tail call void @freeReplyObject(i8* %92) #14
  %93 = tail call %30* (%9*, i8*, ...) @1388(%9* %70, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i64 0, i64 0))
  %94 = icmp eq %30* %93, null
  br i1 %94, label %325, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %30, %30* %93, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 6
  br i1 %98, label %316, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %30, %30* %93, i64 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %101 to i32
  tail call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @998, i64 0, i64 0), i32 %102)
  %103 = bitcast [16384 x %27*]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 0, i64 131072, i1 false)
  br label %104

104:                                              ; preds = %131, %99
  %105 = phi i64 [ 0, %99 ], [ %132, %131 ]
  %106 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %106, %26* nonnull %4) #14
  %107 = call %25* @listNext(%26* nonnull %4) #14
  %108 = icmp eq %25* %107, null
  br i1 %108, label %131, label %109

109:                                              ; preds = %104, %126
  %110 = phi %25* [ %127, %126 ], [ %107, %104 ]
  %111 = getelementptr inbounds %25, %25* %110, i64 0, i32 2
  %112 = bitcast i8** %111 to %27**
  %113 = load %27*, %27** %112, align 8
  %114 = getelementptr inbounds %27, %27* %113, i64 0, i32 7
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %126

118:                                              ; preds = %109
  %119 = getelementptr inbounds %27, %27* %113, i64 0, i32 12
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %27, %27* %113, i64 0, i32 11, i64 %105
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %122, %118, %109
  %127 = call %25* @listNext(%26* nonnull %4) #14
  %128 = icmp eq %25* %127, null
  br i1 %128, label %131, label %109

129:                                              ; preds = %122
  %130 = getelementptr inbounds [16384 x %27*], [16384 x %27*]* %3, i64 0, i64 %105
  store %27* %113, %27** %130, align 8
  br label %131

131:                                              ; preds = %126, %104, %129
  %132 = add nuw nsw i64 %105, 1
  %133 = icmp eq i64 %132, 16384
  br i1 %133, label %134, label %104

134:                                              ; preds = %131
  %135 = getelementptr inbounds [50 x i8], [50 x i8]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %135, i8* align 16 getelementptr inbounds ([50 x i8], [50 x i8]* @999, i64 0, i64 0), i64 50, i1 false)
  %136 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %137 = trunc i32 %136 to i8
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %143

139:                                              ; preds = %134
  %140 = call i64 @strlen(i8* nonnull %135)
  %141 = getelementptr [50 x i8], [50 x i8]* %5, i64 0, i64 %140
  %142 = bitcast i8* %141 to i32*
  store i32 7546144, i32* %142, align 1
  br label %143

143:                                              ; preds = %139, %134
  %144 = and i32 %136, 64
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  %147 = call i64 @strlen(i8* nonnull %135)
  %148 = getelementptr [50 x i8], [50 x i8]* %5, i64 0, i64 %147
  %149 = bitcast i8* %148 to i32*
  store i32 7546144, i32* %149, align 1
  br label %150

150:                                              ; preds = %143, %146
  %151 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 11), align 4
  br label %154

152:                                              ; preds = %301, %196
  %153 = icmp eq i32 %198, 0
  br i1 %153, label %325, label %154

154:                                              ; preds = %150, %152
  %155 = phi %30* [ %93, %150 ], [ %160, %152 ]
  %156 = phi i32 [ -999, %150 ], [ %198, %152 ]
  %157 = icmp sgt i32 %156, 0
  %158 = select i1 %157, i32 %156, i32 0
  %159 = bitcast %30* %155 to i8*
  call void @freeReplyObject(i8* %159) #14
  %160 = call %30* (%9*, i8*, ...) @1388(%9* %70, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @1001, i64 0, i64 0), i32 %158, i32 1000)
  %161 = icmp eq %30* %160, null
  br i1 %161, label %325, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %30, %30* %160, i64 0, i32 0
  %164 = load i32, i32* %163, align 8
  switch i32 %164, label %165 [
    i32 6, label %316
    i32 2, label %166
  ]

165:                                              ; preds = %162
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1002, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 6341, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1003, i64 0, i64 0)) #19
  unreachable

166:                                              ; preds = %162
  %167 = getelementptr inbounds %30, %30* %160, i64 0, i32 6
  %168 = load i64, i64* %167, align 8
  %169 = icmp ugt i64 %168, 1
  br i1 %169, label %171, label %170

170:                                              ; preds = %166
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1004, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 6342, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1003, i64 0, i64 0)) #19
  unreachable

171:                                              ; preds = %166
  %172 = getelementptr inbounds %30, %30* %160, i64 0, i32 7
  %173 = load %30**, %30*** %172, align 8
  %174 = getelementptr inbounds %30*, %30** %173, i64 1
  %175 = load %30*, %30** %174, align 8
  %176 = getelementptr inbounds %30, %30* %175, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 2
  br i1 %178, label %180, label %179

179:                                              ; preds = %171
  call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @1005, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 6343, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1003, i64 0, i64 0)) #19
  unreachable

180:                                              ; preds = %171
  %181 = load %30*, %30** %173, align 8
  %182 = getelementptr inbounds %30, %30* %181, i64 0, i32 0
  %183 = load i32, i32* %182, align 8
  switch i32 %183, label %196 [
    i32 1, label %184
    i32 3, label %192
  ]

184:                                              ; preds = %180
  %185 = getelementptr inbounds %30, %30* %181, i64 0, i32 4
  %186 = load i8*, i8** %185, align 8
  %187 = call i64 @strtol(i8* nocapture nonnull %186, i8** null, i32 10) #14
  %188 = trunc i64 %187 to i32
  %189 = load %30**, %30*** %172, align 8
  %190 = getelementptr inbounds %30*, %30** %189, i64 1
  %191 = load %30*, %30** %190, align 8
  br label %196

192:                                              ; preds = %180
  %193 = getelementptr inbounds %30, %30* %181, i64 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = trunc i64 %194 to i32
  br label %196

196:                                              ; preds = %180, %192, %184
  %197 = phi %30* [ %191, %184 ], [ %175, %192 ], [ %175, %180 ]
  %198 = phi i32 [ %188, %184 ], [ %195, %192 ], [ %158, %180 ]
  %199 = getelementptr inbounds %30, %30* %197, i64 0, i32 6
  %200 = load i64, i64* %199, align 8
  %201 = trunc i64 %200 to i32
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %152

203:                                              ; preds = %196
  %204 = shl i64 %200, 32
  %205 = ashr exact i64 %204, 32
  %206 = getelementptr inbounds %30, %30* %197, i64 0, i32 7
  %207 = load %30**, %30*** %206, align 8
  %208 = load %30*, %30** %207, align 8
  %209 = getelementptr inbounds %30, %30* %208, i64 0, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %213, label %212

212:                                              ; preds = %203, %305
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1006, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 6351, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1003, i64 0, i64 0)) #19
  unreachable

213:                                              ; preds = %203, %305
  %214 = phi %30* [ %312, %305 ], [ %208, %203 ]
  %215 = phi i64 [ %303, %305 ], [ 0, %203 ]
  %216 = getelementptr inbounds %30, %30* %214, i64 0, i32 4
  %217 = load i8*, i8** %216, align 8
  %218 = getelementptr inbounds %30, %30* %214, i64 0, i32 3
  %219 = load i64, i64* %218, align 8
  %220 = trunc i64 %219 to i32
  %221 = icmp sgt i32 %220, 0
  br i1 %221, label %222, label %237

222:                                              ; preds = %213
  %223 = shl i64 %219, 32
  %224 = ashr exact i64 %223, 32
  br label %225

225:                                              ; preds = %231, %222
  %226 = phi i64 [ 0, %222 ], [ %232, %231 ]
  %227 = phi i32 [ 0, %222 ], [ %233, %231 ]
  %228 = getelementptr inbounds i8, i8* %217, i64 %226
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 123
  br i1 %230, label %235, label %231

231:                                              ; preds = %225
  %232 = add nuw nsw i64 %226, 1
  %233 = add nuw nsw i32 %227, 1
  %234 = icmp slt i64 %232, %224
  br i1 %234, label %225, label %237

235:                                              ; preds = %225
  %236 = trunc i64 %226 to i32
  br label %237

237:                                              ; preds = %231, %235, %213
  %238 = phi i32 [ 0, %213 ], [ %236, %235 ], [ %233, %231 ]
  %239 = icmp eq i32 %238, %220
  br i1 %239, label %240, label %242

240:                                              ; preds = %237
  %241 = call zeroext i16 @crc16(i8* %217, i32 %220) #14
  br label %275

242:                                              ; preds = %237
  %243 = add i32 %238, 1
  %244 = icmp slt i32 %243, %220
  br i1 %244, label %245, label %266

245:                                              ; preds = %242
  %246 = sext i32 %243 to i64
  %247 = shl i64 %219, 32
  %248 = ashr exact i64 %247, 32
  br label %249

249:                                              ; preds = %255, %245
  %250 = phi i64 [ %246, %245 ], [ %256, %255 ]
  %251 = phi i32 [ %243, %245 ], [ %257, %255 ]
  %252 = getelementptr inbounds i8, i8* %217, i64 %250
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 125
  br i1 %254, label %259, label %255

255:                                              ; preds = %249
  %256 = add nsw i64 %250, 1
  %257 = add nsw i32 %251, 1
  %258 = icmp slt i64 %256, %248
  br i1 %258, label %249, label %261

259:                                              ; preds = %249
  %260 = trunc i64 %250 to i32
  br label %261

261:                                              ; preds = %255, %259
  %262 = phi i32 [ %260, %259 ], [ %257, %255 ]
  %263 = icmp eq i32 %262, %220
  %264 = icmp eq i32 %262, %243
  %265 = or i1 %263, %264
  br i1 %265, label %266, label %268

266:                                              ; preds = %261, %242
  %267 = call zeroext i16 @crc16(i8* %217, i32 %220) #14
  br label %275

268:                                              ; preds = %261
  %269 = zext i32 %238 to i64
  %270 = getelementptr inbounds i8, i8* %217, i64 1
  %271 = getelementptr inbounds i8, i8* %270, i64 %269
  %272 = xor i32 %238, -1
  %273 = add i32 %262, %272
  %274 = call zeroext i16 @crc16(i8* nonnull %271, i32 %273) #14
  br label %275

275:                                              ; preds = %240, %266, %268
  %276 = phi i16 [ %241, %240 ], [ %267, %266 ], [ %274, %268 ]
  %277 = and i16 %276, 16383
  %278 = zext i16 %277 to i64
  %279 = getelementptr inbounds [16384 x %27*], [16384 x %27*]* %3, i64 0, i64 %278
  %280 = load %27*, %27** %279, align 8
  %281 = getelementptr inbounds %27, %27* %280, i64 0, i32 2
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr inbounds %27, %27* %280, i64 0, i32 3
  %284 = load i32, i32* %283, align 8
  %285 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1007, i64 0, i64 0), i8* %217, i8* %282, i32 %284)
  %286 = load i8*, i8** %281, align 8
  %287 = load i32, i32* %283, align 8
  %288 = call %30* (%9*, i8*, ...) @1388(%9* %70, i8* nonnull %135, i8* %286, i32 %287, i8* %217, i32 0, i32 %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1008, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @915, i64 0, i64 0))
  %289 = icmp eq %30* %288, null
  br i1 %289, label %299, label %290

290:                                              ; preds = %275
  %291 = getelementptr inbounds %30, %30* %288, i64 0, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = icmp eq i32 %292, 6
  br i1 %293, label %294, label %301

294:                                              ; preds = %290
  %295 = getelementptr inbounds %30, %30* %288, i64 0, i32 4
  %296 = load i8*, i8** %295, align 8
  %297 = icmp eq i8* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %294
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1009, i64 0, i64 0), i8* nonnull %33, i32 %45, i8* nonnull %296)
  br label %299

299:                                              ; preds = %275, %294, %298
  %300 = bitcast %30* %288 to i8*
  call void @freeReplyObject(i8* %300) #14
  br label %325

301:                                              ; preds = %290
  %302 = bitcast %30* %288 to i8*
  call void @freeReplyObject(i8* %302) #14
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1010, i64 0, i64 0))
  %303 = add nuw nsw i64 %215, 1
  %304 = icmp slt i64 %303, %205
  br i1 %304, label %305, label %152

305:                                              ; preds = %301
  %306 = load %30**, %30*** %172, align 8
  %307 = getelementptr inbounds %30*, %30** %306, i64 1
  %308 = load %30*, %30** %307, align 8
  %309 = getelementptr inbounds %30, %30* %308, i64 0, i32 7
  %310 = load %30**, %30*** %309, align 8
  %311 = getelementptr inbounds %30*, %30** %310, i64 %303
  %312 = load %30*, %30** %311, align 8
  %313 = getelementptr inbounds %30, %30* %312, i64 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %213, label %212

316:                                              ; preds = %162, %95
  %317 = phi %30* [ %93, %95 ], [ %160, %162 ]
  %318 = getelementptr inbounds %30, %30* %317, i64 0, i32 4
  %319 = load i8*, i8** %318, align 8
  br label %320

320:                                              ; preds = %316, %81
  %321 = phi %30* [ %79, %81 ], [ %317, %316 ]
  %322 = phi i8* [ %86, %81 ], [ %319, %316 ]
  %323 = icmp eq i8* %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1009, i64 0, i64 0), i8* nonnull %33, i32 %45, i8* nonnull %322)
  br label %325

325:                                              ; preds = %154, %152, %91, %78, %299, %90, %74, %320, %324
  %326 = phi i32 [ 0, %320 ], [ 0, %324 ], [ 0, %91 ], [ 0, %78 ], [ 0, %90 ], [ 0, %74 ], [ 0, %299 ], [ 1, %152 ], [ 0, %154 ]
  %327 = phi %30* [ %321, %320 ], [ %321, %324 ], [ null, %91 ], [ null, %78 ], [ %79, %90 ], [ null, %74 ], [ %160, %299 ], [ %160, %152 ], [ null, %154 ]
  %328 = icmp eq %9* %70, null
  br i1 %328, label %330, label %329

329:                                              ; preds = %325
  call void @redisFree(%9* nonnull %70) #14
  br label %330

330:                                              ; preds = %325, %329
  %331 = icmp eq %30* %327, null
  br i1 %331, label %338, label %332

332:                                              ; preds = %330
  %333 = bitcast %30* %327 to i8*
  call void @freeReplyObject(i8* %333) #14
  br label %338

334:                                              ; preds = %42, %39, %12, %23, %31
  %335 = phi i8* [ getelementptr inbounds ([68 x i8], [68 x i8]* @993, i64 0, i64 0), %31 ], [ getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), %23 ], [ getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), %12 ], [ getelementptr inbounds ([91 x i8], [91 x i8]* @994, i64 0, i64 0), %42 ], [ getelementptr inbounds ([91 x i8], [91 x i8]* @994, i64 0, i64 0), %39 ]
  %336 = load %1*, %1** @stderr, align 8
  %337 = tail call i32 @fputs(i8* nonnull %335, %1* %336) #16
  br label %338

338:                                              ; preds = %332, %330, %66, %47, %334
  %339 = phi i32 [ 0, %334 ], [ 0, %47 ], [ 0, %66 ], [ %326, %330 ], [ %326, %332 ]
  ret i32 %339
}

; Function Attrs: nounwind uwtable
define internal i32 @1342(i32 %0, i8** nocapture readonly %1) #0 {
  %3 = alloca %26, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = tail call i8* @strrchr(i8* %4, i32 64) #17
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i8 0, i8* %5, align 1
  br label %8

8:                                                ; preds = %7, %2
  %9 = tail call i8* @strrchr(i8* %4, i32 58) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %367, label %11

11:                                               ; preds = %8
  store i8 0, i8* %9, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  %13 = tail call i64 @strtol(i8* nocapture nonnull %12, i8** null, i32 10) #14
  %14 = trunc i64 %13 to i32
  %15 = icmp ne i8* %4, null
  %16 = icmp ne i32 %14, 0
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %367

18:                                               ; preds = %11
  %19 = tail call i8* @zmalloc(i64 16520) #14
  %20 = bitcast i8* %19 to %27*
  %21 = getelementptr inbounds i8, i8* %19, i64 16
  %22 = bitcast i8* %21 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 24
  %24 = bitcast i8* %23 to i32*
  store i32 %14, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 32
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 16480
  %28 = getelementptr inbounds i8, i8* %19, i64 16472
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %19, i64 16512
  %31 = bitcast i8* %30 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 20, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %31, align 8
  %32 = getelementptr inbounds i8, i8* %19, i64 16516
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %19, i64 84
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 0, i64 16388, i1 false) #14
  %35 = tail call fastcc i32 @1365(%27* %20)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %370, label %37

37:                                               ; preds = %18
  %38 = tail call fastcc i32 @1366(i32 0)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load %24*, %24** @.1, align 8
  %42 = getelementptr inbounds %24, %24* %41, i64 0, i32 5
  %43 = load i64, i64* %42, align 8
  %44 = shl i64 %43, 32
  %45 = ashr exact i64 %44, 32
  br label %46

46:                                               ; preds = %37, %40
  %47 = phi i64 [ %45, %40 ], [ 0, %37 ]
  %48 = getelementptr inbounds i8*, i8** %1, i64 1
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 14) to i64*), align 8
  %51 = tail call i8* @sdsnew(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1026, i64 0, i64 0)) #14
  %52 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %52, %26* nonnull %3) #14
  %53 = call %25* @listNext(%26* nonnull %3) #14
  %54 = icmp eq %25* %53, null
  br i1 %54, label %316, label %55

55:                                               ; preds = %46
  %56 = icmp eq i64 %47, 0
  br label %57

57:                                               ; preds = %55, %313
  %58 = phi %25* [ %53, %55 ], [ %314, %313 ]
  %59 = phi i8* [ %51, %55 ], [ %305, %313 ]
  %60 = phi i32 [ 0, %55 ], [ %65, %313 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = call i8* @sdscat(i8* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1027, i64 0, i64 0)) #14
  br label %64

64:                                               ; preds = %57, %62
  %65 = phi i32 [ %60, %62 ], [ 1, %57 ]
  %66 = phi i8* [ %63, %62 ], [ %59, %57 ]
  %67 = getelementptr inbounds %25, %25* %58, i64 0, i32 2
  %68 = bitcast i8** %67 to %27**
  %69 = load %27*, %27** %68, align 8
  %70 = call i8* @sdsempty() #14
  %71 = call i8* @sdsempty() #14
  %72 = getelementptr inbounds %27, %27* %69, i64 0, i32 9
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %64
  %76 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1038, i64 0, i64 0), i8* nonnull %73) #14
  br label %79

77:                                               ; preds = %64
  %78 = call i8* @sdscat(i8* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1039, i64 0, i64 0)) #14
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i8* [ %76, %75 ], [ %78, %77 ]
  %81 = call fastcc i8* @1373(%27* nonnull %69) #14
  %82 = call fastcc i8* @1374(%27* nonnull %69) #14
  %83 = call i8* @strchr(i8* %81, i32 45) #17
  %84 = icmp eq i8* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %79, %85
  %86 = phi i8* [ %88, %85 ], [ %83, %79 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  store i8 44, i8* %86, align 1
  %88 = call i8* @strchr(i8* nonnull %87, i32 45) #17
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %85

90:                                               ; preds = %85, %79
  %91 = getelementptr inbounds %27, %27* %69, i64 0, i32 1
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %27, %27* %69, i64 0, i32 2
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %27, %27* %69, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %27, %27* %69, i64 0, i32 12
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %27, %27* %69, i64 0, i32 4
  %100 = load i64, i64* %99, align 8
  %101 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %70, i8* getelementptr inbounds ([164 x i8], [164 x i8]* @1040, i64 0, i64 0), i8* %92, i8* %94, i32 %96, i8* %80, i8* %81, i32 %98, i8* %82, i64 %100) #14
  br i1 %56, label %104, label %102

102:                                              ; preds = %90
  %103 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %101, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1041, i64 0, i64 0), i64 %47) #14
  br label %104

104:                                              ; preds = %102, %90
  %105 = phi i8* [ %103, %102 ], [ %101, %90 ]
  %106 = getelementptr inbounds %27, %27* %69, i64 0, i32 17
  %107 = load i32, i32* %106, align 8
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %203

109:                                              ; preds = %104
  %110 = getelementptr inbounds %27, %27* %69, i64 0, i32 15
  %111 = load i8**, i8*** %110, align 8
  %112 = icmp eq i8** %111, null
  br i1 %112, label %203, label %113

113:                                              ; preds = %109
  %114 = call i8* @sdsempty() #14
  %115 = load i32, i32* %106, align 8
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %170

117:                                              ; preds = %113, %164
  %118 = phi i32 [ %165, %164 ], [ %115, %113 ]
  %119 = phi i64 [ %167, %164 ], [ 0, %113 ]
  %120 = phi i8* [ %166, %164 ], [ %114, %113 ]
  %121 = load i8**, i8*** %110, align 8
  %122 = getelementptr inbounds i8*, i8** %121, i64 %119
  %123 = load i8*, i8** %122, align 8
  %124 = or i64 %119, 1
  %125 = getelementptr inbounds i8*, i8** %121, i64 %124
  %126 = load i8*, i8** %125, align 8
  %127 = icmp ne i8* %123, null
  %128 = icmp ne i8* %126, null
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %164

130:                                              ; preds = %117
  %131 = getelementptr inbounds i8, i8* %120, i64 -1
  %132 = load i8, i8* %131, align 1
  %133 = trunc i8 %132 to i3
  switch i3 %133, label %160 [
    i3 0, label %134
    i3 1, label %137
    i3 2, label %141
    i3 3, label %146
    i3 -4, label %151
  ]

134:                                              ; preds = %130
  %135 = lshr i8 %132, 3
  %136 = zext i8 %135 to i64
  br label %155

137:                                              ; preds = %130
  %138 = getelementptr inbounds i8, i8* %120, i64 -3
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  br label %155

141:                                              ; preds = %130
  %142 = getelementptr inbounds i8, i8* %120, i64 -5
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 1
  %145 = zext i16 %144 to i64
  br label %155

146:                                              ; preds = %130
  %147 = getelementptr inbounds i8, i8* %120, i64 -9
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 1
  %150 = zext i32 %149 to i64
  br label %155

151:                                              ; preds = %130
  %152 = getelementptr inbounds i8, i8* %120, i64 -17
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 1
  br label %155

155:                                              ; preds = %151, %146, %141, %137, %134
  %156 = phi i64 [ %154, %151 ], [ %150, %146 ], [ %145, %141 ], [ %140, %137 ], [ %136, %134 ]
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = call i8* @sdscat(i8* nonnull %120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)) #14
  br label %160

160:                                              ; preds = %158, %155, %130
  %161 = phi i8* [ %159, %158 ], [ %120, %155 ], [ %120, %130 ]
  %162 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1042, i64 0, i64 0), i8* nonnull %123, i8* nonnull %126) #14
  %163 = load i32, i32* %106, align 8
  br label %164

164:                                              ; preds = %160, %117
  %165 = phi i32 [ %163, %160 ], [ %118, %117 ]
  %166 = phi i8* [ %162, %160 ], [ %120, %117 ]
  %167 = add nuw i64 %119, 2
  %168 = trunc i64 %167 to i32
  %169 = icmp sgt i32 %165, %168
  br i1 %169, label %117, label %170

170:                                              ; preds = %164, %113
  %171 = phi i8* [ %114, %113 ], [ %166, %164 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 -1
  %173 = load i8, i8* %172, align 1
  %174 = trunc i8 %173 to i3
  switch i3 %174, label %201 [
    i3 0, label %175
    i3 1, label %178
    i3 2, label %182
    i3 3, label %187
    i3 -4, label %192
  ]

175:                                              ; preds = %170
  %176 = lshr i8 %173, 3
  %177 = zext i8 %176 to i64
  br label %196

178:                                              ; preds = %170
  %179 = getelementptr inbounds i8, i8* %171, i64 -3
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i64
  br label %196

182:                                              ; preds = %170
  %183 = getelementptr inbounds i8, i8* %171, i64 -5
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 1
  %186 = zext i16 %185 to i64
  br label %196

187:                                              ; preds = %170
  %188 = getelementptr inbounds i8, i8* %171, i64 -9
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 1
  %191 = zext i32 %190 to i64
  br label %196

192:                                              ; preds = %170
  %193 = getelementptr inbounds i8, i8* %171, i64 -17
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %194, align 1
  br label %196

196:                                              ; preds = %192, %187, %182, %178, %175
  %197 = phi i64 [ %195, %192 ], [ %191, %187 ], [ %186, %182 ], [ %181, %178 ], [ %177, %175 ]
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %105, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1043, i64 0, i64 0), i8* nonnull %171) #14
  br label %201

201:                                              ; preds = %199, %196, %170
  %202 = phi i8* [ %200, %199 ], [ %105, %196 ], [ %105, %170 ]
  call void @sdsfree(i8* nonnull %171) #14
  br label %203

203:                                              ; preds = %201, %109, %104
  %204 = phi i8* [ %202, %201 ], [ %105, %109 ], [ %105, %104 ]
  %205 = getelementptr inbounds %27, %27* %69, i64 0, i32 18
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %302

208:                                              ; preds = %203
  %209 = getelementptr inbounds %27, %27* %69, i64 0, i32 16
  %210 = load i8**, i8*** %209, align 8
  %211 = icmp eq i8** %210, null
  br i1 %211, label %302, label %212

212:                                              ; preds = %208
  %213 = call i8* @sdsempty() #14
  %214 = load i32, i32* %205, align 4
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %216, label %269

216:                                              ; preds = %212, %263
  %217 = phi i32 [ %264, %263 ], [ %214, %212 ]
  %218 = phi i64 [ %266, %263 ], [ 0, %212 ]
  %219 = phi i8* [ %265, %263 ], [ %213, %212 ]
  %220 = load i8**, i8*** %209, align 8
  %221 = getelementptr inbounds i8*, i8** %220, i64 %218
  %222 = load i8*, i8** %221, align 8
  %223 = or i64 %218, 1
  %224 = getelementptr inbounds i8*, i8** %220, i64 %223
  %225 = load i8*, i8** %224, align 8
  %226 = icmp ne i8* %222, null
  %227 = icmp ne i8* %225, null
  %228 = and i1 %226, %227
  br i1 %228, label %229, label %263

229:                                              ; preds = %216
  %230 = getelementptr inbounds i8, i8* %219, i64 -1
  %231 = load i8, i8* %230, align 1
  %232 = trunc i8 %231 to i3
  switch i3 %232, label %259 [
    i3 0, label %233
    i3 1, label %236
    i3 2, label %240
    i3 3, label %245
    i3 -4, label %250
  ]

233:                                              ; preds = %229
  %234 = lshr i8 %231, 3
  %235 = zext i8 %234 to i64
  br label %254

236:                                              ; preds = %229
  %237 = getelementptr inbounds i8, i8* %219, i64 -3
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i64
  br label %254

240:                                              ; preds = %229
  %241 = getelementptr inbounds i8, i8* %219, i64 -5
  %242 = bitcast i8* %241 to i16*
  %243 = load i16, i16* %242, align 1
  %244 = zext i16 %243 to i64
  br label %254

245:                                              ; preds = %229
  %246 = getelementptr inbounds i8, i8* %219, i64 -9
  %247 = bitcast i8* %246 to i32*
  %248 = load i32, i32* %247, align 1
  %249 = zext i32 %248 to i64
  br label %254

250:                                              ; preds = %229
  %251 = getelementptr inbounds i8, i8* %219, i64 -17
  %252 = bitcast i8* %251 to i64*
  %253 = load i64, i64* %252, align 1
  br label %254

254:                                              ; preds = %250, %245, %240, %236, %233
  %255 = phi i64 [ %253, %250 ], [ %249, %245 ], [ %244, %240 ], [ %239, %236 ], [ %235, %233 ]
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %254
  %258 = call i8* @sdscat(i8* nonnull %219, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)) #14
  br label %259

259:                                              ; preds = %257, %254, %229
  %260 = phi i8* [ %258, %257 ], [ %219, %254 ], [ %219, %229 ]
  %261 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %260, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1042, i64 0, i64 0), i8* nonnull %222, i8* nonnull %225) #14
  %262 = load i32, i32* %205, align 4
  br label %263

263:                                              ; preds = %259, %216
  %264 = phi i32 [ %262, %259 ], [ %217, %216 ]
  %265 = phi i8* [ %261, %259 ], [ %219, %216 ]
  %266 = add nuw i64 %218, 2
  %267 = trunc i64 %266 to i32
  %268 = icmp sgt i32 %264, %267
  br i1 %268, label %216, label %269

269:                                              ; preds = %263, %212
  %270 = phi i8* [ %213, %212 ], [ %265, %263 ]
  %271 = getelementptr inbounds i8, i8* %270, i64 -1
  %272 = load i8, i8* %271, align 1
  %273 = trunc i8 %272 to i3
  switch i3 %273, label %300 [
    i3 0, label %274
    i3 1, label %277
    i3 2, label %281
    i3 3, label %286
    i3 -4, label %291
  ]

274:                                              ; preds = %269
  %275 = lshr i8 %272, 3
  %276 = zext i8 %275 to i64
  br label %295

277:                                              ; preds = %269
  %278 = getelementptr inbounds i8, i8* %270, i64 -3
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i64
  br label %295

281:                                              ; preds = %269
  %282 = getelementptr inbounds i8, i8* %270, i64 -5
  %283 = bitcast i8* %282 to i16*
  %284 = load i16, i16* %283, align 1
  %285 = zext i16 %284 to i64
  br label %295

286:                                              ; preds = %269
  %287 = getelementptr inbounds i8, i8* %270, i64 -9
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 1
  %290 = zext i32 %289 to i64
  br label %295

291:                                              ; preds = %269
  %292 = getelementptr inbounds i8, i8* %270, i64 -17
  %293 = bitcast i8* %292 to i64*
  %294 = load i64, i64* %293, align 1
  br label %295

295:                                              ; preds = %291, %286, %281, %277, %274
  %296 = phi i64 [ %294, %291 ], [ %290, %286 ], [ %285, %281 ], [ %280, %277 ], [ %276, %274 ]
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %295
  %299 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %204, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1044, i64 0, i64 0), i8* nonnull %270) #14
  br label %300

300:                                              ; preds = %298, %295, %269
  %301 = phi i8* [ %299, %298 ], [ %204, %295 ], [ %204, %269 ]
  call void @sdsfree(i8* nonnull %270) #14
  br label %302

302:                                              ; preds = %203, %208, %300
  %303 = phi i8* [ %301, %300 ], [ %204, %208 ], [ %204, %203 ]
  %304 = call i8* @sdscat(i8* %303, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1045, i64 0, i64 0)) #14
  call void @sdsfree(i8* %80) #14
  call void @sdsfree(i8* %81) #14
  call void @sdsfree(i8* %82) #14
  %305 = call i8* @sdscat(i8* %66, i8* %304) #14
  call void @sdsfree(i8* %304) #14
  %306 = load i8*, i8** %72, align 8
  %307 = icmp eq i8* %306, null
  br i1 %307, label %308, label %313

308:                                              ; preds = %302
  %309 = load i8*, i8** %93, align 8
  %310 = load i32, i32* %95, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1028, i64 0, i64 0), i8* %309, i32 %310)
  %311 = load %1*, %1** @stdout, align 8
  %312 = call i32 @fflush(%1* %311)
  call fastcc void @1349(%27* nonnull %69)
  br label %313

313:                                              ; preds = %302, %308
  %314 = call %25* @listNext(%26* nonnull %3) #14
  %315 = icmp eq %25* %314, null
  br i1 %315, label %316, label %57

316:                                              ; preds = %313, %46
  %317 = phi i8* [ %51, %46 ], [ %305, %313 ]
  %318 = call i8* @sdscat(i8* %317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1029, i64 0, i64 0)) #14
  %319 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 14), align 8
  %320 = call i8* @sdsnew(i8* %319) #14
  %321 = getelementptr inbounds i8, i8* %320, i64 -1
  %322 = load i8, i8* %321, align 1
  %323 = trunc i8 %322 to i3
  switch i3 %323, label %345 [
    i3 0, label %324
    i3 1, label %327
    i3 2, label %331
    i3 3, label %336
    i3 -4, label %341
  ]

324:                                              ; preds = %316
  %325 = lshr i8 %322, 3
  %326 = zext i8 %325 to i64
  br label %345

327:                                              ; preds = %316
  %328 = getelementptr inbounds i8, i8* %320, i64 -3
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i64
  br label %345

331:                                              ; preds = %316
  %332 = getelementptr inbounds i8, i8* %320, i64 -5
  %333 = bitcast i8* %332 to i16*
  %334 = load i16, i16* %333, align 1
  %335 = zext i16 %334 to i64
  br label %345

336:                                              ; preds = %316
  %337 = getelementptr inbounds i8, i8* %320, i64 -9
  %338 = bitcast i8* %337 to i32*
  %339 = load i32, i32* %338, align 1
  %340 = zext i32 %339 to i64
  br label %345

341:                                              ; preds = %316
  %342 = getelementptr inbounds i8, i8* %320, i64 -17
  %343 = bitcast i8* %342 to i64*
  %344 = load i64, i64* %343, align 1
  br label %345

345:                                              ; preds = %316, %324, %327, %331, %336, %341
  %346 = phi i64 [ %344, %341 ], [ %340, %336 ], [ %335, %331 ], [ %330, %327 ], [ %326, %324 ], [ 0, %316 ]
  %347 = add i64 %346, -1
  %348 = getelementptr inbounds i8, i8* %320, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = icmp eq i8 %349, 47
  br i1 %350, label %353, label %351

351:                                              ; preds = %345
  %352 = call i8* @sdscat(i8* nonnull %320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1030, i64 0, i64 0)) #14
  br label %353

353:                                              ; preds = %345, %351
  %354 = phi i8* [ %352, %351 ], [ %320, %345 ]
  %355 = call i8* @sdscat(i8* %354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1031, i64 0, i64 0)) #14
  %356 = load %1*, %1** @stdout, align 8
  %357 = call i32 @fflush(%1* %356)
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1032, i64 0, i64 0), i8* %355)
  %358 = call %1* @fopen64(i8* %355, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1033, i64 0, i64 0))
  %359 = icmp eq %1* %358, null
  br i1 %359, label %360, label %361

360:                                              ; preds = %353
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1034, i64 0, i64 0), i8* %355)
  call void @sdsfree(i8* %318) #14
  call void @sdsfree(i8* %355) #14
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1037, i64 0, i64 0))
  br label %370

361:                                              ; preds = %353
  %362 = call i32 @fputs(i8* %318, %1* nonnull %358)
  %363 = call i32 @fclose(%1* nonnull %358)
  call void @sdsfree(i8* %318) #14
  call void @sdsfree(i8* %355) #14
  br i1 %39, label %365, label %364

364:                                              ; preds = %361
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @1035, i64 0, i64 0))
  br label %365

365:                                              ; preds = %364, %361
  %366 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 14), align 8
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1036, i64 0, i64 0), i8* %366)
  br label %370

367:                                              ; preds = %11, %8
  %368 = load %1*, %1** @stderr, align 8
  %369 = tail call i64 @fwrite(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @950, i64 0, i64 0), i64 138, i64 1, %1* %368) #16
  br label %370

370:                                              ; preds = %365, %360, %18, %367
  %371 = phi i32 [ 0, %367 ], [ 0, %18 ], [ 0, %360 ], [ 1, %365 ]
  ret i32 %371
}

; Function Attrs: nounwind uwtable
define internal i32 @1343(i32 %0, i8** nocapture readnone %1) #0 {
  %3 = alloca [255 x i8], align 16
  %4 = load %1*, %1** @stderr, align 8
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1046, i64 0, i64 0), i64 26, i64 1, %1* %4) #16
  %6 = getelementptr inbounds [255 x i8], [255 x i8]* %3, i64 0, i64 0
  br label %7

7:                                                ; preds = %121, %2
  %8 = phi i64 [ 0, %2 ], [ %122, %121 ]
  %9 = getelementptr inbounds [13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 %8, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = call i64 @strlen(i8* %10) #17
  %12 = trunc i64 %11 to i32
  %13 = sub i32 15, %12
  %14 = load %1*, %1** @stderr, align 8
  %15 = call i32 (%1*, i8*, ...) @fprintf(%1* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1047, i64 0, i64 0), i8* %10) #16
  %16 = icmp sgt i32 %13, 0
  %17 = load %1*, %1** @stderr, align 8
  br i1 %16, label %18, label %25

18:                                               ; preds = %7, %18
  %19 = phi %1* [ %23, %18 ], [ %17, %7 ]
  %20 = phi i32 [ %22, %18 ], [ 0, %7 ]
  %21 = call i32 @fputc(i32 32, %1* %19) #16
  %22 = add nuw nsw i32 %20, 1
  %23 = load %1*, %1** @stderr, align 8
  %24 = icmp eq i32 %22, %13
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %7
  %26 = phi %1* [ %17, %7 ], [ %23, %18 ]
  %27 = getelementptr inbounds [13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 %8, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* %28
  %31 = call i32 (%1*, i8*, ...) @fprintf(%1* %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %30) #16
  %32 = getelementptr inbounds [13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 %8, i32 4
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %121, label %35

35:                                               ; preds = %25
  %36 = call i64 @strlen(i8* nonnull %33) #17
  %37 = shl i64 %36, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds i8, i8* %33, i64 %38
  br label %40

40:                                               ; preds = %44, %35
  %41 = phi i8* [ %33, %35 ], [ %83, %44 ]
  %42 = call i8* @strchr(i8* nonnull %41, i32 44) #17
  %43 = icmp eq i8* %42, null
  br i1 %43, label %85, label %44

44:                                               ; preds = %40
  %45 = ptrtoint i8* %42 to i64
  %46 = ptrtoint i8* %41 to i64
  %47 = sub i64 %45, %46
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %6) #14
  %48 = shl i64 %47, 32
  %49 = ashr exact i64 %48, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* nonnull align 1 %41, i64 %49, i1 false)
  %50 = getelementptr inbounds [255 x i8], [255 x i8]* %3, i64 0, i64 %49
  store i8 0, i8* %50, align 1
  %51 = load %1*, %1** @stderr, align 8
  %52 = call i32 @fputc(i32 32, %1* %51) #16
  %53 = load %1*, %1** @stderr, align 8
  %54 = call i32 @fputc(i32 32, %1* %53) #16
  %55 = load %1*, %1** @stderr, align 8
  %56 = call i32 @fputc(i32 32, %1* %55) #16
  %57 = load %1*, %1** @stderr, align 8
  %58 = call i32 @fputc(i32 32, %1* %57) #16
  %59 = load %1*, %1** @stderr, align 8
  %60 = call i32 @fputc(i32 32, %1* %59) #16
  %61 = load %1*, %1** @stderr, align 8
  %62 = call i32 @fputc(i32 32, %1* %61) #16
  %63 = load %1*, %1** @stderr, align 8
  %64 = call i32 @fputc(i32 32, %1* %63) #16
  %65 = load %1*, %1** @stderr, align 8
  %66 = call i32 @fputc(i32 32, %1* %65) #16
  %67 = load %1*, %1** @stderr, align 8
  %68 = call i32 @fputc(i32 32, %1* %67) #16
  %69 = load %1*, %1** @stderr, align 8
  %70 = call i32 @fputc(i32 32, %1* %69) #16
  %71 = load %1*, %1** @stderr, align 8
  %72 = call i32 @fputc(i32 32, %1* %71) #16
  %73 = load %1*, %1** @stderr, align 8
  %74 = call i32 @fputc(i32 32, %1* %73) #16
  %75 = load %1*, %1** @stderr, align 8
  %76 = call i32 @fputc(i32 32, %1* %75) #16
  %77 = load %1*, %1** @stderr, align 8
  %78 = call i32 @fputc(i32 32, %1* %77) #16
  %79 = load %1*, %1** @stderr, align 8
  %80 = call i32 @fputc(i32 32, %1* %79) #16
  %81 = load %1*, %1** @stderr, align 8
  %82 = call i32 (%1*, i8*, ...) @fprintf(%1* %81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1048, i64 0, i64 0), i8* nonnull %6) #16
  %83 = getelementptr inbounds i8, i8* %42, i64 1
  %84 = icmp ult i8* %83, %39
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %6) #14
  br i1 %84, label %40, label %85

85:                                               ; preds = %40, %44
  %86 = phi i8* [ %83, %44 ], [ %41, %40 ]
  %87 = icmp ult i8* %86, %39
  br i1 %87, label %88, label %121

88:                                               ; preds = %85
  %89 = load %1*, %1** @stderr, align 8
  %90 = call i32 @fputc(i32 32, %1* %89) #16
  %91 = load %1*, %1** @stderr, align 8
  %92 = call i32 @fputc(i32 32, %1* %91) #16
  %93 = load %1*, %1** @stderr, align 8
  %94 = call i32 @fputc(i32 32, %1* %93) #16
  %95 = load %1*, %1** @stderr, align 8
  %96 = call i32 @fputc(i32 32, %1* %95) #16
  %97 = load %1*, %1** @stderr, align 8
  %98 = call i32 @fputc(i32 32, %1* %97) #16
  %99 = load %1*, %1** @stderr, align 8
  %100 = call i32 @fputc(i32 32, %1* %99) #16
  %101 = load %1*, %1** @stderr, align 8
  %102 = call i32 @fputc(i32 32, %1* %101) #16
  %103 = load %1*, %1** @stderr, align 8
  %104 = call i32 @fputc(i32 32, %1* %103) #16
  %105 = load %1*, %1** @stderr, align 8
  %106 = call i32 @fputc(i32 32, %1* %105) #16
  %107 = load %1*, %1** @stderr, align 8
  %108 = call i32 @fputc(i32 32, %1* %107) #16
  %109 = load %1*, %1** @stderr, align 8
  %110 = call i32 @fputc(i32 32, %1* %109) #16
  %111 = load %1*, %1** @stderr, align 8
  %112 = call i32 @fputc(i32 32, %1* %111) #16
  %113 = load %1*, %1** @stderr, align 8
  %114 = call i32 @fputc(i32 32, %1* %113) #16
  %115 = load %1*, %1** @stderr, align 8
  %116 = call i32 @fputc(i32 32, %1* %115) #16
  %117 = load %1*, %1** @stderr, align 8
  %118 = call i32 @fputc(i32 32, %1* %117) #16
  %119 = load %1*, %1** @stderr, align 8
  %120 = call i32 (%1*, i8*, ...) @fprintf(%1* %119, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1048, i64 0, i64 0), i8* nonnull %86) #16
  br label %121

121:                                              ; preds = %85, %88, %25
  %122 = add nuw nsw i64 %8, 1
  %123 = icmp eq i64 %122, 13
  br i1 %123, label %124, label %7

124:                                              ; preds = %121
  %125 = load %1*, %1** @stderr, align 8
  %126 = call i64 @fwrite(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @1049, i64 0, i64 0), i64 119, i64 1, %1* %125) #16
  ret i32 0
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @clusterManagerSlotCompare(i8* nocapture readonly %0, i8* nocapture readonly %1) #2 {
  %3 = bitcast i8* %0 to i8**
  %4 = bitcast i8* %1 to i8**
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = tail call i32 @strcmp(i8* %5, i8* %6) #17
  ret i32 %7
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @clusterManagerSlotCountCompareDesc(i8* nocapture readonly %0, i8* nocapture readonly %1) #7 {
  %3 = bitcast i8* %0 to %27**
  %4 = load %27*, %27** %3, align 8
  %5 = bitcast i8* %1 to %27**
  %6 = load %27*, %27** %5, align 8
  %7 = getelementptr inbounds %27, %27* %6, i64 0, i32 12
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %27, %27* %4, i64 0, i32 12
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %8, %10
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @clusterManagerCompareNodeBalance(i8* nocapture readonly %0, i8* nocapture readonly %1) #7 {
  %3 = bitcast i8* %0 to %27**
  %4 = load %27*, %27** %3, align 8
  %5 = bitcast i8* %1 to %27**
  %6 = load %27*, %27** %5, align 8
  %7 = getelementptr inbounds %27, %27* %4, i64 0, i32 20
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %27, %27* %6, i64 0, i32 20
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %8, %10
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define dso_local void @showLatencyDistSamples(%22* nocapture %0, i64 %1) local_unnamed_addr #0 {
  %3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @722, i64 0, i64 0))
  %4 = sitofp i64 %1 to float
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi i64 [ %27, %5 ], [ 0, %2 ]
  %7 = getelementptr inbounds %22, %22* %0, i64 %6, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = sitofp i64 %8 to float
  %10 = fdiv float %9, %4
  %11 = load i32, i32* @spectrum_palette_size, align 4
  %12 = add nsw i32 %11, -1
  %13 = sitofp i32 %12 to float
  %14 = fmul float %10, %13
  %15 = tail call float @llvm.ceil.f32(float %14)
  %16 = fptosi float %15 to i32
  %17 = load i32*, i32** @spectrum_palette, align 8
  %18 = sext i32 %16 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %22, %22* %0, i64 %6, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @723, i64 0, i64 0), i32 %20, i32 %22)
  store i64 0, i64* %7, align 8
  %24 = getelementptr inbounds %22, %22* %0, i64 %6, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  %27 = add nuw i64 %6, 1
  br i1 %26, label %28, label %5

28:                                               ; preds = %5
  %29 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i64 0, i64 0))
  %30 = load %1*, %1** @stdout, align 8
  %31 = tail call i32 @fflush(%1* %30)
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #8

; Function Attrs: nounwind
declare dso_local i32 @fflush(%1* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @showLatencyDistLegend() local_unnamed_addr #0 {
  %1 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.16, i64 0, i64 0))
  %2 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.10, i64 0, i64 0))
  %3 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.11, i64 0, i64 0))
  %4 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.12, i64 0, i64 0))
  %5 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.13, i64 0, i64 0))
  %6 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.14, i64 0, i64 0))
  %7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @724, i64 0, i64 0))
  %8 = load i32, i32* @spectrum_palette_size, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %0, %10
  %11 = phi i64 [ %16, %10 ], [ 0, %0 ]
  %12 = load i32*, i32** @spectrum_palette, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 %11
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @725, i64 0, i64 0), i32 %14)
  %16 = add nuw nsw i64 %11, 1
  %17 = load i32, i32* @spectrum_palette_size, align 4
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %10, label %20

20:                                               ; preds = %10, %0
  %21 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i64 0, i64 0))
  %22 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.16, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @sendReplconf(i8* %0, i8* %1) local_unnamed_addr #0 {
  %3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @726, i64 0, i64 0), i8* %0, i8* %1)
  %4 = load %9*, %9** @727, align 8
  %5 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @728, i64 0, i64 0), i8* %0, i8* %1) #14
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = load %1*, %1** @stderr, align 8
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @729, i64 0, i64 0), i64 11, i64 1, %1* %8) #16
  tail call void @exit(i32 1) #19
  unreachable

10:                                               ; preds = %2
  %11 = bitcast i8* %5 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = load %1*, %1** @stderr, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 32
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @730, i64 0, i64 0), i8* %0, i8* %18) #16
  br label %20

20:                                               ; preds = %10, %14
  tail call void @freeReplyObject(i8* nonnull %5) #14
  ret void
}

declare dso_local i8* @redisCommand(%9*, i8*, ...) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) local_unnamed_addr #9

declare dso_local void @freeReplyObject(i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @sendCapa() local_unnamed_addr #0 {
  tail call void @sendReplconf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @731, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @732, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @sendSync(i32 %0, i8* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca [4096 x i8], align 16
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %4) #14
  %5 = tail call i64 @write(i32 %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @733, i64 0, i64 0), i64 6) #14
  %6 = icmp eq i64 %5, 6
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = call i64 @read(i32 %0, i8* nonnull %4, i64 1) #14
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %13, label %16

10:                                               ; preds = %2
  %11 = load %1*, %1** @stderr, align 8
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @734, i64 0, i64 0), i64 24, i64 1, %1* %11) #16
  tail call void @exit(i32 1) #19
  unreachable

13:                                               ; preds = %23, %7
  %14 = load %1*, %1** @stderr, align 8
  %15 = tail call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @735, i64 0, i64 0), i64 40, i64 1, %1* %14) #16
  tail call void @exit(i32 1) #19
  unreachable

16:                                               ; preds = %7, %23
  %17 = phi i8* [ %26, %23 ], [ %4, %7 ]
  %18 = phi i64 [ %25, %23 ], [ 0, %7 ]
  %19 = load i8, i8* %17, align 1
  %20 = icmp ne i8 %19, 10
  %21 = icmp eq i64 %18, 0
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = zext i1 %20 to i64
  %25 = add nuw nsw i64 %18, %24
  %26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 %25
  %27 = call i64 @read(i32 %0, i8* nonnull %26, i64 1) #14
  %28 = icmp slt i64 %27, 1
  br i1 %28, label %13, label %16

29:                                               ; preds = %16
  store i8 0, i8* %17, align 1
  %30 = load i8, i8* %4, align 16
  %31 = icmp eq i8 %30, 45
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @736, i64 0, i64 0), i8* nonnull %4)
  call void @exit(i32 1) #19
  unreachable

34:                                               ; preds = %29
  %35 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 1
  %36 = call i32 @strncmp(i8* nonnull %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @737, i64 0, i64 0), i64 4) #17
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 5
  %40 = call i64 @strlen(i8* nonnull %39) #17
  %41 = icmp ugt i64 %40, 39
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %39, i64 40, i1 false)
  br label %45

43:                                               ; preds = %38, %34
  %44 = call i64 @strtoull(i8* nocapture nonnull %35, i8** null, i32 10) #14
  br label %45

45:                                               ; preds = %43, %42
  %46 = phi i64 [ 0, %42 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %4) #14
  ret i64 %46
}

declare dso_local i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #5

declare dso_local i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare dso_local i64 @strtoull(i8* readonly, i8** nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @type_free(i8* nocapture readnone %0, i8* %1) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 48
  %4 = bitcast i8* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @sdsfree(i8* nonnull %5) #14
  br label %8

8:                                                ; preds = %2, %7
  %9 = bitcast i8* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @sdsfree(i8* %10) #14
  tail call void @zfree(i8* nonnull %1) #14
  ret void
}

declare dso_local void @zfree(i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @bytesToHuman(i8* nocapture %0, i64 %1) local_unnamed_addr #0 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  store i8 45, i8* %0, align 1
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = sub nsw i64 0, %1
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i8* [ %5, %4 ], [ %0, %2 ]
  %9 = phi i64 [ %6, %4 ], [ %1, %2 ]
  %10 = icmp slt i64 %9, 1024
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @751, i64 0, i64 0), i64 %9) #14
  br label %31

13:                                               ; preds = %7
  %14 = icmp slt i64 %9, 1048576
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = sitofp i64 %9 to double
  %17 = fmul double %16, 0x3F50000000000000
  %18 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @752, i64 0, i64 0), double %17) #14
  br label %31

19:                                               ; preds = %13
  %20 = icmp slt i64 %9, 1073741824
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = sitofp i64 %9 to double
  %23 = fmul double %22, 0x3EB0000000000000
  %24 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @753, i64 0, i64 0), double %23) #14
  br label %31

25:                                               ; preds = %19
  %26 = icmp slt i64 %9, 1099511627776
  br i1 %26, label %27, label %31

27:                                               ; preds = %25
  %28 = sitofp i64 %9 to double
  %29 = fmul double %28, 0x3E10000000000000
  %30 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @754, i64 0, i64 0), double %29) #14
  br label %31

31:                                               ; preds = %21, %27, %25, %15, %11
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i64 @powerLawRand(i64 %0, i64 %1, double %2) local_unnamed_addr #0 {
  %4 = add nsw i64 %1, 1
  %5 = tail call i32 @rand() #14
  %6 = sitofp i32 %5 to double
  %7 = fdiv double %6, 0x41DFFFFFFFC00000
  %8 = sitofp i64 %4 to double
  %9 = fadd double %2, 1.000000e+00
  %10 = tail call double @pow(double %8, double %9) #14
  %11 = sitofp i64 %0 to double
  %12 = tail call double @pow(double %11, double %9) #14
  %13 = fsub double %10, %12
  %14 = fmul double %7, %13
  %15 = tail call double @pow(double %11, double %9) #14
  %16 = fadd double %15, %14
  %17 = fdiv double 1.000000e+00, %9
  %18 = tail call double @pow(double %16, double %17) #14
  %19 = fptosi double %18 to i64
  %20 = add i64 %1, %0
  %21 = sub i64 %20, %19
  ret i64 %21
}

; Function Attrs: nounwind
declare dso_local i32 @rand() local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local double @pow(double, double) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @LRUTestGenKey(i8* nocapture %0, i64 %1) local_unnamed_addr #0 {
  %3 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 20), align 8
  %4 = add i64 %3, 1
  %5 = tail call i32 @rand() #14
  %6 = sitofp i32 %5 to double
  %7 = fdiv double %6, 0x41DFFFFFFFC00000
  %8 = sitofp i64 %4 to double
  %9 = tail call double @pow(double %8, double 7.200000e+00) #14
  %10 = fadd double %9, -1.000000e+00
  %11 = fmul double %7, %10
  %12 = fadd double %11, 1.000000e+00
  %13 = tail call double @pow(double %12, double 0x3FC1C71C71C71C72) #14
  %14 = fptosi double %13 to i64
  %15 = sub i64 %4, %14
  %16 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @755, i64 0, i64 0), i64 %15) #14
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind readnone uwtable
define dso_local i64 @compute_something_fast() local_unnamed_addr #11 {
  %1 = alloca [256 x i8], align 16
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2) #14
  %3 = bitcast [256 x i8]* %1 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %3, align 16
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 16
  %5 = bitcast i8* %4 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %5, align 16
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 32
  %7 = bitcast i8* %6 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %7, align 16
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 48
  %9 = bitcast i8* %8 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %9, align 16
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 64
  %11 = bitcast i8* %10 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %11, align 16
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 80
  %13 = bitcast i8* %12 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %13, align 16
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 96
  %15 = bitcast i8* %14 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %15, align 16
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 112
  %17 = bitcast i8* %16 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %17, align 16
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 128
  %19 = bitcast i8* %18 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %19, align 16
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 144
  %21 = bitcast i8* %20 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %21, align 16
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 160
  %23 = bitcast i8* %22 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %23, align 16
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 176
  %25 = bitcast i8* %24 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %25, align 16
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 192
  %27 = bitcast i8* %26 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %27, align 16
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 208
  %29 = bitcast i8* %28 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %29, align 16
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 224
  %31 = bitcast i8* %30 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %31, align 16
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 240
  %33 = bitcast i8* %32 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %33, align 16
  br label %34

34:                                               ; preds = %0, %34
  %35 = phi i64 [ %59, %34 ], [ 0, %0 ]
  %36 = phi i32 [ %39, %34 ], [ 1000, %0 ]
  %37 = phi i8 [ %40, %34 ], [ 0, %0 ]
  %38 = phi i32 [ %46, %34 ], [ 0, %0 ]
  %39 = add nsw i32 %36, -1
  %40 = add i8 %37, 1
  %41 = and i32 %38, 255
  %42 = zext i8 %40 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = add nuw nsw i32 %41, %45
  %47 = and i32 %46, 255
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %43, align 1
  store i8 %44, i8* %49, align 1
  %51 = load i8, i8* %43, align 1
  %52 = zext i8 %51 to i32
  %53 = add nuw nsw i32 %52, %45
  %54 = and i32 %53, 255
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = add i64 %35, %58
  %60 = icmp eq i32 %39, 0
  br i1 %60, label %61, label %34

61:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %2) #14
  ret i64 %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1) local_unnamed_addr #0 {
  %3 = alloca [1024 x i8], align 16
  %4 = alloca i8, align 1
  %5 = tail call i8* @sdsnew(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @757, i64 0, i64 0)) #14
  store i8* %5, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  store i32 6379, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  store i8* null, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 2), align 8
  store i64 1, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 9), align 8
  store i64 0, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 20), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 24), align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10) to i8*), i8 0, i64 44, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 26) to i8*), i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 31) to i8*), i8 0, i64 16, i1 false)
  store i32 30, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 25), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 33), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 36), align 4
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 37), align 8
  store i8* null, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 39), align 8
  store i8* null, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44) to i8*), i8 0, i64 24, i1 false)
  store i32 -1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 49), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 52), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 10), align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 50) to i8*), i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 2) to i8*), i8 0, i64 44, i1 false)
  store i32 60000, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 11), align 4
  store i32 10, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 12), align 8
  store float 2.000000e+00, float* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 13), align 4
  store i8* null, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 14), align 8
  store i1 true, i1* @.0, align 4
  store i32* getelementptr inbounds ([19 x i32], [19 x i32]* @spectrum_palette_color, i64 0, i64 0), i32** @spectrum_palette, align 8
  %6 = load i32, i32* @spectrum_palette_color_size, align 4
  store i32 %6, i32* @spectrum_palette_size, align 4
  %7 = load %1*, %1** @stdout, align 8
  %8 = tail call i32 @fileno(%1* %7) #14
  %9 = tail call i32 @isatty(i32 %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = tail call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @758, i64 0, i64 0)) #14
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %2, %11
  br label %15

15:                                               ; preds = %11, %14
  %16 = phi i32 [ 0, %14 ], [ 1, %11 ]
  store i32 %16, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  %17 = tail call i8* @sdsnew(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0)) #14
  store i8* %17, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  %18 = icmp sgt i32 %0, 1
  br i1 %18, label %19, label %702

19:                                               ; preds = %15
  %20 = add nsw i32 %0, -1
  %21 = sext i32 %0 to i64
  br label %22

22:                                               ; preds = %698, %19
  %23 = phi i32 [ 1, %19 ], [ %700, %698 ]
  %24 = icmp eq i32 %23, %20
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds i8*, i8** %1, i64 %25
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1050, i64 0, i64 0)) #17
  %29 = icmp ne i32 %28, 0
  %30 = or i1 %24, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  call void @sdsfree(i8* %32) #14
  %33 = add nsw i32 %23, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8*, i8** %1, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i8* @sdsnew(i8* %36) #14
  store i8* %37, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  br label %698

38:                                               ; preds = %22
  %39 = icmp eq i32 %28, 0
  %40 = and i1 %24, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call fastcc void @1391() #14
  unreachable

42:                                               ; preds = %38
  %43 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1051, i64 0, i64 0)) #17
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call fastcc void @1391() #14
  unreachable

46:                                               ; preds = %42
  %47 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1052, i64 0, i64 0)) #17
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 37), align 8
  br label %698

50:                                               ; preds = %46
  %51 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1053, i64 0, i64 0)) #17
  %52 = icmp ne i32 %51, 0
  %53 = or i1 %24, %52
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = add nsw i32 %23, 1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8*, i8** %1, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = call i64 @strtol(i8* nocapture nonnull %58, i8** null, i32 10) #14
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  br label %698

61:                                               ; preds = %50
  %62 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1054, i64 0, i64 0)) #17
  %63 = icmp ne i32 %62, 0
  %64 = or i1 %24, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = add nsw i32 %23, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8*, i8** %1, i64 %67
  %69 = bitcast i8** %68 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 2) to i64*), align 8
  br label %698

71:                                               ; preds = %61
  %72 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1055, i64 0, i64 0)) #17
  %73 = icmp ne i32 %72, 0
  %74 = or i1 %24, %73
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = add nsw i32 %23, 1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8*, i8** %1, i64 %77
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strtoll(i8* nocapture %79, i8** null, i32 10) #14
  store i64 %80, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 9), align 8
  br label %698

81:                                               ; preds = %71
  %82 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1056, i64 0, i64 0)) #17
  %83 = icmp ne i32 %82, 0
  %84 = or i1 %24, %83
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = add nsw i32 %23, 1
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8*, i8** %1, i64 %87
  %89 = load i8*, i8** %88, align 8
  %90 = call double @strtod(i8* nocapture nonnull %89, i8** null) #14
  %91 = fmul double %90, 1.000000e+06
  %92 = fptosi double %91 to i64
  store i64 %92, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  br label %698

93:                                               ; preds = %81
  %94 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1057, i64 0, i64 0)) #17
  %95 = icmp ne i32 %94, 0
  %96 = or i1 %24, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = add nsw i32 %23, 1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8*, i8** %1, i64 %99
  %101 = load i8*, i8** %100, align 8
  %102 = call i64 @strtol(i8* nocapture nonnull %101, i8** null, i32 10) #14
  %103 = trunc i64 %102 to i32
  store i32 %103, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  br label %698

104:                                              ; preds = %93
  %105 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1058, i64 0, i64 0)) #17
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 52), align 8
  br label %698

108:                                              ; preds = %104
  %109 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1059, i64 0, i64 0)) #17
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 39), align 8
  br label %698

112:                                              ; preds = %108
  %113 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1060, i64 0, i64 0)) #17
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %112
  %116 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1061, i64 0, i64 0)) #17
  %117 = icmp ne i32 %116, 0
  %118 = or i1 %24, %117
  br i1 %118, label %126, label %120

119:                                              ; preds = %112
  br i1 %24, label %276, label %120

120:                                              ; preds = %119, %115
  %121 = add nsw i32 %23, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %1, i64 %122
  %124 = bitcast i8** %123 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38) to i64*), align 8
  br label %698

126:                                              ; preds = %115
  %127 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1062, i64 0, i64 0)) #17
  %128 = icmp ne i32 %127, 0
  %129 = or i1 %24, %128
  br i1 %129, label %136, label %130

130:                                              ; preds = %126
  %131 = add nsw i32 %23, 1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8*, i8** %1, i64 %132
  %134 = bitcast i8** %133 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40) to i64*), align 8
  br label %698

136:                                              ; preds = %126
  %137 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1063, i64 0, i64 0)) #17
  %138 = icmp ne i32 %137, 0
  %139 = or i1 %24, %138
  br i1 %139, label %276, label %140

140:                                              ; preds = %136
  %141 = add nsw i32 %23, 1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8*, i8** %1, i64 %142
  %144 = load i8*, i8** %143, align 8
  %145 = call i64 @strlen(i8* %144) #17
  %146 = getelementptr inbounds i8, i8* %144, i64 %145
  %147 = call i32 @strncasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1123, i64 0, i64 0), i8* %144, i64 8) #17
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %140
  %150 = load %1*, %1** @stderr, align 8
  %151 = call i64 @fwrite(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1124, i64 0, i64 0), i64 19, i64 1, %1* %150) #20
  call void @exit(i32 1) #19
  unreachable

152:                                              ; preds = %140
  %153 = getelementptr inbounds i8, i8* %144, i64 8
  %154 = icmp eq i64 %145, 8
  br i1 %154, label %698, label %155

155:                                              ; preds = %152
  %156 = call i8* @strchr(i8* nonnull %153, i32 64) #17
  %157 = icmp eq i8* %156, null
  br i1 %157, label %243, label %158

158:                                              ; preds = %155
  %159 = call i8* @strchr(i8* nonnull %153, i32 58) #17
  %160 = icmp ne i8* %159, null
  %161 = icmp ult i8* %159, %156
  %162 = and i1 %160, %161
  %163 = getelementptr inbounds i8, i8* %159, i64 1
  %164 = select i1 %162, i8* %163, i8* %153
  %165 = ptrtoint i8* %156 to i64
  %166 = ptrtoint i8* %164 to i64
  %167 = sub i64 %165, %166
  %168 = call i8* @sdsempty() #14
  %169 = icmp sgt i64 %167, 0
  br i1 %169, label %170, label %240

170:                                              ; preds = %158, %236
  %171 = phi i8* [ %238, %236 ], [ %168, %158 ]
  %172 = phi i8* [ %237, %236 ], [ %164, %158 ]
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 37
  br i1 %174, label %175, label %233

175:                                              ; preds = %170
  %176 = ptrtoint i8* %172 to i64
  %177 = sub i64 %165, %176
  %178 = icmp slt i64 %177, 2
  br i1 %178, label %179, label %182

179:                                              ; preds = %175
  %180 = load %1*, %1** @stderr, align 8
  %181 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1125, i64 0, i64 0), i64 24, i64 1, %1* %180) #20
  call void @exit(i32 1) #19
  unreachable

182:                                              ; preds = %175
  %183 = tail call i32** @__ctype_tolower_loc() #18
  %184 = load i32*, i32** %183, align 8
  %185 = getelementptr inbounds i8, i8* %172, i64 1
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i64
  %188 = getelementptr inbounds i32, i32* %184, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = tail call i16** @__ctype_b_loc() #18
  %191 = load i16*, i16** %190, align 8
  %192 = shl i32 %189, 24
  %193 = ashr exact i32 %192, 24
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i16, i16* %191, i64 %194
  %196 = load i16, i16* %195, align 2
  %197 = and i16 %196, 2048
  %198 = icmp eq i16 %197, 0
  %199 = xor i1 %198, true
  %200 = add i32 %192, -1610612737
  %201 = icmp ult i32 %200, 117440511
  %202 = or i1 %201, %199
  br i1 %202, label %203, label %220

203:                                              ; preds = %182
  %204 = getelementptr inbounds i8, i8* %172, i64 2
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i64
  %207 = getelementptr inbounds i32, i32* %184, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = shl i32 %208, 24
  %210 = ashr exact i32 %209, 24
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i16, i16* %191, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = and i16 %213, 2048
  %215 = icmp eq i16 %214, 0
  %216 = xor i1 %215, true
  %217 = add i32 %209, -1610612737
  %218 = icmp ult i32 %217, 117440511
  %219 = or i1 %218, %216
  br i1 %219, label %223, label %220

220:                                              ; preds = %203, %182
  %221 = load %1*, %1** @stderr, align 8
  %222 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1126, i64 0, i64 0), i64 34, i64 1, %1* %221) #20
  call void @exit(i32 1) #19
  unreachable

223:                                              ; preds = %203
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  %224 = select i1 %198, i32 9, i32 0
  %225 = add nsw i32 %224, %193
  %226 = shl nsw i32 %225, 4
  %227 = select i1 %215, i32 169, i32 208
  %228 = add nsw i32 %210, %226
  %229 = add nsw i32 %228, %227
  %230 = trunc i32 %229 to i8
  store i8 %230, i8* %4, align 1
  %231 = call i8* @sdscatlen(i8* %171, i8* nonnull %4, i64 1) #14
  %232 = getelementptr inbounds i8, i8* %172, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br label %236

233:                                              ; preds = %170
  %234 = getelementptr inbounds i8, i8* %172, i64 1
  %235 = call i8* @sdscatlen(i8* %171, i8* nonnull %172, i64 1) #14
  br label %236

236:                                              ; preds = %233, %223
  %237 = phi i8* [ %232, %223 ], [ %234, %233 ]
  %238 = phi i8* [ %231, %223 ], [ %235, %233 ]
  %239 = icmp ult i8* %237, %156
  br i1 %239, label %170, label %240

240:                                              ; preds = %236, %158
  %241 = phi i8* [ %168, %158 ], [ %238, %236 ]
  store i8* %241, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %242 = getelementptr inbounds i8, i8* %156, i64 1
  br label %243

243:                                              ; preds = %240, %155
  %244 = phi i8* [ %242, %240 ], [ %153, %155 ]
  %245 = icmp eq i8* %244, %146
  br i1 %245, label %698, label %246

246:                                              ; preds = %243
  %247 = call i8* @strchr(i8* nonnull %244, i32 47) #17
  %248 = load i8, i8* %244, align 1
  %249 = icmp eq i8 %248, 47
  br i1 %249, label %268, label %250

250:                                              ; preds = %246
  %251 = icmp eq i8* %247, null
  %252 = getelementptr inbounds i8, i8* %247, i64 -1
  %253 = select i1 %251, i8* %146, i8* %252
  %254 = call i8* @strchr(i8* nonnull %244, i32 58) #17
  %255 = icmp eq i8* %254, null
  br i1 %255, label %261, label %256

256:                                              ; preds = %250
  %257 = getelementptr inbounds i8, i8* %254, i64 1
  %258 = call i64 @strtol(i8* nocapture nonnull %257, i8** null, i32 10) #14
  %259 = trunc i64 %258 to i32
  store i32 %259, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  %260 = getelementptr inbounds i8, i8* %254, i64 -1
  br label %261

261:                                              ; preds = %256, %250
  %262 = phi i8* [ %260, %256 ], [ %253, %250 ]
  %263 = ptrtoint i8* %262 to i64
  %264 = ptrtoint i8* %244 to i64
  %265 = sub i64 1, %264
  %266 = add i64 %265, %263
  %267 = call i8* @sdsnewlen(i8* nonnull %244, i64 %266) #14
  store i8* %267, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  br label %268

268:                                              ; preds = %261, %246
  %269 = icmp eq i8* %247, null
  %270 = getelementptr inbounds i8, i8* %247, i64 1
  %271 = select i1 %269, i8* %146, i8* %270
  %272 = icmp eq i8* %271, %146
  br i1 %272, label %698, label %273

273:                                              ; preds = %268
  %274 = call i64 @strtol(i8* nocapture nonnull %271, i8** null, i32 10) #14
  %275 = trunc i64 %274 to i32
  store i32 %275, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  br label %698

276:                                              ; preds = %136, %119
  %277 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1064, i64 0, i64 0)) #17
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %698

280:                                              ; preds = %276
  %281 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1065, i64 0, i64 0)) #17
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %698

284:                                              ; preds = %280
  %285 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1066, i64 0, i64 0)) #17
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  store i32 2, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %698

288:                                              ; preds = %284
  %289 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1067, i64 0, i64 0)) #17
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 16), align 4
  br label %698

292:                                              ; preds = %288
  %293 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1068, i64 0, i64 0)) #17
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 17), align 8
  br label %698

296:                                              ; preds = %292
  %297 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1069, i64 0, i64 0)) #17
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %296
  store i32* getelementptr inbounds ([13 x i32], [13 x i32]* @spectrum_palette_mono, i64 0, i64 0), i32** @spectrum_palette, align 8
  %300 = load i32, i32* @spectrum_palette_mono_size, align 4
  store i32 %300, i32* @spectrum_palette_size, align 4
  br label %698

301:                                              ; preds = %296
  %302 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1070, i64 0, i64 0)) #17
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 16), align 4
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 18), align 4
  br label %698

305:                                              ; preds = %301
  %306 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1071, i64 0, i64 0)) #17
  %307 = icmp ne i32 %306, 0
  %308 = or i1 %24, %307
  br i1 %308, label %315, label %309

309:                                              ; preds = %305
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 19), align 8
  %310 = add nsw i32 %23, 1
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i8*, i8** %1, i64 %311
  %313 = load i8*, i8** %312, align 8
  %314 = call i64 @strtoll(i8* nocapture %313, i8** null, i32 10) #14
  store i64 %314, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 20), align 8
  br label %698

315:                                              ; preds = %305
  %316 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1072, i64 0, i64 0)) #17
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  br label %698

319:                                              ; preds = %315
  %320 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1073, i64 0, i64 0)) #17
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  br label %698

323:                                              ; preds = %319
  %324 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1074, i64 0, i64 0)) #17
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 27), align 8
  br label %698

327:                                              ; preds = %323
  %328 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1075, i64 0, i64 0)) #17
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 28), align 4
  br label %698

331:                                              ; preds = %327
  %332 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1076, i64 0, i64 0)) #17
  %333 = icmp ne i32 %332, 0
  %334 = or i1 %24, %333
  br i1 %334, label %341, label %335

335:                                              ; preds = %331
  %336 = add nsw i32 %23, 1
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds i8*, i8** %1, i64 %337
  %339 = bitcast i8** %338 to i64*
  %340 = load i64, i64* %339, align 8
  store i64 %340, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 31) to i64*), align 8
  br label %698

341:                                              ; preds = %331
  %342 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1077, i64 0, i64 0)) #17
  %343 = icmp ne i32 %342, 0
  %344 = or i1 %24, %343
  br i1 %344, label %352, label %345

345:                                              ; preds = %341
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 29), align 8
  %346 = add nsw i32 %23, 1
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds i8*, i8** %1, i64 %347
  %349 = load i8*, i8** %348, align 8
  %350 = call i64 @strtol(i8* nocapture nonnull %349, i8** null, i32 10) #14
  %351 = trunc i64 %350 to i32
  store i32 %351, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 30), align 4
  br label %698

352:                                              ; preds = %341
  %353 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1078, i64 0, i64 0)) #17
  %354 = icmp ne i32 %353, 0
  %355 = or i1 %24, %354
  br i1 %355, label %362, label %356

356:                                              ; preds = %352
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 26), align 4
  %357 = add nsw i32 %23, 1
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds i8*, i8** %1, i64 %358
  %360 = bitcast i8** %359 to i64*
  %361 = load i64, i64* %360, align 8
  store i64 %361, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 32) to i64*), align 8
  br label %698

362:                                              ; preds = %352
  %363 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1079, i64 0, i64 0)) #17
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 24), align 4
  br label %698

366:                                              ; preds = %362
  %367 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1080, i64 0, i64 0)) #17
  %368 = icmp ne i32 %367, 0
  %369 = or i1 %24, %368
  br i1 %369, label %377, label %370

370:                                              ; preds = %366
  %371 = add nsw i32 %23, 1
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds i8*, i8** %1, i64 %372
  %374 = load i8*, i8** %373, align 8
  %375 = call i64 @strtol(i8* nocapture nonnull %374, i8** null, i32 10) #14
  %376 = trunc i64 %375 to i32
  store i32 %376, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 25), align 8
  br label %698

377:                                              ; preds = %366
  %378 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1081, i64 0, i64 0)) #17
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 33), align 8
  br label %698

381:                                              ; preds = %377
  %382 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1082, i64 0, i64 0)) #17
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 34), align 4
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 35), align 8
  br label %698

385:                                              ; preds = %381
  %386 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1083, i64 0, i64 0)) #17
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %395

388:                                              ; preds = %385
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 34), align 4
  %389 = add nsw i32 %23, 1
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i8*, i8** %1, i64 %390
  %392 = load i8*, i8** %391, align 8
  %393 = call i64 @strtol(i8* nocapture nonnull %392, i8** null, i32 10) #14
  %394 = trunc i64 %393 to i32
  store i32 %394, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 35), align 8
  br label %698

395:                                              ; preds = %385
  %396 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1084, i64 0, i64 0)) #17
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 36), align 4
  br label %698

399:                                              ; preds = %395
  %400 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1085, i64 0, i64 0)) #17
  %401 = icmp ne i32 %400, 0
  %402 = or i1 %24, %401
  br i1 %402, label %409, label %403

403:                                              ; preds = %399
  %404 = add nsw i32 %23, 1
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8*, i8** %1, i64 %405
  %407 = bitcast i8** %406 to i64*
  %408 = load i64, i64* %407, align 8
  store i64 %408, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44) to i64*), align 8
  br label %698

409:                                              ; preds = %399
  %410 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1086, i64 0, i64 0)) #17
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %698

413:                                              ; preds = %409
  %414 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1087, i64 0, i64 0)) #17
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %417

416:                                              ; preds = %413
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 46), align 4
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %698

417:                                              ; preds = %413
  %418 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1088, i64 0, i64 0)) #17
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  br label %698

421:                                              ; preds = %417
  %422 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1089, i64 0, i64 0)) #17
  %423 = icmp ne i32 %422, 0
  %424 = or i1 %24, %423
  br i1 %424, label %432, label %425

425:                                              ; preds = %421
  %426 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  call void @sdsfree(i8* %426) #14
  %427 = add nsw i32 %23, 1
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i8*, i8** %1, i64 %428
  %430 = load i8*, i8** %429, align 8
  %431 = call i8* @sdsnew(i8* %430) #14
  store i8* %431, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  br label %698

432:                                              ; preds = %421
  %433 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1090, i64 0, i64 0)) #17
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 50), align 4
  br label %698

436:                                              ; preds = %432
  %437 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1091, i64 0, i64 0)) #17
  %438 = icmp ne i32 %437, 0
  %439 = or i1 %24, %438
  br i1 %439, label %486, label %440

440:                                              ; preds = %436
  %441 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 0), align 8
  %442 = icmp eq i8* %441, null
  br i1 %442, label %444, label %443

443:                                              ; preds = %440
  call fastcc void @1391() #14
  unreachable

444:                                              ; preds = %440
  %445 = add i32 %23, 1
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds i8*, i8** %1, i64 %446
  %448 = bitcast i8** %447 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = icmp slt i32 %445, %0
  br i1 %450, label %451, label %469

451:                                              ; preds = %444
  %452 = inttoptr i64 %449 to i8*
  %453 = load i8, i8* %452, align 1
  %454 = icmp eq i8 %453, 45
  br i1 %454, label %466, label %455

455:                                              ; preds = %451, %461
  %456 = phi i32 [ %459, %461 ], [ %445, %451 ]
  %457 = phi i64 [ %458, %461 ], [ %446, %451 ]
  %458 = add nsw i64 %457, 1
  %459 = add nsw i32 %456, 1
  %460 = icmp slt i64 %458, %21
  br i1 %460, label %461, label %469

461:                                              ; preds = %455
  %462 = getelementptr inbounds i8*, i8** %1, i64 %458
  %463 = load i8*, i8** %462, align 8
  %464 = load i8, i8* %463, align 1
  %465 = icmp eq i8 %464, 45
  br i1 %465, label %466, label %455

466:                                              ; preds = %461, %451
  %467 = phi i64 [ %446, %451 ], [ %458, %461 ]
  %468 = trunc i64 %467 to i32
  br label %469

469:                                              ; preds = %455, %466, %444
  %470 = phi i32 [ %445, %444 ], [ %468, %466 ], [ %459, %455 ]
  %471 = icmp sgt i32 %470, %445
  %472 = sext i1 %471 to i32
  %473 = add nsw i32 %470, %472
  %474 = sub nsw i32 %473, %445
  %475 = getelementptr inbounds i8*, i8** %447, i64 1
  store i64 %449, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 0) to i64*), align 8
  store i32 %474, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 1), align 8
  %476 = icmp eq i32 %474, 0
  %477 = select i1 %476, i8** null, i8** %475
  store i8** %477, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 2), align 8
  %478 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @667, i64 0, i64 0)) #14
  %479 = icmp eq i8* %478, null
  br i1 %479, label %698, label %480

480:                                              ; preds = %469
  %481 = call i8* @strstr(i8* nonnull %478, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @668, i64 0, i64 0)) #17
  %482 = icmp eq i8* %481, null
  br i1 %482, label %698, label %483

483:                                              ; preds = %480
  %484 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %485 = or i32 %484, 256
  store i32 %485, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

486:                                              ; preds = %436
  %487 = icmp eq i32 %437, 0
  %488 = and i1 %24, %487
  br i1 %488, label %489, label %490

489:                                              ; preds = %486
  call fastcc void @1391() #14
  unreachable

490:                                              ; preds = %486
  %491 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1092, i64 0, i64 0)) #17
  %492 = icmp ne i32 %491, 0
  %493 = or i1 %24, %492
  br i1 %493, label %501, label %494

494:                                              ; preds = %490
  %495 = add nsw i32 %23, 1
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds i8*, i8** %1, i64 %496
  %498 = load i8*, i8** %497, align 8
  %499 = call i64 @strtol(i8* nocapture nonnull %498, i8** null, i32 10) #14
  %500 = trunc i64 %499 to i32
  store i32 %500, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 4), align 4
  br label %698

501:                                              ; preds = %490
  %502 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1093, i64 0, i64 0)) #17
  %503 = icmp ne i32 %502, 0
  %504 = or i1 %24, %503
  br i1 %504, label %511, label %505

505:                                              ; preds = %501
  %506 = add nsw i32 %23, 1
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds i8*, i8** %1, i64 %507
  %509 = bitcast i8** %508 to i64*
  %510 = load i64, i64* %509, align 8
  store i64 %510, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 9) to i64*), align 8
  br label %698

511:                                              ; preds = %501
  %512 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1094, i64 0, i64 0)) #17
  %513 = icmp ne i32 %512, 0
  %514 = or i1 %24, %513
  br i1 %514, label %521, label %515

515:                                              ; preds = %511
  %516 = add nsw i32 %23, 1
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i8*, i8** %1, i64 %517
  %519 = bitcast i8** %518 to i64*
  %520 = load i64, i64* %519, align 8
  store i64 %520, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 5) to i64*), align 8
  br label %698

521:                                              ; preds = %511
  %522 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1095, i64 0, i64 0)) #17
  %523 = icmp ne i32 %522, 0
  %524 = or i1 %24, %523
  br i1 %524, label %531, label %525

525:                                              ; preds = %521
  %526 = add nsw i32 %23, 1
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds i8*, i8** %1, i64 %527
  %529 = bitcast i8** %528 to i64*
  %530 = load i64, i64* %529, align 8
  store i64 %530, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 6) to i64*), align 8
  br label %698

531:                                              ; preds = %521
  %532 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @1096, i64 0, i64 0)) #17
  %533 = icmp ne i32 %532, 0
  %534 = or i1 %24, %533
  br i1 %534, label %565, label %535

535:                                              ; preds = %531
  %536 = load i8**, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 7), align 8
  %537 = icmp eq i8** %536, null
  br i1 %537, label %541, label %538

538:                                              ; preds = %535
  %539 = load %1*, %1** @stderr, align 8
  %540 = call i64 @fwrite(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @1097, i64 0, i64 0), i64 155, i64 1, %1* %539) #20
  call void @exit(i32 1) #19
  unreachable

541:                                              ; preds = %535
  %542 = add i32 %23, 1
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds i8*, i8** %1, i64 %543
  %545 = icmp slt i32 %542, %0
  br i1 %545, label %546, label %698

546:                                              ; preds = %541, %556
  %547 = phi i64 [ %558, %556 ], [ %543, %541 ]
  %548 = phi i32 [ %557, %556 ], [ 0, %541 ]
  %549 = getelementptr inbounds i8*, i8** %1, i64 %547
  %550 = load i8*, i8** %549, align 8
  %551 = call i32 @strncmp(i8* %550, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1098, i64 0, i64 0), i64 2) #14
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %560, label %553

553:                                              ; preds = %546
  %554 = call i8* @strchr(i8* %550, i32 61) #17
  %555 = icmp eq i8* %554, null
  br i1 %555, label %560, label %556

556:                                              ; preds = %553
  %557 = add nuw nsw i32 %548, 1
  %558 = add nsw i64 %547, 1
  %559 = icmp slt i64 %558, %21
  br i1 %559, label %546, label %562

560:                                              ; preds = %553, %546
  %561 = icmp eq i32 %548, 0
  br i1 %561, label %698, label %562

562:                                              ; preds = %556, %560
  %563 = phi i32 [ %548, %560 ], [ %557, %556 ]
  store i8** %544, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 7), align 8
  store i32 %563, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 8), align 8
  %564 = add nsw i32 %563, %23
  br label %698

565:                                              ; preds = %531
  %566 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1099, i64 0, i64 0)) #17
  %567 = icmp ne i32 %566, 0
  %568 = or i1 %24, %567
  br i1 %568, label %576, label %569

569:                                              ; preds = %565
  %570 = add nsw i32 %23, 1
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds i8*, i8** %1, i64 %571
  %573 = load i8*, i8** %572, align 8
  %574 = call i64 @strtol(i8* nocapture nonnull %573, i8** null, i32 10) #14
  %575 = trunc i64 %574 to i32
  store i32 %575, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 10), align 8
  br label %698

576:                                              ; preds = %565
  %577 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1100, i64 0, i64 0)) #17
  %578 = icmp ne i32 %577, 0
  %579 = or i1 %24, %578
  br i1 %579, label %587, label %580

580:                                              ; preds = %576
  %581 = add nsw i32 %23, 1
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds i8*, i8** %1, i64 %582
  %584 = load i8*, i8** %583, align 8
  %585 = call i64 @strtol(i8* nocapture nonnull %584, i8** null, i32 10) #14
  %586 = trunc i64 %585 to i32
  store i32 %586, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 11), align 4
  br label %698

587:                                              ; preds = %576
  %588 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1101, i64 0, i64 0)) #17
  %589 = icmp ne i32 %588, 0
  %590 = or i1 %24, %589
  br i1 %590, label %598, label %591

591:                                              ; preds = %587
  %592 = add nsw i32 %23, 1
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds i8*, i8** %1, i64 %593
  %595 = load i8*, i8** %594, align 8
  %596 = call i64 @strtol(i8* nocapture nonnull %595, i8** null, i32 10) #14
  %597 = trunc i64 %596 to i32
  store i32 %597, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 12), align 8
  br label %698

598:                                              ; preds = %587
  %599 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1102, i64 0, i64 0)) #17
  %600 = icmp ne i32 %599, 0
  %601 = or i1 %24, %600
  br i1 %601, label %609, label %602

602:                                              ; preds = %598
  %603 = add nsw i32 %23, 1
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds i8*, i8** %1, i64 %604
  %606 = load i8*, i8** %605, align 8
  %607 = call double @strtod(i8* nocapture nonnull %606, i8** null) #14
  %608 = fptrunc double %607 to float
  store float %608, float* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 13), align 4
  br label %698

609:                                              ; preds = %598
  %610 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1103, i64 0, i64 0)) #17
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %615

612:                                              ; preds = %609
  %613 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %614 = or i32 %613, 4
  store i32 %614, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

615:                                              ; preds = %609
  %616 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1104, i64 0, i64 0)) #17
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %621

618:                                              ; preds = %615
  %619 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %620 = or i32 %619, 32
  store i32 %620, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

621:                                              ; preds = %615
  %622 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1105, i64 0, i64 0)) #17
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %627

624:                                              ; preds = %621
  %625 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %626 = or i32 %625, 64
  store i32 %626, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

627:                                              ; preds = %621
  %628 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1106, i64 0, i64 0)) #17
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %627
  %631 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %632 = or i32 %631, 128
  store i32 %632, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

633:                                              ; preds = %627
  %634 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1107, i64 0, i64 0)) #17
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %639

636:                                              ; preds = %633
  %637 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %638 = or i32 %637, 2
  store i32 %638, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

639:                                              ; preds = %633
  %640 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1108, i64 0, i64 0)) #17
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %645

642:                                              ; preds = %639
  %643 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %644 = or i32 %643, 16
  store i32 %644, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

645:                                              ; preds = %639
  %646 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1109, i64 0, i64 0)) #17
  %647 = icmp eq i32 %646, 0
  br i1 %647, label %648, label %651

648:                                              ; preds = %645
  %649 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %650 = or i32 %649, 512
  store i32 %650, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

651:                                              ; preds = %645
  %652 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @1110, i64 0, i64 0)) #17
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %657

654:                                              ; preds = %651
  %655 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %656 = or i32 %655, 1024
  store i32 %656, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  br label %698

657:                                              ; preds = %651
  %658 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1111, i64 0, i64 0)) #17
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %663, label %660

660:                                              ; preds = %657
  %661 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1112, i64 0, i64 0)) #17
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %666

663:                                              ; preds = %660, %657
  %664 = call fastcc i8* @1392() #14
  %665 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1113, i64 0, i64 0), i8* %664) #14
  call void @sdsfree(i8* %664) #14
  call void @exit(i32 0) #19
  unreachable

666:                                              ; preds = %660
  %667 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1114, i64 0, i64 0)) #17
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %670

669:                                              ; preds = %666
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 53), align 4
  br label %698

670:                                              ; preds = %666
  %671 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 0), align 8
  %672 = icmp eq i8* %671, null
  %673 = load i8, i8* %27, align 1
  %674 = icmp eq i8 %673, 45
  br i1 %672, label %694, label %675

675:                                              ; preds = %670
  br i1 %674, label %695, label %676

676:                                              ; preds = %675
  %677 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 1), align 8
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %698

679:                                              ; preds = %676, %683
  %680 = phi i64 [ %681, %683 ], [ %25, %676 ]
  %681 = add nsw i64 %680, 1
  %682 = icmp slt i64 %681, %21
  br i1 %682, label %683, label %688

683:                                              ; preds = %679
  %684 = getelementptr inbounds i8*, i8** %1, i64 %681
  %685 = load i8*, i8** %684, align 8
  %686 = load i8, i8* %685, align 1
  %687 = icmp eq i8 %686, 45
  br i1 %687, label %688, label %679

688:                                              ; preds = %683, %679
  %689 = trunc i64 %681 to i32
  %690 = trunc i64 %680 to i32
  %691 = sub nsw i32 %689, %23
  store i32 %691, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 1), align 8
  store i8** %26, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 2), align 8
  %692 = icmp sgt i32 %691, 1
  %693 = select i1 %692, i32 %690, i32 %23
  br label %698

694:                                              ; preds = %670
  br i1 %674, label %695, label %702

695:                                              ; preds = %675, %694
  %696 = load %1*, %1** @stderr, align 8
  %697 = call i32 (%1*, i8*, ...) @fprintf(%1* %696, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1115, i64 0, i64 0), i8* nonnull %27) #20
  call void @exit(i32 1) #19
  unreachable

698:                                              ; preds = %688, %676, %669, %654, %648, %642, %636, %630, %624, %618, %612, %602, %591, %580, %569, %562, %560, %541, %525, %515, %505, %494, %483, %480, %469, %435, %425, %420, %416, %412, %403, %398, %388, %384, %380, %370, %365, %356, %345, %335, %330, %326, %322, %318, %309, %304, %299, %295, %291, %287, %283, %279, %273, %268, %243, %152, %130, %120, %111, %107, %97, %85, %75, %65, %54, %49, %31
  %699 = phi i32 [ %473, %483 ], [ %473, %480 ], [ %473, %469 ], [ %141, %273 ], [ %141, %268 ], [ %141, %243 ], [ %141, %152 ], [ %23, %560 ], [ %564, %562 ], [ %33, %31 ], [ %23, %49 ], [ %55, %54 ], [ %66, %65 ], [ %76, %75 ], [ %86, %85 ], [ %98, %97 ], [ %23, %107 ], [ %23, %111 ], [ %121, %120 ], [ %131, %130 ], [ %23, %279 ], [ %23, %283 ], [ %23, %287 ], [ %23, %291 ], [ %23, %295 ], [ %23, %299 ], [ %23, %304 ], [ %310, %309 ], [ %23, %318 ], [ %23, %322 ], [ %23, %326 ], [ %23, %330 ], [ %336, %335 ], [ %346, %345 ], [ %357, %356 ], [ %23, %365 ], [ %371, %370 ], [ %23, %380 ], [ %23, %384 ], [ %389, %388 ], [ %23, %398 ], [ %404, %403 ], [ %23, %412 ], [ %23, %416 ], [ %23, %420 ], [ %427, %425 ], [ %23, %435 ], [ %495, %494 ], [ %506, %505 ], [ %516, %515 ], [ %526, %525 ], [ %570, %569 ], [ %581, %580 ], [ %592, %591 ], [ %603, %602 ], [ %23, %612 ], [ %23, %618 ], [ %23, %624 ], [ %23, %630 ], [ %23, %636 ], [ %23, %642 ], [ %23, %648 ], [ %23, %654 ], [ %23, %669 ], [ %23, %676 ], [ %693, %688 ], [ %23, %541 ]
  %700 = add nsw i32 %699, 1
  %701 = icmp slt i32 %700, %0
  br i1 %701, label %22, label %702

702:                                              ; preds = %698, %694, %15
  %703 = phi i32 [ %23, %694 ], [ 1, %15 ], [ %700, %698 ]
  %704 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %705 = icmp ne i32 %704, 0
  %706 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44), align 8
  %707 = icmp eq i8* %706, null
  %708 = and i1 %705, %707
  br i1 %708, label %709, label %715

709:                                              ; preds = %702
  %710 = load %1*, %1** @stderr, align 8
  %711 = call i64 @fwrite(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @1116, i64 0, i64 0), i64 50, i64 1, %1* %710) #20
  %712 = load %1*, %1** @stderr, align 8
  %713 = load i8*, i8** %1, align 8
  %714 = call i32 (%1*, i8*, ...) @fprintf(%1* %712, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1117, i64 0, i64 0), i8* %713) #20
  call void @exit(i32 1) #19
  unreachable

715:                                              ; preds = %702
  %716 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 52), align 8
  %717 = icmp eq i32 %716, 0
  %718 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %719 = icmp ne i8* %718, null
  %720 = and i1 %717, %719
  br i1 %720, label %721, label %725

721:                                              ; preds = %715
  %722 = load %1*, %1** @stderr, align 8
  %723 = call i64 @fwrite(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @1118, i64 0, i64 0), i64 98, i64 1, %1* %722) #20
  %724 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  br label %725

725:                                              ; preds = %715, %721
  %726 = phi i8* [ %718, %715 ], [ %724, %721 ]
  %727 = sub nsw i32 %0, %703
  %728 = sext i32 %703 to i64
  %729 = getelementptr inbounds i8*, i8** %1, i64 %728
  %730 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1131, i64 0, i64 0)) #14
  %731 = icmp ne i8* %730, null
  %732 = icmp eq i8* %726, null
  %733 = and i1 %731, %732
  br i1 %733, label %734, label %735

734:                                              ; preds = %725
  store i8* %730, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  br label %735

735:                                              ; preds = %725, %734
  %736 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 39), align 8
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %740, label %738

738:                                              ; preds = %735
  call void @linenoiseMaskModeEnable() #14
  %739 = call i8* @linenoise(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1132, i64 0, i64 0)) #14
  call void @linenoiseMaskModeDisable() #14
  store i8* %739, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  br label %740

740:                                              ; preds = %735, %738
  %741 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 0), align 8
  %742 = icmp eq i8* %741, null
  br i1 %742, label %964, label %743

743:                                              ; preds = %740
  %744 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 1), align 8
  %745 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 0, i32 0), align 16
  %746 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 0, i32 1), align 8
  %747 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 0, i32 2), align 16
  %748 = call i32 @strcmp(i8* %745, i8* nonnull %741) #17
  %749 = icmp eq i32 %748, 0
  br i1 %749, label %750, label %762

750:                                              ; preds = %743
  %751 = icmp slt i32 %747, 1
  %752 = icmp eq i32 %744, %747
  %753 = or i1 %751, %752
  br i1 %753, label %754, label %759

754:                                              ; preds = %750
  %755 = icmp slt i32 %747, 0
  %756 = sub nsw i32 0, %747
  %757 = icmp slt i32 %744, %756
  %758 = and i1 %755, %757
  br i1 %758, label %759, label %762

759:                                              ; preds = %952, %948, %936, %932, %920, %916, %904, %900, %888, %884, %872, %868, %856, %852, %840, %836, %824, %820, %808, %804, %792, %788, %776, %772, %754, %750
  %760 = load %1*, %1** @stderr, align 8
  %761 = call i64 @fwrite(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @1133, i64 0, i64 0), i64 68, i64 1, %1* %760) #20
  br label %960

762:                                              ; preds = %754, %743
  %763 = phi i32 (i32, i8**)* [ %746, %754 ], [ null, %743 ]
  %764 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 1, i32 0), align 8
  %765 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 1, i32 1), align 8
  %766 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 1, i32 2), align 8
  %767 = call i32 @strcmp(i8* %764, i8* nonnull %741) #17
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %772, label %781

769:                                              ; preds = %957
  %770 = load %1*, %1** @stderr, align 8
  %771 = call i64 @fwrite(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1134, i64 0, i64 0), i64 29, i64 1, %1* %770) #20
  br label %960

772:                                              ; preds = %762
  %773 = icmp slt i32 %766, 1
  %774 = icmp eq i32 %744, %766
  %775 = or i1 %773, %774
  br i1 %775, label %776, label %759

776:                                              ; preds = %772
  %777 = icmp slt i32 %766, 0
  %778 = sub nsw i32 0, %766
  %779 = icmp slt i32 %744, %778
  %780 = and i1 %777, %779
  br i1 %780, label %759, label %781

781:                                              ; preds = %776, %762
  %782 = phi i32 (i32, i8**)* [ %765, %776 ], [ %763, %762 ]
  %783 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 2, i32 0), align 16
  %784 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 2, i32 1), align 8
  %785 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 2, i32 2), align 16
  %786 = call i32 @strcmp(i8* %783, i8* nonnull %741) #17
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %788, label %797

788:                                              ; preds = %781
  %789 = icmp slt i32 %785, 1
  %790 = icmp eq i32 %744, %785
  %791 = or i1 %789, %790
  br i1 %791, label %792, label %759

792:                                              ; preds = %788
  %793 = icmp slt i32 %785, 0
  %794 = sub nsw i32 0, %785
  %795 = icmp slt i32 %744, %794
  %796 = and i1 %793, %795
  br i1 %796, label %759, label %797

797:                                              ; preds = %792, %781
  %798 = phi i32 (i32, i8**)* [ %784, %792 ], [ %782, %781 ]
  %799 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 3, i32 0), align 8
  %800 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 3, i32 1), align 8
  %801 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 3, i32 2), align 8
  %802 = call i32 @strcmp(i8* %799, i8* nonnull %741) #17
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %813

804:                                              ; preds = %797
  %805 = icmp slt i32 %801, 1
  %806 = icmp eq i32 %744, %801
  %807 = or i1 %805, %806
  br i1 %807, label %808, label %759

808:                                              ; preds = %804
  %809 = icmp slt i32 %801, 0
  %810 = sub nsw i32 0, %801
  %811 = icmp slt i32 %744, %810
  %812 = and i1 %809, %811
  br i1 %812, label %759, label %813

813:                                              ; preds = %808, %797
  %814 = phi i32 (i32, i8**)* [ %800, %808 ], [ %798, %797 ]
  %815 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 4, i32 0), align 16
  %816 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 4, i32 1), align 8
  %817 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 4, i32 2), align 16
  %818 = call i32 @strcmp(i8* %815, i8* nonnull %741) #17
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %829

820:                                              ; preds = %813
  %821 = icmp slt i32 %817, 1
  %822 = icmp eq i32 %744, %817
  %823 = or i1 %821, %822
  br i1 %823, label %824, label %759

824:                                              ; preds = %820
  %825 = icmp slt i32 %817, 0
  %826 = sub nsw i32 0, %817
  %827 = icmp slt i32 %744, %826
  %828 = and i1 %825, %827
  br i1 %828, label %759, label %829

829:                                              ; preds = %824, %813
  %830 = phi i32 (i32, i8**)* [ %816, %824 ], [ %814, %813 ]
  %831 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 5, i32 0), align 8
  %832 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 5, i32 1), align 8
  %833 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 5, i32 2), align 8
  %834 = call i32 @strcmp(i8* %831, i8* nonnull %741) #17
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %845

836:                                              ; preds = %829
  %837 = icmp slt i32 %833, 1
  %838 = icmp eq i32 %744, %833
  %839 = or i1 %837, %838
  br i1 %839, label %840, label %759

840:                                              ; preds = %836
  %841 = icmp slt i32 %833, 0
  %842 = sub nsw i32 0, %833
  %843 = icmp slt i32 %744, %842
  %844 = and i1 %841, %843
  br i1 %844, label %759, label %845

845:                                              ; preds = %840, %829
  %846 = phi i32 (i32, i8**)* [ %832, %840 ], [ %830, %829 ]
  %847 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 6, i32 0), align 16
  %848 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 6, i32 1), align 8
  %849 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 6, i32 2), align 16
  %850 = call i32 @strcmp(i8* %847, i8* nonnull %741) #17
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %852, label %861

852:                                              ; preds = %845
  %853 = icmp slt i32 %849, 1
  %854 = icmp eq i32 %744, %849
  %855 = or i1 %853, %854
  br i1 %855, label %856, label %759

856:                                              ; preds = %852
  %857 = icmp slt i32 %849, 0
  %858 = sub nsw i32 0, %849
  %859 = icmp slt i32 %744, %858
  %860 = and i1 %857, %859
  br i1 %860, label %759, label %861

861:                                              ; preds = %856, %845
  %862 = phi i32 (i32, i8**)* [ %848, %856 ], [ %846, %845 ]
  %863 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 7, i32 0), align 8
  %864 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 7, i32 1), align 8
  %865 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 7, i32 2), align 8
  %866 = call i32 @strcmp(i8* %863, i8* nonnull %741) #17
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %868, label %877

868:                                              ; preds = %861
  %869 = icmp slt i32 %865, 1
  %870 = icmp eq i32 %744, %865
  %871 = or i1 %869, %870
  br i1 %871, label %872, label %759

872:                                              ; preds = %868
  %873 = icmp slt i32 %865, 0
  %874 = sub nsw i32 0, %865
  %875 = icmp slt i32 %744, %874
  %876 = and i1 %873, %875
  br i1 %876, label %759, label %877

877:                                              ; preds = %872, %861
  %878 = phi i32 (i32, i8**)* [ %864, %872 ], [ %862, %861 ]
  %879 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 8, i32 0), align 16
  %880 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 8, i32 1), align 8
  %881 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 8, i32 2), align 16
  %882 = call i32 @strcmp(i8* %879, i8* nonnull %741) #17
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %884, label %893

884:                                              ; preds = %877
  %885 = icmp slt i32 %881, 1
  %886 = icmp eq i32 %744, %881
  %887 = or i1 %885, %886
  br i1 %887, label %888, label %759

888:                                              ; preds = %884
  %889 = icmp slt i32 %881, 0
  %890 = sub nsw i32 0, %881
  %891 = icmp slt i32 %744, %890
  %892 = and i1 %889, %891
  br i1 %892, label %759, label %893

893:                                              ; preds = %888, %877
  %894 = phi i32 (i32, i8**)* [ %880, %888 ], [ %878, %877 ]
  %895 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 9, i32 0), align 8
  %896 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 9, i32 1), align 8
  %897 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 9, i32 2), align 8
  %898 = call i32 @strcmp(i8* %895, i8* nonnull %741) #17
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %909

900:                                              ; preds = %893
  %901 = icmp slt i32 %897, 1
  %902 = icmp eq i32 %744, %897
  %903 = or i1 %901, %902
  br i1 %903, label %904, label %759

904:                                              ; preds = %900
  %905 = icmp slt i32 %897, 0
  %906 = sub nsw i32 0, %897
  %907 = icmp slt i32 %744, %906
  %908 = and i1 %905, %907
  br i1 %908, label %759, label %909

909:                                              ; preds = %904, %893
  %910 = phi i32 (i32, i8**)* [ %896, %904 ], [ %894, %893 ]
  %911 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 10, i32 0), align 16
  %912 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 10, i32 1), align 8
  %913 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 10, i32 2), align 16
  %914 = call i32 @strcmp(i8* %911, i8* nonnull %741) #17
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %925

916:                                              ; preds = %909
  %917 = icmp slt i32 %913, 1
  %918 = icmp eq i32 %744, %913
  %919 = or i1 %917, %918
  br i1 %919, label %920, label %759

920:                                              ; preds = %916
  %921 = icmp slt i32 %913, 0
  %922 = sub nsw i32 0, %913
  %923 = icmp slt i32 %744, %922
  %924 = and i1 %921, %923
  br i1 %924, label %759, label %925

925:                                              ; preds = %920, %909
  %926 = phi i32 (i32, i8**)* [ %912, %920 ], [ %910, %909 ]
  %927 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 11, i32 0), align 8
  %928 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 11, i32 1), align 8
  %929 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 11, i32 2), align 8
  %930 = call i32 @strcmp(i8* %927, i8* nonnull %741) #17
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %941

932:                                              ; preds = %925
  %933 = icmp slt i32 %929, 1
  %934 = icmp eq i32 %744, %929
  %935 = or i1 %933, %934
  br i1 %935, label %936, label %759

936:                                              ; preds = %932
  %937 = icmp slt i32 %929, 0
  %938 = sub nsw i32 0, %929
  %939 = icmp slt i32 %744, %938
  %940 = and i1 %937, %939
  br i1 %940, label %759, label %941

941:                                              ; preds = %936, %925
  %942 = phi i32 (i32, i8**)* [ %928, %936 ], [ %926, %925 ]
  %943 = load i8*, i8** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 12, i32 0), align 16
  %944 = load i32 (i32, i8**)*, i32 (i32, i8**)** getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 12, i32 1), align 8
  %945 = load i32, i32* getelementptr inbounds ([13 x %8], [13 x %8]* @clusterManagerCommands, i64 0, i64 12, i32 2), align 16
  %946 = call i32 @strcmp(i8* %943, i8* nonnull %741) #17
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %948, label %957

948:                                              ; preds = %941
  %949 = icmp slt i32 %945, 1
  %950 = icmp eq i32 %744, %945
  %951 = or i1 %949, %950
  br i1 %951, label %952, label %759

952:                                              ; preds = %948
  %953 = icmp slt i32 %945, 0
  %954 = sub nsw i32 0, %945
  %955 = icmp slt i32 %744, %954
  %956 = and i1 %953, %955
  br i1 %956, label %759, label %957

957:                                              ; preds = %952, %941
  %958 = phi i32 (i32, i8**)* [ %944, %952 ], [ %942, %941 ]
  %959 = icmp eq i32 (i32, i8**)* %958, null
  br i1 %959, label %769, label %963

960:                                              ; preds = %759, %769
  %961 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  call void @sdsfree(i8* %961) #14
  %962 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  call void @sdsfree(i8* %962) #14
  call void @exit(i32 1) #19
  unreachable

963:                                              ; preds = %957
  call fastcc void @1344(i32 (i32, i8**)* nonnull %958)
  unreachable

964:                                              ; preds = %740
  %965 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 16), align 4
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %972, label %967

967:                                              ; preds = %964
  %968 = call fastcc i32 @1345(i32 0)
  %969 = icmp eq i32 %968, -1
  br i1 %969, label %970, label %971

970:                                              ; preds = %967
  call void @exit(i32 1) #19
  unreachable

971:                                              ; preds = %967
  call fastcc void @1346()
  unreachable

972:                                              ; preds = %964
  %973 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 17), align 8
  %974 = icmp eq i32 %973, 0
  br i1 %974, label %980, label %975

975:                                              ; preds = %972
  %976 = call fastcc i32 @1345(i32 0)
  %977 = icmp eq i32 %976, -1
  br i1 %977, label %978, label %979

978:                                              ; preds = %975
  call void @exit(i32 1) #19
  unreachable

979:                                              ; preds = %975
  call fastcc void @1347()
  unreachable

980:                                              ; preds = %972
  %981 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %988, label %983

983:                                              ; preds = %980
  %984 = call fastcc i32 @1345(i32 0)
  %985 = icmp eq i32 %984, -1
  br i1 %985, label %986, label %987

986:                                              ; preds = %983
  call void @exit(i32 1) #19
  unreachable

987:                                              ; preds = %983
  call void @sendReplconf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @731, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @732, i64 0, i64 0)) #14
  call fastcc void @1348()
  br label %988

988:                                              ; preds = %980, %987
  %989 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 26), align 4
  %990 = icmp eq i32 %989, 0
  br i1 %990, label %996, label %991

991:                                              ; preds = %988
  %992 = call fastcc i32 @1345(i32 0)
  %993 = icmp eq i32 %992, -1
  br i1 %993, label %994, label %995

994:                                              ; preds = %991
  call void @exit(i32 1) #19
  unreachable

995:                                              ; preds = %991
  call void @sendReplconf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @731, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @732, i64 0, i64 0)) #14
  call fastcc void @1349(%27* null)
  br label %996

996:                                              ; preds = %988, %995
  %997 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 24), align 4
  %998 = icmp eq i32 %997, 0
  br i1 %998, label %1004, label %999

999:                                              ; preds = %996
  %1000 = call fastcc i32 @1345(i32 0)
  %1001 = icmp eq i32 %1000, -1
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %999
  call void @exit(i32 1) #19
  unreachable

1003:                                             ; preds = %999
  call fastcc void @1350()
  unreachable

1004:                                             ; preds = %996
  %1005 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 33), align 8
  %1006 = icmp eq i32 %1005, 0
  br i1 %1006, label %1012, label %1007

1007:                                             ; preds = %1004
  %1008 = call fastcc i32 @1345(i32 0)
  %1009 = icmp eq i32 %1008, -1
  br i1 %1009, label %1010, label %1011

1010:                                             ; preds = %1007
  call void @exit(i32 1) #19
  unreachable

1011:                                             ; preds = %1007
  call fastcc void @1351(i32 0, i32 0)
  unreachable

1012:                                             ; preds = %1004
  %1013 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 34), align 4
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1021, label %1015

1015:                                             ; preds = %1012
  %1016 = call fastcc i32 @1345(i32 0)
  %1017 = icmp eq i32 %1016, -1
  br i1 %1017, label %1018, label %1019

1018:                                             ; preds = %1015
  call void @exit(i32 1) #19
  unreachable

1019:                                             ; preds = %1015
  %1020 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 35), align 8
  call fastcc void @1351(i32 1, i32 %1020)
  unreachable

1021:                                             ; preds = %1012
  %1022 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 36), align 4
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1029, label %1024

1024:                                             ; preds = %1021
  %1025 = call fastcc i32 @1345(i32 0)
  %1026 = icmp eq i32 %1025, -1
  br i1 %1026, label %1027, label %1028

1027:                                             ; preds = %1024
  call void @exit(i32 1) #19
  unreachable

1028:                                             ; preds = %1024
  call fastcc void @1352()
  unreachable

1029:                                             ; preds = %1021
  %1030 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 27), align 8
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1041, label %1032

1032:                                             ; preds = %1029
  %1033 = call fastcc i32 @1345(i32 0)
  %1034 = icmp eq i32 %1033, -1
  br i1 %1034, label %1035, label %1036

1035:                                             ; preds = %1032
  call void @exit(i32 1) #19
  unreachable

1036:                                             ; preds = %1032
  %1037 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %1038 = icmp eq i64 %1037, 0
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1036
  store i64 1000000, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  br label %1040

1040:                                             ; preds = %1039, %1036
  call fastcc void @1353()
  unreachable

1041:                                             ; preds = %1029
  %1042 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 28), align 4
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1049, label %1044

1044:                                             ; preds = %1041
  %1045 = call fastcc i32 @1345(i32 0)
  %1046 = icmp eq i32 %1045, -1
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1044
  call void @exit(i32 1) #19
  unreachable

1048:                                             ; preds = %1044
  call fastcc void @1354()
  unreachable

1049:                                             ; preds = %1041
  %1050 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 19), align 8
  %1051 = icmp eq i32 %1050, 0
  br i1 %1051, label %1057, label %1052

1052:                                             ; preds = %1049
  %1053 = call fastcc i32 @1345(i32 0)
  %1054 = icmp eq i32 %1053, -1
  br i1 %1054, label %1055, label %1056

1055:                                             ; preds = %1052
  call void @exit(i32 1) #19
  unreachable

1056:                                             ; preds = %1052
  call fastcc void @1355()
  unreachable

1057:                                             ; preds = %1049
  %1058 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 29), align 8
  %1059 = icmp eq i32 %1058, 0
  br i1 %1059, label %1061, label %1060

1060:                                             ; preds = %1057
  call fastcc void @1356()
  unreachable

1061:                                             ; preds = %1057
  %1062 = icmp ne i32 %727, 0
  %1063 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44), align 8
  %1064 = icmp ne i8* %1063, null
  %1065 = or i1 %1062, %1064
  br i1 %1065, label %1069, label %1066

1066:                                             ; preds = %1061
  %1067 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #14
  %1068 = call fastcc i32 @1345(i32 0)
  call fastcc void @1357()
  br label %1069

1069:                                             ; preds = %1061, %1066
  %1070 = call fastcc i32 @1345(i32 0)
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1073, label %1072

1072:                                             ; preds = %1069
  call void @exit(i32 1) #19
  unreachable

1073:                                             ; preds = %1069
  %1074 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44), align 8
  %1075 = icmp eq i8* %1074, null
  br i1 %1075, label %1204, label %1076

1076:                                             ; preds = %1073
  %1077 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1077) #14
  %1078 = add nsw i32 %727, 3
  %1079 = sext i32 %1078 to i64
  %1080 = shl nsw i64 %1079, 3
  %1081 = icmp sgt i32 %727, 0
  %1082 = zext i32 %727 to i64
  br label %1083

1083:                                             ; preds = %1199, %1076
  %1084 = phi i8* [ null, %1076 ], [ %1111, %1199 ]
  %1085 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %1086 = icmp eq i32 %1085, 0
  br i1 %1086, label %1089, label %1087

1087:                                             ; preds = %1083
  %1088 = call i32 @puts(i8* getelementptr inbounds ([170 x i8], [170 x i8]* @str.31, i64 0, i64 0)) #14
  br label %1089

1089:                                             ; preds = %1087, %1083
  call void @sdsfree(i8* %1084) #14
  %1090 = call i8* @sdsempty() #14
  %1091 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44), align 8
  %1092 = call %1* @fopen64(i8* %1091, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @694, i64 0, i64 0)) #14
  %1093 = icmp eq %1* %1092, null
  br i1 %1093, label %1097, label %1094

1094:                                             ; preds = %1089
  %1095 = call i64 @fread(i8* nonnull %1077, i64 1, i64 1024, %1* nonnull %1092) #14
  %1096 = icmp eq i64 %1095, 0
  br i1 %1096, label %1110, label %1104

1097:                                             ; preds = %1089
  %1098 = load %1*, %1** @stderr, align 8
  %1099 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44), align 8
  %1100 = tail call i32* @__errno_location() #18
  %1101 = load i32, i32* %1100, align 4
  %1102 = call i8* @strerror(i32 %1101) #14
  %1103 = call i32 (%1*, i8*, ...) @fprintf(%1* %1098, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @1326, i64 0, i64 0), i8* %1099, i8* %1102) #20
  call void @exit(i32 1) #19
  unreachable

1104:                                             ; preds = %1094, %1104
  %1105 = phi i64 [ %1108, %1104 ], [ %1095, %1094 ]
  %1106 = phi i8* [ %1107, %1104 ], [ %1090, %1094 ]
  %1107 = call i8* @sdscatlen(i8* %1106, i8* nonnull %1077, i64 %1105) #14
  %1108 = call i64 @fread(i8* nonnull %1077, i64 1, i64 1024, %1* nonnull %1092) #14
  %1109 = icmp eq i64 %1108, 0
  br i1 %1109, label %1110, label %1104

1110:                                             ; preds = %1104, %1094
  %1111 = phi i8* [ %1090, %1094 ], [ %1107, %1104 ]
  %1112 = call i32 @fclose(%1* nonnull %1092) #14
  %1113 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %1114 = icmp eq i32 %1113, 0
  br i1 %1114, label %1123, label %1115

1115:                                             ; preds = %1110
  %1116 = load %9*, %9** @727, align 8
  %1117 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 46), align 4
  %1118 = icmp eq i32 %1117, 0
  %1119 = select i1 %1118, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @1328, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1327, i64 0, i64 0)
  %1120 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1116, i8* %1119) #14
  %1121 = icmp eq i8* %1120, null
  br i1 %1121, label %1123, label %1122

1122:                                             ; preds = %1115
  call void @freeReplyObject(i8* nonnull %1120) #14
  br label %1123

1123:                                             ; preds = %1122, %1115, %1110
  %1124 = call i8* @zmalloc(i64 %1080) #14
  %1125 = bitcast i8* %1124 to i8**
  %1126 = call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @199, i64 0, i64 0)) #14
  store i8* %1126, i8** %1125, align 8
  %1127 = getelementptr inbounds i8, i8* %1124, i64 8
  %1128 = bitcast i8* %1127 to i8**
  store i8* %1111, i8** %1128, align 8
  br i1 %1081, label %1129, label %1158

1129:                                             ; preds = %1123, %1153
  %1130 = phi i64 [ %1156, %1153 ], [ 0, %1123 ]
  %1131 = phi i32 [ %1155, %1153 ], [ 0, %1123 ]
  %1132 = phi i32 [ %1154, %1153 ], [ 0, %1123 ]
  %1133 = icmp ne i32 %1132, 0
  %1134 = getelementptr inbounds i8*, i8** %729, i64 %1130
  %1135 = load i8*, i8** %1134, align 8
  br i1 %1133, label %1143, label %1136

1136:                                             ; preds = %1129
  %1137 = load i8, i8* %1135, align 1
  %1138 = icmp eq i8 %1137, 44
  br i1 %1138, label %1139, label %1143

1139:                                             ; preds = %1136
  %1140 = getelementptr inbounds i8, i8* %1135, i64 1
  %1141 = load i8, i8* %1140, align 1
  %1142 = icmp eq i8 %1141, 0
  br i1 %1142, label %1153, label %1143

1143:                                             ; preds = %1139, %1136, %1129
  %1144 = call i8* @sdsnew(i8* %1135) #14
  %1145 = trunc i64 %1130 to i32
  %1146 = add i32 %1145, 3
  %1147 = sub i32 %1146, %1132
  %1148 = sext i32 %1147 to i64
  %1149 = getelementptr inbounds i8*, i8** %1125, i64 %1148
  store i8* %1144, i8** %1149, align 8
  %1150 = xor i1 %1133, true
  %1151 = zext i1 %1150 to i32
  %1152 = add nsw i32 %1131, %1151
  br label %1153

1153:                                             ; preds = %1143, %1139
  %1154 = phi i32 [ 1, %1139 ], [ %1132, %1143 ]
  %1155 = phi i32 [ %1131, %1139 ], [ %1152, %1143 ]
  %1156 = add nuw nsw i64 %1130, 1
  %1157 = icmp eq i64 %1156, %1082
  br i1 %1157, label %1158, label %1129

1158:                                             ; preds = %1153, %1123
  %1159 = phi i32 [ 0, %1123 ], [ %1154, %1153 ]
  %1160 = phi i32 [ 0, %1123 ], [ %1155, %1153 ]
  %1161 = call i8* @sdsempty() #14
  %1162 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %1161, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @913, i64 0, i64 0), i32 %1160) #14
  %1163 = getelementptr inbounds i8, i8* %1124, i64 16
  %1164 = bitcast i8* %1163 to i8**
  store i8* %1162, i8** %1164, align 8
  %1165 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %1166 = sub nsw i32 %1078, %1159
  %1167 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 9), align 8
  br label %1168

1168:                                             ; preds = %1188, %1158
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %1169 = call fastcc i32 @1403(i32 %1166, i8** %1125, i64 %1167) #14
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1182, label %1171

1171:                                             ; preds = %1168
  %1172 = call fastcc i32 @1345(i32 1) #14
  %1173 = call fastcc i32 @1403(i32 %1166, i8** %1125, i64 %1167) #14
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1182, label %1175

1175:                                             ; preds = %1171
  %1176 = load %9*, %9** @727, align 8
  %1177 = icmp eq %9* %1176, null
  br i1 %1177, label %1190, label %1178

1178:                                             ; preds = %1175
  %1179 = load %1*, %1** @stderr, align 8
  %1180 = getelementptr inbounds %9, %9* %1176, i64 0, i32 2, i64 0
  %1181 = call i32 (%1*, i8*, ...) @fprintf(%1* %1179, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* nonnull %1180) #20
  br label %1190

1182:                                             ; preds = %1171, %1168
  %1183 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  %1184 = icmp ne i32 %1183, 0
  %1185 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %1186 = icmp ne i32 %1185, 0
  %1187 = and i1 %1184, %1186
  br i1 %1187, label %1188, label %1190

1188:                                             ; preds = %1182
  %1189 = call fastcc i32 @1345(i32 1) #14
  br label %1168

1190:                                             ; preds = %1182, %1178, %1175
  %1191 = phi i32 [ -1, %1175 ], [ -1, %1178 ], [ 0, %1182 ]
  %1192 = icmp eq i32 %1165, 0
  br i1 %1192, label %1203, label %1193

1193:                                             ; preds = %1190
  %1194 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %1195 = icmp eq i32 %1194, 0
  br i1 %1195, label %1196, label %1199

1196:                                             ; preds = %1193
  %1197 = call i32 @puts(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.30, i64 0, i64 0)) #14
  %1198 = call fastcc i32 @1394(i32 0) #14
  br label %1203

1199:                                             ; preds = %1193
  %1200 = call i8* @strncpy(i8* getelementptr inbounds (%20, %20* @756, i64 0, i32 43, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1329, i64 0, i64 0), i64 128) #14
  call fastcc void @1357() #14
  %1201 = call fastcc i32 @1345(i32 1) #14
  %1202 = call i32 @putchar(i32 10) #14
  br label %1083

1203:                                             ; preds = %1190, %1196
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1077) #14
  br label %1291

1204:                                             ; preds = %1073
  %1205 = sext i32 %727 to i64
  %1206 = shl nsw i64 %1205, 3
  %1207 = call i8* @zmalloc(i64 %1206) #14
  %1208 = bitcast i8* %1207 to i8**
  %1209 = icmp sgt i32 %727, 0
  br i1 %1209, label %1210, label %1220

1210:                                             ; preds = %1204
  %1211 = zext i32 %727 to i64
  br label %1212

1212:                                             ; preds = %1212, %1210
  %1213 = phi i64 [ 0, %1210 ], [ %1218, %1212 ]
  %1214 = getelementptr inbounds i8*, i8** %729, i64 %1213
  %1215 = load i8*, i8** %1214, align 8
  %1216 = call i8* @sdsnew(i8* %1215) #14
  %1217 = getelementptr inbounds i8*, i8** %1208, i64 %1213
  store i8* %1216, i8** %1217, align 8
  %1218 = add nuw nsw i64 %1213, 1
  %1219 = icmp eq i64 %1218, %1211
  br i1 %1219, label %1220, label %1212

1220:                                             ; preds = %1212, %1204
  %1221 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 37), align 8
  %1222 = icmp eq i32 %1221, 0
  br i1 %1222, label %1267, label %1223

1223:                                             ; preds = %1220
  %1224 = add nsw i32 %727, 1
  %1225 = sext i32 %1224 to i64
  %1226 = shl nsw i64 %1225, 3
  %1227 = call i8* @zrealloc(i8* %1207, i64 %1226) #14
  %1228 = bitcast i8* %1227 to i8**
  %1229 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1229) #14
  %1230 = call i8* @sdsempty() #14
  br label %1231

1231:                                             ; preds = %1238, %1223
  %1232 = phi i8* [ %1230, %1223 ], [ %1241, %1238 ]
  %1233 = load %1*, %1** @stdin, align 8
  %1234 = call i32 @fileno(%1* %1233) #14
  %1235 = call i64 @read(i32 %1234, i8* nonnull %1229, i64 1024) #14
  %1236 = trunc i64 %1235 to i32
  switch i32 %1236, label %1238 [
    i32 0, label %1242
    i32 -1, label %1237
  ]

1237:                                             ; preds = %1231
  call void @perror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1330, i64 0, i64 0)) #20
  call void @exit(i32 1) #19
  unreachable

1238:                                             ; preds = %1231
  %1239 = shl i64 %1235, 32
  %1240 = ashr exact i64 %1239, 32
  %1241 = call i8* @sdscatlen(i8* %1232, i8* nonnull %1229, i64 %1240) #14
  br label %1231

1242:                                             ; preds = %1231
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1229) #14
  %1243 = getelementptr inbounds i8*, i8** %1228, i64 %1205
  store i8* %1232, i8** %1243, align 8
  %1244 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 9), align 8
  br label %1245

1245:                                             ; preds = %1265, %1242
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %1246 = call fastcc i32 @1403(i32 %1224, i8** %1228, i64 %1244) #14
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1259, label %1248

1248:                                             ; preds = %1245
  %1249 = call fastcc i32 @1345(i32 1) #14
  %1250 = call fastcc i32 @1403(i32 %1224, i8** %1228, i64 %1244) #14
  %1251 = icmp eq i32 %1250, 0
  br i1 %1251, label %1259, label %1252

1252:                                             ; preds = %1248
  %1253 = load %9*, %9** @727, align 8
  %1254 = icmp eq %9* %1253, null
  br i1 %1254, label %1291, label %1255

1255:                                             ; preds = %1252
  %1256 = load %1*, %1** @stderr, align 8
  %1257 = getelementptr inbounds %9, %9* %1253, i64 0, i32 2, i64 0
  %1258 = call i32 (%1*, i8*, ...) @fprintf(%1* %1256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* nonnull %1257) #20
  br label %1291

1259:                                             ; preds = %1248, %1245
  %1260 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  %1261 = icmp ne i32 %1260, 0
  %1262 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %1263 = icmp ne i32 %1262, 0
  %1264 = and i1 %1261, %1263
  br i1 %1264, label %1265, label %1291

1265:                                             ; preds = %1259
  %1266 = call fastcc i32 @1345(i32 1) #14
  br label %1245

1267:                                             ; preds = %1220
  %1268 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 9), align 8
  br label %1269

1269:                                             ; preds = %1289, %1267
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %1270 = call fastcc i32 @1403(i32 %727, i8** %1208, i64 %1268) #14
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1283, label %1272

1272:                                             ; preds = %1269
  %1273 = call fastcc i32 @1345(i32 1) #14
  %1274 = call fastcc i32 @1403(i32 %727, i8** %1208, i64 %1268) #14
  %1275 = icmp eq i32 %1274, 0
  br i1 %1275, label %1283, label %1276

1276:                                             ; preds = %1272
  %1277 = load %9*, %9** @727, align 8
  %1278 = icmp eq %9* %1277, null
  br i1 %1278, label %1291, label %1279

1279:                                             ; preds = %1276
  %1280 = load %1*, %1** @stderr, align 8
  %1281 = getelementptr inbounds %9, %9* %1277, i64 0, i32 2, i64 0
  %1282 = call i32 (%1*, i8*, ...) @fprintf(%1* %1280, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* nonnull %1281) #20
  br label %1291

1283:                                             ; preds = %1272, %1269
  %1284 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  %1285 = icmp ne i32 %1284, 0
  %1286 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %1287 = icmp ne i32 %1286, 0
  %1288 = and i1 %1285, %1287
  br i1 %1288, label %1289, label %1291

1289:                                             ; preds = %1283
  %1290 = call fastcc i32 @1345(i32 1) #14
  br label %1269

1291:                                             ; preds = %1259, %1283, %1279, %1276, %1255, %1252, %1203
  %1292 = phi i32 [ %1191, %1203 ], [ -1, %1252 ], [ -1, %1255 ], [ -1, %1276 ], [ -1, %1279 ], [ 0, %1283 ], [ 0, %1259 ]
  ret i32 %1292
}

declare dso_local i8* @sdsnew(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local i32 @fileno(%1* nocapture) local_unnamed_addr #1

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1344(i32 (i32, i8**)* nocapture %0) unnamed_addr #12 {
  %2 = alloca %26, align 8
  %3 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 1), align 8
  %4 = load i8**, i8*** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 2), align 8
  store %24* null, %24** @.0.1, align 8
  %5 = tail call i32 %0(i32 %3, i8** %4) #14
  %6 = icmp eq i32 %5, 0
  %7 = bitcast %26* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = load %24*, %24** @.0.1, align 8
  %9 = icmp eq %24* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  call void @listRewind(%24* nonnull %8, %26* nonnull %2) #14
  %11 = call %25* @listNext(%26* nonnull %2) #14
  %12 = icmp eq %25* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10, %13
  %14 = phi %25* [ %18, %13 ], [ %11, %10 ]
  %15 = getelementptr inbounds %25, %25* %14, i64 0, i32 2
  %16 = bitcast i8** %15 to %27**
  %17 = load %27*, %27** %16, align 8
  call fastcc void @1359(%27* %17) #14
  %18 = call %25* @listNext(%26* nonnull %2) #14
  %19 = icmp eq %25* %18, null
  br i1 %19, label %20, label %13

20:                                               ; preds = %13, %10
  %21 = load %24*, %24** @.0.1, align 8
  call void @listRelease(%24* %21) #14
  store %24* null, %24** @.0.1, align 8
  br label %22

22:                                               ; preds = %20, %1
  %23 = load %24*, %24** @.1, align 8
  %24 = icmp eq %24* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %22
  call void @listRewind(%24* nonnull %23, %26* nonnull %2) #14
  %26 = call %25* @listNext(%26* nonnull %2) #14
  %27 = icmp eq %25* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %28
  %29 = phi %25* [ %32, %28 ], [ %26, %25 ]
  %30 = getelementptr inbounds %25, %25* %29, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  call void @sdsfree(i8* %31) #14
  %32 = call %25* @listNext(%26* nonnull %2) #14
  %33 = icmp eq %25* %32, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %25
  %35 = load %24*, %24** @.1, align 8
  call void @listRelease(%24* %35) #14
  store %24* null, %24** @.1, align 8
  br label %36

36:                                               ; preds = %34, %22
  %37 = load %3*, %3** @clusterManagerUncoveredSlots, align 8
  %38 = icmp eq %3* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  call void @dictRelease(%3* nonnull %37) #14
  br label %40

40:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br i1 %6, label %42, label %41

41:                                               ; preds = %40
  call void @exit(i32 0) #19
  unreachable

42:                                               ; preds = %40
  %43 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  call void @sdsfree(i8* %43) #14
  %44 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  call void @sdsfree(i8* %44) #14
  call void @exit(i32 1) #19
  unreachable
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1345(i32 %0) unnamed_addr #0 {
  %2 = load %9*, %9** @727, align 8
  %3 = icmp ne %9* %2, null
  %4 = and i32 %0, 1
  %5 = icmp eq i32 %4, 0
  %6 = and i1 %5, %3
  br i1 %6, label %92, label %7

7:                                                ; preds = %1
  %8 = icmp eq %9* %2, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %7
  tail call void @redisFree(%9* nonnull %2) #14
  br label %10

10:                                               ; preds = %7, %9
  %11 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 2), align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %15 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  %16 = tail call %9* @redisConnect(i8* %14, i32 %15) #14
  br label %19

17:                                               ; preds = %10
  %18 = tail call %9* @redisConnectUnix(i8* nonnull %11) #14
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi %9* [ %18, %17 ], [ %16, %13 ]
  store %9* %20, %9** @727, align 8
  %21 = getelementptr inbounds %9, %9* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %19
  %25 = and i32 %0, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %24
  %28 = load %1*, %1** @stderr, align 8
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @777, i64 0, i64 0), i64 30, i64 1, %1* %28) #16
  %30 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 2), align 8
  %31 = icmp eq i8* %30, null
  %32 = load %1*, %1** @stderr, align 8
  br i1 %31, label %33, label %39

33:                                               ; preds = %27
  %34 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %35 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  %36 = load %9*, %9** @727, align 8
  %37 = getelementptr inbounds %9, %9* %36, i64 0, i32 2, i64 0
  %38 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @778, i64 0, i64 0), i8* %34, i32 %35, i8* nonnull %37) #16
  br label %43

39:                                               ; preds = %27
  %40 = load %9*, %9** @727, align 8
  %41 = getelementptr inbounds %9, %9* %40, i64 0, i32 2, i64 0
  %42 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1135, i64 0, i64 0), i8* nonnull %30, i8* nonnull %41) #16
  br label %43

43:                                               ; preds = %24, %33, %39
  %44 = load %9*, %9** @727, align 8
  tail call void @redisFree(%9* %44) #14
  store %9* null, %9** @727, align 8
  br label %93

45:                                               ; preds = %19
  %46 = getelementptr inbounds %9, %9* %20, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = tail call i32 @anetKeepAlive(i8* null, i32 %47, i32 15) #14
  %49 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %70, label %51

51:                                               ; preds = %45
  %52 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40), align 8
  %53 = icmp eq i8* %52, null
  %54 = load %9*, %9** @727, align 8
  br i1 %53, label %55, label %57

55:                                               ; preds = %51
  %56 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @779, i64 0, i64 0), i8* nonnull %49) #14
  br label %59

57:                                               ; preds = %51
  %58 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @780, i64 0, i64 0), i8* nonnull %52, i8* nonnull %49) #14
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi i8* [ %56, %55 ], [ %58, %57 ]
  %61 = icmp eq i8* %60, null
  br i1 %61, label %93, label %62

62:                                               ; preds = %59
  %63 = bitcast i8* %60 to i32*
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 6
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  %67 = load %1*, %1** @stderr, align 8
  %68 = tail call i64 @fwrite(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @1136, i64 0, i64 0), i64 21, i64 1, %1* %67) #20
  br label %69

69:                                               ; preds = %66, %62
  tail call void @freeReplyObject(i8* nonnull %60) #14
  br label %70

70:                                               ; preds = %69, %45
  %71 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %70
  %74 = load %9*, %9** @727, align 8
  %75 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %74, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1137, i64 0, i64 0), i32 %71) #14
  %76 = icmp eq i8* %75, null
  br i1 %76, label %93, label %77

77:                                               ; preds = %73
  %78 = bitcast i8* %75 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 6
  tail call void @freeReplyObject(i8* nonnull %75) #14
  br i1 %80, label %93, label %81

81:                                               ; preds = %77, %70
  %82 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 53), align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %81
  %85 = load %9*, %9** @727, align 8
  %86 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %85, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1138, i64 0, i64 0)) #14
  %87 = icmp eq i8* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = bitcast i8* %86 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 6
  tail call void @freeReplyObject(i8* nonnull %86) #14
  br i1 %91, label %93, label %92

92:                                               ; preds = %88, %81, %1
  br label %93

93:                                               ; preds = %88, %77, %84, %73, %59, %92, %43
  %94 = phi i32 [ -1, %43 ], [ 0, %92 ], [ -1, %77 ], [ -1, %88 ], [ -1, %59 ], [ -1, %73 ], [ -1, %84 ]
  ret i32 %94
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1346() unnamed_addr #12 {
  %1 = alloca %15, align 8
  %2 = alloca %15, align 8
  %3 = alloca %15, align 8
  %4 = alloca %15, align 8
  %5 = alloca %15, align 8
  %6 = alloca %15, align 8
  %7 = alloca %15, align 8
  %8 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %9 = icmp eq i64 %8, 0
  %10 = sdiv i64 %8, 1000
  %11 = select i1 %9, i64 15000, i64 %10
  %12 = bitcast %15* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = call i32 @gettimeofday(%15* nonnull %7, %31* null) #14
  %14 = getelementptr inbounds %15, %15* %7, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = mul nsw i64 %15, 1000000
  %17 = getelementptr inbounds %15, %15* %7, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %16, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  %20 = sdiv i64 %19, 1000
  %21 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %22 = icmp eq i64 %21, 0
  %23 = sdiv i64 %21, 1000
  %24 = select i1 %22, i64 1000, i64 %23
  store i64 %24, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %25 = load %9*, %9** @727, align 8
  %26 = icmp eq %9* %25, null
  br i1 %26, label %53, label %27

27:                                               ; preds = %0
  %28 = bitcast %15* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %29 = call i32 @gettimeofday(%15* nonnull %6, %31* null) #14
  %30 = getelementptr inbounds %15, %15* %6, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %15, %15* %6, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  %34 = load %9*, %9** @727, align 8
  %35 = tail call %30* (%9*, i8*, ...) @1388(%9* %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i64 0, i64 0))
  %36 = icmp eq %30* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %27
  %38 = bitcast %15* %5 to i8*
  %39 = getelementptr inbounds %15, %15* %5, i64 0, i32 0
  %40 = getelementptr inbounds %15, %15* %5, i64 0, i32 1
  %41 = bitcast %15* %3 to i8*
  %42 = getelementptr inbounds %15, %15* %3, i64 0, i32 0
  %43 = getelementptr inbounds %15, %15* %3, i64 0, i32 1
  %44 = bitcast %15* %2 to i8*
  %45 = getelementptr inbounds %15, %15* %2, i64 0, i32 0
  %46 = getelementptr inbounds %15, %15* %2, i64 0, i32 1
  %47 = bitcast %15* %1 to i8*
  %48 = getelementptr inbounds %15, %15* %1, i64 0, i32 0
  %49 = getelementptr inbounds %15, %15* %1, i64 0, i32 1
  %50 = bitcast %15* %4 to i8*
  %51 = getelementptr inbounds %15, %15* %4, i64 0, i32 0
  %52 = getelementptr inbounds %15, %15* %4, i64 0, i32 1
  br label %57

53:                                               ; preds = %0
  tail call void @exit(i32 1) #19
  unreachable

54:                                               ; preds = %157, %27
  %55 = load %1*, %1** @stderr, align 8
  %56 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @729, i64 0, i64 0), i64 11, i64 1, %1* %55) #16
  tail call void @exit(i32 1) #19
  unreachable

57:                                               ; preds = %37, %157
  %58 = phi %30* [ %35, %37 ], [ %168, %157 ]
  %59 = phi i64 [ %33, %37 ], [ %166, %157 ]
  %60 = phi i64 [ %31, %37 ], [ %165, %157 ]
  %61 = phi i64 [ %20, %37 ], [ %162, %157 ]
  %62 = phi i64 [ 0, %37 ], [ %161, %157 ]
  %63 = phi i64 [ 0, %37 ], [ %160, %157 ]
  %64 = phi i64 [ 0, %37 ], [ %159, %157 ]
  %65 = phi i64 [ 0, %37 ], [ %158, %157 ]
  %66 = mul nsw i64 %60, 1000000
  %67 = add nsw i64 %66, %59
  %68 = sdiv i64 %67, 1000
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %69 = call i32 @gettimeofday(%15* nonnull %5, %31* null) #14
  %70 = load i64, i64* %39, align 8
  %71 = mul nsw i64 %70, 1000000
  %72 = load i64, i64* %40, align 8
  %73 = add nsw i64 %71, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  %74 = sdiv i64 %73, 1000
  %75 = sub nsw i64 %74, %68
  %76 = bitcast %30* %58 to i8*
  tail call void @freeReplyObject(i8* %76) #14
  %77 = add nsw i64 %63, 1
  %78 = icmp eq i64 %63, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %57
  %80 = sitofp i64 %75 to double
  br label %90

81:                                               ; preds = %57
  %82 = icmp slt i64 %75, %62
  %83 = select i1 %82, i64 %75, i64 %62
  %84 = icmp sgt i64 %75, %65
  %85 = select i1 %84, i64 %75, i64 %65
  %86 = add nsw i64 %75, %64
  %87 = sitofp i64 %86 to double
  %88 = sitofp i64 %77 to double
  %89 = fdiv double %87, %88
  br label %90

90:                                               ; preds = %81, %79
  %91 = phi i64 [ %75, %79 ], [ %85, %81 ]
  %92 = phi i64 [ %75, %79 ], [ %86, %81 ]
  %93 = phi i64 [ %75, %79 ], [ %83, %81 ]
  %94 = phi double [ %80, %79 ], [ %89, %81 ]
  %95 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %108

97:                                               ; preds = %90
  %98 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1139, i64 0, i64 0))
  %99 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  switch i32 %99, label %127 [
    i32 0, label %100
    i32 2, label %104
    i32 1, label %106
  ]

100:                                              ; preds = %97
  %101 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1141, i64 0, i64 0), i64 %93, i64 %91, double %94, i64 %77) #14
  %102 = load %1*, %1** @stdout, align 8
  %103 = tail call i32 @fflush(%1* %102) #14
  br label %127

104:                                              ; preds = %97
  %105 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1142, i64 0, i64 0), i64 %93, i64 %91, double %94, i64 %77) #14
  br label %127

106:                                              ; preds = %97
  %107 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1143, i64 0, i64 0), i64 %93, i64 %91, double %94, i64 %77) #14
  br label %127

108:                                              ; preds = %90
  %109 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 18), align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %108
  switch i32 %95, label %130 [
    i32 1, label %114
    i32 2, label %112
  ]

112:                                              ; preds = %111
  %113 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1142, i64 0, i64 0), i64 %93, i64 %91, double %94, i64 %77) #14
  br label %127

114:                                              ; preds = %111
  %115 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1143, i64 0, i64 0), i64 %93, i64 %91, double %94, i64 %77) #14
  br label %127

116:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #14
  %117 = call i32 @gettimeofday(%15* nonnull %4, %31* null) #14
  %118 = load i64, i64* %51, align 8
  %119 = mul nsw i64 %118, 1000000
  %120 = load i64, i64* %52, align 8
  %121 = add nsw i64 %119, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #14
  %122 = sdiv i64 %121, 1000
  %123 = sub nsw i64 %122, %61
  %124 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %125 = icmp sgt i64 %123, %124
  br i1 %125, label %126, label %127

126:                                              ; preds = %116
  tail call fastcc void @1393(i64 %93, i64 %91, double %94, i64 %77)
  tail call void @exit(i32 0) #19
  unreachable

127:                                              ; preds = %114, %112, %106, %104, %100, %97, %116
  %128 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 18), align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %157, label %130

130:                                              ; preds = %111, %127
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #14
  %131 = call i32 @gettimeofday(%15* nonnull %3, %31* null) #14
  %132 = load i64, i64* %42, align 8
  %133 = mul nsw i64 %132, 1000000
  %134 = load i64, i64* %43, align 8
  %135 = add nsw i64 %133, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #14
  %136 = sdiv i64 %135, 1000
  %137 = sub nsw i64 %136, %61
  %138 = icmp sgt i64 %137, %11
  br i1 %138, label %139, label %157

139:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #14
  %140 = call i32 @gettimeofday(%15* nonnull %2, %31* null) #14
  %141 = load i64, i64* %45, align 8
  %142 = mul nsw i64 %141, 1000000
  %143 = load i64, i64* %46, align 8
  %144 = add nsw i64 %142, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #14
  %145 = sdiv i64 %144, 1000
  %146 = sub nsw i64 %145, %61
  %147 = sitofp i64 %146 to float
  %148 = fdiv float %147, 1.000000e+03
  %149 = fpext float %148 to double
  %150 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1140, i64 0, i64 0), double %149)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #14
  %151 = call i32 @gettimeofday(%15* nonnull %1, %31* null) #14
  %152 = load i64, i64* %48, align 8
  %153 = mul nsw i64 %152, 1000000
  %154 = load i64, i64* %49, align 8
  %155 = add nsw i64 %153, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #14
  %156 = sdiv i64 %155, 1000
  br label %157

157:                                              ; preds = %127, %139, %130
  %158 = phi i64 [ 0, %139 ], [ %91, %130 ], [ %91, %127 ]
  %159 = phi i64 [ 0, %139 ], [ %92, %130 ], [ %92, %127 ]
  %160 = phi i64 [ 0, %139 ], [ %77, %130 ], [ %77, %127 ]
  %161 = phi i64 [ 0, %139 ], [ %93, %130 ], [ %93, %127 ]
  %162 = phi i64 [ %156, %139 ], [ %61, %130 ], [ %61, %127 ]
  %163 = tail call i32 @usleep(i32 10000) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %164 = call i32 @gettimeofday(%15* nonnull %6, %31* null) #14
  %165 = load i64, i64* %30, align 8
  %166 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  %167 = load %9*, %9** @727, align 8
  %168 = tail call %30* (%9*, i8*, ...) @1388(%9* %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i64 0, i64 0))
  %169 = icmp eq %30* %168, null
  br i1 %169, label %54, label %57
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1347() unnamed_addr #12 {
  %1 = alloca %15, align 8
  %2 = alloca %15, align 8
  %3 = alloca %15, align 8
  %4 = alloca %15, align 8
  %5 = alloca %15, align 8
  %6 = alloca [31 x %22], align 16
  %7 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %8 = icmp eq i64 %7, 0
  %9 = sdiv i64 %7, 1000
  %10 = select i1 %8, i64 1000, i64 %9
  %11 = bitcast %15* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = call i32 @gettimeofday(%15* nonnull %5, %31* null) #14
  %13 = getelementptr inbounds %15, %15* %5, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = mul nsw i64 %14, 1000000
  %16 = getelementptr inbounds %15, %15* %5, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %15, %17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %19 = bitcast [31 x %22]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 744, i8* nonnull %19) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %19, i8* align 16 bitcast ([31 x %22]* @1144 to i8*), i64 744, i1 false)
  %20 = load %9*, %9** @727, align 8
  %21 = icmp eq %9* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %0
  %23 = bitcast %15* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = call i32 @gettimeofday(%15* nonnull %4, %31* null) #14
  %25 = getelementptr inbounds %15, %15* %4, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %15, %15* %4, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  %29 = load %9*, %9** @727, align 8
  %30 = tail call %30* (%9*, i8*, ...) @1388(%9* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i64 0, i64 0))
  %31 = icmp eq %30* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %22
  %33 = bitcast %15* %3 to i8*
  %34 = getelementptr inbounds %15, %15* %3, i64 0, i32 0
  %35 = getelementptr inbounds %15, %15* %3, i64 0, i32 1
  %36 = bitcast %15* %2 to i8*
  %37 = getelementptr inbounds %15, %15* %2, i64 0, i32 0
  %38 = getelementptr inbounds %15, %15* %2, i64 0, i32 1
  %39 = bitcast %15* %1 to i8*
  %40 = getelementptr inbounds %15, %15* %1, i64 0, i32 0
  %41 = getelementptr inbounds %15, %15* %1, i64 0, i32 1
  br label %46

42:                                               ; preds = %0
  tail call void @exit(i32 1) #19
  unreachable

43:                                               ; preds = %155, %22
  %44 = load %1*, %1** @stderr, align 8
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @729, i64 0, i64 0), i64 11, i64 1, %1* %44) #16
  tail call void @exit(i32 1) #19
  unreachable

46:                                               ; preds = %32, %155
  %47 = phi %30* [ %30, %32 ], [ %164, %155 ]
  %48 = phi i64 [ %28, %32 ], [ %162, %155 ]
  %49 = phi i64 [ %26, %32 ], [ %161, %155 ]
  %50 = phi i32 [ 0, %32 ], [ %158, %155 ]
  %51 = phi i64 [ %18, %32 ], [ %157, %155 ]
  %52 = phi i64 [ 0, %32 ], [ %156, %155 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  %53 = call i32 @gettimeofday(%15* nonnull %3, %31* null) #14
  %54 = load i64, i64* %34, align 8
  %55 = load i64, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  %56 = sub i64 %54, %49
  %57 = mul i64 %56, 1000000
  %58 = sub i64 %55, %48
  %59 = add i64 %58, %57
  %60 = bitcast %30* %47 to i8*
  tail call void @freeReplyObject(i8* %60) #14
  br label %61

61:                                               ; preds = %61, %46
  %62 = phi i64 [ %68, %61 ], [ 0, %46 ]
  %63 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %62, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %64, 0
  %66 = icmp sgt i64 %59, %64
  %67 = and i1 %65, %66
  %68 = add nuw i64 %62, 1
  br i1 %67, label %61, label %69

69:                                               ; preds = %61
  %70 = add nsw i64 %52, 1
  %71 = and i64 %62, 4294967295
  %72 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %71, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = add nsw i64 %73, 1
  store i64 %74, i64* %72, align 8
  %75 = icmp eq i64 %70, 0
  br i1 %75, label %155, label %76

76:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #14
  %77 = call i32 @gettimeofday(%15* nonnull %2, %31* null) #14
  %78 = load i64, i64* %37, align 8
  %79 = mul nsw i64 %78, 1000000
  %80 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  %81 = sub i64 %80, %51
  %82 = add i64 %81, %79
  %83 = sdiv i64 %82, 1000
  %84 = icmp sgt i64 %83, %10
  br i1 %84, label %85, label %155

85:                                               ; preds = %76
  %86 = add nsw i32 %50, 1
  %87 = srem i32 %50, 20
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %119, label %89

89:                                               ; preds = %85
  %90 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @722, i64 0, i64 0)) #14
  %91 = sitofp i64 %70 to float
  br label %92

92:                                               ; preds = %92, %89
  %93 = phi i64 [ %114, %92 ], [ 0, %89 ]
  %94 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %93, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = sitofp i64 %95 to float
  %97 = fdiv float %96, %91
  %98 = load i32, i32* @spectrum_palette_size, align 4
  %99 = add nsw i32 %98, -1
  %100 = sitofp i32 %99 to float
  %101 = fmul float %97, %100
  %102 = tail call float @llvm.ceil.f32(float %101) #14
  %103 = fptosi float %102 to i32
  %104 = load i32*, i32** @spectrum_palette, align 8
  %105 = sext i32 %103 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %93, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @723, i64 0, i64 0), i32 %107, i32 %109) #14
  store i64 0, i64* %94, align 8
  %111 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %93, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  %114 = add nuw i64 %93, 1
  br i1 %113, label %115, label %92

115:                                              ; preds = %92
  %116 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i64 0, i64 0)) #14
  %117 = load %1*, %1** @stdout, align 8
  %118 = tail call i32 @fflush(%1* %117) #14
  br label %149

119:                                              ; preds = %85
  tail call void @showLatencyDistLegend()
  %120 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @722, i64 0, i64 0)) #14
  %121 = sitofp i64 %70 to float
  br label %122

122:                                              ; preds = %122, %119
  %123 = phi i64 [ %144, %122 ], [ 0, %119 ]
  %124 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %123, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = sitofp i64 %125 to float
  %127 = fdiv float %126, %121
  %128 = load i32, i32* @spectrum_palette_size, align 4
  %129 = add nsw i32 %128, -1
  %130 = sitofp i32 %129 to float
  %131 = fmul float %127, %130
  %132 = tail call float @llvm.ceil.f32(float %131) #14
  %133 = fptosi float %132 to i32
  %134 = load i32*, i32** @spectrum_palette, align 8
  %135 = sext i32 %133 to i64
  %136 = getelementptr inbounds i32, i32* %134, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %123, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @723, i64 0, i64 0), i32 %137, i32 %139) #14
  store i64 0, i64* %124, align 8
  %141 = getelementptr inbounds [31 x %22], [31 x %22]* %6, i64 0, i64 %123, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  %144 = add nuw i64 %123, 1
  br i1 %143, label %145, label %122

145:                                              ; preds = %122
  %146 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i64 0, i64 0)) #14
  %147 = load %1*, %1** @stdout, align 8
  %148 = tail call i32 @fflush(%1* %147) #14
  br label %149

149:                                              ; preds = %115, %145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %150 = call i32 @gettimeofday(%15* nonnull %1, %31* null) #14
  %151 = load i64, i64* %40, align 8
  %152 = mul nsw i64 %151, 1000000
  %153 = load i64, i64* %41, align 8
  %154 = add nsw i64 %152, %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  br label %155

155:                                              ; preds = %69, %149, %76
  %156 = phi i64 [ 0, %149 ], [ %70, %76 ], [ 0, %69 ]
  %157 = phi i64 [ %154, %149 ], [ %51, %76 ], [ %51, %69 ]
  %158 = phi i32 [ %86, %149 ], [ %50, %76 ], [ %50, %69 ]
  %159 = tail call i32 @usleep(i32 10000) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %160 = call i32 @gettimeofday(%15* nonnull %4, %31* null) #14
  %161 = load i64, i64* %25, align 8
  %162 = load i64, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  %163 = load %9*, %9** @727, align 8
  %164 = tail call %30* (%9*, i8*, ...) @1388(%9* %163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i64 0, i64 0))
  %165 = icmp eq %30* %164, null
  br i1 %165, label %43, label %46
}

; Function Attrs: nounwind uwtable
define internal fastcc void @1348() unnamed_addr #0 {
  %1 = alloca [1024 x i8], align 16
  %2 = load %9*, %9** @727, align 8
  %3 = getelementptr inbounds %9, %9* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = tail call i64 @sendSync(i32 %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1145, i64 0, i64 0))
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #14
  %7 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  %8 = icmp eq i64 %5, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %0
  tail call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1146, i64 0, i64 0), i8 0, i64 40, i1 false)
  store i1 true, i1* @1147, align 4
  %10 = load %1*, %1** @stderr, align 8
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @1148, i64 0, i64 0), i64 72, i64 1, %1* %10) #16
  br label %17

12:                                               ; preds = %0
  %13 = load %1*, %1** @stderr, align 8
  %14 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %13, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1149, i64 0, i64 0), i64 %5) #16
  %15 = icmp ult i64 %5, 1024
  %16 = select i1 %15, i64 %5, i64 1024
  br label %17

17:                                               ; preds = %12, %9
  %18 = phi i64 [ -1, %9 ], [ %5, %12 ]
  %19 = phi i64 [ 1024, %9 ], [ %16, %12 ]
  %20 = call i64 @read(i32 %4, i8* nonnull %6, i64 %19) #14
  %21 = icmp slt i64 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %46, %17
  %23 = load %1*, %1** @stderr, align 8
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @1150, i64 0, i64 0), i64 40, i64 1, %1* %23) #16
  tail call void @exit(i32 1) #19
  unreachable

25:                                               ; preds = %17, %46
  %26 = phi i64 [ %49, %46 ], [ %20, %17 ]
  %27 = phi i64 [ %28, %46 ], [ %18, %17 ]
  %28 = sub i64 %27, %26
  %29 = load i1, i1* @1147, align 4
  br i1 %29, label %30, label %51

30:                                               ; preds = %25
  %31 = icmp sgt i64 %26, 39
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %1, i64 0, i64 %26
  %34 = getelementptr inbounds i8, i8* %33, i64 -40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1146, i64 0, i64 0), i8* nonnull align 1 %34, i64 40, i1 false)
  br label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds [40 x i8], [40 x i8]* @1146, i64 0, i64 %26
  %37 = shl i64 %26, 32
  %38 = sub i64 171798691840, %37
  %39 = ashr exact i64 %38, 32
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1146, i64 0, i64 0), i8* nonnull align 1 %36, i64 %39, i1 false)
  %40 = getelementptr inbounds [40 x i8], [40 x i8]* @1146, i64 0, i64 %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* nonnull align 16 %6, i64 %26, i1 false)
  br label %41

41:                                               ; preds = %35, %32
  %42 = tail call i32 @memcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1146, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1145, i64 0, i64 0), i64 40) #17
  %43 = icmp ne i32 %42, 0
  %44 = icmp ne i64 %28, 0
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %53

46:                                               ; preds = %41, %51
  %47 = icmp ult i64 %28, 1024
  %48 = select i1 %47, i64 %28, i64 1024
  %49 = call i64 @read(i32 %4, i8* nonnull %6, i64 %48) #14
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %22, label %25

51:                                               ; preds = %25
  %52 = icmp eq i64 %28, 0
  br i1 %52, label %58, label %46

53:                                               ; preds = %41
  %54 = xor i64 %28, -1
  %55 = load %1*, %1** @stderr, align 8
  %56 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %55, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @1151, i64 0, i64 0), i64 %54) #16
  %57 = tail call i32 @sleep(i32 1) #14
  tail call void @sendReplconf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1152, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @914, i64 0, i64 0))
  br label %61

58:                                               ; preds = %51
  %59 = load %1*, %1** @stderr, align 8
  %60 = tail call i64 @fwrite(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1153, i64 0, i64 0), i64 41, i64 1, %1* %59) #16
  br label %61

61:                                               ; preds = %58, %53
  store i32 2, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %62

62:                                               ; preds = %62, %61
  %63 = tail call fastcc i32 @1394(i32 0)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %62, label %65

65:                                               ; preds = %62
  store i32 %7, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @1349(%27* readonly %0) unnamed_addr #0 {
  %2 = alloca [4096 x i8], align 16
  %3 = icmp ne %27* %0, null
  br i1 %3, label %4, label %58

4:                                                ; preds = %1
  %5 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %6 = load %9*, %9** %5, align 8
  %7 = icmp eq %9* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1173, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 6885, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @1174, i64 0, i64 0)) #19
  unreachable

9:                                                ; preds = %4
  %10 = getelementptr inbounds %9, %9* %6, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 14), align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1187, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 2489, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @1188, i64 0, i64 0)) #19
  unreachable

15:                                               ; preds = %9
  %16 = tail call i8* @sdsnew(i8* nonnull %12) #14
  %17 = getelementptr inbounds i8, i8* %16, i64 -1
  %18 = load i8, i8* %17, align 1
  %19 = trunc i8 %18 to i3
  switch i3 %19, label %41 [
    i3 0, label %20
    i3 1, label %23
    i3 2, label %27
    i3 3, label %32
    i3 -4, label %37
  ]

20:                                               ; preds = %15
  %21 = lshr i8 %18, 3
  %22 = zext i8 %21 to i64
  br label %41

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %16, i64 -3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  br label %41

27:                                               ; preds = %15
  %28 = getelementptr inbounds i8, i8* %16, i64 -5
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = zext i16 %30 to i64
  br label %41

32:                                               ; preds = %15
  %33 = getelementptr inbounds i8, i8* %16, i64 -9
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 1
  %36 = zext i32 %35 to i64
  br label %41

37:                                               ; preds = %15
  %38 = getelementptr inbounds i8, i8* %16, i64 -17
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 1
  br label %41

41:                                               ; preds = %37, %32, %27, %23, %20, %15
  %42 = phi i64 [ %40, %37 ], [ %36, %32 ], [ %31, %27 ], [ %26, %23 ], [ %22, %20 ], [ 0, %15 ]
  %43 = add i64 %42, -1
  %44 = getelementptr inbounds i8, i8* %16, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 47
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = tail call i8* @sdscat(i8* nonnull %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1030, i64 0, i64 0)) #14
  br label %49

49:                                               ; preds = %41, %47
  %50 = phi i8* [ %48, %47 ], [ %16, %41 ]
  %51 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %27, %27* %0, i64 0, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %50, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1189, i64 0, i64 0), i8* %52, i32 %54, i8* %56) #14
  br label %63

58:                                               ; preds = %1
  %59 = load %9*, %9** @727, align 8
  %60 = getelementptr inbounds %9, %9* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 32), align 8
  br label %63

63:                                               ; preds = %58, %49
  %64 = phi i8* [ %57, %49 ], [ %62, %58 ]
  %65 = phi i32 [ %11, %49 ], [ %61, %58 ]
  %66 = tail call i64 @sendSync(i32 %65, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1175, i64 0, i64 0))
  %67 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %67) #14
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  tail call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1176, i64 0, i64 0), i8 0, i64 40, i1 false)
  store i1 true, i1* @1177, align 4
  %70 = load %1*, %1** @stderr, align 8
  %71 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %70, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @1178, i64 0, i64 0), i8* %64) #16
  br label %75

72:                                               ; preds = %63
  %73 = load %1*, %1** @stderr, align 8
  %74 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %73, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @1179, i64 0, i64 0), i64 %66, i8* %64) #16
  br label %75

75:                                               ; preds = %72, %69
  %76 = phi i64 [ -1, %69 ], [ %66, %72 ]
  %77 = tail call i32 @strcmp(i8* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i64 0, i64 0)) #17
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %75
  %80 = tail call i32 (i8*, i32, ...) @open64(i8* %64, i32 65, i32 420) #14
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %88

82:                                               ; preds = %79
  %83 = load %1*, %1** @stderr, align 8
  %84 = tail call i32* @__errno_location() #18
  %85 = load i32, i32* %84, align 4
  %86 = tail call i8* @strerror(i32 %85) #14
  %87 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %83, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1180, i64 0, i64 0), i8* %64, i8* %86) #16
  tail call void @exit(i32 1) #19
  unreachable

88:                                               ; preds = %75, %79
  %89 = phi i32 [ %80, %79 ], [ 1, %75 ]
  %90 = icmp ult i64 %76, 4096
  %91 = select i1 %90, i64 %76, i64 4096
  %92 = call i64 @read(i32 %65, i8* nonnull %67, i64 %91) #14
  %93 = icmp slt i64 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %131, %88
  %95 = load %1*, %1** @stderr, align 8
  %96 = tail call i64 @fwrite(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @1181, i64 0, i64 0), i64 42, i64 1, %1* %95) #16
  tail call void @exit(i32 1) #19
  unreachable

97:                                               ; preds = %88, %131
  %98 = phi i64 [ %134, %131 ], [ %92, %88 ]
  %99 = phi i64 [ %113, %131 ], [ %76, %88 ]
  %100 = call i64 @write(i32 %89, i8* nonnull %67, i64 %98) #14
  %101 = icmp eq i64 %100, %98
  br i1 %101, label %112, label %102

102:                                              ; preds = %97
  %103 = load %1*, %1** @stderr, align 8
  %104 = icmp eq i64 %100, -1
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = tail call i32* @__errno_location() #18
  %107 = load i32, i32* %106, align 4
  %108 = tail call i8* @strerror(i32 %107) #14
  br label %109

109:                                              ; preds = %102, %105
  %110 = phi i8* [ %108, %105 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @1183, i64 0, i64 0), %102 ]
  %111 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %103, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @1182, i64 0, i64 0), i8* %110) #16
  tail call void @exit(i32 1) #19
  unreachable

112:                                              ; preds = %97
  %113 = sub i64 %99, %98
  %114 = load i1, i1* @1177, align 4
  br i1 %114, label %115, label %136

115:                                              ; preds = %112
  %116 = icmp sgt i64 %98, 39
  br i1 %116, label %117, label %120

117:                                              ; preds = %115
  %118 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 %98
  %119 = getelementptr inbounds i8, i8* %118, i64 -40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1176, i64 0, i64 0), i8* nonnull align 1 %119, i64 40, i1 false)
  br label %126

120:                                              ; preds = %115
  %121 = getelementptr inbounds [40 x i8], [40 x i8]* @1176, i64 0, i64 %98
  %122 = shl i64 %98, 32
  %123 = sub i64 171798691840, %122
  %124 = ashr exact i64 %123, 32
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1176, i64 0, i64 0), i8* nonnull align 1 %121, i64 %124, i1 false)
  %125 = getelementptr inbounds [40 x i8], [40 x i8]* @1176, i64 0, i64 %124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* nonnull align 16 %67, i64 %98, i1 false)
  br label %126

126:                                              ; preds = %120, %117
  %127 = tail call i32 @memcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1176, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1175, i64 0, i64 0), i64 40) #17
  %128 = icmp ne i32 %127, 0
  %129 = icmp ne i64 %113, 0
  %130 = and i1 %129, %128
  br i1 %130, label %131, label %138

131:                                              ; preds = %126, %136
  %132 = icmp ult i64 %113, 4096
  %133 = select i1 %132, i64 %113, i64 4096
  %134 = call i64 @read(i32 %65, i8* nonnull %67, i64 %133) #14
  %135 = icmp slt i64 %134, 1
  br i1 %135, label %94, label %97

136:                                              ; preds = %112
  %137 = icmp eq i64 %113, 0
  br i1 %137, label %151, label %131

138:                                              ; preds = %126
  %139 = sub i64 -41, %113
  %140 = tail call i32 @ftruncate64(i32 %89, i64 %139) #14
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %142, label %148

142:                                              ; preds = %138
  %143 = load %1*, %1** @stderr, align 8
  %144 = tail call i32* @__errno_location() #18
  %145 = load i32, i32* %144, align 4
  %146 = tail call i8* @strerror(i32 %145) #14
  %147 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %143, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1184, i64 0, i64 0), i8* %146) #16
  br label %148

148:                                              ; preds = %142, %138
  %149 = load %1*, %1** @stderr, align 8
  %150 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %149, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @1185, i64 0, i64 0), i64 %139) #16
  br label %154

151:                                              ; preds = %136
  %152 = load %1*, %1** @stderr, align 8
  %153 = tail call i64 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1186, i64 0, i64 0), i64 32, i64 1, %1* %152) #16
  br label %154

154:                                              ; preds = %151, %148
  %155 = tail call i32 @close(i32 %65) #14
  %156 = tail call i32 @fsync(i32 %89) #14
  %157 = tail call i32 @close(i32 %89) #14
  %158 = load %1*, %1** @stderr, align 8
  %159 = tail call i64 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1186, i64 0, i64 0), i64 32, i64 1, %1* %158) #16
  br i1 %3, label %160, label %161

160:                                              ; preds = %154
  tail call void @sdsfree(i8* %64) #14
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %67) #14
  ret void

161:                                              ; preds = %154
  tail call void @exit(i32 0) #19
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1350() unnamed_addr #12 {
  %1 = alloca [16384 x i8], align 16
  %2 = alloca [16384 x i8], align 16
  %3 = alloca [256 x i8], align 16
  %4 = alloca %30*, align 8
  %5 = alloca [20 x i8], align 16
  %6 = alloca [44 x i8], align 16
  %7 = load %9*, %9** @727, align 8
  %8 = getelementptr inbounds %9, %9* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds [16384 x i8], [16384 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %10) #14
  %11 = getelementptr inbounds [16384 x i8], [16384 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %11) #14
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %12) #14
  %13 = tail call %12* @redisReaderCreate() #14
  %14 = bitcast %30** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #14
  %16 = tail call i64 @time(i64* null) #14
  %17 = tail call i64 @time(i64* null) #14
  %18 = trunc i64 %17 to i32
  tail call void @srand(i32 %18) #14
  %19 = call i32 @anetNonBlock(i8* nonnull %12, i32 %9) #14
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %44, label %21

21:                                               ; preds = %0
  %22 = getelementptr inbounds [44 x i8], [44 x i8]* %6, i64 0, i64 0
  %23 = getelementptr inbounds [44 x i8], [44 x i8]* %6, i64 0, i64 21
  %24 = bitcast %30** %4 to i8**
  %25 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 1
  %26 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 2
  %27 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 3
  %28 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 4
  %29 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 5
  %30 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 6
  %31 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 7
  %32 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 8
  %33 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 9
  %34 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 10
  %35 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 11
  %36 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 12
  %37 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 13
  %38 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 14
  %39 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 15
  %40 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 16
  %41 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 17
  %42 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 18
  %43 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 19
  br label %47

44:                                               ; preds = %0
  %45 = load %1*, %1** @stderr, align 8
  %46 = call i32 (%1*, i8*, ...) @fprintf(%1* %45, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1190, i64 0, i64 0), i8* nonnull %12) #16
  call void @exit(i32 1) #19
  unreachable

47:                                               ; preds = %21, %269
  %48 = phi i64 [ 0, %21 ], [ %162, %269 ]
  %49 = phi i64 [ 0, %21 ], [ %161, %269 ]
  %50 = phi i64 [ %16, %21 ], [ %160, %269 ]
  %51 = phi i32 [ 0, %21 ], [ %254, %269 ]
  %52 = phi i64 [ 0, %21 ], [ %253, %269 ]
  %53 = phi i64 [ 0, %21 ], [ %252, %269 ]
  %54 = icmp eq i32 %51, 0
  %55 = icmp ne i64 %52, 0
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 3, i32 1
  %58 = call i32 @aeWait(i32 %9, i32 %57, i64 1000) #14
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %158, label %61

61:                                               ; preds = %47
  %62 = call i64 @read(i32 %9, i8* nonnull %10, i64 16384) #14
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = icmp sgt i64 %62, 0
  br i1 %65, label %76, label %82

66:                                               ; preds = %76, %61
  %67 = phi i64 [ %50, %61 ], [ %79, %76 ]
  %68 = tail call i32* @__errno_location() #18
  %69 = load i32, i32* %68, align 4
  switch i32 %69, label %70 [
    i32 11, label %82
    i32 4, label %82
  ]

70:                                               ; preds = %66
  %71 = load %1*, %1** @stderr, align 8
  %72 = call i8* @strerror(i32 %69) #14
  %73 = call i32 (%1*, i8*, ...) @fprintf(%1* %71, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1191, i64 0, i64 0), i8* %72) #16
  br label %82

74:                                               ; preds = %76
  %75 = icmp sgt i64 %80, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %64, %74
  %77 = phi i64 [ %80, %74 ], [ %62, %64 ]
  %78 = call i32 @redisReaderFeed(%12* %13, i8* nonnull %10, i64 %77) #14
  %79 = call i64 @time(i64* null) #14
  %80 = call i64 @read(i32 %9, i8* nonnull %10, i64 16384) #14
  %81 = icmp eq i64 %80, -1
  br i1 %81, label %66, label %74

82:                                               ; preds = %74, %64, %66, %66, %70
  %83 = phi i64 [ %67, %70 ], [ %67, %66 ], [ %67, %66 ], [ %50, %64 ], [ %79, %74 ]
  %84 = phi i32 [ 1, %70 ], [ 0, %66 ], [ 0, %66 ], [ 0, %64 ], [ 0, %74 ]
  br i1 %54, label %123, label %85

85:                                               ; preds = %82, %115
  %86 = phi i32 [ %116, %115 ], [ 0, %82 ]
  %87 = phi i64 [ %119, %115 ], [ %49, %82 ]
  %88 = phi i64 [ %118, %115 ], [ %48, %82 ]
  %89 = call i32 @redisReaderGetReply(%12* %13, i8** nonnull %24) #14
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %128, label %91

91:                                               ; preds = %85
  %92 = load %30*, %30** %4, align 8
  %93 = icmp eq %30* %92, null
  br i1 %93, label %152, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %30, %30* %92, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  switch i32 %96, label %115 [
    i32 6, label %109
    i32 1, label %97
  ]

97:                                               ; preds = %94
  %98 = getelementptr inbounds %30, %30* %92, i64 0, i32 3
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 20
  br i1 %100, label %101, label %115

101:                                              ; preds = %97
  %102 = getelementptr inbounds %30, %30* %92, i64 0, i32 4
  %103 = load i8*, i8** %102, align 8
  %104 = call i32 @memcmp(i8* %103, i8* nonnull %15, i64 20) #17
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %115

106:                                              ; preds = %101
  %107 = call i32 @puts(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.18, i64 0, i64 0))
  %108 = add nsw i64 %87, -1
  br label %115

109:                                              ; preds = %94
  %110 = load %1*, %1** @stderr, align 8
  %111 = getelementptr inbounds %30, %30* %92, i64 0, i32 4
  %112 = load i8*, i8** %111, align 8
  %113 = call i32 (%1*, i8*, ...) @fprintf(%1* %110, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %112) #16
  %114 = add nsw i64 %88, 1
  br label %115

115:                                              ; preds = %94, %109, %106, %101, %97
  %116 = phi i32 [ %86, %109 ], [ 1, %106 ], [ %86, %101 ], [ %86, %97 ], [ %86, %94 ]
  %117 = phi i64 [ %87, %109 ], [ %108, %106 ], [ %87, %101 ], [ %87, %97 ], [ %87, %94 ]
  %118 = phi i64 [ %114, %109 ], [ %88, %106 ], [ %88, %101 ], [ %88, %97 ], [ %88, %94 ]
  %119 = add nsw i64 %117, 1
  %120 = load i8*, i8** %24, align 8
  call void @freeReplyObject(i8* %120) #14
  %121 = load %30*, %30** %4, align 8
  %122 = icmp eq %30* %121, null
  br i1 %122, label %152, label %85

123:                                              ; preds = %82, %146
  %124 = phi i64 [ %149, %146 ], [ %49, %82 ]
  %125 = phi i64 [ %148, %146 ], [ %48, %82 ]
  %126 = call i32 @redisReaderGetReply(%12* %13, i8** nonnull %24) #14
  %127 = icmp eq i32 %126, -1
  br i1 %127, label %128, label %131

128:                                              ; preds = %85, %123
  %129 = load %1*, %1** @stderr, align 8
  %130 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1192, i64 0, i64 0), i64 34, i64 1, %1* %129) #16
  call void @exit(i32 1) #19
  unreachable

131:                                              ; preds = %123
  %132 = load %30*, %30** %4, align 8
  %133 = icmp eq %30* %132, null
  br i1 %133, label %152, label %134

134:                                              ; preds = %131
  %135 = bitcast %30* %132 to i8*
  %136 = getelementptr inbounds %30, %30* %132, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 6
  br i1 %138, label %139, label %146

139:                                              ; preds = %134
  %140 = load %1*, %1** @stderr, align 8
  %141 = getelementptr inbounds %30, %30* %132, i64 0, i32 4
  %142 = load i8*, i8** %141, align 8
  %143 = call i32 (%1*, i8*, ...) @fprintf(%1* %140, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %142) #16
  %144 = add nsw i64 %125, 1
  %145 = load i8*, i8** %24, align 8
  br label %146

146:                                              ; preds = %134, %139
  %147 = phi i8* [ %145, %139 ], [ %135, %134 ]
  %148 = phi i64 [ %144, %139 ], [ %125, %134 ]
  %149 = add nsw i64 %124, 1
  call void @freeReplyObject(i8* %147) #14
  %150 = load %30*, %30** %4, align 8
  %151 = icmp eq %30* %150, null
  br i1 %151, label %152, label %123

152:                                              ; preds = %91, %115, %131, %146
  %153 = phi i64 [ %125, %131 ], [ %148, %146 ], [ %88, %91 ], [ %118, %115 ]
  %154 = phi i64 [ %124, %131 ], [ %149, %146 ], [ %87, %91 ], [ %119, %115 ]
  %155 = phi i32 [ 0, %146 ], [ 0, %131 ], [ %86, %91 ], [ %116, %115 ]
  %156 = icmp eq i32 %84, 0
  br i1 %156, label %158, label %157

157:                                              ; preds = %152
  call void @exit(i32 1) #19
  unreachable

158:                                              ; preds = %152, %47
  %159 = phi i32 [ 0, %47 ], [ %155, %152 ]
  %160 = phi i64 [ %50, %47 ], [ %83, %152 ]
  %161 = phi i64 [ %49, %47 ], [ %154, %152 ]
  %162 = phi i64 [ %48, %47 ], [ %153, %152 ]
  %163 = and i32 %58, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %251, label %165

165:                                              ; preds = %158, %242
  %166 = phi i64 [ %243, %242 ], [ %53, %158 ]
  %167 = phi i64 [ %244, %242 ], [ %52, %158 ]
  %168 = phi i32 [ %245, %242 ], [ %51, %158 ]
  %169 = phi i64 [ %190, %242 ], [ 0, %158 ]
  %170 = icmp eq i64 %167, 0
  br i1 %170, label %188, label %171

171:                                              ; preds = %165
  %172 = getelementptr inbounds [16384 x i8], [16384 x i8]* %2, i64 0, i64 %166
  %173 = call i64 @write(i32 %9, i8* nonnull %172, i64 %167) #14
  %174 = icmp eq i64 %173, -1
  br i1 %174, label %175, label %182

175:                                              ; preds = %171
  %176 = tail call i32* @__errno_location() #18
  %177 = load i32, i32* %176, align 4
  switch i32 %177, label %178 [
    i32 11, label %182
    i32 4, label %182
  ]

178:                                              ; preds = %175
  %179 = load %1*, %1** @stderr, align 8
  %180 = call i8* @strerror(i32 %177) #14
  %181 = call i32 (%1*, i8*, ...) @fprintf(%1* %179, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1193, i64 0, i64 0), i8* %180) #16
  call void @exit(i32 1) #19
  unreachable

182:                                              ; preds = %175, %175, %171
  %183 = phi i64 [ %173, %171 ], [ 0, %175 ], [ 0, %175 ]
  %184 = sub nsw i64 %167, %183
  %185 = add nsw i64 %183, %166
  %186 = add nsw i64 %183, %169
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %251

188:                                              ; preds = %165, %182
  %189 = phi i64 [ %185, %182 ], [ %166, %165 ]
  %190 = phi i64 [ %186, %182 ], [ %169, %165 ]
  %191 = icmp eq i32 %168, 0
  br i1 %191, label %192, label %242

192:                                              ; preds = %188
  %193 = call i64 @read(i32 0, i8* nonnull %11, i64 16384) #14
  switch i64 %193, label %242 [
    i64 0, label %194
    i64 -1, label %236
  ]

194:                                              ; preds = %192
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %22)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %22, i8* align 16 getelementptr inbounds ([44 x i8], [44 x i8]* @1194, i64 0, i64 0), i64 44, i1 false)
  %195 = call i32 @rand() #14
  %196 = trunc i32 %195 to i8
  store i8 %196, i8* %15, align 16
  %197 = call i32 @rand() #14
  %198 = trunc i32 %197 to i8
  store i8 %198, i8* %25, align 1
  %199 = call i32 @rand() #14
  %200 = trunc i32 %199 to i8
  store i8 %200, i8* %26, align 2
  %201 = call i32 @rand() #14
  %202 = trunc i32 %201 to i8
  store i8 %202, i8* %27, align 1
  %203 = call i32 @rand() #14
  %204 = trunc i32 %203 to i8
  store i8 %204, i8* %28, align 4
  %205 = call i32 @rand() #14
  %206 = trunc i32 %205 to i8
  store i8 %206, i8* %29, align 1
  %207 = call i32 @rand() #14
  %208 = trunc i32 %207 to i8
  store i8 %208, i8* %30, align 2
  %209 = call i32 @rand() #14
  %210 = trunc i32 %209 to i8
  store i8 %210, i8* %31, align 1
  %211 = call i32 @rand() #14
  %212 = trunc i32 %211 to i8
  store i8 %212, i8* %32, align 8
  %213 = call i32 @rand() #14
  %214 = trunc i32 %213 to i8
  store i8 %214, i8* %33, align 1
  %215 = call i32 @rand() #14
  %216 = trunc i32 %215 to i8
  store i8 %216, i8* %34, align 2
  %217 = call i32 @rand() #14
  %218 = trunc i32 %217 to i8
  store i8 %218, i8* %35, align 1
  %219 = call i32 @rand() #14
  %220 = trunc i32 %219 to i8
  store i8 %220, i8* %36, align 4
  %221 = call i32 @rand() #14
  %222 = trunc i32 %221 to i8
  store i8 %222, i8* %37, align 1
  %223 = call i32 @rand() #14
  %224 = trunc i32 %223 to i8
  store i8 %224, i8* %38, align 2
  %225 = call i32 @rand() #14
  %226 = trunc i32 %225 to i8
  store i8 %226, i8* %39, align 1
  %227 = call i32 @rand() #14
  %228 = trunc i32 %227 to i8
  store i8 %228, i8* %40, align 16
  %229 = call i32 @rand() #14
  %230 = trunc i32 %229 to i8
  store i8 %230, i8* %41, align 1
  %231 = call i32 @rand() #14
  %232 = trunc i32 %231 to i8
  store i8 %232, i8* %42, align 2
  %233 = call i32 @rand() #14
  %234 = trunc i32 %233 to i8
  store i8 %234, i8* %43, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* nonnull align 16 %15, i64 20, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %11, i8* nonnull align 16 %22, i64 43, i1 false)
  %235 = call i32 @puts(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.17, i64 0, i64 0))
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %22)
  br label %242

236:                                              ; preds = %192
  %237 = load %1*, %1** @stderr, align 8
  %238 = tail call i32* @__errno_location() #18
  %239 = load i32, i32* %238, align 4
  %240 = call i8* @strerror(i32 %239) #14
  %241 = call i32 (%1*, i8*, ...) @fprintf(%1* %237, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1195, i64 0, i64 0), i8* %240) #16
  call void @exit(i32 1) #19
  unreachable

242:                                              ; preds = %188, %194, %192
  %243 = phi i64 [ %189, %188 ], [ 0, %192 ], [ 0, %194 ]
  %244 = phi i64 [ 0, %188 ], [ %193, %192 ], [ 43, %194 ]
  %245 = phi i32 [ %168, %188 ], [ 0, %192 ], [ 1, %194 ]
  %246 = icmp eq i64 %244, 0
  %247 = icmp ne i32 %245, 0
  %248 = and i1 %246, %247
  %249 = icmp sgt i64 %190, 131072
  %250 = or i1 %249, %248
  br i1 %250, label %251, label %165

251:                                              ; preds = %182, %242, %158
  %252 = phi i64 [ %53, %158 ], [ %185, %182 ], [ %243, %242 ]
  %253 = phi i64 [ %52, %158 ], [ %184, %182 ], [ %244, %242 ]
  %254 = phi i32 [ %51, %158 ], [ %168, %182 ], [ %245, %242 ]
  %255 = icmp ne i32 %254, 0
  %256 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 25), align 8
  %257 = icmp sgt i32 %256, 0
  %258 = and i1 %255, %257
  br i1 %258, label %259, label %269

259:                                              ; preds = %251
  %260 = call i64 @time(i64* null) #14
  %261 = sub nsw i64 %260, %160
  %262 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 25), align 8
  %263 = sext i32 %262 to i64
  %264 = icmp sgt i64 %261, %263
  br i1 %264, label %265, label %269

265:                                              ; preds = %259
  %266 = load %1*, %1** @stderr, align 8
  %267 = call i32 (%1*, i8*, ...) @fprintf(%1* %266, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1196, i64 0, i64 0), i32 %262) #16
  %268 = add nsw i64 %162, 1
  br label %271

269:                                              ; preds = %251, %259
  %270 = icmp eq i32 %159, 0
  br i1 %270, label %47, label %271

271:                                              ; preds = %269, %265
  %272 = phi i64 [ %268, %265 ], [ %162, %269 ]
  call void @redisReaderFree(%12* %13) #14
  %273 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1197, i64 0, i64 0), i64 %272, i64 %161)
  %274 = icmp eq i64 %272, 0
  br i1 %274, label %276, label %275

275:                                              ; preds = %271
  call void @exit(i32 1) #19
  unreachable

276:                                              ; preds = %271
  call void @exit(i32 0) #19
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1351(i32 %0, i32 %1) unnamed_addr #12 {
  %3 = alloca %30*, align 8
  %4 = alloca %30*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  store i64 0, i64* %5, align 8
  %7 = tail call %3* @dictCreate(%4* nonnull @1198, i8* null) #14
  %8 = tail call i8* @zmalloc(i64 56) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%19* @type_string to i8*), i64 56, i1 false) #14
  %9 = tail call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @738, i64 0, i64 0)) #14
  %10 = bitcast i8* %8 to i8**
  store i8* %9, i8** %10, align 8
  %11 = tail call i32 @dictAdd(%3* %7, i8* %9, i8* %8) #14
  %12 = tail call i8* @zmalloc(i64 56) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 bitcast (%19* @type_list to i8*), i64 56, i1 false) #14
  %13 = tail call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @740, i64 0, i64 0)) #14
  %14 = bitcast i8* %12 to i8**
  store i8* %13, i8** %14, align 8
  %15 = tail call i32 @dictAdd(%3* %7, i8* %13, i8* %12) #14
  %16 = tail call i8* @zmalloc(i64 56) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%19* @type_set to i8*), i64 56, i1 false) #14
  %17 = tail call i8* @sdsnew(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @742, i64 0, i64 0)) #14
  %18 = bitcast i8* %16 to i8**
  store i8* %17, i8** %18, align 8
  %19 = tail call i32 @dictAdd(%3* %7, i8* %17, i8* %16) #14
  %20 = tail call i8* @zmalloc(i64 56) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 bitcast (%19* @type_hash to i8*), i64 56, i1 false) #14
  %21 = tail call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @744, i64 0, i64 0)) #14
  %22 = bitcast i8* %20 to i8**
  store i8* %21, i8** %22, align 8
  %23 = tail call i32 @dictAdd(%3* %7, i8* %21, i8* %20) #14
  %24 = tail call i8* @zmalloc(i64 56) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 bitcast (%19* @type_zset to i8*), i64 56, i1 false) #14
  %25 = tail call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @746, i64 0, i64 0)) #14
  %26 = bitcast i8* %24 to i8**
  store i8* %25, i8** %26, align 8
  %27 = tail call i32 @dictAdd(%3* %7, i8* %25, i8* %24) #14
  %28 = tail call i8* @zmalloc(i64 56) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 bitcast (%19* @type_stream to i8*), i64 56, i1 false) #14
  %29 = tail call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i64 0, i64 0)) #14
  %30 = bitcast i8* %28 to i8**
  store i8* %29, i8** %30, align 8
  %31 = tail call i32 @dictAdd(%3* %7, i8* %29, i8* %28) #14
  %32 = load %9*, %9** @727, align 8
  %33 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i64 0, i64 0)) #14
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %2
  %36 = bitcast i8* %33 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 3
  br i1 %38, label %42, label %39

39:                                               ; preds = %35, %2
  %40 = load %1*, %1** @stderr, align 8
  %41 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1207, i64 0, i64 0), i64 27, i64 1, %1* %40) #20
  tail call void @exit(i32 1) #19
  unreachable

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %33, i64 8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  tail call void @freeReplyObject(i8* nonnull %33) #14
  %46 = shl i64 %45, 32
  %47 = ashr exact i64 %46, 32
  %48 = tail call i32 @puts(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @str.19, i64 0, i64 0))
  %49 = tail call i32 @puts(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @str.24, i64 0, i64 0))
  %50 = tail call i32 @puts(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.25, i64 0, i64 0))
  %51 = uitofp i64 %47 to double
  %52 = bitcast %30** %4 to i8*
  %53 = bitcast %30** %3 to i8*
  %54 = icmp eq i32 %0, 0
  %55 = bitcast %30** %4 to i8**
  %56 = icmp eq i32 %1, 0
  %57 = bitcast %30** %3 to i8**
  br label %58

58:                                               ; preds = %458, %42
  %59 = phi i8* [ null, %42 ], [ %99, %458 ]
  %60 = phi i8* [ null, %42 ], [ %100, %458 ]
  %61 = phi %19** [ null, %42 ], [ %101, %458 ]
  %62 = phi i32 [ 0, %42 ], [ %102, %458 ]
  %63 = phi i8* [ null, %42 ], [ %103, %458 ]
  %64 = phi i8* [ null, %42 ], [ %104, %458 ]
  %65 = phi i64* [ null, %42 ], [ %105, %458 ]
  %66 = phi i64 [ 0, %42 ], [ %446, %458 ]
  %67 = phi i64 [ 0, %42 ], [ %447, %458 ]
  %68 = uitofp i64 %67 to double
  %69 = fmul double %68, 1.000000e+02
  %70 = fdiv double %69, %51
  %71 = call fastcc %30* @1398(i64* nonnull %5)
  %72 = getelementptr inbounds %30, %30* %71, i64 0, i32 7
  %73 = load %30**, %30*** %72, align 8
  %74 = getelementptr inbounds %30*, %30** %73, i64 1
  %75 = load %30*, %30** %74, align 8
  %76 = getelementptr inbounds %30, %30* %75, i64 0, i32 6
  %77 = load i64, i64* %76, align 8
  %78 = zext i32 %62 to i64
  %79 = icmp ugt i64 %77, %78
  br i1 %79, label %80, label %97

80:                                               ; preds = %58
  %81 = shl i64 %77, 3
  %82 = call i8* @zrealloc(i8* %60, i64 %81) #14
  %83 = load i64, i64* %76, align 8
  %84 = shl i64 %83, 3
  %85 = call i8* @zrealloc(i8* %64, i64 %84) #14
  %86 = icmp ne i8* %82, null
  %87 = icmp ne i8* %85, null
  %88 = and i1 %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %80
  %90 = load %1*, %1** @stderr, align 8
  %91 = call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @1199, i64 0, i64 0), i64 37, i64 1, %1* %90) #16
  call void @exit(i32 1) #19
  unreachable

92:                                               ; preds = %80
  %93 = bitcast i8* %85 to i64*
  %94 = bitcast i8* %82 to %19**
  %95 = load i64, i64* %76, align 8
  %96 = trunc i64 %95 to i32
  br label %97

97:                                               ; preds = %92, %58
  %98 = phi i64 [ %95, %92 ], [ %77, %58 ]
  %99 = phi i8* [ %82, %92 ], [ %59, %58 ]
  %100 = phi i8* [ %82, %92 ], [ %60, %58 ]
  %101 = phi %19** [ %94, %92 ], [ %61, %58 ]
  %102 = phi i32 [ %96, %92 ], [ %62, %58 ]
  %103 = phi i8* [ %85, %92 ], [ %63, %58 ]
  %104 = phi i8* [ %85, %92 ], [ %64, %58 ]
  %105 = phi i64* [ %93, %92 ], [ %65, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  %106 = icmp eq i64 %98, 0
  br i1 %106, label %193, label %107

107:                                              ; preds = %97
  %108 = getelementptr inbounds %30, %30* %75, i64 0, i32 7
  br label %111

109:                                              ; preds = %111
  %110 = icmp eq i64 %123, 0
  br i1 %110, label %193, label %125

111:                                              ; preds = %111, %107
  %112 = phi i64 [ 0, %107 ], [ %122, %111 ]
  %113 = phi i32 [ 0, %107 ], [ %121, %111 ]
  %114 = load %9*, %9** @727, align 8
  %115 = load %30**, %30*** %108, align 8
  %116 = getelementptr inbounds %30*, %30** %115, i64 %112
  %117 = load %30*, %30** %116, align 8
  %118 = getelementptr inbounds %30, %30* %117, i64 0, i32 4
  %119 = load i8*, i8** %118, align 8
  %120 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1215, i64 0, i64 0), i8* %119) #14
  %121 = add i32 %113, 1
  %122 = zext i32 %121 to i64
  %123 = load i64, i64* %76, align 8
  %124 = icmp ugt i64 %123, %122
  br i1 %124, label %111, label %109

125:                                              ; preds = %109, %185
  %126 = phi i64 [ %190, %185 ], [ 0, %109 ]
  %127 = phi i32 [ %189, %185 ], [ 0, %109 ]
  %128 = load %9*, %9** @727, align 8
  %129 = call i32 @redisGetReply(%9* %128, i8** nonnull %55) #14
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %143, label %131

131:                                              ; preds = %125
  %132 = load %1*, %1** @stderr, align 8
  %133 = load %30**, %30*** %108, align 8
  %134 = getelementptr inbounds %30*, %30** %133, i64 %126
  %135 = load %30*, %30** %134, align 8
  %136 = getelementptr inbounds %30, %30* %135, i64 0, i32 4
  %137 = load i8*, i8** %136, align 8
  %138 = load %9*, %9** @727, align 8
  %139 = getelementptr inbounds %9, %9* %138, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %9, %9* %138, i64 0, i32 2, i64 0
  %142 = call i32 (%1*, i8*, ...) @fprintf(%1* %132, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1216, i64 0, i64 0), i8* %137, i32 %140, i8* nonnull %141) #20
  call void @exit(i32 1) #19
  unreachable

143:                                              ; preds = %125
  %144 = load %30*, %30** %4, align 8
  %145 = getelementptr inbounds %30, %30* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 5
  br i1 %147, label %163, label %148

148:                                              ; preds = %143
  %149 = icmp eq i32 %146, 6
  %150 = load %1*, %1** @stderr, align 8
  br i1 %149, label %151, label %155

151:                                              ; preds = %148
  %152 = getelementptr inbounds %30, %30* %144, i64 0, i32 4
  %153 = load i8*, i8** %152, align 8
  %154 = call i32 (%1*, i8*, ...) @fprintf(%1* %150, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1217, i64 0, i64 0), i8* %153) #20
  br label %162

155:                                              ; preds = %148
  %156 = load %30**, %30*** %108, align 8
  %157 = getelementptr inbounds %30*, %30** %156, i64 %126
  %158 = load %30*, %30** %157, align 8
  %159 = getelementptr inbounds %30, %30* %158, i64 0, i32 4
  %160 = load i8*, i8** %159, align 8
  %161 = call i32 (%1*, i8*, ...) @fprintf(%1* %150, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1218, i64 0, i64 0), i32 %146, i8* %160) #20
  br label %162

162:                                              ; preds = %155, %151
  call void @exit(i32 1) #19
  unreachable

163:                                              ; preds = %143
  %164 = getelementptr inbounds %30, %30* %144, i64 0, i32 4
  %165 = load i8*, i8** %164, align 8
  %166 = call i8* @sdsnew(i8* %165) #14
  %167 = call %6* @dictFind(%3* %7, i8* %166) #14
  call void @sdsfree(i8* %166) #14
  %168 = icmp eq %6* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %6, %6* %167, i64 0, i32 1, i32 0
  %171 = bitcast i8** %170 to %19**
  %172 = load %19*, %19** %171, align 8
  br label %185

173:                                              ; preds = %163
  %174 = load %30*, %30** %4, align 8
  %175 = getelementptr inbounds %30, %30* %174, i64 0, i32 4
  %176 = load i8*, i8** %175, align 8
  %177 = call i32 @strcmp(i8* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1219, i64 0, i64 0)) #17
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = call i8* @zmalloc(i64 56) #14
  %181 = bitcast i8* %180 to %19*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 bitcast (%19* @type_other to i8*), i64 56, i1 false) #14
  %182 = call i8* @sdsnew(i8* %176) #14
  %183 = bitcast i8* %180 to i8**
  store i8* %182, i8** %183, align 8
  %184 = call i32 @dictAdd(%3* %7, i8* %182, i8* %180) #14
  br label %185

185:                                              ; preds = %179, %173, %169
  %186 = phi %19* [ %172, %169 ], [ %181, %179 ], [ null, %173 ]
  %187 = getelementptr inbounds %19*, %19** %101, i64 %126
  store %19* %186, %19** %187, align 8
  %188 = load i8*, i8** %55, align 8
  call void @freeReplyObject(i8* %188) #14
  %189 = add i32 %127, 1
  %190 = zext i32 %189 to i64
  %191 = load i64, i64* %76, align 8
  %192 = icmp ugt i64 %191, %190
  br i1 %192, label %125, label %194

193:                                              ; preds = %97, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  br label %371

194:                                              ; preds = %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  %195 = icmp eq i64 %191, 0
  br i1 %195, label %371, label %196

196:                                              ; preds = %194
  br i1 %54, label %285, label %197

197:                                              ; preds = %196
  br i1 %56, label %198, label %219

198:                                              ; preds = %197, %214
  %199 = phi i64 [ %215, %214 ], [ %191, %197 ]
  %200 = phi i64 [ %217, %214 ], [ 0, %197 ]
  %201 = phi i32 [ %216, %214 ], [ 0, %197 ]
  %202 = getelementptr inbounds %19*, %19** %101, i64 %200
  %203 = load %19*, %19** %202, align 8
  %204 = icmp eq %19* %203, null
  br i1 %204, label %214, label %205

205:                                              ; preds = %198
  %206 = load %9*, %9** @727, align 8
  %207 = load %30**, %30*** %108, align 8
  %208 = getelementptr inbounds %30*, %30** %207, i64 %200
  %209 = load %30*, %30** %208, align 8
  %210 = getelementptr inbounds %30, %30* %209, i64 0, i32 4
  %211 = load i8*, i8** %210, align 8
  %212 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %206, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1221, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1222, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1223, i64 0, i64 0), i8* %211) #14
  %213 = load i64, i64* %76, align 8
  br label %214

214:                                              ; preds = %205, %198
  %215 = phi i64 [ %213, %205 ], [ %199, %198 ]
  %216 = add i32 %201, 1
  %217 = zext i32 %216 to i64
  %218 = icmp ugt i64 %215, %217
  br i1 %218, label %198, label %240

219:                                              ; preds = %197, %235
  %220 = phi i64 [ %236, %235 ], [ %191, %197 ]
  %221 = phi i64 [ %238, %235 ], [ 0, %197 ]
  %222 = phi i32 [ %237, %235 ], [ 0, %197 ]
  %223 = getelementptr inbounds %19*, %19** %101, i64 %221
  %224 = load %19*, %19** %223, align 8
  %225 = icmp eq %19* %224, null
  br i1 %225, label %235, label %226

226:                                              ; preds = %219
  %227 = load %9*, %9** @727, align 8
  %228 = load %30**, %30*** %108, align 8
  %229 = getelementptr inbounds %30*, %30** %228, i64 %221
  %230 = load %30*, %30** %229, align 8
  %231 = getelementptr inbounds %30, %30* %230, i64 0, i32 4
  %232 = load i8*, i8** %231, align 8
  %233 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %227, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1224, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1222, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1223, i64 0, i64 0), i8* %232, i32 %1) #14
  %234 = load i64, i64* %76, align 8
  br label %235

235:                                              ; preds = %226, %219
  %236 = phi i64 [ %234, %226 ], [ %220, %219 ]
  %237 = add i32 %222, 1
  %238 = zext i32 %237 to i64
  %239 = icmp ugt i64 %236, %238
  br i1 %239, label %219, label %240

240:                                              ; preds = %235, %214, %305
  %241 = phi i64 [ %306, %305 ], [ %215, %214 ], [ %236, %235 ]
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %371, label %243

243:                                              ; preds = %240
  br i1 %54, label %310, label %244

244:                                              ; preds = %243, %280
  %245 = phi i64 [ %281, %280 ], [ %241, %243 ]
  %246 = phi i64 [ %283, %280 ], [ 0, %243 ]
  %247 = phi i32 [ %282, %280 ], [ 0, %243 ]
  %248 = getelementptr inbounds %19*, %19** %101, i64 %246
  %249 = load %19*, %19** %248, align 8
  %250 = icmp eq %19* %249, null
  br i1 %250, label %278, label %251

251:                                              ; preds = %244
  %252 = load %9*, %9** @727, align 8
  %253 = call i32 @redisGetReply(%9* %252, i8** nonnull %57) #14
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %327

255:                                              ; preds = %251
  %256 = load %30*, %30** %3, align 8
  %257 = getelementptr inbounds %30, %30* %256, i64 0, i32 0
  %258 = load i32, i32* %257, align 8
  %259 = icmp eq i32 %258, 3
  br i1 %259, label %269, label %260

260:                                              ; preds = %255
  %261 = load %1*, %1** @stderr, align 8
  %262 = load %30**, %30*** %108, align 8
  %263 = getelementptr inbounds %30*, %30** %262, i64 %246
  %264 = load %30*, %30** %263, align 8
  %265 = getelementptr inbounds %30, %30* %264, i64 0, i32 4
  %266 = load i8*, i8** %265, align 8
  %267 = call i32 (%1*, i8*, ...) @fprintf(%1* %261, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1226, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @355, i64 0, i64 0), i8* %266) #20
  %268 = load i8*, i8** %57, align 8
  br label %273

269:                                              ; preds = %255
  %270 = bitcast %30* %256 to i8*
  %271 = getelementptr inbounds %30, %30* %256, i64 0, i32 1
  %272 = load i64, i64* %271, align 8
  br label %273

273:                                              ; preds = %269, %260
  %274 = phi i8* [ %270, %269 ], [ %268, %260 ]
  %275 = phi i64 [ %272, %269 ], [ 0, %260 ]
  %276 = getelementptr inbounds i64, i64* %105, i64 %246
  store i64 %275, i64* %276, align 8
  call void @freeReplyObject(i8* %274) #14
  %277 = load i64, i64* %76, align 8
  br label %280

278:                                              ; preds = %244
  %279 = getelementptr inbounds i64, i64* %105, i64 %246
  store i64 0, i64* %279, align 8
  br label %280

280:                                              ; preds = %278, %273
  %281 = phi i64 [ %245, %278 ], [ %277, %273 ]
  %282 = add i32 %247, 1
  %283 = zext i32 %282 to i64
  %284 = icmp ugt i64 %281, %283
  br i1 %284, label %244, label %372

285:                                              ; preds = %196, %305
  %286 = phi i64 [ %306, %305 ], [ %191, %196 ]
  %287 = phi i64 [ %308, %305 ], [ 0, %196 ]
  %288 = phi i32 [ %307, %305 ], [ 0, %196 ]
  %289 = getelementptr inbounds %19*, %19** %101, i64 %287
  %290 = load %19*, %19** %289, align 8
  %291 = icmp eq %19* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %285
  %293 = getelementptr inbounds %19, %19* %290, i64 0, i32 1
  %294 = load i8*, i8** %293, align 8
  %295 = icmp eq i8* %294, null
  br i1 %295, label %305, label %296

296:                                              ; preds = %292
  %297 = load %9*, %9** @727, align 8
  %298 = load %30**, %30*** %108, align 8
  %299 = getelementptr inbounds %30*, %30** %298, i64 %287
  %300 = load %30*, %30** %299, align 8
  %301 = getelementptr inbounds %30, %30* %300, i64 0, i32 4
  %302 = load i8*, i8** %301, align 8
  %303 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %297, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1220, i64 0, i64 0), i8* nonnull %294, i8* %302) #14
  %304 = load i64, i64* %76, align 8
  br label %305

305:                                              ; preds = %296, %292, %285
  %306 = phi i64 [ %286, %292 ], [ %286, %285 ], [ %304, %296 ]
  %307 = add i32 %288, 1
  %308 = zext i32 %307 to i64
  %309 = icmp ugt i64 %306, %308
  br i1 %309, label %285, label %240

310:                                              ; preds = %243, %366
  %311 = phi i64 [ %367, %366 ], [ %241, %243 ]
  %312 = phi i64 [ %369, %366 ], [ 0, %243 ]
  %313 = phi i32 [ %368, %366 ], [ 0, %243 ]
  %314 = getelementptr inbounds %19*, %19** %101, i64 %312
  %315 = load %19*, %19** %314, align 8
  %316 = icmp eq %19* %315, null
  br i1 %316, label %321, label %317

317:                                              ; preds = %310
  %318 = getelementptr inbounds %19, %19* %315, i64 0, i32 1
  %319 = load i8*, i8** %318, align 8
  %320 = icmp eq i8* %319, null
  br i1 %320, label %321, label %323

321:                                              ; preds = %317, %310
  %322 = getelementptr inbounds i64, i64* %105, i64 %312
  store i64 0, i64* %322, align 8
  br label %366

323:                                              ; preds = %317
  %324 = load %9*, %9** @727, align 8
  %325 = call i32 @redisGetReply(%9* %324, i8** nonnull %57) #14
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %340, label %327

327:                                              ; preds = %251, %323
  %328 = phi i64 [ %312, %323 ], [ %246, %251 ]
  %329 = load %1*, %1** @stderr, align 8
  %330 = load %30**, %30*** %108, align 8
  %331 = getelementptr inbounds %30*, %30** %330, i64 %328
  %332 = load %30*, %30** %331, align 8
  %333 = getelementptr inbounds %30, %30* %332, i64 0, i32 4
  %334 = load i8*, i8** %333, align 8
  %335 = load %9*, %9** @727, align 8
  %336 = getelementptr inbounds %9, %9* %335, i64 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = getelementptr inbounds %9, %9* %335, i64 0, i32 2, i64 0
  %339 = call i32 (%1*, i8*, ...) @fprintf(%1* %329, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1225, i64 0, i64 0), i8* %334, i32 %337, i8* nonnull %338) #20
  call void @exit(i32 1) #19
  unreachable

340:                                              ; preds = %323
  %341 = load %30*, %30** %3, align 8
  %342 = getelementptr inbounds %30, %30* %341, i64 0, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = icmp eq i32 %343, 3
  br i1 %344, label %357, label %345

345:                                              ; preds = %340
  %346 = load %1*, %1** @stderr, align 8
  %347 = load %19*, %19** %314, align 8
  %348 = getelementptr inbounds %19, %19* %347, i64 0, i32 1
  %349 = load i8*, i8** %348, align 8
  %350 = load %30**, %30*** %108, align 8
  %351 = getelementptr inbounds %30*, %30** %350, i64 %312
  %352 = load %30*, %30** %351, align 8
  %353 = getelementptr inbounds %30, %30* %352, i64 0, i32 4
  %354 = load i8*, i8** %353, align 8
  %355 = call i32 (%1*, i8*, ...) @fprintf(%1* %346, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1226, i64 0, i64 0), i8* %349, i8* %354) #20
  %356 = load i8*, i8** %57, align 8
  br label %361

357:                                              ; preds = %340
  %358 = bitcast %30* %341 to i8*
  %359 = getelementptr inbounds %30, %30* %341, i64 0, i32 1
  %360 = load i64, i64* %359, align 8
  br label %361

361:                                              ; preds = %357, %345
  %362 = phi i8* [ %356, %345 ], [ %358, %357 ]
  %363 = phi i64 [ 0, %345 ], [ %360, %357 ]
  %364 = getelementptr inbounds i64, i64* %105, i64 %312
  store i64 %363, i64* %364, align 8
  call void @freeReplyObject(i8* %362) #14
  %365 = load i64, i64* %76, align 8
  br label %366

366:                                              ; preds = %361, %321
  %367 = phi i64 [ %365, %361 ], [ %311, %321 ]
  %368 = add i32 %313, 1
  %369 = zext i32 %368 to i64
  %370 = icmp ugt i64 %367, %369
  br i1 %370, label %310, label %372

371:                                              ; preds = %193, %194, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  br label %445

372:                                              ; preds = %280, %366
  %373 = phi i64 [ %367, %366 ], [ %281, %280 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %445, label %375

375:                                              ; preds = %372
  %376 = getelementptr inbounds %30, %30* %75, i64 0, i32 7
  br label %377

377:                                              ; preds = %375, %438
  %378 = phi i64 [ 0, %375 ], [ %442, %438 ]
  %379 = phi i64 [ %67, %375 ], [ %440, %438 ]
  %380 = phi i64 [ %66, %375 ], [ %439, %438 ]
  %381 = phi i32 [ 0, %375 ], [ %441, %438 ]
  %382 = getelementptr inbounds %19*, %19** %101, i64 %378
  %383 = load %19*, %19** %382, align 8
  %384 = icmp eq %19* %383, null
  br i1 %384, label %438, label %385

385:                                              ; preds = %377
  %386 = getelementptr inbounds i64, i64* %105, i64 %378
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %19, %19* %383, i64 0, i32 4
  %389 = bitcast i64* %388 to <2 x i64>*
  %390 = load <2 x i64>, <2 x i64>* %389, align 8
  %391 = insertelement <2 x i64> <i64 1, i64 undef>, i64 %387, i32 1
  %392 = add <2 x i64> %391, %390
  %393 = bitcast i64* %388 to <2 x i64>*
  store <2 x i64> %392, <2 x i64>* %393, align 8
  %394 = load %30**, %30*** %376, align 8
  %395 = getelementptr inbounds %30*, %30** %394, i64 %378
  %396 = load %30*, %30** %395, align 8
  %397 = getelementptr inbounds %30, %30* %396, i64 0, i32 3
  %398 = load i64, i64* %397, align 8
  %399 = add i64 %398, %380
  %400 = add i64 %379, 1
  %401 = getelementptr inbounds %19, %19* %383, i64 0, i32 3
  %402 = load i64, i64* %401, align 8
  %403 = load i64, i64* %386, align 8
  %404 = icmp ult i64 %402, %403
  br i1 %404, label %405, label %433

405:                                              ; preds = %385
  %406 = getelementptr inbounds %19, %19* %383, i64 0, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = getelementptr inbounds %30, %30* %396, i64 0, i32 4
  %409 = load i8*, i8** %408, align 8
  br i1 %54, label %410, label %413

410:                                              ; preds = %405
  %411 = getelementptr inbounds %19, %19* %383, i64 0, i32 2
  %412 = load i8*, i8** %411, align 8
  br label %413

413:                                              ; preds = %405, %410
  %414 = phi i8* [ %412, %410 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @739, i64 0, i64 0), %405 ]
  %415 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @1200, i64 0, i64 0), double %70, i8* %407, i8* %409, i64 %403, i8* %414)
  %416 = getelementptr inbounds %19, %19* %383, i64 0, i32 6
  %417 = load i8*, i8** %416, align 8
  %418 = icmp eq i8* %417, null
  br i1 %418, label %420, label %419

419:                                              ; preds = %413
  call void @sdsfree(i8* nonnull %417) #14
  br label %420

420:                                              ; preds = %413, %419
  %421 = load %30**, %30*** %376, align 8
  %422 = getelementptr inbounds %30*, %30** %421, i64 %378
  %423 = load %30*, %30** %422, align 8
  %424 = getelementptr inbounds %30, %30* %423, i64 0, i32 4
  %425 = load i8*, i8** %424, align 8
  %426 = call i8* @sdsnew(i8* %425) #14
  store i8* %426, i8** %416, align 8
  %427 = icmp eq i8* %426, null
  br i1 %427, label %428, label %431

428:                                              ; preds = %420
  %429 = load %1*, %1** @stderr, align 8
  %430 = call i64 @fwrite(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1201, i64 0, i64 0), i64 35, i64 1, %1* %429) #16
  call void @exit(i32 1) #19
  unreachable

431:                                              ; preds = %420
  %432 = load i64, i64* %386, align 8
  store i64 %432, i64* %401, align 8
  br label %433

433:                                              ; preds = %431, %385
  %434 = urem i64 %400, 1000000
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %436, label %438

436:                                              ; preds = %433
  %437 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1202, i64 0, i64 0), double %70, i64 %400)
  br label %438

438:                                              ; preds = %433, %436, %377
  %439 = phi i64 [ %380, %377 ], [ %399, %436 ], [ %399, %433 ]
  %440 = phi i64 [ %379, %377 ], [ %400, %436 ], [ %400, %433 ]
  %441 = add i32 %381, 1
  %442 = zext i32 %441 to i64
  %443 = load i64, i64* %76, align 8
  %444 = icmp ugt i64 %443, %442
  br i1 %444, label %377, label %445

445:                                              ; preds = %438, %371, %372
  %446 = phi i64 [ %66, %372 ], [ %66, %371 ], [ %439, %438 ]
  %447 = phi i64 [ %67, %372 ], [ %67, %371 ], [ %440, %438 ]
  %448 = icmp ne i64 %447, 0
  br i1 %448, label %449, label %458

449:                                              ; preds = %445
  %450 = urem i64 %447, 100
  %451 = icmp eq i64 %450, 0
  %452 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %453 = icmp ne i64 %452, 0
  %454 = and i1 %451, %453
  br i1 %454, label %455, label %458

455:                                              ; preds = %449
  %456 = trunc i64 %452 to i32
  %457 = call i32 @usleep(i32 %456) #14
  br label %458

458:                                              ; preds = %455, %449, %445
  %459 = bitcast %30* %71 to i8*
  call void @freeReplyObject(i8* %459) #14
  %460 = load i64, i64* %5, align 8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %58

462:                                              ; preds = %458
  %463 = icmp eq %19** %101, null
  br i1 %463, label %465, label %464

464:                                              ; preds = %462
  call void @zfree(i8* %99) #14
  br label %465

465:                                              ; preds = %462, %464
  %466 = icmp eq i64* %105, null
  br i1 %466, label %468, label %467

467:                                              ; preds = %465
  call void @zfree(i8* %103) #14
  br label %468

468:                                              ; preds = %465, %467
  %469 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.26, i64 0, i64 0))
  %470 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1203, i64 0, i64 0), i64 %447)
  %471 = icmp eq i64 %446, 0
  br i1 %471, label %476, label %472

472:                                              ; preds = %468
  %473 = uitofp i64 %446 to double
  %474 = uitofp i64 %447 to double
  %475 = fdiv double %473, %474
  br label %476

476:                                              ; preds = %468, %472
  %477 = phi double [ %475, %472 ], [ 0.000000e+00, %468 ]
  %478 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @1204, i64 0, i64 0), i64 %446, double %477)
  %479 = call %32* @dictGetIterator(%3* %7) #14
  %480 = call %6* @dictNext(%32* %479) #14
  %481 = icmp eq %6* %480, null
  br i1 %481, label %519, label %482

482:                                              ; preds = %476
  br i1 %54, label %483, label %502

483:                                              ; preds = %482, %499
  %484 = phi %6* [ %500, %499 ], [ %480, %482 ]
  %485 = getelementptr inbounds %6, %6* %484, i64 0, i32 1, i32 0
  %486 = bitcast i8** %485 to %19**
  %487 = load %19*, %19** %486, align 8
  %488 = getelementptr inbounds %19, %19* %487, i64 0, i32 6
  %489 = load i8*, i8** %488, align 8
  %490 = icmp eq i8* %489, null
  br i1 %490, label %499, label %491

491:                                              ; preds = %483
  %492 = getelementptr inbounds %19, %19* %487, i64 0, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = getelementptr inbounds %19, %19* %487, i64 0, i32 3
  %495 = load i64, i64* %494, align 8
  %496 = getelementptr inbounds %19, %19* %487, i64 0, i32 2
  %497 = load i8*, i8** %496, align 8
  %498 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1205, i64 0, i64 0), i8* %493, i8* nonnull %489, i64 %495, i8* %497)
  br label %499

499:                                              ; preds = %491, %483
  %500 = call %6* @dictNext(%32* %479) #14
  %501 = icmp eq %6* %500, null
  br i1 %501, label %519, label %483

502:                                              ; preds = %482, %516
  %503 = phi %6* [ %517, %516 ], [ %480, %482 ]
  %504 = getelementptr inbounds %6, %6* %503, i64 0, i32 1, i32 0
  %505 = bitcast i8** %504 to %19**
  %506 = load %19*, %19** %505, align 8
  %507 = getelementptr inbounds %19, %19* %506, i64 0, i32 6
  %508 = load i8*, i8** %507, align 8
  %509 = icmp eq i8* %508, null
  br i1 %509, label %516, label %510

510:                                              ; preds = %502
  %511 = getelementptr inbounds %19, %19* %506, i64 0, i32 0
  %512 = load i8*, i8** %511, align 8
  %513 = getelementptr inbounds %19, %19* %506, i64 0, i32 3
  %514 = load i64, i64* %513, align 8
  %515 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1205, i64 0, i64 0), i8* %512, i8* nonnull %508, i64 %514, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @739, i64 0, i64 0))
  br label %516

516:                                              ; preds = %502, %510
  %517 = call %6* @dictNext(%32* %479) #14
  %518 = icmp eq %6* %517, null
  br i1 %518, label %519, label %502

519:                                              ; preds = %516, %499, %476
  call void @dictReleaseIterator(%32* %479) #14
  %520 = call i32 @putchar(i32 10)
  %521 = call %32* @dictGetIterator(%3* %7) #14
  %522 = call %6* @dictNext(%32* %521) #14
  %523 = icmp eq %6* %522, null
  br i1 %523, label %600, label %524

524:                                              ; preds = %519
  %525 = uitofp i64 %447 to double
  br i1 %54, label %526, label %555

526:                                              ; preds = %524, %550
  %527 = phi %6* [ %553, %550 ], [ %522, %524 ]
  %528 = getelementptr inbounds %6, %6* %527, i64 0, i32 1, i32 0
  %529 = bitcast i8** %528 to %19**
  %530 = load %19*, %19** %529, align 8
  %531 = getelementptr inbounds %19, %19* %530, i64 0, i32 4
  %532 = load i64, i64* %531, align 8
  %533 = getelementptr inbounds %19, %19* %530, i64 0, i32 0
  %534 = load i8*, i8** %533, align 8
  %535 = getelementptr inbounds %19, %19* %530, i64 0, i32 5
  %536 = load i64, i64* %535, align 8
  %537 = getelementptr inbounds %19, %19* %530, i64 0, i32 2
  %538 = load i8*, i8** %537, align 8
  br i1 %448, label %539, label %543

539:                                              ; preds = %526
  %540 = uitofp i64 %532 to double
  %541 = fmul double %540, 1.000000e+02
  %542 = fdiv double %541, %525
  br label %543

543:                                              ; preds = %539, %526
  %544 = phi double [ %542, %539 ], [ 0.000000e+00, %526 ]
  %545 = icmp eq i64 %532, 0
  br i1 %545, label %550, label %546

546:                                              ; preds = %543
  %547 = uitofp i64 %536 to double
  %548 = uitofp i64 %532 to double
  %549 = fdiv double %547, %548
  br label %550

550:                                              ; preds = %546, %543
  %551 = phi double [ %549, %546 ], [ 0.000000e+00, %543 ]
  %552 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1206, i64 0, i64 0), i64 %532, i8* %534, i64 %536, i8* %538, double %544, double %551)
  %553 = call %6* @dictNext(%32* %521) #14
  %554 = icmp eq %6* %553, null
  br i1 %554, label %600, label %526

555:                                              ; preds = %524
  br i1 %448, label %556, label %579

556:                                              ; preds = %555, %574
  %557 = phi %6* [ %577, %574 ], [ %522, %555 ]
  %558 = getelementptr inbounds %6, %6* %557, i64 0, i32 1, i32 0
  %559 = bitcast i8** %558 to %19**
  %560 = load %19*, %19** %559, align 8
  %561 = getelementptr inbounds %19, %19* %560, i64 0, i32 4
  %562 = load i64, i64* %561, align 8
  %563 = getelementptr inbounds %19, %19* %560, i64 0, i32 0
  %564 = load i8*, i8** %563, align 8
  %565 = getelementptr inbounds %19, %19* %560, i64 0, i32 5
  %566 = load i64, i64* %565, align 8
  %567 = uitofp i64 %562 to double
  %568 = fmul double %567, 1.000000e+02
  %569 = fdiv double %568, %525
  %570 = icmp eq i64 %562, 0
  br i1 %570, label %574, label %571

571:                                              ; preds = %556
  %572 = uitofp i64 %566 to double
  %573 = fdiv double %572, %567
  br label %574

574:                                              ; preds = %571, %556
  %575 = phi double [ %573, %571 ], [ 0.000000e+00, %556 ]
  %576 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1206, i64 0, i64 0), i64 %562, i8* %564, i64 %566, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @739, i64 0, i64 0), double %569, double %575)
  %577 = call %6* @dictNext(%32* %521) #14
  %578 = icmp eq %6* %577, null
  br i1 %578, label %600, label %556

579:                                              ; preds = %555, %595
  %580 = phi %6* [ %598, %595 ], [ %522, %555 ]
  %581 = getelementptr inbounds %6, %6* %580, i64 0, i32 1, i32 0
  %582 = bitcast i8** %581 to %19**
  %583 = load %19*, %19** %582, align 8
  %584 = getelementptr inbounds %19, %19* %583, i64 0, i32 4
  %585 = load i64, i64* %584, align 8
  %586 = getelementptr inbounds %19, %19* %583, i64 0, i32 0
  %587 = load i8*, i8** %586, align 8
  %588 = getelementptr inbounds %19, %19* %583, i64 0, i32 5
  %589 = load i64, i64* %588, align 8
  %590 = icmp eq i64 %585, 0
  br i1 %590, label %595, label %591

591:                                              ; preds = %579
  %592 = uitofp i64 %589 to double
  %593 = uitofp i64 %585 to double
  %594 = fdiv double %592, %593
  br label %595

595:                                              ; preds = %579, %591
  %596 = phi double [ %594, %591 ], [ 0.000000e+00, %579 ]
  %597 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1206, i64 0, i64 0), i64 %585, i8* %587, i64 %589, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @739, i64 0, i64 0), double 0.000000e+00, double %596)
  %598 = call %6* @dictNext(%32* %521) #14
  %599 = icmp eq %6* %598, null
  br i1 %599, label %600, label %579

600:                                              ; preds = %595, %574, %550, %519
  call void @dictReleaseIterator(%32* %521) #14
  call void @dictRelease(%3* %7) #14
  call void @exit(i32 0) #19
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1352() unnamed_addr #12 {
  %1 = alloca %30*, align 8
  %2 = alloca [16 x i64], align 16
  %3 = alloca [16 x i8*], align 16
  %4 = alloca i64, align 8
  %5 = bitcast [16 x i64]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 128, i1 false)
  %6 = bitcast [16 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 128, i1 false)
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  store i64 0, i64* %4, align 8
  %8 = load %9*, %9** @727, align 8
  %9 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i64 0, i64 0)) #14
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %0
  %12 = bitcast i8* %9 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %18, label %15

15:                                               ; preds = %11, %0
  %16 = load %1*, %1** @stderr, align 8
  %17 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1207, i64 0, i64 0), i64 27, i64 1, %1* %16) #20
  tail call void @exit(i32 1) #19
  unreachable

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %9, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  tail call void @freeReplyObject(i8* nonnull %9) #14
  %22 = shl i64 %21, 32
  %23 = ashr exact i64 %22, 32
  %24 = tail call i32 @puts(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @str.23, i64 0, i64 0))
  %25 = tail call i32 @puts(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @str.24, i64 0, i64 0))
  %26 = tail call i32 @puts(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.25, i64 0, i64 0))
  %27 = uitofp i64 %23 to double
  %28 = bitcast %30** %1 to i8*
  %29 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 1
  %31 = bitcast i64* %30 to i8*
  %32 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 1
  %33 = bitcast i8** %32 to i8*
  %34 = bitcast %30** %1 to i8**
  %35 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 0
  %36 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 2
  %37 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 3
  %38 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 4
  %39 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 5
  %40 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 6
  %41 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 7
  %42 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 8
  %43 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 9
  %44 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 10
  %45 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 11
  %46 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 12
  %47 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 13
  %48 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 14
  %49 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 15
  br label %50

50:                                               ; preds = %230, %18
  %51 = phi i8* [ null, %18 ], [ %81, %230 ]
  %52 = phi i8* [ null, %18 ], [ %82, %230 ]
  %53 = phi i64* [ null, %18 ], [ %83, %230 ]
  %54 = phi i32 [ 0, %18 ], [ %84, %230 ]
  %55 = phi i64 [ 0, %18 ], [ %219, %230 ]
  %56 = uitofp i64 %55 to double
  %57 = fmul double %56, 1.000000e+02
  %58 = fdiv double %57, %27
  %59 = call fastcc %30* @1398(i64* nonnull %4)
  %60 = getelementptr inbounds %30, %30* %59, i64 0, i32 7
  %61 = load %30**, %30*** %60, align 8
  %62 = getelementptr inbounds %30*, %30** %61, i64 1
  %63 = load %30*, %30** %62, align 8
  %64 = getelementptr inbounds %30, %30* %63, i64 0, i32 6
  %65 = load i64, i64* %64, align 8
  %66 = zext i32 %54 to i64
  %67 = icmp ugt i64 %65, %66
  br i1 %67, label %68, label %79

68:                                               ; preds = %50
  %69 = shl i64 %65, 3
  %70 = call i8* @zrealloc(i8* %52, i64 %69) #14
  %71 = icmp eq i8* %70, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = load %1*, %1** @stderr, align 8
  %74 = call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @1199, i64 0, i64 0), i64 37, i64 1, %1* %73) #16
  call void @exit(i32 1) #19
  unreachable

75:                                               ; preds = %68
  %76 = bitcast i8* %70 to i64*
  %77 = load i64, i64* %64, align 8
  %78 = trunc i64 %77 to i32
  br label %79

79:                                               ; preds = %75, %50
  %80 = phi i64 [ %77, %75 ], [ %65, %50 ]
  %81 = phi i8* [ %70, %75 ], [ %51, %50 ]
  %82 = phi i8* [ %70, %75 ], [ %52, %50 ]
  %83 = phi i64* [ %76, %75 ], [ %53, %50 ]
  %84 = phi i32 [ %78, %75 ], [ %54, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %85 = icmp eq i64 %80, 0
  br i1 %85, label %154, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %30, %30* %63, i64 0, i32 7
  br label %90

88:                                               ; preds = %90
  %89 = icmp eq i64 %102, 0
  br i1 %89, label %154, label %104

90:                                               ; preds = %90, %86
  %91 = phi i64 [ 0, %86 ], [ %101, %90 ]
  %92 = phi i32 [ 0, %86 ], [ %100, %90 ]
  %93 = load %9*, %9** @727, align 8
  %94 = load %30**, %30*** %87, align 8
  %95 = getelementptr inbounds %30*, %30** %94, i64 %91
  %96 = load %30*, %30** %95, align 8
  %97 = getelementptr inbounds %30, %30* %96, i64 0, i32 4
  %98 = load i8*, i8** %97, align 8
  %99 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %93, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1229, i64 0, i64 0), i8* %98) #14
  %100 = add i32 %92, 1
  %101 = zext i32 %100 to i64
  %102 = load i64, i64* %64, align 8
  %103 = icmp ugt i64 %102, %101
  br i1 %103, label %90, label %88

104:                                              ; preds = %88, %148
  %105 = phi i64 [ %151, %148 ], [ 0, %88 ]
  %106 = phi i32 [ %150, %148 ], [ 0, %88 ]
  %107 = load %9*, %9** @727, align 8
  %108 = call i32 @redisGetReply(%9* %107, i8** nonnull %34) #14
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %122, label %110

110:                                              ; preds = %104
  %111 = load %1*, %1** @stderr, align 8
  %112 = load %30**, %30*** %87, align 8
  %113 = getelementptr inbounds %30*, %30** %112, i64 %105
  %114 = load %30*, %30** %113, align 8
  %115 = getelementptr inbounds %30, %30* %114, i64 0, i32 4
  %116 = load i8*, i8** %115, align 8
  %117 = load %9*, %9** @727, align 8
  %118 = getelementptr inbounds %9, %9* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %9, %9* %117, i64 0, i32 2, i64 0
  %121 = call i32 (%1*, i8*, ...) @fprintf(%1* %111, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1230, i64 0, i64 0), i8* %116, i32 %119, i8* nonnull %120) #20
  call void @exit(i32 1) #19
  unreachable

122:                                              ; preds = %104
  %123 = load %30*, %30** %1, align 8
  %124 = getelementptr inbounds %30, %30* %123, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 3
  br i1 %126, label %143, label %127

127:                                              ; preds = %122
  %128 = icmp eq i32 %125, 6
  %129 = load %1*, %1** @stderr, align 8
  br i1 %128, label %130, label %134

130:                                              ; preds = %127
  %131 = getelementptr inbounds %30, %30* %123, i64 0, i32 4
  %132 = load i8*, i8** %131, align 8
  %133 = call i32 (%1*, i8*, ...) @fprintf(%1* %129, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* %132) #20
  call void @exit(i32 1) #19
  unreachable

134:                                              ; preds = %127
  %135 = load %30**, %30*** %87, align 8
  %136 = getelementptr inbounds %30*, %30** %135, i64 %105
  %137 = load %30*, %30** %136, align 8
  %138 = getelementptr inbounds %30, %30* %137, i64 0, i32 4
  %139 = load i8*, i8** %138, align 8
  %140 = call i32 (%1*, i8*, ...) @fprintf(%1* %129, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1231, i64 0, i64 0), i8* %139) #20
  %141 = getelementptr inbounds i64, i64* %83, i64 %105
  store i64 0, i64* %141, align 8
  %142 = load i8*, i8** %34, align 8
  br label %148

143:                                              ; preds = %122
  %144 = bitcast %30* %123 to i8*
  %145 = getelementptr inbounds %30, %30* %123, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds i64, i64* %83, i64 %105
  store i64 %146, i64* %147, align 8
  br label %148

148:                                              ; preds = %143, %134
  %149 = phi i8* [ %142, %134 ], [ %144, %143 ]
  call void @freeReplyObject(i8* %149) #14
  %150 = add i32 %106, 1
  %151 = zext i32 %150 to i64
  %152 = load i64, i64* %64, align 8
  %153 = icmp ugt i64 %152, %151
  br i1 %153, label %104, label %155

154:                                              ; preds = %79, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %218

155:                                              ; preds = %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %156 = icmp eq i64 %152, 0
  br i1 %156, label %218, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %30, %30* %63, i64 0, i32 7
  br label %159

159:                                              ; preds = %157, %213
  %160 = phi i64 [ 0, %157 ], [ %215, %213 ]
  %161 = phi i64 [ %55, %157 ], [ %163, %213 ]
  %162 = phi i32 [ 0, %157 ], [ %214, %213 ]
  %163 = add i64 %161, 1
  %164 = urem i64 %163, 1000000
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %159
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1202, i64 0, i64 0), double %58, i64 %163)
  br label %168

168:                                              ; preds = %166, %159
  %169 = getelementptr inbounds i64, i64* %83, i64 %160
  %170 = load i64, i64* %169, align 8
  %171 = load i64, i64* %35, align 16
  %172 = icmp ugt i64 %170, %171
  br i1 %172, label %173, label %213

173:                                              ; preds = %168
  %174 = load i64, i64* %30, align 8
  %175 = icmp ugt i64 %170, %174
  br i1 %175, label %365, label %186

176:                                              ; preds = %404, %401, %398, %395, %392, %389, %386, %383, %380, %377, %374, %371, %368, %365
  %177 = phi i32 [ 1, %365 ], [ 2, %368 ], [ 3, %371 ], [ 4, %374 ], [ 5, %377 ], [ 6, %380 ], [ 7, %383 ], [ 8, %386 ], [ 9, %389 ], [ 10, %392 ], [ 11, %395 ], [ 12, %398 ], [ 13, %401 ], [ 14, %404 ]
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 %178
  %180 = load i64, i64* %179, align 8
  br label %181

181:                                              ; preds = %404, %176
  %182 = phi i64 [ %180, %176 ], [ %405, %404 ]
  %183 = phi i32 [ %177, %176 ], [ 15, %404 ]
  %184 = zext i32 %183 to i64
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %191

186:                                              ; preds = %173, %181
  %187 = phi i32 [ %183, %181 ], [ 0, %173 ]
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 %188
  %190 = load i8*, i8** %189, align 8
  call void @sdsfree(i8* %190) #14
  br label %195

191:                                              ; preds = %181
  %192 = load i8*, i8** %29, align 16
  call void @sdsfree(i8* %192) #14
  %193 = shl nuw nsw i64 %184, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* nonnull align 8 %31, i64 %193, i1 false)
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* nonnull align 8 %33, i64 %193, i1 false)
  %194 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 %184
  br label %195

195:                                              ; preds = %191, %186
  %196 = phi i8** [ %194, %191 ], [ %189, %186 ]
  %197 = phi i64 [ %184, %191 ], [ %188, %186 ]
  %198 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 %197
  %199 = load i64, i64* %169, align 8
  store i64 %199, i64* %198, align 8
  %200 = load %30**, %30*** %158, align 8
  %201 = getelementptr inbounds %30*, %30** %200, i64 %160
  %202 = load %30*, %30** %201, align 8
  %203 = getelementptr inbounds %30, %30* %202, i64 0, i32 4
  %204 = load i8*, i8** %203, align 8
  %205 = call i8* @sdsnew(i8* %204) #14
  store i8* %205, i8** %196, align 8
  %206 = load %30**, %30*** %158, align 8
  %207 = getelementptr inbounds %30*, %30** %206, i64 %160
  %208 = load %30*, %30** %207, align 8
  %209 = getelementptr inbounds %30, %30* %208, i64 0, i32 4
  %210 = load i8*, i8** %209, align 8
  %211 = load i64, i64* %169, align 8
  %212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @1227, i64 0, i64 0), double %58, i8* %210, i64 %211)
  br label %213

213:                                              ; preds = %168, %195
  %214 = add i32 %162, 1
  %215 = zext i32 %214 to i64
  %216 = load i64, i64* %64, align 8
  %217 = icmp ugt i64 %216, %215
  br i1 %217, label %159, label %218

218:                                              ; preds = %213, %154, %155
  %219 = phi i64 [ %55, %155 ], [ %55, %154 ], [ %163, %213 ]
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %230, label %221

221:                                              ; preds = %218
  %222 = urem i64 %219, 100
  %223 = icmp eq i64 %222, 0
  %224 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %225 = icmp ne i64 %224, 0
  %226 = and i1 %223, %225
  br i1 %226, label %227, label %230

227:                                              ; preds = %221
  %228 = trunc i64 %224 to i32
  %229 = call i32 @usleep(i32 %228) #14
  br label %230

230:                                              ; preds = %218, %227, %221
  %231 = bitcast %30* %59 to i8*
  call void @freeReplyObject(i8* %231) #14
  %232 = load i64, i64* %4, align 8
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %50

234:                                              ; preds = %230
  %235 = icmp eq i64* %83, null
  br i1 %235, label %237, label %236

236:                                              ; preds = %234
  call void @zfree(i8* %81) #14
  br label %237

237:                                              ; preds = %234, %236
  %238 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.26, i64 0, i64 0))
  %239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1203, i64 0, i64 0), i64 %219)
  %240 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 15
  %241 = load i64, i64* %240, align 8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %247, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 15
  %245 = load i8*, i8** %244, align 8
  %246 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %241, i8* %245)
  call void @sdsfree(i8* %245) #14
  br label %247

247:                                              ; preds = %237, %243
  %248 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 14
  %249 = load i64, i64* %248, align 16
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 14
  %253 = load i8*, i8** %252, align 16
  %254 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %249, i8* %253)
  call void @sdsfree(i8* %253) #14
  br label %255

255:                                              ; preds = %251, %247
  %256 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 13
  %257 = load i64, i64* %256, align 8
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 13
  %261 = load i8*, i8** %260, align 8
  %262 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %257, i8* %261)
  call void @sdsfree(i8* %261) #14
  br label %263

263:                                              ; preds = %259, %255
  %264 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 12
  %265 = load i64, i64* %264, align 16
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 12
  %269 = load i8*, i8** %268, align 16
  %270 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %265, i8* %269)
  call void @sdsfree(i8* %269) #14
  br label %271

271:                                              ; preds = %267, %263
  %272 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 11
  %273 = load i64, i64* %272, align 8
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %279, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 11
  %277 = load i8*, i8** %276, align 8
  %278 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %273, i8* %277)
  call void @sdsfree(i8* %277) #14
  br label %279

279:                                              ; preds = %275, %271
  %280 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 10
  %281 = load i64, i64* %280, align 16
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %287, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 10
  %285 = load i8*, i8** %284, align 16
  %286 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %281, i8* %285)
  call void @sdsfree(i8* %285) #14
  br label %287

287:                                              ; preds = %283, %279
  %288 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 9
  %289 = load i64, i64* %288, align 8
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %295, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 9
  %293 = load i8*, i8** %292, align 8
  %294 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %289, i8* %293)
  call void @sdsfree(i8* %293) #14
  br label %295

295:                                              ; preds = %291, %287
  %296 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 8
  %297 = load i64, i64* %296, align 16
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %303, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 8
  %301 = load i8*, i8** %300, align 16
  %302 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %297, i8* %301)
  call void @sdsfree(i8* %301) #14
  br label %303

303:                                              ; preds = %299, %295
  %304 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 7
  %305 = load i64, i64* %304, align 8
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %311, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 7
  %309 = load i8*, i8** %308, align 8
  %310 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %305, i8* %309)
  call void @sdsfree(i8* %309) #14
  br label %311

311:                                              ; preds = %307, %303
  %312 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 6
  %313 = load i64, i64* %312, align 16
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %319, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 6
  %317 = load i8*, i8** %316, align 16
  %318 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %313, i8* %317)
  call void @sdsfree(i8* %317) #14
  br label %319

319:                                              ; preds = %315, %311
  %320 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 5
  %321 = load i64, i64* %320, align 8
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %327, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 5
  %325 = load i8*, i8** %324, align 8
  %326 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %321, i8* %325)
  call void @sdsfree(i8* %325) #14
  br label %327

327:                                              ; preds = %323, %319
  %328 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 4
  %329 = load i64, i64* %328, align 16
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %335, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 4
  %333 = load i8*, i8** %332, align 16
  %334 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %329, i8* %333)
  call void @sdsfree(i8* %333) #14
  br label %335

335:                                              ; preds = %331, %327
  %336 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 3
  %337 = load i64, i64* %336, align 8
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %343, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 3
  %341 = load i8*, i8** %340, align 8
  %342 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %337, i8* %341)
  call void @sdsfree(i8* %341) #14
  br label %343

343:                                              ; preds = %339, %335
  %344 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 2
  %345 = load i64, i64* %344, align 16
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %351, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds [16 x i8*], [16 x i8*]* %3, i64 0, i64 2
  %349 = load i8*, i8** %348, align 16
  %350 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %345, i8* %349)
  call void @sdsfree(i8* %349) #14
  br label %351

351:                                              ; preds = %347, %343
  %352 = load i64, i64* %30, align 8
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %357, label %354

354:                                              ; preds = %351
  %355 = load i8*, i8** %32, align 8
  %356 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %352, i8* %355)
  call void @sdsfree(i8* %355) #14
  br label %357

357:                                              ; preds = %354, %351
  %358 = getelementptr inbounds [16 x i64], [16 x i64]* %2, i64 0, i64 0
  %359 = load i64, i64* %358, align 16
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %364, label %361

361:                                              ; preds = %357
  %362 = load i8*, i8** %29, align 16
  %363 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1228, i64 0, i64 0), i64 %359, i8* %362)
  call void @sdsfree(i8* %362) #14
  br label %364

364:                                              ; preds = %361, %357
  call void @exit(i32 0) #19
  unreachable

365:                                              ; preds = %173
  %366 = load i64, i64* %36, align 16
  %367 = icmp ugt i64 %170, %366
  br i1 %367, label %368, label %176

368:                                              ; preds = %365
  %369 = load i64, i64* %37, align 8
  %370 = icmp ugt i64 %170, %369
  br i1 %370, label %371, label %176

371:                                              ; preds = %368
  %372 = load i64, i64* %38, align 16
  %373 = icmp ugt i64 %170, %372
  br i1 %373, label %374, label %176

374:                                              ; preds = %371
  %375 = load i64, i64* %39, align 8
  %376 = icmp ugt i64 %170, %375
  br i1 %376, label %377, label %176

377:                                              ; preds = %374
  %378 = load i64, i64* %40, align 16
  %379 = icmp ugt i64 %170, %378
  br i1 %379, label %380, label %176

380:                                              ; preds = %377
  %381 = load i64, i64* %41, align 8
  %382 = icmp ugt i64 %170, %381
  br i1 %382, label %383, label %176

383:                                              ; preds = %380
  %384 = load i64, i64* %42, align 16
  %385 = icmp ugt i64 %170, %384
  br i1 %385, label %386, label %176

386:                                              ; preds = %383
  %387 = load i64, i64* %43, align 8
  %388 = icmp ugt i64 %170, %387
  br i1 %388, label %389, label %176

389:                                              ; preds = %386
  %390 = load i64, i64* %44, align 16
  %391 = icmp ugt i64 %170, %390
  br i1 %391, label %392, label %176

392:                                              ; preds = %389
  %393 = load i64, i64* %45, align 8
  %394 = icmp ugt i64 %170, %393
  br i1 %394, label %395, label %176

395:                                              ; preds = %392
  %396 = load i64, i64* %46, align 16
  %397 = icmp ugt i64 %170, %396
  br i1 %397, label %398, label %176

398:                                              ; preds = %395
  %399 = load i64, i64* %47, align 8
  %400 = icmp ugt i64 %170, %399
  br i1 %400, label %401, label %176

401:                                              ; preds = %398
  %402 = load i64, i64* %48, align 16
  %403 = icmp ugt i64 %170, %402
  br i1 %403, label %404, label %176

404:                                              ; preds = %401
  %405 = load i64, i64* %49, align 8
  %406 = icmp ugt i64 %170, %405
  br i1 %406, label %181, label %176
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1353() unnamed_addr #12 {
  %1 = alloca [64 x i8], align 16
  %2 = getelementptr inbounds [64 x i8], [64 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #14
  %3 = load %9*, %9** @727, align 8
  %4 = call %30* (%9*, i8*, ...) @1388(%9* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0))
  %5 = getelementptr inbounds %30, %30* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %1, i64 0, i64 1
  br label %15

10:                                               ; preds = %215, %0
  %11 = phi %30* [ %4, %0 ], [ %222, %215 ]
  %12 = getelementptr inbounds %30, %30* %11, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1232, i64 0, i64 0), i8* %13)
  call void @exit(i32 1) #19
  unreachable

15:                                               ; preds = %8, %215
  %16 = phi %30* [ %4, %8 ], [ %222, %215 ]
  %17 = phi i32 [ 0, %8 ], [ %19, %215 ]
  %18 = phi i64 [ 0, %8 ], [ %187, %215 ]
  %19 = add nuw nsw i32 %17, 1
  %20 = urem i32 %17, 20
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %15
  %23 = call i32 @puts(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @str.27, i64 0, i64 0))
  br label %24

24:                                               ; preds = %22, %15
  %25 = getelementptr inbounds %30, %30* %16, i64 0, i32 4
  %26 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 0) #14
  %27 = load i8*, i8** %25, align 8
  %28 = call fastcc i64 @1367(i8* %27, i8* nonnull %2)
  %29 = icmp eq i64 %28, -9223372036854775808
  %30 = select i1 %29, i64 0, i64 %28
  %31 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 1) #14
  %32 = load i8*, i8** %25, align 8
  %33 = call fastcc i64 @1367(i8* %32, i8* nonnull %2)
  %34 = icmp eq i64 %33, -9223372036854775808
  %35 = select i1 %34, i64 0, i64 %33
  %36 = add nsw i64 %35, %30
  %37 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 2) #14
  %38 = load i8*, i8** %25, align 8
  %39 = call fastcc i64 @1367(i8* %38, i8* nonnull %2)
  %40 = icmp eq i64 %39, -9223372036854775808
  %41 = select i1 %40, i64 0, i64 %39
  %42 = add nsw i64 %41, %36
  %43 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 3) #14
  %44 = load i8*, i8** %25, align 8
  %45 = call fastcc i64 @1367(i8* %44, i8* nonnull %2)
  %46 = icmp eq i64 %45, -9223372036854775808
  %47 = select i1 %46, i64 0, i64 %45
  %48 = add nsw i64 %47, %42
  %49 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 4) #14
  %50 = load i8*, i8** %25, align 8
  %51 = call fastcc i64 @1367(i8* %50, i8* nonnull %2)
  %52 = icmp eq i64 %51, -9223372036854775808
  %53 = select i1 %52, i64 0, i64 %51
  %54 = add nsw i64 %53, %48
  %55 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 5) #14
  %56 = load i8*, i8** %25, align 8
  %57 = call fastcc i64 @1367(i8* %56, i8* nonnull %2)
  %58 = icmp eq i64 %57, -9223372036854775808
  %59 = select i1 %58, i64 0, i64 %57
  %60 = add nsw i64 %59, %54
  %61 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 6) #14
  %62 = load i8*, i8** %25, align 8
  %63 = call fastcc i64 @1367(i8* %62, i8* nonnull %2)
  %64 = icmp eq i64 %63, -9223372036854775808
  %65 = select i1 %64, i64 0, i64 %63
  %66 = add nsw i64 %65, %60
  %67 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 7) #14
  %68 = load i8*, i8** %25, align 8
  %69 = call fastcc i64 @1367(i8* %68, i8* nonnull %2)
  %70 = icmp eq i64 %69, -9223372036854775808
  %71 = select i1 %70, i64 0, i64 %69
  %72 = add nsw i64 %71, %66
  %73 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 8) #14
  %74 = load i8*, i8** %25, align 8
  %75 = call fastcc i64 @1367(i8* %74, i8* nonnull %2)
  %76 = icmp eq i64 %75, -9223372036854775808
  %77 = select i1 %76, i64 0, i64 %75
  %78 = add nsw i64 %77, %72
  %79 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 9) #14
  %80 = load i8*, i8** %25, align 8
  %81 = call fastcc i64 @1367(i8* %80, i8* nonnull %2)
  %82 = icmp eq i64 %81, -9223372036854775808
  %83 = select i1 %82, i64 0, i64 %81
  %84 = add nsw i64 %83, %78
  %85 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 10) #14
  %86 = load i8*, i8** %25, align 8
  %87 = call fastcc i64 @1367(i8* %86, i8* nonnull %2)
  %88 = icmp eq i64 %87, -9223372036854775808
  %89 = select i1 %88, i64 0, i64 %87
  %90 = add nsw i64 %89, %84
  %91 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 11) #14
  %92 = load i8*, i8** %25, align 8
  %93 = call fastcc i64 @1367(i8* %92, i8* nonnull %2)
  %94 = icmp eq i64 %93, -9223372036854775808
  %95 = select i1 %94, i64 0, i64 %93
  %96 = add nsw i64 %95, %90
  %97 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 12) #14
  %98 = load i8*, i8** %25, align 8
  %99 = call fastcc i64 @1367(i8* %98, i8* nonnull %2)
  %100 = icmp eq i64 %99, -9223372036854775808
  %101 = select i1 %100, i64 0, i64 %99
  %102 = add nsw i64 %101, %96
  %103 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 13) #14
  %104 = load i8*, i8** %25, align 8
  %105 = call fastcc i64 @1367(i8* %104, i8* nonnull %2)
  %106 = icmp eq i64 %105, -9223372036854775808
  %107 = select i1 %106, i64 0, i64 %105
  %108 = add nsw i64 %107, %102
  %109 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 14) #14
  %110 = load i8*, i8** %25, align 8
  %111 = call fastcc i64 @1367(i8* %110, i8* nonnull %2)
  %112 = icmp eq i64 %111, -9223372036854775808
  %113 = select i1 %112, i64 0, i64 %111
  %114 = add nsw i64 %113, %108
  %115 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 15) #14
  %116 = load i8*, i8** %25, align 8
  %117 = call fastcc i64 @1367(i8* %116, i8* nonnull %2)
  %118 = icmp eq i64 %117, -9223372036854775808
  %119 = select i1 %118, i64 0, i64 %117
  %120 = add nsw i64 %119, %114
  %121 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 16) #14
  %122 = load i8*, i8** %25, align 8
  %123 = call fastcc i64 @1367(i8* %122, i8* nonnull %2)
  %124 = icmp eq i64 %123, -9223372036854775808
  %125 = select i1 %124, i64 0, i64 %123
  %126 = add nsw i64 %125, %120
  %127 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 17) #14
  %128 = load i8*, i8** %25, align 8
  %129 = call fastcc i64 @1367(i8* %128, i8* nonnull %2)
  %130 = icmp eq i64 %129, -9223372036854775808
  %131 = select i1 %130, i64 0, i64 %129
  %132 = add nsw i64 %131, %126
  %133 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 18) #14
  %134 = load i8*, i8** %25, align 8
  %135 = call fastcc i64 @1367(i8* %134, i8* nonnull %2)
  %136 = icmp eq i64 %135, -9223372036854775808
  %137 = select i1 %136, i64 0, i64 %135
  %138 = add nsw i64 %137, %132
  %139 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1233, i64 0, i64 0), i32 19) #14
  %140 = load i8*, i8** %25, align 8
  %141 = call fastcc i64 @1367(i8* %140, i8* nonnull %2)
  %142 = icmp eq i64 %141, -9223372036854775808
  %143 = select i1 %142, i64 0, i64 %141
  %144 = add nsw i64 %143, %138
  %145 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1234, i64 0, i64 0), i64 %144) #14
  %146 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1235, i64 0, i64 0), i8* nonnull %2)
  %147 = load i8*, i8** %25, align 8
  %148 = call fastcc i64 @1367(i8* %147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1236, i64 0, i64 0))
  %149 = icmp slt i64 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %24
  store i8 45, i8* %2, align 16
  %151 = sub nsw i64 0, %148
  br label %152

152:                                              ; preds = %150, %24
  %153 = phi i8* [ %9, %150 ], [ %2, %24 ]
  %154 = phi i64 [ %151, %150 ], [ %148, %24 ]
  %155 = icmp slt i64 %154, 1024
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = call i32 (i8*, i8*, ...) @sprintf(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @751, i64 0, i64 0), i64 %154) #14
  br label %176

158:                                              ; preds = %152
  %159 = icmp slt i64 %154, 1048576
  br i1 %159, label %160, label %164

160:                                              ; preds = %158
  %161 = sitofp i64 %154 to double
  %162 = fmul double %161, 0x3F50000000000000
  %163 = call i32 (i8*, i8*, ...) @sprintf(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @752, i64 0, i64 0), double %162) #14
  br label %176

164:                                              ; preds = %158
  %165 = icmp slt i64 %154, 1073741824
  br i1 %165, label %166, label %170

166:                                              ; preds = %164
  %167 = sitofp i64 %154 to double
  %168 = fmul double %167, 0x3EB0000000000000
  %169 = call i32 (i8*, i8*, ...) @sprintf(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @753, i64 0, i64 0), double %168) #14
  br label %176

170:                                              ; preds = %164
  %171 = icmp slt i64 %154, 1099511627776
  br i1 %171, label %172, label %176

172:                                              ; preds = %170
  %173 = sitofp i64 %154 to double
  %174 = fmul double %173, 0x3E10000000000000
  %175 = call i32 (i8*, i8*, ...) @sprintf(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @754, i64 0, i64 0), double %174) #14
  br label %176

176:                                              ; preds = %156, %160, %166, %170, %172
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1237, i64 0, i64 0), i8* nonnull %2)
  %178 = load i8*, i8** %25, align 8
  %179 = call fastcc i64 @1367(i8* %178, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1238, i64 0, i64 0))
  %180 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1234, i64 0, i64 0), i64 %179) #14
  %181 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1239, i64 0, i64 0), i8* nonnull %2)
  %182 = load i8*, i8** %25, align 8
  %183 = call fastcc i64 @1367(i8* %182, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1240, i64 0, i64 0))
  %184 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1234, i64 0, i64 0), i64 %183) #14
  %185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1237, i64 0, i64 0), i8* nonnull %2)
  %186 = load i8*, i8** %25, align 8
  %187 = call fastcc i64 @1367(i8* %186, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1241, i64 0, i64 0))
  %188 = icmp eq i64 %18, 0
  %189 = sub nsw i64 %187, %18
  %190 = select i1 %188, i64 0, i64 %189
  %191 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1242, i64 0, i64 0), i64 %187, i64 %190) #14
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1243, i64 0, i64 0), i8* nonnull %2)
  %193 = load i8*, i8** %25, align 8
  %194 = call fastcc i64 @1367(i8* %193, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1244, i64 0, i64 0))
  %195 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1234, i64 0, i64 0), i64 %194) #14
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1245, i64 0, i64 0), i8* nonnull %2)
  %197 = load i8*, i8** %25, align 8
  %198 = call fastcc i64 @1367(i8* %197, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1246, i64 0, i64 0))
  %199 = load i8*, i8** %25, align 8
  %200 = call fastcc i64 @1367(i8* %199, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1247, i64 0, i64 0))
  %201 = shl i64 %200, 1
  %202 = or i64 %201, %198
  %203 = load i8*, i8** %25, align 8
  %204 = call fastcc i64 @1367(i8* %203, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1248, i64 0, i64 0))
  %205 = shl i64 %204, 2
  %206 = or i64 %202, %205
  switch i64 %206, label %215 [
    i64 4, label %213
    i64 1, label %207
    i64 2, label %209
    i64 3, label %211
  ]

207:                                              ; preds = %176
  %208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @460, i64 0, i64 0))
  br label %215

209:                                              ; preds = %176
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1249, i64 0, i64 0))
  br label %215

211:                                              ; preds = %176
  %212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1250, i64 0, i64 0))
  br label %215

213:                                              ; preds = %176
  %214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1251, i64 0, i64 0))
  br label %215

215:                                              ; preds = %176, %213, %211, %209, %207
  %216 = call i32 @putchar(i32 10)
  %217 = bitcast %30* %16 to i8*
  call void @freeReplyObject(i8* %217) #14
  %218 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %219 = trunc i64 %218 to i32
  %220 = call i32 @usleep(i32 %219) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #14
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #14
  %221 = load %9*, %9** @727, align 8
  %222 = call %30* (%9*, i8*, ...) @1388(%9* %221, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0))
  %223 = getelementptr inbounds %30, %30* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = icmp eq i32 %224, 6
  br i1 %225, label %10, label %15
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1354() unnamed_addr #12 {
  br label %1

1:                                                ; preds = %57, %0
  %2 = phi i64 [ 0, %0 ], [ %31, %57 ]
  %3 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 31), align 8
  %4 = icmp eq i8* %3, null
  %5 = load %9*, %9** @727, align 8
  br i1 %4, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1252, i64 0, i64 0), i64 %2, i8* nonnull %3) #14
  br label %10

8:                                                ; preds = %1
  %9 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1208, i64 0, i64 0), i64 %2) #14
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi i8* [ %7, %6 ], [ %9, %8 ]
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.28, i64 0, i64 0))
  tail call void @exit(i32 1) #19
  unreachable

15:                                               ; preds = %10
  %16 = bitcast i8* %11 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %11, i64 32
  %21 = bitcast i8* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1232, i64 0, i64 0), i8* %22)
  tail call void @exit(i32 1) #19
  unreachable

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %11, i64 56
  %26 = bitcast i8* %25 to %30***
  %27 = load %30**, %30*** %26, align 8
  %28 = load %30*, %30** %27, align 8
  %29 = getelementptr inbounds %30, %30* %28, i64 0, i32 4
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i64 @strtoull(i8* nocapture %30, i8** null, i32 10) #14
  %32 = load %30**, %30*** %26, align 8
  %33 = getelementptr inbounds %30*, %30** %32, i64 1
  %34 = load %30*, %30** %33, align 8
  %35 = getelementptr inbounds %30, %30* %34, i64 0, i32 6
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %24, %38
  %39 = phi %30* [ %53, %38 ], [ %34, %24 ]
  %40 = phi i64 [ %50, %38 ], [ 0, %24 ]
  %41 = phi i32 [ %49, %38 ], [ 0, %24 ]
  %42 = getelementptr inbounds %30, %30* %39, i64 0, i32 7
  %43 = load %30**, %30*** %42, align 8
  %44 = getelementptr inbounds %30*, %30** %43, i64 %40
  %45 = load %30*, %30** %44, align 8
  %46 = getelementptr inbounds %30, %30* %45, i64 0, i32 4
  %47 = load i8*, i8** %46, align 8
  %48 = tail call i32 @puts(i8* %47)
  %49 = add i32 %41, 1
  %50 = zext i32 %49 to i64
  %51 = load %30**, %30*** %26, align 8
  %52 = getelementptr inbounds %30*, %30** %51, i64 1
  %53 = load %30*, %30** %52, align 8
  %54 = getelementptr inbounds %30, %30* %53, i64 0, i32 6
  %55 = load i64, i64* %54, align 8
  %56 = icmp ugt i64 %55, %50
  br i1 %56, label %38, label %57

57:                                               ; preds = %38, %24
  tail call void @freeReplyObject(i8* nonnull %11) #14
  %58 = icmp eq i64 %31, 0
  br i1 %58, label %59, label %1

59:                                               ; preds = %57
  tail call void @exit(i32 0) #19
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1355() unnamed_addr #12 {
  %1 = alloca %15, align 8
  %2 = alloca %15, align 8
  %3 = alloca %30*, align 8
  %4 = alloca [128 x i8], align 16
  %5 = alloca [6 x i8], align 1
  %6 = bitcast %30** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #14
  %8 = tail call i64 @time(i64* null) #14
  %9 = tail call i32 @getpid() #14
  %10 = trunc i64 %8 to i32
  %11 = xor i32 %9, %10
  tail call void @srand(i32 %11) #14
  %12 = bitcast %15* %2 to i8*
  %13 = getelementptr inbounds %15, %15* %2, i64 0, i32 0
  %14 = getelementptr inbounds %15, %15* %2, i64 0, i32 1
  %15 = bitcast %15* %1 to i8*
  %16 = getelementptr inbounds %15, %15* %1, i64 0, i32 0
  %17 = getelementptr inbounds %15, %15* %1, i64 0, i32 1
  %18 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 0
  %19 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 5
  %20 = bitcast %30** %3 to i8**
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 1
  %22 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 2
  %23 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 3
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 4
  br label %25

25:                                               ; preds = %143, %0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %26 = call i32 @gettimeofday(%15* nonnull %2, %31* null) #14
  %27 = load i64, i64* %13, align 8
  %28 = mul nsw i64 %27, 1000000
  %29 = load i64, i64* %14, align 8
  %30 = add nsw i64 %28, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  %31 = sdiv i64 %30, 1000
  br label %32

32:                                               ; preds = %136, %25
  %33 = phi i64 [ 0, %25 ], [ %131, %136 ]
  %34 = phi i64 [ 0, %25 ], [ %132, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %35 = call i32 @gettimeofday(%15* nonnull %1, %31* null) #14
  %36 = load i64, i64* %16, align 8
  %37 = mul nsw i64 %36, 1000000
  %38 = load i64, i64* %17, align 8
  %39 = add nsw i64 %37, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  %40 = sdiv i64 %39, 1000
  %41 = sub nsw i64 %40, %31
  %42 = icmp slt i64 %41, 1000
  br i1 %42, label %43, label %143

43:                                               ; preds = %32, %43
  %44 = phi i32 [ %81, %43 ], [ 0, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %18) #14
  store i8 0, i8* %19, align 1
  %45 = call i32 @rand() #14
  %46 = srem i32 %45, 57
  %47 = trunc i32 %46 to i8
  %48 = add i8 %47, 65
  store i8 %48, i8* %18, align 1
  %49 = call i32 @rand() #14
  %50 = srem i32 %49, 57
  %51 = trunc i32 %50 to i8
  %52 = add i8 %51, 65
  store i8 %52, i8* %21, align 1
  %53 = call i32 @rand() #14
  %54 = srem i32 %53, 57
  %55 = trunc i32 %54 to i8
  %56 = add i8 %55, 65
  store i8 %56, i8* %22, align 1
  %57 = call i32 @rand() #14
  %58 = srem i32 %57, 57
  %59 = trunc i32 %58 to i8
  %60 = add i8 %59, 65
  store i8 %60, i8* %23, align 1
  %61 = call i32 @rand() #14
  %62 = srem i32 %61, 57
  %63 = trunc i32 %62 to i8
  %64 = add i8 %63, 65
  store i8 %64, i8* %24, align 1
  %65 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 20), align 8
  %66 = add i64 %65, 1
  %67 = call i32 @rand() #14
  %68 = sitofp i32 %67 to double
  %69 = fdiv double %68, 0x41DFFFFFFFC00000
  %70 = sitofp i64 %66 to double
  %71 = call double @pow(double %70, double 7.200000e+00) #14
  %72 = fadd double %71, -1.000000e+00
  %73 = fmul double %69, %72
  %74 = fadd double %73, 1.000000e+00
  %75 = call double @pow(double %74, double 0x3FC1C71C71C71C72) #14
  %76 = fptosi double %75 to i64
  %77 = sub i64 %66, %76
  %78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @755, i64 0, i64 0), i64 %77) #14
  %79 = load %9*, %9** @727, align 8
  %80 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1253, i64 0, i64 0), i8* nonnull %7, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %18) #14
  %81 = add nuw nsw i32 %44, 1
  %82 = icmp eq i32 %81, 250
  br i1 %82, label %83, label %43

83:                                               ; preds = %43, %83
  %84 = phi i32 [ %87, %83 ], [ 0, %43 ]
  %85 = load %9*, %9** @727, align 8
  %86 = call i32 @redisGetReply(%9* %85, i8** nonnull %20) #14
  %87 = add nuw nsw i32 %84, 1
  %88 = icmp eq i32 %87, 250
  br i1 %88, label %91, label %83

89:                                               ; preds = %91
  %90 = load %9*, %9** @727, align 8
  br label %111

91:                                               ; preds = %83, %91
  %92 = phi i32 [ %109, %91 ], [ 0, %83 ]
  %93 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 20), align 8
  %94 = add i64 %93, 1
  %95 = call i32 @rand() #14
  %96 = sitofp i32 %95 to double
  %97 = fdiv double %96, 0x41DFFFFFFFC00000
  %98 = sitofp i64 %94 to double
  %99 = call double @pow(double %98, double 7.200000e+00) #14
  %100 = fadd double %99, -1.000000e+00
  %101 = fmul double %97, %100
  %102 = fadd double %101, 1.000000e+00
  %103 = call double @pow(double %102, double 0x3FC1C71C71C71C72) #14
  %104 = fptosi double %103 to i64
  %105 = sub i64 %94, %104
  %106 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @755, i64 0, i64 0), i64 %105) #14
  %107 = load %9*, %9** @727, align 8
  %108 = call i32 (%9*, i8*, ...) @redisAppendCommand(%9* %107, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1254, i64 0, i64 0), i8* nonnull %7) #14
  %109 = add nuw nsw i32 %92, 1
  %110 = icmp eq i32 %109, 250
  br i1 %110, label %89, label %91

111:                                              ; preds = %130, %89
  %112 = phi %9* [ %90, %89 ], [ %134, %130 ]
  %113 = phi i64 [ %34, %89 ], [ %132, %130 ]
  %114 = phi i64 [ %33, %89 ], [ %131, %130 ]
  %115 = phi i32 [ 0, %89 ], [ %133, %130 ]
  %116 = call i32 @redisGetReply(%9* %112, i8** nonnull %20) #14
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %111
  %119 = load %30*, %30** %3, align 8
  %120 = getelementptr inbounds %30, %30* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  switch i32 %121, label %128 [
    i32 6, label %122
    i32 4, label %126
  ]

122:                                              ; preds = %118
  %123 = getelementptr inbounds %30, %30* %119, i64 0, i32 4
  %124 = load i8*, i8** %123, align 8
  %125 = call i32 @puts(i8* %124)
  br label %130

126:                                              ; preds = %118
  %127 = add nsw i64 %113, 1
  br label %130

128:                                              ; preds = %118
  %129 = add nsw i64 %114, 1
  br label %130

130:                                              ; preds = %111, %128, %126, %122
  %131 = phi i64 [ %129, %128 ], [ %114, %126 ], [ %114, %122 ], [ %114, %111 ]
  %132 = phi i64 [ %113, %128 ], [ %127, %126 ], [ %113, %122 ], [ %113, %111 ]
  %133 = add nuw nsw i32 %115, 1
  %134 = load %9*, %9** @727, align 8
  %135 = icmp eq i32 %133, 250
  br i1 %135, label %136, label %111

136:                                              ; preds = %130
  %137 = getelementptr inbounds %9, %9* %134, i64 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %32, label %140

140:                                              ; preds = %136
  %141 = load %1*, %1** @stderr, align 8
  %142 = call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1255, i64 0, i64 0), i64 26, i64 1, %1* %141) #16
  call void @exit(i32 1) #19
  unreachable

143:                                              ; preds = %32
  %144 = add nsw i64 %34, %33
  %145 = sitofp i64 %33 to double
  %146 = sitofp i64 %144 to double
  %147 = fdiv double %145, %146
  %148 = fmul double %147, 1.000000e+02
  %149 = sitofp i64 %34 to double
  %150 = fdiv double %149, %146
  %151 = fmul double %150, 1.000000e+02
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1256, i64 0, i64 0), i64 %144, i64 %33, double %148, i64 %34, double %151)
  br label %25
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1356() unnamed_addr #12 {
  %1 = alloca %15, align 8
  %2 = alloca %15, align 8
  %3 = alloca %15, align 8
  %4 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 30), align 4
  %5 = mul nsw i32 %4, 1000000
  %6 = sext i32 %5 to i64
  %7 = bitcast %15* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = call i32 @gettimeofday(%15* nonnull %3, %31* null) #14
  %9 = getelementptr inbounds %15, %15* %3, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = mul nsw i64 %10, 1000000
  %12 = getelementptr inbounds %15, %15* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  %14 = add i64 %13, %6
  %15 = add i64 %14, %11
  %16 = tail call void (i32)* @signal(i32 2, void (i32)* nonnull @1399) #14
  %17 = bitcast %15* %2 to i8*
  %18 = getelementptr inbounds %15, %15* %2, i64 0, i32 0
  %19 = getelementptr inbounds %15, %15* %2, i64 0, i32 1
  %20 = bitcast %15* %1 to i8*
  %21 = getelementptr inbounds %15, %15* %1, i64 0, i32 0
  %22 = getelementptr inbounds %15, %15* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %45, %0
  %24 = phi i64 [ %39, %45 ], [ 0, %0 ]
  %25 = phi i64 [ %46, %45 ], [ 0, %0 ]
  br label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %39, %26 ], [ %24, %23 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  %28 = call i32 @gettimeofday(%15* nonnull %2, %31* null) #14
  %29 = load i64, i64* %18, align 8
  %30 = load i64, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  %31 = call i32 @gettimeofday(%15* nonnull %1, %31* null) #14
  %32 = load i64, i64* %21, align 8
  %33 = mul nsw i64 %32, 1000000
  %34 = load i64, i64* %22, align 8
  %35 = add nsw i64 %33, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  %36 = mul i64 %29, -1000000
  %37 = sub i64 %36, %30
  %38 = add i64 %37, %35
  %39 = add nuw nsw i64 %27, 1
  %40 = icmp slt i64 %38, 1
  br i1 %40, label %26, label %41

41:                                               ; preds = %26
  %42 = icmp sgt i64 %38, %25
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1257, i64 0, i64 0), i64 %38)
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %38, %43 ], [ %25, %41 ]
  %47 = load volatile i32, i32* @1258, align 4
  %48 = icmp ne i32 %47, 0
  %49 = icmp sgt i64 %35, %15
  %50 = or i1 %49, %48
  br i1 %50, label %51, label %23

51:                                               ; preds = %45
  %52 = sitofp i32 %5 to double
  %53 = sitofp i64 %39 to double
  %54 = fdiv double %52, %53
  %55 = fmul double %54, 1.000000e+03
  %56 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @1259, i64 0, i64 0), i64 %39, double %54, double %55)
  %57 = sitofp i64 %46 to double
  %58 = fdiv double %57, %54
  %59 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @1260, i64 0, i64 0), double %58)
  tail call void @exit(i32 0) #19
  unreachable
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @1357() unnamed_addr #0 {
  %1 = alloca %15, align 8
  %2 = alloca %15, align 8
  %3 = alloca %23, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  %7 = bitcast %23* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  store i32 271, i32* @1277, align 4
  %8 = tail call i8* @zmalloc(i64 8672) #14
  store i8* %8, i8** bitcast (%23** @1278 to i8**), align 8
  %9 = getelementptr inbounds %23, %23* %3, i64 0, i32 1
  %10 = getelementptr inbounds %23, %23* %3, i64 0, i32 2
  %11 = bitcast i8*** %10 to i8**
  %12 = bitcast i8*** %10 to i64**
  %13 = getelementptr inbounds %23, %23* %3, i64 0, i32 3
  %14 = bitcast i8** %13 to i64*
  %15 = getelementptr inbounds %23, %23* %3, i64 0, i32 0
  %16 = getelementptr inbounds %23, %23* %3, i64 0, i32 4
  br label %17

17:                                               ; preds = %17, %0
  %18 = phi i64 [ 0, %0 ], [ %28, %17 ]
  store i32 1, i32* %9, align 4
  %19 = tail call i8* @zmalloc(i64 8) #14
  store i8* %19, i8** %11, align 8
  %20 = tail call i8* @sdsempty() #14
  %21 = getelementptr inbounds [15 x i8*], [15 x i8*]* @1280, i64 0, i64 %18
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1279, i64 0, i64 0), i8* %22) #14
  %24 = bitcast i8* %19 to i8**
  store i8* %23, i8** %24, align 8
  %25 = load i64*, i64** %12, align 8
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %14, align 8
  store i32 2, i32* %15, align 8
  store %0* null, %0** %16, align 8
  %27 = load %23*, %23** @1278, align 8
  %28 = add nuw nsw i64 %18, 1
  %29 = getelementptr inbounds %23, %23* %27, i64 %18
  %30 = bitcast %23* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %7, i64 32, i1 false) #14
  %31 = icmp eq i64 %28, 15
  br i1 %31, label %32, label %17

32:                                               ; preds = %17, %32
  %33 = phi i64 [ %45, %32 ], [ 0, %17 ]
  %34 = phi i64 [ %42, %32 ], [ 15, %17 ]
  %35 = getelementptr inbounds [256 x %0], [256 x %0]* @commandHelp, i64 0, i64 %33
  %36 = getelementptr inbounds %0, %0* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i8** @sdssplitargs(i8* %37, i32* nonnull %9) #14
  store i8** %38, i8*** %10, align 8
  %39 = load i8*, i8** %36, align 8
  %40 = call i8* @sdsnew(i8* %39) #14
  store i8* %40, i8** %13, align 8
  store i32 1, i32* %15, align 8
  store %0* %35, %0** %16, align 8
  %41 = load %23*, %23** @1278, align 8
  %42 = add nuw nsw i64 %34, 1
  %43 = getelementptr inbounds %23, %23* %41, i64 %34
  %44 = bitcast %23* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %7, i64 32, i1 false) #14
  %45 = add nuw nsw i64 %33, 1
  %46 = icmp eq i64 %45, 256
  br i1 %46, label %47, label %32

47:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  %48 = call fastcc i32 @1345(i32 2) #14
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %207, label %50

50:                                               ; preds = %47
  %51 = load %9*, %9** @727, align 8
  %52 = call i8* (%9*, i8*, ...) @redisCommand(%9* %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @157, i64 0, i64 0)) #14
  %53 = icmp eq i8* %52, null
  br i1 %53, label %207, label %54

54:                                               ; preds = %50
  %55 = bitcast i8* %52 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %207

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %52, i64 48
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %206, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i8, i8* %52, i64 56
  %65 = bitcast i8* %64 to %30***
  br label %66

66:                                               ; preds = %202, %63
  %67 = phi i64 [ %61, %63 ], [ %203, %202 ]
  %68 = phi i64 [ 0, %63 ], [ %204, %202 ]
  %69 = load %30**, %30*** %65, align 8
  %70 = getelementptr inbounds %30*, %30** %69, i64 %68
  %71 = load %30*, %30** %70, align 8
  %72 = getelementptr inbounds %30, %30* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 2
  br i1 %74, label %75, label %207

75:                                               ; preds = %66
  %76 = getelementptr inbounds %30, %30* %71, i64 0, i32 6
  %77 = load i64, i64* %76, align 8
  %78 = icmp ult i64 %77, 4
  br i1 %78, label %207, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %30, %30* %71, i64 0, i32 7
  %81 = load %30**, %30*** %80, align 8
  %82 = load %30*, %30** %81, align 8
  %83 = getelementptr inbounds %30, %30* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %207

86:                                               ; preds = %79
  %87 = getelementptr inbounds %30*, %30** %81, i64 1
  %88 = load %30*, %30** %87, align 8
  %89 = getelementptr inbounds %30, %30* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %207

92:                                               ; preds = %86
  %93 = getelementptr inbounds %30*, %30** %81, i64 3
  %94 = load %30*, %30** %93, align 8
  %95 = getelementptr inbounds %30, %30* %94, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 3
  br i1 %97, label %98, label %207

98:                                               ; preds = %92
  %99 = getelementptr inbounds %30, %30* %82, i64 0, i32 4
  %100 = load i8*, i8** %99, align 8
  %101 = load i32, i32* @1277, align 4
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %120

103:                                              ; preds = %98
  %104 = load %23*, %23** @1278, align 8
  %105 = sext i32 %101 to i64
  br label %106

106:                                              ; preds = %114, %103
  %107 = phi i64 [ 0, %103 ], [ %115, %114 ]
  %108 = phi i32 [ 0, %103 ], [ %116, %114 ]
  %109 = getelementptr inbounds %23, %23* %104, i64 %107, i32 2
  %110 = load i8**, i8*** %109, align 8
  %111 = load i8*, i8** %110, align 8
  %112 = call i32 @strcasecmp(i8* %111, i8* %100) #17
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %106
  %115 = add nuw nsw i64 %107, 1
  %116 = add nuw nsw i32 %108, 1
  %117 = icmp slt i64 %115, %105
  br i1 %117, label %106, label %120

118:                                              ; preds = %106
  %119 = trunc i64 %107 to i32
  br label %120

120:                                              ; preds = %114, %118, %98
  %121 = phi i32 [ 0, %98 ], [ %119, %118 ], [ %116, %114 ]
  %122 = icmp eq i32 %121, %101
  br i1 %122, label %123, label %202

123:                                              ; preds = %120
  %124 = add nsw i32 %101, 1
  store i32 %124, i32* @1277, align 4
  %125 = load i8*, i8** bitcast (%23** @1278 to i8**), align 8
  %126 = sext i32 %124 to i64
  %127 = shl nsw i64 %126, 5
  %128 = call i8* @zrealloc(i8* %125, i64 %127) #14
  %129 = bitcast i8* %128 to %23*
  store i8* %128, i8** bitcast (%23** @1278 to i8**), align 8
  %130 = load i32, i32* @1277, align 4
  %131 = add nsw i32 %130, -1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %23, %23* %129, i64 %132, i32 1
  store i32 1, i32* %133, align 4
  %134 = call i8* @zmalloc(i64 8) #14
  %135 = getelementptr inbounds %23, %23* %129, i64 %132, i32 2
  %136 = bitcast i8*** %135 to i8**
  store i8* %134, i8** %136, align 8
  %137 = call i8* @sdsnew(i8* %100) #14
  %138 = load i8**, i8*** %135, align 8
  store i8* %137, i8** %138, align 8
  %139 = bitcast i8*** %135 to i64**
  %140 = load i64*, i64** %139, align 8
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %23, %23* %129, i64 %132, i32 3
  %143 = bitcast i8** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = getelementptr inbounds %23, %23* %129, i64 %132, i32 0
  store i32 1, i32* %144, align 8
  %145 = bitcast i64* %140 to i8**
  %146 = load i8*, i8** %145, align 8
  call void @sdstoupper(i8* %146) #14
  %147 = call i8* @zmalloc(i64 40) #14
  %148 = load i64*, i64** %139, align 8
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i8* %147 to i64*
  store i64 %149, i64* %150, align 8
  %151 = call i8* @sdsempty() #14
  %152 = getelementptr inbounds i8, i8* %147, i64 8
  %153 = bitcast i8* %152 to i8**
  store i8* %151, i8** %153, align 8
  %154 = load %30**, %30*** %80, align 8
  %155 = getelementptr inbounds %30*, %30** %154, i64 1
  %156 = load %30*, %30** %155, align 8
  %157 = getelementptr inbounds %30, %30* %156, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = icmp slt i64 %158, 0
  %160 = sub nsw i64 0, %158
  %161 = select i1 %159, i64 %160, i64 %158
  %162 = trunc i64 %161 to i32
  %163 = add nsw i32 %162, -1
  %164 = getelementptr inbounds %30*, %30** %154, i64 3
  %165 = load %30*, %30** %164, align 8
  %166 = getelementptr inbounds %30, %30* %165, i64 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 1
  br i1 %168, label %169, label %172

169:                                              ; preds = %123
  %170 = call i8* @sdscat(i8* %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1291, i64 0, i64 0)) #14
  store i8* %170, i8** %153, align 8
  %171 = add nsw i32 %162, -2
  br label %172

172:                                              ; preds = %169, %123
  %173 = phi i8* [ %170, %169 ], [ %151, %123 ]
  %174 = phi i32 [ %171, %169 ], [ %163, %123 ]
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %172, %176
  %177 = phi i8* [ %180, %176 ], [ %173, %172 ]
  %178 = phi i32 [ %179, %176 ], [ %174, %172 ]
  %179 = add nsw i32 %178, -1
  %180 = call i8* @sdscat(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1292, i64 0, i64 0)) #14
  store i8* %180, i8** %153, align 8
  %181 = icmp sgt i32 %178, 1
  br i1 %181, label %176, label %182

182:                                              ; preds = %176, %172
  %183 = phi i8* [ %173, %172 ], [ %180, %176 ]
  %184 = load %30**, %30*** %80, align 8
  %185 = getelementptr inbounds %30*, %30** %184, i64 1
  %186 = load %30*, %30** %185, align 8
  %187 = getelementptr inbounds %30, %30* %186, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = icmp slt i64 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %182
  %191 = call i8* @sdscat(i8* %183, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1293, i64 0, i64 0)) #14
  store i8* %191, i8** %153, align 8
  br label %192

192:                                              ; preds = %190, %182
  %193 = getelementptr inbounds i8, i8* %147, i64 16
  %194 = bitcast i8* %193 to i8**
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1294, i64 0, i64 0), i8** %194, align 8
  %195 = getelementptr inbounds i8, i8* %147, i64 24
  %196 = bitcast i8* %195 to i32*
  store i32 0, i32* %196, align 8
  %197 = getelementptr inbounds i8, i8* %147, i64 32
  %198 = bitcast i8* %197 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1295, i64 0, i64 0), i8** %198, align 8
  %199 = getelementptr inbounds %23, %23* %129, i64 %132, i32 4
  %200 = bitcast %0** %199 to i8**
  store i8* %147, i8** %200, align 8
  %201 = load i64, i64* %60, align 8
  br label %202

202:                                              ; preds = %192, %120
  %203 = phi i64 [ %67, %120 ], [ %201, %192 ]
  %204 = add nuw i64 %68, 1
  %205 = icmp ult i64 %204, %203
  br i1 %205, label %66, label %206

206:                                              ; preds = %202, %58
  call void @freeReplyObject(i8* nonnull %52) #14
  br label %207

207:                                              ; preds = %66, %75, %79, %86, %92, %47, %50, %54, %206
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 12), align 4
  call void @linenoiseSetMultiLine(i32 1) #14
  call void @linenoiseSetCompletionCallback(void (i8*, %34*)* nonnull @1400) #14
  call void @linenoiseSetHintsCallback(i8* (i8*, i32*, i32*)* nonnull @1401) #14
  call void @linenoiseSetFreeHintsCallback(void (i8*)* nonnull @1402) #14
  %208 = load %1*, %1** @stdin, align 8
  %209 = call i32 @fileno(%1* %208) #14
  %210 = call i32 @isatty(i32 %209) #14
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %239, label %212

212:                                              ; preds = %207
  %213 = call i8* @getenv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1261, i64 0, i64 0)) #14
  %214 = icmp eq i8* %213, null
  br i1 %214, label %223, label %215

215:                                              ; preds = %212
  %216 = load i8, i8* %213, align 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %223, label %218

218:                                              ; preds = %215
  %219 = call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @760, i64 0, i64 0), i8* nonnull %213) #17
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %237, label %221

221:                                              ; preds = %218
  %222 = call i8* @sdsnew(i8* nonnull %213) #14
  br label %232

223:                                              ; preds = %215, %212
  %224 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @761, i64 0, i64 0)) #14
  %225 = icmp eq i8* %224, null
  br i1 %225, label %237, label %226

226:                                              ; preds = %223
  %227 = load i8, i8* %224, align 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %237, label %229

229:                                              ; preds = %226
  %230 = call i8* @sdsempty() #14
  %231 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %230, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @762, i64 0, i64 0), i8* nonnull %224, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1262, i64 0, i64 0)) #14
  br label %232

232:                                              ; preds = %221, %229
  %233 = phi i8* [ %222, %221 ], [ %231, %229 ]
  %234 = icmp eq i8* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  %236 = call i32 @linenoiseHistoryLoad(i8* nonnull %233) #14
  br label %237

237:                                              ; preds = %223, %226, %218, %232, %235
  %238 = phi i8* [ null, %232 ], [ %233, %235 ], [ null, %218 ], [ null, %226 ], [ null, %223 ]
  call void @cliLoadPreferences()
  br label %239

239:                                              ; preds = %207, %237
  %240 = phi i32 [ 1, %237 ], [ 0, %207 ]
  %241 = phi i8* [ %238, %237 ], [ null, %207 ]
  call fastcc void @1390()
  %242 = load %9*, %9** @727, align 8
  %243 = icmp eq %9* %242, null
  %244 = select i1 %243, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1263, i64 0, i64 0), i8* getelementptr inbounds (%20, %20* @756, i64 0, i32 43, i64 0)
  %245 = call i8* @linenoise(i8* %244) #14
  %246 = icmp eq i8* %245, null
  br i1 %246, label %482, label %247

247:                                              ; preds = %239
  %248 = bitcast i8** %5 to i8*
  %249 = icmp eq i32 %240, 0
  %250 = icmp eq i8* %241, null
  %251 = bitcast %15* %2 to i8*
  %252 = getelementptr inbounds %15, %15* %2, i64 0, i32 0
  %253 = getelementptr inbounds %15, %15* %2, i64 0, i32 1
  %254 = bitcast %15* %1 to i8*
  %255 = getelementptr inbounds %15, %15* %1, i64 0, i32 0
  %256 = getelementptr inbounds %15, %15* %1, i64 0, i32 1
  br label %257

257:                                              ; preds = %247, %476
  %258 = phi i8* [ %245, %247 ], [ %480, %476 ]
  %259 = load i8, i8* %258, align 1
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %475, label %261

261:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #14
  store i8* null, i8** %5, align 8
  %262 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %289, label %264

264:                                              ; preds = %261
  %265 = call i32 @strncmp(i8* nonnull %258, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1297, i64 0, i64 0), i64 5) #14
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %270, label %267

267:                                              ; preds = %264
  %268 = call i32 @strncmp(i8* nonnull %258, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1298, i64 0, i64 0), i64 2) #14
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %289

270:                                              ; preds = %267, %264
  %271 = call i8* @sds_malloc(i64 16) #14
  %272 = bitcast i8* %271 to i8**
  store i32 2, i32* %4, align 4
  %273 = call i64 @strlen(i8* nonnull %258) #17
  %274 = trunc i64 %273 to i32
  %275 = getelementptr inbounds i8, i8* %258, i64 1
  %276 = load i8, i8* %275, align 1
  %277 = icmp eq i8 %276, 32
  %278 = select i1 %277, i32 2, i32 5
  %279 = add nsw i32 %278, -1
  %280 = sext i32 %279 to i64
  %281 = call i8* @sdsnewlen(i8* nonnull %258, i64 %280) #14
  store i8* %281, i8** %272, align 8
  %282 = zext i32 %278 to i64
  %283 = getelementptr inbounds i8, i8* %258, i64 %282
  %284 = sub nsw i32 %274, %278
  %285 = sext i32 %284 to i64
  %286 = call i8* @sdsnewlen(i8* nonnull %283, i64 %285) #14
  %287 = getelementptr inbounds i8, i8* %271, i64 8
  %288 = bitcast i8* %287 to i8**
  store i8* %286, i8** %288, align 8
  br label %291

289:                                              ; preds = %267, %261
  %290 = call i8** @sdssplitargs(i8* nonnull %258, i32* nonnull %4) #14
  br label %291

291:                                              ; preds = %270, %289
  %292 = phi i8** [ %272, %270 ], [ %290, %289 ]
  %293 = icmp ne i8** %292, null
  %294 = load i32, i32* %4, align 4
  %295 = icmp sgt i32 %294, 0
  %296 = and i1 %293, %295
  br i1 %296, label %297, label %318

297:                                              ; preds = %291
  %298 = tail call i32* @__errno_location() #18
  store i32 0, i32* %298, align 4
  %299 = load i8*, i8** %292, align 8
  %300 = call i64 @strtol(i8* %299, i8** nonnull %5, i32 10) #14
  %301 = load i32, i32* %4, align 4
  %302 = icmp sgt i32 %301, 1
  br i1 %302, label %303, label %318

303:                                              ; preds = %297
  %304 = load i8*, i8** %5, align 8
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %307, label %318

307:                                              ; preds = %303
  %308 = load i32, i32* %298, align 4
  %309 = icmp eq i32 %308, 34
  br i1 %309, label %314, label %310

310:                                              ; preds = %307
  %311 = icmp eq i32 %308, 22
  %312 = icmp slt i64 %300, 1
  %313 = or i1 %312, %311
  br i1 %313, label %314, label %318

314:                                              ; preds = %310, %307
  %315 = load %1*, %1** @stdout, align 8
  %316 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @1264, i64 0, i64 0), i64 47, i64 1, %1* %315)
  %317 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** nonnull %292, i32 %317) #14
  call void @linenoiseFree(i8* nonnull %258) #14
  br label %474

318:                                              ; preds = %297, %303, %310, %291
  %319 = phi i32 [ %294, %291 ], [ %301, %310 ], [ %301, %303 ], [ %301, %297 ]
  %320 = phi i64 [ 1, %291 ], [ %300, %310 ], [ 1, %303 ], [ 1, %297 ]
  %321 = phi i32 [ 0, %291 ], [ 1, %310 ], [ 0, %303 ], [ 0, %297 ]
  %322 = icmp sgt i32 %319, 0
  %323 = and i1 %293, %322
  br i1 %323, label %324, label %342

324:                                              ; preds = %318
  %325 = zext i32 %321 to i64
  %326 = getelementptr inbounds i8*, i8** %292, i64 %325
  %327 = load i8*, i8** %326, align 8
  %328 = call i32 @strcasecmp(i8* %327, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1265, i64 0, i64 0)) #17
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %355, label %330

330:                                              ; preds = %324
  %331 = add nuw nsw i32 %321, 1
  %332 = icmp slt i32 %331, %319
  br i1 %332, label %333, label %342

333:                                              ; preds = %330
  %334 = call i32 @strcasecmp(i8* %327, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1266, i64 0, i64 0)) #17
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %342

336:                                              ; preds = %333
  %337 = zext i32 %331 to i64
  %338 = getelementptr inbounds i8*, i8** %292, i64 %337
  %339 = load i8*, i8** %338, align 8
  %340 = call i32 @strcasecmp(i8* %339, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1267, i64 0, i64 0)) #17
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %355, label %342

342:                                              ; preds = %318, %330, %333, %336
  br i1 %249, label %345, label %343

343:                                              ; preds = %342
  %344 = call i32 @linenoiseHistoryAdd(i8* nonnull %258) #14
  br label %345

345:                                              ; preds = %342, %343
  br i1 %250, label %348, label %346

346:                                              ; preds = %345
  %347 = call i32 @linenoiseHistorySave(i8* nonnull %241) #14
  br label %348

348:                                              ; preds = %345, %346
  %349 = icmp eq i8** %292, null
  br i1 %349, label %350, label %352

350:                                              ; preds = %348
  %351 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.29, i64 0, i64 0))
  call void @linenoiseFree(i8* nonnull %258) #14
  br label %474

352:                                              ; preds = %348
  %353 = load i32, i32* %4, align 4
  %354 = icmp sgt i32 %353, 0
  br i1 %354, label %355, label %472

355:                                              ; preds = %324, %336, %352
  %356 = phi i32 [ %353, %352 ], [ %319, %336 ], [ %319, %324 ]
  %357 = load i8*, i8** %292, align 8
  %358 = call i32 @strcasecmp(i8* %357, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1268, i64 0, i64 0)) #17
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %363, label %360

360:                                              ; preds = %355
  %361 = call i32 @strcasecmp(i8* %357, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1269, i64 0, i64 0)) #17
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %364

363:                                              ; preds = %360, %355
  call void @exit(i32 0) #19
  unreachable

364:                                              ; preds = %360
  %365 = load i8, i8* %357, align 1
  %366 = icmp eq i8 %365, 58
  br i1 %366, label %367, label %388

367:                                              ; preds = %364
  %368 = call i32 @strcasecmp(i8* nonnull %357, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @685, i64 0, i64 0)) #17
  %369 = icmp eq i32 %368, 0
  %370 = icmp sgt i32 %356, 1
  %371 = and i1 %370, %369
  br i1 %371, label %372, label %384

372:                                              ; preds = %367
  %373 = getelementptr inbounds i8*, i8** %292, i64 1
  %374 = load i8*, i8** %373, align 8
  %375 = call i32 @strcasecmp(i8* %374, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @686, i64 0, i64 0)) #17
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %372
  store i1 true, i1* @.0, align 4
  br label %386

378:                                              ; preds = %372
  %379 = call i32 @strcasecmp(i8* %374, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @687, i64 0, i64 0)) #17
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  store i1 false, i1* @.0, align 4
  br label %386

382:                                              ; preds = %378
  %383 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @688, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* %374) #14
  br label %386

384:                                              ; preds = %367
  %385 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @691, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* nonnull %357) #14
  br label %386

386:                                              ; preds = %377, %381, %382, %384
  %387 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** nonnull %292, i32 %387) #14
  call void @linenoiseFree(i8* nonnull %258) #14
  br label %474

388:                                              ; preds = %364
  %389 = call i32 @strcasecmp(i8* nonnull %357, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1270, i64 0, i64 0)) #17
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %396

391:                                              ; preds = %388
  %392 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 44), align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %394, label %483

394:                                              ; preds = %391
  %395 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1271, i64 0, i64 0))
  br label %472

396:                                              ; preds = %388
  switch i32 %356, label %414 [
    i32 3, label %397
    i32 1, label %410
  ]

397:                                              ; preds = %396
  %398 = call i32 @strcasecmp(i8* nonnull %357, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1272, i64 0, i64 0)) #17
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %414

400:                                              ; preds = %397
  %401 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  call void @sdsfree(i8* %401) #14
  %402 = getelementptr inbounds i8*, i8** %292, i64 1
  %403 = load i8*, i8** %402, align 8
  %404 = call i8* @sdsnew(i8* %403) #14
  store i8* %404, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %405 = getelementptr inbounds i8*, i8** %292, i64 2
  %406 = load i8*, i8** %405, align 8
  %407 = call i64 @strtol(i8* nocapture nonnull %406, i8** null, i32 10) #14
  %408 = trunc i64 %407 to i32
  store i32 %408, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  call fastcc void @1390()
  %409 = call fastcc i32 @1345(i32 1)
  br label %472

410:                                              ; preds = %396
  %411 = call i32 @strcasecmp(i8* nonnull %357, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1273, i64 0, i64 0)) #17
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %410
  call void @linenoiseClearScreen() #14
  br label %472

414:                                              ; preds = %396, %397, %410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %251) #14
  %415 = call i32 @gettimeofday(%15* nonnull %2, %31* null) #14
  %416 = load i64, i64* %252, align 8
  %417 = mul nsw i64 %416, 1000000
  %418 = load i64, i64* %253, align 8
  %419 = add nsw i64 %417, %418
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %251) #14
  %420 = sdiv i64 %419, 1000
  %421 = load i32, i32* %4, align 4
  %422 = sub nsw i32 %421, %321
  %423 = zext i32 %321 to i64
  %424 = getelementptr inbounds i8*, i8** %292, i64 %423
  br label %425

425:                                              ; preds = %445, %414
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %426 = call fastcc i32 @1403(i32 %422, i8** %424, i64 %320) #14
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %439, label %428

428:                                              ; preds = %425
  %429 = call fastcc i32 @1345(i32 1) #14
  %430 = call fastcc i32 @1403(i32 %422, i8** %424, i64 %320) #14
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %439, label %432

432:                                              ; preds = %428
  %433 = load %9*, %9** @727, align 8
  %434 = icmp eq %9* %433, null
  br i1 %434, label %447, label %435

435:                                              ; preds = %432
  %436 = load %1*, %1** @stderr, align 8
  %437 = getelementptr inbounds %9, %9* %433, i64 0, i32 2, i64 0
  %438 = call i32 (%1*, i8*, ...) @fprintf(%1* %436, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* nonnull %437) #20
  br label %447

439:                                              ; preds = %428, %425
  %440 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  %441 = icmp ne i32 %440, 0
  %442 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %443 = icmp ne i32 %442, 0
  %444 = and i1 %441, %443
  br i1 %444, label %445, label %447

445:                                              ; preds = %439
  %446 = call fastcc i32 @1345(i32 1) #14
  br label %425

447:                                              ; preds = %439, %432, %435
  %448 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 47), align 8
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %456, label %450

450:                                              ; preds = %447
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 47), align 8
  %451 = call fastcc i32 @1394(i32 0)
  %452 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 46), align 4
  %453 = icmp eq i32 %452, 0
  %454 = select i1 %453, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @1275, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0)
  %455 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1274, i64 0, i64 0), i8* %454)
  br label %456

456:                                              ; preds = %447, %450
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %254) #14
  %457 = call i32 @gettimeofday(%15* nonnull %1, %31* null) #14
  %458 = load i64, i64* %255, align 8
  %459 = mul nsw i64 %458, 1000000
  %460 = load i64, i64* %256, align 8
  %461 = add nsw i64 %459, %460
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %254) #14
  %462 = sdiv i64 %461, 1000
  %463 = sub nsw i64 %462, %420
  %464 = icmp sgt i64 %463, 499
  %465 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  %466 = icmp eq i32 %465, 0
  %467 = and i1 %466, %464
  br i1 %467, label %468, label %472

468:                                              ; preds = %456
  %469 = sitofp i64 %463 to double
  %470 = fdiv double %469, 1.000000e+03
  %471 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1276, i64 0, i64 0), double %470)
  br label %472

472:                                              ; preds = %394, %413, %400, %352, %468, %456
  %473 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** nonnull %292, i32 %473) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #14
  br label %475

474:                                              ; preds = %350, %386, %314
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #14
  br label %476

475:                                              ; preds = %472, %257
  call void @linenoiseFree(i8* nonnull %258) #14
  br label %476

476:                                              ; preds = %475, %474
  %477 = load %9*, %9** @727, align 8
  %478 = icmp eq %9* %477, null
  %479 = select i1 %478, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1263, i64 0, i64 0), i8* getelementptr inbounds (%20, %20* @756, i64 0, i32 43, i64 0)
  %480 = call i8* @linenoise(i8* %479) #14
  %481 = icmp eq i8* %480, null
  br i1 %481, label %482, label %257

482:                                              ; preds = %476, %239
  call void @exit(i32 0) #19
  unreachable

483:                                              ; preds = %391
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  call void @sdsfreesplitres(i8** nonnull %292, i32 %356) #14
  call void @linenoiseFree(i8* nonnull %258) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  ret void
}

declare dso_local i8* @sdscatprintf(i8*, i8*, ...) local_unnamed_addr #5

declare dso_local i8* @sdsempty() local_unnamed_addr #5

declare dso_local %24* @listCreate() local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1358(%27* nocapture %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %3 = load %9*, %9** %2, align 8
  %4 = icmp eq %9* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @redisFree(%9* nonnull %3) #14
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = tail call %9* @redisConnect(i8* %8, i32 %10) #14
  store %9* %11, %9** %2, align 8
  %12 = getelementptr inbounds %9, %9* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %6
  %16 = load %1*, %1** @stderr, align 8
  %17 = tail call i64 @fwrite(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @777, i64 0, i64 0), i64 30, i64 1, %1* %16) #16
  %18 = load %1*, %1** @stderr, align 8
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %9, align 8
  %21 = load %9*, %9** %2, align 8
  %22 = getelementptr inbounds %9, %9* %21, i64 0, i32 2, i64 0
  %23 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @778, i64 0, i64 0), i8* %19, i32 %20, i8* nonnull %22) #16
  %24 = load %9*, %9** %2, align 8
  tail call void @redisFree(%9* %24) #14
  store %9* null, %9** %2, align 8
  br label %53

25:                                               ; preds = %6
  %26 = getelementptr inbounds %9, %9* %11, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = tail call i32 @anetKeepAlive(i8* null, i32 %27, i32 15) #14
  %29 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %53, label %31

31:                                               ; preds = %25
  %32 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40), align 8
  %33 = icmp eq i8* %32, null
  %34 = load %9*, %9** %2, align 8
  br i1 %33, label %35, label %37

35:                                               ; preds = %31
  %36 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @779, i64 0, i64 0), i8* nonnull %29) #14
  br label %39

37:                                               ; preds = %31
  %38 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @780, i64 0, i64 0), i8* nonnull %32, i8* nonnull %29) #14
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i8* [ %36, %35 ], [ %38, %37 ]
  %41 = icmp eq i8* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = bitcast i8* %40 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 6
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @freeReplyObject(i8* nonnull %40) #14
  br label %53

47:                                               ; preds = %42
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %9, align 8
  %50 = getelementptr inbounds i8, i8* %40, i64 32
  %51 = bitcast i8* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %48, i32 %49, i8* %52) #14
  tail call void @freeReplyObject(i8* nonnull %40) #14
  br label %53

53:                                               ; preds = %39, %25, %46, %47, %15
  %54 = phi i32 [ 0, %15 ], [ 0, %47 ], [ 1, %46 ], [ 1, %25 ], [ 0, %39 ]
  ret i32 %54
}

; Function Attrs: nounwind uwtable
define internal fastcc void @1359(%27* %0) unnamed_addr #0 {
  %2 = alloca %26, align 8
  %3 = alloca %26, align 8
  %4 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %5 = load %9*, %9** %4, align 8
  %6 = icmp eq %9* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @redisFree(%9* nonnull %5) #14
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %27, %27* %0, i64 0, i32 14
  %10 = load %24*, %24** %9, align 8
  %11 = icmp eq %24* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  call void @listRewind(%24* nonnull %10, %26* nonnull %3) #14
  %14 = call %25* @listNext(%26* nonnull %3) #14
  %15 = icmp eq %25* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12, %16
  %17 = phi %25* [ %21, %16 ], [ %14, %12 ]
  %18 = getelementptr inbounds %25, %25* %17, i64 0, i32 2
  %19 = bitcast i8** %18 to %27**
  %20 = load %27*, %27** %19, align 8
  call fastcc void @1359(%27* %20)
  %21 = call %25* @listNext(%26* nonnull %3) #14
  %22 = icmp eq %25* %21, null
  br i1 %22, label %23, label %16

23:                                               ; preds = %16, %12
  %24 = load %24*, %24** %9, align 8
  call void @listRelease(%24* %24) #14
  store %24* null, %24** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br label %25

25:                                               ; preds = %8, %23
  %26 = getelementptr inbounds %27, %27* %0, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  call void @sdsfree(i8* nonnull %27) #14
  br label %30

30:                                               ; preds = %25, %29
  %31 = getelementptr inbounds %27, %27* %0, i64 0, i32 9
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  call void @sdsfree(i8* nonnull %32) #14
  br label %35

35:                                               ; preds = %30, %34
  %36 = getelementptr inbounds %27, %27* %0, i64 0, i32 7
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  call void @sdsfree(i8* nonnull %42) #14
  br label %45

45:                                               ; preds = %40, %35, %44
  %46 = getelementptr inbounds %27, %27* %0, i64 0, i32 15
  %47 = load i8**, i8*** %46, align 8
  %48 = icmp eq i8** %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %27, %27* %0, i64 0, i32 17
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %49, %53
  %54 = phi i64 [ %58, %53 ], [ 0, %49 ]
  %55 = phi i8** [ %62, %53 ], [ %47, %49 ]
  %56 = getelementptr inbounds i8*, i8** %55, i64 %54
  %57 = load i8*, i8** %56, align 8
  call void @sdsfree(i8* %57) #14
  %58 = add nuw nsw i64 %54, 1
  %59 = load i32, i32* %50, align 8
  %60 = sext i32 %59 to i64
  %61 = icmp slt i64 %58, %60
  %62 = load i8**, i8*** %46, align 8
  br i1 %61, label %53, label %63

63:                                               ; preds = %53, %49
  %64 = phi i8** [ %47, %49 ], [ %62, %53 ]
  %65 = bitcast i8** %64 to i8*
  call void @zfree(i8* %65) #14
  br label %66

66:                                               ; preds = %45, %63
  %67 = getelementptr inbounds %27, %27* %0, i64 0, i32 16
  %68 = load i8**, i8*** %67, align 8
  %69 = icmp eq i8** %68, null
  br i1 %69, label %87, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %27, %27* %0, i64 0, i32 18
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %70, %74
  %75 = phi i64 [ %79, %74 ], [ 0, %70 ]
  %76 = phi i8** [ %83, %74 ], [ %68, %70 ]
  %77 = getelementptr inbounds i8*, i8** %76, i64 %75
  %78 = load i8*, i8** %77, align 8
  call void @sdsfree(i8* %78) #14
  %79 = add nuw nsw i64 %75, 1
  %80 = load i32, i32* %71, align 4
  %81 = sext i32 %80 to i64
  %82 = icmp slt i64 %79, %81
  %83 = load i8**, i8*** %67, align 8
  br i1 %82, label %74, label %84

84:                                               ; preds = %74, %70
  %85 = phi i8** [ %68, %70 ], [ %83, %74 ]
  %86 = bitcast i8** %85 to i8*
  call void @zfree(i8* %86) #14
  br label %87

87:                                               ; preds = %66, %84
  %88 = getelementptr inbounds %27, %27* %0, i64 0, i32 8
  %89 = load %24*, %24** %88, align 8
  %90 = icmp eq %24* %89, null
  br i1 %90, label %102, label %91

91:                                               ; preds = %87
  %92 = bitcast %26* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #14
  call void @listRewind(%24* nonnull %89, %26* nonnull %2) #14
  %93 = call %25* @listNext(%26* nonnull %2) #14
  %94 = icmp eq %25* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %91, %95
  %96 = phi %25* [ %99, %95 ], [ %93, %91 ]
  %97 = getelementptr inbounds %25, %25* %96, i64 0, i32 2
  %98 = load i8*, i8** %97, align 8
  call void @sdsfree(i8* %98) #14
  %99 = call %25* @listNext(%26* nonnull %2) #14
  %100 = icmp eq %25* %99, null
  br i1 %100, label %101, label %95

101:                                              ; preds = %95, %91
  call void @listRelease(%24* nonnull %89) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #14
  store %24* null, %24** %88, align 8
  br label %102

102:                                              ; preds = %87, %101
  %103 = bitcast %27* %0 to i8*
  call void @zfree(i8* %103) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1360(%27* nocapture %0, i32 %1, i8** %2) unnamed_addr #0 {
  %4 = alloca %26, align 8
  %5 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %6 = load %9*, %9** %5, align 8
  %7 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i64 0, i64 0)) #14
  store i8* null, i8** %2, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %371, label %9

9:                                                ; preds = %3
  %10 = bitcast i8* %7 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  %18 = tail call i8* @zmalloc(i64 %17) #14
  store i8* %18, i8** %2, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 32
  %20 = bitcast i8* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i8* @strcpy(i8* %18, i8* %21) #14
  br label %369

23:                                               ; preds = %9
  %24 = getelementptr inbounds i8, i8* %7, i64 32
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = call i8* @strchr(i8* %26, i32 10)
  %28 = icmp eq i8* %27, null
  br i1 %28, label %369, label %29

29:                                               ; preds = %23
  %30 = and i32 %1, 1
  %31 = getelementptr inbounds %27, %27* %0, i64 0, i32 7
  %32 = getelementptr %27, %27* %0, i64 0, i32 11, i64 0
  %33 = icmp eq i32 %30, 0
  %34 = getelementptr inbounds %27, %27* %0, i64 0, i32 10
  %35 = getelementptr inbounds %27, %27* %0, i64 0, i32 12
  %36 = getelementptr inbounds %27, %27* %0, i64 0, i32 17
  %37 = getelementptr inbounds %27, %27* %0, i64 0, i32 15
  %38 = bitcast i8*** %37 to i8**
  %39 = getelementptr inbounds %27, %27* %0, i64 0, i32 18
  %40 = getelementptr inbounds %27, %27* %0, i64 0, i32 16
  %41 = bitcast i8*** %40 to i8**
  %42 = bitcast %26* %4 to i8*
  %43 = getelementptr inbounds %27, %27* %0, i64 0, i32 14
  br label %44

44:                                               ; preds = %29, %364
  %45 = phi i8* [ %27, %29 ], [ %365, %364 ]
  %46 = phi i8* [ %26, %29 ], [ %47, %364 ]
  store i8 0, i8* %45, align 1
  %47 = getelementptr inbounds i8, i8* %45, i64 1
  %48 = call i8* @strchr(i8* %46, i32 32) #17
  %49 = icmp eq i8* %48, null
  br i1 %49, label %367, label %50

50:                                               ; preds = %44
  store i8 0, i8* %48, align 1
  %51 = getelementptr inbounds i8, i8* %48, i64 1
  %52 = call i8* @strchr(i8* nonnull %51, i32 32) #17
  %53 = icmp eq i8* %52, null
  br i1 %53, label %367, label %373

54:                                               ; preds = %377, %381, %385, %389, %393, %397
  %55 = phi i32 [ 3, %377 ], [ 4, %381 ], [ 5, %385 ], [ 6, %389 ], [ 7, %393 ], [ 8, %397 ]
  %56 = phi i8* [ null, %377 ], [ null, %381 ], [ null, %385 ], [ null, %389 ], [ %390, %393 ], [ %390, %397 ]
  %57 = phi i8* [ null, %377 ], [ null, %381 ], [ null, %385 ], [ %386, %389 ], [ %386, %393 ], [ %386, %397 ]
  %58 = phi i8* [ null, %377 ], [ null, %381 ], [ %382, %385 ], [ %382, %389 ], [ %382, %393 ], [ %382, %397 ]
  %59 = phi i8* [ null, %377 ], [ %378, %381 ], [ %378, %385 ], [ %378, %389 ], [ %378, %393 ], [ %378, %397 ]
  %60 = phi i8* [ %378, %377 ], [ %382, %381 ], [ %386, %385 ], [ %390, %389 ], [ %394, %393 ], [ %398, %397 ]
  %61 = call i8* @strstr(i8* nonnull %374, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @784, i64 0, i64 0)) #17
  %62 = icmp ne i8* %61, null
  br i1 %62, label %63, label %177

63:                                               ; preds = %54
  %64 = load i32, i32* %31, align 8
  %65 = or i32 %64, 1
  store i32 %65, i32* %31, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 0, i64 16388, i1 false) #14
  %66 = icmp eq i32 %55, 8
  br i1 %66, label %67, label %176

67:                                               ; preds = %63
  %68 = call i64 @strlen(i8* nonnull %60) #17
  %69 = trunc i64 %68 to i32
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %176

71:                                               ; preds = %67, %174
  %72 = phi i8* [ %88, %174 ], [ %60, %67 ]
  %73 = phi i32 [ %87, %174 ], [ %69, %67 ]
  %74 = call i8* @strchr(i8* %72, i32 32) #17
  %75 = icmp eq i8* %74, null
  %76 = sext i32 %73 to i64
  %77 = getelementptr inbounds i8, i8* %72, i64 %76
  %78 = select i1 %75, i8* %77, i8* %74
  %79 = ptrtoint i8* %78 to i64
  %80 = ptrtoint i8* %72 to i64
  %81 = sub i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = add i32 %73, %82
  store i8 0, i8* %78, align 1
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds i8, i8* %78, i64 1
  %86 = add nsw i32 %83, -1
  %87 = select i1 %84, i32 0, i32 %86
  %88 = select i1 %84, i8* %78, i8* %85
  %89 = load i8, i8* %72, align 1
  %90 = icmp eq i8 %89, 91
  br i1 %90, label %91, label %144

91:                                               ; preds = %71
  %92 = getelementptr inbounds i8, i8* %72, i64 1
  %93 = call i8* @strstr(i8* nonnull %92, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @785, i64 0, i64 0)) #17
  %94 = icmp eq i8* %93, null
  br i1 %94, label %118, label %95

95:                                               ; preds = %91
  store i8 0, i8* %93, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 3
  %97 = call i8* @strchr(i8* nonnull %96, i32 93) #17
  %98 = icmp eq i8* %97, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  store i8 0, i8* %97, align 1
  br label %100

100:                                              ; preds = %95, %99
  %101 = call i8* @sdsnew(i8* nonnull %92) #14
  %102 = call i8* @sdsnew(i8* nonnull %96) #14
  %103 = load i32, i32* %36, align 8
  %104 = add nsw i32 %103, 2
  store i32 %104, i32* %36, align 8
  %105 = load i8*, i8** %38, align 8
  %106 = sext i32 %104 to i64
  %107 = shl nsw i64 %106, 3
  %108 = call i8* @zrealloc(i8* %105, i64 %107) #14
  %109 = bitcast i8* %108 to i8**
  store i8* %108, i8** %38, align 8
  %110 = load i32, i32* %36, align 8
  %111 = add nsw i32 %110, -2
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8*, i8** %109, i64 %112
  store i8* %101, i8** %113, align 8
  %114 = load i8**, i8*** %37, align 8
  %115 = add nsw i32 %110, -1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8*, i8** %114, i64 %116
  store i8* %102, i8** %117, align 8
  br label %174

118:                                              ; preds = %91
  %119 = call i8* @strstr(i8* nonnull %92, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @786, i64 0, i64 0)) #17
  %120 = icmp eq i8* %119, null
  br i1 %120, label %174, label %121

121:                                              ; preds = %118
  store i8 0, i8* %119, align 1
  %122 = getelementptr inbounds i8, i8* %119, i64 3
  %123 = call i8* @strchr(i8* nonnull %122, i32 93) #17
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  store i8 0, i8* %123, align 1
  br label %126

126:                                              ; preds = %121, %125
  %127 = call i8* @sdsnew(i8* nonnull %92) #14
  %128 = call i8* @sdsnew(i8* nonnull %122) #14
  %129 = load i32, i32* %39, align 4
  %130 = add nsw i32 %129, 2
  store i32 %130, i32* %39, align 4
  %131 = load i8*, i8** %41, align 8
  %132 = sext i32 %130 to i64
  %133 = shl nsw i64 %132, 3
  %134 = call i8* @zrealloc(i8* %131, i64 %133) #14
  %135 = bitcast i8* %134 to i8**
  store i8* %134, i8** %41, align 8
  %136 = load i32, i32* %39, align 4
  %137 = add nsw i32 %136, -2
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8*, i8** %135, i64 %138
  store i8* %127, i8** %139, align 8
  %140 = load i8**, i8*** %40, align 8
  %141 = add nsw i32 %136, -1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8*, i8** %140, i64 %142
  store i8* %128, i8** %143, align 8
  br label %174

144:                                              ; preds = %71
  %145 = call i8* @strchr(i8* nonnull %72, i32 45) #17
  %146 = icmp eq i8* %145, null
  br i1 %146, label %165, label %147

147:                                              ; preds = %144
  store i8 0, i8* %145, align 1
  %148 = call i64 @strtol(i8* nocapture nonnull %72, i8** null, i32 10) #14
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds i8, i8* %145, i64 1
  %151 = call i64 @strtol(i8* nocapture nonnull %150, i8** null, i32 10) #14
  %152 = trunc i64 %151 to i32
  %153 = sub i32 1, %149
  %154 = add i32 %153, %152
  %155 = load i32, i32* %35, align 4
  %156 = add nsw i32 %154, %155
  store i32 %156, i32* %35, align 4
  %157 = icmp slt i32 %152, %149
  br i1 %157, label %174, label %158

158:                                              ; preds = %147
  %159 = shl i64 %148, 32
  %160 = ashr exact i64 %159, 32
  %161 = getelementptr %27, %27* %0, i64 0, i32 11, i64 %160
  %162 = sub i64 %151, %148
  %163 = and i64 %162, 4294967295
  %164 = add nuw nsw i64 %163, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %161, i8 1, i64 %164, i1 false)
  br label %174

165:                                              ; preds = %144
  %166 = icmp ugt i8* %78, %72
  br i1 %166, label %167, label %174

167:                                              ; preds = %165
  %168 = call i64 @strtol(i8* nocapture nonnull %72, i8** null, i32 10) #14
  %169 = shl i64 %168, 32
  %170 = ashr exact i64 %169, 32
  %171 = getelementptr inbounds %27, %27* %0, i64 0, i32 11, i64 %170
  store i8 1, i8* %171, align 1
  %172 = load i32, i32* %35, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %35, align 4
  br label %174

174:                                              ; preds = %158, %147, %118, %167, %165, %100, %126
  %175 = icmp sgt i32 %87, 0
  br i1 %175, label %71, label %176

176:                                              ; preds = %174, %67, %63
  store i32 0, i32* %34, align 8
  br label %223

177:                                              ; preds = %54
  br i1 %33, label %178, label %183

178:                                              ; preds = %177
  %179 = load i32, i32* %31, align 8
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = select i1 %181, i32 3, i32 4
  br label %361

183:                                              ; preds = %177
  %184 = call i8* @strrchr(i8* nonnull %51, i32 64) #17
  %185 = icmp eq i8* %184, null
  br i1 %185, label %187, label %186

186:                                              ; preds = %183
  store i8 0, i8* %184, align 1
  br label %187

187:                                              ; preds = %183, %186
  %188 = call i8* @strrchr(i8* nonnull %51, i32 58) #17
  %189 = icmp eq i8* %188, null
  br i1 %189, label %220, label %190

190:                                              ; preds = %187
  store i8 0, i8* %188, align 1
  %191 = getelementptr inbounds i8, i8* %188, i64 1
  %192 = call i64 @strtol(i8* nocapture nonnull %191, i8** null, i32 10) #14
  %193 = trunc i64 %192 to i32
  %194 = call i8* @sdsnew(i8* nonnull %51) #14
  %195 = call i8* @zmalloc(i64 16520) #14
  %196 = bitcast i8* %195 to %27*
  %197 = getelementptr inbounds i8, i8* %195, i64 16
  %198 = bitcast i8* %197 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 16, i1 false) #14
  store i8* %194, i8** %198, align 8
  %199 = getelementptr inbounds i8, i8* %195, i64 24
  %200 = bitcast i8* %199 to i32*
  store i32 %193, i32* %200, align 8
  %201 = getelementptr inbounds i8, i8* %195, i64 32
  %202 = getelementptr inbounds i8, i8* %195, i64 64
  %203 = getelementptr inbounds i8, i8* %195, i64 16480
  %204 = getelementptr inbounds i8, i8* %195, i64 16472
  %205 = bitcast i8* %204 to i32*
  store i32 0, i32* %205, align 8
  %206 = getelementptr inbounds i8, i8* %195, i64 16512
  %207 = bitcast i8* %206 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 0, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 0, i64 20, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 0, i64 32, i1 false) #14
  store float 1.000000e+00, float* %207, align 8
  %208 = getelementptr inbounds i8, i8* %195, i64 16516
  %209 = bitcast i8* %208 to i32*
  store i32 0, i32* %209, align 4
  %210 = getelementptr inbounds i8, i8* %195, i64 84
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %210, i8 0, i64 16388, i1 false) #14
  %211 = getelementptr inbounds i8, i8* %195, i64 56
  %212 = bitcast i8* %211 to i32*
  store i32 4, i32* %212, align 8
  %213 = load %24*, %24** %43, align 8
  %214 = icmp eq %24* %213, null
  br i1 %214, label %215, label %217

215:                                              ; preds = %190
  %216 = call %24* @listCreate() #14
  store %24* %216, %24** %43, align 8
  br label %217

217:                                              ; preds = %190, %215
  %218 = phi %24* [ %213, %190 ], [ %216, %215 ]
  %219 = call %24* @listAddNodeTail(%24* %218, i8* %195) #14
  br label %223

220:                                              ; preds = %187
  %221 = load %1*, %1** @stderr, align 8
  %222 = call i64 @fwrite(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @787, i64 0, i64 0), i64 35, i64 1, %1* %221) #16
  br label %367

223:                                              ; preds = %217, %176
  %224 = phi %27* [ %0, %176 ], [ %196, %217 ]
  %225 = icmp eq i8* %46, null
  br i1 %225, label %233, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %27, %27* %224, i64 0, i32 1
  %228 = load i8*, i8** %227, align 8
  %229 = icmp eq i8* %228, null
  br i1 %229, label %231, label %230

230:                                              ; preds = %226
  call void @sdsfree(i8* nonnull %228) #14
  br label %231

231:                                              ; preds = %226, %230
  %232 = call i8* @sdsnew(i8* nonnull %46) #14
  store i8* %232, i8** %227, align 8
  br label %233

233:                                              ; preds = %223, %231
  %234 = getelementptr inbounds %27, %27* %224, i64 0, i32 8
  %235 = load %24*, %24** %234, align 8
  %236 = icmp eq %24* %235, null
  br i1 %236, label %247, label %237

237:                                              ; preds = %233
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  call void @listRewind(%24* nonnull %235, %26* nonnull %4) #14
  %238 = call %25* @listNext(%26* nonnull %4) #14
  %239 = icmp eq %25* %238, null
  br i1 %239, label %246, label %240

240:                                              ; preds = %237, %240
  %241 = phi %25* [ %244, %240 ], [ %238, %237 ]
  %242 = getelementptr inbounds %25, %25* %241, i64 0, i32 2
  %243 = load i8*, i8** %242, align 8
  call void @sdsfree(i8* %243) #14
  %244 = call %25* @listNext(%26* nonnull %4) #14
  %245 = icmp eq %25* %244, null
  br i1 %245, label %246, label %240

246:                                              ; preds = %240, %237
  call void @listRelease(%24* nonnull %235) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  br label %247

247:                                              ; preds = %233, %246
  %248 = call %24* @listCreate() #14
  store %24* %248, %24** %234, align 8
  %249 = call i64 @strlen(i8* nonnull %374) #17
  %250 = trunc i64 %249 to i32
  %251 = icmp sgt i32 %250, 0
  br i1 %251, label %252, label %343

252:                                              ; preds = %247
  %253 = getelementptr inbounds %27, %27* %224, i64 0, i32 7
  %254 = icmp eq i8* %59, null
  %255 = getelementptr inbounds %27, %27* %224, i64 0, i32 9
  br i1 %254, label %256, label %293

256:                                              ; preds = %252, %287
  %257 = phi i64 [ %290, %287 ], [ %249, %252 ]
  %258 = phi i8* [ %270, %287 ], [ %374, %252 ]
  %259 = call i8* @strchr(i8* %258, i32 44) #17
  %260 = icmp eq i8* %259, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %256
  store i8 0, i8* %259, align 1
  %262 = call i8* @sdsnew(i8* %258) #14
  %263 = getelementptr inbounds i8, i8* %259, i64 1
  br label %269

264:                                              ; preds = %256
  %265 = call i8* @sdsnew(i8* %258) #14
  %266 = shl i64 %257, 32
  %267 = ashr exact i64 %266, 32
  %268 = getelementptr inbounds i8, i8* %258, i64 %267
  br label %269

269:                                              ; preds = %264, %261
  %270 = phi i8* [ %263, %261 ], [ %268, %264 ]
  %271 = phi i8* [ %262, %261 ], [ %265, %264 ]
  %272 = call i32 @strcmp(i8* %271, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @788, i64 0, i64 0)) #17
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %283, label %274

274:                                              ; preds = %269
  %275 = call i32 @strcmp(i8* %271, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @789, i64 0, i64 0)) #17
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %283, label %277

277:                                              ; preds = %274
  %278 = call i32 @strcmp(i8* %271, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @790, i64 0, i64 0)) #17
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %283, label %280

280:                                              ; preds = %277
  %281 = call i32 @strcmp(i8* %271, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @791, i64 0, i64 0)) #17
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %269, %274, %277, %280
  %284 = phi i32 [ 2, %280 ], [ 32, %277 ], [ 16, %274 ], [ 8, %269 ]
  %285 = load i32, i32* %253, align 8
  %286 = or i32 %285, %284
  store i32 %286, i32* %253, align 8
  br label %287

287:                                              ; preds = %283, %280
  %288 = load %24*, %24** %234, align 8
  %289 = call %24* @listAddNodeTail(%24* %288, i8* %271) #14
  %290 = call i64 @strlen(i8* %270) #17
  %291 = trunc i64 %290 to i32
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %256, label %343

293:                                              ; preds = %252, %337
  %294 = phi i64 [ %340, %337 ], [ %249, %252 ]
  %295 = phi i8* [ %307, %337 ], [ %374, %252 ]
  %296 = call i8* @strchr(i8* %295, i32 44) #17
  %297 = icmp eq i8* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %293
  store i8 0, i8* %296, align 1
  %299 = call i8* @sdsnew(i8* %295) #14
  %300 = getelementptr inbounds i8, i8* %296, i64 1
  br label %306

301:                                              ; preds = %293
  %302 = call i8* @sdsnew(i8* %295) #14
  %303 = shl i64 %294, 32
  %304 = ashr exact i64 %303, 32
  %305 = getelementptr inbounds i8, i8* %295, i64 %304
  br label %306

306:                                              ; preds = %301, %298
  %307 = phi i8* [ %300, %298 ], [ %305, %301 ]
  %308 = phi i8* [ %299, %298 ], [ %302, %301 ]
  %309 = call i32 @strcmp(i8* %308, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @788, i64 0, i64 0)) #17
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %306
  %312 = load i32, i32* %253, align 8
  %313 = or i32 %312, 8
  store i32 %313, i32* %253, align 8
  br label %337

314:                                              ; preds = %306
  %315 = call i32 @strcmp(i8* %308, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @789, i64 0, i64 0)) #17
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %314
  %318 = load i32, i32* %253, align 8
  %319 = or i32 %318, 16
  store i32 %319, i32* %253, align 8
  br label %337

320:                                              ; preds = %314
  %321 = call i32 @strcmp(i8* %308, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @790, i64 0, i64 0)) #17
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %326

323:                                              ; preds = %320
  %324 = load i32, i32* %253, align 8
  %325 = or i32 %324, 32
  store i32 %325, i32* %253, align 8
  br label %337

326:                                              ; preds = %320
  %327 = call i32 @strcmp(i8* %308, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @791, i64 0, i64 0)) #17
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %337

329:                                              ; preds = %326
  %330 = load i32, i32* %253, align 8
  %331 = or i32 %330, 2
  store i32 %331, i32* %253, align 8
  %332 = load i8*, i8** %255, align 8
  %333 = icmp eq i8* %332, null
  br i1 %333, label %335, label %334

334:                                              ; preds = %329
  call void @sdsfree(i8* nonnull %332) #14
  br label %335

335:                                              ; preds = %329, %334
  %336 = call i8* @sdsnew(i8* nonnull %59) #14
  store i8* %336, i8** %255, align 8
  br label %337

337:                                              ; preds = %317, %326, %335, %323, %311
  %338 = load %24*, %24** %234, align 8
  %339 = call %24* @listAddNodeTail(%24* %338, i8* %308) #14
  %340 = call i64 @strlen(i8* %307) #17
  %341 = trunc i64 %340 to i32
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %293, label %343

343:                                              ; preds = %337, %287, %247
  %344 = icmp eq i8* %56, null
  br i1 %344, label %348, label %345

345:                                              ; preds = %343
  %346 = call i64 @strtoll(i8* nocapture nonnull %56, i8** null, i32 10) #14
  %347 = getelementptr inbounds %27, %27* %224, i64 0, i32 4
  store i64 %346, i64* %347, align 8
  br label %348

348:                                              ; preds = %343, %345
  %349 = icmp eq i8* %58, null
  br i1 %349, label %353, label %350

350:                                              ; preds = %348
  %351 = call i64 @strtoll(i8* nocapture nonnull %58, i8** null, i32 10) #14
  %352 = getelementptr inbounds %27, %27* %224, i64 0, i32 5
  store i64 %351, i64* %352, align 8
  br label %353

353:                                              ; preds = %348, %350
  %354 = icmp eq i8* %57, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %353
  %356 = call i64 @strtoll(i8* nocapture nonnull %57, i8** null, i32 10) #14
  %357 = getelementptr inbounds %27, %27* %224, i64 0, i32 6
  store i64 %356, i64* %357, align 8
  br label %358

358:                                              ; preds = %353, %355
  %359 = and i1 %33, %62
  %360 = select i1 %359, i32 4, i32 0
  br label %361

361:                                              ; preds = %358, %178
  %362 = phi i32 [ %360, %358 ], [ %182, %178 ]
  %363 = trunc i32 %362 to i3
  switch i3 %363, label %371 [
    i3 0, label %364
    i3 3, label %364
    i3 -4, label %367
    i3 2, label %367
  ]

364:                                              ; preds = %361, %361
  %365 = call i8* @strchr(i8* nonnull %47, i32 10)
  %366 = icmp eq i8* %365, null
  br i1 %366, label %367, label %44

367:                                              ; preds = %373, %50, %44, %361, %361, %364, %220
  %368 = phi i32 [ 0, %220 ], [ 0, %373 ], [ 0, %50 ], [ 0, %44 ], [ 1, %361 ], [ 1, %361 ], [ 1, %364 ]
  br i1 %8, label %371, label %369

369:                                              ; preds = %23, %13, %367
  %370 = phi i32 [ 0, %13 ], [ %368, %367 ], [ 1, %23 ]
  call void @freeReplyObject(i8* nonnull %7) #14
  br label %371

371:                                              ; preds = %361, %3, %369, %367
  %372 = phi i32 [ %368, %367 ], [ %370, %369 ], [ 0, %3 ], [ undef, %361 ]
  ret i32 %372

373:                                              ; preds = %50
  store i8 0, i8* %52, align 1
  %374 = getelementptr inbounds i8, i8* %52, i64 1
  %375 = call i8* @strchr(i8* nonnull %374, i32 32) #17
  %376 = icmp eq i8* %375, null
  br i1 %376, label %367, label %377

377:                                              ; preds = %373
  store i8 0, i8* %375, align 1
  %378 = getelementptr inbounds i8, i8* %375, i64 1
  %379 = call i8* @strchr(i8* nonnull %378, i32 32) #17
  %380 = icmp eq i8* %379, null
  br i1 %380, label %54, label %381

381:                                              ; preds = %377
  store i8 0, i8* %379, align 1
  %382 = getelementptr inbounds i8, i8* %379, i64 1
  %383 = call i8* @strchr(i8* nonnull %382, i32 32) #17
  %384 = icmp eq i8* %383, null
  br i1 %384, label %54, label %385

385:                                              ; preds = %381
  store i8 0, i8* %383, align 1
  %386 = getelementptr inbounds i8, i8* %383, i64 1
  %387 = call i8* @strchr(i8* nonnull %386, i32 32) #17
  %388 = icmp eq i8* %387, null
  br i1 %388, label %54, label %389

389:                                              ; preds = %385
  store i8 0, i8* %387, align 1
  %390 = getelementptr inbounds i8, i8* %387, i64 1
  %391 = call i8* @strchr(i8* nonnull %390, i32 32) #17
  %392 = icmp eq i8* %391, null
  br i1 %392, label %54, label %393

393:                                              ; preds = %389
  store i8 0, i8* %391, align 1
  %394 = getelementptr inbounds i8, i8* %391, i64 1
  %395 = call i8* @strchr(i8* nonnull %394, i32 32) #17
  %396 = icmp eq i8* %395, null
  br i1 %396, label %54, label %397

397:                                              ; preds = %393
  store i8 0, i8* %395, align 1
  %398 = getelementptr inbounds i8, i8* %395, i64 1
  br label %54
}

; Function Attrs: nounwind uwtable
define internal void @1361(i32 %0, i8* nocapture readonly %1, ...) unnamed_addr #0 {
  %3 = alloca [1 x %33], align 16
  %4 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %5 = and i32 %4, 256
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @792, i64 0, i64 0))
  switch i32 %0, label %17 [
    i32 1, label %9
    i32 2, label %11
    i32 3, label %13
    i32 4, label %15
  ]

9:                                                ; preds = %7
  %10 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @793, i64 0, i64 0))
  br label %19

11:                                               ; preds = %7
  %12 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @794, i64 0, i64 0))
  br label %19

13:                                               ; preds = %7
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @795, i64 0, i64 0))
  br label %19

15:                                               ; preds = %7
  %16 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @796, i64 0, i64 0))
  br label %19

17:                                               ; preds = %7
  %18 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @797, i64 0, i64 0))
  br label %19

19:                                               ; preds = %9, %11, %13, %15, %17, %2
  %20 = bitcast [1 x %33]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14
  %21 = getelementptr inbounds [1 x %33], [1 x %33]* %3, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %20)
  %22 = load %1*, %1** @stdout, align 8
  %23 = call i32 @vfprintf(%1* %22, i8* %1, %33* nonnull %21) #14
  call void @llvm.va_end(i8* nonnull %20)
  br i1 %6, label %24, label %26

24:                                               ; preds = %19
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1362(%27* nocapture readonly %0, i8** %1) unnamed_addr #0 {
  %3 = getelementptr %27, %27* %0, i64 0, i32 0
  %4 = load %9*, %9** %3, align 8
  %5 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0)) #14
  %6 = icmp ne i8** %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  store i8* null, i8** %1, align 8
  br label %8

8:                                                ; preds = %7, %2
  %9 = icmp eq i8* %5, null
  br i1 %9, label %76, label %10

10:                                               ; preds = %8
  %11 = bitcast i8* %5 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  br i1 %6, label %15, label %25

15:                                               ; preds = %14
  %16 = getelementptr inbounds i8, i8* %5, i64 24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 1
  %20 = tail call i8* @zmalloc(i64 %19) #14
  store i8* %20, i8** %1, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 32
  %22 = bitcast i8* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i8* @strcpy(i8* %20, i8* %23) #14
  br label %25

25:                                               ; preds = %15, %14
  tail call void @freeReplyObject(i8* nonnull %5) #14
  br label %76

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %5, i64 32
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call i8* @strstr(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @798, i64 0, i64 0)) #17
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %73

32:                                               ; preds = %26
  tail call void @freeReplyObject(i8* nonnull %5) #14
  %33 = load %9*, %9** %3, align 8
  %34 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i64 0, i64 0)) #14
  %35 = icmp eq i8** %1, null
  br i1 %35, label %36, label %50

36:                                               ; preds = %32
  %37 = icmp eq i8* %34, null
  br i1 %37, label %73, label %38

38:                                               ; preds = %36
  %39 = bitcast i8* %34 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 6
  br i1 %41, label %42, label %66

42:                                               ; preds = %38
  %43 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds i8, i8* %34, i64 32
  %48 = bitcast i8* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %44, i32 %46, i8* %49) #14
  br label %73

50:                                               ; preds = %32
  store i8* null, i8** %1, align 8
  %51 = icmp eq i8* %34, null
  br i1 %51, label %73, label %52

52:                                               ; preds = %50
  %53 = bitcast i8* %34 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 6
  br i1 %55, label %56, label %66

56:                                               ; preds = %52
  %57 = getelementptr inbounds i8, i8* %34, i64 24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 1
  %61 = tail call i8* @zmalloc(i64 %60) #14
  store i8* %61, i8** %1, align 8
  %62 = getelementptr inbounds i8, i8* %34, i64 32
  %63 = bitcast i8* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = tail call i8* @strcpy(i8* %61, i8* %64) #14
  br label %73

66:                                               ; preds = %38, %52
  %67 = getelementptr inbounds i8, i8* %34, i64 32
  %68 = bitcast i8* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = tail call fastcc i64 @1367(i8* %69, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @799, i64 0, i64 0))
  %71 = icmp eq i64 %70, 1
  %72 = zext i1 %71 to i32
  br label %73

73:                                               ; preds = %50, %56, %36, %42, %26, %66
  %74 = phi i8* [ %34, %66 ], [ %5, %26 ], [ %34, %42 ], [ null, %36 ], [ %34, %56 ], [ null, %50 ]
  %75 = phi i32 [ %72, %66 ], [ 0, %26 ], [ 0, %42 ], [ 0, %36 ], [ 0, %56 ], [ 0, %50 ]
  tail call void @freeReplyObject(i8* %74) #14
  br label %76

76:                                               ; preds = %8, %25, %73
  %77 = phi i32 [ %75, %73 ], [ 0, %25 ], [ 0, %8 ]
  ret i32 %77
}

declare dso_local %24* @listAddNodeTail(%24*, i8*) local_unnamed_addr #5

declare dso_local i8* @zcalloc(i64) local_unnamed_addr #5

declare dso_local void @listRewind(%24*, %26*) local_unnamed_addr #5

declare dso_local %25* @listNext(%26*) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i64 @lround(double) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1363(%27* nocapture %0, i8** %1) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %27, %27* %0, i64 0, i32 10
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %164, label %7

7:                                                ; preds = %2
  %8 = icmp ne i8** %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i8* null, i8** %1, align 8
  br label %10

10:                                               ; preds = %9, %7
  %11 = getelementptr inbounds %27, %27* %0, i64 0, i32 9
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %16 = load %9*, %9** %15, align 8
  %17 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @831, i64 0, i64 0), i8* nonnull %12) #14
  %18 = bitcast i8* %17 to %30*
  %19 = icmp eq i8* %17, null
  br i1 %19, label %156, label %20

20:                                               ; preds = %14
  %21 = bitcast i8* %17 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 6
  br i1 %23, label %24, label %152

24:                                               ; preds = %20
  br i1 %8, label %25, label %161

25:                                               ; preds = %24
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  %30 = tail call i8* @zmalloc(i64 %29) #14
  store i8* %30, i8** %1, align 8
  %31 = getelementptr inbounds i8, i8* %17, i64 32
  %32 = bitcast i8* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i8* @strcpy(i8* %30, i8* %33) #14
  br label %161

35:                                               ; preds = %10
  %36 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  store i8* null, i8** %3, align 8
  %37 = getelementptr inbounds %27, %27* %0, i64 0, i32 12
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, 2
  %40 = sext i32 %39 to i64
  %41 = shl nsw i64 %40, 3
  %42 = tail call i8* @zmalloc(i64 %41) #14
  %43 = bitcast i8* %42 to i8**
  %44 = tail call i8* @zmalloc(i64 %41) #14
  %45 = bitcast i8* %44 to i64*
  %46 = bitcast i8* %42 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([8 x i8], [8 x i8]* @832, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @833, i64 0, i64 0)>, <2 x i8*>* %46, align 8
  %47 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> <i64 7, i64 8>, <2 x i64>* %47, align 8
  store i8* null, i8** %1, align 8
  %48 = icmp sgt i32 %38, 0
  br i1 %48, label %49, label %95

49:                                               ; preds = %35, %87
  %50 = phi i64 [ %89, %87 ], [ 0, %35 ]
  %51 = phi i32 [ %88, %87 ], [ 2, %35 ]
  %52 = getelementptr inbounds %27, %27* %0, i64 0, i32 11, i64 %50
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %87, label %55

55:                                               ; preds = %49
  %56 = tail call i8* @sdsfromlonglong(i64 %50) #14
  %57 = sext i32 %51 to i64
  %58 = getelementptr inbounds i8*, i8** %43, i64 %57
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds i8, i8* %56, i64 -1
  %60 = load i8, i8* %59, align 1
  %61 = trunc i8 %60 to i3
  switch i3 %61, label %83 [
    i3 0, label %62
    i3 1, label %65
    i3 2, label %69
    i3 3, label %74
    i3 -4, label %79
  ]

62:                                               ; preds = %55
  %63 = lshr i8 %60, 3
  %64 = zext i8 %63 to i64
  br label %83

65:                                               ; preds = %55
  %66 = getelementptr inbounds i8, i8* %56, i64 -3
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  br label %83

69:                                               ; preds = %55
  %70 = getelementptr inbounds i8, i8* %56, i64 -5
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 1
  %73 = zext i16 %72 to i64
  br label %83

74:                                               ; preds = %55
  %75 = getelementptr inbounds i8, i8* %56, i64 -9
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 1
  %78 = zext i32 %77 to i64
  br label %83

79:                                               ; preds = %55
  %80 = getelementptr inbounds i8, i8* %56, i64 -17
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 1
  br label %83

83:                                               ; preds = %79, %74, %69, %65, %62, %55
  %84 = phi i64 [ %82, %79 ], [ %78, %74 ], [ %73, %69 ], [ %68, %65 ], [ %64, %62 ], [ 0, %55 ]
  %85 = getelementptr inbounds i64, i64* %45, i64 %57
  store i64 %84, i64* %85, align 8
  %86 = add nsw i32 %51, 1
  br label %87

87:                                               ; preds = %83, %49
  %88 = phi i32 [ %86, %83 ], [ %51, %49 ]
  %89 = add nuw nsw i64 %50, 1
  %90 = icmp ult i64 %89, 16384
  %91 = icmp slt i32 %88, %39
  %92 = and i1 %90, %91
  br i1 %92, label %49, label %93

93:                                               ; preds = %87
  %94 = icmp eq i32 %88, 0
  br i1 %94, label %130, label %95

95:                                               ; preds = %93, %35
  %96 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %97 = load %9*, %9** %96, align 8
  %98 = tail call i32 @redisAppendCommandArgv(%9* %97, i32 %39, i8** %43, i64* %45) #14
  %99 = load %9*, %9** %96, align 8
  %100 = call i32 @redisGetReply(%9* %99, i8** nonnull %3) #14
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %130

102:                                              ; preds = %95
  %103 = load i8*, i8** %3, align 8
  %104 = bitcast i8* %103 to %30*
  %105 = icmp eq i8* %103, null
  br i1 %105, label %130, label %106

106:                                              ; preds = %102
  %107 = bitcast i8* %103 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 6
  br i1 %109, label %110, label %130

110:                                              ; preds = %106
  %111 = icmp eq i8** %1, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds i8, i8* %103, i64 24
  %114 = bitcast i8* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 1
  %117 = call i8* @zmalloc(i64 %116) #14
  store i8* %117, i8** %1, align 8
  %118 = getelementptr inbounds i8, i8* %103, i64 32
  %119 = bitcast i8* %118 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = call i8* @strcpy(i8* %117, i8* %120) #14
  br label %130

122:                                              ; preds = %110
  %123 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds i8, i8* %103, i64 32
  %128 = bitcast i8* %127 to i8**
  %129 = load i8*, i8** %128, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %124, i32 %126, i8* %129) #14
  br label %130

130:                                              ; preds = %122, %112, %106, %102, %95, %93
  %131 = phi i32 [ 0, %93 ], [ 0, %95 ], [ 0, %112 ], [ 0, %122 ], [ 1, %106 ], [ 0, %102 ]
  %132 = phi i8* [ null, %93 ], [ null, %95 ], [ %103, %112 ], [ %103, %122 ], [ %103, %106 ], [ null, %102 ]
  %133 = phi %30* [ null, %93 ], [ null, %95 ], [ %104, %112 ], [ %104, %122 ], [ %104, %106 ], [ null, %102 ]
  call void @zfree(i8* %44) #14
  %134 = icmp eq i8* %42, null
  br i1 %134, label %143, label %135

135:                                              ; preds = %130
  br i1 %48, label %136, label %142

136:                                              ; preds = %135, %136
  %137 = phi i64 [ %140, %136 ], [ 2, %135 ]
  %138 = getelementptr inbounds i8*, i8** %43, i64 %137
  %139 = load i8*, i8** %138, align 8
  call void @sdsfree(i8* %139) #14
  %140 = add nuw nsw i64 %137, 1
  %141 = icmp slt i64 %140, %40
  br i1 %141, label %136, label %142

142:                                              ; preds = %136, %135
  call void @zfree(i8* nonnull %42) #14
  br label %143

143:                                              ; preds = %142, %130
  %144 = icmp eq %30* %133, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  call void @freeReplyObject(i8* %132) #14
  br label %146

146:                                              ; preds = %143, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  %147 = icmp eq i32 %131, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %146
  %149 = load i8*, i8** %1, align 8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %148, %146
  br label %152

152:                                              ; preds = %151, %148, %20
  %153 = phi i8* [ %17, %20 ], [ null, %148 ], [ null, %151 ]
  %154 = phi %30* [ %18, %20 ], [ null, %148 ], [ null, %151 ]
  %155 = phi i32 [ 1, %20 ], [ 1, %148 ], [ 0, %151 ]
  store i32 0, i32* %4, align 8
  br label %156

156:                                              ; preds = %14, %152
  %157 = phi i8* [ %153, %152 ], [ null, %14 ]
  %158 = phi %30* [ %154, %152 ], [ %18, %14 ]
  %159 = phi i32 [ %155, %152 ], [ 0, %14 ]
  %160 = icmp eq %30* %158, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %24, %25, %156
  %162 = phi i32 [ %159, %156 ], [ 0, %25 ], [ 0, %24 ]
  %163 = phi i8* [ %157, %156 ], [ %17, %25 ], [ %17, %24 ]
  call void @freeReplyObject(i8* %163) #14
  br label %164

164:                                              ; preds = %161, %156, %2
  %165 = phi i32 [ 0, %2 ], [ %159, %156 ], [ %162, %161 ]
  ret i32 %165
}

declare dso_local i32 @sleep(i32) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc void @1364() unnamed_addr #0 {
  %1 = alloca %26, align 8
  %2 = alloca %26, align 8
  %3 = alloca %26, align 8
  %4 = tail call i32 @puts(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.32, i64 0, i64 0))
  %5 = load %24*, %24** @.0.1, align 8
  %6 = getelementptr inbounds %24, %24* %5, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = uitofp i64 %7 to float
  %9 = fmul float %8, 0x3FC3333340000000
  %10 = fptosi float %9 to i32
  %11 = add nsw i32 %10, 20
  %12 = call fastcc i32 @1375()
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %245

14:                                               ; preds = %0
  %15 = bitcast %26* %1 to i8*
  %16 = bitcast %26* %2 to i8*
  %17 = bitcast %26* %3 to i8*
  br label %18

18:                                               ; preds = %14, %241
  %19 = phi i32 [ 0, %14 ], [ %242, %241 ]
  %20 = call i32 @putchar(i32 46)
  %21 = load %1*, %1** @stdout, align 8
  %22 = call i32 @fflush(%1* %21)
  %23 = call i32 @sleep(i32 1) #14
  %24 = add nsw i32 %19, 1
  %25 = icmp slt i32 %19, %11
  br i1 %25, label %241, label %26

26:                                               ; preds = %18
  %27 = load %24*, %24** @.0.1, align 8
  %28 = icmp eq %24* %27, null
  br i1 %28, label %241, label %29

29:                                               ; preds = %26
  %30 = call %3* @dictCreate(%4* nonnull @842, i8* null) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %31 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %31, %26* nonnull %1) #14
  %32 = call %25* @listNext(%26* nonnull %1) #14
  %33 = icmp eq %25* %32, null
  br i1 %33, label %185, label %34

34:                                               ; preds = %29, %182
  %35 = phi %25* [ %183, %182 ], [ %32, %29 ]
  %36 = getelementptr inbounds %25, %25* %35, i64 0, i32 2
  %37 = bitcast i8** %36 to %27**
  %38 = load %27*, %27** %37, align 8
  %39 = getelementptr inbounds %27, %27* %38, i64 0, i32 0
  %40 = load %9*, %9** %39, align 8
  %41 = call i8* (%9*, i8*, ...) @redisCommand(%9* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i64 0, i64 0)) #14
  %42 = icmp eq i8* %41, null
  br i1 %42, label %182, label %43

43:                                               ; preds = %34
  %44 = bitcast i8* %41 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 6
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = getelementptr inbounds %27, %27* %38, i64 0, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %27, %27* %38, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds i8, i8* %41, i64 32
  %53 = bitcast i8* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %49, i32 %51, i8* %54) #14
  call void @freeReplyObject(i8* nonnull %41) #14
  br label %182

55:                                               ; preds = %43
  %56 = call %24* @listCreate() #14
  %57 = getelementptr inbounds i8, i8* %41, i64 32
  %58 = bitcast i8* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = call i8* @strchr(i8* %59, i32 10) #14
  %61 = icmp eq i8* %60, null
  br i1 %61, label %142, label %62

62:                                               ; preds = %55, %139
  %63 = phi i8* [ %140, %139 ], [ %60, %55 ]
  %64 = phi i8* [ %65, %139 ], [ %59, %55 ]
  store i8 0, i8* %63, align 1
  %65 = getelementptr inbounds i8, i8* %63, i64 1
  %66 = call i8* @strchr(i8* %64, i32 32) #17
  %67 = icmp eq i8* %66, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62, %82
  %69 = phi i8* [ %88, %82 ], [ %66, %62 ]
  %70 = phi i8* [ %76, %82 ], [ %64, %62 ]
  %71 = phi i8* [ %86, %82 ], [ null, %62 ]
  %72 = phi i8* [ %85, %82 ], [ null, %62 ]
  %73 = phi i8* [ %84, %82 ], [ null, %62 ]
  %74 = phi i8* [ %83, %82 ], [ null, %62 ]
  %75 = phi i32 [ %87, %82 ], [ 0, %62 ]
  store i8 0, i8* %69, align 1
  %76 = getelementptr inbounds i8, i8* %69, i64 1
  %77 = trunc i32 %75 to i31
  switch i31 %77, label %81 [
    i31 0, label %82
    i31 1, label %78
    i31 2, label %79
    i31 7, label %80
    i31 8, label %90
  ]

78:                                               ; preds = %68
  br label %82

79:                                               ; preds = %68
  br label %82

80:                                               ; preds = %68
  br label %82

81:                                               ; preds = %68
  br label %82

82:                                               ; preds = %81, %80, %79, %78, %68
  %83 = phi i8* [ %74, %78 ], [ %74, %79 ], [ %74, %80 ], [ %70, %68 ], [ %74, %81 ]
  %84 = phi i8* [ %70, %78 ], [ %73, %79 ], [ %73, %80 ], [ %73, %68 ], [ %73, %81 ]
  %85 = phi i8* [ %72, %78 ], [ %70, %79 ], [ %72, %80 ], [ %72, %68 ], [ %72, %81 ]
  %86 = phi i8* [ %71, %78 ], [ %71, %79 ], [ %70, %80 ], [ %71, %68 ], [ %71, %81 ]
  %87 = add nuw nsw i32 %75, 1
  %88 = call i8* @strchr(i8* nonnull %76, i32 32) #17
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %68

90:                                               ; preds = %82, %68
  %91 = phi i32 [ %87, %82 ], [ %75, %68 ]
  %92 = phi i8* [ %83, %82 ], [ %74, %68 ]
  %93 = phi i8* [ %84, %82 ], [ %73, %68 ]
  %94 = phi i8* [ %85, %82 ], [ %72, %68 ]
  %95 = phi i8* [ %86, %82 ], [ %71, %68 ]
  %96 = icmp eq i32 %91, 7
  %97 = select i1 %96, i8* %76, i8* %95
  br label %98

98:                                               ; preds = %90, %62
  %99 = phi i8* [ null, %62 ], [ %94, %90 ]
  %100 = phi i8* [ null, %62 ], [ %93, %90 ]
  %101 = phi i8* [ null, %62 ], [ %92, %90 ]
  %102 = phi i8* [ null, %62 ], [ %97, %90 ]
  %103 = icmp eq i8* %101, null
  %104 = icmp eq i8* %100, null
  %105 = or i1 %104, %103
  %106 = icmp eq i8* %99, null
  %107 = or i1 %106, %105
  %108 = icmp eq i8* %102, null
  %109 = or i1 %108, %107
  br i1 %109, label %139, label %110

110:                                              ; preds = %98
  %111 = call i8* @strstr(i8* nonnull %99, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @784, i64 0, i64 0)) #17
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %139

113:                                              ; preds = %110
  %114 = call i8* @strstr(i8* nonnull %99, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @789, i64 0, i64 0)) #17
  %115 = icmp eq i8* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = call i8* @strstr(i8* nonnull %99, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @844, i64 0, i64 0)) #17
  %118 = icmp ne i8* %117, null
  br label %125

119:                                              ; preds = %113
  %120 = call i8* @strstr(i8* nonnull %102, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @789, i64 0, i64 0)) #17
  %121 = icmp ne i8* %120, null
  %122 = call i8* @strstr(i8* nonnull %99, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @844, i64 0, i64 0)) #17
  %123 = icmp ne i8* %122, null
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %139

125:                                              ; preds = %119, %116
  %126 = phi i1 [ %118, %116 ], [ %123, %119 ]
  %127 = zext i1 %126 to i32
  %128 = call i8* @zmalloc(i64 24) #14
  %129 = call i8* @sdsnew(i8* nonnull %101) #14
  %130 = bitcast i8* %128 to i8**
  store i8* %129, i8** %130, align 8
  %131 = call i8* @sdsnew(i8* nonnull %100) #14
  %132 = getelementptr inbounds i8, i8* %128, i64 8
  %133 = bitcast i8* %132 to i8**
  store i8* %131, i8** %133, align 8
  %134 = getelementptr inbounds i8, i8* %128, i64 16
  %135 = bitcast i8* %134 to i32*
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds i8, i8* %128, i64 20
  %137 = bitcast i8* %136 to i32*
  store i32 %127, i32* %137, align 4
  %138 = call %24* @listAddNodeTail(%24* %56, i8* %128) #14
  br label %139

139:                                              ; preds = %125, %119, %110, %98
  %140 = call i8* @strchr(i8* nonnull %65, i32 10) #14
  %141 = icmp eq i8* %140, null
  br i1 %141, label %142, label %62

142:                                              ; preds = %139, %55
  call void @freeReplyObject(i8* nonnull %41) #14
  %143 = icmp eq %24* %56, null
  br i1 %143, label %182, label %144

144:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  call void @listRewind(%24* nonnull %56, %26* nonnull %2) #14
  %145 = call %25* @listNext(%26* nonnull %2) #14
  %146 = icmp eq %25* %145, null
  br i1 %146, label %181, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %27, %27* %38, i64 0, i32 2
  %149 = getelementptr inbounds %27, %27* %38, i64 0, i32 3
  br label %150

150:                                              ; preds = %169, %147
  %151 = phi %25* [ %145, %147 ], [ %179, %169 ]
  %152 = getelementptr inbounds %25, %25* %151, i64 0, i32 2
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 8
  %155 = bitcast i8* %154 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = call %6* @dictFind(%3* %30, i8* %156) #14
  %158 = icmp eq %6* %157, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %150
  %160 = getelementptr inbounds %6, %6* %157, i64 0, i32 1, i32 0
  %161 = bitcast i8** %160 to %24**
  %162 = load %24*, %24** %161, align 8
  br label %169

163:                                              ; preds = %150
  %164 = call %24* @listCreate() #14
  %165 = load i8*, i8** %155, align 8
  %166 = call i8* @sdsdup(i8* %165) #14
  %167 = bitcast %24* %164 to i8*
  %168 = call i32 @dictAdd(%3* %30, i8* %166, i8* %167) #14
  br label %169

169:                                              ; preds = %163, %159
  %170 = phi %24* [ %162, %159 ], [ %164, %163 ]
  %171 = call i8* @sdsempty() #14
  %172 = load i8*, i8** %148, align 8
  %173 = load i32, i32* %149, align 8
  %174 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @843, i64 0, i64 0), i8* %172, i32 %173) #14
  %175 = call %24* @listAddNodeTail(%24* %170, i8* %174) #14
  %176 = bitcast i8* %153 to i8**
  %177 = load i8*, i8** %176, align 8
  call void @sdsfree(i8* %177) #14
  %178 = load i8*, i8** %155, align 8
  call void @sdsfree(i8* %178) #14
  call void @zfree(i8* %153) #14
  %179 = call %25* @listNext(%26* nonnull %2) #14
  %180 = icmp eq %25* %179, null
  br i1 %180, label %181, label %150

181:                                              ; preds = %169, %144
  call void @listRelease(%24* nonnull %56) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  br label %182

182:                                              ; preds = %181, %142, %47, %34
  %183 = call %25* @listNext(%26* nonnull %1) #14
  %184 = icmp eq %25* %183, null
  br i1 %184, label %185, label %34

185:                                              ; preds = %182, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  %186 = icmp eq %3* %30, null
  br i1 %186, label %241, label %187

187:                                              ; preds = %185
  %188 = getelementptr inbounds %3, %3* %30, i64 0, i32 2, i64 0, i32 3
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %3, %3* %30, i64 0, i32 2, i64 1, i32 3
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 0, %191
  %193 = icmp eq i64 %189, %192
  br i1 %193, label %240, label %194

194:                                              ; preds = %187
  %195 = call i32 @putchar(i32 10)
  %196 = load i64, i64* %188, align 8
  %197 = load i64, i64* %190, align 8
  %198 = add i64 %197, %196
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @835, i64 0, i64 0), i64 %198)
  %199 = call %32* @dictGetIterator(%3* nonnull %30) #14
  %200 = call %6* @dictNext(%32* %199) #14
  %201 = icmp eq %6* %200, null
  br i1 %201, label %237, label %202

202:                                              ; preds = %194, %234
  %203 = phi %6* [ %235, %234 ], [ %200, %194 ]
  %204 = getelementptr inbounds %6, %6* %203, i64 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = getelementptr inbounds %6, %6* %203, i64 0, i32 1, i32 0
  %207 = bitcast i8** %206 to %24**
  %208 = load %24*, %24** %207, align 8
  %209 = call i8* @strrchr(i8* %205, i32 64) #17
  %210 = icmp eq i8* %209, null
  br i1 %210, label %215, label %211

211:                                              ; preds = %202
  store i8 0, i8* %209, align 1
  %212 = getelementptr inbounds i8, i8* %209, i64 1
  %213 = call i64 @strtol(i8* nocapture nonnull %212, i8** null, i32 10) #14
  %214 = trunc i64 %213 to i32
  br label %215

215:                                              ; preds = %211, %202
  %216 = phi i32 [ 0, %202 ], [ %214, %211 ]
  %217 = call i8* @strrchr(i8* %205, i32 58) #17
  %218 = icmp eq i8* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %215
  store i8 0, i8* %217, align 1
  %220 = getelementptr inbounds i8, i8* %217, i64 1
  %221 = call i64 @strtol(i8* nocapture nonnull %220, i8** null, i32 10) #14
  %222 = icmp eq i32 %216, 0
  br i1 %222, label %224, label %223

223:                                              ; preds = %219
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @836, i64 0, i64 0), i32 %216, i8* %205)
  br label %225

224:                                              ; preds = %219, %215
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @837, i64 0, i64 0), i8* %205)
  br label %225

225:                                              ; preds = %224, %223
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  call void @listRewind(%24* %208, %26* nonnull %3) #14
  %226 = call %25* @listNext(%26* nonnull %3) #14
  %227 = icmp eq %25* %226, null
  br i1 %227, label %234, label %228

228:                                              ; preds = %225, %228
  %229 = phi %25* [ %232, %228 ], [ %226, %225 ]
  %230 = getelementptr inbounds %25, %25* %229, i64 0, i32 2
  %231 = load i8*, i8** %230, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @838, i64 0, i64 0), i8* %231)
  call void @sdsfree(i8* %231) #14
  %232 = call %25* @listNext(%26* nonnull %3) #14
  %233 = icmp eq %25* %232, null
  br i1 %233, label %234, label %228

234:                                              ; preds = %228, %225
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @839, i64 0, i64 0))
  call void @listEmpty(%24* %208) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  %235 = call %6* @dictNext(%32* %199) #14
  %236 = icmp eq %6* %235, null
  br i1 %236, label %237, label %202

237:                                              ; preds = %234, %194
  %238 = icmp eq %32* %199, null
  br i1 %238, label %240, label %239

239:                                              ; preds = %237
  call void @dictReleaseIterator(%32* nonnull %199) #14
  br label %240

240:                                              ; preds = %237, %239, %187
  call void @dictRelease(%3* nonnull %30) #14
  br label %241

241:                                              ; preds = %185, %26, %240, %18
  %242 = phi i32 [ %24, %18 ], [ 0, %240 ], [ 0, %185 ], [ 0, %26 ]
  %243 = call fastcc i32 @1375()
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %18, label %245

245:                                              ; preds = %241, %0
  %246 = call i32 @putchar(i32 10)
  ret void
}

declare dso_local void @listEmpty(%24*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1365(%27* %0) unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %26, align 8
  %4 = getelementptr %27, %27* %0, i64 0, i32 0
  %5 = load %9*, %9** %4, align 8
  %6 = icmp eq %9* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @1358(%27* nonnull %0)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = load %9*, %9** %4, align 8
  br label %13

12:                                               ; preds = %7
  tail call fastcc void @1359(%27* nonnull %0)
  br label %170

13:                                               ; preds = %10, %1
  %14 = phi %9* [ %11, %10 ], [ %5, %1 ]
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  %16 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i64 0, i64 0)) #14
  store i8* null, i8** %2, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = bitcast i8* %16 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %16, i64 24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 1
  %27 = tail call i8* @zmalloc(i64 %26) #14
  store i8* %27, i8** %2, align 8
  %28 = getelementptr inbounds i8, i8* %16, i64 32
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i8* @strcpy(i8* %27, i8* %30) #14
  tail call void @freeReplyObject(i8* nonnull %16) #14
  br label %39

32:                                               ; preds = %18
  %33 = getelementptr inbounds i8, i8* %16, i64 32
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call fastcc i64 @1367(i8* %35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @781, i64 0, i64 0)) #14
  %37 = trunc i64 %36 to i32
  tail call void @freeReplyObject(i8* nonnull %16) #14
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %22, %13, %32
  %40 = phi i8* [ %27, %22 ], [ null, %13 ], [ null, %32 ]
  %41 = getelementptr %27, %27* %0, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr %27, %27* %0, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i8* %40, null
  %46 = select i1 %45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @782, i64 0, i64 0), i8* %40
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @783, i64 0, i64 0), i8* %42, i32 %44, i8* %46) #14
  br i1 %45, label %48, label %47

47:                                               ; preds = %39
  tail call void @zfree(i8* nonnull %40) #14
  br label %48

48:                                               ; preds = %39, %47
  tail call fastcc void @1359(%27* nonnull %0)
  br label %168

49:                                               ; preds = %32
  store i8* null, i8** %2, align 8
  %50 = call fastcc i32 @1360(%27* nonnull %0, i32 1, i8** nonnull %2)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = load i8*, i8** %2, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %57, i32 %59, i8* nonnull %53)
  %60 = load i8*, i8** %2, align 8
  call void @zfree(i8* %60) #14
  br label %61

61:                                               ; preds = %52, %55
  call fastcc void @1359(%27* nonnull %0)
  br label %168

62:                                               ; preds = %49
  %63 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %64 = load %24*, %24** @.0.1, align 8
  %65 = icmp eq %24* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %62
  call void @listRewind(%24* nonnull %64, %26* nonnull %3) #14
  %67 = call %25* @listNext(%26* nonnull %3) #14
  %68 = icmp eq %25* %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %69
  %70 = phi %25* [ %74, %69 ], [ %67, %66 ]
  %71 = getelementptr inbounds %25, %25* %70, i64 0, i32 2
  %72 = bitcast i8** %71 to %27**
  %73 = load %27*, %27** %72, align 8
  call fastcc void @1359(%27* %73)
  %74 = call %25* @listNext(%26* nonnull %3) #14
  %75 = icmp eq %25* %74, null
  br i1 %75, label %76, label %69

76:                                               ; preds = %69, %66
  %77 = load %24*, %24** @.0.1, align 8
  call void @listRelease(%24* %77) #14
  br label %78

78:                                               ; preds = %62, %76
  %79 = call %24* @listCreate() #14
  store %24* %79, %24** @.0.1, align 8
  %80 = bitcast %27* %0 to i8*
  %81 = call %24* @listAddNodeTail(%24* %79, i8* %80) #14
  %82 = getelementptr inbounds %27, %27* %0, i64 0, i32 14
  %83 = load %24*, %24** %82, align 8
  %84 = icmp eq %24* %83, null
  br i1 %84, label %139, label %85

85:                                               ; preds = %78
  call void @listRewind(%24* nonnull %83, %26* nonnull %3) #14
  %86 = call %25* @listNext(%26* nonnull %3) #14
  %87 = icmp eq %25* %86, null
  br i1 %87, label %137, label %88

88:                                               ; preds = %85, %134
  %89 = phi %25* [ %135, %134 ], [ %86, %85 ]
  %90 = getelementptr inbounds %25, %25* %89, i64 0, i32 2
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast i8* %91 to %27*
  %93 = getelementptr inbounds i8, i8* %91, i64 16
  %94 = bitcast i8* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %124, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds i8, i8* %91, i64 24
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %124, label %102

102:                                              ; preds = %97
  %103 = bitcast i8* %91 to %9**
  %104 = load %9*, %9** %103, align 8
  %105 = icmp eq %9* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = call fastcc i32 @1358(%27* nonnull %92)
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %106, %102
  store i8* null, i8** %2, align 8
  %110 = call fastcc i32 @1360(%27* nonnull %92, i32 0, i8** nonnull %2)
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %121, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds i8, i8* %91, i64 56
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 56
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %112
  %119 = load %24*, %24** @.0.1, align 8
  %120 = call %24* @listAddNodeTail(%24* %119, i8* nonnull %91) #14
  br label %134

121:                                              ; preds = %109
  %122 = load i8*, i8** %94, align 8
  %123 = load i32, i32* %99, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @845, i64 0, i64 0), i8* %122, i32 %123)
  br label %124

124:                                              ; preds = %112, %106, %97, %88, %121
  %125 = getelementptr inbounds i8, i8* %91, i64 56
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %124
  %131 = load i32, i32* @.2, align 8
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* @.2, align 8
  br label %133

133:                                              ; preds = %124, %130
  call fastcc void @1359(%27* nonnull %92)
  br label %134

134:                                              ; preds = %133, %118
  %135 = call %25* @listNext(%26* nonnull %3) #14
  %136 = icmp eq %25* %135, null
  br i1 %136, label %137, label %88

137:                                              ; preds = %134, %85
  %138 = load %24*, %24** %82, align 8
  call void @listRelease(%24* %138) #14
  store %24* null, %24** %82, align 8
  br label %139

139:                                              ; preds = %78, %137
  %140 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %140, %26* nonnull %3) #14
  %141 = call %25* @listNext(%26* nonnull %3) #14
  %142 = icmp eq %25* %141, null
  br i1 %142, label %167, label %143

143:                                              ; preds = %139, %164
  %144 = phi %25* [ %165, %164 ], [ %141, %139 ]
  %145 = getelementptr inbounds %25, %25* %144, i64 0, i32 2
  %146 = bitcast i8** %145 to %27**
  %147 = load %27*, %27** %146, align 8
  %148 = getelementptr inbounds %27, %27* %147, i64 0, i32 9
  %149 = load i8*, i8** %148, align 8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %143
  %152 = call fastcc %27* @1377(i8* nonnull %149)
  %153 = icmp eq %27* %152, null
  br i1 %153, label %154, label %160

154:                                              ; preds = %151
  %155 = getelementptr inbounds %27, %27* %147, i64 0, i32 2
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %27, %27* %147, i64 0, i32 3
  %158 = load i32, i32* %157, align 8
  %159 = load i8*, i8** %148, align 8
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @846, i64 0, i64 0), i8* %156, i32 %158, i8* %159)
  br label %164

160:                                              ; preds = %151
  %161 = getelementptr inbounds %27, %27* %152, i64 0, i32 13
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 8
  br label %164

164:                                              ; preds = %154, %160, %143
  %165 = call %25* @listNext(%26* nonnull %3) #14
  %166 = icmp eq %25* %165, null
  br i1 %166, label %167, label %143

167:                                              ; preds = %164, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  br label %168

168:                                              ; preds = %167, %61, %48
  %169 = phi i32 [ 1, %167 ], [ 0, %61 ], [ 0, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  br label %170

170:                                              ; preds = %168, %12
  %171 = phi i32 [ %169, %168 ], [ 0, %12 ]
  ret i32 %171
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1366(i32 %0) unnamed_addr #0 {
  %2 = alloca %26, align 8
  %3 = alloca %26, align 8
  %4 = alloca [4 x i8], align 1
  %5 = alloca %26, align 8
  %6 = alloca %26, align 8
  %7 = alloca %26, align 8
  %8 = alloca %26, align 8
  %9 = alloca %26, align 8
  %10 = alloca %26, align 8
  %11 = alloca %26, align 8
  %12 = alloca %26, align 8
  %13 = alloca %26, align 8
  %14 = alloca %26, align 8
  %15 = alloca %26, align 8
  %16 = alloca %26, align 8
  %17 = alloca %26, align 8
  %18 = alloca %26, align 8
  %19 = alloca [16384 x i8], align 16
  %20 = alloca %4, align 8
  %21 = alloca %26, align 8
  %22 = load %24*, %24** @.0.1, align 8
  %23 = getelementptr inbounds %24, %24* %22, i64 0, i32 0
  %24 = load %25*, %25** %23, align 8
  %25 = icmp eq %25* %24, null
  br i1 %25, label %1715, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %25, %25* %24, i64 0, i32 2
  %28 = bitcast i8** %27 to %27**
  %29 = load %27*, %27** %28, align 8
  %30 = getelementptr inbounds %27, %27* %29, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %27, %27* %29, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  tail call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @847, i64 0, i64 0), i8* %31, i32 %33)
  %34 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %0, 0
  br i1 %36, label %37, label %52

37:                                               ; preds = %26
  %38 = bitcast %26* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %39 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %39, %26* nonnull %17) #14
  %40 = call %25* @listNext(%26* nonnull %17) #14
  %41 = icmp eq %25* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %37, %42
  %43 = phi %25* [ %49, %42 ], [ %40, %37 ]
  %44 = getelementptr inbounds %25, %25* %43, i64 0, i32 2
  %45 = bitcast i8** %44 to %27**
  %46 = load %27*, %27** %45, align 8
  %47 = call fastcc i8* @1372(%27* %46, i32 0) #14
  %48 = call i32 @puts(i8* %47) #14
  call void @sdsfree(i8* %47) #14
  %49 = call %25* @listNext(%26* nonnull %17) #14
  %50 = icmp eq %25* %49, null
  br i1 %50, label %51, label %42

51:                                               ; preds = %42, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  br label %52

52:                                               ; preds = %26, %51
  %53 = call fastcc i32 @1375()
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = call i8* @sdsnew(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @848, i64 0, i64 0)) #14
  %57 = load %24*, %24** @.1, align 8
  %58 = icmp eq %24* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = call %24* @listCreate() #14
  store %24* %60, %24** @.1, align 8
  br label %61

61:                                               ; preds = %55, %59
  %62 = phi %24* [ %60, %59 ], [ %57, %55 ]
  %63 = call %24* @listAddNodeTail(%24* %62, i8* %56) #14
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %56) #14
  br label %65

64:                                               ; preds = %52
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @849, i64 0, i64 0))
  br label %65

65:                                               ; preds = %64, %61
  %66 = phi i32 [ 1, %64 ], [ 0, %61 ]
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @850, i64 0, i64 0))
  %67 = bitcast %26* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %68, %26* nonnull %18) #14
  %69 = call %25* @listNext(%26* nonnull %18) #14
  %70 = icmp eq %25* %69, null
  br i1 %70, label %1013, label %71

71:                                               ; preds = %65, %171
  %72 = phi %25* [ %173, %171 ], [ %69, %65 ]
  %73 = phi %3* [ %172, %171 ], [ null, %65 ]
  %74 = getelementptr inbounds %25, %25* %72, i64 0, i32 2
  %75 = bitcast i8** %74 to %27**
  %76 = load %27*, %27** %75, align 8
  %77 = getelementptr inbounds %27, %27* %76, i64 0, i32 15
  %78 = load i8**, i8*** %77, align 8
  %79 = icmp eq i8** %78, null
  br i1 %79, label %123, label %80

80:                                               ; preds = %71
  %81 = icmp eq %3* %73, null
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = call %3* @dictCreate(%4* nonnull @812, i8* null) #14
  br label %84

84:                                               ; preds = %82, %80
  %85 = phi %3* [ %83, %82 ], [ %73, %80 ]
  %86 = call i8* @sdsempty() #14
  %87 = getelementptr inbounds %27, %27* %76, i64 0, i32 2
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %27, %27* %76, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %86, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @851, i64 0, i64 0), i8* %88, i32 %90) #14
  %92 = getelementptr inbounds %27, %27* %76, i64 0, i32 17
  %93 = load i32, i32* %92, align 8
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %113

95:                                               ; preds = %84, %95
  %96 = phi i64 [ %109, %95 ], [ 0, %84 ]
  %97 = phi i8* [ %108, %95 ], [ %91, %84 ]
  %98 = load i8**, i8*** %77, align 8
  %99 = getelementptr inbounds i8*, i8** %98, i64 %96
  %100 = load i8*, i8** %99, align 8
  %101 = or i64 %96, 1
  %102 = getelementptr inbounds i8*, i8** %98, i64 %101
  %103 = load i8*, i8** %102, align 8
  %104 = call i8* @sdsdup(i8* %103) #14
  %105 = call i32 @dictReplace(%3* %85, i8* %100, i8* %104) #14
  %106 = icmp eq i64 %96, 0
  %107 = select i1 %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @828, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @852, i64 0, i64 0)
  %108 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %97, i8* %107, i8* %100) #14
  %109 = add nuw i64 %96, 2
  %110 = load i32, i32* %92, align 8
  %111 = trunc i64 %109 to i32
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %95, label %113

113:                                              ; preds = %95, %84
  %114 = phi i8* [ %91, %84 ], [ %108, %95 ]
  %115 = call i8* @sdscat(i8* %114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @834, i64 0, i64 0)) #14
  %116 = load %24*, %24** @.1, align 8
  %117 = icmp eq %24* %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = call %24* @listCreate() #14
  store %24* %119, %24** @.1, align 8
  br label %120

120:                                              ; preds = %113, %118
  %121 = phi %24* [ %119, %118 ], [ %116, %113 ]
  %122 = call %24* @listAddNodeTail(%24* %121, i8* %115) #14
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %115) #14
  br label %123

123:                                              ; preds = %71, %120
  %124 = phi %3* [ %85, %120 ], [ %73, %71 ]
  %125 = getelementptr inbounds %27, %27* %76, i64 0, i32 16
  %126 = load i8**, i8*** %125, align 8
  %127 = icmp eq i8** %126, null
  br i1 %127, label %171, label %128

128:                                              ; preds = %123
  %129 = icmp eq %3* %124, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = call %3* @dictCreate(%4* nonnull @812, i8* null) #14
  br label %132

132:                                              ; preds = %130, %128
  %133 = phi %3* [ %131, %130 ], [ %124, %128 ]
  %134 = call i8* @sdsempty() #14
  %135 = getelementptr inbounds %27, %27* %76, i64 0, i32 2
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %27, %27* %76, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %134, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @853, i64 0, i64 0), i8* %136, i32 %138) #14
  %140 = getelementptr inbounds %27, %27* %76, i64 0, i32 18
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %161

143:                                              ; preds = %132, %143
  %144 = phi i64 [ %157, %143 ], [ 0, %132 ]
  %145 = phi i8* [ %156, %143 ], [ %139, %132 ]
  %146 = load i8**, i8*** %125, align 8
  %147 = getelementptr inbounds i8*, i8** %146, i64 %144
  %148 = load i8*, i8** %147, align 8
  %149 = or i64 %144, 1
  %150 = getelementptr inbounds i8*, i8** %146, i64 %149
  %151 = load i8*, i8** %150, align 8
  %152 = call i8* @sdsdup(i8* %151) #14
  %153 = call i32 @dictReplace(%3* %133, i8* %148, i8* %152) #14
  %154 = icmp eq i64 %144, 0
  %155 = select i1 %154, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @828, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @852, i64 0, i64 0)
  %156 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %145, i8* %155, i8* %148) #14
  %157 = add nuw i64 %144, 2
  %158 = load i32, i32* %140, align 4
  %159 = trunc i64 %157 to i32
  %160 = icmp sgt i32 %158, %159
  br i1 %160, label %143, label %161

161:                                              ; preds = %143, %132
  %162 = phi i8* [ %139, %132 ], [ %156, %143 ]
  %163 = call i8* @sdscat(i8* %162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @834, i64 0, i64 0)) #14
  %164 = load %24*, %24** @.1, align 8
  %165 = icmp eq %24* %164, null
  br i1 %165, label %166, label %168

166:                                              ; preds = %161
  %167 = call %24* @listCreate() #14
  store %24* %167, %24** @.1, align 8
  br label %168

168:                                              ; preds = %161, %166
  %169 = phi %24* [ %167, %166 ], [ %164, %161 ]
  %170 = call %24* @listAddNodeTail(%24* %169, i8* %163) #14
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %163) #14
  br label %171

171:                                              ; preds = %123, %168
  %172 = phi %3* [ %133, %168 ], [ %124, %123 ]
  %173 = call %25* @listNext(%26* nonnull %18) #14
  %174 = icmp eq %25* %173, null
  br i1 %174, label %175, label %71

175:                                              ; preds = %171
  %176 = icmp eq %3* %172, null
  br i1 %176, label %1013, label %177

177:                                              ; preds = %175
  %178 = call %32* @dictGetIterator(%3* nonnull %172) #14
  %179 = call i8* @sdsnew(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @854, i64 0, i64 0)) #14
  %180 = call %6* @dictNext(%32* %178) #14
  %181 = icmp eq %6* %180, null
  br i1 %181, label %194, label %182

182:                                              ; preds = %177, %182
  %183 = phi %6* [ %192, %182 ], [ %180, %177 ]
  %184 = phi i32 [ %188, %182 ], [ 0, %177 ]
  %185 = phi i8* [ %191, %182 ], [ %179, %177 ]
  %186 = getelementptr inbounds %6, %6* %183, i64 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = add nuw nsw i32 %184, 1
  %189 = icmp eq i32 %184, 0
  %190 = select i1 %189, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @828, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @852, i64 0, i64 0)
  %191 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %185, i8* %190, i8* %187) #14
  %192 = call %6* @dictNext(%32* %178) #14
  %193 = icmp eq %6* %192, null
  br i1 %193, label %194, label %182

194:                                              ; preds = %182, %177
  %195 = phi i8* [ %179, %177 ], [ %191, %182 ]
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @855, i64 0, i64 0), i8* %195)
  call void @sdsfree(i8* %195) #14
  %196 = icmp eq i32 %35, 0
  br i1 %196, label %1010, label %197

197:                                              ; preds = %194
  call void @dictReleaseIterator(%32* %178) #14
  %198 = call %32* @dictGetIterator(%3* nonnull %172) #14
  %199 = call %6* @dictNext(%32* %198) #14
  %200 = icmp eq %6* %199, null
  br i1 %200, label %1010, label %201

201:                                              ; preds = %197
  %202 = bitcast %26* %15 to i8*
  %203 = bitcast %26* %12 to i8*
  %204 = bitcast %26* %11 to i8*
  %205 = bitcast %26* %14 to i8*
  %206 = bitcast %26* %16 to i8*
  %207 = bitcast %26* %13 to i8*
  br label %211

208:                                              ; preds = %1005
  %209 = call %6* @dictNext(%32* %198) #14
  %210 = icmp eq %6* %209, null
  br i1 %210, label %1010, label %211

211:                                              ; preds = %201, %208
  %212 = phi %6* [ %199, %201 ], [ %209, %208 ]
  %213 = getelementptr inbounds %6, %6* %212, i64 0, i32 0
  %214 = load i8*, i8** %213, align 8
  %215 = call i64 @strtol(i8* nocapture nonnull %214, i8** null, i32 10) #14
  %216 = trunc i64 %215 to i32
  %217 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %218 = and i32 %217, 1024
  %219 = load i32, i32* @.2, align 8
  %220 = icmp slt i32 %219, 1
  %221 = icmp ne i32 %218, 0
  %222 = or i1 %220, %221
  br i1 %222, label %224, label %223

223:                                              ; preds = %211
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([351 x i8], [351 x i8]* @864, i64 0, i64 0), i32 %219) #14
  call void @exit(i32 1) #19
  unreachable

224:                                              ; preds = %211
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @865, i64 0, i64 0), i32 %216) #14
  %225 = call %24* @listCreate() #14
  %226 = call %24* @listCreate() #14
  %227 = call %24* @listCreate() #14
  %228 = call i8* @sdsempty() #14
  %229 = call i8* @sdsempty() #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #14
  %230 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %230, %26* nonnull %15) #14
  %231 = call %25* @listNext(%26* nonnull %15) #14
  %232 = icmp eq %25* %231, null
  br i1 %232, label %288, label %233

233:                                              ; preds = %224
  %234 = shl i64 %215, 32
  %235 = ashr exact i64 %234, 32
  br label %236

236:                                              ; preds = %285, %233
  %237 = phi %25* [ %231, %233 ], [ %286, %285 ]
  %238 = getelementptr inbounds %25, %25* %237, i64 0, i32 2
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 56
  %241 = bitcast i8* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %285

245:                                              ; preds = %236
  %246 = getelementptr inbounds i8, i8* %239, i64 84
  %247 = getelementptr inbounds i8, i8* %246, i64 %235
  %248 = load i8, i8* %247, align 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %245
  %251 = call %24* @listAddNodeTail(%24* %225, i8* nonnull %239) #14
  br label %285

252:                                              ; preds = %245
  %253 = bitcast i8* %239 to %9**
  %254 = load %9*, %9** %253, align 8
  %255 = call i8* (%9*, i8*, ...) @redisCommand(%9* %254, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @866, i64 0, i64 0), i32 %216) #14
  %256 = icmp eq i8* %255, null
  br i1 %256, label %1005, label %257

257:                                              ; preds = %252
  %258 = bitcast i8* %255 to i32*
  %259 = load i32, i32* %258, align 8
  %260 = icmp eq i32 %259, 6
  br i1 %260, label %261, label %271

261:                                              ; preds = %257
  %262 = getelementptr inbounds i8, i8* %239, i64 16
  %263 = bitcast i8* %262 to i8**
  %264 = load i8*, i8** %263, align 8
  %265 = getelementptr inbounds i8, i8* %239, i64 24
  %266 = bitcast i8* %265 to i32*
  %267 = load i32, i32* %266, align 8
  %268 = getelementptr inbounds i8, i8* %255, i64 32
  %269 = bitcast i8* %268 to i8**
  %270 = load i8*, i8** %269, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %264, i32 %267, i8* %270) #14
  call void @freeReplyObject(i8* nonnull %255) #14
  br label %1005

271:                                              ; preds = %257
  %272 = getelementptr inbounds i8, i8* %255, i64 8
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = icmp sgt i64 %274, 0
  br i1 %275, label %276, label %284

276:                                              ; preds = %271
  %277 = getelementptr inbounds i8, i8* %239, i64 16
  %278 = bitcast i8* %277 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = getelementptr inbounds i8, i8* %239, i64 24
  %281 = bitcast i8* %280 to i32*
  %282 = load i32, i32* %281, align 8
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @867, i64 0, i64 0), i32 %216, i8* %279, i32 %282) #14
  %283 = call %24* @listAddNodeTail(%24* %225, i8* nonnull %239) #14
  br label %284

284:                                              ; preds = %276, %271
  call void @freeReplyObject(i8* nonnull %255) #14
  br label %285

285:                                              ; preds = %284, %250, %236
  %286 = call %25* @listNext(%26* nonnull %15) #14
  %287 = icmp eq %25* %286, null
  br i1 %287, label %288, label %236

288:                                              ; preds = %285, %224
  %289 = getelementptr inbounds %24, %24* %225, i64 0, i32 5
  %290 = load i64, i64* %289, align 8
  %291 = icmp eq i64 %290, 1
  br i1 %291, label %292, label %298

292:                                              ; preds = %288
  %293 = getelementptr inbounds %24, %24* %225, i64 0, i32 0
  %294 = load %25*, %25** %293, align 8
  %295 = getelementptr inbounds %25, %25* %294, i64 0, i32 2
  %296 = bitcast i8** %295 to %27**
  %297 = load %27*, %27** %296, align 8
  br label %298

298:                                              ; preds = %292, %288
  %299 = phi %27* [ %297, %292 ], [ null, %288 ]
  %300 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %300, %26* nonnull %15) #14
  %301 = call %25* @listNext(%26* nonnull %15) #14
  %302 = icmp eq %25* %301, null
  br i1 %302, label %452, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %24, %24* %226, i64 0, i32 5
  %305 = getelementptr inbounds %24, %24* %227, i64 0, i32 5
  br label %306

306:                                              ; preds = %447, %303
  %307 = phi %25* [ %301, %303 ], [ %450, %447 ]
  %308 = phi i8* [ %228, %303 ], [ %449, %447 ]
  %309 = phi i8* [ %229, %303 ], [ %448, %447 ]
  %310 = getelementptr inbounds %25, %25* %307, i64 0, i32 2
  %311 = load i8*, i8** %310, align 8
  %312 = bitcast i8* %311 to %27*
  %313 = getelementptr inbounds i8, i8* %311, i64 56
  %314 = bitcast i8* %313 to i32*
  %315 = load i32, i32* %314, align 8
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %447

318:                                              ; preds = %306
  %319 = getelementptr inbounds i8, i8* %311, i64 16488
  %320 = bitcast i8* %319 to i8***
  %321 = load i8**, i8*** %320, align 8
  %322 = icmp eq i8** %321, null
  br i1 %322, label %358, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds i8, i8* %311, i64 16504
  %325 = bitcast i8* %324 to i32*
  %326 = load i32, i32* %325, align 8
  %327 = icmp sgt i32 %326, 0
  br i1 %327, label %328, label %358

328:                                              ; preds = %323
  %329 = load i8*, i8** %321, align 8
  %330 = call i64 @strtol(i8* nocapture nonnull %329, i8** null, i32 10) #14
  %331 = trunc i64 %330 to i32
  %332 = icmp eq i32 %331, %216
  br i1 %332, label %346, label %333

333:                                              ; preds = %328, %338
  %334 = phi i64 [ %345, %338 ], [ 2, %328 ]
  %335 = load i32, i32* %325, align 8
  %336 = trunc i64 %334 to i32
  %337 = icmp sgt i32 %335, %336
  br i1 %337, label %338, label %358

338:                                              ; preds = %333
  %339 = load i8**, i8*** %320, align 8
  %340 = getelementptr inbounds i8*, i8** %339, i64 %334
  %341 = load i8*, i8** %340, align 8
  %342 = call i64 @strtol(i8* nocapture nonnull %341, i8** null, i32 10) #14
  %343 = trunc i64 %342 to i32
  %344 = icmp eq i32 %343, %216
  %345 = add nuw i64 %334, 2
  br i1 %344, label %346, label %333

346:                                              ; preds = %338, %328
  %347 = load i64, i64* %304, align 8
  %348 = icmp eq i64 %347, 0
  %349 = select i1 %348, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)
  %350 = getelementptr inbounds i8, i8* %311, i64 16
  %351 = bitcast i8* %350 to i8**
  %352 = load i8*, i8** %351, align 8
  %353 = getelementptr inbounds i8, i8* %311, i64 24
  %354 = bitcast i8* %353 to i32*
  %355 = load i32, i32* %354, align 8
  %356 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %308, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @868, i64 0, i64 0), i8* %349, i8* %352, i32 %355) #14
  %357 = call %24* @listAddNodeTail(%24* %226, i8* nonnull %311) #14
  br label %398

358:                                              ; preds = %333, %323, %318
  %359 = getelementptr inbounds i8, i8* %311, i64 16496
  %360 = bitcast i8* %359 to i8***
  %361 = load i8**, i8*** %360, align 8
  %362 = icmp eq i8** %361, null
  br i1 %362, label %398, label %363

363:                                              ; preds = %358
  %364 = getelementptr inbounds i8, i8* %311, i64 16508
  %365 = bitcast i8* %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %368, label %398

368:                                              ; preds = %363
  %369 = load i8*, i8** %361, align 8
  %370 = call i64 @strtol(i8* nocapture nonnull %369, i8** null, i32 10) #14
  %371 = trunc i64 %370 to i32
  %372 = icmp eq i32 %371, %216
  br i1 %372, label %386, label %373

373:                                              ; preds = %368, %378
  %374 = phi i64 [ %385, %378 ], [ 2, %368 ]
  %375 = load i32, i32* %365, align 4
  %376 = trunc i64 %374 to i32
  %377 = icmp sgt i32 %375, %376
  br i1 %377, label %378, label %398

378:                                              ; preds = %373
  %379 = load i8**, i8*** %360, align 8
  %380 = getelementptr inbounds i8*, i8** %379, i64 %374
  %381 = load i8*, i8** %380, align 8
  %382 = call i64 @strtol(i8* nocapture nonnull %381, i8** null, i32 10) #14
  %383 = trunc i64 %382 to i32
  %384 = icmp eq i32 %383, %216
  %385 = add nuw i64 %374, 2
  br i1 %384, label %386, label %373

386:                                              ; preds = %378, %368
  %387 = load i64, i64* %305, align 8
  %388 = icmp eq i64 %387, 0
  %389 = select i1 %388, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)
  %390 = getelementptr inbounds i8, i8* %311, i64 16
  %391 = bitcast i8* %390 to i8**
  %392 = load i8*, i8** %391, align 8
  %393 = getelementptr inbounds i8, i8* %311, i64 24
  %394 = bitcast i8* %393 to i32*
  %395 = load i32, i32* %394, align 8
  %396 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %309, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @868, i64 0, i64 0), i8* %389, i8* %392, i32 %395) #14
  %397 = call %24* @listAddNodeTail(%24* %227, i8* nonnull %311) #14
  br label %398

398:                                              ; preds = %373, %386, %363, %358, %346
  %399 = phi i8* [ %356, %346 ], [ %308, %358 ], [ %308, %386 ], [ %308, %363 ], [ %308, %373 ]
  %400 = phi i32 [ 1, %346 ], [ 0, %358 ], [ 0, %386 ], [ 0, %363 ], [ 0, %373 ]
  %401 = phi i32 [ 0, %346 ], [ 0, %358 ], [ 1, %386 ], [ 0, %363 ], [ 0, %373 ]
  %402 = phi i8* [ %309, %346 ], [ %309, %358 ], [ %396, %386 ], [ %309, %363 ], [ %309, %373 ]
  %403 = or i32 %401, %400
  %404 = icmp ne i32 %403, 0
  %405 = icmp eq %27* %299, %312
  %406 = or i1 %405, %404
  br i1 %406, label %447, label %407

407:                                              ; preds = %398
  %408 = bitcast i8* %311 to %9**
  %409 = load %9*, %9** %408, align 8
  %410 = call i8* (%9*, i8*, ...) @redisCommand(%9* %409, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @866, i64 0, i64 0), i32 %216) #14
  %411 = icmp eq i8* %410, null
  br i1 %411, label %1005, label %412

412:                                              ; preds = %407
  %413 = bitcast i8* %410 to i32*
  %414 = load i32, i32* %413, align 8
  %415 = icmp eq i32 %414, 6
  br i1 %415, label %416, label %426

416:                                              ; preds = %412
  %417 = getelementptr inbounds i8, i8* %311, i64 16
  %418 = bitcast i8* %417 to i8**
  %419 = load i8*, i8** %418, align 8
  %420 = getelementptr inbounds i8, i8* %311, i64 24
  %421 = bitcast i8* %420 to i32*
  %422 = load i32, i32* %421, align 8
  %423 = getelementptr inbounds i8, i8* %410, i64 32
  %424 = bitcast i8* %423 to i8**
  %425 = load i8*, i8** %424, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %419, i32 %422, i8* %425) #14
  call void @freeReplyObject(i8* nonnull %410) #14
  br label %1005

426:                                              ; preds = %412
  %427 = getelementptr inbounds i8, i8* %410, i64 8
  %428 = bitcast i8* %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = icmp sgt i64 %429, 0
  br i1 %430, label %431, label %445

431:                                              ; preds = %426
  %432 = getelementptr inbounds i8, i8* %311, i64 16
  %433 = bitcast i8* %432 to i8**
  %434 = load i8*, i8** %433, align 8
  %435 = getelementptr inbounds i8, i8* %311, i64 24
  %436 = bitcast i8* %435 to i32*
  %437 = load i32, i32* %436, align 8
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @869, i64 0, i64 0), i32 %216, i8* %434, i32 %437) #14
  %438 = load i64, i64* %305, align 8
  %439 = icmp eq i64 %438, 0
  %440 = select i1 %439, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)
  %441 = load i8*, i8** %433, align 8
  %442 = load i32, i32* %436, align 8
  %443 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %402, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @870, i64 0, i64 0), i8* %440, i8* %441, i32 %442) #14
  %444 = call %24* @listAddNodeTail(%24* %227, i8* nonnull %311) #14
  br label %445

445:                                              ; preds = %431, %426
  %446 = phi i8* [ %402, %426 ], [ %443, %431 ]
  call void @freeReplyObject(i8* nonnull %410) #14
  br label %447

447:                                              ; preds = %445, %398, %306
  %448 = phi i8* [ %309, %306 ], [ %402, %398 ], [ %446, %445 ]
  %449 = phi i8* [ %308, %306 ], [ %399, %398 ], [ %399, %445 ]
  %450 = call %25* @listNext(%26* nonnull %15) #14
  %451 = icmp eq %25* %450, null
  br i1 %451, label %452, label %306

452:                                              ; preds = %447, %298
  %453 = phi i8* [ %229, %298 ], [ %448, %447 ]
  %454 = phi i8* [ %228, %298 ], [ %449, %447 ]
  %455 = getelementptr inbounds i8, i8* %454, i64 -1
  %456 = load i8, i8* %455, align 1
  %457 = trunc i8 %456 to i3
  switch i3 %457, label %484 [
    i3 0, label %458
    i3 1, label %461
    i3 2, label %465
    i3 3, label %470
    i3 -4, label %475
  ]

458:                                              ; preds = %452
  %459 = lshr i8 %456, 3
  %460 = zext i8 %459 to i64
  br label %479

461:                                              ; preds = %452
  %462 = getelementptr inbounds i8, i8* %454, i64 -3
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i64
  br label %479

465:                                              ; preds = %452
  %466 = getelementptr inbounds i8, i8* %454, i64 -5
  %467 = bitcast i8* %466 to i16*
  %468 = load i16, i16* %467, align 1
  %469 = zext i16 %468 to i64
  br label %479

470:                                              ; preds = %452
  %471 = getelementptr inbounds i8, i8* %454, i64 -9
  %472 = bitcast i8* %471 to i32*
  %473 = load i32, i32* %472, align 1
  %474 = zext i32 %473 to i64
  br label %479

475:                                              ; preds = %452
  %476 = getelementptr inbounds i8, i8* %454, i64 -17
  %477 = bitcast i8* %476 to i64*
  %478 = load i64, i64* %477, align 1
  br label %479

479:                                              ; preds = %475, %470, %465, %461, %458
  %480 = phi i64 [ %478, %475 ], [ %474, %470 ], [ %469, %465 ], [ %464, %461 ], [ %460, %458 ]
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %484, label %482

482:                                              ; preds = %479
  %483 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @871, i64 0, i64 0), i8* nonnull %454) #14
  br label %484

484:                                              ; preds = %482, %479, %452
  %485 = getelementptr inbounds i8, i8* %453, i64 -1
  %486 = load i8, i8* %485, align 1
  %487 = trunc i8 %486 to i3
  switch i3 %487, label %514 [
    i3 0, label %488
    i3 1, label %491
    i3 2, label %495
    i3 3, label %500
    i3 -4, label %505
  ]

488:                                              ; preds = %484
  %489 = lshr i8 %486, 3
  %490 = zext i8 %489 to i64
  br label %509

491:                                              ; preds = %484
  %492 = getelementptr inbounds i8, i8* %453, i64 -3
  %493 = load i8, i8* %492, align 1
  %494 = zext i8 %493 to i64
  br label %509

495:                                              ; preds = %484
  %496 = getelementptr inbounds i8, i8* %453, i64 -5
  %497 = bitcast i8* %496 to i16*
  %498 = load i16, i16* %497, align 1
  %499 = zext i16 %498 to i64
  br label %509

500:                                              ; preds = %484
  %501 = getelementptr inbounds i8, i8* %453, i64 -9
  %502 = bitcast i8* %501 to i32*
  %503 = load i32, i32* %502, align 1
  %504 = zext i32 %503 to i64
  br label %509

505:                                              ; preds = %484
  %506 = getelementptr inbounds i8, i8* %453, i64 -17
  %507 = bitcast i8* %506 to i64*
  %508 = load i64, i64* %507, align 1
  br label %509

509:                                              ; preds = %505, %500, %495, %491, %488
  %510 = phi i64 [ %508, %505 ], [ %504, %500 ], [ %499, %495 ], [ %494, %491 ], [ %490, %488 ]
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %514, label %512

512:                                              ; preds = %509
  %513 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @872, i64 0, i64 0), i8* nonnull %453) #14
  br label %514

514:                                              ; preds = %512, %509, %484
  %515 = icmp eq %27* %299, null
  br i1 %515, label %516, label %581

516:                                              ; preds = %514
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @873, i64 0, i64 0)) #14
  %517 = load %24*, %24** @.0.1, align 8
  %518 = call fastcc %27* @1378(%24* %517, i32 %216) #14
  %519 = icmp eq %27* %518, null
  br i1 %519, label %520, label %521

520:                                              ; preds = %516
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @874, i64 0, i64 0)) #14
  br label %1005

521:                                              ; preds = %516
  %522 = getelementptr inbounds %27, %27* %518, i64 0, i32 2
  %523 = load i8*, i8** %522, align 8
  %524 = getelementptr inbounds %27, %27* %518, i64 0, i32 3
  %525 = load i32, i32* %524, align 8
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @875, i64 0, i64 0), i8* %523, i32 %525) #14
  %526 = getelementptr inbounds %27, %27* %518, i64 0, i32 0
  %527 = load %9*, %9** %526, align 8
  %528 = call i8* (%9*, i8*, ...) @redisCommand(%9* %527, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %529 = icmp eq i8* %528, null
  br i1 %529, label %1005, label %530

530:                                              ; preds = %521
  %531 = bitcast i8* %528 to i32*
  %532 = load i32, i32* %531, align 8
  %533 = icmp eq i32 %532, 6
  br i1 %533, label %534, label %540

534:                                              ; preds = %530
  %535 = load i8*, i8** %522, align 8
  %536 = load i32, i32* %524, align 8
  %537 = getelementptr inbounds i8, i8* %528, i64 32
  %538 = bitcast i8* %537 to i8**
  %539 = load i8*, i8** %538, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %535, i32 %536, i8* %539) #14
  call void @freeReplyObject(i8* nonnull %528) #14
  br label %1005

540:                                              ; preds = %530
  call void @freeReplyObject(i8* nonnull %528) #14
  %541 = call fastcc i32 @1379(%27* nonnull %518, i32 %216, i32 0) #14
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %1005, label %543

543:                                              ; preds = %540
  %544 = shl i64 %215, 32
  %545 = ashr exact i64 %544, 32
  %546 = getelementptr inbounds %27, %27* %518, i64 0, i32 11, i64 %545
  store i8 1, i8* %546, align 1
  %547 = load %9*, %9** %526, align 8
  %548 = call i8* (%9*, i8*, ...) @redisCommand(%9* %547, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @107, i64 0, i64 0)) #14
  %549 = icmp eq i8* %548, null
  br i1 %549, label %1005, label %550

550:                                              ; preds = %543
  %551 = bitcast i8* %548 to i32*
  %552 = load i32, i32* %551, align 8
  %553 = icmp eq i32 %552, 6
  br i1 %553, label %554, label %560

554:                                              ; preds = %550
  %555 = load i8*, i8** %522, align 8
  %556 = load i32, i32* %524, align 8
  %557 = getelementptr inbounds i8, i8* %548, i64 32
  %558 = bitcast i8* %557 to i8**
  %559 = load i8*, i8** %558, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %555, i32 %556, i8* %559) #14
  call void @freeReplyObject(i8* nonnull %548) #14
  br label %1005

560:                                              ; preds = %550
  call void @freeReplyObject(i8* nonnull %548) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #14
  call void @listRewind(%24* %226, %26* nonnull %14) #14
  br label %561

561:                                              ; preds = %564, %560
  %562 = call %25* @listNext(%26* nonnull %14) #14
  %563 = icmp eq %25* %562, null
  br i1 %563, label %570, label %564

564:                                              ; preds = %561
  %565 = getelementptr inbounds %25, %25* %562, i64 0, i32 2
  %566 = bitcast i8** %565 to %27**
  %567 = load %27*, %27** %566, align 8
  %568 = icmp eq %27* %567, %518
  br i1 %568, label %569, label %561

569:                                              ; preds = %564
  call void @listDelNode(%24* %226, %25* nonnull %562) #14
  br label %570

570:                                              ; preds = %561, %569
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #14
  call void @listRewind(%24* %227, %26* nonnull %13) #14
  br label %571

571:                                              ; preds = %574, %570
  %572 = call %25* @listNext(%26* nonnull %13) #14
  %573 = icmp eq %25* %572, null
  br i1 %573, label %580, label %574

574:                                              ; preds = %571
  %575 = getelementptr inbounds %25, %25* %572, i64 0, i32 2
  %576 = bitcast i8** %575 to %27**
  %577 = load %27*, %27** %576, align 8
  %578 = icmp eq %27* %577, %518
  br i1 %578, label %579, label %571

579:                                              ; preds = %574
  call void @listDelNode(%24* %227, %25* nonnull %572) #14
  br label %580

580:                                              ; preds = %571, %579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #14
  br label %581

581:                                              ; preds = %580, %514
  %582 = phi %27* [ %518, %580 ], [ %299, %514 ]
  %583 = load i64, i64* %289, align 8
  %584 = icmp ugt i64 %583, 1
  br i1 %584, label %585, label %670

585:                                              ; preds = %581
  %586 = icmp eq %27* %582, null
  br i1 %586, label %587, label %588

587:                                              ; preds = %585
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @876, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4776, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @877, i64 0, i64 0)) #19
  unreachable

588:                                              ; preds = %585
  call void @listRewind(%24* nonnull %225, %26* nonnull %15) #14
  %589 = call %25* @listNext(%26* nonnull %15) #14
  %590 = icmp eq %25* %589, null
  br i1 %590, label %670, label %591

591:                                              ; preds = %588
  %592 = shl i64 %215, 32
  %593 = ashr exact i64 %592, 32
  %594 = getelementptr %27, %27* %582, i64 0, i32 1
  br label %595

595:                                              ; preds = %667, %591
  %596 = phi %25* [ %589, %591 ], [ %668, %667 ]
  %597 = getelementptr inbounds %25, %25* %596, i64 0, i32 2
  %598 = load i8*, i8** %597, align 8
  %599 = bitcast i8* %598 to %27*
  %600 = icmp eq %27* %582, %599
  br i1 %600, label %667, label %601

601:                                              ; preds = %595
  %602 = call fastcc i32 @1380(%27* %599, i32 %216) #14
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %1005, label %604

604:                                              ; preds = %601
  %605 = getelementptr inbounds i8, i8* %598, i64 84
  %606 = getelementptr inbounds i8, i8* %605, i64 %593
  store i8 0, i8* %606, align 1
  %607 = load i8*, i8** %594, align 8
  %608 = bitcast i8* %598 to %9**
  %609 = load %9*, %9** %608, align 8
  %610 = call i8* (%9*, i8*, ...) @redisCommand(%9* %609, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @878, i64 0, i64 0), i8* %607) #14
  %611 = icmp eq i8* %610, null
  br i1 %611, label %1005, label %612

612:                                              ; preds = %604
  %613 = bitcast i8* %610 to i32*
  %614 = load i32, i32* %613, align 8
  %615 = icmp eq i32 %614, 6
  br i1 %615, label %616, label %626

616:                                              ; preds = %612
  %617 = getelementptr inbounds i8, i8* %598, i64 16
  %618 = bitcast i8* %617 to i8**
  %619 = load i8*, i8** %618, align 8
  %620 = getelementptr inbounds i8, i8* %598, i64 24
  %621 = bitcast i8* %620 to i32*
  %622 = load i32, i32* %621, align 8
  %623 = getelementptr inbounds i8, i8* %610, i64 32
  %624 = bitcast i8* %623 to i8**
  %625 = load i8*, i8** %624, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %619, i32 %622, i8* %625) #14
  call void @freeReplyObject(i8* nonnull %610) #14
  br label %1005

626:                                              ; preds = %612
  call void @freeReplyObject(i8* nonnull %610) #14
  %627 = load i8*, i8** %594, align 8
  %628 = load %9*, %9** %608, align 8
  %629 = call i8* (%9*, i8*, ...) @redisCommand(%9* %628, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @879, i64 0, i64 0), i8* %627) #14
  %630 = icmp eq i8* %629, null
  br i1 %630, label %1005, label %631

631:                                              ; preds = %626
  %632 = bitcast i8* %629 to i32*
  %633 = load i32, i32* %632, align 8
  %634 = icmp eq i32 %633, 6
  br i1 %634, label %635, label %645

635:                                              ; preds = %631
  %636 = getelementptr inbounds i8, i8* %598, i64 16
  %637 = bitcast i8* %636 to i8**
  %638 = load i8*, i8** %637, align 8
  %639 = getelementptr inbounds i8, i8* %598, i64 24
  %640 = bitcast i8* %639 to i32*
  %641 = load i32, i32* %640, align 8
  %642 = getelementptr inbounds i8, i8* %629, i64 32
  %643 = bitcast i8* %642 to i8**
  %644 = load i8*, i8** %643, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %638, i32 %641, i8* %644) #14
  call void @freeReplyObject(i8* nonnull %629) #14
  br label %1005

645:                                              ; preds = %631
  call void @freeReplyObject(i8* nonnull %629) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #14
  call void @listRewind(%24* %227, %26* nonnull %12) #14
  br label %646

646:                                              ; preds = %649, %645
  %647 = call %25* @listNext(%26* nonnull %12) #14
  %648 = icmp eq %25* %647, null
  br i1 %648, label %655, label %649

649:                                              ; preds = %646
  %650 = getelementptr inbounds %25, %25* %647, i64 0, i32 2
  %651 = bitcast i8** %650 to %27**
  %652 = load %27*, %27** %651, align 8
  %653 = icmp eq %27* %652, %599
  br i1 %653, label %654, label %646

654:                                              ; preds = %649
  call void @listDelNode(%24* %227, %25* nonnull %647) #14
  br label %655

655:                                              ; preds = %646, %654
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #14
  %656 = call %24* @listAddNodeTail(%24* %227, i8* %598) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #14
  call void @listRewind(%24* %226, %26* nonnull %11) #14
  br label %657

657:                                              ; preds = %660, %655
  %658 = call %25* @listNext(%26* nonnull %11) #14
  %659 = icmp eq %25* %658, null
  br i1 %659, label %666, label %660

660:                                              ; preds = %657
  %661 = getelementptr inbounds %25, %25* %658, i64 0, i32 2
  %662 = bitcast i8** %661 to %27**
  %663 = load %27*, %27** %662, align 8
  %664 = icmp eq %27* %663, %599
  br i1 %664, label %665, label %657

665:                                              ; preds = %660
  call void @listDelNode(%24* %226, %25* nonnull %658) #14
  br label %666

666:                                              ; preds = %657, %665
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #14
  br label %667

667:                                              ; preds = %666, %595
  %668 = call %25* @listNext(%26* nonnull %15) #14
  %669 = icmp eq %25* %668, null
  br i1 %669, label %670, label %595

670:                                              ; preds = %667, %588, %581
  %671 = getelementptr inbounds %24, %24* %226, i64 0, i32 5
  %672 = load i64, i64* %671, align 8
  switch i64 %672, label %1000 [
    i64 1, label %673
    i64 0, label %696
  ]

673:                                              ; preds = %670
  %674 = getelementptr inbounds %24, %24* %227, i64 0, i32 5
  %675 = load i64, i64* %674, align 8
  switch i64 %675, label %780 [
    i64 1, label %676
    i64 0, label %942
  ]

676:                                              ; preds = %673
  %677 = getelementptr inbounds %24, %24* %226, i64 0, i32 0
  %678 = load %25*, %25** %677, align 8
  %679 = getelementptr inbounds %25, %25* %678, i64 0, i32 2
  %680 = bitcast i8** %679 to %27**
  %681 = load %27*, %27** %680, align 8
  %682 = getelementptr inbounds %24, %24* %227, i64 0, i32 0
  %683 = load %25*, %25** %682, align 8
  %684 = getelementptr inbounds %25, %25* %683, i64 0, i32 2
  %685 = bitcast i8** %684 to %27**
  %686 = load %27*, %27** %685, align 8
  %687 = getelementptr inbounds %27, %27* %681, i64 0, i32 2
  %688 = load i8*, i8** %687, align 8
  %689 = getelementptr inbounds %27, %27* %681, i64 0, i32 3
  %690 = load i32, i32* %689, align 8
  %691 = getelementptr inbounds %27, %27* %686, i64 0, i32 2
  %692 = load i8*, i8** %691, align 8
  %693 = getelementptr inbounds %27, %27* %686, i64 0, i32 3
  %694 = load i32, i32* %693, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @880, i64 0, i64 0), i32 %216, i8* %688, i32 %690, i8* %692, i32 %694) #14
  %695 = call fastcc i32 @1382(%27* %681, %27* %686, i32 %216, i32 132, i8** null) #14
  br label %1005

696:                                              ; preds = %670
  %697 = getelementptr inbounds %24, %24* %227, i64 0, i32 5
  %698 = load i64, i64* %697, align 8
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %1000, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %27, %27* %582, i64 0, i32 2
  %702 = load i8*, i8** %701, align 8
  %703 = getelementptr inbounds %27, %27* %582, i64 0, i32 3
  %704 = load i32, i32* %703, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @881, i64 0, i64 0), i32 %216, i8* %702, i32 %704) #14
  call void @listRewind(%24* nonnull %227, %26* nonnull %15) #14
  %705 = call %25* @listNext(%26* nonnull %15) #14
  %706 = icmp eq %25* %705, null
  br i1 %706, label %741, label %707

707:                                              ; preds = %700, %738
  %708 = phi %25* [ %739, %738 ], [ %705, %700 ]
  %709 = getelementptr inbounds %25, %25* %708, i64 0, i32 2
  %710 = bitcast i8** %709 to %27**
  %711 = load %27*, %27** %710, align 8
  %712 = icmp eq %27* %711, %582
  br i1 %712, label %738, label %713

713:                                              ; preds = %707
  %714 = call fastcc i32 @1382(%27* %711, %27* %582, i32 %216, i32 130, i8** null) #14
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %1005, label %716

716:                                              ; preds = %713
  %717 = getelementptr inbounds %27, %27* %711, i64 0, i32 2
  %718 = load i8*, i8** %717, align 8
  %719 = getelementptr inbounds %27, %27* %711, i64 0, i32 3
  %720 = load i32, i32* %719, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @882, i64 0, i64 0), i32 %216, i8* %718, i32 %720) #14
  %721 = getelementptr inbounds %27, %27* %711, i64 0, i32 0
  %722 = load %9*, %9** %721, align 8
  %723 = call i8* (%9*, i8*, ...) @redisCommand(%9* %722, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %724 = icmp eq i8* %723, null
  br i1 %724, label %1005, label %725

725:                                              ; preds = %716
  %726 = bitcast i8* %723 to i32*
  %727 = load i32, i32* %726, align 8
  %728 = icmp eq i32 %727, 6
  br i1 %728, label %729, label %737

729:                                              ; preds = %725
  %730 = getelementptr inbounds %27, %27* %711, i64 0, i32 2
  %731 = getelementptr inbounds %27, %27* %711, i64 0, i32 3
  %732 = load i8*, i8** %730, align 8
  %733 = load i32, i32* %731, align 8
  %734 = getelementptr inbounds i8, i8* %723, i64 32
  %735 = bitcast i8* %734 to i8**
  %736 = load i8*, i8** %735, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %732, i32 %733, i8* %736) #14
  call void @freeReplyObject(i8* nonnull %723) #14
  br label %1005

737:                                              ; preds = %725
  call void @freeReplyObject(i8* nonnull %723) #14
  br label %738

738:                                              ; preds = %737, %707
  %739 = call %25* @listNext(%26* nonnull %15) #14
  %740 = icmp eq %25* %739, null
  br i1 %740, label %741, label %707

741:                                              ; preds = %738, %700
  %742 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %742, %26* nonnull %15) #14
  %743 = call %25* @listNext(%26* nonnull %15) #14
  %744 = icmp eq %25* %743, null
  br i1 %744, label %1005, label %745

745:                                              ; preds = %741
  %746 = getelementptr %27, %27* %582, i64 0, i32 1
  br label %747

747:                                              ; preds = %777, %745
  %748 = phi %25* [ %743, %745 ], [ %778, %777 ]
  %749 = getelementptr inbounds %25, %25* %748, i64 0, i32 2
  %750 = bitcast i8** %749 to %27**
  %751 = load %27*, %27** %750, align 8
  %752 = icmp eq %27* %751, %582
  br i1 %752, label %777, label %753

753:                                              ; preds = %747
  %754 = getelementptr inbounds %27, %27* %751, i64 0, i32 7
  %755 = load i32, i32* %754, align 8
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %777

758:                                              ; preds = %753
  %759 = load i8*, i8** %746, align 8
  %760 = getelementptr inbounds %27, %27* %751, i64 0, i32 0
  %761 = load %9*, %9** %760, align 8
  %762 = call i8* (%9*, i8*, ...) @redisCommand(%9* %761, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @883, i64 0, i64 0), i8* %759) #14
  %763 = icmp eq i8* %762, null
  br i1 %763, label %1005, label %764

764:                                              ; preds = %758
  %765 = bitcast i8* %762 to i32*
  %766 = load i32, i32* %765, align 8
  %767 = icmp eq i32 %766, 6
  br i1 %767, label %768, label %776

768:                                              ; preds = %764
  %769 = getelementptr inbounds %27, %27* %751, i64 0, i32 2
  %770 = load i8*, i8** %769, align 8
  %771 = getelementptr inbounds %27, %27* %751, i64 0, i32 3
  %772 = load i32, i32* %771, align 8
  %773 = getelementptr inbounds i8, i8* %762, i64 32
  %774 = bitcast i8* %773 to i8**
  %775 = load i8*, i8** %774, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %770, i32 %772, i8* %775) #14
  call void @freeReplyObject(i8* nonnull %762) #14
  br label %1005

776:                                              ; preds = %764
  call void @freeReplyObject(i8* nonnull %762) #14
  br label %777

777:                                              ; preds = %776, %753, %747
  %778 = call %25* @listNext(%26* nonnull %15) #14
  %779 = icmp eq %25* %778, null
  br i1 %779, label %1005, label %747

780:                                              ; preds = %673
  %781 = getelementptr inbounds %24, %24* %226, i64 0, i32 0
  %782 = load %25*, %25** %781, align 8
  %783 = getelementptr inbounds %25, %25* %782, i64 0, i32 2
  %784 = bitcast i8** %783 to %27**
  %785 = load %27*, %27** %784, align 8
  %786 = getelementptr inbounds %27, %27* %785, i64 0, i32 17
  %787 = load i32, i32* %786, align 8
  %788 = icmp sgt i32 %787, 0
  br i1 %788, label %789, label %810

789:                                              ; preds = %780
  %790 = getelementptr inbounds %27, %27* %785, i64 0, i32 15
  br label %791

791:                                              ; preds = %799, %789
  %792 = phi i64 [ 0, %789 ], [ %800, %799 ]
  %793 = load i8**, i8*** %790, align 8
  %794 = getelementptr inbounds i8*, i8** %793, i64 %792
  %795 = load i8*, i8** %794, align 8
  %796 = call i64 @strtol(i8* nocapture nonnull %795, i8** null, i32 10) #14
  %797 = trunc i64 %796 to i32
  %798 = icmp eq i32 %797, %216
  br i1 %798, label %804, label %799

799:                                              ; preds = %791
  %800 = add nuw i64 %792, 2
  %801 = load i32, i32* %786, align 8
  %802 = trunc i64 %800 to i32
  %803 = icmp sgt i32 %801, %802
  br i1 %803, label %791, label %810

804:                                              ; preds = %791
  %805 = and i64 %792, 4294967294
  %806 = or i64 %805, 1
  %807 = getelementptr inbounds i8*, i8** %793, i64 %806
  %808 = load i8*, i8** %807, align 8
  %809 = icmp eq i8* %808, null
  br i1 %809, label %810, label %811

810:                                              ; preds = %804, %780, %799
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @884, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4862, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @877, i64 0, i64 0)) #19
  unreachable

811:                                              ; preds = %804
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #14
  call void @listRewind(%24* %227, %26* nonnull %16) #14
  %812 = call %25* @listNext(%26* nonnull %16) #14
  %813 = icmp eq %25* %812, null
  br i1 %813, label %895, label %814

814:                                              ; preds = %811, %842
  %815 = phi %25* [ %848, %842 ], [ %812, %811 ]
  %816 = phi %27* [ %847, %842 ], [ null, %811 ]
  %817 = getelementptr inbounds %25, %25* %815, i64 0, i32 2
  %818 = bitcast i8** %817 to %27**
  %819 = load %27*, %27** %818, align 8
  %820 = getelementptr inbounds %27, %27* %819, i64 0, i32 0
  %821 = load %9*, %9** %820, align 8
  %822 = call i8* (%9*, i8*, ...) @redisCommand(%9* %821, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @866, i64 0, i64 0), i32 %216) #14
  %823 = icmp eq i8* %822, null
  br i1 %823, label %842, label %824

824:                                              ; preds = %814
  %825 = bitcast i8* %822 to i32*
  %826 = load i32, i32* %825, align 8
  switch i32 %826, label %835 [
    i32 6, label %827
    i32 3, label %836
  ]

827:                                              ; preds = %824
  %828 = getelementptr inbounds %27, %27* %819, i64 0, i32 2
  %829 = load i8*, i8** %828, align 8
  %830 = getelementptr inbounds %27, %27* %819, i64 0, i32 3
  %831 = load i32, i32* %830, align 8
  %832 = getelementptr inbounds i8, i8* %822, i64 32
  %833 = bitcast i8* %832 to i8**
  %834 = load i8*, i8** %833, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %829, i32 %831, i8* %834) #14
  br label %835

835:                                              ; preds = %827, %824
  call void @freeReplyObject(i8* nonnull %822) #14
  br label %842

836:                                              ; preds = %824
  %837 = getelementptr inbounds i8, i8* %822, i64 8
  %838 = bitcast i8* %837 to i64*
  %839 = load i64, i64* %838, align 8
  %840 = trunc i64 %839 to i32
  call void @freeReplyObject(i8* nonnull %822) #14
  %841 = icmp sgt i32 %840, 0
  br i1 %841, label %941, label %842

842:                                              ; preds = %836, %835, %814
  %843 = getelementptr inbounds %27, %27* %819, i64 0, i32 1
  %844 = load i8*, i8** %843, align 8
  %845 = call i32 @strcmp(i8* %844, i8* nonnull %808) #17
  %846 = icmp eq i32 %845, 0
  %847 = select i1 %846, %27* %819, %27* %816
  %848 = call %25* @listNext(%26* nonnull %16) #14
  %849 = icmp eq %25* %848, null
  br i1 %849, label %850, label %814

850:                                              ; preds = %842
  %851 = icmp eq %27* %847, null
  br i1 %851, label %895, label %852

852:                                              ; preds = %850
  %853 = getelementptr inbounds %27, %27* %785, i64 0, i32 2
  %854 = load i8*, i8** %853, align 8
  %855 = getelementptr inbounds %27, %27* %785, i64 0, i32 3
  %856 = load i32, i32* %855, align 8
  %857 = getelementptr inbounds %27, %27* %847, i64 0, i32 2
  %858 = load i8*, i8** %857, align 8
  %859 = getelementptr inbounds %27, %27* %847, i64 0, i32 3
  %860 = load i32, i32* %859, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @885, i64 0, i64 0), i32 %216, i8* %854, i32 %856, i8* %858, i32 %860) #14
  %861 = call fastcc i32 @1382(%27* %785, %27* nonnull %847, i32 %216, i32 128, i8** null) #14
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %939, label %863

863:                                              ; preds = %852
  call void @listRewind(%24* %227, %26* nonnull %16) #14
  %864 = call %25* @listNext(%26* nonnull %16) #14
  %865 = icmp eq %25* %864, null
  br i1 %865, label %939, label %866

866:                                              ; preds = %863, %891
  %867 = phi %25* [ %893, %891 ], [ %864, %863 ]
  %868 = phi i32 [ %892, %891 ], [ %861, %863 ]
  %869 = getelementptr inbounds %25, %25* %867, i64 0, i32 2
  %870 = bitcast i8** %869 to %27**
  %871 = load %27*, %27** %870, align 8
  %872 = icmp eq %27* %847, %871
  br i1 %872, label %891, label %873

873:                                              ; preds = %866
  %874 = getelementptr inbounds %27, %27* %871, i64 0, i32 0
  %875 = load %9*, %9** %874, align 8
  %876 = call i8* (%9*, i8*, ...) @redisCommand(%9* %875, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %877 = icmp eq i8* %876, null
  br i1 %877, label %939, label %878

878:                                              ; preds = %873
  %879 = bitcast i8* %876 to i32*
  %880 = load i32, i32* %879, align 8
  %881 = icmp eq i32 %880, 6
  br i1 %881, label %882, label %890

882:                                              ; preds = %878
  %883 = getelementptr inbounds %27, %27* %871, i64 0, i32 2
  %884 = load i8*, i8** %883, align 8
  %885 = getelementptr inbounds %27, %27* %871, i64 0, i32 3
  %886 = load i32, i32* %885, align 8
  %887 = getelementptr inbounds i8, i8* %876, i64 32
  %888 = bitcast i8* %887 to i8**
  %889 = load i8*, i8** %888, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %884, i32 %886, i8* %889) #14
  call void @freeReplyObject(i8* nonnull %876) #14
  br label %939

890:                                              ; preds = %878
  call void @freeReplyObject(i8* nonnull %876) #14
  br label %891

891:                                              ; preds = %890, %866
  %892 = phi i32 [ %868, %866 ], [ 1, %890 ]
  %893 = call %25* @listNext(%26* nonnull %16) #14
  %894 = icmp eq %25* %893, null
  br i1 %894, label %939, label %866

895:                                              ; preds = %850, %811
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @886, i64 0, i64 0), i32 %216) #14
  %896 = getelementptr inbounds %27, %27* %785, i64 0, i32 0
  %897 = load %9*, %9** %896, align 8
  %898 = call i8* (%9*, i8*, ...) @redisCommand(%9* %897, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %899 = icmp eq i8* %898, null
  br i1 %899, label %939, label %900

900:                                              ; preds = %895
  %901 = bitcast i8* %898 to i32*
  %902 = load i32, i32* %901, align 8
  %903 = icmp eq i32 %902, 6
  br i1 %903, label %904, label %912

904:                                              ; preds = %900
  %905 = getelementptr inbounds %27, %27* %785, i64 0, i32 2
  %906 = load i8*, i8** %905, align 8
  %907 = getelementptr inbounds %27, %27* %785, i64 0, i32 3
  %908 = load i32, i32* %907, align 8
  %909 = getelementptr inbounds i8, i8* %898, i64 32
  %910 = bitcast i8* %909 to i8**
  %911 = load i8*, i8** %910, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %906, i32 %908, i8* %911) #14
  call void @freeReplyObject(i8* nonnull %898) #14
  br label %939

912:                                              ; preds = %900
  call void @freeReplyObject(i8* nonnull %898) #14
  call void @listRewind(%24* %227, %26* nonnull %16) #14
  %913 = call %25* @listNext(%26* nonnull %16) #14
  %914 = icmp eq %25* %913, null
  br i1 %914, label %939, label %915

915:                                              ; preds = %912, %936
  %916 = phi %25* [ %937, %936 ], [ %913, %912 ]
  %917 = getelementptr inbounds %25, %25* %916, i64 0, i32 2
  %918 = bitcast i8** %917 to %27**
  %919 = load %27*, %27** %918, align 8
  %920 = getelementptr inbounds %27, %27* %919, i64 0, i32 0
  %921 = load %9*, %9** %920, align 8
  %922 = call i8* (%9*, i8*, ...) @redisCommand(%9* %921, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %923 = icmp eq i8* %922, null
  br i1 %923, label %939, label %924

924:                                              ; preds = %915
  %925 = bitcast i8* %922 to i32*
  %926 = load i32, i32* %925, align 8
  %927 = icmp eq i32 %926, 6
  br i1 %927, label %928, label %936

928:                                              ; preds = %924
  %929 = getelementptr inbounds %27, %27* %919, i64 0, i32 2
  %930 = load i8*, i8** %929, align 8
  %931 = getelementptr inbounds %27, %27* %919, i64 0, i32 3
  %932 = load i32, i32* %931, align 8
  %933 = getelementptr inbounds i8, i8* %922, i64 32
  %934 = bitcast i8* %933 to i8**
  %935 = load i8*, i8** %934, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %930, i32 %932, i8* %935) #14
  call void @freeReplyObject(i8* nonnull %922) #14
  br label %939

936:                                              ; preds = %924
  call void @freeReplyObject(i8* nonnull %922) #14
  %937 = call %25* @listNext(%26* nonnull %16) #14
  %938 = icmp eq %25* %937, null
  br i1 %938, label %939, label %915

939:                                              ; preds = %891, %873, %936, %915, %928, %912, %904, %895, %882, %863, %852
  %940 = phi i32 [ 0, %904 ], [ 0, %852 ], [ 0, %882 ], [ 0, %895 ], [ 0, %928 ], [ 1, %912 ], [ %861, %863 ], [ 1, %936 ], [ 0, %915 ], [ %892, %891 ], [ 0, %873 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #14
  br label %1005

941:                                              ; preds = %836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #14
  br label %1000

942:                                              ; preds = %673
  %943 = getelementptr inbounds %24, %24* %226, i64 0, i32 0
  %944 = load %25*, %25** %943, align 8
  %945 = getelementptr inbounds %25, %25* %944, i64 0, i32 2
  %946 = bitcast i8** %945 to %27**
  %947 = load %27*, %27** %946, align 8
  %948 = icmp ne %27* %582, null
  %949 = icmp eq %27* %582, %947
  %950 = and i1 %948, %949
  br i1 %950, label %978, label %951

951:                                              ; preds = %942
  %952 = getelementptr inbounds %27, %27* %947, i64 0, i32 0
  %953 = load %9*, %9** %952, align 8
  %954 = call i8* (%9*, i8*, ...) @redisCommand(%9* %953, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @887, i64 0, i64 0), i32 %216, i32 10) #14
  %955 = icmp eq i8* %954, null
  br i1 %955, label %1005, label %956

956:                                              ; preds = %951
  %957 = bitcast i8* %954 to i32*
  %958 = load i32, i32* %957, align 8
  %959 = icmp eq i32 %958, 6
  br i1 %959, label %960, label %968

960:                                              ; preds = %956
  %961 = getelementptr inbounds %27, %27* %947, i64 0, i32 2
  %962 = load i8*, i8** %961, align 8
  %963 = getelementptr inbounds %27, %27* %947, i64 0, i32 3
  %964 = load i32, i32* %963, align 8
  %965 = getelementptr inbounds i8, i8* %954, i64 32
  %966 = bitcast i8* %965 to i8**
  %967 = load i8*, i8** %966, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %962, i32 %964, i8* %967) #14
  call void @freeReplyObject(i8* nonnull %954) #14
  br label %1005

968:                                              ; preds = %956
  %969 = getelementptr inbounds i8, i8* %954, i64 48
  %970 = bitcast i8* %969 to i64*
  %971 = load i64, i64* %970, align 8
  %972 = icmp eq i64 %971, 0
  call void @freeReplyObject(i8* nonnull %954) #14
  br i1 %972, label %973, label %1000

973:                                              ; preds = %968
  %974 = load %25*, %25** %943, align 8
  %975 = getelementptr inbounds %25, %25* %974, i64 0, i32 2
  %976 = bitcast i8** %975 to %27**
  %977 = load %27*, %27** %976, align 8
  br label %978

978:                                              ; preds = %973, %942
  %979 = phi %27* [ %977, %973 ], [ %582, %942 ]
  %980 = getelementptr inbounds %27, %27* %979, i64 0, i32 2
  %981 = load i8*, i8** %980, align 8
  %982 = getelementptr inbounds %27, %27* %979, i64 0, i32 3
  %983 = load i32, i32* %982, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @888, i64 0, i64 0), i32 %216, i8* %981, i32 %983) #14
  %984 = getelementptr inbounds %27, %27* %979, i64 0, i32 0
  %985 = load %9*, %9** %984, align 8
  %986 = call i8* (%9*, i8*, ...) @redisCommand(%9* %985, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %987 = icmp eq i8* %986, null
  br i1 %987, label %1005, label %988

988:                                              ; preds = %978
  %989 = bitcast i8* %986 to i32*
  %990 = load i32, i32* %989, align 8
  %991 = icmp eq i32 %990, 6
  br i1 %991, label %992, label %998

992:                                              ; preds = %988
  %993 = load i8*, i8** %980, align 8
  %994 = load i32, i32* %982, align 8
  %995 = getelementptr inbounds i8, i8* %986, i64 32
  %996 = bitcast i8* %995 to i8**
  %997 = load i8*, i8** %996, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %993, i32 %994, i8* %997) #14
  br label %998

998:                                              ; preds = %992, %988
  %999 = phi i32 [ 1, %988 ], [ 0, %992 ]
  call void @freeReplyObject(i8* nonnull %986) #14
  br label %1005

1000:                                             ; preds = %670, %968, %941, %696
  %1001 = getelementptr inbounds %27, %27* %582, i64 0, i32 2
  %1002 = load i8*, i8** %1001, align 8
  %1003 = getelementptr inbounds %27, %27* %582, i64 0, i32 3
  %1004 = load i32, i32* %1003, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @891, i64 0, i64 0), i8* %454, i8* %453, i8* %1002, i32 %1004) #14
  br label %1005

1005:                                             ; preds = %252, %407, %601, %604, %626, %713, %716, %758, %777, %261, %416, %520, %521, %534, %540, %543, %554, %616, %635, %676, %729, %741, %768, %939, %951, %960, %978, %998, %1000
  %1006 = phi i8* [ %453, %520 ], [ %453, %676 ], [ %453, %1000 ], [ %453, %540 ], [ %453, %998 ], [ %453, %534 ], [ %453, %554 ], [ %453, %939 ], [ %453, %960 ], [ %229, %261 ], [ %402, %416 ], [ %453, %521 ], [ %453, %543 ], [ %453, %616 ], [ %453, %635 ], [ %453, %729 ], [ %453, %768 ], [ %453, %951 ], [ %453, %978 ], [ %453, %741 ], [ %453, %777 ], [ %453, %758 ], [ %453, %716 ], [ %453, %713 ], [ %453, %626 ], [ %453, %604 ], [ %453, %601 ], [ %402, %407 ], [ %229, %252 ]
  %1007 = phi i8* [ %454, %520 ], [ %454, %676 ], [ %454, %1000 ], [ %454, %540 ], [ %454, %998 ], [ %454, %534 ], [ %454, %554 ], [ %454, %939 ], [ %454, %960 ], [ %228, %261 ], [ %399, %416 ], [ %454, %521 ], [ %454, %543 ], [ %454, %616 ], [ %454, %635 ], [ %454, %729 ], [ %454, %768 ], [ %454, %951 ], [ %454, %978 ], [ %454, %741 ], [ %454, %777 ], [ %454, %758 ], [ %454, %716 ], [ %454, %713 ], [ %454, %626 ], [ %454, %604 ], [ %454, %601 ], [ %399, %407 ], [ %228, %252 ]
  %1008 = phi i32 [ 0, %520 ], [ %695, %676 ], [ 0, %1000 ], [ 0, %540 ], [ %999, %998 ], [ 0, %534 ], [ 0, %554 ], [ %940, %939 ], [ 0, %960 ], [ 0, %261 ], [ 0, %416 ], [ 0, %521 ], [ 0, %543 ], [ 0, %616 ], [ 0, %635 ], [ 0, %729 ], [ 0, %768 ], [ 0, %951 ], [ 0, %978 ], [ 1, %741 ], [ 0, %758 ], [ 1, %777 ], [ 0, %716 ], [ 0, %713 ], [ 0, %626 ], [ 0, %604 ], [ 0, %601 ], [ 0, %407 ], [ 0, %252 ]
  call void @listRelease(%24* %225) #14
  call void @listRelease(%24* %226) #14
  call void @listRelease(%24* %227) #14
  call void @sdsfree(i8* %1007) #14
  call void @sdsfree(i8* %1006) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #14
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %208

1010:                                             ; preds = %208, %1005, %197, %194
  %1011 = phi %32* [ %178, %194 ], [ %198, %197 ], [ %198, %1005 ], [ %198, %208 ]
  %1012 = phi i32 [ 0, %194 ], [ 0, %197 ], [ %1008, %208 ], [ 0, %1005 ]
  call void @dictReleaseIterator(%32* %1011) #14
  call void @dictRelease(%3* nonnull %172) #14
  br label %1013

1013:                                             ; preds = %65, %175, %1010
  %1014 = phi i32 [ %1012, %1010 ], [ %66, %175 ], [ %66, %65 ]
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @856, i64 0, i64 0))
  %1015 = getelementptr inbounds [16384 x i8], [16384 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %1015) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1015, i8 0, i64 16384, i1 false)
  %1016 = load %24*, %24** @.0.1, align 8
  %1017 = icmp eq %24* %1016, null
  br i1 %1017, label %1053, label %1018

1018:                                             ; preds = %1013
  %1019 = bitcast %26* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1019) #14
  call void @listRewind(%24* nonnull %1016, %26* nonnull %10) #14
  %1020 = call %25* @listNext(%26* nonnull %10) #14
  %1021 = icmp eq %25* %1020, null
  br i1 %1021, label %1022, label %1026

1022:                                             ; preds = %1018
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1019) #14
  br label %1053

1023:                                             ; preds = %1723
  %1024 = call %25* @listNext(%26* nonnull %10) #14
  %1025 = icmp eq %25* %1024, null
  br i1 %1025, label %1050, label %1026

1026:                                             ; preds = %1018, %1023
  %1027 = phi %25* [ %1024, %1023 ], [ %1020, %1018 ]
  %1028 = phi i32 [ %1724, %1023 ], [ 0, %1018 ]
  %1029 = getelementptr inbounds %25, %25* %1027, i64 0, i32 2
  %1030 = bitcast i8** %1029 to %27**
  %1031 = load %27*, %27** %1030, align 8
  br label %1032

1032:                                             ; preds = %1723, %1026
  %1033 = phi i64 [ 0, %1026 ], [ %1725, %1723 ]
  %1034 = phi i32 [ %1028, %1026 ], [ %1724, %1723 ]
  %1035 = getelementptr inbounds %27, %27* %1031, i64 0, i32 11, i64 %1033
  %1036 = load i8, i8* %1035, align 1
  %1037 = icmp eq i8 %1036, 0
  br i1 %1037, label %1044, label %1038

1038:                                             ; preds = %1032
  %1039 = getelementptr inbounds [16384 x i8], [16384 x i8]* %19, i64 0, i64 %1033
  %1040 = load i8, i8* %1039, align 2
  %1041 = icmp eq i8 %1040, 0
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1038
  store i8 1, i8* %1039, align 2
  %1043 = add nsw i32 %1034, 1
  br label %1044

1044:                                             ; preds = %1042, %1038, %1032
  %1045 = phi i32 [ %1034, %1038 ], [ %1043, %1042 ], [ %1034, %1032 ]
  %1046 = or i64 %1033, 1
  %1047 = getelementptr inbounds %27, %27* %1031, i64 0, i32 11, i64 %1046
  %1048 = load i8, i8* %1047, align 1
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1723, label %1717

1050:                                             ; preds = %1023
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1019) #14
  %1051 = icmp eq i32 %1724, 16384
  br i1 %1051, label %1052, label %1053

1052:                                             ; preds = %1050
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @857, i64 0, i64 0), i32 16384)
  br label %1519

1053:                                             ; preds = %1013, %1022, %1050
  %1054 = call i8* @sdsempty() #14
  %1055 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %1054, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @858, i64 0, i64 0), i32 16384) #14
  %1056 = load %24*, %24** @.1, align 8
  %1057 = icmp eq %24* %1056, null
  br i1 %1057, label %1058, label %1060

1058:                                             ; preds = %1053
  %1059 = call %24* @listCreate() #14
  store %24* %1059, %24** @.1, align 8
  br label %1060

1060:                                             ; preds = %1053, %1058
  %1061 = phi %24* [ %1059, %1058 ], [ %1056, %1053 ]
  %1062 = call %24* @listAddNodeTail(%24* %1061, i8* %1055) #14
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @811, i64 0, i64 0), i8* %1055) #14
  %1063 = icmp eq i32 %35, 0
  br i1 %1063, label %1519, label %1064

1064:                                             ; preds = %1060
  %1065 = bitcast %4* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1065) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1065, i8* align 8 bitcast (%4* @812 to i8*), i64 32, i1 false)
  %1066 = getelementptr inbounds %4, %4* %20, i64 0, i32 4
  %1067 = bitcast void (i8*, i8*)** %1066 to <2 x void (i8*, i8*)*>*
  store <2 x void (i8*, i8*)*> <void (i8*, i8*)* @1371, void (i8*, i8*)* @1376>, <2 x void (i8*, i8*)*>* %1067, align 8
  %1068 = call %3* @dictCreate(%4* nonnull %20, i8* null) #14
  store %3* %1068, %3** @clusterManagerUncoveredSlots, align 8
  %1069 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %1070 = and i32 %1069, 1024
  %1071 = load i32, i32* @.2, align 8
  %1072 = icmp slt i32 %1071, 1
  %1073 = icmp ne i32 %1070, 0
  %1074 = or i1 %1072, %1073
  br i1 %1074, label %1076, label %1075

1075:                                             ; preds = %1064
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([355 x i8], [355 x i8]* @924, i64 0, i64 0), i32 %1071) #14
  call void @exit(i32 1) #19
  unreachable

1076:                                             ; preds = %1064
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @925, i64 0, i64 0)) #14
  %1077 = bitcast %26* %5 to i8*
  br label %1078

1078:                                             ; preds = %1159, %1076
  %1079 = phi i64 [ 0, %1076 ], [ %1160, %1159 ]
  %1080 = getelementptr inbounds [16384 x i8], [16384 x i8]* %19, i64 0, i64 %1079
  %1081 = load i8, i8* %1080, align 1
  %1082 = icmp eq i8 %1081, 0
  br i1 %1082, label %1083, label %1159

1083:                                             ; preds = %1078
  %1084 = call i8* @sdsfromlonglong(i64 %1079) #14
  %1085 = call %24* @listCreate() #14
  %1086 = call i8* @sdsempty() #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1077) #14
  %1087 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %1087, %26* nonnull %5) #14
  %1088 = call %25* @listNext(%26* nonnull %5) #14
  %1089 = icmp eq %25* %1088, null
  br i1 %1089, label %1153, label %1090

1090:                                             ; preds = %1083
  %1091 = getelementptr inbounds %24, %24* %1085, i64 0, i32 5
  %1092 = trunc i64 %1079 to i32
  br label %1093

1093:                                             ; preds = %1149, %1090
  %1094 = phi %25* [ %1088, %1090 ], [ %1151, %1149 ]
  %1095 = phi i8* [ %1086, %1090 ], [ %1150, %1149 ]
  %1096 = getelementptr inbounds %25, %25* %1094, i64 0, i32 2
  %1097 = load i8*, i8** %1096, align 8
  %1098 = getelementptr inbounds i8, i8* %1097, i64 56
  %1099 = bitcast i8* %1098 to i32*
  %1100 = load i32, i32* %1099, align 8
  %1101 = and i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  br i1 %1102, label %1103, label %1149

1103:                                             ; preds = %1093
  %1104 = getelementptr inbounds i8, i8* %1097, i64 72
  %1105 = bitcast i8* %1104 to i8**
  %1106 = load i8*, i8** %1105, align 8
  %1107 = icmp eq i8* %1106, null
  br i1 %1107, label %1108, label %1149

1108:                                             ; preds = %1103
  %1109 = bitcast i8* %1097 to %9**
  %1110 = load %9*, %9** %1109, align 8
  %1111 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1110, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @887, i64 0, i64 0), i32 %1092, i32 1) #14
  %1112 = icmp eq i8* %1111, null
  br i1 %1112, label %1158, label %1113

1113:                                             ; preds = %1108
  %1114 = bitcast i8* %1111 to i32*
  %1115 = load i32, i32* %1114, align 8
  switch i32 %1115, label %1126 [
    i32 6, label %1116
    i32 2, label %1127
  ]

1116:                                             ; preds = %1113
  %1117 = getelementptr inbounds i8, i8* %1097, i64 16
  %1118 = bitcast i8* %1117 to i8**
  %1119 = load i8*, i8** %1118, align 8
  %1120 = getelementptr inbounds i8, i8* %1097, i64 24
  %1121 = bitcast i8* %1120 to i32*
  %1122 = load i32, i32* %1121, align 8
  %1123 = getelementptr inbounds i8, i8* %1111, i64 32
  %1124 = bitcast i8* %1123 to i8**
  %1125 = load i8*, i8** %1124, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1119, i32 %1122, i8* %1125) #14
  call void @freeReplyObject(i8* nonnull %1111) #14
  br label %1158

1126:                                             ; preds = %1113
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @896, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4453, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @926, i64 0, i64 0)) #19
  unreachable

1127:                                             ; preds = %1113
  %1128 = getelementptr inbounds i8, i8* %1111, i64 48
  %1129 = bitcast i8* %1128 to i64*
  %1130 = load i64, i64* %1129, align 8
  %1131 = icmp eq i64 %1130, 0
  br i1 %1131, label %1147, label %1132

1132:                                             ; preds = %1127
  %1133 = call %24* @listAddNodeTail(%24* %1085, i8* nonnull %1097) #14
  %1134 = load i64, i64* %1091, align 8
  %1135 = icmp ugt i64 %1134, 1
  br i1 %1135, label %1136, label %1138

1136:                                             ; preds = %1132
  %1137 = call i8* @sdscat(i8* %1095, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @927, i64 0, i64 0)) #14
  br label %1138

1138:                                             ; preds = %1136, %1132
  %1139 = phi i8* [ %1137, %1136 ], [ %1095, %1132 ]
  %1140 = getelementptr inbounds i8, i8* %1097, i64 16
  %1141 = bitcast i8* %1140 to i8**
  %1142 = load i8*, i8** %1141, align 8
  %1143 = getelementptr inbounds i8, i8* %1097, i64 24
  %1144 = bitcast i8* %1143 to i32*
  %1145 = load i32, i32* %1144, align 8
  %1146 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %1139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @843, i64 0, i64 0), i8* %1142, i32 %1145) #14
  br label %1147

1147:                                             ; preds = %1138, %1127
  %1148 = phi i8* [ %1146, %1138 ], [ %1095, %1127 ]
  call void @freeReplyObject(i8* nonnull %1111) #14
  br label %1149

1149:                                             ; preds = %1147, %1103, %1093
  %1150 = phi i8* [ %1095, %1103 ], [ %1095, %1093 ], [ %1148, %1147 ]
  %1151 = call %25* @listNext(%26* nonnull %5) #14
  %1152 = icmp eq %25* %1151, null
  br i1 %1152, label %1153, label %1093

1153:                                             ; preds = %1149, %1083
  %1154 = phi i8* [ %1086, %1083 ], [ %1150, %1149 ]
  call void @sdsfree(i8* %1154) #14
  %1155 = load %3*, %3** @clusterManagerUncoveredSlots, align 8
  %1156 = bitcast %24* %1085 to i8*
  %1157 = call i32 @dictAdd(%3* %1155, i8* %1084, i8* %1156) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1077) #14
  br label %1159

1158:                                             ; preds = %1108, %1116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1077) #14
  br label %1517

1159:                                             ; preds = %1153, %1078
  %1160 = add nuw nsw i64 %1079, 1
  %1161 = icmp ult i64 %1160, 16384
  br i1 %1161, label %1078, label %1162

1162:                                             ; preds = %1159
  %1163 = call %24* @listCreate() #14
  %1164 = call %24* @listCreate() #14
  %1165 = call %24* @listCreate() #14
  %1166 = load %3*, %3** @clusterManagerUncoveredSlots, align 8
  %1167 = call %32* @dictGetIterator(%3* %1166) #14
  %1168 = call %6* @dictNext(%32* %1167) #14
  %1169 = icmp eq %6* %1168, null
  br i1 %1169, label %1188, label %1170

1170:                                             ; preds = %1162, %1185
  %1171 = phi %6* [ %1186, %1185 ], [ %1168, %1162 ]
  %1172 = getelementptr inbounds %6, %6* %1171, i64 0, i32 0
  %1173 = load i8*, i8** %1172, align 8
  %1174 = getelementptr inbounds %6, %6* %1171, i64 0, i32 1, i32 0
  %1175 = bitcast i8** %1174 to %24**
  %1176 = load %24*, %24** %1175, align 8
  %1177 = getelementptr inbounds %24, %24* %1176, i64 0, i32 5
  %1178 = load i64, i64* %1177, align 8
  switch i64 %1178, label %1183 [
    i64 0, label %1179
    i64 1, label %1181
  ]

1179:                                             ; preds = %1170
  %1180 = call %24* @listAddNodeTail(%24* %1163, i8* %1173) #14
  br label %1185

1181:                                             ; preds = %1170
  %1182 = call %24* @listAddNodeTail(%24* %1164, i8* %1173) #14
  br label %1185

1183:                                             ; preds = %1170
  %1184 = call %24* @listAddNodeTail(%24* %1165, i8* %1173) #14
  br label %1185

1185:                                             ; preds = %1183, %1181, %1179
  %1186 = call %6* @dictNext(%32* %1167) #14
  %1187 = icmp eq %6* %1186, null
  br i1 %1187, label %1188, label %1170

1188:                                             ; preds = %1185, %1162
  call void @dictReleaseIterator(%32* %1167) #14
  %1189 = getelementptr inbounds %24, %24* %1163, i64 0, i32 5
  %1190 = load i64, i64* %1189, align 8
  %1191 = icmp eq i64 %1190, 0
  br i1 %1191, label %1283, label %1192

1192:                                             ; preds = %1188
  %1193 = call i32 @puts(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.35, i64 0, i64 0)) #14
  call fastcc void @1385(%24* nonnull %1163) #14
  %1194 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @829, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @928, i64 0, i64 0)) #14
  %1195 = load %1*, %1** @stdout, align 8
  %1196 = call i32 @fflush(%1* %1195) #14
  %1197 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1197) #14
  %1198 = load %1*, %1** @stdin, align 8
  %1199 = call i32 @fileno(%1* %1198) #14
  %1200 = call i64 @read(i32 %1199, i8* nonnull %1197, i64 4) #14
  %1201 = trunc i64 %1200 to i32
  %1202 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  store i8 0, i8* %1202, align 1
  %1203 = icmp eq i32 %1201, 0
  br i1 %1203, label %1204, label %1205

1204:                                             ; preds = %1192
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1197) #14
  br label %1283

1205:                                             ; preds = %1192
  %1206 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @830, i64 0, i64 0), i8* nonnull %1197) #17
  %1207 = icmp eq i32 %1206, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1197) #14
  br i1 %1207, label %1208, label %1283

1208:                                             ; preds = %1205
  %1209 = bitcast %26* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1209) #14
  call void @listRewind(%24* nonnull %1163, %26* nonnull %6) #14
  %1210 = call %25* @listNext(%26* nonnull %6) #14
  %1211 = icmp eq %25* %1210, null
  br i1 %1211, label %1214, label %1212

1212:                                             ; preds = %1208
  %1213 = bitcast %26* %3 to i8*
  br label %1216

1214:                                             ; preds = %1275, %1208
  %1215 = phi i32 [ 0, %1208 ], [ %1279, %1275 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1209) #14
  br label %1283

1216:                                             ; preds = %1275, %1212
  %1217 = phi %25* [ %1210, %1212 ], [ %1280, %1275 ]
  %1218 = phi i32 [ 0, %1212 ], [ %1279, %1275 ]
  %1219 = getelementptr inbounds %25, %25* %1217, i64 0, i32 2
  %1220 = load i8*, i8** %1219, align 8
  %1221 = call i64 @strtol(i8* nocapture nonnull %1220, i8** null, i32 10) #14
  %1222 = trunc i64 %1221 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1213) #14
  %1223 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %1223, %26* nonnull %3) #14
  %1224 = call %25* @listNext(%26* nonnull %3) #14
  %1225 = icmp eq %25* %1224, null
  br i1 %1225, label %1240, label %1226

1226:                                             ; preds = %1216, %1226
  %1227 = phi %25* [ %1238, %1226 ], [ %1224, %1216 ]
  %1228 = phi i32 [ %1237, %1226 ], [ 0, %1216 ]
  %1229 = getelementptr inbounds %25, %25* %1227, i64 0, i32 2
  %1230 = bitcast i8** %1229 to %27**
  %1231 = load %27*, %27** %1230, align 8
  %1232 = getelementptr inbounds %27, %27* %1231, i64 0, i32 7
  %1233 = load i32, i32* %1232, align 8
  %1234 = lshr i32 %1233, 1
  %1235 = and i32 %1234, 1
  %1236 = xor i32 %1235, 1
  %1237 = add nuw nsw i32 %1236, %1228
  %1238 = call %25* @listNext(%26* nonnull %3) #14
  %1239 = icmp eq %25* %1238, null
  br i1 %1239, label %1240, label %1226

1240:                                             ; preds = %1226, %1216
  %1241 = phi i32 [ 0, %1216 ], [ %1237, %1226 ]
  %1242 = call i64 @time(i64* null) #14
  %1243 = trunc i64 %1242 to i32
  call void @srand(i32 %1243) #14
  %1244 = call i32 @rand() #14
  %1245 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %1245, %26* nonnull %3) #14
  %1246 = call %25* @listNext(%26* nonnull %3) #14
  %1247 = icmp eq %25* %1246, null
  br i1 %1247, label %1267, label %1248

1248:                                             ; preds = %1240
  %1249 = srem i32 %1244, %1241
  br label %1250

1250:                                             ; preds = %1263, %1248
  %1251 = phi %25* [ %1265, %1263 ], [ %1246, %1248 ]
  %1252 = phi i32 [ %1264, %1263 ], [ %1249, %1248 ]
  %1253 = getelementptr inbounds %25, %25* %1251, i64 0, i32 2
  %1254 = bitcast i8** %1253 to %27**
  %1255 = load %27*, %27** %1254, align 8
  %1256 = getelementptr inbounds %27, %27* %1255, i64 0, i32 7
  %1257 = load i32, i32* %1256, align 8
  %1258 = and i32 %1257, 2
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1260, label %1263

1260:                                             ; preds = %1250
  %1261 = add nsw i32 %1252, -1
  %1262 = icmp eq i32 %1252, 0
  br i1 %1262, label %1267, label %1263

1263:                                             ; preds = %1260, %1250
  %1264 = phi i32 [ %1261, %1260 ], [ %1252, %1250 ]
  %1265 = call %25* @listNext(%26* nonnull %3) #14
  %1266 = icmp eq %25* %1265, null
  br i1 %1266, label %1267, label %1250

1267:                                             ; preds = %1263, %1260, %1240
  %1268 = phi %27* [ null, %1240 ], [ null, %1263 ], [ %1255, %1260 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1213) #14
  %1269 = getelementptr inbounds %27, %27* %1268, i64 0, i32 2
  %1270 = load i8*, i8** %1269, align 8
  %1271 = getelementptr inbounds %27, %27* %1268, i64 0, i32 3
  %1272 = load i32, i32* %1271, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @929, i64 0, i64 0), i8* nonnull %1220, i8* %1270, i32 %1272) #14
  %1273 = call fastcc i32 @1379(%27* %1268, i32 %1222, i32 0) #14
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1282, label %1275

1275:                                             ; preds = %1267
  %1276 = shl i64 %1221, 32
  %1277 = ashr exact i64 %1276, 32
  %1278 = getelementptr inbounds %27, %27* %1268, i64 0, i32 11, i64 %1277
  store i8 1, i8* %1278, align 1
  %1279 = add nuw nsw i32 %1218, 1
  %1280 = call %25* @listNext(%26* nonnull %6) #14
  %1281 = icmp eq %25* %1280, null
  br i1 %1281, label %1214, label %1216

1282:                                             ; preds = %1267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1209) #14
  br label %1504

1283:                                             ; preds = %1214, %1205, %1204, %1188
  %1284 = phi i32 [ 0, %1205 ], [ 0, %1188 ], [ 0, %1204 ], [ %1215, %1214 ]
  %1285 = getelementptr inbounds %24, %24* %1164, i64 0, i32 5
  %1286 = load i64, i64* %1285, align 8
  %1287 = icmp eq i64 %1286, 0
  br i1 %1287, label %1348, label %1288

1288:                                             ; preds = %1283
  %1289 = call i32 @puts(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.34, i64 0, i64 0)) #14
  call fastcc void @1385(%24* nonnull %1164) #14
  %1290 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @829, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @930, i64 0, i64 0)) #14
  %1291 = load %1*, %1** @stdout, align 8
  %1292 = call i32 @fflush(%1* %1291) #14
  %1293 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1293) #14
  %1294 = load %1*, %1** @stdin, align 8
  %1295 = call i32 @fileno(%1* %1294) #14
  %1296 = call i64 @read(i32 %1295, i8* nonnull %1293, i64 4) #14
  %1297 = trunc i64 %1296 to i32
  %1298 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  store i8 0, i8* %1298, align 1
  %1299 = icmp eq i32 %1297, 0
  br i1 %1299, label %1300, label %1301

1300:                                             ; preds = %1288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1293) #14
  br label %1348

1301:                                             ; preds = %1288
  %1302 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @830, i64 0, i64 0), i8* nonnull %1293) #17
  %1303 = icmp eq i32 %1302, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1293) #14
  br i1 %1303, label %1304, label %1348

1304:                                             ; preds = %1301
  %1305 = bitcast %26* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1305) #14
  call void @listRewind(%24* nonnull %1164, %26* nonnull %7) #14
  %1306 = call %25* @listNext(%26* nonnull %7) #14
  %1307 = icmp eq %25* %1306, null
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1339, %1304
  %1309 = phi i32 [ %1284, %1304 ], [ %1344, %1339 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1305) #14
  br label %1348

1310:                                             ; preds = %1304, %1339
  %1311 = phi %25* [ %1345, %1339 ], [ %1306, %1304 ]
  %1312 = phi i32 [ %1344, %1339 ], [ %1284, %1304 ]
  %1313 = getelementptr inbounds %25, %25* %1311, i64 0, i32 2
  %1314 = load i8*, i8** %1313, align 8
  %1315 = call i64 @strtol(i8* nocapture nonnull %1314, i8** null, i32 10) #14
  %1316 = trunc i64 %1315 to i32
  %1317 = load %3*, %3** @clusterManagerUncoveredSlots, align 8
  %1318 = call %6* @dictFind(%3* %1317, i8* nonnull %1314) #14
  %1319 = icmp eq %6* %1318, null
  br i1 %1319, label %1320, label %1321

1320:                                             ; preds = %1310
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @931, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4527, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @926, i64 0, i64 0)) #19
  unreachable

1321:                                             ; preds = %1310
  %1322 = getelementptr inbounds %6, %6* %1318, i64 0, i32 1, i32 0
  %1323 = bitcast i8** %1322 to %24**
  %1324 = load %24*, %24** %1323, align 8
  %1325 = getelementptr inbounds %24, %24* %1324, i64 0, i32 0
  %1326 = load %25*, %25** %1325, align 8
  %1327 = icmp eq %25* %1326, null
  br i1 %1327, label %1328, label %1329

1328:                                             ; preds = %1321
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @932, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4530, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @926, i64 0, i64 0)) #19
  unreachable

1329:                                             ; preds = %1321
  %1330 = getelementptr inbounds %25, %25* %1326, i64 0, i32 2
  %1331 = bitcast i8** %1330 to %27**
  %1332 = load %27*, %27** %1331, align 8
  %1333 = getelementptr inbounds %27, %27* %1332, i64 0, i32 2
  %1334 = load i8*, i8** %1333, align 8
  %1335 = getelementptr inbounds %27, %27* %1332, i64 0, i32 3
  %1336 = load i32, i32* %1335, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @929, i64 0, i64 0), i8* nonnull %1314, i8* %1334, i32 %1336) #14
  %1337 = call fastcc i32 @1379(%27* %1332, i32 %1316, i32 0) #14
  %1338 = icmp eq i32 %1337, 0
  br i1 %1338, label %1347, label %1339

1339:                                             ; preds = %1329
  %1340 = call i64 @strtol(i8* nocapture nonnull %1314, i8** null, i32 10) #14
  %1341 = shl i64 %1340, 32
  %1342 = ashr exact i64 %1341, 32
  %1343 = getelementptr inbounds %27, %27* %1332, i64 0, i32 11, i64 %1342
  store i8 1, i8* %1343, align 1
  %1344 = add nuw nsw i32 %1312, 1
  %1345 = call %25* @listNext(%26* nonnull %7) #14
  %1346 = icmp eq %25* %1345, null
  br i1 %1346, label %1308, label %1310

1347:                                             ; preds = %1329
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1305) #14
  br label %1504

1348:                                             ; preds = %1308, %1301, %1300, %1283
  %1349 = phi i32 [ %1284, %1301 ], [ %1284, %1283 ], [ %1284, %1300 ], [ %1309, %1308 ]
  %1350 = getelementptr inbounds %24, %24* %1165, i64 0, i32 5
  %1351 = load i64, i64* %1350, align 8
  %1352 = icmp eq i64 %1351, 0
  br i1 %1352, label %1504, label %1353

1353:                                             ; preds = %1348
  %1354 = call i32 @puts(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.33, i64 0, i64 0)) #14
  call fastcc void @1385(%24* nonnull %1165) #14
  %1355 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @829, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @933, i64 0, i64 0)) #14
  %1356 = load %1*, %1** @stdout, align 8
  %1357 = call i32 @fflush(%1* %1356) #14
  %1358 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1358) #14
  %1359 = load %1*, %1** @stdin, align 8
  %1360 = call i32 @fileno(%1* %1359) #14
  %1361 = call i64 @read(i32 %1360, i8* nonnull %1358, i64 4) #14
  %1362 = trunc i64 %1361 to i32
  %1363 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  store i8 0, i8* %1363, align 1
  %1364 = icmp eq i32 %1362, 0
  br i1 %1364, label %1365, label %1366

1365:                                             ; preds = %1353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1358) #14
  br label %1504

1366:                                             ; preds = %1353
  %1367 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @830, i64 0, i64 0), i8* nonnull %1358) #17
  %1368 = icmp eq i32 %1367, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1358) #14
  br i1 %1368, label %1369, label %1504

1369:                                             ; preds = %1366
  %1370 = bitcast %26* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1370) #14
  call void @listRewind(%24* nonnull %1165, %26* nonnull %8) #14
  %1371 = call %25* @listNext(%26* nonnull %8) #14
  %1372 = icmp eq %25* %1371, null
  br i1 %1372, label %1502, label %1373

1373:                                             ; preds = %1369
  %1374 = bitcast %26* %9 to i8*
  br label %1375

1375:                                             ; preds = %1498, %1373
  %1376 = phi %25* [ %1371, %1373 ], [ %1500, %1498 ]
  %1377 = phi i32 [ %1349, %1373 ], [ %1499, %1498 ]
  %1378 = getelementptr inbounds %25, %25* %1376, i64 0, i32 2
  %1379 = load i8*, i8** %1378, align 8
  %1380 = load %3*, %3** @clusterManagerUncoveredSlots, align 8
  %1381 = call %6* @dictFind(%3* %1380, i8* %1379) #14
  %1382 = icmp eq %6* %1381, null
  br i1 %1382, label %1383, label %1384

1383:                                             ; preds = %1375
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @931, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4558, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @926, i64 0, i64 0)) #19
  unreachable

1384:                                             ; preds = %1375
  %1385 = getelementptr inbounds %6, %6* %1381, i64 0, i32 1, i32 0
  %1386 = bitcast i8** %1385 to %24**
  %1387 = load %24*, %24** %1386, align 8
  %1388 = call i64 @strtol(i8* nocapture nonnull %1379, i8** null, i32 10) #14
  %1389 = trunc i64 %1388 to i32
  %1390 = call fastcc %27* @1378(%24* %1387, i32 %1389) #14
  %1391 = icmp eq %27* %1390, null
  br i1 %1391, label %1502, label %1392

1392:                                             ; preds = %1384
  %1393 = getelementptr inbounds %27, %27* %1390, i64 0, i32 2
  %1394 = load i8*, i8** %1393, align 8
  %1395 = getelementptr inbounds %27, %27* %1390, i64 0, i32 3
  %1396 = load i32, i32* %1395, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @934, i64 0, i64 0), i8* nonnull %1379, i8* %1394, i32 %1396) #14
  %1397 = call fastcc i32 @1379(%27* nonnull %1390, i32 %1389, i32 1) #14
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1502, label %1399

1399:                                             ; preds = %1392
  %1400 = call i64 @strtol(i8* nocapture nonnull %1379, i8** null, i32 10) #14
  %1401 = shl i64 %1400, 32
  %1402 = ashr exact i64 %1401, 32
  %1403 = getelementptr inbounds %27, %27* %1390, i64 0, i32 11, i64 %1402
  store i8 1, i8* %1403, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1374) #14
  call void @listRewind(%24* %1387, %26* nonnull %9) #14
  %1404 = call %25* @listNext(%26* nonnull %9) #14
  %1405 = icmp eq %25* %1404, null
  br i1 %1405, label %1498, label %1406

1406:                                             ; preds = %1399
  %1407 = getelementptr %27, %27* %1390, i64 0, i32 1
  %1408 = icmp slt i32 %1377, 0
  br i1 %1408, label %1409, label %1430

1409:                                             ; preds = %1406, %1427
  %1410 = phi %25* [ %1428, %1427 ], [ %1404, %1406 ]
  %1411 = getelementptr inbounds %25, %25* %1410, i64 0, i32 2
  %1412 = bitcast i8** %1411 to %27**
  %1413 = load %27*, %27** %1412, align 8
  %1414 = icmp eq %27* %1413, %1390
  br i1 %1414, label %1427, label %1415

1415:                                             ; preds = %1409
  %1416 = trunc i64 %1388 to i32
  %1417 = load i8*, i8** %1407, align 8
  %1418 = getelementptr inbounds %27, %27* %1413, i64 0, i32 0
  %1419 = load %9*, %9** %1418, align 8
  %1420 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1419, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %1416, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @883, i64 0, i64 0), i8* %1417) #14
  %1421 = icmp eq i8* %1420, null
  br i1 %1421, label %1493, label %1422

1422:                                             ; preds = %1415
  %1423 = bitcast i8* %1420 to i32*
  %1424 = load i32, i32* %1423, align 8
  %1425 = icmp eq i32 %1424, 6
  br i1 %1425, label %1446, label %1426

1426:                                             ; preds = %1422
  call void @freeReplyObject(i8* nonnull %1420) #14
  br label %1493

1427:                                             ; preds = %1409
  %1428 = call %25* @listNext(%26* nonnull %9) #14
  %1429 = icmp eq %25* %1428, null
  br i1 %1429, label %1498, label %1409

1430:                                             ; preds = %1406, %1495
  %1431 = phi %25* [ %1496, %1495 ], [ %1404, %1406 ]
  %1432 = getelementptr inbounds %25, %25* %1431, i64 0, i32 2
  %1433 = bitcast i8** %1432 to %27**
  %1434 = load %27*, %27** %1433, align 8
  %1435 = icmp eq %27* %1434, %1390
  br i1 %1435, label %1495, label %1436

1436:                                             ; preds = %1430
  %1437 = load i8*, i8** %1407, align 8
  %1438 = getelementptr inbounds %27, %27* %1434, i64 0, i32 0
  %1439 = load %9*, %9** %1438, align 8
  %1440 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1439, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %1389, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @883, i64 0, i64 0), i8* %1437) #14
  %1441 = icmp eq i8* %1440, null
  br i1 %1441, label %1493, label %1442

1442:                                             ; preds = %1436
  %1443 = bitcast i8* %1440 to i32*
  %1444 = load i32, i32* %1443, align 8
  %1445 = icmp eq i32 %1444, 6
  br i1 %1445, label %1446, label %1456

1446:                                             ; preds = %1442, %1422
  %1447 = phi i8* [ %1420, %1422 ], [ %1440, %1442 ]
  %1448 = phi %27* [ %1413, %1422 ], [ %1434, %1442 ]
  %1449 = getelementptr inbounds %27, %27* %1448, i64 0, i32 2
  %1450 = load i8*, i8** %1449, align 8
  %1451 = getelementptr inbounds %27, %27* %1448, i64 0, i32 3
  %1452 = load i32, i32* %1451, align 8
  %1453 = getelementptr inbounds i8, i8* %1447, i64 32
  %1454 = bitcast i8* %1453 to i8**
  %1455 = load i8*, i8** %1454, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1450, i32 %1452, i8* %1455) #14
  call void @freeReplyObject(i8* nonnull %1447) #14
  br label %1493

1456:                                             ; preds = %1442
  call void @freeReplyObject(i8* nonnull %1440) #14
  %1457 = load i8*, i8** %1407, align 8
  %1458 = load %9*, %9** %1438, align 8
  %1459 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1458, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %1389, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @935, i64 0, i64 0), i8* %1457) #14
  %1460 = icmp eq i8* %1459, null
  br i1 %1460, label %1493, label %1461

1461:                                             ; preds = %1456
  %1462 = bitcast i8* %1459 to i32*
  %1463 = load i32, i32* %1462, align 8
  %1464 = icmp eq i32 %1463, 6
  br i1 %1464, label %1465, label %1473

1465:                                             ; preds = %1461
  %1466 = getelementptr inbounds %27, %27* %1434, i64 0, i32 2
  %1467 = load i8*, i8** %1466, align 8
  %1468 = getelementptr inbounds %27, %27* %1434, i64 0, i32 3
  %1469 = load i32, i32* %1468, align 8
  %1470 = getelementptr inbounds i8, i8* %1459, i64 32
  %1471 = bitcast i8* %1470 to i8**
  %1472 = load i8*, i8** %1471, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1467, i32 %1469, i8* %1472) #14
  call void @freeReplyObject(i8* nonnull %1459) #14
  br label %1493

1473:                                             ; preds = %1461
  call void @freeReplyObject(i8* nonnull %1459) #14
  %1474 = call fastcc i32 @1382(%27* nonnull %1434, %27* nonnull %1390, i32 %1389, i32 130, i8** null) #14
  %1475 = icmp eq i32 %1474, 0
  br i1 %1475, label %1493, label %1476

1476:                                             ; preds = %1473
  %1477 = load %9*, %9** %1438, align 8
  %1478 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1477, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %1389, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %1479 = icmp eq i8* %1478, null
  br i1 %1479, label %1493, label %1480

1480:                                             ; preds = %1476
  %1481 = bitcast i8* %1478 to i32*
  %1482 = load i32, i32* %1481, align 8
  %1483 = icmp eq i32 %1482, 6
  br i1 %1483, label %1484, label %1492

1484:                                             ; preds = %1480
  %1485 = getelementptr inbounds %27, %27* %1434, i64 0, i32 2
  %1486 = load i8*, i8** %1485, align 8
  %1487 = getelementptr inbounds %27, %27* %1434, i64 0, i32 3
  %1488 = load i32, i32* %1487, align 8
  %1489 = getelementptr inbounds i8, i8* %1478, i64 32
  %1490 = bitcast i8* %1489 to i8**
  %1491 = load i8*, i8** %1490, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1486, i32 %1488, i8* %1491) #14
  call void @freeReplyObject(i8* nonnull %1478) #14
  br label %1493

1492:                                             ; preds = %1480
  call void @freeReplyObject(i8* nonnull %1478) #14
  br label %1495

1493:                                             ; preds = %1476, %1473, %1456, %1436, %1484, %1465, %1446, %1426, %1415
  %1494 = phi i32 [ -1, %1484 ], [ -1, %1446 ], [ -1, %1465 ], [ %1377, %1426 ], [ -1, %1415 ], [ -1, %1436 ], [ -1, %1456 ], [ -1, %1473 ], [ -1, %1476 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1374) #14
  br label %1502

1495:                                             ; preds = %1492, %1430
  %1496 = call %25* @listNext(%26* nonnull %9) #14
  %1497 = icmp eq %25* %1496, null
  br i1 %1497, label %1498, label %1430

1498:                                             ; preds = %1495, %1427, %1399
  %1499 = add nsw i32 %1377, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1374) #14
  %1500 = call %25* @listNext(%26* nonnull %8) #14
  %1501 = icmp eq %25* %1500, null
  br i1 %1501, label %1502, label %1375

1502:                                             ; preds = %1498, %1392, %1384, %1493, %1369
  %1503 = phi i32 [ %1494, %1493 ], [ %1349, %1369 ], [ -1, %1392 ], [ -1, %1384 ], [ %1499, %1498 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1370) #14
  br label %1504

1504:                                             ; preds = %1502, %1366, %1365, %1348, %1347, %1282
  %1505 = phi i32 [ -1, %1282 ], [ -1, %1347 ], [ %1503, %1502 ], [ %1349, %1366 ], [ %1349, %1348 ], [ %1349, %1365 ]
  %1506 = icmp eq %24* %1163, null
  br i1 %1506, label %1508, label %1507

1507:                                             ; preds = %1504
  call void @listRelease(%24* nonnull %1163) #14
  br label %1508

1508:                                             ; preds = %1507, %1504
  %1509 = icmp eq %24* %1164, null
  br i1 %1509, label %1511, label %1510

1510:                                             ; preds = %1508
  call void @listRelease(%24* nonnull %1164) #14
  br label %1511

1511:                                             ; preds = %1510, %1508
  %1512 = icmp eq %24* %1165, null
  br i1 %1512, label %1514, label %1513

1513:                                             ; preds = %1511
  call void @listRelease(%24* nonnull %1165) #14
  br label %1514

1514:                                             ; preds = %1511, %1513
  %1515 = icmp sgt i32 %1505, 0
  %1516 = zext i1 %1515 to i32
  br label %1517

1517:                                             ; preds = %1514, %1158
  %1518 = phi i32 [ 0, %1158 ], [ %1516, %1514 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1065) #14
  br label %1519

1519:                                             ; preds = %1517, %1060, %1052
  %1520 = phi i32 [ %1014, %1052 ], [ %1518, %1517 ], [ 0, %1060 ]
  %1521 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %1522 = and i32 %1521, 512
  %1523 = icmp eq i32 %1522, 0
  br i1 %1523, label %1713, label %1524

1524:                                             ; preds = %1519
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @859, i64 0, i64 0))
  %1525 = bitcast %26* %21 to i8*
  %1526 = icmp eq i32 %35, 0
  %1527 = bitcast %26* %2 to i8*
  br label %1528

1528:                                             ; preds = %1524, %1703
  %1529 = phi i64 [ 0, %1524 ], [ %1706, %1703 ]
  %1530 = phi i32 [ %1520, %1524 ], [ %1705, %1703 ]
  %1531 = phi i32 [ 0, %1524 ], [ %1704, %1703 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1525) #14
  %1532 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %1532, %26* nonnull %21) #14
  %1533 = call %24* @listCreate() #14
  %1534 = call %25* @listNext(%26* nonnull %21) #14
  %1535 = icmp eq %25* %1534, null
  br i1 %1535, label %1584, label %1536

1536:                                             ; preds = %1528
  %1537 = trunc i64 %1529 to i32
  br label %1538

1538:                                             ; preds = %1536, %1581
  %1539 = phi %25* [ %1534, %1536 ], [ %1582, %1581 ]
  %1540 = getelementptr inbounds %25, %25* %1539, i64 0, i32 2
  %1541 = load i8*, i8** %1540, align 8
  %1542 = getelementptr inbounds i8, i8* %1541, i64 56
  %1543 = bitcast i8* %1542 to i32*
  %1544 = load i32, i32* %1543, align 8
  %1545 = and i32 %1544, 2
  %1546 = icmp eq i32 %1545, 0
  br i1 %1546, label %1547, label %1581

1547:                                             ; preds = %1538
  %1548 = getelementptr inbounds i8, i8* %1541, i64 84
  %1549 = getelementptr inbounds i8, i8* %1548, i64 %1529
  %1550 = load i8, i8* %1549, align 1
  %1551 = icmp eq i8 %1550, 0
  br i1 %1551, label %1554, label %1552

1552:                                             ; preds = %1547
  %1553 = call %24* @listAddNodeTail(%24* %1533, i8* nonnull %1541) #14
  br label %1581

1554:                                             ; preds = %1547
  %1555 = bitcast i8* %1541 to %9**
  %1556 = load %9*, %9** %1555, align 8
  %1557 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1556, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @866, i64 0, i64 0), i32 %1537) #14
  %1558 = icmp eq i8* %1557, null
  br i1 %1558, label %1581, label %1559

1559:                                             ; preds = %1554
  %1560 = bitcast i8* %1557 to i32*
  %1561 = load i32, i32* %1560, align 8
  switch i32 %1561, label %1572 [
    i32 6, label %1562
    i32 3, label %1573
  ]

1562:                                             ; preds = %1559
  %1563 = getelementptr inbounds i8, i8* %1541, i64 16
  %1564 = bitcast i8* %1563 to i8**
  %1565 = load i8*, i8** %1564, align 8
  %1566 = getelementptr inbounds i8, i8* %1541, i64 24
  %1567 = bitcast i8* %1566 to i32*
  %1568 = load i32, i32* %1567, align 8
  %1569 = getelementptr inbounds i8, i8* %1557, i64 32
  %1570 = bitcast i8* %1569 to i8**
  %1571 = load i8*, i8** %1570, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1565, i32 %1568, i8* %1571) #14
  br label %1572

1572:                                             ; preds = %1562, %1559
  call void @freeReplyObject(i8* nonnull %1557) #14
  br label %1581

1573:                                             ; preds = %1559
  %1574 = getelementptr inbounds i8, i8* %1557, i64 8
  %1575 = bitcast i8* %1574 to i64*
  %1576 = load i64, i64* %1575, align 8
  %1577 = trunc i64 %1576 to i32
  call void @freeReplyObject(i8* nonnull %1557) #14
  %1578 = icmp sgt i32 %1577, 0
  br i1 %1578, label %1579, label %1581

1579:                                             ; preds = %1573
  %1580 = call %24* @listAddNodeTail(%24* %1533, i8* nonnull %1541) #14
  br label %1581

1581:                                             ; preds = %1554, %1572, %1552, %1579, %1573, %1538
  %1582 = call %25* @listNext(%26* nonnull %21) #14
  %1583 = icmp eq %25* %1582, null
  br i1 %1583, label %1584, label %1538

1584:                                             ; preds = %1581, %1528
  %1585 = getelementptr inbounds %24, %24* %1533, i64 0, i32 5
  %1586 = load i64, i64* %1585, align 8
  %1587 = icmp ugt i64 %1586, 1
  br i1 %1587, label %1588, label %1703

1588:                                             ; preds = %1584
  %1589 = trunc i64 %1529 to i32
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @860, i64 0, i64 0), i32 %1589, i64 %1586)
  call void @listRewind(%24* nonnull %1533, %26* nonnull %21) #14
  %1590 = call %25* @listNext(%26* nonnull %21) #14
  %1591 = icmp eq %25* %1590, null
  br i1 %1591, label %1603, label %1592

1592:                                             ; preds = %1588, %1592
  %1593 = phi %25* [ %1601, %1592 ], [ %1590, %1588 ]
  %1594 = getelementptr inbounds %25, %25* %1593, i64 0, i32 2
  %1595 = bitcast i8** %1594 to %27**
  %1596 = load %27*, %27** %1595, align 8
  %1597 = getelementptr inbounds %27, %27* %1596, i64 0, i32 2
  %1598 = load i8*, i8** %1597, align 8
  %1599 = getelementptr inbounds %27, %27* %1596, i64 0, i32 3
  %1600 = load i32, i32* %1599, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @861, i64 0, i64 0), i8* %1598, i32 %1600)
  %1601 = call %25* @listNext(%26* nonnull %21) #14
  %1602 = icmp eq %25* %1601, null
  br i1 %1602, label %1603, label %1592

1603:                                             ; preds = %1592, %1588
  %1604 = add nsw i32 %1531, 1
  br i1 %1526, label %1703, label %1605

1605:                                             ; preds = %1603
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @936, i64 0, i64 0), i32 %1589) #14
  %1606 = load i64, i64* %1585, align 8
  %1607 = icmp ugt i64 %1606, 1
  br i1 %1607, label %1609, label %1608

1608:                                             ; preds = %1605
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @937, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 4958, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @938, i64 0, i64 0)) #19
  unreachable

1609:                                             ; preds = %1605
  %1610 = call fastcc %27* @1378(%24* nonnull %1533, i32 %1589) #14
  %1611 = icmp eq %27* %1610, null
  br i1 %1611, label %1612, label %1618

1612:                                             ; preds = %1609
  %1613 = getelementptr inbounds %24, %24* %1533, i64 0, i32 0
  %1614 = load %25*, %25** %1613, align 8
  %1615 = getelementptr inbounds %25, %25* %1614, i64 0, i32 2
  %1616 = bitcast i8** %1615 to %27**
  %1617 = load %27*, %27** %1616, align 8
  br label %1618

1618:                                             ; preds = %1612, %1609
  %1619 = phi %27* [ %1610, %1609 ], [ %1617, %1612 ]
  %1620 = getelementptr inbounds %27, %27* %1619, i64 0, i32 2
  %1621 = load i8*, i8** %1620, align 8
  %1622 = getelementptr inbounds %27, %27* %1619, i64 0, i32 3
  %1623 = load i32, i32* %1622, align 8
  call void (i32, i8*, ...) @1361(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @939, i64 0, i64 0), i32 %1589, i8* %1621, i32 %1623) #14
  %1624 = call fastcc i32 @1379(%27* %1619, i32 %1589, i32 0) #14
  %1625 = icmp eq i32 %1624, 0
  br i1 %1625, label %1701, label %1626

1626:                                             ; preds = %1618
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1527) #14
  %1627 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %1627, %26* nonnull %2) #14
  %1628 = call %25* @listNext(%26* nonnull %2) #14
  %1629 = icmp eq %25* %1628, null
  br i1 %1629, label %1697, label %1630

1630:                                             ; preds = %1626
  %1631 = getelementptr %27, %27* %1619, i64 0, i32 1
  br label %1632

1632:                                             ; preds = %1693, %1630
  %1633 = phi %25* [ %1628, %1630 ], [ %1695, %1693 ]
  %1634 = phi i32 [ 0, %1630 ], [ %1694, %1693 ]
  %1635 = getelementptr inbounds %25, %25* %1633, i64 0, i32 2
  %1636 = bitcast i8** %1635 to %27**
  %1637 = load %27*, %27** %1636, align 8
  %1638 = icmp eq %27* %1637, %1619
  br i1 %1638, label %1693, label %1639

1639:                                             ; preds = %1632
  %1640 = getelementptr inbounds %27, %27* %1637, i64 0, i32 7
  %1641 = load i32, i32* %1640, align 8
  %1642 = and i32 %1641, 2
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %1644, label %1693

1644:                                             ; preds = %1639
  %1645 = getelementptr inbounds %27, %27* %1637, i64 0, i32 0
  %1646 = load %9*, %9** %1645, align 8
  %1647 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1646, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @866, i64 0, i64 0), i32 %1589) #14
  %1648 = icmp eq i8* %1647, null
  br i1 %1648, label %1697, label %1649

1649:                                             ; preds = %1644
  %1650 = bitcast i8* %1647 to i32*
  %1651 = load i32, i32* %1650, align 8
  switch i32 %1651, label %1665 [
    i32 6, label %1652
    i32 3, label %1660
  ]

1652:                                             ; preds = %1649
  %1653 = getelementptr inbounds %27, %27* %1637, i64 0, i32 2
  %1654 = load i8*, i8** %1653, align 8
  %1655 = getelementptr inbounds %27, %27* %1637, i64 0, i32 3
  %1656 = load i32, i32* %1655, align 8
  %1657 = getelementptr inbounds i8, i8* %1647, i64 32
  %1658 = bitcast i8* %1657 to i8**
  %1659 = load i8*, i8** %1658, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1654, i32 %1656, i8* %1659) #14
  br label %1665

1660:                                             ; preds = %1649
  %1661 = getelementptr inbounds i8, i8* %1647, i64 8
  %1662 = bitcast i8* %1661 to i64*
  %1663 = load i64, i64* %1662, align 8
  %1664 = trunc i64 %1663 to i32
  br label %1665

1665:                                             ; preds = %1660, %1652, %1649
  %1666 = phi i32 [ -1, %1652 ], [ %1664, %1660 ], [ -1, %1649 ]
  call void @freeReplyObject(i8* nonnull %1647) #14
  %1667 = icmp sgt i32 %1666, -1
  %1668 = lshr i32 %1666, 31
  %1669 = xor i32 %1668, 1
  br i1 %1667, label %1670, label %1698

1670:                                             ; preds = %1665
  %1671 = call fastcc i32 @1380(%27* nonnull %1637, i32 %1589) #14
  %1672 = load i8*, i8** %1631, align 8
  %1673 = load %9*, %9** %1645, align 8
  %1674 = call i8* (%9*, i8*, ...) @redisCommand(%9* %1673, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %1589, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @878, i64 0, i64 0), i8* %1672) #14
  %1675 = icmp eq i8* %1674, null
  br i1 %1675, label %1697, label %1676

1676:                                             ; preds = %1670
  %1677 = bitcast i8* %1674 to i32*
  %1678 = load i32, i32* %1677, align 8
  %1679 = icmp eq i32 %1678, 6
  br i1 %1679, label %1680, label %1688

1680:                                             ; preds = %1676
  %1681 = getelementptr inbounds %27, %27* %1637, i64 0, i32 2
  %1682 = load i8*, i8** %1681, align 8
  %1683 = getelementptr inbounds %27, %27* %1637, i64 0, i32 3
  %1684 = load i32, i32* %1683, align 8
  %1685 = getelementptr inbounds i8, i8* %1674, i64 32
  %1686 = bitcast i8* %1685 to i8**
  %1687 = load i8*, i8** %1686, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %1682, i32 %1684, i8* %1687) #14
  call void @freeReplyObject(i8* nonnull %1674) #14
  br label %1697

1688:                                             ; preds = %1676
  call void @freeReplyObject(i8* nonnull %1674) #14
  %1689 = icmp sgt i32 %1666, 0
  br i1 %1689, label %1690, label %1693

1690:                                             ; preds = %1688
  %1691 = call fastcc i32 @1382(%27* nonnull %1637, %27* nonnull %1619, i32 %1589, i32 130, i8** null) #14
  %1692 = icmp eq i32 %1691, 0
  br i1 %1692, label %1697, label %1693

1693:                                             ; preds = %1690, %1688, %1639, %1632
  %1694 = phi i32 [ %1634, %1639 ], [ %1634, %1632 ], [ %1691, %1690 ], [ %1669, %1688 ]
  %1695 = call %25* @listNext(%26* nonnull %2) #14
  %1696 = icmp eq %25* %1695, null
  br i1 %1696, label %1698, label %1632

1697:                                             ; preds = %1626, %1690, %1644, %1670, %1680
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1527) #14
  br label %1701

1698:                                             ; preds = %1665, %1693
  %1699 = phi i32 [ %1669, %1665 ], [ %1694, %1693 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1527) #14
  %1700 = icmp eq i32 %1699, 0
  br i1 %1700, label %1701, label %1703

1701:                                             ; preds = %1618, %1698, %1697
  %1702 = trunc i64 %1529 to i32
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @862, i64 0, i64 0), i32 %1702)
  call void @listRelease(%24* %1533) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1525) #14
  br label %1708

1703:                                             ; preds = %1584, %1603, %1698
  %1704 = phi i32 [ %1604, %1603 ], [ %1531, %1584 ], [ %1531, %1698 ]
  %1705 = phi i32 [ 0, %1603 ], [ %1530, %1584 ], [ %1699, %1698 ]
  call void @listRelease(%24* %1533) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1525) #14
  %1706 = add nuw nsw i64 %1529, 1
  %1707 = icmp ult i64 %1706, 16384
  br i1 %1707, label %1528, label %1708

1708:                                             ; preds = %1703, %1701
  %1709 = phi i32 [ %1604, %1701 ], [ %1704, %1703 ]
  %1710 = phi i32 [ 0, %1701 ], [ %1705, %1703 ]
  %1711 = icmp eq i32 %1709, 0
  br i1 %1711, label %1712, label %1713

1712:                                             ; preds = %1708
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @863, i64 0, i64 0))
  br label %1713

1713:                                             ; preds = %1708, %1712, %1519
  %1714 = phi i32 [ %1520, %1519 ], [ %1710, %1712 ], [ %1710, %1708 ]
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %1015) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  br label %1715

1715:                                             ; preds = %1, %1713
  %1716 = phi i32 [ %1714, %1713 ], [ 0, %1 ]
  ret i32 %1716

1717:                                             ; preds = %1044
  %1718 = getelementptr inbounds [16384 x i8], [16384 x i8]* %19, i64 0, i64 %1046
  %1719 = load i8, i8* %1718, align 1
  %1720 = icmp eq i8 %1719, 0
  br i1 %1720, label %1721, label %1723

1721:                                             ; preds = %1717
  store i8 1, i8* %1718, align 1
  %1722 = add nsw i32 %1045, 1
  br label %1723

1723:                                             ; preds = %1721, %1717, %1044
  %1724 = phi i32 [ %1045, %1717 ], [ %1722, %1721 ], [ %1045, %1044 ]
  %1725 = add nuw nsw i64 %1033, 2
  %1726 = icmp eq i64 %1725, 16384
  br i1 %1726, label %1023, label %1032
}

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #1

declare dso_local i8* @zmalloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

declare dso_local void @redisFree(%9*) local_unnamed_addr #5

declare dso_local %9* @redisConnect(i8*, i32) local_unnamed_addr #5

declare dso_local i32 @anetKeepAlive(i8*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8* nocapture readonly) local_unnamed_addr #1

declare dso_local void @listRelease(%24*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc i64 @1367(i8* %0, i8* nocapture readonly %1) unnamed_addr #0 {
  %3 = tail call i8* @strstr(i8* %0, i8* %1) #17
  %4 = icmp eq i8* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(i8* %1) #17
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  %9 = tail call i8* @strchr(i8* nonnull %8, i32 13) #17
  %10 = tail call i8* @strchr(i8* nonnull %8, i32 44) #17
  %11 = icmp ne i8* %10, null
  %12 = icmp ult i8* %10, %9
  %13 = and i1 %11, %12
  %14 = select i1 %13, i8* %10, i8* %9
  %15 = ptrtoint i8* %14 to i64
  %16 = ptrtoint i8* %8 to i64
  %17 = sub i64 %15, %16
  %18 = add i64 %17, 1
  %19 = tail call i8* @zmalloc(i64 %18) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* nonnull align 1 %8, i64 %17, i1 false) #14
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  store i8 0, i8* %20, align 1
  %21 = icmp eq i8* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %5
  %23 = tail call i64 @strtol(i8* nocapture nonnull %19, i8** null, i32 10) #14
  tail call void @zfree(i8* nonnull %19) #14
  br label %24

24:                                               ; preds = %2, %5, %22
  %25 = phi i64 [ %23, %22 ], [ -9223372036854775808, %5 ], [ -9223372036854775808, %2 ]
  ret i64 %25
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #4

declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i64 @strtoll(i8* readonly, i8** nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #14

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #14

; Function Attrs: nounwind
declare dso_local i32 @vfprintf(%1* nocapture, i8* nocapture readonly, %33*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1368(%28* nocapture readonly %0, i32 %1, %27*** %2, i32* %3) unnamed_addr #0 {
  %5 = alloca %26, align 8
  %6 = icmp eq %27*** %2, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = load %24*, %24** @.0.1, align 8
  %9 = getelementptr inbounds %24, %24* %8, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = ashr exact i64 %11, 29
  %13 = tail call i8* @zcalloc(i64 %12) #14
  %14 = bitcast i8* %13 to %27**
  %15 = bitcast %27*** %2 to i8**
  store i8* %13, i8** %15, align 8
  br label %16

16:                                               ; preds = %4, %7
  %17 = phi %27** [ %14, %7 ], [ null, %4 ]
  %18 = icmp sgt i32 %1, 0
  br i1 %18, label %19, label %216

19:                                               ; preds = %16
  %20 = bitcast %26* %5 to i8*
  %21 = icmp eq i32* %3, null
  %22 = sext i32 %1 to i64
  br label %23

23:                                               ; preds = %19, %211
  %24 = phi i64 [ 0, %19 ], [ %214, %211 ]
  %25 = phi i32 [ 0, %19 ], [ %213, %211 ]
  %26 = phi %27** [ %17, %19 ], [ %212, %211 ]
  %27 = call %3* @dictCreate(%4* nonnull @812, i8* null) #14
  %28 = getelementptr inbounds %28, %28* %0, i64 %24, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %84

31:                                               ; preds = %23
  %32 = getelementptr inbounds %28, %28* %0, i64 %24, i32 0
  br label %33

33:                                               ; preds = %31, %78
  %34 = phi i32 [ %29, %31 ], [ %79, %78 ]
  %35 = phi i64 [ 0, %31 ], [ %81, %78 ]
  %36 = phi i8* [ null, %31 ], [ %80, %78 ]
  %37 = load %27**, %27*** %32, align 8
  %38 = getelementptr inbounds %27*, %27** %37, i64 %35
  %39 = load %27*, %27** %38, align 8
  %40 = icmp eq %27* %39, null
  br i1 %40, label %78, label %41

41:                                               ; preds = %33
  %42 = icmp eq i8* %36, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %41
  %44 = getelementptr inbounds %27, %27* %39, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %41, %43
  %47 = phi i8* [ %36, %41 ], [ %45, %43 ]
  %48 = getelementptr inbounds %27, %27* %39, i64 0, i32 9
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = getelementptr inbounds %27, %27* %39, i64 0, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @813, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 2763, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @814, i64 0, i64 0)) #19
  unreachable

56:                                               ; preds = %46, %51
  %57 = phi i8* [ %53, %51 ], [ %49, %46 ]
  %58 = call %6* @dictFind(%3* %27, i8* nonnull %57) #14
  %59 = icmp eq %6* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %6, %6* %58, i64 0, i32 1, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = call i8* @sdsdup(i8* %62) #14
  br label %66

64:                                               ; preds = %56
  %65 = call i8* @sdsempty() #14
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi i8* [ %63, %60 ], [ %65, %64 ]
  %68 = load i8*, i8** %48, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %67, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @815, i64 0, i64 0), i8* %67) #14
  br label %74

72:                                               ; preds = %66
  %73 = call i8* @sdscat(i8* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @816, i64 0, i64 0)) #14
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i8* [ %73, %72 ], [ %71, %70 ]
  %76 = call i32 @dictReplace(%3* %27, i8* nonnull %57, i8* %75) #14
  %77 = load i32, i32* %28, align 8
  br label %78

78:                                               ; preds = %33, %74
  %79 = phi i32 [ %77, %74 ], [ %34, %33 ]
  %80 = phi i8* [ %47, %74 ], [ %36, %33 ]
  %81 = add nuw nsw i64 %35, 1
  %82 = sext i32 %79 to i64
  %83 = icmp slt i64 %81, %82
  br i1 %83, label %33, label %84

84:                                               ; preds = %78, %23
  %85 = phi i8* [ null, %23 ], [ %80, %78 ]
  %86 = call %32* @dictGetIterator(%3* %27) #14
  %87 = call %6* @dictNext(%32* %86) #14
  %88 = icmp eq %6* %87, null
  br i1 %88, label %211, label %89

89:                                               ; preds = %84
  br i1 %6, label %90, label %134

90:                                               ; preds = %89, %130
  %91 = phi %6* [ %132, %130 ], [ %87, %89 ]
  %92 = phi i32 [ %131, %130 ], [ %25, %89 ]
  %93 = getelementptr inbounds %6, %6* %91, i64 0, i32 1, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 -1
  %96 = load i8, i8* %95, align 1
  %97 = trunc i8 %96 to i3
  switch i3 %97, label %130 [
    i3 0, label %116
    i3 1, label %112
    i3 2, label %107
    i3 3, label %102
    i3 -4, label %98
  ]

98:                                               ; preds = %90
  %99 = getelementptr inbounds i8, i8* %94, i64 -17
  %100 = bitcast i8* %99 to i64*
  %101 = load i64, i64* %100, align 1
  br label %119

102:                                              ; preds = %90
  %103 = getelementptr inbounds i8, i8* %94, i64 -9
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 1
  %106 = zext i32 %105 to i64
  br label %119

107:                                              ; preds = %90
  %108 = getelementptr inbounds i8, i8* %94, i64 -5
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 1
  %111 = zext i16 %110 to i64
  br label %119

112:                                              ; preds = %90
  %113 = getelementptr inbounds i8, i8* %94, i64 -3
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i64
  br label %119

116:                                              ; preds = %90
  %117 = lshr i8 %96, 3
  %118 = zext i8 %117 to i64
  br label %119

119:                                              ; preds = %116, %112, %107, %102, %98
  %120 = phi i64 [ %101, %98 ], [ %106, %102 ], [ %111, %107 ], [ %115, %112 ], [ %118, %116 ]
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 2
  br i1 %122, label %130, label %123

123:                                              ; preds = %119
  %124 = load i8, i8* %94, align 1
  %125 = icmp eq i8 %124, 109
  %126 = mul i32 %121, 10000
  %127 = add i32 %126, -10000
  %128 = select i1 %125, i32 %127, i32 %121
  %129 = add nsw i32 %128, %92
  br label %130

130:                                              ; preds = %123, %119, %90
  %131 = phi i32 [ %92, %119 ], [ %129, %123 ], [ %92, %90 ]
  %132 = call %6* @dictNext(%32* %86) #14
  %133 = icmp eq %6* %132, null
  br i1 %133, label %211, label %90

134:                                              ; preds = %89, %206
  %135 = phi %6* [ %209, %206 ], [ %87, %89 ]
  %136 = phi i32 [ %208, %206 ], [ %25, %89 ]
  %137 = phi %27** [ %207, %206 ], [ %26, %89 ]
  %138 = getelementptr inbounds %6, %6* %135, i64 0, i32 1, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %6, %6* %135, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds i8, i8* %139, i64 -1
  %143 = load i8, i8* %142, align 1
  %144 = trunc i8 %143 to i3
  switch i3 %144, label %206 [
    i3 0, label %145
    i3 1, label %148
    i3 2, label %152
    i3 3, label %157
    i3 -4, label %162
  ]

145:                                              ; preds = %134
  %146 = lshr i8 %143, 3
  %147 = zext i8 %146 to i64
  br label %166

148:                                              ; preds = %134
  %149 = getelementptr inbounds i8, i8* %139, i64 -3
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i64
  br label %166

152:                                              ; preds = %134
  %153 = getelementptr inbounds i8, i8* %139, i64 -5
  %154 = bitcast i8* %153 to i16*
  %155 = load i16, i16* %154, align 1
  %156 = zext i16 %155 to i64
  br label %166

157:                                              ; preds = %134
  %158 = getelementptr inbounds i8, i8* %139, i64 -9
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 1
  %161 = zext i32 %160 to i64
  br label %166

162:                                              ; preds = %134
  %163 = getelementptr inbounds i8, i8* %139, i64 -17
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 1
  br label %166

166:                                              ; preds = %145, %148, %152, %157, %162
  %167 = phi i64 [ %165, %162 ], [ %161, %157 ], [ %156, %152 ], [ %151, %148 ], [ %147, %145 ]
  %168 = trunc i64 %167 to i32
  %169 = icmp slt i32 %168, 2
  br i1 %169, label %206, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %139, align 1
  %172 = icmp eq i8 %171, 109
  %173 = mul i32 %168, 10000
  %174 = add i32 %173, -10000
  %175 = select i1 %172, i32 %174, i32 %168
  %176 = add nsw i32 %175, %136
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  %177 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %177, %26* nonnull %5) #14
  %178 = call %25* @listNext(%26* nonnull %5) #14
  %179 = icmp eq %25* %178, null
  br i1 %179, label %204, label %180

180:                                              ; preds = %170, %201
  %181 = phi %25* [ %202, %201 ], [ %178, %170 ]
  %182 = getelementptr inbounds %25, %25* %181, i64 0, i32 2
  %183 = bitcast i8** %182 to %27**
  %184 = load %27*, %27** %183, align 8
  %185 = getelementptr inbounds %27, %27* %184, i64 0, i32 9
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %180
  %189 = call i32 @strcmp(i8* nonnull %186, i8* %141) #17
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %201

191:                                              ; preds = %188
  %192 = getelementptr inbounds %27, %27* %184, i64 0, i32 2
  %193 = load i8*, i8** %192, align 8
  %194 = call i32 @strcmp(i8* %193, i8* %85) #17
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %201

196:                                              ; preds = %191
  %197 = getelementptr inbounds %27*, %27** %137, i64 1
  store %27* %184, %27** %137, align 8
  br i1 %21, label %204, label %198

198:                                              ; preds = %196
  %199 = load i32, i32* %3, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %3, align 4
  br label %204

201:                                              ; preds = %188, %191, %180
  %202 = call %25* @listNext(%26* nonnull %5) #14
  %203 = icmp eq %25* %202, null
  br i1 %203, label %204, label %180

204:                                              ; preds = %201, %170, %198, %196
  %205 = phi %27** [ %197, %196 ], [ %197, %198 ], [ %137, %170 ], [ %137, %201 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  br label %206

206:                                              ; preds = %134, %166, %204
  %207 = phi %27** [ %205, %204 ], [ %137, %166 ], [ %137, %134 ]
  %208 = phi i32 [ %176, %204 ], [ %136, %166 ], [ %136, %134 ]
  %209 = call %6* @dictNext(%32* %86) #14
  %210 = icmp eq %6* %209, null
  br i1 %210, label %211, label %134

211:                                              ; preds = %206, %130, %84
  %212 = phi %27** [ %26, %84 ], [ %26, %130 ], [ %207, %206 ]
  %213 = phi i32 [ %25, %84 ], [ %131, %130 ], [ %208, %206 ]
  call void @dictReleaseIterator(%32* %86) #14
  call void @dictRelease(%3* %27) #14
  %214 = add nuw nsw i64 %24, 1
  %215 = icmp slt i64 %214, %22
  br i1 %215, label %23, label %216

216:                                              ; preds = %211, %16
  %217 = phi i32 [ 0, %16 ], [ %213, %211 ]
  ret i32 %217
}

; Function Attrs: nounwind
declare dso_local void @srand(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) local_unnamed_addr #1

declare dso_local %3* @dictCreate(%4*, i8*) local_unnamed_addr #5

declare dso_local %6* @dictFind(%3*, i8*) local_unnamed_addr #5

declare dso_local i8* @sdsdup(i8*) local_unnamed_addr #5

declare dso_local i32 @dictReplace(%3*, i8*, i8*) local_unnamed_addr #5

declare dso_local %32* @dictGetIterator(%3*) local_unnamed_addr #5

declare dso_local %6* @dictNext(%32*) local_unnamed_addr #5

declare dso_local void @dictReleaseIterator(%32*) local_unnamed_addr #5

declare dso_local void @dictRelease(%3*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal i64 @1369(i8* %0) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -1
  %3 = load i8, i8* %2, align 1
  %4 = trunc i8 %3 to i3
  switch i3 %4, label %26 [
    i3 0, label %5
    i3 1, label %8
    i3 2, label %12
    i3 3, label %17
    i3 -4, label %22
  ]

5:                                                ; preds = %1
  %6 = lshr i8 %3, 3
  %7 = zext i8 %6 to i64
  br label %26

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %0, i64 -3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  br label %26

12:                                               ; preds = %1
  %13 = getelementptr inbounds i8, i8* %0, i64 -5
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = zext i16 %15 to i64
  br label %26

17:                                               ; preds = %1
  %18 = getelementptr inbounds i8, i8* %0, i64 -9
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 1
  %21 = zext i32 %20 to i64
  br label %26

22:                                               ; preds = %1
  %23 = getelementptr inbounds i8, i8* %0, i64 -17
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  br label %26

26:                                               ; preds = %1, %5, %8, %12, %17, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %17 ], [ %16, %12 ], [ %11, %8 ], [ %7, %5 ], [ 0, %1 ]
  %28 = trunc i64 %27 to i32
  %29 = tail call i64 @dictGenHashFunction(i8* nonnull %0, i32 %28) #14
  ret i64 %29
}

; Function Attrs: nounwind readonly uwtable
define internal i32 @1370(i8* nocapture readnone %0, i8* nocapture readonly %1, i8* nocapture readonly %2) #2 {
  %4 = getelementptr inbounds i8, i8* %1, i64 -1
  %5 = load i8, i8* %4, align 1
  %6 = trunc i8 %5 to i3
  switch i3 %6, label %28 [
    i3 0, label %7
    i3 1, label %10
    i3 2, label %14
    i3 3, label %19
    i3 -4, label %24
  ]

7:                                                ; preds = %3
  %8 = lshr i8 %5, 3
  %9 = zext i8 %8 to i64
  br label %28

10:                                               ; preds = %3
  %11 = getelementptr inbounds i8, i8* %1, i64 -3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i64
  br label %28

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %1, i64 -5
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = zext i16 %17 to i64
  br label %28

19:                                               ; preds = %3
  %20 = getelementptr inbounds i8, i8* %1, i64 -9
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = zext i32 %22 to i64
  br label %28

24:                                               ; preds = %3
  %25 = getelementptr inbounds i8, i8* %1, i64 -17
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 1
  br label %28

28:                                               ; preds = %3, %7, %10, %14, %19, %24
  %29 = phi i64 [ %27, %24 ], [ %23, %19 ], [ %18, %14 ], [ %13, %10 ], [ %9, %7 ], [ 0, %3 ]
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds i8, i8* %2, i64 -1
  %32 = load i8, i8* %31, align 1
  %33 = trunc i8 %32 to i3
  switch i3 %33, label %55 [
    i3 0, label %34
    i3 1, label %37
    i3 2, label %41
    i3 3, label %46
    i3 -4, label %51
  ]

34:                                               ; preds = %28
  %35 = lshr i8 %32, 3
  %36 = zext i8 %35 to i64
  br label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %2, i64 -3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  br label %55

41:                                               ; preds = %28
  %42 = getelementptr inbounds i8, i8* %2, i64 -5
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = zext i16 %44 to i64
  br label %55

46:                                               ; preds = %28
  %47 = getelementptr inbounds i8, i8* %2, i64 -9
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = zext i32 %49 to i64
  br label %55

51:                                               ; preds = %28
  %52 = getelementptr inbounds i8, i8* %2, i64 -17
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 1
  br label %55

55:                                               ; preds = %28, %34, %37, %41, %46, %51
  %56 = phi i64 [ %54, %51 ], [ %50, %46 ], [ %45, %41 ], [ %40, %37 ], [ %36, %34 ], [ 0, %28 ]
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %30, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = shl i64 %29, 32
  %61 = ashr exact i64 %60, 32
  %62 = tail call i32 @memcmp(i8* nonnull %1, i8* nonnull %2, i64 %61) #17
  %63 = icmp eq i32 %62, 0
  %64 = zext i1 %63 to i32
  br label %65

65:                                               ; preds = %55, %59
  %66 = phi i32 [ %64, %59 ], [ 0, %55 ]
  ret i32 %66
}

; Function Attrs: nounwind uwtable
define internal void @1371(i8* nocapture readnone %0, i8* %1) #0 {
  tail call void @sdsfree(i8* %1) #14
  ret void
}

declare dso_local i64 @dictGenHashFunction(i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1372(%27* nocapture readonly %0, i32 %1) unnamed_addr #0 {
  %3 = tail call i8* @sdsempty() #14
  %4 = tail call i8* @sdsempty() #14
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2, %6
  %7 = phi i8* [ %9, %6 ], [ %4, %2 ]
  %8 = phi i32 [ %10, %6 ], [ 0, %2 ]
  %9 = tail call i8* @sdscat(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @817, i64 0, i64 0)) #14
  %10 = add nuw nsw i32 %8, 1
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = phi i8* [ %4, %2 ], [ %9, %6 ]
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call i8* @sdscat(i8* %3, i8* %13) #14
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i8* [ %16, %15 ], [ %3, %12 ]
  %19 = getelementptr inbounds %27, %27* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @818, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @819, i64 0, i64 0)
  %24 = getelementptr inbounds %27, %27* %0, i64 0, i32 10
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %27, %27* %0, i64 0, i32 9
  br i1 %26, label %39, label %28

28:                                               ; preds = %17
  %29 = load i8*, i8** %27, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %27, %27* %0, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @820, i64 0, i64 0), i8* %33, i8* %35, i32 %37) #14
  br label %51

39:                                               ; preds = %17, %28
  %40 = tail call fastcc i8* @1373(%27* nonnull %0)
  %41 = tail call fastcc i8* @1374(%27* nonnull %0)
  %42 = getelementptr inbounds %27, %27* %0, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %27, %27* %0, i64 0, i32 12
  %49 = load i32, i32* %48, align 4
  %50 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @821, i64 0, i64 0), i8* %23, i8* %43, i8* %45, i32 %47, i8* %13, i8* %40, i32 %49, i8* %41) #14
  tail call void @sdsfree(i8* %40) #14
  tail call void @sdsfree(i8* %41) #14
  br label %51

51:                                               ; preds = %39, %31
  %52 = phi i8* [ %50, %39 ], [ %38, %31 ]
  %53 = load i8*, i8** %27, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @822, i64 0, i64 0), i8* %13, i8* nonnull %53) #14
  br label %63

57:                                               ; preds = %51
  %58 = getelementptr inbounds %27, %27* %0, i64 0, i32 13
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %52, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @823, i64 0, i64 0), i8* %13, i32 %59) #14
  br label %63

63:                                               ; preds = %57, %61, %55
  %64 = phi i8* [ %56, %55 ], [ %62, %61 ], [ %52, %57 ]
  tail call void @sdsfree(i8* %13) #14
  ret i8* %64
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1373(%27* nocapture readonly %0) unnamed_addr #0 {
  %2 = tail call i8* @sdsempty() #14
  br label %3

3:                                                ; preds = %55, %1
  %4 = phi i64 [ 0, %1 ], [ %59, %55 ]
  %5 = phi i8* [ %2, %1 ], [ %58, %55 ]
  %6 = phi i32 [ -1, %1 ], [ %57, %55 ]
  %7 = phi i32 [ -1, %1 ], [ %56, %55 ]
  %8 = getelementptr inbounds %27, %27* %0, i64 0, i32 11, i64 %4
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %7, -1
  %13 = trunc i64 %4 to i32
  br i1 %12, label %14, label %55

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %5, i64 -1
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i3
  switch i3 %17, label %44 [
    i3 0, label %18
    i3 1, label %21
    i3 2, label %25
    i3 3, label %30
    i3 -4, label %35
  ]

18:                                               ; preds = %14
  %19 = lshr i8 %16, 3
  %20 = zext i8 %19 to i64
  br label %39

21:                                               ; preds = %14
  %22 = getelementptr inbounds i8, i8* %5, i64 -3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  br label %39

25:                                               ; preds = %14
  %26 = getelementptr inbounds i8, i8* %5, i64 -5
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 1
  %29 = zext i16 %28 to i64
  br label %39

30:                                               ; preds = %14
  %31 = getelementptr inbounds i8, i8* %5, i64 -9
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = zext i32 %33 to i64
  br label %39

35:                                               ; preds = %14
  %36 = getelementptr inbounds i8, i8* %5, i64 -17
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 1
  br label %39

39:                                               ; preds = %18, %21, %25, %30, %35
  %40 = phi i64 [ %38, %35 ], [ %34, %30 ], [ %29, %25 ], [ %24, %21 ], [ %20, %18 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = tail call i8* @sdscat(i8* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)) #14
  br label %44

44:                                               ; preds = %14, %39, %42
  %45 = phi i8* [ %43, %42 ], [ %5, %39 ], [ %5, %14 ]
  %46 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @825, i64 0, i64 0), i32 %13) #14
  br label %55

47:                                               ; preds = %3
  %48 = icmp sgt i32 %6, -1
  br i1 %48, label %49, label %55

49:                                               ; preds = %47
  %50 = icmp eq i32 %7, %6
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = tail call i8* @sdscat(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @826, i64 0, i64 0)) #14
  br label %55

53:                                               ; preds = %49
  %54 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @827, i64 0, i64 0), i32 %6) #14
  br label %55

55:                                               ; preds = %47, %53, %51, %11, %44
  %56 = phi i32 [ %13, %44 ], [ %7, %11 ], [ -1, %51 ], [ -1, %53 ], [ -1, %47 ]
  %57 = phi i32 [ %13, %44 ], [ %13, %11 ], [ -1, %51 ], [ -1, %53 ], [ -1, %47 ]
  %58 = phi i8* [ %46, %44 ], [ %5, %11 ], [ %52, %51 ], [ %54, %53 ], [ %5, %47 ]
  %59 = add nuw nsw i64 %4, 1
  %60 = icmp eq i64 %59, 16384
  br i1 %60, label %61, label %3

61:                                               ; preds = %55
  %62 = icmp sgt i32 %57, -1
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = icmp eq i32 %56, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = tail call i8* @sdscat(i8* %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @826, i64 0, i64 0)) #14
  br label %69

67:                                               ; preds = %63
  %68 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @827, i64 0, i64 0), i32 %57) #14
  br label %69

69:                                               ; preds = %65, %67, %61
  %70 = phi i8* [ %66, %65 ], [ %68, %67 ], [ %58, %61 ]
  ret i8* %70
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1374(%27* nocapture readonly %0) unnamed_addr #0 {
  %2 = alloca %26, align 8
  %3 = tail call i8* @sdsempty() #14
  %4 = getelementptr inbounds %27, %27* %0, i64 0, i32 8
  %5 = load %24*, %24** %4, align 8
  %6 = icmp eq %24* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  %8 = bitcast %26* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  call void @listRewind(%24* nonnull %5, %26* nonnull %2) #14
  %9 = call %25* @listNext(%26* nonnull %2) #14
  %10 = icmp eq %25* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %7, %26
  %12 = phi %25* [ %29, %26 ], [ %9, %7 ]
  %13 = phi i8* [ %28, %26 ], [ %3, %7 ]
  %14 = phi i32 [ %27, %26 ], [ 1, %7 ]
  %15 = getelementptr inbounds %25, %25* %12, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @784, i64 0, i64 0)) #17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %11
  %20 = icmp eq i32 %14, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = call i8* @sdscat(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)) #14
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi i8* [ %13, %19 ], [ %22, %21 ]
  %25 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @828, i64 0, i64 0), i8* %16) #14
  br label %26

26:                                               ; preds = %11, %23
  %27 = phi i32 [ 0, %23 ], [ %14, %11 ]
  %28 = phi i8* [ %25, %23 ], [ %13, %11 ]
  %29 = call %25* @listNext(%26* nonnull %2) #14
  %30 = icmp eq %25* %29, null
  br i1 %30, label %31, label %11

31:                                               ; preds = %26, %7
  %32 = phi i8* [ %3, %7 ], [ %28, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  br label %33

33:                                               ; preds = %1, %31
  %34 = phi i8* [ %32, %31 ], [ %3, %1 ]
  ret i8* %34
}

declare dso_local i8* @sdsfromlonglong(i64) local_unnamed_addr #5

declare dso_local i32 @redisAppendCommandArgv(%9*, i32, i8**, i64*) local_unnamed_addr #5

declare dso_local i32 @redisGetReply(%9*, i8**) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1375() unnamed_addr #0 {
  %1 = alloca %26, align 8
  %2 = load %24*, %24** @.0.1, align 8
  %3 = icmp eq %24* %2, null
  br i1 %3, label %236, label %4

4:                                                ; preds = %0
  %5 = getelementptr inbounds %24, %24* %2, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %236, label %8

8:                                                ; preds = %4
  %9 = bitcast %26* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  call void @listRewind(%24* nonnull %2, %26* nonnull %1) #14
  %10 = call %25* @listNext(%26* nonnull %1) #14
  %11 = icmp eq %25* %10, null
  br i1 %11, label %234, label %12

12:                                               ; preds = %8, %224
  %13 = phi %25* [ %227, %224 ], [ %10, %8 ]
  %14 = phi i32 [ %226, %224 ], [ 0, %8 ]
  %15 = phi i8* [ %225, %224 ], [ null, %8 ]
  %16 = getelementptr inbounds %25, %25* %13, i64 0, i32 2
  %17 = bitcast i8** %16 to %27**
  %18 = load %27*, %27** %17, align 8
  %19 = getelementptr %27, %27* %18, i64 0, i32 0
  %20 = load %9*, %9** %19, align 8
  %21 = call i8* (%9*, i8*, ...) @redisCommand(%9* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i64 0, i64 0)) #14
  %22 = icmp eq i8* %21, null
  br i1 %22, label %229, label %23

23:                                               ; preds = %12
  %24 = bitcast i8* %21 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 6
  br i1 %26, label %182, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8, i8* %21, i64 32
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = call i8* @strchr(i8* %30, i32 10) #14
  %32 = icmp eq i8* %31, null
  br i1 %32, label %182, label %33

33:                                               ; preds = %27, %152
  %34 = phi i8* [ %158, %152 ], [ %31, %27 ]
  %35 = phi i32 [ %157, %152 ], [ 0, %27 ]
  %36 = phi i8** [ %156, %152 ], [ null, %27 ]
  %37 = phi i8* [ %155, %152 ], [ null, %27 ]
  %38 = phi i8* [ %154, %152 ], [ null, %27 ]
  %39 = phi i8* [ %153, %152 ], [ null, %27 ]
  %40 = phi i8* [ %41, %152 ], [ %30, %27 ]
  store i8 0, i8* %34, align 1
  %41 = getelementptr inbounds i8, i8* %34, i64 1
  %42 = call i8* @strchr(i8* %40, i32 32) #17
  %43 = icmp eq i8* %42, null
  br i1 %43, label %152, label %44

44:                                               ; preds = %33
  store i8 0, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = ptrtoint i8* %42 to i64
  %47 = ptrtoint i8* %40 to i64
  %48 = sub i64 %46, %47
  %49 = trunc i64 %48 to i32
  %50 = add nsw i32 %49, 1
  %51 = call i8* @strchr(i8* nonnull %45, i32 32) #17
  %52 = icmp eq i8* %51, null
  br i1 %52, label %152, label %193

53:                                               ; preds = %213
  store i8 0, i8* %215, align 1
  %54 = getelementptr inbounds i8, i8* %215, i64 1
  %55 = icmp eq i8* %40, null
  br i1 %55, label %152, label %56

56:                                               ; preds = %53
  %57 = call i64 @strlen(i8* nonnull %54) #17
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %152, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %58, 0
  br i1 %61, label %62, label %145

62:                                               ; preds = %60, %97
  %63 = phi i32 [ %102, %97 ], [ 0, %60 ]
  %64 = phi i8** [ %101, %97 ], [ null, %60 ]
  %65 = phi i8* [ %100, %97 ], [ null, %60 ]
  %66 = phi i8* [ %99, %97 ], [ null, %60 ]
  %67 = phi i8* [ %98, %97 ], [ null, %60 ]
  %68 = phi i32 [ %86, %97 ], [ %58, %60 ]
  %69 = phi i32 [ %81, %97 ], [ %50, %60 ]
  %70 = phi i8* [ %85, %97 ], [ %54, %60 ]
  %71 = call i8* @strchr(i8* %70, i32 32) #17
  %72 = icmp eq i8* %71, null
  %73 = sext i32 %68 to i64
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  %75 = select i1 %72, i8* %74, i8* %71
  %76 = ptrtoint i8* %75 to i64
  %77 = ptrtoint i8* %70 to i64
  %78 = sub i64 %76, %77
  %79 = trunc i64 %78 to i32
  %80 = sub nsw i32 %68, %79
  %81 = add nsw i32 %69, %79
  store i8 0, i8* %75, align 1
  %82 = icmp eq i32 %80, 0
  %83 = getelementptr inbounds i8, i8* %75, i64 1
  %84 = add nsw i32 %80, -1
  %85 = select i1 %82, i8* %75, i8* %83
  %86 = select i1 %82, i32 0, i32 %84
  %87 = load i8, i8* %70, align 1
  %88 = icmp eq i8 %87, 91
  br i1 %88, label %97, label %89

89:                                               ; preds = %62
  %90 = add nsw i32 %63, 1
  %91 = sext i32 %90 to i64
  %92 = shl nsw i64 %91, 3
  %93 = call i8* @zrealloc(i8* %65, i64 %92) #14
  %94 = bitcast i8* %93 to i8**
  %95 = sext i32 %63 to i64
  %96 = getelementptr inbounds i8*, i8** %94, i64 %95
  store i8* %70, i8** %96, align 8
  br label %97

97:                                               ; preds = %89, %62
  %98 = phi i8* [ %93, %89 ], [ %67, %62 ]
  %99 = phi i8* [ %93, %89 ], [ %66, %62 ]
  %100 = phi i8* [ %93, %89 ], [ %65, %62 ]
  %101 = phi i8** [ %94, %89 ], [ %64, %62 ]
  %102 = phi i32 [ %90, %89 ], [ %63, %62 ]
  %103 = icmp sgt i32 %86, 0
  br i1 %103, label %62, label %104

104:                                              ; preds = %97
  %105 = icmp sgt i32 %102, 0
  br i1 %105, label %106, label %145

106:                                              ; preds = %104
  %107 = icmp eq i32 %102, 1
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = sext i32 %102 to i64
  call void @qsort(i8* %99, i64 %109, i64 8, i32 (i8*, i8*)* nonnull @clusterManagerSlotCompare) #14
  br label %110

110:                                              ; preds = %108, %106
  %111 = add nsw i32 %35, 1
  %112 = sext i32 %111 to i64
  %113 = shl nsw i64 %112, 3
  %114 = call i8* @zrealloc(i8* %37, i64 %113) #14
  %115 = add i32 %81, -1
  %116 = add i32 %115, %102
  %117 = sext i32 %116 to i64
  %118 = add nsw i64 %117, 1
  %119 = call i8* @zmalloc(i64 %118) #14
  %120 = shl i64 %48, 32
  %121 = ashr exact i64 %120, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* nonnull align 1 %40, i64 %121, i1 false) #14
  %122 = getelementptr inbounds i8, i8* %119, i64 %121
  store i8 58, i8* %122, align 1
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  %124 = zext i32 %102 to i64
  br label %125

125:                                              ; preds = %131, %110
  %126 = phi i64 [ 0, %110 ], [ %139, %131 ]
  %127 = phi i8* [ %123, %110 ], [ %138, %131 ]
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds i8, i8* %127, i64 1
  store i8 44, i8* %127, align 1
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi i8* [ %130, %129 ], [ %127, %125 ]
  %133 = getelementptr inbounds i8*, i8** %101, i64 %126
  %134 = load i8*, i8** %133, align 8
  %135 = call i64 @strlen(i8* %134) #17
  %136 = shl i64 %135, 32
  %137 = ashr exact i64 %136, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 %134, i64 %137, i1 false) #14
  %138 = getelementptr inbounds i8, i8* %132, i64 %137
  %139 = add nuw nsw i64 %126, 1
  %140 = icmp eq i64 %139, %124
  br i1 %140, label %141, label %125

141:                                              ; preds = %131
  %142 = bitcast i8* %114 to i8**
  store i8 0, i8* %138, align 1
  %143 = sext i32 %35 to i64
  %144 = getelementptr inbounds i8*, i8** %142, i64 %143
  store i8* %119, i8** %144, align 8
  br label %145

145:                                              ; preds = %141, %104, %60
  %146 = phi i8* [ %98, %141 ], [ %98, %104 ], [ null, %60 ]
  %147 = phi i8* [ %114, %141 ], [ %39, %104 ], [ %39, %60 ]
  %148 = phi i8* [ %114, %141 ], [ %38, %104 ], [ %38, %60 ]
  %149 = phi i8* [ %114, %141 ], [ %37, %104 ], [ %37, %60 ]
  %150 = phi i8** [ %142, %141 ], [ %36, %104 ], [ %36, %60 ]
  %151 = phi i32 [ %111, %141 ], [ %35, %104 ], [ %35, %60 ]
  call void @zfree(i8* %146) #14
  br label %152

152:                                              ; preds = %213, %209, %205, %201, %197, %193, %145, %56, %53, %44, %33
  %153 = phi i8* [ %39, %53 ], [ %147, %145 ], [ %39, %56 ], [ %39, %33 ], [ %39, %44 ], [ %39, %193 ], [ %39, %197 ], [ %39, %201 ], [ %39, %205 ], [ %39, %209 ], [ %39, %213 ]
  %154 = phi i8* [ %38, %53 ], [ %148, %145 ], [ %38, %56 ], [ %38, %33 ], [ %38, %44 ], [ %38, %193 ], [ %38, %197 ], [ %38, %201 ], [ %38, %205 ], [ %38, %209 ], [ %38, %213 ]
  %155 = phi i8* [ %37, %53 ], [ %149, %145 ], [ %37, %56 ], [ %37, %33 ], [ %37, %44 ], [ %37, %193 ], [ %37, %197 ], [ %37, %201 ], [ %37, %205 ], [ %37, %209 ], [ %37, %213 ]
  %156 = phi i8** [ %36, %53 ], [ %150, %145 ], [ %36, %56 ], [ %36, %33 ], [ %36, %44 ], [ %36, %193 ], [ %36, %197 ], [ %36, %201 ], [ %36, %205 ], [ %36, %209 ], [ %36, %213 ]
  %157 = phi i32 [ %35, %53 ], [ %151, %145 ], [ %35, %56 ], [ %35, %33 ], [ %35, %44 ], [ %35, %193 ], [ %35, %197 ], [ %35, %201 ], [ %35, %205 ], [ %35, %209 ], [ %35, %213 ]
  %158 = call i8* @strchr(i8* nonnull %41, i32 10) #14
  %159 = icmp eq i8* %158, null
  br i1 %159, label %160, label %33

160:                                              ; preds = %152
  %161 = icmp sgt i32 %157, 0
  br i1 %161, label %162, label %183

162:                                              ; preds = %160
  %163 = icmp eq i32 %157, 1
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = sext i32 %157 to i64
  call void @qsort(i8* %154, i64 %165, i64 8, i32 (i8*, i8*)* nonnull @clusterManagerSlotCompare) #14
  br label %166

166:                                              ; preds = %164, %162
  %167 = call i8* @sdsempty() #14
  %168 = zext i32 %157 to i64
  br label %169

169:                                              ; preds = %175, %166
  %170 = phi i64 [ 0, %166 ], [ %180, %175 ]
  %171 = phi i8* [ %167, %166 ], [ %179, %175 ]
  %172 = icmp eq i64 %170, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %171, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @840, i64 0, i64 0), i32 124) #14
  br label %175

175:                                              ; preds = %173, %169
  %176 = phi i8* [ %174, %173 ], [ %171, %169 ]
  %177 = getelementptr inbounds i8*, i8** %156, i64 %170
  %178 = load i8*, i8** %177, align 8
  %179 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %176, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @841, i64 0, i64 0), i8* %178) #14
  %180 = add nuw nsw i64 %170, 1
  %181 = icmp eq i64 %180, %168
  br i1 %181, label %186, label %169

182:                                              ; preds = %27, %23
  call void @freeReplyObject(i8* nonnull %21) #14
  br label %229

183:                                              ; preds = %160
  call void @freeReplyObject(i8* nonnull %21) #14
  %184 = icmp eq i8** %156, null
  br i1 %184, label %229, label %185

185:                                              ; preds = %183
  call void @zfree(i8* %153) #14
  br label %229

186:                                              ; preds = %175
  call void @freeReplyObject(i8* nonnull %21) #14
  br label %187

187:                                              ; preds = %187, %186
  %188 = phi i64 [ 0, %186 ], [ %191, %187 ]
  %189 = getelementptr inbounds i8*, i8** %156, i64 %188
  %190 = load i8*, i8** %189, align 8
  call void @zfree(i8* %190) #14
  %191 = add nuw nsw i64 %188, 1
  %192 = icmp eq i64 %191, %168
  br i1 %192, label %217, label %187

193:                                              ; preds = %44
  store i8 0, i8* %51, align 1
  %194 = getelementptr inbounds i8, i8* %51, i64 1
  %195 = call i8* @strchr(i8* nonnull %194, i32 32) #17
  %196 = icmp eq i8* %195, null
  br i1 %196, label %152, label %197

197:                                              ; preds = %193
  store i8 0, i8* %195, align 1
  %198 = getelementptr inbounds i8, i8* %195, i64 1
  %199 = call i8* @strchr(i8* nonnull %198, i32 32) #17
  %200 = icmp eq i8* %199, null
  br i1 %200, label %152, label %201

201:                                              ; preds = %197
  store i8 0, i8* %199, align 1
  %202 = getelementptr inbounds i8, i8* %199, i64 1
  %203 = call i8* @strchr(i8* nonnull %202, i32 32) #17
  %204 = icmp eq i8* %203, null
  br i1 %204, label %152, label %205

205:                                              ; preds = %201
  store i8 0, i8* %203, align 1
  %206 = getelementptr inbounds i8, i8* %203, i64 1
  %207 = call i8* @strchr(i8* nonnull %206, i32 32) #17
  %208 = icmp eq i8* %207, null
  br i1 %208, label %152, label %209

209:                                              ; preds = %205
  store i8 0, i8* %207, align 1
  %210 = getelementptr inbounds i8, i8* %207, i64 1
  %211 = call i8* @strchr(i8* nonnull %210, i32 32) #17
  %212 = icmp eq i8* %211, null
  br i1 %212, label %152, label %213

213:                                              ; preds = %209
  store i8 0, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 1
  %215 = call i8* @strchr(i8* nonnull %214, i32 32) #17
  %216 = icmp eq i8* %215, null
  br i1 %216, label %152, label %53

217:                                              ; preds = %187
  call void @zfree(i8* %153) #14
  %218 = icmp eq i8* %179, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %217
  %220 = icmp eq i8* %15, null
  br i1 %220, label %224, label %221

221:                                              ; preds = %219
  %222 = call i32 @sdscmp(i8* nonnull %15, i8* nonnull %179) #14
  %223 = icmp eq i32 %222, 0
  call void @sdsfree(i8* nonnull %179) #14
  br i1 %223, label %224, label %231

224:                                              ; preds = %221, %219
  %225 = phi i8* [ %15, %221 ], [ %179, %219 ]
  %226 = phi i32 [ 1, %221 ], [ %14, %219 ]
  %227 = call %25* @listNext(%26* nonnull %1) #14
  %228 = icmp eq %25* %227, null
  br i1 %228, label %231, label %12

229:                                              ; preds = %217, %12, %182, %183, %185
  %230 = icmp eq i8* %15, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %224, %221, %229
  %232 = phi i8* [ %15, %229 ], [ %225, %224 ], [ %15, %221 ]
  %233 = phi i32 [ 0, %229 ], [ %226, %224 ], [ 0, %221 ]
  call void @sdsfree(i8* nonnull %232) #14
  br label %234

234:                                              ; preds = %8, %229, %231
  %235 = phi i32 [ 0, %229 ], [ %233, %231 ], [ 0, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  br label %236

236:                                              ; preds = %234, %4, %0
  %237 = phi i32 [ 0, %0 ], [ %235, %234 ], [ 1, %4 ]
  ret i32 %237
}

declare dso_local i32 @sdscmp(i8*, i8*) local_unnamed_addr #5

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #5

declare dso_local i32 @dictAdd(%3*, i8*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal void @1376(i8* nocapture readnone %0, i8* %1) #0 {
  %3 = bitcast i8* %1 to %24*
  tail call void @listRelease(%24* %3) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %27* @1377(i8* %0) unnamed_addr #0 {
  %2 = alloca %26, align 8
  %3 = load %24*, %24** @.0.1, align 8
  %4 = icmp eq %24* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call i8* @sdsempty() #14
  %7 = tail call i8* @sdscpy(i8* %6, i8* %0) #14
  tail call void @sdstolower(i8* %7) #14
  %8 = bitcast %26* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %9, %26* nonnull %2) #14
  %10 = call %25* @listNext(%26* nonnull %2) #14
  %11 = icmp eq %25* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %5, %23
  %13 = phi %25* [ %24, %23 ], [ %10, %5 ]
  %14 = getelementptr inbounds %25, %25* %13, i64 0, i32 2
  %15 = bitcast i8** %14 to %27**
  %16 = load %27*, %27** %15, align 8
  %17 = getelementptr inbounds %27, %27* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = call i32 @sdscmp(i8* nonnull %18, i8* %7) #14
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %12, %20
  %24 = call %25* @listNext(%26* nonnull %2) #14
  %25 = icmp eq %25* %24, null
  br i1 %25, label %26, label %12

26:                                               ; preds = %23, %20, %5
  %27 = phi %27* [ null, %5 ], [ %16, %20 ], [ null, %23 ]
  call void @sdsfree(i8* %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  br label %28

28:                                               ; preds = %1, %26
  %29 = phi %27* [ %27, %26 ], [ null, %1 ]
  ret %27* %29
}

declare dso_local i8* @sdscpy(i8*, i8*) local_unnamed_addr #5

declare dso_local void @sdstolower(i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc %27* @1378(%24* %0, i32 %1) unnamed_addr #0 {
  %3 = alloca %26, align 8
  %4 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  call void @listRewind(%24* %0, %26* nonnull %3) #14
  %5 = call %25* @listNext(%26* nonnull %3) #14
  %6 = icmp eq %25* %5, null
  br i1 %6, label %55, label %7

7:                                                ; preds = %2, %50
  %8 = phi %25* [ %53, %50 ], [ %5, %2 ]
  %9 = phi %27* [ %52, %50 ], [ null, %2 ]
  %10 = phi i32 [ %51, %50 ], [ 0, %2 ]
  %11 = getelementptr inbounds %25, %25* %8, i64 0, i32 2
  %12 = bitcast i8** %11 to %27**
  %13 = load %27*, %27** %12, align 8
  %14 = getelementptr inbounds %27, %27* %13, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %50

18:                                               ; preds = %7
  %19 = getelementptr inbounds %27, %27* %13, i64 0, i32 9
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %50

22:                                               ; preds = %18
  %23 = getelementptr inbounds %27, %27* %13, i64 0, i32 0
  %24 = load %9*, %9** %23, align 8
  %25 = call i8* (%9*, i8*, ...) @redisCommand(%9* %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @866, i64 0, i64 0), i32 %1) #14
  %26 = icmp eq i8* %25, null
  br i1 %26, label %55, label %27

27:                                               ; preds = %22
  %28 = bitcast i8* %25 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = getelementptr inbounds %27, %27* %13, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %27, %27* %13, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 32
  %37 = bitcast i8* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %33, i32 %35, i8* %38) #14
  call void @freeReplyObject(i8* nonnull %25) #14
  br label %55

39:                                               ; preds = %27
  %40 = getelementptr inbounds i8, i8* %25, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sext i32 %10 to i64
  %44 = icmp sgt i64 %42, %43
  %45 = icmp eq %27* %9, null
  %46 = or i1 %45, %44
  %47 = trunc i64 %42 to i32
  %48 = select i1 %46, i32 %47, i32 %10
  %49 = select i1 %46, %27* %13, %27* %9
  call void @freeReplyObject(i8* nonnull %25) #14
  br label %50

50:                                               ; preds = %39, %7, %18
  %51 = phi i32 [ %10, %18 ], [ %10, %7 ], [ %48, %39 ]
  %52 = phi %27* [ %9, %18 ], [ %9, %7 ], [ %49, %39 ]
  %53 = call %25* @listNext(%26* nonnull %3) #14
  %54 = icmp eq %25* %53, null
  br i1 %54, label %55, label %7

55:                                               ; preds = %50, %22, %2, %31
  %56 = phi %27* [ null, %31 ], [ null, %2 ], [ %52, %50 ], [ null, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  ret %27* %56
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1379(%27* nocapture readonly %0, i32 %1, i32 %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %5 = load %9*, %9** %4, align 8
  %6 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @382, i64 0, i64 0)) #14
  %7 = icmp eq i8* %6, null
  br i1 %7, label %142, label %8

8:                                                ; preds = %3
  %9 = bitcast i8* %6 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 6
  br i1 %11, label %12, label %20

12:                                               ; preds = %8
  %13 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 32
  %18 = bitcast i8* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %14, i32 %16, i8* %19) #14
  tail call void @freeReplyObject(i8* nonnull %6) #14
  br label %142

20:                                               ; preds = %8
  tail call void @freeReplyObject(i8* nonnull %6) #14
  %21 = tail call fastcc i32 @1380(%27* nonnull %0, i32 %1)
  %22 = load %9*, %9** %4, align 8
  %23 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @892, i64 0, i64 0), i32 %1) #14
  %24 = icmp eq i8* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = bitcast i8* %23 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 6
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds i8, i8* %23, i64 32
  %35 = bitcast i8* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %31, i32 %33, i8* %36) #14
  br label %37

37:                                               ; preds = %29, %25
  tail call void @freeReplyObject(i8* nonnull %23) #14
  br label %38

38:                                               ; preds = %20, %37
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %38
  %41 = load %9*, %9** %4, align 8
  %42 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %41, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @889, i64 0, i64 0), i32 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @890, i64 0, i64 0)) #14
  %43 = icmp eq i8* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = bitcast i8* %42 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 6
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds i8, i8* %42, i64 32
  %54 = bitcast i8* %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %50, i32 %52, i8* %55) #14
  br label %56

56:                                               ; preds = %48, %44
  tail call void @freeReplyObject(i8* nonnull %42) #14
  br label %57

57:                                               ; preds = %56, %40, %38
  %58 = load %9*, %9** %4, align 8
  %59 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %58, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @107, i64 0, i64 0)) #14
  %60 = icmp eq i8* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = bitcast i8* %59 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 6
  br i1 %64, label %65, label %73

65:                                               ; preds = %61
  %66 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds i8, i8* %59, i64 32
  %71 = bitcast i8* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %67, i32 %69, i8* %72) #14
  br label %73

73:                                               ; preds = %65, %61
  tail call void @freeReplyObject(i8* nonnull %59) #14
  br label %74

74:                                               ; preds = %57, %73
  %75 = load %9*, %9** %4, align 8
  %76 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i64 0, i64 0)) #14
  %77 = icmp eq i8* %76, null
  br i1 %77, label %142, label %78

78:                                               ; preds = %74
  %79 = bitcast i8* %76 to i32*
  %80 = load i32, i32* %79, align 8
  switch i32 %80, label %140 [
    i32 6, label %81
    i32 2, label %89
  ]

81:                                               ; preds = %78
  %82 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds i8, i8* %76, i64 32
  %87 = bitcast i8* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %83, i32 %85, i8* %88) #14
  br label %140

89:                                               ; preds = %78
  %90 = getelementptr inbounds i8, i8* %76, i64 48
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %140, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds i8, i8* %76, i64 56
  %96 = bitcast i8* %95 to %30***
  %97 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %98 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  br label %99

99:                                               ; preds = %136, %94
  %100 = phi i64 [ %92, %94 ], [ %137, %136 ]
  %101 = phi i64 [ 0, %94 ], [ %138, %136 ]
  %102 = load %30**, %30*** %96, align 8
  %103 = getelementptr inbounds %30*, %30** %102, i64 %101
  %104 = load %30*, %30** %103, align 8
  %105 = icmp eq %30* %104, null
  br i1 %105, label %106, label %110

106:                                              ; preds = %99
  %107 = trunc i64 %101 to i32
  %108 = icmp ne i32 %107, 1
  %109 = zext i1 %108 to i32
  br label %131

110:                                              ; preds = %99
  %111 = getelementptr inbounds %30, %30* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 6
  br i1 %113, label %114, label %136

114:                                              ; preds = %110
  %115 = getelementptr inbounds %30, %30* %104, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  %118 = tail call i8* @zmalloc(i64 %117) #14
  %119 = getelementptr inbounds %30, %30* %104, i64 0, i32 4
  %120 = load i8*, i8** %119, align 8
  %121 = tail call i8* @strcpy(i8* %118, i8* %120) #14
  %122 = trunc i64 %101 to i32
  %123 = icmp ne i32 %122, 1
  %124 = zext i1 %123 to i32
  %125 = icmp eq i8* %118, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %114
  br i1 %123, label %130, label %127

127:                                              ; preds = %126
  %128 = load i8*, i8** %97, align 8
  %129 = load i32, i32* %98, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %128, i32 %129, i8* nonnull %118) #14
  br label %130

130:                                              ; preds = %127, %126
  tail call void @zfree(i8* nonnull %118) #14
  br label %131

131:                                              ; preds = %130, %114, %106
  %132 = phi i32 [ %124, %114 ], [ %124, %130 ], [ %109, %106 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %131
  %135 = load i64, i64* %91, align 8
  br label %136

136:                                              ; preds = %134, %110
  %137 = phi i64 [ %135, %134 ], [ %100, %110 ]
  %138 = add nuw i64 %101, 1
  %139 = icmp ult i64 %138, %137
  br i1 %139, label %99, label %140

140:                                              ; preds = %136, %131, %89, %81, %78
  %141 = phi i32 [ 0, %81 ], [ 1, %89 ], [ 0, %78 ], [ 1, %136 ], [ 0, %131 ]
  tail call void @freeReplyObject(i8* nonnull %76) #14
  br label %142

142:                                              ; preds = %3, %140, %74, %12
  %143 = phi i32 [ 0, %12 ], [ %141, %140 ], [ 0, %74 ], [ 0, %3 ]
  ret i32 %143
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1380(%27* nocapture readonly %0, i32 %1) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %5 = load %9*, %9** %4, align 8
  %6 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @893, i64 0, i64 0), i32 %1) #14
  %7 = icmp eq i8* %6, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %6 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 6
  br i1 %11, label %12, label %50

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %6, i64 24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  %17 = tail call i8* @zmalloc(i64 %16) #14
  %18 = getelementptr inbounds i8, i8* %6, i64 32
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i8* @strcpy(i8* %17, i8* %20) #14
  %22 = bitcast i8* %6 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %25, label %40

25:                                               ; preds = %12
  %26 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  store i8* null, i8** %3, align 8
  %27 = call fastcc %27* @1383(%27* nonnull %0, i32 %1, i8** nonnull %3)
  %28 = icmp eq %27* %27, null
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  %30 = load i8*, i8** %3, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %34, i32 %36, i8* nonnull %30)
  %37 = load i8*, i8** %3, align 8
  call void @zfree(i8* %37) #14
  br label %38

38:                                               ; preds = %29, %25, %32
  %39 = phi i32 [ 0, %25 ], [ 0, %32 ], [ 1, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  br label %40

40:                                               ; preds = %38, %12
  %41 = phi i32 [ %39, %38 ], [ 0, %12 ]
  %42 = icmp eq i32 %41, 0
  %43 = icmp ne i8* %17, null
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %47, i32 %49, i8* nonnull %17)
  call void @zfree(i8* nonnull %17) #14
  br label %50

50:                                               ; preds = %40, %45, %8
  %51 = phi i32 [ 0, %45 ], [ 1, %8 ], [ %41, %40 ]
  call void @freeReplyObject(i8* nonnull %6) #14
  br label %52

52:                                               ; preds = %2, %50
  %53 = phi i32 [ %51, %50 ], [ 0, %2 ]
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1381(%27* nocapture readonly %0, i8* %1, i32 %2, i8* %3, i8** %4) unnamed_addr #0 {
  %6 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %7 = load %9*, %9** %6, align 8
  %8 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %2, i8* %3, i8* %1) #14
  %9 = icmp ne i8** %4, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  store i8* null, i8** %4, align 8
  br label %11

11:                                               ; preds = %10, %5
  %12 = icmp eq i8* %8, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %11
  %14 = bitcast i8* %8 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 6
  br i1 %16, label %17, label %36

17:                                               ; preds = %13
  br i1 %9, label %18, label %28

18:                                               ; preds = %17
  %19 = getelementptr inbounds i8, i8* %8, i64 24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  %23 = tail call i8* @zmalloc(i64 %22) #14
  store i8* %23, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 32
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i8* @strcpy(i8* %23, i8* %26) #14
  br label %36

28:                                               ; preds = %17
  %29 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds i8, i8* %8, i64 32
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %30, i32 %32, i8* %35)
  br label %36

36:                                               ; preds = %13, %18, %28
  %37 = phi i32 [ 0, %18 ], [ 0, %28 ], [ 1, %13 ]
  tail call void @freeReplyObject(i8* nonnull %8) #14
  br label %38

38:                                               ; preds = %11, %36
  %39 = phi i32 [ %37, %36 ], [ 0, %11 ]
  ret i32 %39
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1382(%27* nocapture %0, %27* nocapture %1, i32 %2, i32 %3, i8** %4) unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %26, align 8
  %10 = alloca %26, align 8
  %11 = and i32 %3, 64
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %27, %27* %1, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %27, %27* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @901, i64 0, i64 0), i32 %2, i8* %15, i32 %17, i8* %19, i32 %21)
  %23 = load %1*, %1** @stdout, align 8
  %24 = tail call i32 @fflush(%1* %23)
  br label %25

25:                                               ; preds = %13, %5
  %26 = icmp ne i8** %4, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  store i8* null, i8** %4, align 8
  br label %28

28:                                               ; preds = %27, %25
  %29 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 12), align 8
  %30 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 11), align 4
  %31 = and i32 %3, 2
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = getelementptr %27, %27* %1, i64 0, i32 1
  br label %45

35:                                               ; preds = %28
  %36 = getelementptr %27, %27* %0, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8
  %38 = tail call fastcc i32 @1381(%27* %1, i8* %37, i32 %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @879, i64 0, i64 0), i8** %4)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %436, label %40

40:                                               ; preds = %35
  %41 = getelementptr %27, %27* %1, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = tail call fastcc i32 @1381(%27* nonnull %0, i8* %42, i32 %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @902, i64 0, i64 0), i8** %4)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %436, label %45

45:                                               ; preds = %33, %40
  %46 = phi i8** [ %34, %33 ], [ %41, %40 ]
  %47 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 51, i32 3), align 8
  %48 = and i32 %47, 1
  %49 = and i32 %47, 64
  %50 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %51 = icmp eq i8** %4, null
  %52 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %53 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %54 = trunc i32 %3 to i8
  %55 = icmp slt i8 %54, 0
  %56 = icmp eq i32 %49, 0
  %57 = bitcast i8** %8 to i8*
  %58 = icmp eq i32 %48, 0
  %59 = bitcast i8** %6 to i8*
  %60 = bitcast i8** %7 to i8*
  %61 = getelementptr inbounds %27, %27* %1, i64 0, i32 2
  %62 = getelementptr inbounds %27, %27* %1, i64 0, i32 3
  %63 = getelementptr inbounds %27, %27* %1, i64 0, i32 0
  %64 = bitcast %26* %9 to i8*
  br label %65

65:                                               ; preds = %352, %45
  %66 = load %9*, %9** %50, align 8
  %67 = call i8* (%9*, i8*, ...) @redisCommand(%9* %66, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @887, i64 0, i64 0), i32 %2, i32 %29) #14
  %68 = bitcast i8* %67 to %30*
  %69 = icmp eq i8* %67, null
  br i1 %69, label %354, label %70

70:                                               ; preds = %65
  %71 = bitcast i8* %67 to i32*
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %87 [
    i32 6, label %73
    i32 2, label %88
  ]

73:                                               ; preds = %70
  br i1 %51, label %338, label %74

74:                                               ; preds = %73
  %75 = getelementptr inbounds i8, i8* %67, i64 24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = call i8* @zmalloc(i64 %78) #14
  store i8* %79, i8** %4, align 8
  %80 = getelementptr inbounds i8, i8* %67, i64 32
  %81 = bitcast i8* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = call i8* @strcpy(i8* %79, i8* %82) #14
  %84 = load i8*, i8** %52, align 8
  %85 = load i32, i32* %53, align 8
  %86 = load i8*, i8** %4, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %84, i32 %85, i8* %86) #14
  br label %338

87:                                               ; preds = %70
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @896, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3519, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @903, i64 0, i64 0)) #19
  unreachable

88:                                               ; preds = %70
  %89 = getelementptr inbounds i8, i8* %67, i64 48
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %88
  call void @freeReplyObject(i8* nonnull %67) #14
  br label %354

94:                                               ; preds = %88
  br i1 %55, label %95, label %98

95:                                               ; preds = %94
  %96 = add i64 %91, 1
  %97 = call i8* @zmalloc(i64 %96) #14
  br label %98

98:                                               ; preds = %94, %95
  %99 = phi i8* [ %97, %95 ], [ null, %94 ]
  %100 = call fastcc %30* @1384(%27* nonnull %0, %27* %1, %30* nonnull %68, i32 0, i32 %30, i8* %99) #14
  %101 = icmp eq %30* %100, null
  br i1 %101, label %338, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %30, %30* %100, i64 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 6
  br i1 %105, label %106, label %332

106:                                              ; preds = %102
  %107 = getelementptr inbounds %30, %30* %100, i64 0, i32 4
  %108 = load i8*, i8** %107, align 8
  %109 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @904, i64 0, i64 0)) #17
  %110 = icmp ne i8* %109, null
  %111 = zext i1 %110 to i32
  br i1 %110, label %142, label %112

112:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  store i8* null, i8** %8, align 8
  %113 = call fastcc %27* @1383(%27* nonnull %0, i32 %2, i8** nonnull %8) #14
  %114 = icmp eq %27* %113, null
  br i1 %114, label %115, label %122

115:                                              ; preds = %112
  %116 = load i8*, i8** %8, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %115
  %119 = load i8*, i8** %52, align 8
  %120 = load i32, i32* %53, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %119, i32 %120, i8* nonnull %116) #14
  %121 = load i8*, i8** %8, align 8
  call void @zfree(i8* %121) #14
  br label %122

122:                                              ; preds = %118, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  br label %314

123:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  br i1 %58, label %305, label %124

124:                                              ; preds = %123
  %125 = load i8*, i8** %61, align 8
  %126 = load i32, i32* %62, align 8
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @905, i64 0, i64 0), i8* %125, i32 %126) #14
  %127 = load i8*, i8** %46, align 8
  %128 = load %9*, %9** %50, align 8
  %129 = call i8* (%9*, i8*, ...) @redisCommand(%9* %128, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @878, i64 0, i64 0), i8* %127) #14
  %130 = icmp eq i8* %129, null
  br i1 %130, label %305, label %131

131:                                              ; preds = %124
  %132 = bitcast i8* %129 to i32*
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 6
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = load i8*, i8** %52, align 8
  %137 = load i32, i32* %53, align 8
  %138 = getelementptr inbounds i8, i8* %129, i64 32
  %139 = bitcast i8* %138 to i8**
  %140 = load i8*, i8** %139, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %136, i32 %137, i8* %140) #14
  br label %141

141:                                              ; preds = %135, %131
  call void @freeReplyObject(i8* nonnull %129) #14
  br label %305

142:                                              ; preds = %106
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @906, i64 0, i64 0)) #14
  br i1 %56, label %143, label %304

143:                                              ; preds = %142
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @907, i64 0, i64 0)) #14
  %144 = call %24* @listCreate() #14
  %145 = load i64, i64* %90, align 8
  %146 = add i64 %145, 2
  %147 = shl i64 %146, 3
  %148 = call i8* @zcalloc(i64 %147) #14
  %149 = bitcast i8* %148 to i8**
  %150 = call i8* @zcalloc(i64 %147) #14
  %151 = bitcast i8* %150 to i64*
  %152 = bitcast i8* %148 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([6 x i8], [6 x i8]* @920, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @921, i64 0, i64 0)>, <2 x i8*>* %152, align 8
  %153 = bitcast i8* %150 to <2 x i64>*
  store <2 x i64> <i64 5, i64 12>, <2 x i64>* %153, align 8
  %154 = load i64, i64* %90, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %178, label %156

156:                                              ; preds = %143
  %157 = getelementptr inbounds i8, i8* %67, i64 56
  %158 = bitcast i8* %157 to %30***
  br label %159

159:                                              ; preds = %159, %156
  %160 = phi i64 [ 0, %156 ], [ %175, %159 ]
  %161 = load %30**, %30*** %158, align 8
  %162 = getelementptr inbounds %30*, %30** %161, i64 %160
  %163 = load %30*, %30** %162, align 8
  %164 = getelementptr inbounds %30, %30* %163, i64 0, i32 4
  %165 = bitcast i8** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = shl i64 %160, 32
  %168 = add i64 %167, 8589934592
  %169 = ashr exact i64 %168, 32
  %170 = getelementptr inbounds i8*, i8** %149, i64 %169
  %171 = bitcast i8** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = getelementptr inbounds %30, %30* %163, i64 0, i32 3
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds i64, i64* %151, i64 %169
  store i64 %173, i64* %174, align 8
  %175 = add nuw i64 %160, 1
  %176 = load i64, i64* %90, align 8
  %177 = icmp ult i64 %175, %176
  br i1 %177, label %159, label %178

178:                                              ; preds = %159, %143
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #14
  store i8* null, i8** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #14
  store i8* null, i8** %7, align 8
  %179 = load %9*, %9** %50, align 8
  %180 = trunc i64 %146 to i32
  %181 = call i32 @redisAppendCommandArgv(%9* %179, i32 %180, i8** %149, i64* %151) #14
  %182 = load %9*, %9** %50, align 8
  %183 = call i32 @redisGetReply(%9* %182, i8** nonnull %6) #14
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %281

185:                                              ; preds = %178
  %186 = load i8*, i8** %6, align 8
  %187 = load %9*, %9** %63, align 8
  %188 = call i32 @redisAppendCommandArgv(%9* %187, i32 %180, i8** %149, i64* %151) #14
  %189 = load %9*, %9** %63, align 8
  %190 = call i32 @redisGetReply(%9* %189, i8** nonnull %7) #14
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %276

192:                                              ; preds = %185
  %193 = load i8*, i8** %7, align 8
  %194 = bitcast i8* %186 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 6
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = bitcast i8* %193 to i32*
  %199 = load i32, i32* %198, align 8
  %200 = icmp ne i32 %199, 6
  %201 = zext i1 %200 to i32
  br label %210

202:                                              ; preds = %192
  %203 = load i8*, i8** %52, align 8
  %204 = load i32, i32* %53, align 8
  %205 = getelementptr inbounds i8, i8* %186, i64 32
  %206 = bitcast i8* %205 to i8**
  %207 = load i8*, i8** %206, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %203, i32 %204, i8* %207) #14
  %208 = bitcast i8* %193 to i32*
  %209 = load i32, i32* %208, align 8
  br label %210

210:                                              ; preds = %202, %197
  %211 = phi i32 [ %209, %202 ], [ %199, %197 ]
  %212 = phi i32 [ 0, %202 ], [ %201, %197 ]
  %213 = icmp eq i32 %211, 6
  br i1 %213, label %214, label %220

214:                                              ; preds = %210
  %215 = load i8*, i8** %61, align 8
  %216 = load i32, i32* %62, align 8
  %217 = getelementptr inbounds i8, i8* %193, i64 32
  %218 = bitcast i8* %217 to i8**
  %219 = load i8*, i8** %218, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %215, i32 %216, i8* %219) #14
  br label %279

220:                                              ; preds = %210
  %221 = icmp eq i32 %212, 0
  br i1 %221, label %279, label %222

222:                                              ; preds = %220
  %223 = load i64, i64* %90, align 8
  %224 = getelementptr inbounds i8, i8* %186, i64 48
  %225 = bitcast i8* %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %223, %226
  br i1 %227, label %228, label %242

228:                                              ; preds = %222
  %229 = getelementptr inbounds i8, i8* %193, i64 48
  %230 = bitcast i8* %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = icmp eq i64 %223, %231
  br i1 %232, label %233, label %242

233:                                              ; preds = %228
  %234 = icmp eq i64 %223, 0
  br i1 %234, label %279, label %235

235:                                              ; preds = %233
  %236 = getelementptr inbounds i8, i8* %67, i64 56
  %237 = bitcast i8* %236 to %30***
  %238 = getelementptr inbounds i8, i8* %186, i64 56
  %239 = bitcast i8* %238 to %30***
  %240 = getelementptr inbounds i8, i8* %193, i64 56
  %241 = bitcast i8* %240 to %30***
  br label %243

242:                                              ; preds = %228, %222
  call void @__assert_fail(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @922, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3387, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @923, i64 0, i64 0)) #19
  unreachable

243:                                              ; preds = %272, %235
  %244 = phi i64 [ %223, %235 ], [ %273, %272 ]
  %245 = phi i64 [ 0, %235 ], [ %274, %272 ]
  %246 = load %30**, %30*** %237, align 8
  %247 = getelementptr inbounds %30*, %30** %246, i64 %245
  %248 = load %30*, %30** %247, align 8
  %249 = getelementptr inbounds %30, %30* %248, i64 0, i32 4
  %250 = load i8*, i8** %249, align 8
  %251 = load %30**, %30*** %239, align 8
  %252 = getelementptr inbounds %30*, %30** %251, i64 %245
  %253 = load %30*, %30** %252, align 8
  %254 = getelementptr inbounds %30, %30* %253, i64 0, i32 4
  %255 = load i8*, i8** %254, align 8
  %256 = load %30**, %30*** %241, align 8
  %257 = getelementptr inbounds %30*, %30** %256, i64 %245
  %258 = load %30*, %30** %257, align 8
  %259 = getelementptr inbounds %30, %30* %258, i64 0, i32 4
  %260 = load i8*, i8** %259, align 8
  %261 = call i32 @strcmp(i8* %255, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @919, i64 0, i64 0)) #17
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %272, label %263

263:                                              ; preds = %243
  %264 = call i32 @strcmp(i8* %260, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @919, i64 0, i64 0)) #17
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %272, label %266

266:                                              ; preds = %263
  %267 = call i32 @strcmp(i8* %255, i8* %260) #17
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %272, label %269

269:                                              ; preds = %266
  %270 = call %24* @listAddNodeTail(%24* %144, i8* %250) #14
  %271 = load i64, i64* %90, align 8
  br label %272

272:                                              ; preds = %269, %266, %263, %243
  %273 = phi i64 [ %271, %269 ], [ %244, %266 ], [ %244, %243 ], [ %244, %263 ]
  %274 = add nuw i64 %245, 1
  %275 = icmp ult i64 %274, %273
  br i1 %275, label %243, label %279

276:                                              ; preds = %185
  %277 = icmp eq i8* %186, null
  br i1 %277, label %281, label %278

278:                                              ; preds = %276
  call void @freeReplyObject(i8* nonnull %186) #14
  br label %281

279:                                              ; preds = %272, %233, %220, %214
  %280 = phi i32 [ 0, %214 ], [ 0, %220 ], [ 1, %233 ], [ %212, %272 ]
  call void @freeReplyObject(i8* nonnull %186) #14
  call void @freeReplyObject(i8* nonnull %193) #14
  br label %281

281:                                              ; preds = %279, %278, %276, %178
  %282 = phi i32 [ %280, %279 ], [ 0, %278 ], [ 0, %276 ], [ 0, %178 ]
  call void @zfree(i8* %148) #14
  call void @zfree(i8* %150) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @908, i64 0, i64 0)) #14
  call void @listRelease(%24* %144) #14
  br label %342

285:                                              ; preds = %281
  %286 = getelementptr inbounds %24, %24* %144, i64 0, i32 5
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %303, label %289

289:                                              ; preds = %285
  %290 = load i8*, i8** %52, align 8
  %291 = load i32, i32* %53, align 8
  %292 = load i8*, i8** %61, align 8
  %293 = load i32, i32* %62, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @909, i64 0, i64 0), i64 %287, i8* %290, i32 %291, i8* %292, i32 %293) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #14
  call void @listRewind(%24* nonnull %144, %26* nonnull %9) #14
  %294 = call %25* @listNext(%26* nonnull %9) #14
  %295 = icmp eq %25* %294, null
  br i1 %295, label %302, label %296

296:                                              ; preds = %289, %296
  %297 = phi %25* [ %300, %296 ], [ %294, %289 ]
  %298 = getelementptr inbounds %25, %25* %297, i64 0, i32 2
  %299 = load i8*, i8** %298, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @910, i64 0, i64 0), i8* %299) #14
  %300 = call %25* @listNext(%26* nonnull %9) #14
  %301 = icmp eq %25* %300, null
  br i1 %301, label %302, label %296

302:                                              ; preds = %296, %289
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @911, i64 0, i64 0)) #14
  call void @listRelease(%24* %144) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #14
  br label %342

303:                                              ; preds = %285
  call void @listRelease(%24* nonnull %144) #14
  br label %304

304:                                              ; preds = %303, %142
  call void (i32, i8*, ...) @1361(i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @912, i64 0, i64 0)) #14
  br label %305

305:                                              ; preds = %304, %141, %124, %123
  %306 = bitcast %30* %100 to i8*
  call void @freeReplyObject(i8* %306) #14
  %307 = call fastcc %30* @1384(%27* %0, %27* %1, %30* nonnull %68, i32 %111, i32 %30, i8* null) #14
  %308 = icmp eq %30* %307, null
  br i1 %308, label %309, label %310

309:                                              ; preds = %305
  call void @freeReplyObject(i8* nonnull %67) #14
  br label %347

310:                                              ; preds = %305
  %311 = getelementptr inbounds %30, %30* %307, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = icmp eq i32 %312, 6
  br i1 %313, label %314, label %332

314:                                              ; preds = %310, %122
  %315 = phi %30* [ %307, %310 ], [ %100, %122 ]
  br i1 %51, label %316, label %318

316:                                              ; preds = %314
  %317 = getelementptr inbounds %30, %30* %315, i64 0, i32 4
  br label %326

318:                                              ; preds = %314
  %319 = getelementptr inbounds %30, %30* %315, i64 0, i32 3
  %320 = load i64, i64* %319, align 8
  %321 = add i64 %320, 1
  %322 = call i8* @zmalloc(i64 %321) #14
  store i8* %322, i8** %4, align 8
  %323 = getelementptr inbounds %30, %30* %315, i64 0, i32 4
  %324 = load i8*, i8** %323, align 8
  %325 = call i8* @strcpy(i8* %322, i8* %324) #14
  br label %326

326:                                              ; preds = %318, %316
  %327 = phi i8** [ %317, %316 ], [ %323, %318 ]
  %328 = call i32 @putchar(i32 10) #14
  %329 = load i8*, i8** %52, align 8
  %330 = load i32, i32* %53, align 8
  %331 = load i8*, i8** %327, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %329, i32 %330, i8* %331) #14
  call void @freeReplyObject(i8* nonnull %67) #14
  br label %343

332:                                              ; preds = %310, %102
  %333 = phi %30* [ %100, %102 ], [ %307, %310 ]
  br i1 %55, label %334, label %341

334:                                              ; preds = %332
  %335 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @841, i64 0, i64 0), i8* %99) #14
  %336 = load %1*, %1** @stdout, align 8
  %337 = call i32 @fflush(%1* %336) #14
  br label %341

338:                                              ; preds = %98, %74, %73
  %339 = phi i8* [ %99, %98 ], [ null, %73 ], [ null, %74 ]
  %340 = phi i32 [ 1, %98 ], [ 0, %73 ], [ 0, %74 ]
  call void @freeReplyObject(i8* nonnull %67) #14
  br label %347

341:                                              ; preds = %334, %332
  call void @freeReplyObject(i8* nonnull %67) #14
  br label %343

342:                                              ; preds = %302, %284
  call void @freeReplyObject(i8* nonnull %67) #14
  br label %343

343:                                              ; preds = %342, %341, %326
  %344 = phi i32 [ 1, %341 ], [ 0, %342 ], [ 0, %326 ]
  %345 = phi %30* [ %333, %341 ], [ %100, %342 ], [ %315, %326 ]
  %346 = bitcast %30* %345 to i8*
  call void @freeReplyObject(i8* %346) #14
  br label %347

347:                                              ; preds = %343, %338, %309
  %348 = phi i32 [ %340, %338 ], [ %344, %343 ], [ 0, %309 ]
  %349 = phi i8* [ %339, %338 ], [ %99, %343 ], [ %99, %309 ]
  %350 = icmp eq i8* %349, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %347
  call void @zfree(i8* nonnull %349) #14
  br label %352

352:                                              ; preds = %351, %347
  %353 = icmp eq i32 %348, 0
  br i1 %353, label %354, label %65

354:                                              ; preds = %65, %352, %93
  %355 = phi i32 [ 1, %93 ], [ 0, %352 ], [ 0, %65 ]
  br i1 %12, label %358, label %356

356:                                              ; preds = %354
  %357 = call i32 @putchar(i32 10)
  br label %358

358:                                              ; preds = %356, %354
  %359 = icmp eq i32 %355, 0
  br i1 %359, label %436, label %360

360:                                              ; preds = %358
  br i1 %32, label %429, label %361

361:                                              ; preds = %360
  %362 = bitcast %26* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %362) #14
  %363 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %363, %26* nonnull %10) #14
  %364 = call %25* @listNext(%26* nonnull %10) #14
  %365 = icmp eq %25* %364, null
  br i1 %365, label %389, label %366

366:                                              ; preds = %361
  br i1 %26, label %390, label %367

367:                                              ; preds = %366, %386
  %368 = phi %25* [ %387, %386 ], [ %364, %366 ]
  %369 = getelementptr inbounds %25, %25* %368, i64 0, i32 2
  %370 = bitcast i8** %369 to %27**
  %371 = load %27*, %27** %370, align 8
  %372 = getelementptr inbounds %27, %27* %371, i64 0, i32 7
  %373 = load i32, i32* %372, align 8
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %386

376:                                              ; preds = %367
  %377 = getelementptr inbounds %27, %27* %371, i64 0, i32 0
  %378 = load %9*, %9** %377, align 8
  %379 = load i8*, i8** %46, align 8
  %380 = call i8* (%9*, i8*, ...) @redisCommand(%9* %378, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @878, i64 0, i64 0), i8* %379) #14
  %381 = icmp eq i8* %380, null
  br i1 %381, label %428, label %382

382:                                              ; preds = %376
  %383 = bitcast i8* %380 to i32*
  %384 = load i32, i32* %383, align 8
  %385 = icmp eq i32 %384, 6
  call void @freeReplyObject(i8* nonnull %380) #14
  br i1 %385, label %428, label %386

386:                                              ; preds = %382, %367
  %387 = call %25* @listNext(%26* nonnull %10) #14
  %388 = icmp eq %25* %387, null
  br i1 %388, label %389, label %367

389:                                              ; preds = %386, %425, %361
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %362) #14
  br label %429

390:                                              ; preds = %366, %425
  %391 = phi %25* [ %426, %425 ], [ %364, %366 ]
  %392 = getelementptr inbounds %25, %25* %391, i64 0, i32 2
  %393 = bitcast i8** %392 to %27**
  %394 = load %27*, %27** %393, align 8
  %395 = getelementptr inbounds %27, %27* %394, i64 0, i32 7
  %396 = load i32, i32* %395, align 8
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %425

399:                                              ; preds = %390
  %400 = getelementptr inbounds %27, %27* %394, i64 0, i32 0
  %401 = load %9*, %9** %400, align 8
  %402 = load i8*, i8** %46, align 8
  %403 = call i8* (%9*, i8*, ...) @redisCommand(%9* %401, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @900, i64 0, i64 0), i32 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @878, i64 0, i64 0), i8* %402) #14
  %404 = icmp eq i8* %403, null
  br i1 %404, label %428, label %405

405:                                              ; preds = %399
  %406 = bitcast i8* %403 to i32*
  %407 = load i32, i32* %406, align 8
  %408 = icmp eq i32 %407, 6
  br i1 %408, label %409, label %424

409:                                              ; preds = %405
  %410 = getelementptr inbounds i8, i8* %403, i64 24
  %411 = bitcast i8* %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = add i64 %412, 1
  %414 = call i8* @zmalloc(i64 %413) #14
  store i8* %414, i8** %4, align 8
  %415 = getelementptr inbounds i8, i8* %403, i64 32
  %416 = bitcast i8* %415 to i8**
  %417 = load i8*, i8** %416, align 8
  %418 = call i8* @strcpy(i8* %414, i8* %417) #14
  %419 = getelementptr inbounds %27, %27* %394, i64 0, i32 2
  %420 = load i8*, i8** %419, align 8
  %421 = getelementptr inbounds %27, %27* %394, i64 0, i32 3
  %422 = load i32, i32* %421, align 8
  %423 = load i8*, i8** %4, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %420, i32 %422, i8* %423)
  call void @freeReplyObject(i8* nonnull %403) #14
  br label %428

424:                                              ; preds = %405
  call void @freeReplyObject(i8* nonnull %403) #14
  br label %425

425:                                              ; preds = %424, %390
  %426 = call %25* @listNext(%26* nonnull %10) #14
  %427 = icmp eq %25* %426, null
  br i1 %427, label %389, label %390

428:                                              ; preds = %382, %376, %399, %409
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %362) #14
  br label %436

429:                                              ; preds = %389, %360
  %430 = and i32 %3, 4
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %436, label %432

432:                                              ; preds = %429
  %433 = sext i32 %2 to i64
  %434 = getelementptr inbounds %27, %27* %0, i64 0, i32 11, i64 %433
  store i8 0, i8* %434, align 1
  %435 = getelementptr inbounds %27, %27* %1, i64 0, i32 11, i64 %433
  store i8 1, i8* %435, align 1
  br label %436

436:                                              ; preds = %428, %432, %429, %358, %40, %35
  %437 = phi i32 [ 0, %428 ], [ 0, %35 ], [ 0, %40 ], [ 0, %358 ], [ 1, %429 ], [ 1, %432 ]
  ret i32 %437
}

declare dso_local void @listDelNode(%24*, %25*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc %27* @1383(%27* nocapture readonly %0, i32 %1, i8** %2) unnamed_addr #0 {
  %4 = alloca %26, align 8
  %5 = icmp ult i32 %1, 16384
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @894, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3183, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @895, i64 0, i64 0)) #19
  unreachable

7:                                                ; preds = %3
  %8 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %9 = load %9*, %9** %8, align 8
  %10 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @155, i64 0, i64 0)) #14
  %11 = icmp eq i8* %10, null
  br i1 %11, label %142, label %12

12:                                               ; preds = %7
  %13 = bitcast i8* %10 to i32*
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %44 [
    i32 6, label %15
    i32 2, label %35
  ]

15:                                               ; preds = %12
  %16 = icmp eq i8** %2, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds i8, i8* %10, i64 24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  %22 = tail call i8* @zmalloc(i64 %21) #14
  store i8* %22, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %10, i64 32
  %24 = bitcast i8* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i8* @strcpy(i8* %22, i8* %25) #14
  br label %140

27:                                               ; preds = %15
  %28 = getelementptr inbounds %27, %27* %0, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %27, %27* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds i8, i8* %10, i64 32
  %33 = bitcast i8* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %29, i32 %31, i8* %34) #14
  br label %140

35:                                               ; preds = %12
  %36 = getelementptr inbounds i8, i8* %10, i64 48
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %140, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, i8* %10, i64 56
  %42 = bitcast i8* %41 to %30***
  %43 = bitcast %26* %4 to i8*
  br label %45

44:                                               ; preds = %12
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @896, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3187, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @895, i64 0, i64 0)) #19
  unreachable

45:                                               ; preds = %40, %135
  %46 = phi i64 [ %38, %40 ], [ %136, %135 ]
  %47 = phi i64 [ 0, %40 ], [ %137, %135 ]
  %48 = load %30**, %30*** %42, align 8
  %49 = getelementptr inbounds %30*, %30** %48, i64 %47
  %50 = load %30*, %30** %49, align 8
  %51 = getelementptr inbounds %30, %30* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %58

54:                                               ; preds = %45
  %55 = getelementptr inbounds %30, %30* %50, i64 0, i32 6
  %56 = load i64, i64* %55, align 8
  %57 = icmp ugt i64 %56, 2
  br i1 %57, label %59, label %58

58:                                               ; preds = %54, %45
  call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @897, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3191, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @895, i64 0, i64 0)) #19
  unreachable

59:                                               ; preds = %54
  %60 = getelementptr inbounds %30, %30* %50, i64 0, i32 7
  %61 = load %30**, %30*** %60, align 8
  %62 = load %30*, %30** %61, align 8
  %63 = getelementptr inbounds %30, %30* %62, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp sgt i32 %65, %1
  br i1 %66, label %135, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %30*, %30** %61, i64 1
  %69 = load %30*, %30** %68, align 8
  %70 = getelementptr inbounds %30, %30* %69, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp slt i32 %72, %1
  br i1 %73, label %135, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %30*, %30** %61, i64 2
  %76 = load %30*, %30** %75, align 8
  %77 = getelementptr inbounds %30, %30* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %84

80:                                               ; preds = %74
  %81 = getelementptr inbounds %30, %30* %76, i64 0, i32 6
  %82 = load i64, i64* %81, align 8
  %83 = icmp ugt i64 %82, 1
  br i1 %83, label %85, label %84

84:                                               ; preds = %80, %74
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @898, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3197, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @895, i64 0, i64 0)) #19
  unreachable

85:                                               ; preds = %80
  %86 = icmp eq i64 %82, 2
  %87 = getelementptr inbounds %30, %30* %76, i64 0, i32 7
  %88 = load %30**, %30*** %87, align 8
  br i1 %86, label %97, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %30*, %30** %88, i64 2
  %91 = load %30*, %30** %90, align 8
  %92 = getelementptr inbounds %30, %30* %91, i64 0, i32 4
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %89
  %96 = call fastcc %27* @1377(i8* nonnull %93)
  br label %130

97:                                               ; preds = %85, %89
  %98 = load %30*, %30** %88, align 8
  %99 = getelementptr inbounds %30, %30* %98, i64 0, i32 4
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @899, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3205, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @895, i64 0, i64 0)) #19
  unreachable

103:                                              ; preds = %97
  %104 = getelementptr inbounds %30*, %30** %88, i64 1
  %105 = load %30*, %30** %104, align 8
  %106 = getelementptr inbounds %30, %30* %105, i64 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #14
  %109 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %109, %26* nonnull %4) #14
  %110 = call %25* @listNext(%26* nonnull %4) #14
  %111 = icmp eq %25* %110, null
  br i1 %111, label %128, label %112

112:                                              ; preds = %103, %125
  %113 = phi %25* [ %126, %125 ], [ %110, %103 ]
  %114 = getelementptr inbounds %25, %25* %113, i64 0, i32 2
  %115 = bitcast i8** %114 to %27**
  %116 = load %27*, %27** %115, align 8
  %117 = getelementptr inbounds %27, %27* %116, i64 0, i32 2
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 @strcmp(i8* %118, i8* nonnull %100) #17
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %125

121:                                              ; preds = %112
  %122 = getelementptr inbounds %27, %27* %116, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, %108
  br i1 %124, label %128, label %125

125:                                              ; preds = %112, %121
  %126 = call %25* @listNext(%26* nonnull %4) #14
  %127 = icmp eq %25* %126, null
  br i1 %127, label %128, label %112

128:                                              ; preds = %125, %121, %103
  %129 = phi %27* [ null, %103 ], [ %116, %121 ], [ null, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #14
  br label %130

130:                                              ; preds = %128, %95
  %131 = phi %27* [ %96, %95 ], [ %129, %128 ]
  %132 = icmp eq %27* %131, null
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = load i64, i64* %37, align 8
  br label %135

135:                                              ; preds = %133, %67, %59
  %136 = phi i64 [ %134, %133 ], [ %46, %67 ], [ %46, %59 ]
  %137 = add nuw i64 %47, 1
  %138 = icmp ult i64 %137, %136
  br i1 %138, label %45, label %140

139:                                              ; preds = %130
  br i1 %11, label %142, label %140

140:                                              ; preds = %135, %35, %17, %27, %139
  %141 = phi %27* [ %131, %139 ], [ null, %27 ], [ null, %17 ], [ null, %35 ], [ null, %135 ]
  call void @freeReplyObject(i8* nonnull %10) #14
  br label %142

142:                                              ; preds = %7, %139, %140
  %143 = phi %27* [ %131, %139 ], [ %141, %140 ], [ null, %7 ]
  ret %27* %143
}

; Function Attrs: nounwind uwtable
define internal fastcc %30* @1384(%27* nocapture readonly %0, %27* nocapture readonly %1, %30* nocapture readonly %2, i32 %3, i32 %4, i8* %5) unnamed_addr #0 {
  %7 = alloca [255 x i8], align 16
  %8 = alloca [255 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = icmp ne i32 %3, 0
  %11 = select i1 %10, i32 8, i32 7
  %12 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %13 = icmp eq i8* %12, null
  %14 = add nuw nsw i32 %11, 2
  %15 = select i1 %13, i32 %11, i32 %14
  %16 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40), align 8
  %17 = icmp ne i8* %16, null
  %18 = zext i1 %17 to i32
  %19 = add nuw nsw i32 %15, %18
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %30, %30* %2, i64 0, i32 6
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %20
  %24 = shl i64 %23, 3
  %25 = tail call i8* @zcalloc(i64 %24) #14
  %26 = bitcast i8* %25 to i8**
  %27 = tail call i8* @zcalloc(i64 %24) #14
  %28 = bitcast i8* %27 to i64*
  %29 = getelementptr inbounds [255 x i8], [255 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %29) #14
  %30 = getelementptr inbounds [255 x i8], [255 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %30) #14
  %31 = getelementptr inbounds %27, %27* %1, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %29, i64 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @913, i64 0, i64 0), i32 %32) #14
  %34 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %30, i64 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @913, i64 0, i64 0), i32 %4) #14
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @360, i64 0, i64 0), i8** %26, align 8
  store i64 7, i64* %28, align 8
  %35 = getelementptr inbounds %27, %27* %1, i64 0, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %25, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = load i8*, i8** %35, align 8
  %41 = tail call i64 @strlen(i8* %40) #17
  %42 = getelementptr inbounds i8, i8* %27, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %25, i64 16
  %45 = bitcast i8* %44 to i8**
  store i8* %29, i8** %45, align 8
  %46 = call i64 @strlen(i8* nonnull %29) #17
  %47 = getelementptr inbounds i8, i8* %27, i64 16
  %48 = bitcast i8* %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %25, i64 24
  %50 = getelementptr inbounds i8, i8* %27, i64 24
  %51 = bitcast i8* %49 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @914, i64 0, i64 0)>, <2 x i8*>* %51, align 8
  %52 = bitcast i8* %50 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds i8, i8* %25, i64 40
  %54 = bitcast i8* %53 to i8**
  store i8* %30, i8** %54, align 8
  %55 = call i64 @strlen(i8* nonnull %30) #17
  %56 = getelementptr inbounds i8, i8* %27, i64 40
  %57 = bitcast i8* %56 to i64*
  store i64 %55, i64* %57, align 8
  br i1 %10, label %58, label %63

58:                                               ; preds = %6
  %59 = getelementptr inbounds i8, i8* %25, i64 48
  %60 = bitcast i8* %59 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @915, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %27, i64 48
  %62 = bitcast i8* %61 to i64*
  store i64 7, i64* %62, align 8
  br label %63

63:                                               ; preds = %58, %6
  %64 = phi i64 [ 7, %58 ], [ 6, %6 ]
  %65 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %94, label %67

67:                                               ; preds = %63
  %68 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40), align 8
  %69 = icmp eq i8* %68, null
  %70 = getelementptr inbounds i8*, i8** %26, i64 %64
  br i1 %69, label %79, label %71

71:                                               ; preds = %67
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @916, i64 0, i64 0), i8** %70, align 8
  %72 = getelementptr inbounds i64, i64* %28, i64 %64
  store i64 5, i64* %72, align 8
  %73 = add nuw nsw i64 %64, 1
  %74 = load i64, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40) to i64*), align 8
  %75 = getelementptr inbounds i8*, i8** %26, i64 %73
  %76 = bitcast i8** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 40), align 8
  %78 = call i64 @strlen(i8* %77) #17
  br label %80

79:                                               ; preds = %67
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i64 0, i64 0), i8** %70, align 8
  br label %80

80:                                               ; preds = %79, %71
  %81 = phi i64 [ %64, %79 ], [ %73, %71 ]
  %82 = phi i64 [ 4, %79 ], [ %78, %71 ]
  %83 = phi i64 [ 1, %79 ], [ 2, %71 ]
  %84 = phi i64 [ 2, %79 ], [ 3, %71 ]
  %85 = getelementptr inbounds i64, i64* %28, i64 %81
  store i64 %82, i64* %85, align 8
  %86 = add nuw nsw i64 %64, %83
  %87 = load i64, i64* bitcast (i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38) to i64*), align 8
  %88 = getelementptr inbounds i8*, i8** %26, i64 %86
  %89 = bitcast i8** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 38), align 8
  %91 = call i64 @strlen(i8* %90) #17
  %92 = getelementptr inbounds i64, i64* %28, i64 %86
  store i64 %91, i64* %92, align 8
  %93 = add nuw nsw i64 %64, %84
  br label %94

94:                                               ; preds = %80, %63
  %95 = phi i64 [ %64, %63 ], [ %93, %80 ]
  %96 = getelementptr inbounds i8*, i8** %26, i64 %95
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @296, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds i64, i64* %28, i64 %95
  store i64 4, i64* %97, align 8
  %98 = add nsw i64 %95, 1
  %99 = load i64, i64* %21, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %148, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %30, %30* %2, i64 0, i32 7
  %103 = icmp eq i8* %5, null
  br i1 %103, label %104, label %125

104:                                              ; preds = %101, %113
  %105 = phi i64 [ %122, %113 ], [ 0, %101 ]
  %106 = load %30**, %30*** %102, align 8
  %107 = getelementptr inbounds %30*, %30** %106, i64 %105
  %108 = load %30*, %30** %107, align 8
  %109 = add i64 %105, %98
  %110 = getelementptr inbounds %30, %30* %108, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %134

113:                                              ; preds = %104
  %114 = getelementptr inbounds %30, %30* %108, i64 0, i32 4
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %30, %30* %108, i64 0, i32 3
  %117 = load i64, i64* %116, align 8
  %118 = call i8* @sdsnewlen(i8* %115, i64 %117) #14
  %119 = getelementptr inbounds i8*, i8** %26, i64 %109
  store i8* %118, i8** %119, align 8
  %120 = load i64, i64* %116, align 8
  %121 = getelementptr inbounds i64, i64* %28, i64 %109
  store i64 %120, i64* %121, align 8
  %122 = add nuw i64 %105, 1
  %123 = load i64, i64* %21, align 8
  %124 = icmp ult i64 %122, %123
  br i1 %124, label %104, label %148

125:                                              ; preds = %101, %135
  %126 = phi i64 [ %145, %135 ], [ 0, %101 ]
  %127 = load %30**, %30*** %102, align 8
  %128 = getelementptr inbounds %30*, %30** %127, i64 %126
  %129 = load %30*, %30** %128, align 8
  %130 = add i64 %126, %98
  %131 = getelementptr inbounds %30, %30* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %135, label %134

134:                                              ; preds = %125, %104
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @917, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 3471, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @918, i64 0, i64 0)) #19
  unreachable

135:                                              ; preds = %125
  %136 = getelementptr inbounds %30, %30* %129, i64 0, i32 4
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %30, %30* %129, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = call i8* @sdsnewlen(i8* %137, i64 %139) #14
  %141 = getelementptr inbounds i8*, i8** %26, i64 %130
  store i8* %140, i8** %141, align 8
  %142 = load i64, i64* %138, align 8
  %143 = getelementptr inbounds i64, i64* %28, i64 %130
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds i8, i8* %5, i64 %126
  store i8 46, i8* %144, align 1
  %145 = add nuw i64 %126, 1
  %146 = load i64, i64* %21, align 8
  %147 = icmp ult i64 %145, %146
  br i1 %147, label %125, label %151

148:                                              ; preds = %113, %94
  %149 = phi i64 [ 0, %94 ], [ %123, %113 ]
  %150 = icmp eq i8* %5, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %135, %148
  %152 = phi i64 [ %149, %148 ], [ %146, %135 ]
  %153 = getelementptr inbounds i8, i8* %5, i64 %152
  store i8 0, i8* %153, align 1
  br label %154

154:                                              ; preds = %148, %151
  %155 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #14
  store i8* null, i8** %9, align 8
  %156 = getelementptr inbounds %27, %27* %0, i64 0, i32 0
  %157 = load %9*, %9** %156, align 8
  %158 = trunc i64 %23 to i32
  %159 = call i32 @redisAppendCommandArgv(%9* %157, i32 %158, i8** nonnull %26, i64* nonnull %28) #14
  %160 = load %9*, %9** %156, align 8
  %161 = call i32 @redisGetReply(%9* %160, i8** nonnull %9) #14
  %162 = icmp eq i32 %161, 0
  %163 = load i64, i64* %21, align 8
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %154, %165
  %166 = phi i64 [ %170, %165 ], [ 0, %154 ]
  %167 = add i64 %166, %98
  %168 = getelementptr inbounds i8*, i8** %26, i64 %167
  %169 = load i8*, i8** %168, align 8
  call void @sdsfree(i8* %169) #14
  %170 = add nuw i64 %166, 1
  %171 = load i64, i64* %21, align 8
  %172 = icmp ult i64 %170, %171
  br i1 %172, label %165, label %173

173:                                              ; preds = %165, %154
  %174 = bitcast i8** %9 to %30**
  %175 = load %30*, %30** %174, align 8
  %176 = select i1 %162, %30* %175, %30* null
  call void @zfree(i8* nonnull %25) #14
  call void @zfree(i8* %27) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #14
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %29) #14
  ret %30* %176
}

declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc void @1385(%24* %0) unnamed_addr #0 {
  %2 = alloca %27, align 8
  %3 = alloca %26, align 8
  %4 = bitcast %27* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16520, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16520, i1 false)
  %5 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @listRewind(%24* %0, %26* nonnull %3) #14
  %6 = call %25* @listNext(%26* nonnull %3) #14
  %7 = icmp eq %25* %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %1, %19
  %9 = phi %25* [ %20, %19 ], [ %6, %1 ]
  %10 = getelementptr inbounds %25, %25* %9, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = call i64 @strtol(i8* nocapture nonnull %11, i8** null, i32 10) #14
  %13 = trunc i64 %12 to i32
  %14 = icmp ult i32 %13, 16384
  br i1 %14, label %15, label %19

15:                                               ; preds = %8
  %16 = shl i64 %12, 32
  %17 = ashr exact i64 %16, 32
  %18 = getelementptr inbounds %27, %27* %2, i64 0, i32 11, i64 %17
  store i8 1, i8* %18, align 1
  br label %19

19:                                               ; preds = %15, %8
  %20 = call %25* @listNext(%26* nonnull %3) #14
  %21 = icmp eq %25* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %19, %1
  %23 = call fastcc i8* @1373(%27* nonnull %2)
  %24 = call i32 @puts(i8* %23)
  call void @sdsfree(i8* %23) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16520, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @1386() unnamed_addr #0 {
  %1 = alloca %26, align 8
  %2 = alloca [9 x i8], align 8
  %3 = alloca %26, align 8
  %4 = bitcast %26* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  %5 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %5, %26* nonnull %1) #14
  %6 = call %25* @listNext(%26* nonnull %1) #14
  %7 = icmp eq %25* %6, null
  br i1 %7, label %106, label %8

8:                                                ; preds = %0
  %9 = getelementptr inbounds [9 x i8], [9 x i8]* %2, i64 0, i64 0
  %10 = bitcast [9 x i8]* %2 to i64*
  %11 = getelementptr inbounds [9 x i8], [9 x i8]* %2, i64 0, i64 8
  %12 = bitcast %26* %3 to i8*
  br label %13

13:                                               ; preds = %8, %101
  %14 = phi %25* [ %6, %8 ], [ %104, %101 ]
  %15 = phi i32 [ 0, %8 ], [ %103, %101 ]
  %16 = phi i32 [ 0, %8 ], [ %102, %101 ]
  %17 = getelementptr inbounds %25, %25* %14, i64 0, i32 2
  %18 = bitcast i8** %17 to %27**
  %19 = load %27*, %27** %18, align 8
  %20 = getelementptr inbounds %27, %27* %19, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %101

24:                                               ; preds = %13
  %25 = getelementptr inbounds %27, %27* %19, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %101, label %28

28:                                               ; preds = %24
  %29 = bitcast i8* %26 to i64*
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %9) #14
  %30 = load i64, i64* %29, align 1
  store i64 %30, i64* %10, align 8
  store i8 0, i8* %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %31 = load %24*, %24** @.0.1, align 8
  call void @listRewind(%24* %31, %26* nonnull %3) #14
  %32 = call %25* @listNext(%26* nonnull %3) #14
  %33 = icmp eq %25* %32, null
  br i1 %33, label %60, label %34

34:                                               ; preds = %28, %56
  %35 = phi %25* [ %58, %56 ], [ %32, %28 ]
  %36 = phi i32 [ %57, %56 ], [ 0, %28 ]
  %37 = getelementptr inbounds %25, %25* %35, i64 0, i32 2
  %38 = bitcast i8** %37 to %27**
  %39 = load %27*, %27** %38, align 8
  %40 = icmp eq %27* %39, %19
  br i1 %40, label %56, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %27, %27* %39, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %27, %27* %39, i64 0, i32 9
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = load i8*, i8** %25, align 8
  %52 = call i32 @strcmp(i8* nonnull %48, i8* %51) #17
  %53 = icmp eq i32 %52, 0
  %54 = zext i1 %53 to i32
  %55 = add nsw i32 %36, %54
  br label %56

56:                                               ; preds = %50, %46, %34, %41
  %57 = phi i32 [ %36, %41 ], [ %36, %34 ], [ %36, %46 ], [ %55, %50 ]
  %58 = call %25* @listNext(%26* nonnull %3) #14
  %59 = icmp eq %25* %58, null
  br i1 %59, label %60, label %34

60:                                               ; preds = %56, %28
  %61 = phi i32 [ 0, %28 ], [ %57, %56 ]
  %62 = getelementptr inbounds %27, %27* %19, i64 0, i32 0
  %63 = load %9*, %9** %62, align 8
  %64 = call i8* (%9*, i8*, ...) @redisCommand(%9* %63, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i64 0, i64 0)) #14
  %65 = icmp eq i8* %64, null
  br i1 %65, label %85, label %66

66:                                               ; preds = %60
  %67 = bitcast i8* %64 to i32*
  %68 = load i32, i32* %67, align 8
  switch i32 %68, label %79 [
    i32 3, label %69
    i32 6, label %75
  ]

69:                                               ; preds = %66
  %70 = getelementptr inbounds i8, i8* %64, i64 8
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %79, label %91

75:                                               ; preds = %66
  %76 = getelementptr inbounds i8, i8* %64, i64 32
  %77 = bitcast i8* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %69, %66, %75
  %80 = phi i8* [ %78, %75 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), %66 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), %69 ]
  %81 = getelementptr inbounds %27, %27* %19, i64 0, i32 2
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %27, %27* %19, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %82, i32 %84, i8* %80)
  call void @freeReplyObject(i8* nonnull %64) #14
  br label %90

85:                                               ; preds = %60
  %86 = getelementptr inbounds %27, %27* %19, i64 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds %27, %27* %19, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  call void (i32, i8*, ...) @1361(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @764, i64 0, i64 0), i8* %87, i32 %89, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0))
  br label %90

90:                                               ; preds = %79, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %9) #14
  br label %113

91:                                               ; preds = %69
  call void @freeReplyObject(i8* nonnull %64) #14
  %92 = getelementptr inbounds %27, %27* %19, i64 0, i32 2
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %27, %27* %19, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %27, %27* %19, i64 0, i32 12
  %97 = load i32, i32* %96, align 4
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @962, i64 0, i64 0), i8* %93, i32 %95, i8* nonnull %9, i32 %73, i32 %97, i32 %61)
  %99 = add nsw i32 %15, 1
  %100 = add nsw i32 %16, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %9) #14
  br label %101

101:                                              ; preds = %13, %91, %24
  %102 = phi i32 [ %16, %24 ], [ %16, %13 ], [ %100, %91 ]
  %103 = phi i32 [ %15, %24 ], [ %15, %13 ], [ %99, %91 ]
  %104 = call %25* @listNext(%26* nonnull %1) #14
  %105 = icmp eq %25* %104, null
  br i1 %105, label %106, label %13

106:                                              ; preds = %101, %0
  %107 = phi i32 [ 0, %0 ], [ %102, %101 ]
  %108 = phi i32 [ 0, %0 ], [ %103, %101 ]
  call void (i32, i8*, ...) @1361(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @963, i64 0, i64 0), i32 %107, i32 %108)
  %109 = sitofp i32 %107 to float
  %110 = fmul float %109, 0x3F10000000000000
  %111 = fpext float %110 to double
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @964, i64 0, i64 0), double %111)
  br label %113

113:                                              ; preds = %90, %106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %24* @1387(%24* %0, i32 %1) unnamed_addr #0 {
  %3 = alloca %26, align 8
  %4 = tail call %24* @listCreate() #14
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = shl i64 %6, 32
  %9 = ashr exact i64 %8, 32
  %10 = ashr exact i64 %8, 29
  %11 = tail call i8* @zmalloc(i64 %10) #14
  %12 = bitcast i8* %11 to %27**
  %13 = bitcast %26* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  call void @listRewind(%24* %0, %26* nonnull %3) #14
  %14 = call %25* @listNext(%26* nonnull %3) #14
  %15 = icmp eq %25* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %2, %16
  %17 = phi i64 [ %26, %16 ], [ 0, %2 ]
  %18 = phi %25* [ %28, %16 ], [ %14, %2 ]
  %19 = phi i32 [ %25, %16 ], [ 0, %2 ]
  %20 = getelementptr inbounds %25, %25* %18, i64 0, i32 2
  %21 = bitcast i8** %20 to %27**
  %22 = load %27*, %27** %21, align 8
  %23 = getelementptr inbounds %27, %27* %22, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, %19
  %26 = add nuw i64 %17, 1
  %27 = getelementptr inbounds %27*, %27** %12, i64 %17
  store %27* %22, %27** %27, align 8
  %28 = call %25* @listNext(%26* nonnull %3) #14
  %29 = icmp eq %25* %28, null
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = sitofp i32 %25 to float
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi float [ 0.000000e+00, %2 ], [ %31, %30 ]
  call void @qsort(i8* %11, i64 %9, i64 8, i32 (i8*, i8*)* nonnull @clusterManagerSlotCountCompareDesc) #14
  %34 = icmp sgt i32 %7, 0
  br i1 %34, label %35, label %82

35:                                               ; preds = %32
  %36 = sitofp i32 %1 to float
  %37 = fdiv float %36, %33
  %38 = getelementptr inbounds %24, %24* %4, i64 0, i32 5
  %39 = and i64 %6, 4294967295
  br label %40

40:                                               ; preds = %79, %35
  %41 = phi i64 [ 0, %35 ], [ %80, %79 ]
  %42 = getelementptr inbounds %27*, %27** %12, i64 %41
  %43 = load %27*, %27** %42, align 8
  %44 = getelementptr inbounds %27, %27* %43, i64 0, i32 12
  %45 = load i32, i32* %44, align 4
  %46 = sitofp i32 %45 to float
  %47 = fmul float %37, %46
  %48 = icmp eq i64 %41, 0
  %49 = fpext float %47 to double
  %50 = call double @llvm.ceil.f64(double %49)
  %51 = call double @llvm.floor.f64(double %49)
  %52 = select i1 %48, double %50, double %51
  %53 = fptrunc double %52 to float
  %54 = fptosi float %53 to i32
  br label %55

55:                                               ; preds = %40, %75
  %56 = phi i64 [ 0, %40 ], [ %77, %75 ]
  %57 = phi i32 [ 0, %40 ], [ %76, %75 ]
  %58 = getelementptr inbounds %27, %27* %43, i64 0, i32 11, i64 %56
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %55
  %62 = icmp slt i32 %57, %54
  br i1 %62, label %63, label %79

63:                                               ; preds = %61
  %64 = load i64, i64* %38, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %65, %1
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = call i8* @zmalloc(i64 16) #14
  %69 = bitcast i8* %68 to %27**
  store %27* %43, %27** %69, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 8
  %71 = bitcast i8* %70 to i32*
  %72 = trunc i64 %56 to i32
  store i32 %72, i32* %71, align 8
  %73 = call %24* @listAddNodeTail(%24* nonnull %4, i8* %68) #14
  %74 = add nsw i32 %57, 1
  br label %75

75:                                               ; preds = %67, %55
  %76 = phi i32 [ %74, %67 ], [ %57, %55 ]
  %77 = add nuw nsw i64 %56, 1
  %78 = icmp ult i64 %77, 16384
  br i1 %78, label %55, label %79

79:                                               ; preds = %61, %63, %75
  %80 = add nuw nsw i64 %41, 1
  %81 = icmp eq i64 %80, %39
  br i1 %81, label %82, label %40

82:                                               ; preds = %79, %32
  call void @zfree(i8* %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  ret %24* %4
}

; Function Attrs: nounwind
declare dso_local i32 @_IO_getc(%1* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #8

; Function Attrs: nounwind
declare dso_local double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal %30* @1388(%9* %0, i8* %1, ...) unnamed_addr #0 {
  %3 = alloca [1 x %33], align 16
  %4 = bitcast [1 x %33]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %9, %9* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds [1 x %33], [1 x %33]* %3, i64 0, i64 0
  br label %11

10:                                               ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1011, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 1393, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @1012, i64 0, i64 0)) #19
  unreachable

11:                                               ; preds = %53, %8
  %12 = phi i32 [ 0, %8 ], [ %55, %53 ]
  %13 = phi i32 [ 0, %8 ], [ %35, %53 ]
  %14 = phi %9* [ %0, %8 ], [ %34, %53 ]
  %15 = and i32 %12, 3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %11, %17
  %18 = phi i32 [ %21, %17 ], [ %13, %11 ]
  %19 = phi %9* [ %27, %17 ], [ %14, %11 ]
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1013, i64 0, i64 0))
  %21 = add nsw i32 %18, 1
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1014, i64 0, i64 0), i32 %21)
  %23 = load %1*, %1** @stdout, align 8
  %24 = call i32 @fflush(%1* %23)
  call void @redisFree(%9* %19) #14
  %25 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %26 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  %27 = call %9* @redisConnect(i8* %25, i32 %26) #14
  %28 = call i32 @usleep(i32 1000000) #14
  %29 = getelementptr inbounds %9, %9* %27, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 3
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %17

33:                                               ; preds = %17, %11
  %34 = phi %9* [ %14, %11 ], [ %27, %17 ]
  %35 = phi i32 [ %13, %11 ], [ %21, %17 ]
  %36 = getelementptr inbounds %9, %9* %34, i64 0, i32 1
  call void @llvm.va_start(i8* nonnull %4)
  %37 = call i8* @redisvCommand(%9* %34, i8* %1, %33* nonnull %9) #14
  call void @llvm.va_end(i8* nonnull %4)
  %38 = load i32, i32* %36, align 8
  %39 = icmp ne i32 %38, 0
  %40 = and i32 %38, 3
  %41 = icmp eq i32 %40, 0
  %42 = and i1 %39, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %33
  %44 = load %1*, %1** @stderr, align 8
  %45 = getelementptr inbounds %9, %9* %34, i64 0, i32 2, i64 0
  %46 = call i32 (%1*, i8*, ...) @fprintf(%1* %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* nonnull %45) #16
  call void @exit(i32 1) #19
  unreachable

47:                                               ; preds = %33
  %48 = icmp sgt i32 %35, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1013, i64 0, i64 0))
  br label %51

51:                                               ; preds = %47, %49
  %52 = icmp eq i8* %37, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = getelementptr inbounds %9, %9* %34, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  br label %11

56:                                               ; preds = %51
  %57 = bitcast i8* %37 to %30*
  store %9* %34, %9** @727, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret %30* %57
}

declare dso_local i32 @usleep(i32) local_unnamed_addr #5

declare dso_local i8* @redisvCommand(%9*, i8*, %33*) local_unnamed_addr #5

declare dso_local zeroext i16 @crc16(i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1389(%30* nocapture readonly %0) unnamed_addr #0 {
  %2 = tail call i8* @sdsempty() #14
  %3 = getelementptr inbounds %30, %30* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %176 [
    i32 4, label %179
    i32 6, label %17
    i32 5, label %24
    i32 1, label %24
    i32 14, label %24
    i32 8, label %43
    i32 3, label %49
    i32 7, label %53
    i32 2, label %11
    i32 9, label %5
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %30, %30* %0, i64 0, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %179, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %30, %30* %0, i64 0, i32 7
  br label %100

11:                                               ; preds = %1
  %12 = getelementptr inbounds %30, %30* %0, i64 0, i32 6
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %179, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %30, %30* %0, i64 0, i32 7
  br label %57

17:                                               ; preds = %1
  %18 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %30, %30* %0, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = tail call i8* @sdscatlen(i8* %2, i8* %19, i64 %21) #14
  %23 = tail call i8* @sdscatlen(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0), i64 1) #14
  br label %179

24:                                               ; preds = %1, %1, %1
  %25 = icmp eq i32 %4, 5
  %26 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %27 = icmp ne i32 %26, 0
  %28 = and i1 %25, %27
  %29 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %30 = load i8*, i8** %29, align 8
  br i1 %28, label %31, label %39

31:                                               ; preds = %24
  %32 = tail call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1018, i64 0, i64 0), i64 12)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 48), align 4
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 47), align 8
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  tail call fastcc void @1390()
  br label %179

35:                                               ; preds = %31
  %36 = getelementptr inbounds %30, %30* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = tail call i8* @sdsCatColorizedLdbReply(i8* %2, i8* %30, i64 %37)
  br label %179

39:                                               ; preds = %24
  %40 = getelementptr inbounds %30, %30* %0, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = tail call i8* @sdscatlen(i8* %2, i8* %30, i64 %41) #14
  br label %179

43:                                               ; preds = %1
  %44 = getelementptr inbounds %30, %30* %0, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  %47 = select i1 %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1020, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1019, i64 0, i64 0)
  %48 = tail call i8* @sdscat(i8* %2, i8* %47) #14
  br label %179

49:                                               ; preds = %1
  %50 = getelementptr inbounds %30, %30* %0, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1021, i64 0, i64 0), i64 %51) #14
  br label %179

53:                                               ; preds = %1
  %54 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %55 = load i8*, i8** %54, align 8
  %56 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @841, i64 0, i64 0), i8* %55) #14
  br label %179

57:                                               ; preds = %15, %94
  %58 = phi i64 [ 0, %15 ], [ %97, %94 ]
  %59 = phi i8* [ %2, %15 ], [ %96, %94 ]
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  %63 = tail call i8* @sdscat(i8* %59, i8* %62) #14
  br label %64

64:                                               ; preds = %57, %61
  %65 = phi i8* [ %63, %61 ], [ %59, %57 ]
  %66 = load %30**, %30*** %16, align 8
  %67 = getelementptr inbounds %30*, %30** %66, i64 %58
  %68 = load %30*, %30** %67, align 8
  %69 = tail call fastcc i8* @1389(%30* %68)
  %70 = getelementptr inbounds i8, i8* %69, i64 -1
  %71 = load i8, i8* %70, align 1
  %72 = trunc i8 %71 to i3
  switch i3 %72, label %94 [
    i3 0, label %73
    i3 1, label %76
    i3 2, label %80
    i3 3, label %85
    i3 -4, label %90
  ]

73:                                               ; preds = %64
  %74 = lshr i8 %71, 3
  %75 = zext i8 %74 to i64
  br label %94

76:                                               ; preds = %64
  %77 = getelementptr inbounds i8, i8* %69, i64 -3
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  br label %94

80:                                               ; preds = %64
  %81 = getelementptr inbounds i8, i8* %69, i64 -5
  %82 = bitcast i8* %81 to i16*
  %83 = load i16, i16* %82, align 1
  %84 = zext i16 %83 to i64
  br label %94

85:                                               ; preds = %64
  %86 = getelementptr inbounds i8, i8* %69, i64 -9
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = zext i32 %88 to i64
  br label %94

90:                                               ; preds = %64
  %91 = getelementptr inbounds i8, i8* %69, i64 -17
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 1
  br label %94

94:                                               ; preds = %64, %73, %76, %80, %85, %90
  %95 = phi i64 [ %93, %90 ], [ %89, %85 ], [ %84, %80 ], [ %79, %76 ], [ %75, %73 ], [ 0, %64 ]
  %96 = tail call i8* @sdscatlen(i8* %65, i8* %69, i64 %95) #14
  tail call void @sdsfree(i8* %69) #14
  %97 = add nuw i64 %58, 1
  %98 = load i64, i64* %12, align 8
  %99 = icmp ult i64 %97, %98
  br i1 %99, label %57, label %179

100:                                              ; preds = %9, %170
  %101 = phi i64 [ 0, %9 ], [ %173, %170 ]
  %102 = phi i8* [ %2, %9 ], [ %172, %170 ]
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 42), align 8
  %106 = tail call i8* @sdscat(i8* %102, i8* %105) #14
  br label %107

107:                                              ; preds = %100, %104
  %108 = phi i8* [ %106, %104 ], [ %102, %100 ]
  %109 = load %30**, %30*** %10, align 8
  %110 = getelementptr inbounds %30*, %30** %109, i64 %101
  %111 = load %30*, %30** %110, align 8
  %112 = tail call fastcc i8* @1389(%30* %111)
  %113 = getelementptr inbounds i8, i8* %112, i64 -1
  %114 = load i8, i8* %113, align 1
  %115 = trunc i8 %114 to i3
  switch i3 %115, label %137 [
    i3 0, label %116
    i3 1, label %119
    i3 2, label %123
    i3 3, label %128
    i3 -4, label %133
  ]

116:                                              ; preds = %107
  %117 = lshr i8 %114, 3
  %118 = zext i8 %117 to i64
  br label %137

119:                                              ; preds = %107
  %120 = getelementptr inbounds i8, i8* %112, i64 -3
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i64
  br label %137

123:                                              ; preds = %107
  %124 = getelementptr inbounds i8, i8* %112, i64 -5
  %125 = bitcast i8* %124 to i16*
  %126 = load i16, i16* %125, align 1
  %127 = zext i16 %126 to i64
  br label %137

128:                                              ; preds = %107
  %129 = getelementptr inbounds i8, i8* %112, i64 -9
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 1
  %132 = zext i32 %131 to i64
  br label %137

133:                                              ; preds = %107
  %134 = getelementptr inbounds i8, i8* %112, i64 -17
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  br label %137

137:                                              ; preds = %107, %116, %119, %123, %128, %133
  %138 = phi i64 [ %136, %133 ], [ %132, %128 ], [ %127, %123 ], [ %122, %119 ], [ %118, %116 ], [ 0, %107 ]
  %139 = tail call i8* @sdscatlen(i8* %108, i8* %112, i64 %138) #14
  tail call void @sdsfree(i8* %112) #14
  %140 = tail call i8* @sdscatlen(i8* %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @817, i64 0, i64 0), i64 1) #14
  %141 = load %30**, %30*** %10, align 8
  %142 = or i64 %101, 1
  %143 = getelementptr inbounds %30*, %30** %141, i64 %142
  %144 = load %30*, %30** %143, align 8
  %145 = tail call fastcc i8* @1389(%30* %144)
  %146 = getelementptr inbounds i8, i8* %145, i64 -1
  %147 = load i8, i8* %146, align 1
  %148 = trunc i8 %147 to i3
  switch i3 %148, label %170 [
    i3 0, label %149
    i3 1, label %152
    i3 2, label %156
    i3 3, label %161
    i3 -4, label %166
  ]

149:                                              ; preds = %137
  %150 = lshr i8 %147, 3
  %151 = zext i8 %150 to i64
  br label %170

152:                                              ; preds = %137
  %153 = getelementptr inbounds i8, i8* %145, i64 -3
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  br label %170

156:                                              ; preds = %137
  %157 = getelementptr inbounds i8, i8* %145, i64 -5
  %158 = bitcast i8* %157 to i16*
  %159 = load i16, i16* %158, align 1
  %160 = zext i16 %159 to i64
  br label %170

161:                                              ; preds = %137
  %162 = getelementptr inbounds i8, i8* %145, i64 -9
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 1
  %165 = zext i32 %164 to i64
  br label %170

166:                                              ; preds = %137
  %167 = getelementptr inbounds i8, i8* %145, i64 -17
  %168 = bitcast i8* %167 to i64*
  %169 = load i64, i64* %168, align 1
  br label %170

170:                                              ; preds = %137, %149, %152, %156, %161, %166
  %171 = phi i64 [ %169, %166 ], [ %165, %161 ], [ %160, %156 ], [ %155, %152 ], [ %151, %149 ], [ 0, %137 ]
  %172 = tail call i8* @sdscatlen(i8* %140, i8* %145, i64 %171) #14
  tail call void @sdsfree(i8* %145) #14
  %173 = add i64 %101, 2
  %174 = load i64, i64* %6, align 8
  %175 = icmp ult i64 %173, %174
  br i1 %175, label %100, label %179

176:                                              ; preds = %1
  %177 = load %1*, %1** @stderr, align 8
  %178 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %177, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1022, i64 0, i64 0), i32 %4) #16
  tail call void @exit(i32 1) #19
  unreachable

179:                                              ; preds = %170, %94, %11, %5, %39, %35, %34, %53, %49, %43, %17, %1
  %180 = phi i8* [ %56, %53 ], [ %52, %49 ], [ %48, %43 ], [ %2, %34 ], [ %38, %35 ], [ %42, %39 ], [ %23, %17 ], [ %2, %1 ], [ %2, %11 ], [ %2, %5 ], [ %96, %94 ], [ %172, %170 ]
  ret i8* %180
}

; Function Attrs: nounwind uwtable
define internal fastcc void @1390() unnamed_addr #0 {
  %1 = alloca [256 x i8], align 16
  %2 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %27

4:                                                ; preds = %0
  %5 = tail call i8* @sdsempty() #14
  %6 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 2), align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call i8* (i8*, i8*, ...) @sdscatfmt(i8* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1023, i64 0, i64 0), i8* nonnull %6) #14
  br label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #14
  %12 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %13 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  %14 = call i32 @anetFormatAddr(i8* nonnull %11, i64 256, i8* %12, i32 %13) #14
  %15 = call i64 @strlen(i8* nonnull %11) #17
  %16 = call i8* @sdscatlen(i8* %5, i8* nonnull %11, i64 %15) #14
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #14
  br label %17

17:                                               ; preds = %10, %8
  %18 = phi i8* [ %9, %8 ], [ %16, %10 ]
  %19 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1024, i64 0, i64 0), i32 %19) #14
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i8* [ %22, %21 ], [ %18, %17 ]
  %25 = call i8* @sdscatlen(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1025, i64 0, i64 0), i64 2) #14
  %26 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%20, %20* @756, i64 0, i32 43, i64 0), i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @841, i64 0, i64 0), i8* %25) #14
  call void @sdsfree(i8* %25) #14
  br label %27

27:                                               ; preds = %0, %23
  ret void
}

declare dso_local i32 @anetFormatAddr(i8*, i64, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i32 @fputs(i8* nocapture readonly, %1* nocapture) local_unnamed_addr #1

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @1391() unnamed_addr #12 {
  %1 = tail call fastcc i8* @1392()
  %2 = load %1*, %1** @stderr, align 8
  %3 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %2, i8* getelementptr inbounds ([2210 x i8], [2210 x i8]* @1119, i64 0, i64 0), i8* %1) #16
  %4 = load %1*, %1** @stderr, align 8
  %5 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %4, i8* getelementptr inbounds ([814 x i8], [814 x i8]* @1120, i64 0, i64 0), i32 30) #16
  %6 = load %1*, %1** @stderr, align 8
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([1440 x i8], [1440 x i8]* @1121, i64 0, i64 0), i64 1439, i64 1, %1* %6) #16
  %8 = load %1*, %1** @stderr, align 8
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([590 x i8], [590 x i8]* @1122, i64 0, i64 0), i64 589, i64 1, %1* %8) #16
  tail call void @sdsfree(i8* %1) #14
  tail call void @exit(i32 1) #19
  unreachable
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1392() unnamed_addr #0 {
  %1 = tail call i8* @sdsempty() #14
  %2 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @841, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1127, i64 0, i64 0)) #14
  %3 = tail call i8* @redisGitSHA1() #14
  %4 = tail call i64 @strtoll(i8* nocapture %3, i8** null, i32 16) #14
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %0
  %7 = tail call i8* @redisGitSHA1() #14
  %8 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1128, i64 0, i64 0), i8* %7) #14
  %9 = tail call i8* @redisGitDirty() #14
  %10 = tail call i64 @strtoll(i8* nocapture %9, i8** null, i32 10) #14
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1129, i64 0, i64 0)) #14
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi i8* [ %13, %12 ], [ %8, %6 ]
  %16 = tail call i8* @sdscat(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1130, i64 0, i64 0)) #14
  br label %17

17:                                               ; preds = %0, %14
  %18 = phi i8* [ %16, %14 ], [ %2, %0 ]
  ret i8* %18
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #6

declare dso_local i8* @redisGitSHA1() local_unnamed_addr #5

declare dso_local i8* @redisGitDirty() local_unnamed_addr #5

declare dso_local void @linenoiseMaskModeEnable() local_unnamed_addr #5

declare dso_local i8* @linenoise(i8*) local_unnamed_addr #5

declare dso_local void @linenoiseMaskModeDisable() local_unnamed_addr #5

declare dso_local %9* @redisConnectUnix(i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc void @1393(i64 %0, i64 %1, double %2, i64 %3) unnamed_addr #0 {
  %5 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  switch i32 %5, label %14 [
    i32 0, label %6
    i32 2, label %10
    i32 1, label %12
  ]

6:                                                ; preds = %4
  %7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1141, i64 0, i64 0), i64 %0, i64 %1, double %2, i64 %3)
  %8 = load %1*, %1** @stdout, align 8
  %9 = tail call i32 @fflush(%1* %8)
  br label %14

10:                                               ; preds = %4
  %11 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1142, i64 0, i64 0), i64 %0, i64 %1, double %2, i64 %3)
  br label %14

12:                                               ; preds = %4
  %13 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1143, i64 0, i64 0), i64 %0, i64 %1, double %2, i64 %3)
  br label %14

14:                                               ; preds = %4, %10, %12, %6
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%15* nocapture, %31* nocapture) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1394(i32 %0) unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  %4 = load %9*, %9** @727, align 8
  %5 = call i32 @redisGetReply(%9* %4, i8** nonnull %2) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 13), align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = load %9*, %9** @727, align 8
  call void @redisFree(%9* %11) #14
  store %9* null, %9** @727, align 8
  br label %105

12:                                               ; preds = %7
  %13 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 12), align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = load %9*, %9** @727, align 8
  %17 = getelementptr inbounds %9, %9* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %22 [
    i32 1, label %19
    i32 3, label %105
  ]

19:                                               ; preds = %15
  %20 = tail call i32* @__errno_location() #18
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %22 [
    i32 104, label %105
    i32 32, label %105
  ]

22:                                               ; preds = %15, %19, %12
  call fastcc void @1395()
  call void @exit(i32 1) #19
  unreachable

23:                                               ; preds = %1
  %24 = load i8*, i8** %2, align 8
  %25 = bitcast i8* %24 to %30*
  %26 = bitcast i8* %24 to i32*
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 49), align 8
  %28 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 21), align 8
  %29 = icmp ne i32 %28, 0
  %30 = icmp eq i32 %27, 6
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %60

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %24, i64 32
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1154, i64 0, i64 0), i64 5) #17
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1155, i64 0, i64 0)) #17
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %60

41:                                               ; preds = %38, %32
  %42 = call i8* @strchr(i8* %35, i32 32) #17
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = call i8* @strchr(i8* nonnull %43, i32 32) #17
  store i8 0, i8* %44, align 1
  %45 = call i64 @strtol(i8* nocapture nonnull %43, i8** null, i32 10) #14
  %46 = getelementptr inbounds i8, i8* %44, i64 1
  %47 = call i8* @strrchr(i8* nonnull %46, i32 58) #17
  store i8 0, i8* %47, align 1
  %48 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  call void @sdsfree(i8* %48) #14
  %49 = call i8* @sdsnew(i8* nonnull %46) #14
  store i8* %49, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = call i64 @strtol(i8* nocapture nonnull %50, i8** null, i32 10) #14
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 1), align 8
  %53 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 12), align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %41
  %56 = trunc i64 %45 to i32
  %57 = load i8*, i8** getelementptr inbounds (%20, %20* @756, i64 0, i32 0), align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1156, i64 0, i64 0), i32 %56, i8* %57, i32 %52)
  br label %59

59:                                               ; preds = %41, %55
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  call fastcc void @1390()
  br label %104

60:                                               ; preds = %23, %38
  %61 = icmp eq i32 %0, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = call fastcc i8* @1389(%30* %25)
  br label %74

64:                                               ; preds = %60
  %65 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  switch i32 %65, label %74 [
    i32 1, label %66
    i32 0, label %69
    i32 2, label %71
  ]

66:                                               ; preds = %64
  %67 = call fastcc i8* @1389(%30* %25)
  %68 = call i8* @sdscat(i8* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0)) #14
  br label %74

69:                                               ; preds = %64
  %70 = call fastcc i8* @1396(%30* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0))
  br label %74

71:                                               ; preds = %64
  %72 = call fastcc i8* @1397(%30* %25)
  %73 = call i8* @sdscat(i8* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0)) #14
  br label %74

74:                                               ; preds = %64, %66, %71, %69, %62
  %75 = phi i8* [ %63, %62 ], [ %68, %66 ], [ %70, %69 ], [ %73, %71 ], [ null, %64 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 -1
  %77 = load i8, i8* %76, align 1
  %78 = trunc i8 %77 to i3
  switch i3 %78, label %100 [
    i3 0, label %79
    i3 1, label %82
    i3 2, label %86
    i3 3, label %91
    i3 -4, label %96
  ]

79:                                               ; preds = %74
  %80 = lshr i8 %77, 3
  %81 = zext i8 %80 to i64
  br label %100

82:                                               ; preds = %74
  %83 = getelementptr inbounds i8, i8* %75, i64 -3
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  br label %100

86:                                               ; preds = %74
  %87 = getelementptr inbounds i8, i8* %75, i64 -5
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %88, align 1
  %90 = zext i16 %89 to i64
  br label %100

91:                                               ; preds = %74
  %92 = getelementptr inbounds i8, i8* %75, i64 -9
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 1
  %95 = zext i32 %94 to i64
  br label %100

96:                                               ; preds = %74
  %97 = getelementptr inbounds i8, i8* %75, i64 -17
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 1
  br label %100

100:                                              ; preds = %74, %79, %82, %86, %91, %96
  %101 = phi i64 [ %99, %96 ], [ %95, %91 ], [ %90, %86 ], [ %85, %82 ], [ %81, %79 ], [ 0, %74 ]
  %102 = load %1*, %1** @stdout, align 8
  %103 = call i64 @fwrite(i8* %75, i64 %101, i64 1, %1* %102)
  call void @sdsfree(i8* %75) #14
  br label %104

104:                                              ; preds = %59, %100
  call void @freeReplyObject(i8* %24) #14
  br label %105

105:                                              ; preds = %15, %19, %19, %104, %10
  %106 = phi i32 [ 0, %10 ], [ 0, %104 ], [ -1, %19 ], [ -1, %19 ], [ -1, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  ret i32 %106
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define internal fastcc void @1395() unnamed_addr #0 {
  %1 = load %9*, %9** @727, align 8
  %2 = icmp eq %9* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = load %1*, %1** @stderr, align 8
  %5 = getelementptr inbounds %9, %9* %1, i64 0, i32 2, i64 0
  %6 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1015, i64 0, i64 0), i8* nonnull %5) #16
  br label %7

7:                                                ; preds = %0, %3
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1396(%30* nocapture readonly %0, i8* %1) unnamed_addr #0 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = tail call i8* @sdsempty() #14
  %6 = getelementptr inbounds %30, %30* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %176 [
    i32 6, label %8
    i32 5, label %12
    i32 3, label %17
    i32 7, label %21
    i32 1, label %25
    i32 14, label %25
    i32 4, label %37
    i32 8, label %39
    i32 2, label %45
    i32 9, label %45
    i32 10, label %45
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1157, i64 0, i64 0), i8* %10) #14
  br label %179

12:                                               ; preds = %2
  %13 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i8* @sdscat(i8* %5, i8* %14) #14
  %16 = tail call i8* @sdscat(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0)) #14
  br label %179

17:                                               ; preds = %2
  %18 = getelementptr inbounds %30, %30* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1158, i64 0, i64 0), i64 %19) #14
  br label %179

21:                                               ; preds = %2
  %22 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1159, i64 0, i64 0), i8* %23) #14
  br label %179

25:                                               ; preds = %2, %2
  %26 = icmp eq i32 %7, 1
  %27 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %30, %30* %0, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  br i1 %26, label %31, label %34

31:                                               ; preds = %25
  %32 = tail call i8* @sdscatrepr(i8* %5, i8* %28, i64 %30) #14
  %33 = tail call i8* @sdscat(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0)) #14
  br label %179

34:                                               ; preds = %25
  %35 = tail call i8* @sdscatlen(i8* %5, i8* %28, i64 %30) #14
  %36 = tail call i8* @sdscat(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i64 0, i64 0)) #14
  br label %179

37:                                               ; preds = %2
  %38 = tail call i8* @sdscat(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1160, i64 0, i64 0)) #14
  br label %179

39:                                               ; preds = %2
  %40 = getelementptr inbounds %30, %30* %0, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  %43 = select i1 %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1162, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1161, i64 0, i64 0)
  %44 = tail call i8* @sdscat(i8* %5, i8* %43) #14
  br label %179

45:                                               ; preds = %2, %2, %2
  %46 = getelementptr inbounds %30, %30* %0, i64 0, i32 6
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  switch i32 %7, label %56 [
    i32 2, label %50
    i32 9, label %52
    i32 10, label %54
  ]

50:                                               ; preds = %49
  %51 = tail call i8* @sdscat(i8* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1163, i64 0, i64 0)) #14
  br label %179

52:                                               ; preds = %49
  %53 = tail call i8* @sdscat(i8* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1164, i64 0, i64 0)) #14
  br label %179

54:                                               ; preds = %49
  %55 = tail call i8* @sdscat(i8* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1165, i64 0, i64 0)) #14
  br label %179

56:                                               ; preds = %49
  %57 = tail call i8* @sdscat(i8* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1166, i64 0, i64 0)) #14
  br label %179

58:                                               ; preds = %45
  %59 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #14
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #14
  %61 = trunc i64 %47 to i32
  %62 = icmp eq i32 %7, 9
  %63 = zext i1 %62 to i32
  %64 = lshr i32 %61, %63
  br label %65

65:                                               ; preds = %65, %58
  %66 = phi i32 [ 0, %58 ], [ %68, %65 ]
  %67 = phi i32 [ %64, %58 ], [ %69, %65 ]
  %68 = add i32 %66, 1
  %69 = udiv i32 %67, 10
  %70 = icmp ugt i32 %67, 9
  br i1 %70, label %65, label %71

71:                                               ; preds = %65
  %72 = add i32 %66, 3
  %73 = zext i32 %72 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %59, i8 32, i64 %73, i1 false)
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %73
  store i8 0, i8* %74, align 1
  %75 = tail call i8* @sdsnew(i8* %1) #14
  %76 = call i8* @sdscat(i8* %75, i8* nonnull %59) #14
  %77 = load i32, i32* %6, align 8
  %78 = icmp eq i32 %77, 9
  %79 = select i1 %78, i32 35, i32 41
  %80 = icmp eq i32 %77, 10
  %81 = select i1 %80, i32 126, i32 %79
  %82 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %60, i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1167, i64 0, i64 0), i32 %68, i32 %81) #14
  %83 = load i64, i64* %46, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %174, label %85

85:                                               ; preds = %71
  %86 = getelementptr inbounds %30, %30* %0, i64 0, i32 7
  br label %87

87:                                               ; preds = %85, %167
  %88 = phi i64 [ 0, %85 ], [ %171, %167 ]
  %89 = phi i8* [ %5, %85 ], [ %169, %167 ]
  %90 = phi i32 [ 0, %85 ], [ %170, %167 ]
  %91 = load i32, i32* %6, align 8
  %92 = icmp eq i32 %91, 9
  %93 = zext i1 %92 to i32
  %94 = lshr i32 %90, %93
  %95 = add i32 %94, 1
  %96 = icmp eq i32 %90, 0
  %97 = select i1 %96, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @689, i64 0, i64 0), i8* %1
  %98 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %89, i8* nonnull %60, i8* %97, i32 %95) #14
  %99 = load %30**, %30*** %86, align 8
  %100 = getelementptr inbounds %30*, %30** %99, i64 %88
  %101 = load %30*, %30** %100, align 8
  %102 = call fastcc i8* @1396(%30* %101, i8* %76)
  %103 = getelementptr inbounds i8, i8* %102, i64 -1
  %104 = load i8, i8* %103, align 1
  %105 = trunc i8 %104 to i3
  switch i3 %105, label %127 [
    i3 0, label %106
    i3 1, label %109
    i3 2, label %113
    i3 3, label %118
    i3 -4, label %123
  ]

106:                                              ; preds = %87
  %107 = lshr i8 %104, 3
  %108 = zext i8 %107 to i64
  br label %127

109:                                              ; preds = %87
  %110 = getelementptr inbounds i8, i8* %102, i64 -3
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  br label %127

113:                                              ; preds = %87
  %114 = getelementptr inbounds i8, i8* %102, i64 -5
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 1
  %117 = zext i16 %116 to i64
  br label %127

118:                                              ; preds = %87
  %119 = getelementptr inbounds i8, i8* %102, i64 -9
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 1
  %122 = zext i32 %121 to i64
  br label %127

123:                                              ; preds = %87
  %124 = getelementptr inbounds i8, i8* %102, i64 -17
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 1
  br label %127

127:                                              ; preds = %87, %106, %109, %113, %118, %123
  %128 = phi i64 [ %126, %123 ], [ %122, %118 ], [ %117, %113 ], [ %112, %109 ], [ %108, %106 ], [ 0, %87 ]
  %129 = call i8* @sdscatlen(i8* %98, i8* %102, i64 %128) #14
  call void @sdsfree(i8* %102) #14
  %130 = load i32, i32* %6, align 8
  %131 = icmp eq i32 %130, 9
  br i1 %131, label %132, label %167

132:                                              ; preds = %127
  %133 = add i32 %90, 1
  call void @sdsrange(i8* %129, i32 0, i32 -2) #14
  %134 = call i8* @sdscat(i8* %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1168, i64 0, i64 0)) #14
  %135 = load %30**, %30*** %86, align 8
  %136 = zext i32 %133 to i64
  %137 = getelementptr inbounds %30*, %30** %135, i64 %136
  %138 = load %30*, %30** %137, align 8
  %139 = call fastcc i8* @1396(%30* %138, i8* %76)
  %140 = getelementptr inbounds i8, i8* %139, i64 -1
  %141 = load i8, i8* %140, align 1
  %142 = trunc i8 %141 to i3
  switch i3 %142, label %164 [
    i3 0, label %143
    i3 1, label %146
    i3 2, label %150
    i3 3, label %155
    i3 -4, label %160
  ]

143:                                              ; preds = %132
  %144 = lshr i8 %141, 3
  %145 = zext i8 %144 to i64
  br label %164

146:                                              ; preds = %132
  %147 = getelementptr inbounds i8, i8* %139, i64 -3
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  br label %164

150:                                              ; preds = %132
  %151 = getelementptr inbounds i8, i8* %139, i64 -5
  %152 = bitcast i8* %151 to i16*
  %153 = load i16, i16* %152, align 1
  %154 = zext i16 %153 to i64
  br label %164

155:                                              ; preds = %132
  %156 = getelementptr inbounds i8, i8* %139, i64 -9
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 1
  %159 = zext i32 %158 to i64
  br label %164

160:                                              ; preds = %132
  %161 = getelementptr inbounds i8, i8* %139, i64 -17
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 1
  br label %164

164:                                              ; preds = %132, %143, %146, %150, %155, %160
  %165 = phi i64 [ %163, %160 ], [ %159, %155 ], [ %154, %150 ], [ %149, %146 ], [ %145, %143 ], [ 0, %132 ]
  %166 = call i8* @sdscatlen(i8* %134, i8* %139, i64 %165) #14
  call void @sdsfree(i8* %139) #14
  br label %167

167:                                              ; preds = %164, %127
  %168 = phi i32 [ %133, %164 ], [ %90, %127 ]
  %169 = phi i8* [ %166, %164 ], [ %129, %127 ]
  %170 = add i32 %168, 1
  %171 = zext i32 %170 to i64
  %172 = load i64, i64* %46, align 8
  %173 = icmp ugt i64 %172, %171
  br i1 %173, label %87, label %174

174:                                              ; preds = %167, %71
  %175 = phi i8* [ %5, %71 ], [ %169, %167 ]
  call void @sdsfree(i8* %76) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #14
  br label %179

176:                                              ; preds = %2
  %177 = load %1*, %1** @stderr, align 8
  %178 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %177, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1022, i64 0, i64 0), i32 %7) #16
  tail call void @exit(i32 1) #19
  unreachable

179:                                              ; preds = %174, %52, %56, %54, %50, %31, %34, %39, %37, %21, %17, %12, %8
  %180 = phi i8* [ %51, %50 ], [ %53, %52 ], [ %55, %54 ], [ %57, %56 ], [ %175, %174 ], [ %44, %39 ], [ %38, %37 ], [ %33, %31 ], [ %36, %34 ], [ %24, %21 ], [ %20, %17 ], [ %16, %12 ], [ %11, %8 ]
  ret i8* %180
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @1397(%30* nocapture readonly %0) unnamed_addr #0 {
  %2 = tail call i8* @sdsempty() #14
  %3 = getelementptr inbounds %30, %30* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %91 [
    i32 6, label %5
    i32 5, label %11
    i32 3, label %17
    i32 7, label %21
    i32 1, label %25
    i32 14, label %25
    i32 4, label %31
    i32 8, label %33
    i32 2, label %39
    i32 9, label %39
  ]

5:                                                ; preds = %1
  %6 = tail call i8* @sdscat(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1169, i64 0, i64 0)) #14
  %7 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i64 @strlen(i8* %8) #17
  %10 = tail call i8* @sdscatrepr(i8* %6, i8* %8, i64 %9) #14
  br label %94

11:                                               ; preds = %1
  %12 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %30, %30* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = tail call i8* @sdscatrepr(i8* %2, i8* %13, i64 %15) #14
  br label %94

17:                                               ; preds = %1
  %18 = getelementptr inbounds %30, %30* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1021, i64 0, i64 0), i64 %19) #14
  br label %94

21:                                               ; preds = %1
  %22 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @841, i64 0, i64 0), i8* %23) #14
  br label %94

25:                                               ; preds = %1, %1
  %26 = getelementptr inbounds %30, %30* %0, i64 0, i32 4
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %30, %30* %0, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = tail call i8* @sdscatrepr(i8* %2, i8* %27, i64 %29) #14
  br label %94

31:                                               ; preds = %1
  %32 = tail call i8* @sdscat(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1170, i64 0, i64 0)) #14
  br label %94

33:                                               ; preds = %1
  %34 = getelementptr inbounds %30, %30* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  %37 = select i1 %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1172, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1171, i64 0, i64 0)
  %38 = tail call i8* @sdscat(i8* %2, i8* %37) #14
  br label %94

39:                                               ; preds = %1, %1
  %40 = getelementptr inbounds %30, %30* %0, i64 0, i32 6
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %94, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %30, %30* %0, i64 0, i32 7
  br label %45

45:                                               ; preds = %43, %85
  %46 = phi i64 [ 0, %43 ], [ %88, %85 ]
  %47 = phi i32 [ 0, %43 ], [ %87, %85 ]
  %48 = phi i8* [ %2, %43 ], [ %86, %85 ]
  %49 = load %30**, %30*** %44, align 8
  %50 = getelementptr inbounds %30*, %30** %49, i64 %46
  %51 = load %30*, %30** %50, align 8
  %52 = tail call fastcc i8* @1397(%30* %51)
  %53 = getelementptr inbounds i8, i8* %52, i64 -1
  %54 = load i8, i8* %53, align 1
  %55 = trunc i8 %54 to i3
  switch i3 %55, label %77 [
    i3 0, label %56
    i3 1, label %59
    i3 2, label %63
    i3 3, label %68
    i3 -4, label %73
  ]

56:                                               ; preds = %45
  %57 = lshr i8 %54, 3
  %58 = zext i8 %57 to i64
  br label %77

59:                                               ; preds = %45
  %60 = getelementptr inbounds i8, i8* %52, i64 -3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  br label %77

63:                                               ; preds = %45
  %64 = getelementptr inbounds i8, i8* %52, i64 -5
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 1
  %67 = zext i16 %66 to i64
  br label %77

68:                                               ; preds = %45
  %69 = getelementptr inbounds i8, i8* %52, i64 -9
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  %72 = zext i32 %71 to i64
  br label %77

73:                                               ; preds = %45
  %74 = getelementptr inbounds i8, i8* %52, i64 -17
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 1
  br label %77

77:                                               ; preds = %45, %56, %59, %63, %68, %73
  %78 = phi i64 [ %76, %73 ], [ %72, %68 ], [ %67, %63 ], [ %62, %59 ], [ %58, %56 ], [ 0, %45 ]
  %79 = tail call i8* @sdscatlen(i8* %48, i8* %52, i64 %78) #14
  %80 = load i64, i64* %40, align 8
  %81 = add i64 %80, -1
  %82 = icmp eq i64 %81, %46
  br i1 %82, label %85, label %83

83:                                               ; preds = %77
  %84 = tail call i8* @sdscat(i8* %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @824, i64 0, i64 0)) #14
  br label %85

85:                                               ; preds = %77, %83
  %86 = phi i8* [ %84, %83 ], [ %79, %77 ]
  tail call void @sdsfree(i8* %52) #14
  %87 = add i32 %47, 1
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* %40, align 8
  %90 = icmp ugt i64 %89, %88
  br i1 %90, label %45, label %94

91:                                               ; preds = %1
  %92 = load %1*, %1** @stderr, align 8
  %93 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %92, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1022, i64 0, i64 0), i32 %4) #16
  tail call void @exit(i32 1) #19
  unreachable

94:                                               ; preds = %85, %39, %33, %31, %25, %21, %17, %11, %5
  %95 = phi i8* [ %38, %33 ], [ %32, %31 ], [ %30, %25 ], [ %24, %21 ], [ %20, %17 ], [ %16, %11 ], [ %10, %5 ], [ %2, %39 ], [ %86, %85 ]
  ret i8* %95
}

; Function Attrs: nounwind
declare dso_local i64 @fwrite(i8* nocapture, i64, i64, %1* nocapture) local_unnamed_addr #1

declare dso_local i8* @sdscatrepr(i8*, i8*, i64) local_unnamed_addr #5

declare dso_local void @sdsrange(i8*, i32, i32) local_unnamed_addr #5

declare dso_local i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local i32 @ftruncate64(i32, i64) local_unnamed_addr #1

declare dso_local i32 @close(i32) local_unnamed_addr #5

declare dso_local i32 @fsync(i32) local_unnamed_addr #5

declare dso_local %12* @redisReaderCreate() local_unnamed_addr #5

declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #5

declare dso_local i32 @aeWait(i32, i32, i64) local_unnamed_addr #5

declare dso_local i32 @redisReaderFeed(%12*, i8*, i64) local_unnamed_addr #5

declare dso_local i32 @redisReaderGetReply(%12*, i8**) local_unnamed_addr #5

declare dso_local void @redisReaderFree(%12*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc %30* @1398(i64* nocapture %0) unnamed_addr #0 {
  %2 = load %9*, %9** @727, align 8
  %3 = load i64, i64* %0, align 8
  %4 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1208, i64 0, i64 0), i64 %3) #14
  %5 = bitcast i8* %4 to %30*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = load %1*, %1** @stderr, align 8
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @729, i64 0, i64 0), i64 11, i64 1, %1* %8) #16
  tail call void @exit(i32 1) #19
  unreachable

10:                                               ; preds = %1
  %11 = bitcast i8* %4 to i32*
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %19 [
    i32 6, label %13
    i32 2, label %22
  ]

13:                                               ; preds = %10
  %14 = load %1*, %1** @stderr, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 32
  %16 = bitcast i8* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 (%1*, i8*, ...) @fprintf(%1* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1209, i64 0, i64 0), i8* %17) #16
  tail call void @exit(i32 1) #19
  unreachable

19:                                               ; preds = %10
  %20 = load %1*, %1** @stderr, align 8
  %21 = tail call i64 @fwrite(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1210, i64 0, i64 0), i64 30, i64 1, %1* %20) #16
  tail call void @exit(i32 1) #19
  unreachable

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %4, i64 48
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 2
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = load %1*, %1** @stderr, align 8
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @1211, i64 0, i64 0), i64 33, i64 1, %1* %28) #16
  tail call void @exit(i32 1) #19
  unreachable

30:                                               ; preds = %22
  %31 = getelementptr inbounds i8, i8* %4, i64 56
  %32 = bitcast i8* %31 to %30***
  %33 = load %30**, %30*** %32, align 8
  %34 = load %30*, %30** %33, align 8
  %35 = getelementptr inbounds %30, %30* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %39, label %38

38:                                               ; preds = %30
  tail call void @__assert_fail(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1212, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 7159, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @1213, i64 0, i64 0)) #19
  unreachable

39:                                               ; preds = %30
  %40 = getelementptr inbounds %30*, %30** %33, i64 1
  %41 = load %30*, %30** %40, align 8
  %42 = getelementptr inbounds %30, %30* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  tail call void @__assert_fail(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1214, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 7160, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @1213, i64 0, i64 0)) #19
  unreachable

46:                                               ; preds = %39
  %47 = getelementptr inbounds %30, %30* %34, i64 0, i32 4
  %48 = load i8*, i8** %47, align 8
  %49 = tail call i64 @strtoull(i8* nocapture %48, i8** null, i32 10) #14
  store i64 %49, i64* %0, align 8
  ret %30* %5
}

declare dso_local i32 @redisAppendCommand(%9*, i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind
declare dso_local i32 @getpid() local_unnamed_addr #1

; Function Attrs: norecurse nounwind uwtable
define internal void @1399(i32 %0) #15 {
  store volatile i32 1, i32* @1258, align 4
  ret void
}

declare dso_local void @linenoiseSetMultiLine(i32) local_unnamed_addr #5

declare dso_local void @linenoiseSetCompletionCallback(void (i8*, %34*)*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal void @1400(i8* %0, %34* %1) #0 {
  %3 = tail call i32 @strncasecmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1296, i64 0, i64 0), i64 5) #17
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = tail call i16** @__ctype_b_loc() #18
  %7 = load i16*, i16** %6, align 8
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi i64 [ %17, %8 ], [ 5, %5 ]
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i64
  %13 = getelementptr inbounds i16, i16* %7, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = and i16 %14, 8192
  %16 = icmp eq i16 %15, 0
  %17 = add i64 %9, 1
  br i1 %16, label %18, label %8

18:                                               ; preds = %8, %2
  %19 = phi i32 [ 1, %2 ], [ 3, %8 ]
  %20 = phi i64 [ 0, %2 ], [ %9, %8 ]
  %21 = load i32, i32* @1277, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %51

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %0, i64 %20
  br label %25

25:                                               ; preds = %23, %46
  %26 = phi i32 [ %21, %23 ], [ %47, %46 ]
  %27 = phi i64 [ 0, %23 ], [ %48, %46 ]
  %28 = load %23*, %23** @1278, align 8
  %29 = getelementptr inbounds %23, %23* %28, i64 %27, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, %19
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %25
  %34 = tail call i64 @strlen(i8* %24) #17
  %35 = getelementptr inbounds %23, %23* %28, i64 %27, i32 3
  %36 = load i8*, i8** %35, align 8
  %37 = tail call i32 @strncasecmp(i8* %24, i8* %36, i64 %34) #17
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = tail call i8* @sdsnewlen(i8* %0, i64 %20) #14
  %41 = load %23*, %23** @1278, align 8
  %42 = getelementptr inbounds %23, %23* %41, i64 %27, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = tail call i8* @sdscat(i8* %40, i8* %43) #14
  tail call void @linenoiseAddCompletion(%34* %1, i8* %44) #14
  tail call void @sdsfree(i8* %44) #14
  %45 = load i32, i32* @1277, align 4
  br label %46

46:                                               ; preds = %25, %33, %39
  %47 = phi i32 [ %26, %25 ], [ %26, %33 ], [ %45, %39 ]
  %48 = add nuw nsw i64 %27, 1
  %49 = sext i32 %47 to i64
  %50 = icmp slt i64 %48, %49
  br i1 %50, label %25, label %51

51:                                               ; preds = %46, %18
  ret void
}

declare dso_local void @linenoiseSetHintsCallback(i8* (i8*, i32*, i32*)*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal i8* @1401(i8* %0, i32* nocapture %1, i32* nocapture %2) #0 {
  %4 = alloca i32, align 4
  %5 = load i1, i1* @.0, align 4
  br i1 %5, label %6, label %111

6:                                                ; preds = %3
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14
  %8 = tail call i64 @strlen(i8* %0) #17
  %9 = trunc i64 %8 to i32
  %10 = call i8** @sdssplitargs(i8* %0, i32* nonnull %4) #14
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %6
  %13 = tail call i16** @__ctype_b_loc() #18
  %14 = load i16*, i16** %13, align 8
  %15 = shl i64 %8, 32
  %16 = add i64 %15, -4294967296
  %17 = ashr exact i64 %16, 32
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i64
  %21 = getelementptr inbounds i16, i16* %14, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 8192
  %24 = icmp ne i16 %23, 0
  br label %25

25:                                               ; preds = %6, %12
  %26 = phi i1 [ false, %6 ], [ %24, %12 ]
  %27 = load i32, i32* %4, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* @1277, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %108

32:                                               ; preds = %29
  %33 = load %23*, %23** @1278, align 8
  %34 = sext i32 %30 to i64
  br label %36

35:                                               ; preds = %25
  call void @sdsfreesplitres(i8** %10, i32 0) #14
  br label %109

36:                                               ; preds = %32, %105
  %37 = phi i64 [ 0, %32 ], [ %106, %105 ]
  %38 = getelementptr inbounds %23, %23* %33, i64 %37, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %105, label %42

42:                                               ; preds = %36
  %43 = load i8*, i8** %10, align 8
  %44 = getelementptr inbounds %23, %23* %33, i64 %37, i32 3
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @strcasecmp(i8* %43, i8* %45) #17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = call i32 @strcasecmp(i8* %0, i8* %45) #17
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %105

51:                                               ; preds = %48, %42
  %52 = and i64 %37, 4294967295
  store i32 90, i32* %1, align 4
  store i32 0, i32* %2, align 4
  %53 = getelementptr inbounds %23, %23* %33, i64 %52, i32 4
  %54 = load %0*, %0** %53, align 8
  %55 = getelementptr inbounds %0, %0* %54, i64 0, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = call i8* @sdsnew(i8* %56) #14
  %58 = load i32, i32* %4, align 4
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %60, label %98

60:                                               ; preds = %51
  %61 = add nsw i32 %58, -1
  %62 = getelementptr inbounds i8, i8* %57, i64 -1
  %63 = getelementptr inbounds i8, i8* %57, i64 -3
  %64 = getelementptr inbounds i8, i8* %57, i64 -5
  %65 = bitcast i8* %64 to i16*
  %66 = getelementptr inbounds i8, i8* %57, i64 -9
  %67 = bitcast i8* %66 to i32*
  %68 = getelementptr inbounds i8, i8* %57, i64 -17
  %69 = bitcast i8* %68 to i64*
  br label %70

70:                                               ; preds = %60, %95
  %71 = phi i32 [ %61, %60 ], [ %96, %95 ]
  %72 = load i8, i8* %62, align 1
  %73 = trunc i8 %72 to i3
  switch i3 %73, label %98 [
    i3 0, label %74
    i3 1, label %77
    i3 2, label %80
    i3 3, label %83
    i3 -4, label %86
  ]

74:                                               ; preds = %70
  %75 = lshr i8 %72, 3
  %76 = zext i8 %75 to i64
  br label %88

77:                                               ; preds = %70
  %78 = load i8, i8* %63, align 1
  %79 = zext i8 %78 to i64
  br label %88

80:                                               ; preds = %70
  %81 = load i16, i16* %65, align 1
  %82 = zext i16 %81 to i64
  br label %88

83:                                               ; preds = %70
  %84 = load i32, i32* %67, align 1
  %85 = zext i32 %84 to i64
  br label %88

86:                                               ; preds = %70
  %87 = load i64, i64* %69, align 1
  br label %88

88:                                               ; preds = %74, %77, %80, %83, %86
  %89 = phi i64 [ %87, %86 ], [ %85, %83 ], [ %82, %80 ], [ %79, %77 ], [ %76, %74 ]
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %88
  %92 = load i8, i8* %57, align 1
  switch i8 %92, label %95 [
    i8 91, label %98
    i8 32, label %93
  ]

93:                                               ; preds = %91
  %94 = add nsw i32 %71, -1
  br label %95

95:                                               ; preds = %91, %93
  %96 = phi i32 [ %94, %93 ], [ %71, %91 ]
  call void @sdsrange(i8* nonnull %57, i32 1, i32 -1) #14
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %70, label %98

98:                                               ; preds = %95, %88, %91, %70, %51
  br i1 %26, label %102, label %99

99:                                               ; preds = %98
  %100 = call i8* @sdsnewlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @817, i64 0, i64 0), i64 1) #14
  %101 = call i8* @sdscatsds(i8* %100, i8* %57) #14
  call void @sdsfree(i8* %57) #14
  br label %102

102:                                              ; preds = %99, %98
  %103 = phi i8* [ %57, %98 ], [ %101, %99 ]
  %104 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** %10, i32 %104) #14
  br label %109

105:                                              ; preds = %36, %48
  %106 = add nuw nsw i64 %37, 1
  %107 = icmp slt i64 %106, %34
  br i1 %107, label %36, label %108

108:                                              ; preds = %105, %29
  call void @sdsfreesplitres(i8** %10, i32 %27) #14
  br label %109

109:                                              ; preds = %108, %102, %35
  %110 = phi i8* [ null, %35 ], [ %103, %102 ], [ null, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14
  br label %111

111:                                              ; preds = %3, %109
  %112 = phi i8* [ %110, %109 ], [ null, %3 ]
  ret i8* %112
}

declare dso_local void @linenoiseSetFreeHintsCallback(void (i8*)*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal void @1402(i8* %0) #0 {
  tail call void @sdsfree(i8* %0) #14
  ret void
}

declare dso_local i32 @linenoiseHistoryLoad(i8*) local_unnamed_addr #5

declare dso_local void @linenoiseFree(i8*) local_unnamed_addr #5

declare dso_local i32 @linenoiseHistoryAdd(i8*) local_unnamed_addr #5

declare dso_local i32 @linenoiseHistorySave(i8*) local_unnamed_addr #5

declare dso_local void @linenoiseClearScreen() local_unnamed_addr #5

declare dso_local void @sdstoupper(i8*) local_unnamed_addr #5

declare dso_local void @linenoiseAddCompletion(%34*, i8*) local_unnamed_addr #5

declare dso_local i8* @sdscatsds(i8*, i8*) local_unnamed_addr #5

declare dso_local i8* @sds_malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc i32 @1403(i32 %0, i8** %1, i64 %2) unnamed_addr #0 {
  %4 = load i8*, i8** %1, align 8
  %5 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %173

7:                                                ; preds = %3
  %8 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @721, i64 0, i64 0)) #17
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @750, i64 0, i64 0)) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %173

13:                                               ; preds = %10, %7
  %14 = add nsw i32 %0, -1
  %15 = getelementptr inbounds i8*, i8** %1, i64 1
  %16 = icmp eq i32 %14, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call fastcc i8* @1392() #14
  %19 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([385 x i8], [385 x i8]* @1321, i64 0, i64 0), i8* %18) #14
  tail call void @sdsfree(i8* %18) #14
  br label %487

20:                                               ; preds = %13
  %21 = icmp sgt i32 %0, 1
  br i1 %21, label %22, label %99

22:                                               ; preds = %20
  %23 = load i8*, i8** %15, align 8
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 64
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1281, i64 0, i64 0)) #17
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @738, i64 0, i64 0)) #17
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %133

33:                                               ; preds = %169, %166, %163, %160, %157, %154, %151, %148, %145, %142, %139, %136, %133, %30, %26, %22
  %34 = phi i32 [ -1, %22 ], [ 0, %26 ], [ 1, %30 ], [ 2, %133 ], [ 3, %136 ], [ 4, %139 ], [ 5, %142 ], [ 6, %145 ], [ 7, %148 ], [ 8, %151 ], [ 9, %154 ], [ 10, %157 ], [ 11, %160 ], [ 12, %163 ], [ 13, %166 ], [ %172, %169 ]
  %35 = load i32, i32* @1277, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %131

37:                                               ; preds = %33
  %38 = icmp eq i32 %34, -1
  br i1 %38, label %39, label %100

39:                                               ; preds = %37
  %40 = sext i32 %14 to i64
  br label %41

41:                                               ; preds = %87, %39
  %42 = phi i32 [ %35, %39 ], [ %88, %87 ]
  %43 = phi i64 [ 0, %39 ], [ %89, %87 ]
  %44 = load %23*, %23** @1278, align 8
  %45 = getelementptr inbounds %23, %23* %44, i64 %43, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %87

48:                                               ; preds = %41
  %49 = getelementptr inbounds %23, %23* %44, i64 %43, i32 4
  %50 = load %0*, %0** %49, align 8
  %51 = getelementptr inbounds %23, %23* %44, i64 %43, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %14
  br i1 %53, label %96, label %87

54:                                               ; preds = %96, %92
  %55 = phi i64 [ 0, %96 ], [ %93, %92 ]
  %56 = phi i32 [ 0, %96 ], [ %94, %92 ]
  %57 = getelementptr inbounds i8*, i8** %15, i64 %55
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8*, i8** %98, i64 %55
  %60 = load i8*, i8** %59, align 8
  %61 = tail call i32 @strcasecmp(i8* %58, i8* %60) #17
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %92, label %63

63:                                               ; preds = %54
  %64 = trunc i64 %55 to i32
  br label %65

65:                                               ; preds = %92, %63
  %66 = phi i32 [ %64, %63 ], [ %94, %92 ]
  %67 = icmp eq i32 %66, %14
  br i1 %67, label %68, label %87

68:                                               ; preds = %65
  %69 = getelementptr inbounds %0, %0* %50, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %0, %0* %50, i64 0, i32 1
  %72 = load i8*, i8** %71, align 8
  %73 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1322, i64 0, i64 0), i8* %70, i8* %72) #14
  %74 = getelementptr inbounds %0, %0* %50, i64 0, i32 2
  %75 = load i8*, i8** %74, align 8
  %76 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1323, i64 0, i64 0), i8* %75) #14
  %77 = getelementptr inbounds %0, %0* %50, i64 0, i32 4
  %78 = load i8*, i8** %77, align 8
  %79 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1324, i64 0, i64 0), i8* %78) #14
  %80 = getelementptr inbounds %0, %0* %50, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [15 x i8*], [15 x i8*]* @1280, i64 0, i64 %82
  %84 = load i8*, i8** %83, align 8
  %85 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1325, i64 0, i64 0), i8* %84) #14
  %86 = load i32, i32* @1277, align 4
  br label %87

87:                                               ; preds = %68, %65, %48, %41
  %88 = phi i32 [ %86, %68 ], [ %42, %65 ], [ %42, %48 ], [ %42, %41 ]
  %89 = add nuw nsw i64 %43, 1
  %90 = sext i32 %88 to i64
  %91 = icmp slt i64 %89, %90
  br i1 %91, label %41, label %131

92:                                               ; preds = %54
  %93 = add nuw nsw i64 %55, 1
  %94 = add nuw nsw i32 %56, 1
  %95 = icmp slt i64 %93, %40
  br i1 %95, label %54, label %65

96:                                               ; preds = %48
  %97 = getelementptr inbounds %23, %23* %44, i64 %43, i32 2
  %98 = load i8**, i8*** %97, align 8
  br label %54

99:                                               ; preds = %20
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1319, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @802, i64 0, i64 0), i32 631, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1320, i64 0, i64 0)) #19
  unreachable

100:                                              ; preds = %37, %126
  %101 = phi i32 [ %127, %126 ], [ %35, %37 ]
  %102 = phi i64 [ %128, %126 ], [ 0, %37 ]
  %103 = load %23*, %23** @1278, align 8
  %104 = getelementptr inbounds %23, %23* %103, i64 %102, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %126

107:                                              ; preds = %100
  %108 = getelementptr inbounds %23, %23* %103, i64 %102, i32 4
  %109 = load %0*, %0** %108, align 8
  %110 = getelementptr inbounds %0, %0* %109, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %34, %111
  br i1 %112, label %113, label %126

113:                                              ; preds = %107
  %114 = getelementptr inbounds %0, %0* %109, i64 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %0, %0* %109, i64 0, i32 1
  %117 = load i8*, i8** %116, align 8
  %118 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1322, i64 0, i64 0), i8* %115, i8* %117) #14
  %119 = getelementptr inbounds %0, %0* %109, i64 0, i32 2
  %120 = load i8*, i8** %119, align 8
  %121 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1323, i64 0, i64 0), i8* %120) #14
  %122 = getelementptr inbounds %0, %0* %109, i64 0, i32 4
  %123 = load i8*, i8** %122, align 8
  %124 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1324, i64 0, i64 0), i8* %123) #14
  %125 = load i32, i32* @1277, align 4
  br label %126

126:                                              ; preds = %113, %107, %100
  %127 = phi i32 [ %101, %100 ], [ %125, %113 ], [ %101, %107 ]
  %128 = add nuw nsw i64 %102, 1
  %129 = sext i32 %127 to i64
  %130 = icmp slt i64 %128, %129
  br i1 %130, label %100, label %131

131:                                              ; preds = %126, %87, %33
  %132 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.38, i64 0, i64 0)) #14
  br label %487

133:                                              ; preds = %30
  %134 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @740, i64 0, i64 0)) #17
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %33, label %136

136:                                              ; preds = %133
  %137 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @742, i64 0, i64 0)) #17
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %33, label %139

139:                                              ; preds = %136
  %140 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1282, i64 0, i64 0)) #17
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %33, label %142

142:                                              ; preds = %139
  %143 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @744, i64 0, i64 0)) #17
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %33, label %145

145:                                              ; preds = %142
  %146 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1283, i64 0, i64 0)) #17
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %33, label %148

148:                                              ; preds = %145
  %149 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1284, i64 0, i64 0)) #17
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %33, label %151

151:                                              ; preds = %148
  %152 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1285, i64 0, i64 0)) #17
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %33, label %154

154:                                              ; preds = %151
  %155 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1286, i64 0, i64 0)) #17
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %33, label %157

157:                                              ; preds = %154
  %158 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1287, i64 0, i64 0)) #17
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %33, label %160

160:                                              ; preds = %157
  %161 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1288, i64 0, i64 0)) #17
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %33, label %163

163:                                              ; preds = %160
  %164 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1289, i64 0, i64 0)) #17
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %33, label %166

166:                                              ; preds = %163
  %167 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1290, i64 0, i64 0)) #17
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %33, label %169

169:                                              ; preds = %166
  %170 = tail call i32 @strcasecmp(i8* nonnull %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i64 0, i64 0)) #17
  %171 = icmp eq i32 %170, 0
  %172 = select i1 %171, i32 14, i32 -1
  br label %33

173:                                              ; preds = %10, %3
  %174 = load %9*, %9** @727, align 8
  %175 = icmp eq %9* %174, null
  br i1 %175, label %487, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @701, i64 0, i64 0)) #17
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %254, label %179

179:                                              ; preds = %176
  %180 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1299, i64 0, i64 0)) #17
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %254, label %182

182:                                              ; preds = %179
  %183 = icmp sgt i32 %0, 1
  br i1 %183, label %184, label %255

184:                                              ; preds = %182
  %185 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1300, i64 0, i64 0)) #17
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %195

187:                                              ; preds = %184
  %188 = getelementptr inbounds i8*, i8** %1, i64 1
  %189 = load i8*, i8** %188, align 8
  %190 = tail call i32 @strcasecmp(i8* %189, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1301, i64 0, i64 0)) #17
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %254, label %192

192:                                              ; preds = %187
  %193 = tail call i32 @strcasecmp(i8* %189, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1302, i64 0, i64 0)) #17
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %254, label %195

195:                                              ; preds = %192, %184
  %196 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1303, i64 0, i64 0)) #17
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %206

198:                                              ; preds = %195
  %199 = getelementptr inbounds i8*, i8** %1, i64 1
  %200 = load i8*, i8** %199, align 8
  %201 = tail call i32 @strcasecmp(i8* %200, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1304, i64 0, i64 0)) #17
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %254, label %203

203:                                              ; preds = %198
  %204 = tail call i32 @strcasecmp(i8* %200, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1305, i64 0, i64 0)) #17
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %254, label %206

206:                                              ; preds = %203, %195
  %207 = icmp eq i32 %0, 2
  br i1 %207, label %208, label %219

208:                                              ; preds = %206
  %209 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1289, i64 0, i64 0)) #17
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %219

211:                                              ; preds = %208
  %212 = getelementptr inbounds i8*, i8** %1, i64 1
  %213 = load i8*, i8** %212, align 8
  %214 = tail call i32 @strcasecmp(i8* %213, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1306, i64 0, i64 0)) #17
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %254, label %216

216:                                              ; preds = %211
  %217 = tail call i32 @strcasecmp(i8* %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @701, i64 0, i64 0)) #17
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %254, label %219

219:                                              ; preds = %216, %208, %206
  %220 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1307, i64 0, i64 0)) #17
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %219
  %223 = getelementptr inbounds i8*, i8** %1, i64 1
  %224 = load i8*, i8** %223, align 8
  %225 = tail call i32 @strcasecmp(i8* %224, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @740, i64 0, i64 0)) #17
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %254, label %227

227:                                              ; preds = %222, %219
  %228 = icmp eq i32 %0, 3
  br i1 %228, label %229, label %237

229:                                              ; preds = %227
  %230 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1308, i64 0, i64 0)) #17
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %237

232:                                              ; preds = %229
  %233 = getelementptr inbounds i8*, i8** %1, i64 1
  %234 = load i8*, i8** %233, align 8
  %235 = tail call i32 @strcasecmp(i8* %234, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1309, i64 0, i64 0)) #17
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %254, label %237

237:                                              ; preds = %232, %229, %227
  br i1 %207, label %238, label %246

238:                                              ; preds = %237
  %239 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1308, i64 0, i64 0)) #17
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %238
  %242 = getelementptr inbounds i8*, i8** %1, i64 1
  %243 = load i8*, i8** %242, align 8
  %244 = tail call i32 @strcasecmp(i8* %243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1305, i64 0, i64 0)) #17
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %254, label %246

246:                                              ; preds = %237, %238, %241
  %247 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1310, i64 0, i64 0)) #17
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %255

249:                                              ; preds = %246
  %250 = getelementptr inbounds i8*, i8** %1, i64 1
  %251 = load i8*, i8** %250, align 8
  %252 = tail call i32 @strcasecmp(i8* %251, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @701, i64 0, i64 0)) #17
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %187, %192, %203, %198, %216, %211, %222, %232, %241, %249, %179, %176
  br label %255

255:                                              ; preds = %182, %249, %246, %254
  %256 = phi i32 [ 0, %246 ], [ 0, %249 ], [ 1, %254 ], [ 0, %182 ]
  %257 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1311, i64 0, i64 0)) #17
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %255
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 13), align 8
  br label %260

260:                                              ; preds = %255, %259
  %261 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1312, i64 0, i64 0)) #17
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 14), align 4
  br label %264

264:                                              ; preds = %260, %263
  %265 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1313, i64 0, i64 0)) #17
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %270, label %267

267:                                              ; preds = %264
  %268 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1314, i64 0, i64 0)) #17
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267, %264
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 15), align 8
  br label %271

271:                                              ; preds = %267, %270
  %272 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1315, i64 0, i64 0)) #17
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %271
  %275 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1316, i64 0, i64 0)) #17
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274, %271
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  br label %278

278:                                              ; preds = %274, %277
  %279 = icmp eq i32 %0, 3
  br i1 %279, label %280, label %298

280:                                              ; preds = %278
  %281 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @478, i64 0, i64 0)) #17
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %298

283:                                              ; preds = %280
  %284 = getelementptr inbounds i8*, i8** %1, i64 1
  %285 = load i8*, i8** %284, align 8
  %286 = tail call i32 @strcasecmp(i8* %285, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1300, i64 0, i64 0)) #17
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %298

288:                                              ; preds = %283
  %289 = getelementptr inbounds i8*, i8** %1, i64 2
  %290 = load i8*, i8** %289, align 8
  %291 = tail call i32 @strcasecmp(i8* %290, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @830, i64 0, i64 0)) #17
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %296, label %293

293:                                              ; preds = %288
  %294 = tail call i32 @strcasecmp(i8* %290, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1315, i64 0, i64 0)) #17
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293, %288
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 48), align 4
  br label %298

297:                                              ; preds = %293
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 48), align 4
  br label %298

298:                                              ; preds = %283, %280, %296, %297, %278
  %299 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1317, i64 0, i64 0)) #17
  %300 = icmp eq i32 %299, 0
  %301 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 48), align 4
  %302 = icmp ne i32 %301, 0
  %303 = and i1 %300, %302
  br i1 %303, label %304, label %305

304:                                              ; preds = %298
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  br label %305

305:                                              ; preds = %298, %304
  %306 = sext i32 %0 to i64
  %307 = shl nsw i64 %306, 3
  %308 = tail call i8* @zmalloc(i64 %307) #14
  %309 = bitcast i8* %308 to i64*
  %310 = icmp sgt i32 %0, 0
  br i1 %310, label %314, label %311

311:                                              ; preds = %305
  %312 = or i32 %0, 1
  %313 = icmp eq i32 %312, 3
  br label %321

314:                                              ; preds = %305
  %315 = zext i32 %0 to i64
  br label %386

316:                                              ; preds = %414
  %317 = icmp eq i32 %0, 2
  %318 = getelementptr inbounds i8*, i8** %1, i64 1
  %319 = or i32 %0, 1
  %320 = icmp eq i32 %319, 3
  br i1 %317, label %323, label %321

321:                                              ; preds = %311, %316
  %322 = phi i1 [ %313, %311 ], [ %320, %316 ]
  br label %419

323:                                              ; preds = %316, %383
  %324 = phi i64 [ %330, %383 ], [ %2, %316 ]
  %325 = icmp slt i64 %324, 0
  br i1 %325, label %329, label %326

326:                                              ; preds = %323
  %327 = add nsw i64 %324, -1
  %328 = icmp eq i64 %324, 0
  br i1 %328, label %486, label %329

329:                                              ; preds = %326, %323
  %330 = phi i64 [ %324, %323 ], [ %327, %326 ]
  %331 = load %9*, %9** @727, align 8
  %332 = tail call i32 @redisAppendCommandArgv(%9* %331, i32 2, i8** %1, i64* %309) #14
  %333 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 14), align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %343, label %335

335:                                              ; preds = %329, %338
  %336 = tail call fastcc i32 @1394(i32 %256)
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %434

338:                                              ; preds = %335
  %339 = load %1*, %1** @stdout, align 8
  %340 = tail call i32 @fflush(%1* %339)
  %341 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 14), align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %335

343:                                              ; preds = %338, %329
  %344 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 15), align 8
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %443

346:                                              ; preds = %343
  %347 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %456

349:                                              ; preds = %346
  %350 = tail call fastcc i32 @1394(i32 %256)
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %461

352:                                              ; preds = %349
  %353 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1318, i64 0, i64 0)) #17
  %354 = icmp eq i32 %353, 0
  %355 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 49), align 8
  %356 = icmp ne i32 %355, 6
  %357 = and i1 %354, %356
  br i1 %357, label %370, label %358

358:                                              ; preds = %352
  %359 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1265, i64 0, i64 0)) #17
  %360 = icmp eq i32 %359, 0
  %361 = and i1 %320, %360
  br i1 %361, label %362, label %374

362:                                              ; preds = %358
  %363 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %374, label %365

365:                                              ; preds = %362
  %366 = load %9*, %9** @727, align 8
  %367 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %366, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1137, i64 0, i64 0), i32 %363) #14
  %368 = icmp eq i8* %367, null
  br i1 %368, label %374, label %369

369:                                              ; preds = %365
  tail call void @freeReplyObject(i8* nonnull %367) #14
  br label %374

370:                                              ; preds = %352
  %371 = load i8*, i8** %318, align 8
  %372 = tail call i64 @strtol(i8* nocapture nonnull %371, i8** null, i32 10) #14
  %373 = trunc i64 %372 to i32
  store i32 %373, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  tail call fastcc void @1390()
  br label %374

374:                                              ; preds = %370, %369, %365, %362, %358
  %375 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %486

377:                                              ; preds = %374
  %378 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %377
  %381 = trunc i64 %378 to i32
  %382 = tail call i32 @usleep(i32 %381) #14
  br label %383

383:                                              ; preds = %380, %377
  %384 = load %1*, %1** @stdout, align 8
  %385 = tail call i32 @fflush(%1* %384)
  br label %323

386:                                              ; preds = %414, %314
  %387 = phi i64 [ 0, %314 ], [ %417, %414 ]
  %388 = getelementptr inbounds i8*, i8** %1, i64 %387
  %389 = load i8*, i8** %388, align 8
  %390 = getelementptr inbounds i8, i8* %389, i64 -1
  %391 = load i8, i8* %390, align 1
  %392 = trunc i8 %391 to i3
  switch i3 %392, label %414 [
    i3 0, label %393
    i3 1, label %396
    i3 2, label %400
    i3 3, label %405
    i3 -4, label %410
  ]

393:                                              ; preds = %386
  %394 = lshr i8 %391, 3
  %395 = zext i8 %394 to i64
  br label %414

396:                                              ; preds = %386
  %397 = getelementptr inbounds i8, i8* %389, i64 -3
  %398 = load i8, i8* %397, align 1
  %399 = zext i8 %398 to i64
  br label %414

400:                                              ; preds = %386
  %401 = getelementptr inbounds i8, i8* %389, i64 -5
  %402 = bitcast i8* %401 to i16*
  %403 = load i16, i16* %402, align 1
  %404 = zext i16 %403 to i64
  br label %414

405:                                              ; preds = %386
  %406 = getelementptr inbounds i8, i8* %389, i64 -9
  %407 = bitcast i8* %406 to i32*
  %408 = load i32, i32* %407, align 1
  %409 = zext i32 %408 to i64
  br label %414

410:                                              ; preds = %386
  %411 = getelementptr inbounds i8, i8* %389, i64 -17
  %412 = bitcast i8* %411 to i64*
  %413 = load i64, i64* %412, align 1
  br label %414

414:                                              ; preds = %386, %393, %396, %400, %405, %410
  %415 = phi i64 [ %413, %410 ], [ %409, %405 ], [ %404, %400 ], [ %399, %396 ], [ %395, %393 ], [ 0, %386 ]
  %416 = getelementptr inbounds i64, i64* %309, i64 %387
  store i64 %415, i64* %416, align 8
  %417 = add nuw nsw i64 %387, 1
  %418 = icmp eq i64 %417, %315
  br i1 %418, label %316, label %386

419:                                              ; preds = %321, %483
  %420 = phi i64 [ %426, %483 ], [ %2, %321 ]
  %421 = icmp slt i64 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %419
  %423 = add nsw i64 %420, -1
  %424 = icmp eq i64 %420, 0
  br i1 %424, label %486, label %425

425:                                              ; preds = %422, %419
  %426 = phi i64 [ %420, %419 ], [ %423, %422 ]
  %427 = load %9*, %9** @727, align 8
  %428 = tail call i32 @redisAppendCommandArgv(%9* %427, i32 %0, i8** %1, i64* %309) #14
  %429 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 14), align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %440, label %431

431:                                              ; preds = %425, %435
  %432 = tail call fastcc i32 @1394(i32 %256)
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %435, label %434

434:                                              ; preds = %431, %335
  tail call void @exit(i32 1) #19
  unreachable

435:                                              ; preds = %431
  %436 = load %1*, %1** @stdout, align 8
  %437 = tail call i32 @fflush(%1* %436)
  %438 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 14), align 4
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %431

440:                                              ; preds = %435, %425
  %441 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 15), align 8
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %453, label %443

443:                                              ; preds = %440, %343
  %444 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 41), align 8
  %445 = icmp eq i32 %444, 1
  br i1 %445, label %448, label %446

446:                                              ; preds = %443
  %447 = tail call i32 @puts(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @str.37, i64 0, i64 0))
  br label %448

448:                                              ; preds = %443, %446
  br label %449

449:                                              ; preds = %448, %449
  %450 = tail call fastcc i32 @1394(i32 %256)
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %449, label %452

452:                                              ; preds = %449
  tail call void @exit(i32 1) #19
  unreachable

453:                                              ; preds = %440
  %454 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %458, label %456

456:                                              ; preds = %453, %346
  %457 = tail call i32 @puts(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.36, i64 0, i64 0))
  tail call fastcc void @1348()
  store i32 0, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 23), align 8
  tail call void @zfree(i8* %308) #14
  br label %487

458:                                              ; preds = %453
  %459 = tail call fastcc i32 @1394(i32 %256)
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %462, label %461

461:                                              ; preds = %458, %349
  tail call void @zfree(i8* %308) #14
  br label %487

462:                                              ; preds = %458
  %463 = tail call i32 @strcasecmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1265, i64 0, i64 0)) #17
  %464 = icmp eq i32 %463, 0
  %465 = and i1 %322, %464
  br i1 %465, label %466, label %474

466:                                              ; preds = %462
  %467 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 11), align 8
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %474, label %469

469:                                              ; preds = %466
  %470 = load %9*, %9** @727, align 8
  %471 = tail call i8* (%9*, i8*, ...) @redisCommand(%9* %470, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1137, i64 0, i64 0), i32 %467) #14
  %472 = icmp eq i8* %471, null
  br i1 %472, label %474, label %473

473:                                              ; preds = %469
  tail call void @freeReplyObject(i8* nonnull %471) #14
  br label %474

474:                                              ; preds = %473, %469, %466, %462
  %475 = load i32, i32* getelementptr inbounds (%20, %20* @756, i64 0, i32 22), align 4
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %486

477:                                              ; preds = %474
  %478 = load i64, i64* getelementptr inbounds (%20, %20* @756, i64 0, i32 10), align 8
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %477
  %481 = trunc i64 %478 to i32
  %482 = tail call i32 @usleep(i32 %481) #14
  br label %483

483:                                              ; preds = %477, %480
  %484 = load %1*, %1** @stdout, align 8
  %485 = tail call i32 @fflush(%1* %484)
  br label %419

486:                                              ; preds = %474, %422, %326, %374
  tail call void @zfree(i8* %308) #14
  br label %487

487:                                              ; preds = %131, %17, %173, %486, %461, %456
  %488 = phi i32 [ -1, %456 ], [ -1, %461 ], [ 0, %486 ], [ -1, %173 ], [ 0, %17 ], [ 0, %131 ]
  ret i32 %488
}

; Function Attrs: nounwind
declare dso_local i64 @fread(i8* nocapture, i64, i64, %1* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8* nocapture readonly, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @perror(i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @putchar(i32) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #8

; Function Attrs: nounwind
declare i32 @fputc(i32, %1* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.ceil.f32(float) #8

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable willreturn }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nounwind }
attributes #15 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { cold }
attributes #17 = { nounwind readonly }
attributes #18 = { nounwind readnone }
attributes #19 = { noreturn nounwind }
attributes #20 = { cold nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 2, !"Dwarf Version", i32 4}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
