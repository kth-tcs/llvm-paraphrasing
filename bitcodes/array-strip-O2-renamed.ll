; ModuleID = 'array-strip-O2-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/standard/array.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i32 (i8*, i8*)** }
%1 = type { i8, %2*, %1*, i32, i32, i32, i32, %5*, %5*, %5*, %9, %9, %9, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %12*, %19, %22* (%1*)*, %21* (%1*, %5*, i32)*, i32 (%1*, %1*)*, %12* (%1*, %2*)*, i32 (%5*, i8**, i64*, %25*)*, i32 (%5*, %1*, i8*, i64, %26*)*, i32, i32, %1**, %1**, %27**, %29**, %31 }
%2 = type { %3, i64, i64, [1 x i8] }
%3 = type { i32, %4 }
%4 = type { i32 }
%5 = type { %6, %7, %8 }
%6 = type { i64 }
%7 = type { i32 }
%8 = type { i32 }
%9 = type { %3, %10, i32, %11*, i32, i32, i32, i32, i64, void (%5*)* }
%10 = type { i32 }
%11 = type { %5, i64, %2* }
%12 = type { %13 }
%13 = type { i8, [3 x i8], i32, %2*, %1*, %12*, i32, i32, %14*, i32*, i32, %15*, i32, i32, %2**, i32, i32, %17*, %18*, %9*, %2*, i32, i32, %2*, i32, i32, %5*, i32, i8**, [6 x i8*] }
%14 = type { %2*, i64, i8, i8 }
%15 = type { i8*, %16, %16, %16, i32, i32, i8, i8, i8, i8 }
%16 = type { i32 }
%17 = type { i32, i32, i32 }
%18 = type { i32, i32, i32, i32 }
%19 = type { %20*, %12*, %12*, %12*, %12*, %12*, %12* }
%20 = type { void (%21*)*, i32 (%21*)*, %5* (%21*)*, void (%21*, %5*)*, void (%21*)*, void (%21*)*, void (%21*)* }
%21 = type { %22, %5, %20*, i64 }
%22 = type { %3, i32, %1*, %23*, %9*, [1 x %5] }
%23 = type { i32, void (%22*)*, void (%22*)*, %22* (%5*)*, %5* (%5*, %5*, i32, i8**, %5*)*, void (%5*, %5*, %5*, i8**)*, %5* (%5*, %5*, i32, %5*)*, void (%5*, %5*, %5*)*, %5* (%5*, %5*, i32, i8**)*, %5* (%5*, %5*)*, void (%5*, %5*)*, i32 (%5*, %5*, i32, i8**)*, void (%5*, %5*, i8**)*, i32 (%5*, %5*, i32)*, void (%5*, %5*)*, %9* (%5*)*, %12* (%22**, %2*, %5*)*, i32 (%2*, %22*, %24*, %5*)*, %12* (%22*)*, %2* (%22*)*, i32 (%5*, %5*)*, i32 (%5*, %5*, i32)*, i32 (%5*, i64*)*, %9* (%5*, i32*)*, i32 (%5*, %1**, %12**, %22**)*, %9* (%5*, %5**, i32*)*, i32 (i8, %5*, %5*, %5*)*, i32 (%5*, %5*, %5*)* }
%24 = type { %15*, %24*, %5*, %12*, %5, %24*, %9*, i8**, %5* }
%25 = type opaque
%26 = type opaque
%27 = type { %28*, %2*, i32 }
%28 = type { %2*, %1*, %2* }
%29 = type { %28*, %30* }
%30 = type { %1* }
%31 = type { %32 }
%32 = type { %2*, i32, i32, %2* }
%33 = type { %9*, %9, %5, i8*, %2*, i8, i8*, [256 x i8], i64, [40 x i8], %34, %35, %34, %35, %36*, %5, i64, i64, i64, i64, i8*, i8*, %38, %38, [625 x i32], i32*, i32, i8, i64, i8*, %1*, i32, %41, %43, %45, %9, %45, %9, i8*, i64, %9*, i32 }
%34 = type { i64, %5, %5*, %5*, %22*, i8, i32 }
%35 = type { i8, %12*, %1*, %1*, %22* }
%36 = type { %37*, %37*, i64, i64, void (i8*)*, i8, %37* }
%37 = type { %37*, %37*, [1 x i8] }
%38 = type { %39 }
%39 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %40, %40, %40, [3 x i64] }
%40 = type { i64, i64 }
%41 = type { %42*, i32 }
%42 = type opaque
%43 = type { %44*, i32 }
%44 = type opaque
%45 = type { %46, %46, %46, %46, %46, %46, %46, i32, i8*, i32, i32, %46, i32, i32, %9* }
%46 = type { %2*, i64 }
%47 = type { %5, %5, [32 x %9*], %9**, %9**, %9, %9, [1 x %48]*, i32, i32, %9*, %9*, %9*, %5*, %5*, %50*, %24*, %1*, i64, i32, %9*, %12*, i8, i8, i8, i8, i64, %9, %9, i32, %5, %5, %51, %51, %51, i32, %1*, i64, i32, %9*, %9*, %52*, %53, %22*, %22*, %15*, [3 x %15], %54*, i8, i8, i64, i32, i32, %58*, [16 x %58], i8*, i16, %12, %15, i8, [6 x i8*] }
%48 = type { [8 x i64], i32, %49 }
%49 = type { [16 x i64] }
%50 = type { %5*, %5*, %50* }
%51 = type { i32, i32, i32, i8* }
%52 = type { %2*, i32 (%52*, %2*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, %2*, %2*, void (%52*, i32)*, i32, i32, i32, i32 }
%53 = type { %22**, i32, i32, i32 }
%54 = type { i16, i32, i8, i8, %52*, %55*, i8*, %56*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, void (%54*)*, i8*, i64, i8*, void (i8*)*, void (i8*)*, i32 ()*, i32, i8, i8*, i32, i8* }
%55 = type { i8*, i8*, i8*, i8 }
%56 = type { i8*, {}*, %57*, i32, i32 }
%57 = type { i8*, i64, i8, i8 }
%58 = type { %9*, i32 }
%59 = type { %3, %5 }
%60 = type { i8, i8, i8, i8 }
%61 = type { %3 }
%62 = type { i8, i8, i8, i8 }
%63 = type { i8, i8, i16 }
%64 = type { i8, [3 x i8], i32, %2*, %1*, %12*, i32, i32, %14* }
%65 = type { %3, i32, i32, i8* }
%66 = type { %11, i32 }

@array_globals = common hidden local_unnamed_addr global %0 zeroinitializer, align 8
@0 = private unnamed_addr constant [15 x i8] c"EXTR_OVERWRITE\00", align 1
@1 = private unnamed_addr constant [10 x i8] c"EXTR_SKIP\00", align 1
@2 = private unnamed_addr constant [17 x i8] c"EXTR_PREFIX_SAME\00", align 1
@3 = private unnamed_addr constant [16 x i8] c"EXTR_PREFIX_ALL\00", align 1
@4 = private unnamed_addr constant [20 x i8] c"EXTR_PREFIX_INVALID\00", align 1
@5 = private unnamed_addr constant [22 x i8] c"EXTR_PREFIX_IF_EXISTS\00", align 1
@6 = private unnamed_addr constant [15 x i8] c"EXTR_IF_EXISTS\00", align 1
@7 = private unnamed_addr constant [10 x i8] c"EXTR_REFS\00", align 1
@8 = private unnamed_addr constant [9 x i8] c"SORT_ASC\00", align 1
@9 = private unnamed_addr constant [10 x i8] c"SORT_DESC\00", align 1
@10 = private unnamed_addr constant [13 x i8] c"SORT_REGULAR\00", align 1
@11 = private unnamed_addr constant [13 x i8] c"SORT_NUMERIC\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"SORT_STRING\00", align 1
@13 = private unnamed_addr constant [19 x i8] c"SORT_LOCALE_STRING\00", align 1
@14 = private unnamed_addr constant [13 x i8] c"SORT_NATURAL\00", align 1
@15 = private unnamed_addr constant [15 x i8] c"SORT_FLAG_CASE\00", align 1
@16 = private unnamed_addr constant [11 x i8] c"CASE_LOWER\00", align 1
@17 = private unnamed_addr constant [11 x i8] c"CASE_UPPER\00", align 1
@18 = private unnamed_addr constant [13 x i8] c"COUNT_NORMAL\00", align 1
@19 = private unnamed_addr constant [16 x i8] c"COUNT_RECURSIVE\00", align 1
@20 = private unnamed_addr constant [22 x i8] c"ARRAY_FILTER_USE_BOTH\00", align 1
@21 = private unnamed_addr constant [21 x i8] c"ARRAY_FILTER_USE_KEY\00", align 1
@22 = private unnamed_addr constant [19 x i8] c"recursion detected\00", align 1
@23 = private unnamed_addr constant [66 x i8] c"Parameter must be an array or an object that implements Countable\00", align 1
@zend_ce_countable = external dso_local local_unnamed_addr global %1*, align 8
@24 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@25 = private unnamed_addr constant [54 x i8] c"When only one parameter is given, it must be an array\00", align 1
@26 = private unnamed_addr constant [40 x i8] c"Array must contain at least one element\00", align 1
@basic_globals = external dso_local global %33, align 8
@27 = private unnamed_addr constant [21 x i8] c"Invalid extract type\00", align 1
@28 = private unnamed_addr constant [53 x i8] c"specified extract type requires the prefix parameter\00", align 1
@29 = private unnamed_addr constant [33 x i8] c"prefix is not a valid identifier\00", align 1
@30 = private unnamed_addr constant [10 x i8] c"extract()\00", align 1
@31 = private unnamed_addr constant [10 x i8] c"compact()\00", align 1
@32 = private unnamed_addr constant [18 x i8] c"Too many elements\00", align 1
@33 = private unnamed_addr constant [72 x i8] c"Cannot add element to the array as the next element is already occupied\00", align 1
@34 = private unnamed_addr constant [37 x i8] c"Number of elements can't be negative\00", align 1
@35 = private unnamed_addr constant [39 x i8] c"Invalid range string - must be numeric\00", align 1
@zend_one_char_string = external dso_local local_unnamed_addr global [256 x %2*], align 16
@36 = private unnamed_addr constant [46 x i8] c"Invalid range supplied: start=%0.0f end=%0.0f\00", align 1
@37 = private unnamed_addr constant [73 x i8] c"The supplied range exceeds the maximum array size: start=%0.0f end=%0.0f\00", align 1
@38 = private unnamed_addr constant [69 x i8] c"The supplied range exceeds the maximum array size: start=%ld end=%ld\00", align 1
@39 = private unnamed_addr constant [33 x i8] c"step exceeds the specified range\00", align 1
@executor_globals = external dso_local global %47, align 8
@40 = private unnamed_addr constant [42 x i8] c"Can only count STRING and INTEGER values!\00", align 1
@41 = private unnamed_addr constant [7 x i8] c"column\00", align 1
@42 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@zend_empty_string = external dso_local local_unnamed_addr global %2*, align 8
@43 = private unnamed_addr constant [50 x i8] c"You may only pad up to 1048576 elements at a time\00", align 1
@44 = private unnamed_addr constant [41 x i8] c"Can only flip STRING and INTEGER values!\00", align 1
@45 = private unnamed_addr constant [45 x i8] c"at least 2 parameters are required, %d given\00", align 1
@46 = private unnamed_addr constant [28 x i8] c"Argument #1 is not an array\00", align 1
@47 = private unnamed_addr constant [29 x i8] c"Argument #%d is not an array\00", align 1
@48 = private unnamed_addr constant [92 x i8] c"Argument #%d is expected to be an array or sorting flag that has not already been specified\00", align 1
@49 = private unnamed_addr constant [37 x i8] c"Argument #%d is an unknown sort flag\00", align 1
@50 = private unnamed_addr constant [55 x i8] c"Argument #%d is expected to be an array or a sort flag\00", align 1
@51 = private unnamed_addr constant [29 x i8] c"Array sizes are inconsistent\00", align 1
@52 = private unnamed_addr constant [15 x i8] c"Array is empty\00", align 1
@53 = private unnamed_addr constant [76 x i8] c"Second argument has to be between 1 and the number of elements in the array\00", align 1
@empty_fcall_info_cache = external dso_local local_unnamed_addr constant %35, align 8
@empty_fcall_info = external dso_local local_unnamed_addr constant %34, align 8
@54 = private unnamed_addr constant [32 x i8] c"Argument #%d should be an array\00", align 1
@55 = private unnamed_addr constant [59 x i8] c"The first argument should be either a string or an integer\00", align 1
@56 = private unnamed_addr constant [45 x i8] c"Size parameter expected to be greater than 0\00", align 1
@57 = private unnamed_addr constant [56 x i8] c"Both parameters should have an equal number of elements\00", align 1
@58 = private unnamed_addr constant [47 x i8] c"Iterated value is no longer an array or object\00", align 1
@59 = internal unnamed_addr constant [16 x i32] [i32 0, i32 0, i32 -2013265922, i32 134217726, i32 -1, i32 -1, i32 -1, i32 -1, i32 0, i32 67043328, i32 -2013265922, i32 134217726, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@60 = private unnamed_addr constant [8 x i8] c"GLOBALS\00", align 1
@61 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@62 = private unnamed_addr constant [23 x i8] c"Cannot re-assign $this\00", align 1
@63 = private unnamed_addr constant [51 x i8] c"The %s key should be either a string or an integer\00", align 1
@64 = private unnamed_addr constant [3 x i8] c"+f\00", align 1
@65 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@66 = private unnamed_addr constant [46 x i8] c"at least %d parameters are required, %d given\00", align 1
@67 = private unnamed_addr constant [74 x i8] c"data_compare_type is %d. This should never happen. Please report as a bug\00", align 1
@68 = private unnamed_addr constant [4 x i8] c"+ff\00", align 1
@69 = private unnamed_addr constant [98 x i8] c"data_compare_type is %d. key_compare_type is %d. This should never happen. Please report as a bug\00", align 1
@70 = private unnamed_addr constant [65 x i8] c"behavior is %d. This should never happen. Please report as a bug\00", align 1
@71 = private unnamed_addr constant [45 x i8] c"at least 3 parameters are required, %d given\00", align 1

; Function Attrs: nounwind uwtable
define hidden i32 @zm_startup_array(i32 %0, i32 %1) local_unnamed_addr #0 {
  store i64 0, i64* bitcast (%0* @array_globals to i64*), align 8
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @0, i64 0, i64 0), i64 14, i64 0, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1, i64 0, i64 0), i64 9, i64 1, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @2, i64 0, i64 0), i64 16, i64 2, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @3, i64 0, i64 0), i64 15, i64 3, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @4, i64 0, i64 0), i64 19, i64 4, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @5, i64 0, i64 0), i64 21, i64 5, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @6, i64 0, i64 0), i64 14, i64 6, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @7, i64 0, i64 0), i64 9, i64 256, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i64 0, i64 0), i64 8, i64 4, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @9, i64 0, i64 0), i64 9, i64 3, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @10, i64 0, i64 0), i64 12, i64 0, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @11, i64 0, i64 0), i64 12, i64 1, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i64 0, i64 0), i64 11, i64 2, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @13, i64 0, i64 0), i64 18, i64 5, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @14, i64 0, i64 0), i64 12, i64 6, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @15, i64 0, i64 0), i64 14, i64 8, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @16, i64 0, i64 0), i64 10, i64 0, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @17, i64 0, i64 0), i64 10, i64 1, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @18, i64 0, i64 0), i64 12, i64 0, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @19, i64 0, i64 0), i64 15, i64 1, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @20, i64 0, i64 0), i64 21, i64 1, i32 3, i32 %1) #13
  tail call void @zend_register_long_constant(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @21, i64 0, i64 0), i64 20, i64 2, i32 3, i32 %1) #13
  ret i32 0
}

declare dso_local void @zend_register_long_constant(i8*, i64, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone uwtable
define hidden i32 @zm_shutdown_array(i32 %0, i32 %1) local_unnamed_addr #2 {
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zif_krsort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = icmp slt i32 %6, 2
  br i1 %46, label %81, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = getelementptr inbounds i8**, i8*** %10, i64 5
  %51 = bitcast i8*** %50 to i8*
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 4
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast i8*** %48 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %3, align 8
  br label %69

57:                                               ; preds = %47
  %58 = call i32 @zend_parse_arg_long_slow(%5* nonnull %49, i64* nonnull %3) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %69

62:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %67

63:                                               ; preds = %57, %41
  %64 = phi %5* [ %22, %41 ], [ %49, %57 ]
  %65 = phi i32 [ 3, %41 ], [ 0, %57 ]
  %66 = phi i32 [ 1, %41 ], [ 2, %57 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %66, i32 %65, %5* %64) #13
  br label %67

67:                                               ; preds = %62, %63
  %68 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %91

69:                                               ; preds = %60, %54
  %70 = phi i64 [ %61, %60 ], [ %56, %54 ]
  %71 = and i64 %70, -9
  switch i64 %71, label %81 [
    i64 1, label %82
    i64 2, label %72
    i64 6, label %76
    i64 5, label %80
  ]

72:                                               ; preds = %69
  %73 = and i64 %70, 8
  %74 = icmp eq i64 %73, 0
  %75 = select i1 %74, i32 (i8*, i8*)* @92, i32 (i8*, i8*)* @90
  br label %82

76:                                               ; preds = %69
  %77 = and i64 %70, 8
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i32 (i8*, i8*)* @96, i32 (i8*, i8*)* @94
  br label %82

80:                                               ; preds = %69
  br label %82

81:                                               ; preds = %45, %69
  br label %82

82:                                               ; preds = %76, %72, %69, %80, %81
  %83 = phi i32 (i8*, i8*)* [ @98, %80 ], [ @100, %81 ], [ @88, %69 ], [ %75, %72 ], [ %79, %76 ]
  %84 = bitcast %5* %22 to %9**
  %85 = load %9*, %9** %84, align 8
  %86 = call i32 @zend_hash_sort_ex(%9* %85, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull %83, i8 zeroext 0) #13
  %87 = icmp eq i32 %86, -1
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %87, label %89, label %90

89:                                               ; preds = %82
  store i32 2, i32* %88, align 8
  br label %91

90:                                               ; preds = %82
  store i32 3, i32* %88, align 8
  br label %91

91:                                               ; preds = %67, %90, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local void @zend_wrong_parameters_count_error(i8 zeroext, i32, i32, i32) local_unnamed_addr #1

declare dso_local void @_zval_copy_ctor_func(%5*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local void @zend_wrong_callback_error(i8 zeroext, i32, i32, i8*) local_unnamed_addr #1

declare dso_local void @zend_wrong_parameter_type_error(i8 zeroext, i32, i32, %5*) local_unnamed_addr #1

declare dso_local i32 @zend_hash_sort_ex(%9*, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)*, i32 (i8*, i8*)*, i8 zeroext) local_unnamed_addr #1

declare dso_local void @zend_sort(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_ksort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = icmp slt i32 %6, 2
  br i1 %46, label %81, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = getelementptr inbounds i8**, i8*** %10, i64 5
  %51 = bitcast i8*** %50 to i8*
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 4
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast i8*** %48 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %3, align 8
  br label %69

57:                                               ; preds = %47
  %58 = call i32 @zend_parse_arg_long_slow(%5* nonnull %49, i64* nonnull %3) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %69

62:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %67

63:                                               ; preds = %57, %41
  %64 = phi %5* [ %22, %41 ], [ %49, %57 ]
  %65 = phi i32 [ 3, %41 ], [ 0, %57 ]
  %66 = phi i32 [ 1, %41 ], [ 2, %57 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %66, i32 %65, %5* %64) #13
  br label %67

67:                                               ; preds = %62, %63
  %68 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %91

69:                                               ; preds = %60, %54
  %70 = phi i64 [ %61, %60 ], [ %56, %54 ]
  %71 = and i64 %70, -9
  switch i64 %71, label %81 [
    i64 1, label %82
    i64 2, label %72
    i64 6, label %76
    i64 5, label %80
  ]

72:                                               ; preds = %69
  %73 = and i64 %70, 8
  %74 = icmp eq i64 %73, 0
  %75 = select i1 %74, i32 (i8*, i8*)* @93, i32 (i8*, i8*)* @91
  br label %82

76:                                               ; preds = %69
  %77 = and i64 %70, 8
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i32 (i8*, i8*)* @97, i32 (i8*, i8*)* @95
  br label %82

80:                                               ; preds = %69
  br label %82

81:                                               ; preds = %45, %69
  br label %82

82:                                               ; preds = %76, %72, %69, %80, %81
  %83 = phi i32 (i8*, i8*)* [ @99, %80 ], [ @101, %81 ], [ @89, %69 ], [ %75, %72 ], [ %79, %76 ]
  %84 = bitcast %5* %22 to %9**
  %85 = load %9*, %9** %84, align 8
  %86 = call i32 @zend_hash_sort_ex(%9* %85, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull %83, i8 zeroext 0) #13
  %87 = icmp eq i32 %86, -1
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %87, label %89, label %90

89:                                               ; preds = %82
  store i32 2, i32* %88, align 8
  br label %91

90:                                               ; preds = %82
  store i32 3, i32* %88, align 8
  br label %91

91:                                               ; preds = %67, %90, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @php_count_recursive(%5* nocapture readonly %0, i64 %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %5, %5* %0, i64 0, i32 1
  %4 = bitcast %7* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 7
  br i1 %6, label %7, label %76

7:                                                ; preds = %2
  %8 = bitcast %5* %0 to %9**
  %9 = load %9*, %9** %8, align 8
  %10 = getelementptr inbounds %9, %9* %9, i64 0, i32 1
  %11 = bitcast %10* %10 to %62*
  %12 = getelementptr inbounds %62, %62* %11, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp ugt i8 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %7
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @22, i64 0, i64 0)) #13
  br label %76

16:                                               ; preds = %7
  %17 = tail call i32 @zend_array_count(%9* %9) #13
  %18 = zext i32 %17 to i64
  %19 = icmp eq i64 %1, 1
  br i1 %19, label %20, label %76

20:                                               ; preds = %16
  %21 = load %9*, %9** %8, align 8
  %22 = getelementptr inbounds %9, %9* %21, i64 0, i32 1
  %23 = getelementptr inbounds %10, %10* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = bitcast %10* %22 to %62*
  %29 = getelementptr inbounds %62, %62* %28, i64 0, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = add i8 %30, 1
  store i8 %31, i8* %29, align 1
  %32 = load %9*, %9** %8, align 8
  br label %33

33:                                               ; preds = %20, %27
  %34 = phi %9* [ %21, %20 ], [ %32, %27 ]
  %35 = getelementptr inbounds %9, %9* %34, i64 0, i32 3
  %36 = load %11*, %11** %35, align 8
  %37 = getelementptr inbounds %9, %9* %34, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %11, %11* %36, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %33, %57
  %43 = phi i64 [ %58, %57 ], [ %18, %33 ]
  %44 = phi %11* [ %59, %57 ], [ %36, %33 ]
  %45 = getelementptr inbounds %11, %11* %44, i64 0, i32 0
  %46 = getelementptr inbounds %11, %11* %44, i64 0, i32 0, i32 1
  %47 = bitcast %7* %46 to i8*
  %48 = load i8, i8* %47, align 8
  switch i8 %48, label %53 [
    i8 0, label %57
    i8 10, label %49
  ]

49:                                               ; preds = %42
  %50 = bitcast %11* %44 to %59**
  %51 = load %59*, %59** %50, align 8
  %52 = getelementptr inbounds %59, %59* %51, i64 0, i32 1
  br label %53

53:                                               ; preds = %42, %49
  %54 = phi %5* [ %52, %49 ], [ %45, %42 ]
  %55 = tail call i64 @php_count_recursive(%5* %54, i64 1)
  %56 = add nsw i64 %55, %43
  br label %57

57:                                               ; preds = %42, %53
  %58 = phi i64 [ %56, %53 ], [ %43, %42 ]
  %59 = getelementptr inbounds %11, %11* %44, i64 1
  %60 = icmp eq %11* %59, %40
  br i1 %60, label %61, label %42

61:                                               ; preds = %57
  %62 = load %9*, %9** %8, align 8
  br label %63

63:                                               ; preds = %61, %33
  %64 = phi %9* [ %34, %33 ], [ %62, %61 ]
  %65 = phi i64 [ %18, %33 ], [ %58, %61 ]
  %66 = getelementptr inbounds %9, %9* %64, i64 0, i32 1
  %67 = getelementptr inbounds %10, %10* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %63
  %72 = bitcast %10* %66 to %62*
  %73 = getelementptr inbounds %62, %62* %72, i64 0, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = add i8 %74, -1
  store i8 %75, i8* %73, align 1
  br label %76

76:                                               ; preds = %2, %71, %16, %63, %15
  %77 = phi i64 [ 0, %15 ], [ %65, %71 ], [ %65, %63 ], [ %18, %16 ], [ 0, %2 ]
  ret i64 %77
}

declare dso_local void @php_error_docref0(i8*, i32, i8*, ...) local_unnamed_addr #1

declare dso_local i32 @zend_array_count(%9*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_count(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %5, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i64 0, i64* %3, align 8
  %6 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %7, i32 1, i32 2) #13
  br label %125

11:                                               ; preds = %2
  %12 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %13 = getelementptr inbounds i8**, i8*** %12, i64 2
  %14 = bitcast i8*** %13 to %5*
  %15 = icmp slt i32 %7, 2
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8**, i8*** %12, i64 4
  %18 = bitcast i8*** %17 to %5*
  %19 = getelementptr inbounds i8**, i8*** %12, i64 5
  %20 = bitcast i8*** %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 4
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = bitcast i8*** %17 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %3, align 8
  br label %30

26:                                               ; preds = %16
  %27 = call i32 @zend_parse_arg_long_slow(%5* nonnull %18, i64* nonnull %3) #13
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 2, i32 0, %5* nonnull %18) #13
  br label %125

30:                                               ; preds = %11, %26, %23
  %31 = getelementptr inbounds i8**, i8*** %12, i64 3
  %32 = bitcast i8*** %31 to i8*
  %33 = load i8, i8* %32, align 8
  switch i8 %33, label %122 [
    i8 1, label %34
    i8 7, label %37
    i8 8, label %76
  ]

34:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @23, i64 0, i64 0)) #13
  %35 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %36, align 8
  br label %125

37:                                               ; preds = %30
  %38 = bitcast i8*** %13 to %9**
  %39 = load %9*, %9** %38, align 8
  %40 = call i32 @zend_array_count(%9* %39) #13
  %41 = zext i32 %40 to i64
  %42 = load i64, i64* %3, align 8
  %43 = icmp eq i64 %42, 1
  br i1 %43, label %44, label %72

44:                                               ; preds = %37
  %45 = load %9*, %9** %38, align 8
  %46 = getelementptr inbounds %9, %9* %45, i64 0, i32 3
  %47 = load %11*, %11** %46, align 8
  %48 = getelementptr inbounds %9, %9* %45, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %11, %11* %47, i64 %50
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %72, label %53

53:                                               ; preds = %44, %68
  %54 = phi i64 [ %69, %68 ], [ %41, %44 ]
  %55 = phi %11* [ %70, %68 ], [ %47, %44 ]
  %56 = getelementptr inbounds %11, %11* %55, i64 0, i32 0
  %57 = getelementptr inbounds %11, %11* %55, i64 0, i32 0, i32 1
  %58 = bitcast %7* %57 to i8*
  %59 = load i8, i8* %58, align 8
  switch i8 %59, label %64 [
    i8 0, label %68
    i8 10, label %60
  ]

60:                                               ; preds = %53
  %61 = bitcast %11* %55 to %59**
  %62 = load %59*, %59** %61, align 8
  %63 = getelementptr inbounds %59, %59* %62, i64 0, i32 1
  br label %64

64:                                               ; preds = %53, %60
  %65 = phi %5* [ %63, %60 ], [ %56, %53 ]
  %66 = call i64 @php_count_recursive(%5* %65, i64 1)
  %67 = add nsw i64 %66, %54
  br label %68

68:                                               ; preds = %53, %64
  %69 = phi i64 [ %67, %64 ], [ %54, %53 ]
  %70 = getelementptr inbounds %11, %11* %55, i64 1
  %71 = icmp eq %11* %70, %51
  br i1 %71, label %72, label %53

72:                                               ; preds = %68, %44, %37
  %73 = phi i64 [ %41, %37 ], [ %41, %44 ], [ %69, %68 ]
  %74 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %75, align 8
  br label %125

76:                                               ; preds = %30
  %77 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #13
  %78 = bitcast i8*** %13 to %22**
  %79 = load %22*, %22** %78, align 8
  %80 = getelementptr inbounds %22, %22* %79, i64 0, i32 3
  %81 = load %23*, %23** %80, align 8
  %82 = getelementptr inbounds %23, %23* %81, i64 0, i32 22
  %83 = load i32 (%5*, i64*)*, i32 (%5*, i64*)** %82, align 8
  %84 = icmp eq i32 (%5*, i64*)* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 1, i64* %86, align 8
  %87 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %87, align 8
  %88 = load %22*, %22** %78, align 8
  %89 = getelementptr inbounds %22, %22* %88, i64 0, i32 3
  %90 = load %23*, %23** %89, align 8
  %91 = getelementptr inbounds %23, %23* %90, i64 0, i32 22
  %92 = load i32 (%5*, i64*)*, i32 (%5*, i64*)** %91, align 8
  %93 = call i32 %92(%5* nonnull %14, i64* %86) #13
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %121, label %95

95:                                               ; preds = %85
  %96 = load %22*, %22** %78, align 8
  br label %97

97:                                               ; preds = %95, %76
  %98 = phi %22* [ %96, %95 ], [ %79, %76 ]
  %99 = getelementptr inbounds %22, %22* %98, i64 0, i32 2
  %100 = load %1*, %1** %99, align 8
  %101 = load %1*, %1** @zend_ce_countable, align 8
  %102 = call zeroext i8 @instanceof_function(%1* %100, %1* %101) #13
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %97
  %105 = call %5* @zend_call_method(%5* nonnull %14, %1* null, %12** null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @24, i64 0, i64 0), i64 5, %5* nonnull %4, i32 0, %5* null, %5* null) #13
  %106 = getelementptr inbounds %5, %5* %4, i64 0, i32 1
  %107 = bitcast %7* %106 to i8*
  %108 = load i8, i8* %107, align 8
  switch i8 %108, label %112 [
    i8 0, label %121
    i8 4, label %109
  ]

109:                                              ; preds = %104
  %110 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  br label %114

112:                                              ; preds = %104
  %113 = call i64 @_zval_get_long_func(%5* nonnull %4) #13
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i64 [ %111, %109 ], [ %113, %112 ]
  %116 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %117, align 8
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  br label %121

118:                                              ; preds = %97
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @23, i64 0, i64 0)) #13
  %119 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 1, i64* %119, align 8
  %120 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %120, align 8
  br label %121

121:                                              ; preds = %104, %114, %85, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #13
  br label %125

122:                                              ; preds = %30
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @23, i64 0, i64 0)) #13
  %123 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 1, i64* %123, align 8
  %124 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %124, align 8
  br label %125

125:                                              ; preds = %10, %29, %122, %121, %72, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare dso_local zeroext i8 @instanceof_function(%1*, %1*) local_unnamed_addr #1

declare dso_local %5* @zend_call_method(%5*, %1*, %12**, i8*, i64, %5*, i32, %5*, %5*) local_unnamed_addr #1

declare dso_local void @_zval_ptr_dtor(%5*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_natsort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @72(%24* %0, %5* %1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @72(%24* %0, %5* nocapture %1, i32 %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 1, i32 1) #13
  br label %57

8:                                                ; preds = %3
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = bitcast i8*** %10 to %5*
  %12 = getelementptr inbounds i8**, i8*** %9, i64 3
  %13 = bitcast i8*** %12 to i8*
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 10
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = bitcast i8*** %10 to %59**
  %18 = load %59*, %59** %17, align 8
  %19 = getelementptr inbounds %59, %59* %18, i64 0, i32 1
  br label %20

20:                                               ; preds = %8, %16
  %21 = phi %5* [ %19, %16 ], [ %11, %8 ]
  %22 = getelementptr inbounds %5, %5* %21, i64 0, i32 1
  %23 = bitcast %7* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i64 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 16
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %20
  %29 = bitcast %5* %21 to %61**
  %30 = load %61*, %61** %29, align 8
  %31 = getelementptr inbounds %61, %61* %30, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = and i8 %25, 4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = add i32 %32, -1
  store i32 %38, i32* %31, align 4
  br label %39

39:                                               ; preds = %34, %37
  tail call void @_zval_copy_ctor_func(%5* nonnull %21) #13
  br label %40

40:                                               ; preds = %20, %28, %39
  %41 = bitcast %7* %22 to i8*
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 7
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %21) #13
  br label %57

45:                                               ; preds = %40
  %46 = icmp eq i32 %2, 0
  %47 = bitcast %5* %21 to %9**
  %48 = load %9*, %9** %47, align 8
  br i1 %46, label %52, label %49

49:                                               ; preds = %45
  %50 = tail call i32 @zend_hash_sort_ex(%9* %48, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull @103, i8 zeroext 0) #13
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %57, label %55

52:                                               ; preds = %45
  %53 = tail call i32 @zend_hash_sort_ex(%9* %48, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull @104, i8 zeroext 0) #13
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %57, label %55

55:                                               ; preds = %49, %52
  %56 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %56, align 8
  br label %57

57:                                               ; preds = %7, %52, %49, %44, %55
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_natcasesort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @72(%24* %0, %5* %1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_asort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = icmp slt i32 %6, 2
  br i1 %46, label %81, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = getelementptr inbounds i8**, i8*** %10, i64 5
  %51 = bitcast i8*** %50 to i8*
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 4
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast i8*** %48 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %3, align 8
  br label %69

57:                                               ; preds = %47
  %58 = call i32 @zend_parse_arg_long_slow(%5* nonnull %49, i64* nonnull %3) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %69

62:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %67

63:                                               ; preds = %57, %41
  %64 = phi %5* [ %22, %41 ], [ %49, %57 ]
  %65 = phi i32 [ 3, %41 ], [ 0, %57 ]
  %66 = phi i32 [ 1, %41 ], [ 2, %57 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %66, i32 %65, %5* %64) #13
  br label %67

67:                                               ; preds = %62, %63
  %68 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %91

69:                                               ; preds = %60, %54
  %70 = phi i64 [ %61, %60 ], [ %56, %54 ]
  %71 = and i64 %70, -9
  switch i64 %71, label %81 [
    i64 1, label %82
    i64 2, label %72
    i64 6, label %76
    i64 5, label %80
  ]

72:                                               ; preds = %69
  %73 = and i64 %70, 8
  %74 = icmp eq i64 %73, 0
  %75 = select i1 %74, i32 (i8*, i8*)* @111, i32 (i8*, i8*)* @109
  br label %82

76:                                               ; preds = %69
  %77 = and i64 %70, 8
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i32 (i8*, i8*)* @104, i32 (i8*, i8*)* @103
  br label %82

80:                                               ; preds = %69
  br label %82

81:                                               ; preds = %45, %69
  br label %82

82:                                               ; preds = %76, %72, %69, %80, %81
  %83 = phi i32 (i8*, i8*)* [ @115, %80 ], [ @76, %81 ], [ @107, %69 ], [ %75, %72 ], [ %79, %76 ]
  %84 = bitcast %5* %22 to %9**
  %85 = load %9*, %9** %84, align 8
  %86 = call i32 @zend_hash_sort_ex(%9* %85, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull %83, i8 zeroext 0) #13
  %87 = icmp eq i32 %86, -1
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %87, label %89, label %90

89:                                               ; preds = %82
  store i32 2, i32* %88, align 8
  br label %91

90:                                               ; preds = %82
  store i32 3, i32* %88, align 8
  br label %91

91:                                               ; preds = %67, %90, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_arsort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = icmp slt i32 %6, 2
  br i1 %46, label %81, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = getelementptr inbounds i8**, i8*** %10, i64 5
  %51 = bitcast i8*** %50 to i8*
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 4
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast i8*** %48 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %3, align 8
  br label %69

57:                                               ; preds = %47
  %58 = call i32 @zend_parse_arg_long_slow(%5* nonnull %49, i64* nonnull %3) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %69

62:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %67

63:                                               ; preds = %57, %41
  %64 = phi %5* [ %22, %41 ], [ %49, %57 ]
  %65 = phi i32 [ 3, %41 ], [ 0, %57 ]
  %66 = phi i32 [ 1, %41 ], [ 2, %57 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %66, i32 %65, %5* %64) #13
  br label %67

67:                                               ; preds = %62, %63
  %68 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %91

69:                                               ; preds = %60, %54
  %70 = phi i64 [ %61, %60 ], [ %56, %54 ]
  %71 = and i64 %70, -9
  switch i64 %71, label %81 [
    i64 1, label %82
    i64 2, label %72
    i64 6, label %76
    i64 5, label %80
  ]

72:                                               ; preds = %69
  %73 = and i64 %70, 8
  %74 = icmp eq i64 %73, 0
  %75 = select i1 %74, i32 (i8*, i8*)* @110, i32 (i8*, i8*)* @108
  br label %82

76:                                               ; preds = %69
  %77 = and i64 %70, 8
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i32 (i8*, i8*)* @113, i32 (i8*, i8*)* @112
  br label %82

80:                                               ; preds = %69
  br label %82

81:                                               ; preds = %45, %69
  br label %82

82:                                               ; preds = %76, %72, %69, %80, %81
  %83 = phi i32 (i8*, i8*)* [ @114, %80 ], [ @116, %81 ], [ @106, %69 ], [ %75, %72 ], [ %79, %76 ]
  %84 = bitcast %5* %22 to %9**
  %85 = load %9*, %9** %84, align 8
  %86 = call i32 @zend_hash_sort_ex(%9* %85, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull %83, i8 zeroext 0) #13
  %87 = icmp eq i32 %86, -1
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %87, label %89, label %90

89:                                               ; preds = %82
  store i32 2, i32* %88, align 8
  br label %91

90:                                               ; preds = %82
  store i32 3, i32* %88, align 8
  br label %91

91:                                               ; preds = %67, %90, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_sort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = icmp slt i32 %6, 2
  br i1 %46, label %81, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = getelementptr inbounds i8**, i8*** %10, i64 5
  %51 = bitcast i8*** %50 to i8*
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 4
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast i8*** %48 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %3, align 8
  br label %69

57:                                               ; preds = %47
  %58 = call i32 @zend_parse_arg_long_slow(%5* nonnull %49, i64* nonnull %3) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %69

62:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %67

63:                                               ; preds = %57, %41
  %64 = phi %5* [ %22, %41 ], [ %49, %57 ]
  %65 = phi i32 [ 3, %41 ], [ 0, %57 ]
  %66 = phi i32 [ 1, %41 ], [ 2, %57 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %66, i32 %65, %5* %64) #13
  br label %67

67:                                               ; preds = %62, %63
  %68 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %91

69:                                               ; preds = %60, %54
  %70 = phi i64 [ %61, %60 ], [ %56, %54 ]
  %71 = and i64 %70, -9
  switch i64 %71, label %81 [
    i64 1, label %82
    i64 2, label %72
    i64 6, label %76
    i64 5, label %80
  ]

72:                                               ; preds = %69
  %73 = and i64 %70, 8
  %74 = icmp eq i64 %73, 0
  %75 = select i1 %74, i32 (i8*, i8*)* @111, i32 (i8*, i8*)* @109
  br label %82

76:                                               ; preds = %69
  %77 = and i64 %70, 8
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i32 (i8*, i8*)* @104, i32 (i8*, i8*)* @103
  br label %82

80:                                               ; preds = %69
  br label %82

81:                                               ; preds = %45, %69
  br label %82

82:                                               ; preds = %76, %72, %69, %80, %81
  %83 = phi i32 (i8*, i8*)* [ @115, %80 ], [ @76, %81 ], [ @107, %69 ], [ %75, %72 ], [ %79, %76 ]
  %84 = bitcast %5* %22 to %9**
  %85 = load %9*, %9** %84, align 8
  %86 = call i32 @zend_hash_sort_ex(%9* %85, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull %83, i8 zeroext 1) #13
  %87 = icmp eq i32 %86, -1
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %87, label %89, label %90

89:                                               ; preds = %82
  store i32 2, i32* %88, align 8
  br label %91

90:                                               ; preds = %82
  store i32 3, i32* %88, align 8
  br label %91

91:                                               ; preds = %67, %90, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_rsort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = icmp slt i32 %6, 2
  br i1 %46, label %81, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = getelementptr inbounds i8**, i8*** %10, i64 5
  %51 = bitcast i8*** %50 to i8*
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 4
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast i8*** %48 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %3, align 8
  br label %69

57:                                               ; preds = %47
  %58 = call i32 @zend_parse_arg_long_slow(%5* nonnull %49, i64* nonnull %3) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %69

62:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %67

63:                                               ; preds = %57, %41
  %64 = phi %5* [ %22, %41 ], [ %49, %57 ]
  %65 = phi i32 [ 3, %41 ], [ 0, %57 ]
  %66 = phi i32 [ 1, %41 ], [ 2, %57 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %66, i32 %65, %5* %64) #13
  br label %67

67:                                               ; preds = %62, %63
  %68 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %91

69:                                               ; preds = %60, %54
  %70 = phi i64 [ %61, %60 ], [ %56, %54 ]
  %71 = and i64 %70, -9
  switch i64 %71, label %81 [
    i64 1, label %82
    i64 2, label %72
    i64 6, label %76
    i64 5, label %80
  ]

72:                                               ; preds = %69
  %73 = and i64 %70, 8
  %74 = icmp eq i64 %73, 0
  %75 = select i1 %74, i32 (i8*, i8*)* @110, i32 (i8*, i8*)* @108
  br label %82

76:                                               ; preds = %69
  %77 = and i64 %70, 8
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i32 (i8*, i8*)* @113, i32 (i8*, i8*)* @112
  br label %82

80:                                               ; preds = %69
  br label %82

81:                                               ; preds = %45, %69
  br label %82

82:                                               ; preds = %76, %72, %69, %80, %81
  %83 = phi i32 (i8*, i8*)* [ @114, %80 ], [ @116, %81 ], [ @106, %69 ], [ %75, %72 ], [ %79, %76 ]
  %84 = bitcast %5* %22 to %9**
  %85 = load %9*, %9** %84, align 8
  %86 = call i32 @zend_hash_sort_ex(%9* %85, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* nonnull %83, i8 zeroext 1) #13
  %87 = icmp eq i32 %86, -1
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %87, label %89, label %90

89:                                               ; preds = %82
  store i32 2, i32* %88, align 8
  br label %91

90:                                               ; preds = %82
  store i32 3, i32* %88, align 8
  br label %91

91:                                               ; preds = %67, %90, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_usort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @73(%24* %0, %5* %1, i32 (i8*, i8*)* nonnull @74, i8 zeroext 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @73(%24* %0, %5* nocapture %1, i32 (i8*, i8*)* %2, i8 zeroext %3) unnamed_addr #0 {
  %5 = alloca %34, align 8
  %6 = alloca %35, align 8
  %7 = alloca i8*, align 8
  %8 = bitcast %34* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8)
  %9 = getelementptr inbounds %35, %35* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i64 40, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store i8* null, i8** %7, align 8
  %13 = icmp eq i32 %11, 2
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %11, i32 2, i32 2) #13
  br label %48

15:                                               ; preds = %4
  %16 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %17 = getelementptr inbounds i8**, i8*** %16, i64 2
  %18 = bitcast i8*** %17 to %5*
  %19 = getelementptr inbounds i8**, i8*** %16, i64 3
  %20 = bitcast i8*** %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 10
  br i1 %22, label %23, label %27

23:                                               ; preds = %15
  %24 = bitcast i8*** %17 to %59**
  %25 = load %59*, %59** %24, align 8
  %26 = getelementptr inbounds %59, %59* %25, i64 0, i32 1
  br label %27

27:                                               ; preds = %23, %15
  %28 = phi %5* [ %26, %23 ], [ %18, %15 ]
  %29 = getelementptr inbounds %5, %5* %28, i64 0, i32 1
  %30 = bitcast %7* %29 to i8*
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 7
  br i1 %32, label %33, label %44

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8**, i8*** %16, i64 4
  %35 = bitcast i8*** %34 to %5*
  %36 = call i32 @zend_fcall_info_init(%5* nonnull %35, i32 0, %34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13), %2** null, i8** nonnull %7) #13
  %37 = icmp eq i32 %36, 0
  %38 = load i8*, i8** %7, align 8
  %39 = icmp ne i8* %38, null
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  br i1 %39, label %41, label %49

41:                                               ; preds = %40
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 8192, i32 2, i8* nonnull %38) #13
  br label %49

42:                                               ; preds = %33
  br i1 %39, label %43, label %44

43:                                               ; preds = %42
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 2, i8* nonnull %38) #13
  br label %48

44:                                               ; preds = %42, %27
  %45 = phi i32 [ 2, %42 ], [ 1, %27 ]
  %46 = phi i32 [ 4, %42 ], [ 3, %27 ]
  %47 = phi %5* [ %35, %42 ], [ %28, %27 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %45, i32 %46, %5* %47) #13
  br label %48

48:                                               ; preds = %14, %44, %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %8, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %9, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  br label %64

49:                                               ; preds = %40, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %50 = bitcast %5* %28 to %9**
  %51 = load %9*, %9** %50, align 8
  %52 = getelementptr inbounds %9, %9* %51, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %8, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %9, i64 40, i1 false)
  %56 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %56, align 8
  br label %64

57:                                               ; preds = %49
  %58 = call %9* @zend_array_dup(%9* %51) #13
  %59 = call i32 @zend_hash_sort_ex(%9* %58, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* nonnull @zend_sort, i32 (i8*, i8*)* %2, i8 zeroext %3) #13
  %60 = icmp eq i32 %59, -1
  call void @_zval_ptr_dtor(%5* nonnull %28) #13
  store %9* %58, %9** %50, align 8
  %61 = getelementptr inbounds %5, %5* %28, i64 0, i32 1, i32 0
  store i32 5127, i32* %61, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %8, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %9, i64 40, i1 false)
  %62 = select i1 %60, i32 2, i32 3
  %63 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %62, i32* %63, align 8
  br label %64

64:                                               ; preds = %48, %57, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @74(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = alloca [2 x %5], align 16
  %4 = alloca %5, align 8
  %5 = bitcast [2 x %5]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0
  %8 = bitcast i8* %0 to %61**
  %9 = load %61*, %61** %8, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = bitcast [2 x %5]* %3 to %61**
  store %61* %9, %61** %13, align 16
  %14 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 1, i32 0
  store i32 %12, i32* %14, align 8
  %15 = and i32 %12, 1024
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %61, %61* %9, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 4
  br label %21

21:                                               ; preds = %2, %17
  %22 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1
  %23 = bitcast i8* %1 to %61**
  %24 = load %61*, %61** %23, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %5* %22 to %61**
  store %61* %24, %61** %28, align 16
  %29 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1, i32 1, i32 0
  store i32 %27, i32* %29, align 8
  %30 = and i32 %27, 1024
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %61, %61* %24, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 4
  br label %36

36:                                               ; preds = %21, %32
  store i32 2, i32* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 6), align 4
  store %5* %7, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 3), align 8
  store %5* %4, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 2), align 8
  store i8 0, i8* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 5), align 8
  %37 = call i32 @zend_call_function(%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13)) #13
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %36
  %40 = getelementptr inbounds %5, %5* %4, i64 0, i32 1
  %41 = bitcast %7* %40 to i8*
  %42 = load i8, i8* %41, align 8
  switch i8 %42, label %46 [
    i8 0, label %54
    i8 4, label %43
  ]

43:                                               ; preds = %39
  %44 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %39
  %47 = call i64 @_zval_get_long_func(%5* nonnull %4) #13
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i64 [ %45, %43 ], [ %47, %46 ]
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  call void @_zval_ptr_dtor(%5* nonnull %22) #13
  call void @_zval_ptr_dtor(%5* nonnull %7) #13
  %50 = icmp slt i64 %49, 0
  %51 = icmp ne i64 %49, 0
  %52 = zext i1 %51 to i32
  %53 = select i1 %50, i32 -1, i32 %52
  br label %55

54:                                               ; preds = %39, %36
  call void @_zval_ptr_dtor(%5* nonnull %22) #13
  call void @_zval_ptr_dtor(%5* nonnull %7) #13
  br label %55

55:                                               ; preds = %48, %54
  %56 = phi i32 [ 0, %54 ], [ %53, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define hidden void @zif_uasort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @73(%24* %0, %5* %1, i32 (i8*, i8*)* nonnull @74, i8 zeroext 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_uksort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @73(%24* %0, %5* %1, i32 (i8*, i8*)* nonnull @75, i8 zeroext 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @75(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = alloca [2 x %5], align 16
  %4 = alloca %5, align 8
  %5 = bitcast [2 x %5]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0
  %8 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 1, i32 0
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1
  %10 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1, i32 1, i32 0
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %0, i64 24
  %12 = bitcast i8* %11 to %2**
  %13 = load %2*, %2** %12, align 8
  %14 = icmp eq %2* %13, null
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds i8, i8* %0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 0, i32 0
  store i64 %18, i64* %19, align 16
  br label %32

20:                                               ; preds = %2
  %21 = bitcast [2 x %5]* %3 to %2**
  store %2* %13, %2** %21, align 16
  %22 = getelementptr inbounds %2, %2* %13, i64 0, i32 0, i32 1
  %23 = bitcast %4* %22 to %63*
  %24 = getelementptr inbounds %63, %63* %23, i64 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = getelementptr inbounds %2, %2* %13, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  br label %32

32:                                               ; preds = %28, %20, %15
  %33 = phi i32 [ 4, %15 ], [ 5126, %28 ], [ 6, %20 ]
  store i32 %33, i32* %8, align 8
  %34 = getelementptr inbounds i8, i8* %1, i64 24
  %35 = bitcast i8* %34 to %2**
  %36 = load %2*, %2** %35, align 8
  %37 = icmp eq %2* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %32
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %5, %5* %9, i64 0, i32 0, i32 0
  store i64 %41, i64* %42, align 16
  br label %55

43:                                               ; preds = %32
  %44 = bitcast %5* %9 to %2**
  store %2* %36, %2** %44, align 16
  %45 = getelementptr inbounds %2, %2* %36, i64 0, i32 0, i32 1
  %46 = bitcast %4* %45 to %63*
  %47 = getelementptr inbounds %63, %63* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %43
  %52 = getelementptr inbounds %2, %2* %36, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 8
  br label %55

55:                                               ; preds = %51, %43, %38
  %56 = phi i32 [ 4, %38 ], [ 5126, %51 ], [ 6, %43 ]
  store i32 %56, i32* %10, align 8
  store i32 2, i32* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 6), align 4
  store %5* %7, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 3), align 8
  store %5* %4, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 2), align 8
  store i8 0, i8* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 5), align 8
  %57 = call i32 @zend_call_function(%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13)) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %70

59:                                               ; preds = %55
  %60 = getelementptr inbounds %5, %5* %4, i64 0, i32 1
  %61 = bitcast %7* %60 to i8*
  %62 = load i8, i8* %61, align 8
  switch i8 %62, label %66 [
    i8 0, label %70
    i8 4, label %63
  ]

63:                                               ; preds = %59
  %64 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  br label %68

66:                                               ; preds = %59
  %67 = call i64 @_zval_get_long_func(%5* nonnull %4) #13
  br label %68

68:                                               ; preds = %63, %66
  %69 = phi i64 [ %65, %63 ], [ %67, %66 ]
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  br label %70

70:                                               ; preds = %59, %55, %68
  %71 = phi i64 [ %69, %68 ], [ 0, %59 ], [ 0, %55 ]
  call void @_zval_ptr_dtor(%5* nonnull %7) #13
  call void @_zval_ptr_dtor(%5* nonnull %9) #13
  %72 = icmp slt i64 %71, 0
  %73 = icmp ne i64 %71, 0
  %74 = zext i1 %73 to i32
  %75 = select i1 %72, i32 -1, i32 %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret i32 %75
}

; Function Attrs: nounwind uwtable
define hidden void @zif_end(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %139

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = bitcast i8*** %9 to %59**
  %17 = load %59*, %59** %16, align 8
  %18 = getelementptr inbounds %59, %59* %17, i64 0, i32 1
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi %5* [ %18, %15 ], [ %10, %7 ]
  %21 = getelementptr inbounds %5, %5* %20, i64 0, i32 1
  %22 = bitcast %7* %21 to %60*
  %23 = getelementptr inbounds %60, %60* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = bitcast %5* %20 to %61**
  %29 = load %61*, %61** %28, align 8
  %30 = getelementptr inbounds %61, %61* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = and i8 %24, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = add i32 %31, -1
  store i32 %37, i32* %30, align 4
  br label %38

38:                                               ; preds = %33, %36
  tail call void @_zval_copy_ctor_func(%5* nonnull %20) #13
  br label %39

39:                                               ; preds = %19, %27, %38
  %40 = bitcast %7* %21 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %80 [
    i8 7, label %42
    i8 8, label %45
  ]

42:                                               ; preds = %39
  %43 = bitcast %5* %20 to %9**
  %44 = load %9*, %9** %43, align 8
  br label %81

45:                                               ; preds = %39
  %46 = bitcast %5* %20 to %22**
  %47 = load %22*, %22** %46, align 8
  %48 = getelementptr inbounds %22, %22* %47, i64 0, i32 4
  %49 = load %9*, %9** %48, align 8
  %50 = icmp eq %9* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %73

55:                                               ; preds = %51
  %56 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 1
  %57 = bitcast %4* %56 to %63*
  %58 = getelementptr inbounds %63, %63* %57, i64 0, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = and i8 %59, 2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %55
  %63 = add i32 %53, -1
  store i32 %63, i32* %52, align 8
  %64 = load %22*, %22** %46, align 8
  %65 = getelementptr inbounds %22, %22* %64, i64 0, i32 4
  %66 = load %9*, %9** %65, align 8
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %9* [ %66, %62 ], [ %49, %55 ]
  %69 = tail call %9* @zend_array_dup(%9* %68) #13
  %70 = load %22*, %22** %46, align 8
  %71 = getelementptr inbounds %22, %22* %70, i64 0, i32 4
  store %9* %69, %9** %71, align 8
  %72 = load %22*, %22** %46, align 8
  br label %73

73:                                               ; preds = %67, %51, %45
  %74 = phi %22* [ %72, %67 ], [ %47, %51 ], [ %47, %45 ]
  %75 = getelementptr inbounds %22, %22* %74, i64 0, i32 3
  %76 = load %23*, %23** %75, align 8
  %77 = getelementptr inbounds %23, %23* %76, i64 0, i32 15
  %78 = load %9* (%5*)*, %9* (%5*)** %77, align 8
  %79 = tail call %9* %78(%5* nonnull %20) #13
  br label %81

80:                                               ; preds = %39
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %20) #13
  br label %139

81:                                               ; preds = %73, %42
  %82 = phi %9* [ %44, %42 ], [ %79, %73 ]
  %83 = getelementptr inbounds %9, %9* %82, i64 0, i32 7
  tail call void @zend_hash_internal_pointer_end_ex(%9* %82, i32* nonnull %83) #13
  %84 = getelementptr inbounds %24, %24* %0, i64 0, i32 5
  %85 = load %24*, %24** %84, align 8
  %86 = icmp eq %24* %85, null
  br i1 %86, label %101, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %24, %24* %85, i64 0, i32 3
  %89 = bitcast %12** %88 to %64**
  %90 = load %64*, %64** %89, align 8
  %91 = getelementptr inbounds %64, %64* %90, i64 0, i32 0
  %92 = load i8, i8* %91, align 8
  %93 = and i8 %92, 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %87
  %96 = getelementptr inbounds %24, %24* %85, i64 0, i32 0
  %97 = load %15*, %15** %96, align 8
  %98 = getelementptr inbounds %15, %15* %97, i64 0, i32 9
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %139, label %101

101:                                              ; preds = %95, %81, %87
  %102 = tail call %5* @zend_hash_get_current_data_ex(%9* %82, i32* nonnull %83) #13
  %103 = icmp eq %5* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %105, align 8
  br label %139

106:                                              ; preds = %101
  %107 = getelementptr inbounds %5, %5* %102, i64 0, i32 1
  %108 = bitcast %7* %107 to i8*
  %109 = load i8, i8* %108, align 8
  %110 = icmp eq i8 %109, 15
  br i1 %110, label %111, label %117

111:                                              ; preds = %106
  %112 = bitcast %5* %102 to %5**
  %113 = load %5*, %5** %112, align 8
  %114 = getelementptr inbounds %5, %5* %113, i64 0, i32 1
  %115 = bitcast %7* %114 to i8*
  %116 = load i8, i8* %115, align 8
  br label %117

117:                                              ; preds = %106, %111
  %118 = phi i8 [ %116, %111 ], [ %109, %106 ]
  %119 = phi %5* [ %113, %111 ], [ %102, %106 ]
  %120 = icmp eq i8 %118, 10
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = bitcast %5* %119 to %59**
  %123 = load %59*, %59** %122, align 8
  %124 = getelementptr inbounds %59, %59* %123, i64 0, i32 1
  br label %125

125:                                              ; preds = %117, %121
  %126 = phi %5* [ %124, %121 ], [ %119, %117 ]
  %127 = bitcast %5* %126 to %61**
  %128 = load %61*, %61** %127, align 8
  %129 = getelementptr inbounds %5, %5* %126, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = bitcast %5* %1 to %61**
  store %61* %128, %61** %131, align 8
  %132 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %130, i32* %132, align 8
  %133 = and i32 %130, 1024
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %61, %61* %128, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %6, %95, %125, %135, %80, %104
  ret void
}

declare dso_local void @zend_hash_internal_pointer_end_ex(%9*, i32*) local_unnamed_addr #1

declare dso_local %5* @zend_hash_get_current_data_ex(%9*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_prev(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %140

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = bitcast i8*** %9 to %59**
  %17 = load %59*, %59** %16, align 8
  %18 = getelementptr inbounds %59, %59* %17, i64 0, i32 1
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi %5* [ %18, %15 ], [ %10, %7 ]
  %21 = getelementptr inbounds %5, %5* %20, i64 0, i32 1
  %22 = bitcast %7* %21 to %60*
  %23 = getelementptr inbounds %60, %60* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = bitcast %5* %20 to %61**
  %29 = load %61*, %61** %28, align 8
  %30 = getelementptr inbounds %61, %61* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = and i8 %24, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = add i32 %31, -1
  store i32 %37, i32* %30, align 4
  br label %38

38:                                               ; preds = %33, %36
  tail call void @_zval_copy_ctor_func(%5* nonnull %20) #13
  br label %39

39:                                               ; preds = %19, %27, %38
  %40 = bitcast %7* %21 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %80 [
    i8 7, label %42
    i8 8, label %45
  ]

42:                                               ; preds = %39
  %43 = bitcast %5* %20 to %9**
  %44 = load %9*, %9** %43, align 8
  br label %81

45:                                               ; preds = %39
  %46 = bitcast %5* %20 to %22**
  %47 = load %22*, %22** %46, align 8
  %48 = getelementptr inbounds %22, %22* %47, i64 0, i32 4
  %49 = load %9*, %9** %48, align 8
  %50 = icmp eq %9* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %73

55:                                               ; preds = %51
  %56 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 1
  %57 = bitcast %4* %56 to %63*
  %58 = getelementptr inbounds %63, %63* %57, i64 0, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = and i8 %59, 2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %55
  %63 = add i32 %53, -1
  store i32 %63, i32* %52, align 8
  %64 = load %22*, %22** %46, align 8
  %65 = getelementptr inbounds %22, %22* %64, i64 0, i32 4
  %66 = load %9*, %9** %65, align 8
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %9* [ %66, %62 ], [ %49, %55 ]
  %69 = tail call %9* @zend_array_dup(%9* %68) #13
  %70 = load %22*, %22** %46, align 8
  %71 = getelementptr inbounds %22, %22* %70, i64 0, i32 4
  store %9* %69, %9** %71, align 8
  %72 = load %22*, %22** %46, align 8
  br label %73

73:                                               ; preds = %67, %51, %45
  %74 = phi %22* [ %72, %67 ], [ %47, %51 ], [ %47, %45 ]
  %75 = getelementptr inbounds %22, %22* %74, i64 0, i32 3
  %76 = load %23*, %23** %75, align 8
  %77 = getelementptr inbounds %23, %23* %76, i64 0, i32 15
  %78 = load %9* (%5*)*, %9* (%5*)** %77, align 8
  %79 = tail call %9* %78(%5* nonnull %20) #13
  br label %81

80:                                               ; preds = %39
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %20) #13
  br label %140

81:                                               ; preds = %73, %42
  %82 = phi %9* [ %44, %42 ], [ %79, %73 ]
  %83 = getelementptr inbounds %9, %9* %82, i64 0, i32 7
  %84 = tail call i32 @zend_hash_move_backwards_ex(%9* %82, i32* nonnull %83) #13
  %85 = getelementptr inbounds %24, %24* %0, i64 0, i32 5
  %86 = load %24*, %24** %85, align 8
  %87 = icmp eq %24* %86, null
  br i1 %87, label %102, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %24, %24* %86, i64 0, i32 3
  %90 = bitcast %12** %89 to %64**
  %91 = load %64*, %64** %90, align 8
  %92 = getelementptr inbounds %64, %64* %91, i64 0, i32 0
  %93 = load i8, i8* %92, align 8
  %94 = and i8 %93, 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %88
  %97 = getelementptr inbounds %24, %24* %86, i64 0, i32 0
  %98 = load %15*, %15** %97, align 8
  %99 = getelementptr inbounds %15, %15* %98, i64 0, i32 9
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %140, label %102

102:                                              ; preds = %96, %81, %88
  %103 = tail call %5* @zend_hash_get_current_data_ex(%9* %82, i32* nonnull %83) #13
  %104 = icmp eq %5* %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  %106 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %106, align 8
  br label %140

107:                                              ; preds = %102
  %108 = getelementptr inbounds %5, %5* %103, i64 0, i32 1
  %109 = bitcast %7* %108 to i8*
  %110 = load i8, i8* %109, align 8
  %111 = icmp eq i8 %110, 15
  br i1 %111, label %112, label %118

112:                                              ; preds = %107
  %113 = bitcast %5* %103 to %5**
  %114 = load %5*, %5** %113, align 8
  %115 = getelementptr inbounds %5, %5* %114, i64 0, i32 1
  %116 = bitcast %7* %115 to i8*
  %117 = load i8, i8* %116, align 8
  br label %118

118:                                              ; preds = %107, %112
  %119 = phi i8 [ %117, %112 ], [ %110, %107 ]
  %120 = phi %5* [ %114, %112 ], [ %103, %107 ]
  %121 = icmp eq i8 %119, 10
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = bitcast %5* %120 to %59**
  %124 = load %59*, %59** %123, align 8
  %125 = getelementptr inbounds %59, %59* %124, i64 0, i32 1
  br label %126

126:                                              ; preds = %118, %122
  %127 = phi %5* [ %125, %122 ], [ %120, %118 ]
  %128 = bitcast %5* %127 to %61**
  %129 = load %61*, %61** %128, align 8
  %130 = getelementptr inbounds %5, %5* %127, i64 0, i32 1, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = bitcast %5* %1 to %61**
  store %61* %129, %61** %132, align 8
  %133 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %131, i32* %133, align 8
  %134 = and i32 %131, 1024
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %61, %61* %129, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %137, align 4
  br label %140

140:                                              ; preds = %6, %96, %126, %136, %80, %105
  ret void
}

declare dso_local i32 @zend_hash_move_backwards_ex(%9*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_next(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %140

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = bitcast i8*** %9 to %59**
  %17 = load %59*, %59** %16, align 8
  %18 = getelementptr inbounds %59, %59* %17, i64 0, i32 1
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi %5* [ %18, %15 ], [ %10, %7 ]
  %21 = getelementptr inbounds %5, %5* %20, i64 0, i32 1
  %22 = bitcast %7* %21 to %60*
  %23 = getelementptr inbounds %60, %60* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = bitcast %5* %20 to %61**
  %29 = load %61*, %61** %28, align 8
  %30 = getelementptr inbounds %61, %61* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = and i8 %24, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = add i32 %31, -1
  store i32 %37, i32* %30, align 4
  br label %38

38:                                               ; preds = %33, %36
  tail call void @_zval_copy_ctor_func(%5* nonnull %20) #13
  br label %39

39:                                               ; preds = %19, %27, %38
  %40 = bitcast %7* %21 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %80 [
    i8 7, label %42
    i8 8, label %45
  ]

42:                                               ; preds = %39
  %43 = bitcast %5* %20 to %9**
  %44 = load %9*, %9** %43, align 8
  br label %81

45:                                               ; preds = %39
  %46 = bitcast %5* %20 to %22**
  %47 = load %22*, %22** %46, align 8
  %48 = getelementptr inbounds %22, %22* %47, i64 0, i32 4
  %49 = load %9*, %9** %48, align 8
  %50 = icmp eq %9* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %73

55:                                               ; preds = %51
  %56 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 1
  %57 = bitcast %4* %56 to %63*
  %58 = getelementptr inbounds %63, %63* %57, i64 0, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = and i8 %59, 2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %55
  %63 = add i32 %53, -1
  store i32 %63, i32* %52, align 8
  %64 = load %22*, %22** %46, align 8
  %65 = getelementptr inbounds %22, %22* %64, i64 0, i32 4
  %66 = load %9*, %9** %65, align 8
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %9* [ %66, %62 ], [ %49, %55 ]
  %69 = tail call %9* @zend_array_dup(%9* %68) #13
  %70 = load %22*, %22** %46, align 8
  %71 = getelementptr inbounds %22, %22* %70, i64 0, i32 4
  store %9* %69, %9** %71, align 8
  %72 = load %22*, %22** %46, align 8
  br label %73

73:                                               ; preds = %67, %51, %45
  %74 = phi %22* [ %72, %67 ], [ %47, %51 ], [ %47, %45 ]
  %75 = getelementptr inbounds %22, %22* %74, i64 0, i32 3
  %76 = load %23*, %23** %75, align 8
  %77 = getelementptr inbounds %23, %23* %76, i64 0, i32 15
  %78 = load %9* (%5*)*, %9* (%5*)** %77, align 8
  %79 = tail call %9* %78(%5* nonnull %20) #13
  br label %81

80:                                               ; preds = %39
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %20) #13
  br label %140

81:                                               ; preds = %73, %42
  %82 = phi %9* [ %44, %42 ], [ %79, %73 ]
  %83 = getelementptr inbounds %9, %9* %82, i64 0, i32 7
  %84 = tail call i32 @zend_hash_move_forward_ex(%9* %82, i32* nonnull %83) #13
  %85 = getelementptr inbounds %24, %24* %0, i64 0, i32 5
  %86 = load %24*, %24** %85, align 8
  %87 = icmp eq %24* %86, null
  br i1 %87, label %102, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %24, %24* %86, i64 0, i32 3
  %90 = bitcast %12** %89 to %64**
  %91 = load %64*, %64** %90, align 8
  %92 = getelementptr inbounds %64, %64* %91, i64 0, i32 0
  %93 = load i8, i8* %92, align 8
  %94 = and i8 %93, 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %88
  %97 = getelementptr inbounds %24, %24* %86, i64 0, i32 0
  %98 = load %15*, %15** %97, align 8
  %99 = getelementptr inbounds %15, %15* %98, i64 0, i32 9
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %140, label %102

102:                                              ; preds = %96, %81, %88
  %103 = tail call %5* @zend_hash_get_current_data_ex(%9* %82, i32* nonnull %83) #13
  %104 = icmp eq %5* %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  %106 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %106, align 8
  br label %140

107:                                              ; preds = %102
  %108 = getelementptr inbounds %5, %5* %103, i64 0, i32 1
  %109 = bitcast %7* %108 to i8*
  %110 = load i8, i8* %109, align 8
  %111 = icmp eq i8 %110, 15
  br i1 %111, label %112, label %118

112:                                              ; preds = %107
  %113 = bitcast %5* %103 to %5**
  %114 = load %5*, %5** %113, align 8
  %115 = getelementptr inbounds %5, %5* %114, i64 0, i32 1
  %116 = bitcast %7* %115 to i8*
  %117 = load i8, i8* %116, align 8
  br label %118

118:                                              ; preds = %107, %112
  %119 = phi i8 [ %117, %112 ], [ %110, %107 ]
  %120 = phi %5* [ %114, %112 ], [ %103, %107 ]
  %121 = icmp eq i8 %119, 10
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = bitcast %5* %120 to %59**
  %124 = load %59*, %59** %123, align 8
  %125 = getelementptr inbounds %59, %59* %124, i64 0, i32 1
  br label %126

126:                                              ; preds = %118, %122
  %127 = phi %5* [ %125, %122 ], [ %120, %118 ]
  %128 = bitcast %5* %127 to %61**
  %129 = load %61*, %61** %128, align 8
  %130 = getelementptr inbounds %5, %5* %127, i64 0, i32 1, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = bitcast %5* %1 to %61**
  store %61* %129, %61** %132, align 8
  %133 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %131, i32* %133, align 8
  %134 = and i32 %131, 1024
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %61, %61* %129, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %137, align 4
  br label %140

140:                                              ; preds = %6, %96, %126, %136, %80, %105
  ret void
}

declare dso_local i32 @zend_hash_move_forward_ex(%9*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_reset(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %139

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = bitcast i8*** %9 to %59**
  %17 = load %59*, %59** %16, align 8
  %18 = getelementptr inbounds %59, %59* %17, i64 0, i32 1
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi %5* [ %18, %15 ], [ %10, %7 ]
  %21 = getelementptr inbounds %5, %5* %20, i64 0, i32 1
  %22 = bitcast %7* %21 to %60*
  %23 = getelementptr inbounds %60, %60* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = bitcast %5* %20 to %61**
  %29 = load %61*, %61** %28, align 8
  %30 = getelementptr inbounds %61, %61* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = and i8 %24, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = add i32 %31, -1
  store i32 %37, i32* %30, align 4
  br label %38

38:                                               ; preds = %33, %36
  tail call void @_zval_copy_ctor_func(%5* nonnull %20) #13
  br label %39

39:                                               ; preds = %19, %27, %38
  %40 = bitcast %7* %21 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %80 [
    i8 7, label %42
    i8 8, label %45
  ]

42:                                               ; preds = %39
  %43 = bitcast %5* %20 to %9**
  %44 = load %9*, %9** %43, align 8
  br label %81

45:                                               ; preds = %39
  %46 = bitcast %5* %20 to %22**
  %47 = load %22*, %22** %46, align 8
  %48 = getelementptr inbounds %22, %22* %47, i64 0, i32 4
  %49 = load %9*, %9** %48, align 8
  %50 = icmp eq %9* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %73

55:                                               ; preds = %51
  %56 = getelementptr inbounds %9, %9* %49, i64 0, i32 0, i32 1
  %57 = bitcast %4* %56 to %63*
  %58 = getelementptr inbounds %63, %63* %57, i64 0, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = and i8 %59, 2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %55
  %63 = add i32 %53, -1
  store i32 %63, i32* %52, align 8
  %64 = load %22*, %22** %46, align 8
  %65 = getelementptr inbounds %22, %22* %64, i64 0, i32 4
  %66 = load %9*, %9** %65, align 8
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %9* [ %66, %62 ], [ %49, %55 ]
  %69 = tail call %9* @zend_array_dup(%9* %68) #13
  %70 = load %22*, %22** %46, align 8
  %71 = getelementptr inbounds %22, %22* %70, i64 0, i32 4
  store %9* %69, %9** %71, align 8
  %72 = load %22*, %22** %46, align 8
  br label %73

73:                                               ; preds = %67, %51, %45
  %74 = phi %22* [ %72, %67 ], [ %47, %51 ], [ %47, %45 ]
  %75 = getelementptr inbounds %22, %22* %74, i64 0, i32 3
  %76 = load %23*, %23** %75, align 8
  %77 = getelementptr inbounds %23, %23* %76, i64 0, i32 15
  %78 = load %9* (%5*)*, %9* (%5*)** %77, align 8
  %79 = tail call %9* %78(%5* nonnull %20) #13
  br label %81

80:                                               ; preds = %39
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %20) #13
  br label %139

81:                                               ; preds = %73, %42
  %82 = phi %9* [ %44, %42 ], [ %79, %73 ]
  %83 = getelementptr inbounds %9, %9* %82, i64 0, i32 7
  tail call void @zend_hash_internal_pointer_reset_ex(%9* %82, i32* nonnull %83) #13
  %84 = getelementptr inbounds %24, %24* %0, i64 0, i32 5
  %85 = load %24*, %24** %84, align 8
  %86 = icmp eq %24* %85, null
  br i1 %86, label %101, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %24, %24* %85, i64 0, i32 3
  %89 = bitcast %12** %88 to %64**
  %90 = load %64*, %64** %89, align 8
  %91 = getelementptr inbounds %64, %64* %90, i64 0, i32 0
  %92 = load i8, i8* %91, align 8
  %93 = and i8 %92, 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %87
  %96 = getelementptr inbounds %24, %24* %85, i64 0, i32 0
  %97 = load %15*, %15** %96, align 8
  %98 = getelementptr inbounds %15, %15* %97, i64 0, i32 9
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %139, label %101

101:                                              ; preds = %95, %81, %87
  %102 = tail call %5* @zend_hash_get_current_data_ex(%9* %82, i32* nonnull %83) #13
  %103 = icmp eq %5* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %105, align 8
  br label %139

106:                                              ; preds = %101
  %107 = getelementptr inbounds %5, %5* %102, i64 0, i32 1
  %108 = bitcast %7* %107 to i8*
  %109 = load i8, i8* %108, align 8
  %110 = icmp eq i8 %109, 15
  br i1 %110, label %111, label %117

111:                                              ; preds = %106
  %112 = bitcast %5* %102 to %5**
  %113 = load %5*, %5** %112, align 8
  %114 = getelementptr inbounds %5, %5* %113, i64 0, i32 1
  %115 = bitcast %7* %114 to i8*
  %116 = load i8, i8* %115, align 8
  br label %117

117:                                              ; preds = %106, %111
  %118 = phi i8 [ %116, %111 ], [ %109, %106 ]
  %119 = phi %5* [ %113, %111 ], [ %102, %106 ]
  %120 = icmp eq i8 %118, 10
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = bitcast %5* %119 to %59**
  %123 = load %59*, %59** %122, align 8
  %124 = getelementptr inbounds %59, %59* %123, i64 0, i32 1
  br label %125

125:                                              ; preds = %117, %121
  %126 = phi %5* [ %124, %121 ], [ %119, %117 ]
  %127 = bitcast %5* %126 to %61**
  %128 = load %61*, %61** %127, align 8
  %129 = getelementptr inbounds %5, %5* %126, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = bitcast %5* %1 to %61**
  store %61* %128, %61** %131, align 8
  %132 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %130, i32* %132, align 8
  %133 = and i32 %130, 1024
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %61, %61* %128, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %6, %95, %125, %135, %80, %104
  ret void
}

declare dso_local void @zend_hash_internal_pointer_reset_ex(%9*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_current(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %66

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  switch i8 %13, label %25 [
    i8 7, label %14
    i8 8, label %17
  ]

14:                                               ; preds = %7
  %15 = bitcast i8*** %9 to %9**
  %16 = load %9*, %9** %15, align 8
  br label %26

17:                                               ; preds = %7
  %18 = bitcast i8*** %9 to %22**
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 3
  %21 = load %23*, %23** %20, align 8
  %22 = getelementptr inbounds %23, %23* %21, i64 0, i32 15
  %23 = load %9* (%5*)*, %9* (%5*)** %22, align 8
  %24 = tail call %9* %23(%5* nonnull %10) #13
  br label %26

25:                                               ; preds = %7
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %10) #13
  br label %66

26:                                               ; preds = %17, %14
  %27 = phi %9* [ %16, %14 ], [ %24, %17 ]
  %28 = getelementptr inbounds %9, %9* %27, i64 0, i32 7
  %29 = tail call %5* @zend_hash_get_current_data_ex(%9* %27, i32* nonnull %28) #13
  %30 = icmp eq %5* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %32, align 8
  br label %66

33:                                               ; preds = %26
  %34 = getelementptr inbounds %5, %5* %29, i64 0, i32 1
  %35 = bitcast %7* %34 to i8*
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 15
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = bitcast %5* %29 to %5**
  %40 = load %5*, %5** %39, align 8
  %41 = getelementptr inbounds %5, %5* %40, i64 0, i32 1
  %42 = bitcast %7* %41 to i8*
  %43 = load i8, i8* %42, align 8
  br label %44

44:                                               ; preds = %33, %38
  %45 = phi i8 [ %43, %38 ], [ %36, %33 ]
  %46 = phi %5* [ %40, %38 ], [ %29, %33 ]
  %47 = icmp eq i8 %45, 10
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = bitcast %5* %46 to %59**
  %50 = load %59*, %59** %49, align 8
  %51 = getelementptr inbounds %59, %59* %50, i64 0, i32 1
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi %5* [ %51, %48 ], [ %46, %44 ]
  %54 = bitcast %5* %53 to %61**
  %55 = load %61*, %61** %54, align 8
  %56 = getelementptr inbounds %5, %5* %53, i64 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %5* %1 to %61**
  store %61* %55, %61** %58, align 8
  %59 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %57, i32* %59, align 8
  %60 = and i32 %57, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %61, %61* %55, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %63, align 4
  br label %66

66:                                               ; preds = %6, %62, %52, %25, %31
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_key(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  switch i8 %13, label %25 [
    i8 7, label %14
    i8 8, label %17
  ]

14:                                               ; preds = %7
  %15 = bitcast i8*** %9 to %9**
  %16 = load %9*, %9** %15, align 8
  br label %26

17:                                               ; preds = %7
  %18 = bitcast i8*** %9 to %22**
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 3
  %21 = load %23*, %23** %20, align 8
  %22 = getelementptr inbounds %23, %23* %21, i64 0, i32 15
  %23 = load %9* (%5*)*, %9* (%5*)** %22, align 8
  %24 = tail call %9* %23(%5* nonnull %10) #13
  br label %26

25:                                               ; preds = %7
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %10) #13
  br label %29

26:                                               ; preds = %17, %14
  %27 = phi %9* [ %16, %14 ], [ %24, %17 ]
  %28 = getelementptr inbounds %9, %9* %27, i64 0, i32 7
  tail call void @zend_hash_get_current_key_zval_ex(%9* %27, %5* %1, i32* nonnull %28) #13
  br label %29

29:                                               ; preds = %6, %25, %26
  ret void
}

declare dso_local void @zend_hash_get_current_key_zval_ex(%9*, %5*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_min(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 1, i32 -1) #13
  br label %79

8:                                                ; preds = %2
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = bitcast i8*** %10 to %5*
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %13, label %50

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8**, i8*** %9, i64 3
  %15 = bitcast i8*** %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 7
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @25, i64 0, i64 0)) #13
  %19 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %19, align 8
  br label %79

20:                                               ; preds = %13
  %21 = bitcast i8*** %10 to %9**
  %22 = load %9*, %9** %21, align 8
  %23 = tail call %5* @zend_hash_minmax(%9* %22, i32 (i8*, i8*)* nonnull @76, i32 0) #13
  %24 = icmp eq %5* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %5, %5* %23, i64 0, i32 1
  %27 = bitcast %7* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 10
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = bitcast %5* %23 to %59**
  %32 = load %59*, %59** %31, align 8
  %33 = getelementptr inbounds %59, %59* %32, i64 0, i32 1
  br label %34

34:                                               ; preds = %25, %30
  %35 = phi %5* [ %33, %30 ], [ %23, %25 ]
  %36 = bitcast %5* %35 to %61**
  %37 = load %61*, %61** %36, align 8
  %38 = getelementptr inbounds %5, %5* %35, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %5* %1 to %61**
  store %61* %37, %61** %40, align 8
  %41 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %39, i32* %41, align 8
  %42 = and i32 %39, 1024
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %79, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %61, %61* %37, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  br label %79

48:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @26, i64 0, i64 0)) #13
  %49 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %49, align 8
  br label %79

50:                                               ; preds = %8
  %51 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %53 = bitcast %7* %52 to i8*
  %54 = zext i32 %5 to i64
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i64 [ 1, %50 ], [ %63, %55 ]
  %57 = phi %5* [ %11, %50 ], [ %62, %55 ]
  %58 = getelementptr inbounds %5, %5* %11, i64 %56
  %59 = call i32 @is_smaller_function(%5* nonnull %3, %5* nonnull %58, %5* %57) #13
  %60 = load i8, i8* %53, align 8
  %61 = icmp eq i8 %60, 3
  %62 = select i1 %61, %5* %58, %5* %57
  %63 = add nuw nsw i64 %56, 1
  %64 = icmp eq i64 %63, %54
  br i1 %64, label %65, label %55

65:                                               ; preds = %55
  %66 = bitcast %5* %62 to %61**
  %67 = load %61*, %61** %66, align 8
  %68 = getelementptr inbounds %5, %5* %62, i64 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %5* %1 to %61**
  store %61* %67, %61** %70, align 8
  %71 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %69, i32* %71, align 8
  %72 = and i32 %69, 1024
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %61, %61* %67, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 4
  br label %78

78:                                               ; preds = %65, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  br label %79

79:                                               ; preds = %7, %78, %44, %34, %48, %18
  ret void
}

declare dso_local %5* @zend_hash_minmax(%9*, i32 (i8*, i8*)*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @76(i8* %0, i8* %1) #0 {
  %3 = alloca %5, align 8
  %4 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = bitcast i8* %0 to %5*
  %6 = bitcast i8* %1 to %5*
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 15
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = bitcast i8* %0 to %5**
  %12 = load %5*, %5** %11, align 8
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi %5* [ %12, %10 ], [ %5, %2 ]
  %15 = getelementptr inbounds i8, i8* %1, i64 8
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 15
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = bitcast i8* %1 to %5**
  %20 = load %5*, %5** %19, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %5* [ %20, %18 ], [ %6, %13 ]
  %23 = call i32 @compare_function(%5* nonnull %3, %5* %14, %5* %22) #13
  %24 = icmp eq i32 %23, -1
  %25 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = select i1 %24, i32 0, i32 %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret i32 %28
}

declare dso_local i32 @is_smaller_function(%5*, %5*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_max(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 1, i32 -1) #13
  br label %79

8:                                                ; preds = %2
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = bitcast i8*** %10 to %5*
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %13, label %50

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8**, i8*** %9, i64 3
  %15 = bitcast i8*** %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 7
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @25, i64 0, i64 0)) #13
  %19 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %19, align 8
  br label %79

20:                                               ; preds = %13
  %21 = bitcast i8*** %10 to %9**
  %22 = load %9*, %9** %21, align 8
  %23 = tail call %5* @zend_hash_minmax(%9* %22, i32 (i8*, i8*)* nonnull @76, i32 1) #13
  %24 = icmp eq %5* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %5, %5* %23, i64 0, i32 1
  %27 = bitcast %7* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 10
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = bitcast %5* %23 to %59**
  %32 = load %59*, %59** %31, align 8
  %33 = getelementptr inbounds %59, %59* %32, i64 0, i32 1
  br label %34

34:                                               ; preds = %25, %30
  %35 = phi %5* [ %33, %30 ], [ %23, %25 ]
  %36 = bitcast %5* %35 to %61**
  %37 = load %61*, %61** %36, align 8
  %38 = getelementptr inbounds %5, %5* %35, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %5* %1 to %61**
  store %61* %37, %61** %40, align 8
  %41 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %39, i32* %41, align 8
  %42 = and i32 %39, 1024
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %79, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %61, %61* %37, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  br label %79

48:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @26, i64 0, i64 0)) #13
  %49 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %49, align 8
  br label %79

50:                                               ; preds = %8
  %51 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %53 = bitcast %7* %52 to i8*
  %54 = zext i32 %5 to i64
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i64 [ 1, %50 ], [ %63, %55 ]
  %57 = phi %5* [ %11, %50 ], [ %62, %55 ]
  %58 = getelementptr inbounds %5, %5* %11, i64 %56
  %59 = call i32 @is_smaller_or_equal_function(%5* nonnull %3, %5* nonnull %58, %5* %57) #13
  %60 = load i8, i8* %53, align 8
  %61 = icmp eq i8 %60, 2
  %62 = select i1 %61, %5* %58, %5* %57
  %63 = add nuw nsw i64 %56, 1
  %64 = icmp eq i64 %63, %54
  br i1 %64, label %65, label %55

65:                                               ; preds = %55
  %66 = bitcast %5* %62 to %61**
  %67 = load %61*, %61** %66, align 8
  %68 = getelementptr inbounds %5, %5* %62, i64 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %5* %1 to %61**
  store %61* %67, %61** %70, align 8
  %71 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %69, i32* %71, align 8
  %72 = and i32 %69, 1024
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %61, %61* %67, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 4
  br label %78

78:                                               ; preds = %65, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  br label %79

79:                                               ; preds = %7, %78, %44, %34, %48, %18
  ret void
}

declare dso_local i32 @is_smaller_or_equal_function(%5*, %5*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_walk(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %34, align 8
  %4 = alloca %35, align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %34* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6)
  %7 = getelementptr inbounds %35, %35* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i64 40, i1 false)
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i8* null, i8** %5, align 8
  %11 = and i32 %9, -2
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %9, i32 2, i32 3) #13
  br label %73

14:                                               ; preds = %2
  %15 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %16 = getelementptr inbounds i8**, i8*** %15, i64 2
  %17 = bitcast i8*** %16 to %5*
  %18 = getelementptr inbounds i8**, i8*** %15, i64 3
  %19 = bitcast i8*** %18 to i8*
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 10
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = bitcast i8*** %16 to %59**
  %24 = load %59*, %59** %23, align 8
  %25 = getelementptr inbounds %59, %59* %24, i64 0, i32 1
  br label %26

26:                                               ; preds = %14, %22
  %27 = phi %5* [ %25, %22 ], [ %17, %14 ]
  %28 = getelementptr inbounds %5, %5* %27, i64 0, i32 1
  %29 = bitcast %7* %28 to %60*
  %30 = getelementptr inbounds %60, %60* %29, i64 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 16
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %26
  %35 = bitcast %5* %27 to %61**
  %36 = load %61*, %61** %35, align 8
  %37 = getelementptr inbounds %61, %61* %36, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = and i8 %31, 4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = add i32 %38, -1
  store i32 %44, i32* %37, align 4
  br label %45

45:                                               ; preds = %40, %43
  tail call void @_zval_copy_ctor_func(%5* nonnull %27) #13
  br label %46

46:                                               ; preds = %26, %34, %45
  %47 = bitcast %7* %28 to i8*
  %48 = load i8, i8* %47, align 8
  %49 = add i8 %48, -7
  %50 = icmp ult i8 %49, 2
  br i1 %50, label %51, label %69

51:                                               ; preds = %46
  %52 = getelementptr inbounds i8**, i8*** %15, i64 4
  %53 = bitcast i8*** %52 to %5*
  %54 = call i32 @zend_fcall_info_init(%5* nonnull %53, i32 0, %34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11), %2** null, i8** nonnull %5) #13
  %55 = icmp eq i32 %54, 0
  %56 = load i8*, i8** %5, align 8
  %57 = icmp ne i8* %56, null
  br i1 %55, label %58, label %67

58:                                               ; preds = %51
  br i1 %57, label %59, label %60

59:                                               ; preds = %58
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 8192, i32 2, i8* nonnull %56) #13
  br label %60

60:                                               ; preds = %59, %58
  %61 = icmp slt i32 %9, 3
  %62 = getelementptr inbounds i8**, i8*** %15, i64 6
  %63 = bitcast i8*** %62 to %5*
  %64 = select i1 %61, %5* null, %5* %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %65 = call fastcc i32 @77(%5* nonnull %27, %5* %64, i32 0)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i8* nonnull align 8 %6, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i8* nonnull align 8 %7, i64 40, i1 false)
  %66 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %66, align 8
  br label %74

67:                                               ; preds = %51
  br i1 %57, label %68, label %69

68:                                               ; preds = %67
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 2, i8* nonnull %56) #13
  br label %73

69:                                               ; preds = %46, %67
  %70 = phi i32 [ 2, %67 ], [ 1, %46 ]
  %71 = phi i32 [ 4, %67 ], [ 3, %46 ]
  %72 = phi %5* [ %53, %67 ], [ %27, %46 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %70, i32 %71, %5* %72) #13
  br label %73

73:                                               ; preds = %13, %69, %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i8* nonnull align 8 %6, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i8* nonnull align 8 %7, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %74

74:                                               ; preds = %73, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @77(%5* %0, %5* readonly %1, i32 %2) unnamed_addr #0 {
  %4 = alloca [3 x %5], align 16
  %5 = alloca %5, align 8
  %6 = alloca i32, align 4
  %7 = alloca %34, align 8
  %8 = alloca %35, align 8
  %9 = alloca %5, align 8
  %10 = bitcast [3 x %5]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #13
  %11 = bitcast %5* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %5, %5* %0, i64 0, i32 1
  %13 = bitcast %7* %12 to i8*
  %14 = load i8, i8* %13, align 8
  switch i8 %14, label %26 [
    i8 7, label %15
    i8 8, label %18
  ]

15:                                               ; preds = %3
  %16 = bitcast %5* %0 to %9**
  %17 = load %9*, %9** %16, align 8
  br label %26

18:                                               ; preds = %3
  %19 = bitcast %5* %0 to %22**
  %20 = load %22*, %22** %19, align 8
  %21 = getelementptr inbounds %22, %22* %20, i64 0, i32 3
  %22 = load %23*, %23** %21, align 8
  %23 = getelementptr inbounds %23, %23* %22, i64 0, i32 15
  %24 = load %9* (%5*)*, %9* (%5*)** %23, align 8
  %25 = tail call %9* %24(%5* nonnull %0) #13
  br label %26

26:                                               ; preds = %3, %18, %15
  %27 = phi %9* [ %17, %15 ], [ %25, %18 ], [ null, %3 ]
  %28 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %29 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 1
  %30 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 1, i32 1, i32 0
  store i32 0, i32* %30, align 8
  %31 = icmp ne %5* %1, null
  br i1 %31, label %32, label %46

32:                                               ; preds = %26
  %33 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 2
  %34 = bitcast %5* %1 to %61**
  %35 = load %61*, %61** %34, align 8
  %36 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %5* %33 to %61**
  store %61* %35, %61** %38, align 16
  %39 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 2, i32 1, i32 0
  store i32 %37, i32* %39, align 8
  %40 = and i32 %37, 1024
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %61, %61* %35, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 4
  br label %46

46:                                               ; preds = %42, %32, %26
  store %5* %5, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10, i32 2), align 8
  %47 = select i1 %31, i32 3, i32 2
  store i32 %47, i32* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10, i32 6), align 4
  %48 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 0
  store %5* %48, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10, i32 3), align 8
  store i8 0, i8* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10, i32 5), align 8
  call void @zend_hash_internal_pointer_reset_ex(%9* %27, i32* nonnull %6) #13
  %49 = load i32, i32* %6, align 4
  %50 = call i32 @zend_hash_iterator_add(%9* %27, i32 %49) #13
  %51 = zext i32 %50 to i64
  %52 = icmp eq i32 %2, 0
  %53 = bitcast [3 x %5]* %4 to %61**
  %54 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 1, i32 1
  %56 = bitcast %7* %55 to i8*
  %57 = bitcast %34* %7 to i8*
  %58 = getelementptr inbounds %35, %35* %8, i64 0, i32 0
  %59 = bitcast %5* %9 to i8*
  %60 = getelementptr inbounds %5, %5* %9, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %5, %5* %9, i64 0, i32 1, i32 0
  %62 = bitcast %5* %0 to %9**
  %63 = bitcast %5* %0 to %22**
  %64 = bitcast %5* %9 to %61**
  %65 = bitcast %5* %9 to %59**
  br label %66

66:                                               ; preds = %215, %46
  %67 = phi i32 [ 0, %46 ], [ %216, %215 ]
  %68 = phi %9* [ %27, %46 ], [ %217, %215 ]
  %69 = call %5* @zend_hash_get_current_data_ex(%9* %68, i32* nonnull %6) #13
  %70 = icmp eq %5* %69, null
  br i1 %70, label %220, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %5, %5* %69, i64 0, i32 1
  %73 = bitcast %7* %72 to i8*
  %74 = load i8, i8* %73, align 8
  %75 = icmp eq i8 %74, 15
  br i1 %75, label %76, label %85

76:                                               ; preds = %71
  %77 = bitcast %5* %69 to %5**
  %78 = load %5*, %5** %77, align 8
  %79 = getelementptr inbounds %5, %5* %78, i64 0, i32 1
  %80 = bitcast %7* %79 to i8*
  %81 = load i8, i8* %80, align 8
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  %84 = call i32 @zend_hash_move_forward_ex(%9* %68, i32* nonnull %6) #13
  br label %215

85:                                               ; preds = %71, %76
  %86 = phi i8* [ %73, %71 ], [ %80, %76 ]
  %87 = phi i8 [ %74, %71 ], [ %81, %76 ]
  %88 = phi %5* [ %69, %71 ], [ %78, %76 ]
  %89 = icmp eq i8 %87, 10
  br i1 %89, label %104, label %90

90:                                               ; preds = %85
  %91 = call noalias i8* @_emalloc_24() #13
  %92 = bitcast i8* %91 to i32*
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 4
  %94 = bitcast i8* %93 to i32*
  store i32 10, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %91, i64 8
  %96 = getelementptr inbounds %5, %5* %88, i64 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %5, %5* %88, i64 0, i32 1, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = bitcast i8* %95 to i64*
  store i64 %97, i64* %100, align 8
  %101 = getelementptr inbounds i8, i8* %91, i64 16
  %102 = bitcast i8* %101 to i32*
  store i32 %99, i32* %102, align 8
  %103 = bitcast %5* %88 to i8**
  store i8* %91, i8** %103, align 8
  store i32 1034, i32* %98, align 8
  br label %104

104:                                              ; preds = %90, %85
  call void @zend_hash_get_current_key_zval_ex(%9* %68, %5* nonnull %29, i32* nonnull %6) #13
  %105 = call i32 @zend_hash_move_forward_ex(%9* %68, i32* nonnull %6) #13
  %106 = load i32, i32* %6, align 4
  %107 = load %58*, %58** getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 53), align 8
  %108 = getelementptr inbounds %58, %58* %107, i64 %51, i32 1
  store i32 %106, i32* %108, align 8
  br i1 %52, label %109, label %112

109:                                              ; preds = %104
  %110 = bitcast %5* %88 to %61**
  %111 = load %61*, %61** %110, align 8
  br label %179

112:                                              ; preds = %104
  %113 = bitcast %5* %88 to %59**
  %114 = load %59*, %59** %113, align 8
  %115 = getelementptr inbounds %59, %59* %114, i64 0, i32 1, i32 1
  %116 = bitcast %7* %115 to i8*
  %117 = load i8, i8* %116, align 8
  %118 = icmp eq i8 %117, 7
  br i1 %118, label %121, label %119

119:                                              ; preds = %112
  %120 = bitcast %59* %114 to %61*
  br label %179

121:                                              ; preds = %112
  %122 = ptrtoint %59* %114 to i64
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %58)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #13
  %123 = getelementptr inbounds %5, %5* %88, i64 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 8
  store i64 %122, i64* %60, align 8
  store i32 %124, i32* %61, align 8
  %125 = load i8, i8* %86, align 8
  %126 = icmp eq i8 %125, 10
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = load %59*, %59** %113, align 8
  %129 = getelementptr inbounds %59, %59* %128, i64 0, i32 1
  br label %130

130:                                              ; preds = %121, %127
  %131 = phi %5* [ %129, %127 ], [ %88, %121 ]
  %132 = bitcast %5* %131 to %9**
  %133 = load %9*, %9** %132, align 8
  %134 = getelementptr inbounds %9, %9* %133, i64 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = icmp ugt i32 %135, 1
  br i1 %136, label %137, label %149

137:                                              ; preds = %130
  %138 = getelementptr inbounds %5, %5* %131, i64 0, i32 1
  %139 = bitcast %7* %138 to %60*
  %140 = getelementptr inbounds %60, %60* %139, i64 0, i32 1
  %141 = load i8, i8* %140, align 1
  %142 = and i8 %141, 4
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %137
  %145 = add i32 %135, -1
  store i32 %145, i32* %134, align 8
  br label %146

146:                                              ; preds = %137, %144
  %147 = call %9* @zend_array_dup(%9* %133) #13
  store %9* %147, %9** %132, align 8
  %148 = getelementptr inbounds %7, %7* %138, i64 0, i32 0
  store i32 5127, i32* %148, align 8
  br label %149

149:                                              ; preds = %146, %130
  %150 = phi %9* [ %147, %146 ], [ %133, %130 ]
  %151 = getelementptr inbounds %9, %9* %150, i64 0, i32 1
  %152 = bitcast %10* %151 to %62*
  %153 = getelementptr inbounds %62, %62* %152, i64 0, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp ugt i8 %154, 1
  br i1 %155, label %178, label %156

156:                                              ; preds = %149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i64 40, i1 false)
  %157 = load %61*, %61** %64, align 8
  %158 = getelementptr inbounds %61, %61* %157, i64 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %158, align 4
  %161 = load i8, i8* %153, align 1
  %162 = add i8 %161, 1
  store i8 %162, i8* %153, align 1
  %163 = call fastcc i32 @77(%5* nonnull %131, %5* %1, i32 %2)
  %164 = load %59*, %59** %65, align 8
  %165 = getelementptr inbounds %59, %59* %164, i64 0, i32 1, i32 1
  %166 = bitcast %7* %165 to i8*
  %167 = load i8, i8* %166, align 8
  %168 = icmp eq i8 %167, 7
  br i1 %168, label %169, label %177

169:                                              ; preds = %156
  %170 = getelementptr inbounds %59, %59* %164, i64 0, i32 1, i32 0
  %171 = bitcast %6* %170 to %9**
  %172 = load %9*, %9** %171, align 8
  %173 = icmp eq %9* %150, %172
  br i1 %173, label %174, label %177

174:                                              ; preds = %169
  %175 = load i8, i8* %153, align 1
  %176 = add i8 %175, -1
  store i8 %176, i8* %153, align 1
  br label %177

177:                                              ; preds = %156, %169, %174
  call void @_zval_ptr_dtor(%5* nonnull %9) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i8* nonnull align 8 %57, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i8* nonnull align 8 %58, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57)
  br label %194

178:                                              ; preds = %149
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @22, i64 0, i64 0)) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57)
  br label %220

179:                                              ; preds = %119, %109
  %180 = phi %61* [ %111, %109 ], [ %120, %119 ]
  %181 = getelementptr inbounds %5, %5* %88, i64 0, i32 1, i32 0
  %182 = load i32, i32* %181, align 8
  store %61* %180, %61** %53, align 16
  store i32 %182, i32* %54, align 8
  %183 = and i32 %182, 1024
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %61, %61* %180, i64 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, 1
  store i32 %188, i32* %186, align 4
  br label %189

189:                                              ; preds = %179, %185
  %190 = call i32 @zend_call_function(%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11)) #13
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_zval_ptr_dtor(%5* nonnull %5) #13
  br label %193

193:                                              ; preds = %192, %189
  call void @_zval_ptr_dtor(%5* nonnull %48) #13
  br label %194

194:                                              ; preds = %177, %193
  %195 = phi i32 [ %190, %193 ], [ %163, %177 ]
  %196 = load i8, i8* %56, align 8
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  call void @_zval_ptr_dtor(%5* nonnull %29) #13
  store i32 0, i32* %30, align 8
  br label %199

199:                                              ; preds = %194, %198
  %200 = icmp eq i32 %195, -1
  br i1 %200, label %220, label %201

201:                                              ; preds = %199
  %202 = load i8, i8* %13, align 8
  switch i8 %202, label %214 [
    i8 7, label %203
    i8 8, label %206
  ]

203:                                              ; preds = %201
  %204 = call i32 @zend_hash_iterator_pos_ex(i32 %50, %5* nonnull %0) #13
  store i32 %204, i32* %6, align 4
  %205 = load %9*, %9** %62, align 8
  br label %215

206:                                              ; preds = %201
  %207 = load %22*, %22** %63, align 8
  %208 = getelementptr inbounds %22, %22* %207, i64 0, i32 3
  %209 = load %23*, %23** %208, align 8
  %210 = getelementptr inbounds %23, %23* %209, i64 0, i32 15
  %211 = load %9* (%5*)*, %9* (%5*)** %210, align 8
  %212 = call %9* %211(%5* nonnull %0) #13
  %213 = call i32 @zend_hash_iterator_pos(i32 %50, %9* %212) #13
  store i32 %213, i32* %6, align 4
  br label %215

214:                                              ; preds = %201
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @58, i64 0, i64 0)) #13
  br label %220

215:                                              ; preds = %203, %206, %83
  %216 = phi i32 [ %67, %83 ], [ %195, %203 ], [ %195, %206 ]
  %217 = phi %9* [ %68, %83 ], [ %205, %203 ], [ %212, %206 ]
  %218 = load %22*, %22** getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 43), align 8
  %219 = icmp eq %22* %218, null
  br i1 %219, label %66, label %220

220:                                              ; preds = %199, %66, %215, %178, %214
  %221 = phi i32 [ -1, %214 ], [ -1, %178 ], [ -1, %199 ], [ %216, %215 ], [ %67, %66 ]
  br i1 %31, label %222, label %224

222:                                              ; preds = %220
  %223 = getelementptr inbounds [3 x %5], [3 x %5]* %4, i64 0, i64 2
  call void @_zval_ptr_dtor(%5* nonnull %223) #13
  br label %224

224:                                              ; preds = %222, %220
  call void @zend_hash_iterator_del(i32 %50) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13
  ret i32 %221
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_walk_recursive(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %34, align 8
  %4 = alloca %35, align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %34* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6)
  %7 = getelementptr inbounds %35, %35* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i64 40, i1 false)
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i8* null, i8** %5, align 8
  %11 = and i32 %9, -2
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %9, i32 2, i32 3) #13
  br label %73

14:                                               ; preds = %2
  %15 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %16 = getelementptr inbounds i8**, i8*** %15, i64 2
  %17 = bitcast i8*** %16 to %5*
  %18 = getelementptr inbounds i8**, i8*** %15, i64 3
  %19 = bitcast i8*** %18 to i8*
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 10
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = bitcast i8*** %16 to %59**
  %24 = load %59*, %59** %23, align 8
  %25 = getelementptr inbounds %59, %59* %24, i64 0, i32 1
  br label %26

26:                                               ; preds = %14, %22
  %27 = phi %5* [ %25, %22 ], [ %17, %14 ]
  %28 = getelementptr inbounds %5, %5* %27, i64 0, i32 1
  %29 = bitcast %7* %28 to %60*
  %30 = getelementptr inbounds %60, %60* %29, i64 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 16
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %26
  %35 = bitcast %5* %27 to %61**
  %36 = load %61*, %61** %35, align 8
  %37 = getelementptr inbounds %61, %61* %36, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = and i8 %31, 4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = add i32 %38, -1
  store i32 %44, i32* %37, align 4
  br label %45

45:                                               ; preds = %40, %43
  tail call void @_zval_copy_ctor_func(%5* nonnull %27) #13
  br label %46

46:                                               ; preds = %26, %34, %45
  %47 = bitcast %7* %28 to i8*
  %48 = load i8, i8* %47, align 8
  %49 = add i8 %48, -7
  %50 = icmp ult i8 %49, 2
  br i1 %50, label %51, label %69

51:                                               ; preds = %46
  %52 = getelementptr inbounds i8**, i8*** %15, i64 4
  %53 = bitcast i8*** %52 to %5*
  %54 = call i32 @zend_fcall_info_init(%5* nonnull %53, i32 0, %34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11), %2** null, i8** nonnull %5) #13
  %55 = icmp eq i32 %54, 0
  %56 = load i8*, i8** %5, align 8
  %57 = icmp ne i8* %56, null
  br i1 %55, label %58, label %67

58:                                               ; preds = %51
  br i1 %57, label %59, label %60

59:                                               ; preds = %58
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 8192, i32 2, i8* nonnull %56) #13
  br label %60

60:                                               ; preds = %59, %58
  %61 = icmp slt i32 %9, 3
  %62 = getelementptr inbounds i8**, i8*** %15, i64 6
  %63 = bitcast i8*** %62 to %5*
  %64 = select i1 %61, %5* null, %5* %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %65 = call fastcc i32 @77(%5* nonnull %27, %5* %64, i32 1)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i8* nonnull align 8 %6, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i8* nonnull align 8 %7, i64 40, i1 false)
  %66 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %66, align 8
  br label %74

67:                                               ; preds = %51
  br i1 %57, label %68, label %69

68:                                               ; preds = %67
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 2, i8* nonnull %56) #13
  br label %73

69:                                               ; preds = %46, %67
  %70 = phi i32 [ 2, %67 ], [ 1, %46 ]
  %71 = phi i32 [ 4, %67 ], [ 3, %46 ]
  %72 = phi %5* [ %53, %67 ], [ %27, %46 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %70, i32 %71, %5* %72) #13
  br label %73

73:                                               ; preds = %13, %69, %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 10) to i8*), i8* nonnull align 8 %6, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 11, i32 0), i8* nonnull align 8 %7, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %74

74:                                               ; preds = %73, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_in_array(%24* %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @78(%24* %0, %5* %1, i32 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @78(%24* %0, %5* %1, i32 %2) unnamed_addr #4 {
  %4 = alloca %5, align 8
  %5 = alloca %5, align 8
  %6 = alloca %5, align 8
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %9, i32 2, i32 3) #13
  br label %415

13:                                               ; preds = %3
  %14 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %15 = getelementptr inbounds i8**, i8*** %14, i64 2
  %16 = bitcast i8*** %15 to %5*
  %17 = getelementptr inbounds i8**, i8*** %14, i64 4
  %18 = bitcast i8*** %17 to %5*
  %19 = getelementptr inbounds i8**, i8*** %14, i64 5
  %20 = bitcast i8*** %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 7
  br i1 %22, label %23, label %39

23:                                               ; preds = %13
  %24 = icmp slt i32 %9, 3
  br i1 %24, label %125, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8**, i8*** %14, i64 6
  %27 = bitcast i8*** %26 to %5*
  %28 = getelementptr inbounds i8**, i8*** %14, i64 7
  %29 = bitcast i8*** %28 to i8*
  %30 = load i8, i8* %29, align 8
  switch i8 %30, label %34 [
    i8 3, label %32
    i8 2, label %31
  ]

31:                                               ; preds = %25
  br label %32

32:                                               ; preds = %25, %31
  %33 = phi i8 [ 1, %25 ], [ 0, %31 ]
  store i8 %33, i8* %7, align 1
  br label %43

34:                                               ; preds = %25
  %35 = call i32 @zend_parse_arg_bool_slow(%5* nonnull %27, i8* nonnull %7) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load i8, i8* %7, align 1
  br label %43

39:                                               ; preds = %34, %13
  %40 = phi i32 [ 3, %34 ], [ 2, %13 ]
  %41 = phi %5* [ %27, %34 ], [ %18, %13 ]
  %42 = phi i32 [ 1, %34 ], [ 3, %13 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %40, i32 %42, %5* %41) #13
  br label %415

43:                                               ; preds = %37, %32
  %44 = phi i8 [ %33, %32 ], [ %38, %37 ]
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %125, label %46

46:                                               ; preds = %43
  %47 = bitcast i8*** %17 to %9**
  %48 = load %9*, %9** %47, align 8
  %49 = getelementptr inbounds %9, %9* %48, i64 0, i32 3
  %50 = load %11*, %11** %49, align 8
  %51 = getelementptr inbounds %9, %9* %48, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %11, %11* %50, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %413, label %56

56:                                               ; preds = %46
  %57 = getelementptr inbounds i8**, i8*** %14, i64 3
  %58 = bitcast i8*** %57 to i8*
  br label %59

59:                                               ; preds = %56, %122
  %60 = phi %11* [ %50, %56 ], [ %123, %122 ]
  %61 = getelementptr inbounds %11, %11* %60, i64 0, i32 0
  %62 = getelementptr inbounds %11, %11* %60, i64 0, i32 0, i32 1
  %63 = bitcast %7* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 15
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = bitcast %11* %60 to %5**
  %68 = load %5*, %5** %67, align 8
  br label %69

69:                                               ; preds = %66, %59
  %70 = phi %5* [ %68, %66 ], [ %61, %59 ]
  %71 = getelementptr inbounds %5, %5* %70, i64 0, i32 1
  %72 = bitcast %7* %71 to i8*
  %73 = load i8, i8* %72, align 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %122, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %11, %11* %60, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %11, %11* %60, i64 0, i32 2
  %79 = load %2*, %2** %78, align 8
  %80 = icmp eq i8 %73, 10
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  %82 = bitcast %5* %70 to %59**
  %83 = load %59*, %59** %82, align 8
  %84 = getelementptr inbounds %59, %59* %83, i64 0, i32 1
  %85 = getelementptr inbounds %59, %59* %83, i64 0, i32 1, i32 1
  %86 = bitcast %7* %85 to i8*
  %87 = load i8, i8* %86, align 8
  br label %88

88:                                               ; preds = %81, %75
  %89 = phi i8 [ %87, %81 ], [ %73, %75 ]
  %90 = phi %5* [ %84, %81 ], [ %70, %75 ]
  %91 = load i8, i8* %58, align 8
  %92 = icmp eq i8 %91, %89
  br i1 %92, label %93, label %122

93:                                               ; preds = %88
  %94 = icmp ult i8 %89, 4
  br i1 %94, label %98, label %95

95:                                               ; preds = %93
  %96 = call i32 @zend_is_identical(%5* nonnull %16, %5* nonnull %90) #13
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %122, label %98

98:                                               ; preds = %93, %95
  %99 = icmp eq i32 %2, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %101, align 8
  br label %415

102:                                              ; preds = %98
  %103 = icmp eq %2* %79, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %102
  %105 = bitcast %5* %1 to %2**
  store %2* %79, %2** %105, align 8
  %106 = getelementptr inbounds %2, %2* %79, i64 0, i32 0, i32 1
  %107 = bitcast %4* %106 to %63*
  %108 = getelementptr inbounds %63, %63* %107, i64 0, i32 1
  %109 = load i8, i8* %108, align 1
  %110 = and i8 %109, 2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %113, align 8
  br label %415

114:                                              ; preds = %104
  %115 = getelementptr inbounds %2, %2* %79, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = add i32 %116, 1
  store i32 %117, i32* %115, align 8
  %118 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %118, align 8
  br label %415

119:                                              ; preds = %102
  %120 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %77, i64* %120, align 8
  %121 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %121, align 8
  br label %415

122:                                              ; preds = %88, %69, %95
  %123 = getelementptr inbounds %11, %11* %60, i64 1
  %124 = icmp eq %11* %123, %54
  br i1 %124, label %413, label %59

125:                                              ; preds = %23, %43
  %126 = getelementptr inbounds i8**, i8*** %14, i64 3
  %127 = bitcast i8*** %126 to i8*
  %128 = load i8, i8* %127, align 8
  %129 = icmp eq i8 %128, 4
  br i1 %129, label %130, label %202

130:                                              ; preds = %125
  %131 = bitcast i8*** %17 to %9**
  %132 = load %9*, %9** %131, align 8
  %133 = getelementptr inbounds %9, %9* %132, i64 0, i32 3
  %134 = load %11*, %11** %133, align 8
  %135 = getelementptr inbounds %9, %9* %132, i64 0, i32 4
  %136 = load i32, i32* %135, align 8
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %11, %11* %134, i64 %137
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %413, label %140

140:                                              ; preds = %130
  %141 = bitcast %5* %4 to i8*
  %142 = bitcast i8*** %15 to i64*
  %143 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  br label %144

144:                                              ; preds = %140, %199
  %145 = phi %11* [ %134, %140 ], [ %200, %199 ]
  %146 = getelementptr inbounds %11, %11* %145, i64 0, i32 0
  %147 = getelementptr inbounds %11, %11* %145, i64 0, i32 0, i32 1
  %148 = bitcast %7* %147 to i8*
  %149 = load i8, i8* %148, align 8
  %150 = icmp eq i8 %149, 15
  br i1 %150, label %151, label %154

151:                                              ; preds = %144
  %152 = bitcast %11* %145 to %5**
  %153 = load %5*, %5** %152, align 8
  br label %154

154:                                              ; preds = %151, %144
  %155 = phi %5* [ %153, %151 ], [ %146, %144 ]
  %156 = getelementptr inbounds %5, %5* %155, i64 0, i32 1
  %157 = bitcast %7* %156 to i8*
  %158 = load i8, i8* %157, align 8
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %199, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %11, %11* %145, i64 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %11, %11* %145, i64 0, i32 2
  %164 = load %2*, %2** %163, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #13
  %165 = icmp eq i8 %158, 4
  br i1 %165, label %166, label %171

166:                                              ; preds = %160
  %167 = load i64, i64* %142, align 8
  %168 = getelementptr inbounds %5, %5* %155, i64 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %167, %169
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #13
  br i1 %170, label %175, label %199

171:                                              ; preds = %160
  %172 = call i32 @compare_function(%5* nonnull %4, %5* nonnull %16, %5* nonnull %155) #13
  %173 = load i64, i64* %143, align 8
  %174 = icmp eq i64 %173, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #13
  br i1 %174, label %175, label %199

175:                                              ; preds = %166, %171
  %176 = icmp eq i32 %2, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %175
  %178 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %178, align 8
  br label %415

179:                                              ; preds = %175
  %180 = icmp eq %2* %164, null
  br i1 %180, label %196, label %181

181:                                              ; preds = %179
  %182 = bitcast %5* %1 to %2**
  store %2* %164, %2** %182, align 8
  %183 = getelementptr inbounds %2, %2* %164, i64 0, i32 0, i32 1
  %184 = bitcast %4* %183 to %63*
  %185 = getelementptr inbounds %63, %63* %184, i64 0, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = and i8 %186, 2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %181
  %190 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %190, align 8
  br label %415

191:                                              ; preds = %181
  %192 = getelementptr inbounds %2, %2* %164, i64 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 8
  %194 = add i32 %193, 1
  store i32 %194, i32* %192, align 8
  %195 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %195, align 8
  br label %415

196:                                              ; preds = %179
  %197 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %162, i64* %197, align 8
  %198 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %198, align 8
  br label %415

199:                                              ; preds = %166, %171, %154
  %200 = getelementptr inbounds %11, %11* %145, i64 1
  %201 = icmp eq %11* %200, %138
  br i1 %201, label %413, label %144

202:                                              ; preds = %125
  %203 = icmp eq i8 %128, 6
  %204 = bitcast i8*** %17 to %9**
  %205 = load %9*, %9** %204, align 8
  %206 = getelementptr inbounds %9, %9* %205, i64 0, i32 3
  %207 = load %11*, %11** %206, align 8
  %208 = getelementptr inbounds %9, %9* %205, i64 0, i32 4
  %209 = load i32, i32* %208, align 8
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %11, %11* %207, i64 %210
  %212 = icmp eq i32 %209, 0
  br i1 %203, label %220, label %213

213:                                              ; preds = %202
  br i1 %212, label %413, label %214

214:                                              ; preds = %213
  %215 = bitcast %5* %6 to i8*
  %216 = getelementptr inbounds %5, %5* %6, i64 0, i32 0, i32 0
  %217 = bitcast i8*** %15 to i64*
  %218 = bitcast i8*** %15 to double*
  %219 = bitcast i8*** %15 to %2**
  br label %306

220:                                              ; preds = %202
  br i1 %212, label %413, label %221

221:                                              ; preds = %220
  %222 = bitcast %5* %5 to i8*
  %223 = bitcast i8*** %15 to %2**
  %224 = getelementptr inbounds %5, %5* %5, i64 0, i32 0, i32 0
  br label %225

225:                                              ; preds = %221, %303
  %226 = phi %11* [ %207, %221 ], [ %304, %303 ]
  %227 = getelementptr inbounds %11, %11* %226, i64 0, i32 0
  %228 = getelementptr inbounds %11, %11* %226, i64 0, i32 0, i32 1
  %229 = bitcast %7* %228 to i8*
  %230 = load i8, i8* %229, align 8
  %231 = icmp eq i8 %230, 15
  br i1 %231, label %232, label %235

232:                                              ; preds = %225
  %233 = bitcast %11* %226 to %5**
  %234 = load %5*, %5** %233, align 8
  br label %235

235:                                              ; preds = %232, %225
  %236 = phi %5* [ %234, %232 ], [ %227, %225 ]
  %237 = getelementptr inbounds %5, %5* %236, i64 0, i32 1
  %238 = bitcast %7* %237 to i8*
  %239 = load i8, i8* %238, align 8
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %303, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %11, %11* %226, i64 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = getelementptr inbounds %11, %11* %226, i64 0, i32 2
  %245 = load %2*, %2** %244, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %222) #13
  %246 = icmp eq i8 %239, 6
  br i1 %246, label %247, label %275

247:                                              ; preds = %241
  %248 = load %2*, %2** %223, align 8
  %249 = bitcast %5* %236 to %2**
  %250 = load %2*, %2** %249, align 8
  %251 = icmp eq %2* %248, %250
  br i1 %251, label %252, label %253

252:                                              ; preds = %247
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #13
  br label %279

253:                                              ; preds = %247
  %254 = getelementptr inbounds %2, %2* %248, i64 0, i32 3, i64 0
  %255 = load i8, i8* %254, align 8
  %256 = icmp sgt i8 %255, 57
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %2, %2* %250, i64 0, i32 3, i64 0
  %259 = load i8, i8* %258, align 8
  %260 = icmp sgt i8 %259, 57
  br i1 %260, label %261, label %272

261:                                              ; preds = %257, %253
  %262 = getelementptr inbounds %2, %2* %248, i64 0, i32 2
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds %2, %2* %250, i64 0, i32 2
  %265 = load i64, i64* %264, align 8
  %266 = icmp eq i64 %263, %265
  br i1 %266, label %268, label %267

267:                                              ; preds = %261
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #13
  br label %303

268:                                              ; preds = %261
  %269 = getelementptr inbounds %2, %2* %250, i64 0, i32 3, i64 0
  %270 = call i32 @memcmp(i8* nonnull %254, i8* nonnull %269, i64 %263) #14
  %271 = icmp eq i32 %270, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #13
  br i1 %271, label %279, label %303

272:                                              ; preds = %257
  %273 = call i64 @zendi_smart_strcmp(%2* nonnull %248, %2* nonnull %250) #13
  %274 = icmp eq i64 %273, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #13
  br i1 %274, label %279, label %303

275:                                              ; preds = %241
  %276 = call i32 @compare_function(%5* nonnull %5, %5* nonnull %16, %5* nonnull %236) #13
  %277 = load i64, i64* %224, align 8
  %278 = icmp eq i64 %277, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222) #13
  br i1 %278, label %279, label %303

279:                                              ; preds = %275, %268, %272, %252
  %280 = icmp eq i32 %2, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %282, align 8
  br label %415

283:                                              ; preds = %279
  %284 = icmp eq %2* %245, null
  br i1 %284, label %300, label %285

285:                                              ; preds = %283
  %286 = bitcast %5* %1 to %2**
  store %2* %245, %2** %286, align 8
  %287 = getelementptr inbounds %2, %2* %245, i64 0, i32 0, i32 1
  %288 = bitcast %4* %287 to %63*
  %289 = getelementptr inbounds %63, %63* %288, i64 0, i32 1
  %290 = load i8, i8* %289, align 1
  %291 = and i8 %290, 2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %285
  %294 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %294, align 8
  br label %415

295:                                              ; preds = %285
  %296 = getelementptr inbounds %2, %2* %245, i64 0, i32 0, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = add i32 %297, 1
  store i32 %298, i32* %296, align 8
  %299 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %299, align 8
  br label %415

300:                                              ; preds = %283
  %301 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %243, i64* %301, align 8
  %302 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %302, align 8
  br label %415

303:                                              ; preds = %272, %268, %275, %235, %267
  %304 = getelementptr inbounds %11, %11* %226, i64 1
  %305 = icmp eq %11* %304, %211
  br i1 %305, label %413, label %225

306:                                              ; preds = %214, %410
  %307 = phi %11* [ %207, %214 ], [ %411, %410 ]
  %308 = getelementptr inbounds %11, %11* %307, i64 0, i32 0
  %309 = getelementptr inbounds %11, %11* %307, i64 0, i32 0, i32 1
  %310 = bitcast %7* %309 to i8*
  %311 = load i8, i8* %310, align 8
  %312 = icmp eq i8 %311, 15
  br i1 %312, label %313, label %316

313:                                              ; preds = %306
  %314 = bitcast %11* %307 to %5**
  %315 = load %5*, %5** %314, align 8
  br label %316

316:                                              ; preds = %313, %306
  %317 = phi %5* [ %315, %313 ], [ %308, %306 ]
  %318 = getelementptr inbounds %5, %5* %317, i64 0, i32 1
  %319 = bitcast %7* %318 to i8*
  %320 = load i8, i8* %319, align 8
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %410, label %322

322:                                              ; preds = %316
  %323 = getelementptr inbounds %11, %11* %307, i64 0, i32 1
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds %11, %11* %307, i64 0, i32 2
  %326 = load %2*, %2** %325, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #13
  %327 = load i8, i8* %127, align 8
  switch i8 %327, label %379 [
    i8 4, label %328
    i8 5, label %340
    i8 6, label %352
  ]

328:                                              ; preds = %322
  switch i8 %320, label %379 [
    i8 4, label %329
    i8 5, label %334
  ]

329:                                              ; preds = %328
  %330 = load i64, i64* %217, align 8
  %331 = getelementptr inbounds %5, %5* %317, i64 0, i32 0, i32 0
  %332 = load i64, i64* %331, align 8
  %333 = icmp eq i64 %330, %332
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %333, label %386, label %410

334:                                              ; preds = %328
  %335 = load i64, i64* %217, align 8
  %336 = sitofp i64 %335 to double
  %337 = bitcast %5* %317 to double*
  %338 = load double, double* %337, align 8
  %339 = fcmp oeq double %338, %336
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %339, label %386, label %410

340:                                              ; preds = %322
  switch i8 %320, label %379 [
    i8 5, label %341
    i8 4, label %346
  ]

341:                                              ; preds = %340
  %342 = load double, double* %218, align 8
  %343 = bitcast %5* %317 to double*
  %344 = load double, double* %343, align 8
  %345 = fcmp oeq double %342, %344
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %345, label %386, label %410

346:                                              ; preds = %340
  %347 = load double, double* %218, align 8
  %348 = getelementptr inbounds %5, %5* %317, i64 0, i32 0, i32 0
  %349 = load i64, i64* %348, align 8
  %350 = sitofp i64 %349 to double
  %351 = fcmp oeq double %347, %350
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %351, label %386, label %410

352:                                              ; preds = %322
  %353 = icmp eq i8 %320, 6
  br i1 %353, label %354, label %379

354:                                              ; preds = %352
  %355 = load %2*, %2** %219, align 8
  %356 = bitcast %5* %317 to %2**
  %357 = load %2*, %2** %356, align 8
  %358 = icmp eq %2* %355, %357
  br i1 %358, label %359, label %360

359:                                              ; preds = %354
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br label %386

360:                                              ; preds = %354
  %361 = getelementptr inbounds %2, %2* %355, i64 0, i32 3, i64 0
  %362 = load i8, i8* %361, align 8
  %363 = icmp sgt i8 %362, 57
  br i1 %363, label %368, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %2, %2* %357, i64 0, i32 3, i64 0
  %366 = load i8, i8* %365, align 8
  %367 = icmp sgt i8 %366, 57
  br i1 %367, label %368, label %383

368:                                              ; preds = %364, %360
  %369 = getelementptr inbounds %2, %2* %355, i64 0, i32 2
  %370 = load i64, i64* %369, align 8
  %371 = getelementptr inbounds %2, %2* %357, i64 0, i32 2
  %372 = load i64, i64* %371, align 8
  %373 = icmp eq i64 %370, %372
  br i1 %373, label %375, label %374

374:                                              ; preds = %368
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br label %410

375:                                              ; preds = %368
  %376 = getelementptr inbounds %2, %2* %357, i64 0, i32 3, i64 0
  %377 = call i32 @memcmp(i8* nonnull %361, i8* nonnull %376, i64 %370) #14
  %378 = icmp eq i32 %377, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %378, label %386, label %410

379:                                              ; preds = %352, %340, %328, %322
  %380 = call i32 @compare_function(%5* nonnull %6, %5* nonnull %16, %5* %317) #13
  %381 = load i64, i64* %216, align 8
  %382 = icmp eq i64 %381, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %382, label %386, label %410

383:                                              ; preds = %364
  %384 = call i64 @zendi_smart_strcmp(%2* nonnull %355, %2* nonnull %357) #13
  %385 = icmp eq i64 %384, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #13
  br i1 %385, label %386, label %410

386:                                              ; preds = %383, %329, %334, %379, %341, %346, %375, %359
  %387 = icmp eq i32 %2, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %386
  %389 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %389, align 8
  br label %415

390:                                              ; preds = %386
  %391 = icmp eq %2* %326, null
  br i1 %391, label %407, label %392

392:                                              ; preds = %390
  %393 = bitcast %5* %1 to %2**
  store %2* %326, %2** %393, align 8
  %394 = getelementptr inbounds %2, %2* %326, i64 0, i32 0, i32 1
  %395 = bitcast %4* %394 to %63*
  %396 = getelementptr inbounds %63, %63* %395, i64 0, i32 1
  %397 = load i8, i8* %396, align 1
  %398 = and i8 %397, 2
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %402, label %400

400:                                              ; preds = %392
  %401 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %401, align 8
  br label %415

402:                                              ; preds = %392
  %403 = getelementptr inbounds %2, %2* %326, i64 0, i32 0, i32 0
  %404 = load i32, i32* %403, align 8
  %405 = add i32 %404, 1
  store i32 %405, i32* %403, align 8
  %406 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %406, align 8
  br label %415

407:                                              ; preds = %390
  %408 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %324, i64* %408, align 8
  %409 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %409, align 8
  br label %415

410:                                              ; preds = %375, %346, %341, %379, %334, %329, %383, %316, %374
  %411 = getelementptr inbounds %11, %11* %307, i64 1
  %412 = icmp eq %11* %411, %211
  br i1 %412, label %413, label %306

413:                                              ; preds = %122, %410, %303, %199, %46, %213, %220, %130
  %414 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %414, align 8
  br label %415

415:                                              ; preds = %407, %402, %400, %388, %300, %295, %293, %281, %196, %191, %189, %177, %119, %114, %112, %100, %12, %39, %413
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_search(%24* %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @78(%24* %0, %5* %1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @php_prefix_varname(%5* nocapture %0, %5* nocapture readonly %1, i8* nocapture readonly %2, i64 %3, i8 zeroext %4) local_unnamed_addr #0 {
  %6 = bitcast %5* %1 to %2**
  %7 = load %2*, %2** %6, align 8
  %8 = getelementptr inbounds %2, %2* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ne i8 %4, 0
  %11 = zext i1 %10 to i64
  %12 = add i64 %11, %3
  %13 = add i64 %12, %9
  %14 = add i64 %13, 32
  %15 = and i64 %14, -8
  %16 = tail call noalias i8* @_emalloc(i64 %15) #15
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 6, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %13, i64* %23, align 8
  %24 = bitcast %5* %0 to i8**
  store i8* %16, i8** %24, align 8
  %25 = getelementptr inbounds %5, %5* %0, i64 0, i32 1, i32 0
  store i32 5126, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 24
  %27 = load %2*, %2** %6, align 8
  %28 = getelementptr inbounds %2, %2* %27, i64 0, i32 3, i64 0
  %29 = getelementptr inbounds %2, %2* %27, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %28, i64 %30, i1 false)
  %31 = icmp eq i8 %4, 0
  %32 = bitcast i8* %16 to %2*
  br i1 %31, label %36, label %33

33:                                               ; preds = %5
  %34 = load i64, i64* %29, align 8
  %35 = getelementptr inbounds %2, %2* %32, i64 0, i32 3, i64 %34
  store i8 95, i8* %35, align 1
  br label %36

36:                                               ; preds = %5, %33
  %37 = load i64, i64* %29, align 8
  %38 = getelementptr inbounds %2, %2* %32, i64 0, i32 3, i64 %37
  %39 = getelementptr inbounds i8, i8* %38, i64 %11
  %40 = add i64 %3, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %2, i64 %40, i1 false)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zif_extract(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %5, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i64 0, i64* %3, align 8
  %6 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = icmp ugt i32 %8, 2
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %12 = getelementptr inbounds i8**, i8*** %11, i64 2
  %13 = bitcast i8*** %12 to %5*
  %14 = getelementptr inbounds i8**, i8*** %11, i64 3
  %15 = bitcast i8*** %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 10
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = bitcast i8*** %12 to %59**
  %20 = load %59*, %59** %19, align 8
  %21 = getelementptr inbounds %59, %59* %20, i64 0, i32 1
  br label %22

22:                                               ; preds = %18, %10
  %23 = phi %5* [ %21, %18 ], [ %13, %10 ]
  %24 = getelementptr inbounds %5, %5* %23, i64 0, i32 1
  %25 = bitcast %7* %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 7
  br i1 %27, label %28, label %49

28:                                               ; preds = %22
  %29 = icmp slt i32 %7, 2
  br i1 %29, label %53, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8**, i8*** %11, i64 4
  %32 = bitcast i8*** %31 to %5*
  %33 = getelementptr inbounds i8**, i8*** %11, i64 5
  %34 = bitcast i8*** %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 4
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = bitcast i8*** %31 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %3, align 8
  br label %43

40:                                               ; preds = %30
  %41 = call i32 @zend_parse_arg_long_slow(%5* nonnull %32, i64* nonnull %3) #13
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %37, %40
  %44 = icmp slt i32 %7, 3
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds i8**, i8*** %11, i64 6
  %47 = bitcast i8*** %46 to %5*
  br label %53

48:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %7, i32 1, i32 3) #13
  br label %3287

49:                                               ; preds = %22, %40
  %50 = phi i32 [ 0, %40 ], [ 3, %22 ]
  %51 = phi %5* [ %32, %40 ], [ %23, %22 ]
  %52 = phi i32 [ 2, %40 ], [ 1, %22 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %52, i32 %50, %5* %51) #13
  br label %3287

53:                                               ; preds = %28, %43, %45
  %54 = phi %5* [ %47, %45 ], [ null, %43 ], [ null, %28 ]
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 256
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %58, label %103

58:                                               ; preds = %53
  %59 = bitcast %7* %24 to %60*
  %60 = getelementptr inbounds %60, %60* %59, i64 0, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = and i32 %62, 4
  %64 = icmp eq i32 %63, 0
  %65 = and i32 %62, 16
  %66 = icmp eq i32 %65, 0
  %67 = and i32 %62, 20
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %103, label %69

69:                                               ; preds = %58
  %70 = bitcast %5* %23 to %61**
  %71 = load %61*, %61** %70, align 8
  %72 = getelementptr inbounds %61, %61* %71, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp ugt i32 %73, 1
  br i1 %74, label %75, label %103

75:                                               ; preds = %69
  br i1 %66, label %80, label %76

76:                                               ; preds = %75
  br i1 %64, label %79, label %77

77:                                               ; preds = %76
  %78 = add i32 %73, -1
  store i32 %78, i32* %72, align 4
  br label %79

79:                                               ; preds = %76, %77
  call void @_zval_copy_ctor_func(%5* nonnull %23) #13
  br label %103

80:                                               ; preds = %75
  %81 = load i8, i8* %25, align 8
  %82 = icmp eq i8 %81, 10
  br i1 %82, label %83, label %103

83:                                               ; preds = %80
  %84 = add i32 %73, -1
  store i32 %84, i32* %72, align 4
  %85 = bitcast %5* %23 to %59**
  %86 = load %59*, %59** %85, align 8
  %87 = getelementptr inbounds %59, %59* %86, i64 0, i32 1
  %88 = bitcast %5* %87 to %61**
  %89 = load %61*, %61** %88, align 8
  %90 = getelementptr inbounds %59, %59* %86, i64 0, i32 1, i32 1, i32 0
  %91 = load i32, i32* %90, align 8
  store %61* %89, %61** %70, align 8
  %92 = getelementptr inbounds %7, %7* %24, i64 0, i32 0
  store i32 %91, i32* %92, align 8
  %93 = and i32 %91, 5120
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %83
  %96 = and i32 %91, 4096
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  call void @_zval_copy_ctor_func(%5* nonnull %23) #13
  br label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %61, %61* %89, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  br label %103

103:                                              ; preds = %79, %80, %69, %58, %83, %98, %99, %53
  %104 = load i64, i64* %3, align 8
  %105 = and i64 %104, 255
  store i64 %105, i64* %3, align 8
  %106 = icmp ugt i64 %105, 6
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @27, i64 0, i64 0)) #13
  br label %3287

108:                                              ; preds = %103
  %109 = trunc i64 %104 to i8
  switch i8 %109, label %110 [
    i8 6, label %114
    i8 1, label %114
    i8 0, label %114
  ]

110:                                              ; preds = %108
  %111 = load i32, i32* %6, align 4
  %112 = icmp ult i32 %111, 3
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @28, i64 0, i64 0)) #13
  br label %3287

114:                                              ; preds = %108, %108, %108, %110
  %115 = icmp eq %5* %54, null
  br i1 %115, label %160, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %5, %5* %54, i64 0, i32 1
  %118 = bitcast %7* %117 to i8*
  %119 = load i8, i8* %118, align 8
  %120 = icmp eq i8 %119, 6
  br i1 %120, label %122, label %121

121:                                              ; preds = %116
  call void @_convert_to_string(%5* nonnull %54) #13
  br label %122

122:                                              ; preds = %116, %121
  %123 = bitcast %5* %54 to %2**
  %124 = load %2*, %2** %123, align 8
  %125 = getelementptr inbounds %2, %2* %124, i64 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %160, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %2, %2* %124, i64 0, i32 3, i64 0
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = lshr i32 %131, 5
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %131, 31
  %137 = shl i32 1, %136
  %138 = and i32 %137, %135
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %159, label %140

140:                                              ; preds = %128
  %141 = icmp ugt i64 %126, 1
  br i1 %141, label %142, label %160

142:                                              ; preds = %140, %156
  %143 = phi i64 [ %157, %156 ], [ 1, %140 ]
  %144 = getelementptr inbounds %2, %2* %124, i64 0, i32 3, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = lshr i32 %146, 5
  %148 = or i32 %147, 8
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %146, 31
  %153 = shl i32 1, %152
  %154 = and i32 %153, %151
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %142
  %157 = add nuw i64 %143, 1
  %158 = icmp ult i64 %157, %126
  br i1 %158, label %142, label %160

159:                                              ; preds = %142, %128
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @29, i64 0, i64 0)) #13
  br label %3287

160:                                              ; preds = %156, %140, %122, %114
  %161 = call i32 @zend_forbid_dynamic_call(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @30, i64 0, i64 0)) #13
  %162 = icmp eq i32 %161, -1
  br i1 %162, label %3287, label %163

163:                                              ; preds = %160
  %164 = call %9* @zend_rebuild_symbol_table() #13
  br i1 %57, label %165, label %1706

165:                                              ; preds = %163
  %166 = load i64, i64* %3, align 8
  switch i64 %166, label %1553 [
    i64 6, label %167
    i64 0, label %300
    i64 5, label %461
    i64 2, label %684
    i64 3, label %977
    i64 4, label %1213
  ]

167:                                              ; preds = %165
  %168 = bitcast %5* %23 to %9**
  %169 = load %9*, %9** %168, align 8
  %170 = getelementptr inbounds %9, %9* %169, i64 0, i32 3
  %171 = load %11*, %11** %170, align 8
  %172 = getelementptr inbounds %9, %9* %169, i64 0, i32 4
  %173 = load i32, i32* %172, align 8
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %11, %11* %171, i64 %174
  %176 = icmp eq i32 %173, 0
  br i1 %176, label %3283, label %177

177:                                              ; preds = %167, %295
  %178 = phi i32 [ %297, %295 ], [ 0, %167 ]
  %179 = phi i64 [ %296, %295 ], [ 0, %167 ]
  %180 = phi %11* [ %298, %295 ], [ %171, %167 ]
  %181 = getelementptr inbounds %11, %11* %180, i64 0, i32 0
  %182 = getelementptr inbounds %11, %11* %180, i64 0, i32 0, i32 1
  %183 = bitcast %7* %182 to i8*
  %184 = load i8, i8* %183, align 8
  %185 = icmp eq i8 %184, 15
  br i1 %185, label %186, label %189

186:                                              ; preds = %177
  %187 = bitcast %11* %180 to %5**
  %188 = load %5*, %5** %187, align 8
  br label %189

189:                                              ; preds = %186, %177
  %190 = phi %5* [ %188, %186 ], [ %181, %177 ]
  %191 = getelementptr inbounds %5, %5* %190, i64 0, i32 1
  %192 = bitcast %7* %191 to i8*
  %193 = load i8, i8* %192, align 8
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %295, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %11, %11* %180, i64 0, i32 2
  %197 = load %2*, %2** %196, align 8
  %198 = icmp eq %2* %197, null
  br i1 %198, label %295, label %199

199:                                              ; preds = %195
  %200 = call %5* @zend_hash_find(%9* %164, %2* nonnull %197) #13
  %201 = icmp eq %5* %200, null
  br i1 %201, label %295, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %5, %5* %200, i64 0, i32 1
  %204 = bitcast %7* %203 to i8*
  %205 = load i8, i8* %204, align 8
  %206 = icmp eq i8 %205, 15
  br i1 %206, label %207, label %214

207:                                              ; preds = %202
  %208 = bitcast %5* %200 to %5**
  %209 = load %5*, %5** %208, align 8
  %210 = getelementptr inbounds %5, %5* %209, i64 0, i32 1
  %211 = bitcast %7* %210 to i8*
  %212 = load i8, i8* %211, align 8
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %295, label %214

214:                                              ; preds = %207, %202
  %215 = phi %5* [ %209, %207 ], [ %200, %202 ]
  %216 = getelementptr inbounds %2, %2* %197, i64 0, i32 3, i64 0
  %217 = getelementptr inbounds %2, %2* %197, i64 0, i32 2
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %295, label %220

220:                                              ; preds = %214
  %221 = load i8, i8* %216, align 1
  %222 = zext i8 %221 to i32
  %223 = lshr i32 %222, 5
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = and i32 %222, 31
  %228 = shl i32 1, %227
  %229 = and i32 %228, %226
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %295, label %231

231:                                              ; preds = %220
  %232 = icmp ugt i64 %218, 1
  br i1 %232, label %233, label %260

233:                                              ; preds = %231, %247
  %234 = phi i64 [ %248, %247 ], [ 1, %231 ]
  %235 = getelementptr inbounds %2, %2* %197, i64 0, i32 3, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = lshr i32 %237, 5
  %239 = or i32 %238, 8
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = and i32 %237, 31
  %244 = shl i32 1, %243
  %245 = and i32 %244, %242
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %295, label %247

247:                                              ; preds = %233
  %248 = add nuw i64 %234, 1
  %249 = icmp ult i64 %248, %218
  br i1 %249, label %233, label %250

250:                                              ; preds = %247
  switch i64 %218, label %260 [
    i64 7, label %251
    i64 4, label %254
  ]

251:                                              ; preds = %250
  %252 = call i32 @memcmp(i8* nonnull %216, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @60, i64 0, i64 0), i64 7) #14
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %295, label %260

254:                                              ; preds = %250
  %255 = call i32 @memcmp(i8* nonnull %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = icmp eq i32 %178, 0
  br i1 %258, label %259, label %295

259:                                              ; preds = %257
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %295

260:                                              ; preds = %254, %251, %250, %231
  %261 = load i8, i8* %192, align 8
  %262 = icmp eq i8 %261, 10
  br i1 %262, label %263, label %268

263:                                              ; preds = %260
  %264 = bitcast %5* %190 to %61**
  %265 = load %61*, %61** %264, align 8
  %266 = getelementptr inbounds %5, %5* %190, i64 0, i32 0, i32 0
  %267 = getelementptr inbounds %5, %5* %190, i64 0, i32 1, i32 0
  br label %283

268:                                              ; preds = %260
  %269 = call noalias i8* @_emalloc_24() #13
  %270 = bitcast i8* %269 to i32*
  store i32 1, i32* %270, align 8
  %271 = getelementptr inbounds i8, i8* %269, i64 4
  %272 = bitcast i8* %271 to i32*
  store i32 10, i32* %272, align 4
  %273 = getelementptr inbounds i8, i8* %269, i64 8
  %274 = getelementptr inbounds %5, %5* %190, i64 0, i32 0, i32 0
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %5, %5* %190, i64 0, i32 1, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = bitcast i8* %273 to i64*
  store i64 %275, i64* %278, align 8
  %279 = getelementptr inbounds i8, i8* %269, i64 16
  %280 = bitcast i8* %279 to i32*
  store i32 %277, i32* %280, align 8
  %281 = bitcast %5* %190 to i8**
  store i8* %269, i8** %281, align 8
  store i32 1034, i32* %276, align 8
  %282 = bitcast i8* %269 to %61*
  br label %283

283:                                              ; preds = %268, %263
  %284 = phi i32* [ %267, %263 ], [ %276, %268 ]
  %285 = phi i64* [ %266, %263 ], [ %274, %268 ]
  %286 = phi %61* [ %265, %263 ], [ %282, %268 ]
  %287 = getelementptr inbounds %61, %61* %286, i64 0, i32 0, i32 0
  %288 = load i32, i32* %287, align 4
  %289 = add i32 %288, 1
  store i32 %289, i32* %287, align 4
  call void @_zval_ptr_dtor(%5* %215) #13
  %290 = load i64, i64* %285, align 8
  %291 = load i32, i32* %284, align 8
  %292 = getelementptr inbounds %5, %5* %215, i64 0, i32 0, i32 0
  store i64 %290, i64* %292, align 8
  %293 = getelementptr inbounds %5, %5* %215, i64 0, i32 1, i32 0
  store i32 %291, i32* %293, align 8
  %294 = add nsw i64 %179, 1
  br label %295

295:                                              ; preds = %233, %283, %259, %257, %251, %220, %214, %207, %199, %195, %189
  %296 = phi i64 [ %179, %189 ], [ %179, %195 ], [ %179, %207 ], [ %179, %251 ], [ %179, %257 ], [ %179, %259 ], [ %294, %283 ], [ %179, %199 ], [ %179, %214 ], [ %179, %220 ], [ %179, %233 ]
  %297 = phi i32 [ %178, %189 ], [ %178, %195 ], [ %178, %207 ], [ %178, %251 ], [ %178, %257 ], [ 1, %259 ], [ %178, %283 ], [ %178, %199 ], [ %178, %214 ], [ %178, %220 ], [ %178, %233 ]
  %298 = getelementptr inbounds %11, %11* %180, i64 1
  %299 = icmp eq %11* %298, %175
  br i1 %299, label %3283, label %177

300:                                              ; preds = %165
  %301 = bitcast %5* %23 to %9**
  %302 = load %9*, %9** %301, align 8
  %303 = getelementptr inbounds %9, %9* %302, i64 0, i32 3
  %304 = load %11*, %11** %303, align 8
  %305 = getelementptr inbounds %9, %9* %302, i64 0, i32 4
  %306 = load i32, i32* %305, align 8
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds %11, %11* %304, i64 %307
  %309 = icmp eq i32 %306, 0
  br i1 %309, label %3283, label %310

310:                                              ; preds = %300, %456
  %311 = phi i32 [ %458, %456 ], [ 0, %300 ]
  %312 = phi i64 [ %457, %456 ], [ 0, %300 ]
  %313 = phi %11* [ %459, %456 ], [ %304, %300 ]
  %314 = getelementptr inbounds %11, %11* %313, i64 0, i32 0
  %315 = getelementptr inbounds %11, %11* %313, i64 0, i32 0, i32 1
  %316 = bitcast %7* %315 to i8*
  %317 = load i8, i8* %316, align 8
  %318 = icmp eq i8 %317, 15
  br i1 %318, label %319, label %322

319:                                              ; preds = %310
  %320 = bitcast %11* %313 to %5**
  %321 = load %5*, %5** %320, align 8
  br label %322

322:                                              ; preds = %319, %310
  %323 = phi %5* [ %321, %319 ], [ %314, %310 ]
  %324 = getelementptr inbounds %5, %5* %323, i64 0, i32 1
  %325 = bitcast %7* %324 to i8*
  %326 = load i8, i8* %325, align 8
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %456, label %328

328:                                              ; preds = %322
  %329 = getelementptr inbounds %11, %11* %313, i64 0, i32 2
  %330 = load %2*, %2** %329, align 8
  %331 = icmp eq %2* %330, null
  br i1 %331, label %456, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %2, %2* %330, i64 0, i32 3, i64 0
  %334 = getelementptr inbounds %2, %2* %330, i64 0, i32 2
  %335 = load i64, i64* %334, align 8
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %456, label %337

337:                                              ; preds = %332
  %338 = load i8, i8* %333, align 1
  %339 = zext i8 %338 to i32
  %340 = lshr i32 %339, 5
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = and i32 %339, 31
  %345 = shl i32 1, %344
  %346 = and i32 %345, %343
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %456, label %348

348:                                              ; preds = %337
  %349 = icmp ugt i64 %335, 1
  br i1 %349, label %350, label %375

350:                                              ; preds = %348, %364
  %351 = phi i64 [ %365, %364 ], [ 1, %348 ]
  %352 = getelementptr inbounds %2, %2* %330, i64 0, i32 3, i64 %351
  %353 = load i8, i8* %352, align 1
  %354 = zext i8 %353 to i32
  %355 = lshr i32 %354, 5
  %356 = or i32 %355, 8
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = and i32 %354, 31
  %361 = shl i32 1, %360
  %362 = and i32 %361, %359
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %456, label %364

364:                                              ; preds = %350
  %365 = add nuw i64 %351, 1
  %366 = icmp ult i64 %365, %335
  br i1 %366, label %350, label %367

367:                                              ; preds = %364
  %368 = icmp eq i64 %335, 4
  br i1 %368, label %369, label %375

369:                                              ; preds = %367
  %370 = call i32 @memcmp(i8* nonnull %333, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %375

372:                                              ; preds = %369
  %373 = icmp eq i32 %311, 0
  br i1 %373, label %374, label %456

374:                                              ; preds = %372
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %456

375:                                              ; preds = %369, %367, %348
  %376 = call %5* @zend_hash_find(%9* %164, %2* nonnull %330) #13
  %377 = icmp eq %5* %376, null
  br i1 %377, label %427, label %378

378:                                              ; preds = %375
  %379 = getelementptr inbounds %5, %5* %376, i64 0, i32 1
  %380 = bitcast %7* %379 to i8*
  %381 = load i8, i8* %380, align 8
  %382 = icmp eq i8 %381, 15
  br i1 %382, label %383, label %386

383:                                              ; preds = %378
  %384 = bitcast %5* %376 to %5**
  %385 = load %5*, %5** %384, align 8
  br label %386

386:                                              ; preds = %383, %378
  %387 = phi %5* [ %385, %383 ], [ %376, %378 ]
  %388 = load i64, i64* %334, align 8
  %389 = icmp eq i64 %388, 7
  br i1 %389, label %390, label %393

390:                                              ; preds = %386
  %391 = call i32 @memcmp(i8* nonnull %333, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @60, i64 0, i64 0), i64 7) #14
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %456, label %393

393:                                              ; preds = %390, %386
  %394 = load i8, i8* %325, align 8
  %395 = icmp eq i8 %394, 10
  br i1 %395, label %396, label %401

396:                                              ; preds = %393
  %397 = bitcast %5* %323 to %61**
  %398 = load %61*, %61** %397, align 8
  %399 = getelementptr inbounds %5, %5* %323, i64 0, i32 0, i32 0
  %400 = getelementptr inbounds %5, %5* %323, i64 0, i32 1, i32 0
  br label %416

401:                                              ; preds = %393
  %402 = call noalias i8* @_emalloc_24() #13
  %403 = bitcast i8* %402 to i32*
  store i32 1, i32* %403, align 8
  %404 = getelementptr inbounds i8, i8* %402, i64 4
  %405 = bitcast i8* %404 to i32*
  store i32 10, i32* %405, align 4
  %406 = getelementptr inbounds i8, i8* %402, i64 8
  %407 = getelementptr inbounds %5, %5* %323, i64 0, i32 0, i32 0
  %408 = load i64, i64* %407, align 8
  %409 = getelementptr inbounds %5, %5* %323, i64 0, i32 1, i32 0
  %410 = load i32, i32* %409, align 8
  %411 = bitcast i8* %406 to i64*
  store i64 %408, i64* %411, align 8
  %412 = getelementptr inbounds i8, i8* %402, i64 16
  %413 = bitcast i8* %412 to i32*
  store i32 %410, i32* %413, align 8
  %414 = bitcast %5* %323 to i8**
  store i8* %402, i8** %414, align 8
  store i32 1034, i32* %409, align 8
  %415 = bitcast i8* %402 to %61*
  br label %416

416:                                              ; preds = %401, %396
  %417 = phi i32* [ %400, %396 ], [ %409, %401 ]
  %418 = phi i64* [ %399, %396 ], [ %407, %401 ]
  %419 = phi %61* [ %398, %396 ], [ %415, %401 ]
  %420 = getelementptr inbounds %61, %61* %419, i64 0, i32 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = add i32 %421, 1
  store i32 %422, i32* %420, align 4
  call void @_zval_ptr_dtor(%5* %387) #13
  %423 = load i64, i64* %418, align 8
  %424 = load i32, i32* %417, align 8
  %425 = getelementptr inbounds %5, %5* %387, i64 0, i32 0, i32 0
  store i64 %423, i64* %425, align 8
  %426 = getelementptr inbounds %5, %5* %387, i64 0, i32 1, i32 0
  store i32 %424, i32* %426, align 8
  br label %454

427:                                              ; preds = %375
  %428 = load i8, i8* %325, align 8
  %429 = icmp eq i8 %428, 10
  br i1 %429, label %430, label %433

430:                                              ; preds = %427
  %431 = bitcast %5* %323 to %61**
  %432 = load %61*, %61** %431, align 8
  br label %448

433:                                              ; preds = %427
  %434 = call noalias i8* @_emalloc_24() #13
  %435 = bitcast i8* %434 to i32*
  store i32 1, i32* %435, align 8
  %436 = getelementptr inbounds i8, i8* %434, i64 4
  %437 = bitcast i8* %436 to i32*
  store i32 10, i32* %437, align 4
  %438 = getelementptr inbounds i8, i8* %434, i64 8
  %439 = getelementptr inbounds %5, %5* %323, i64 0, i32 0, i32 0
  %440 = load i64, i64* %439, align 8
  %441 = getelementptr inbounds %5, %5* %323, i64 0, i32 1, i32 0
  %442 = load i32, i32* %441, align 8
  %443 = bitcast i8* %438 to i64*
  store i64 %440, i64* %443, align 8
  %444 = getelementptr inbounds i8, i8* %434, i64 16
  %445 = bitcast i8* %444 to i32*
  store i32 %442, i32* %445, align 8
  %446 = bitcast %5* %323 to i8**
  store i8* %434, i8** %446, align 8
  store i32 1034, i32* %441, align 8
  %447 = bitcast i8* %434 to %61*
  br label %448

448:                                              ; preds = %433, %430
  %449 = phi %61* [ %432, %430 ], [ %447, %433 ]
  %450 = getelementptr inbounds %61, %61* %449, i64 0, i32 0, i32 0
  %451 = load i32, i32* %450, align 4
  %452 = add i32 %451, 1
  store i32 %452, i32* %450, align 4
  %453 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %330, %5* nonnull %323) #13
  br label %454

454:                                              ; preds = %448, %416
  %455 = add nsw i64 %312, 1
  br label %456

456:                                              ; preds = %350, %454, %390, %374, %372, %337, %332, %328, %322
  %457 = phi i64 [ %455, %454 ], [ %312, %322 ], [ %312, %328 ], [ %312, %372 ], [ %312, %374 ], [ %312, %390 ], [ %312, %332 ], [ %312, %337 ], [ %312, %350 ]
  %458 = phi i32 [ %311, %454 ], [ %311, %322 ], [ %311, %328 ], [ %311, %372 ], [ 1, %374 ], [ %311, %390 ], [ %311, %332 ], [ %311, %337 ], [ %311, %350 ]
  %459 = getelementptr inbounds %11, %11* %313, i64 1
  %460 = icmp eq %11* %459, %308
  br i1 %460, label %3283, label %310

461:                                              ; preds = %165
  %462 = bitcast %5* %23 to %9**
  %463 = load %9*, %9** %462, align 8
  %464 = getelementptr inbounds %9, %9* %463, i64 0, i32 3
  %465 = load %11*, %11** %464, align 8
  %466 = getelementptr inbounds %9, %9* %463, i64 0, i32 4
  %467 = load i32, i32* %466, align 8
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds %11, %11* %465, i64 %468
  %470 = icmp eq i32 %467, 0
  br i1 %470, label %3283, label %471

471:                                              ; preds = %461
  %472 = bitcast %5* %54 to %2**
  br label %473

473:                                              ; preds = %679, %471
  %474 = phi i32 [ 0, %471 ], [ %681, %679 ]
  %475 = phi i64 [ 0, %471 ], [ %680, %679 ]
  %476 = phi %11* [ %465, %471 ], [ %682, %679 ]
  %477 = getelementptr inbounds %11, %11* %476, i64 0, i32 0
  %478 = getelementptr inbounds %11, %11* %476, i64 0, i32 0, i32 1
  %479 = bitcast %7* %478 to i8*
  %480 = load i8, i8* %479, align 8
  %481 = icmp eq i8 %480, 15
  br i1 %481, label %482, label %485

482:                                              ; preds = %473
  %483 = bitcast %11* %476 to %5**
  %484 = load %5*, %5** %483, align 8
  br label %485

485:                                              ; preds = %482, %473
  %486 = phi %5* [ %484, %482 ], [ %477, %473 ]
  %487 = getelementptr inbounds %5, %5* %486, i64 0, i32 1
  %488 = bitcast %7* %487 to i8*
  %489 = load i8, i8* %488, align 8
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %679, label %491

491:                                              ; preds = %485
  %492 = getelementptr inbounds %11, %11* %476, i64 0, i32 2
  %493 = load %2*, %2** %492, align 8
  %494 = icmp eq %2* %493, null
  br i1 %494, label %679, label %495

495:                                              ; preds = %491
  %496 = call %5* @zend_hash_find(%9* %164, %2* nonnull %493) #13
  %497 = icmp eq %5* %496, null
  br i1 %497, label %679, label %498

498:                                              ; preds = %495
  %499 = getelementptr inbounds %5, %5* %496, i64 0, i32 1
  %500 = bitcast %7* %499 to i8*
  %501 = load i8, i8* %500, align 8
  %502 = icmp eq i8 %501, 15
  br i1 %502, label %503, label %545

503:                                              ; preds = %498
  %504 = bitcast %5* %496 to %5**
  %505 = load %5*, %5** %504, align 8
  %506 = getelementptr inbounds %5, %5* %505, i64 0, i32 1
  %507 = bitcast %7* %506 to i8*
  %508 = load i8, i8* %507, align 8
  %509 = icmp eq i8 %508, 0
  br i1 %509, label %510, label %545

510:                                              ; preds = %503
  %511 = load i8, i8* %488, align 8
  %512 = icmp eq i8 %511, 10
  br i1 %512, label %513, label %518

513:                                              ; preds = %510
  %514 = bitcast %5* %486 to %61**
  %515 = load %61*, %61** %514, align 8
  %516 = getelementptr inbounds %5, %5* %486, i64 0, i32 0, i32 0
  %517 = getelementptr inbounds %5, %5* %486, i64 0, i32 1, i32 0
  br label %533

518:                                              ; preds = %510
  %519 = call noalias i8* @_emalloc_24() #13
  %520 = bitcast i8* %519 to i32*
  store i32 1, i32* %520, align 8
  %521 = getelementptr inbounds i8, i8* %519, i64 4
  %522 = bitcast i8* %521 to i32*
  store i32 10, i32* %522, align 4
  %523 = getelementptr inbounds i8, i8* %519, i64 8
  %524 = getelementptr inbounds %5, %5* %486, i64 0, i32 0, i32 0
  %525 = load i64, i64* %524, align 8
  %526 = getelementptr inbounds %5, %5* %486, i64 0, i32 1, i32 0
  %527 = load i32, i32* %526, align 8
  %528 = bitcast i8* %523 to i64*
  store i64 %525, i64* %528, align 8
  %529 = getelementptr inbounds i8, i8* %519, i64 16
  %530 = bitcast i8* %529 to i32*
  store i32 %527, i32* %530, align 8
  %531 = bitcast %5* %486 to i8**
  store i8* %519, i8** %531, align 8
  store i32 1034, i32* %526, align 8
  %532 = bitcast i8* %519 to %61*
  br label %533

533:                                              ; preds = %518, %513
  %534 = phi i32* [ %517, %513 ], [ %526, %518 ]
  %535 = phi i64* [ %516, %513 ], [ %524, %518 ]
  %536 = phi %61* [ %515, %513 ], [ %532, %518 ]
  %537 = getelementptr inbounds %61, %61* %536, i64 0, i32 0, i32 0
  %538 = load i32, i32* %537, align 4
  %539 = add i32 %538, 1
  store i32 %539, i32* %537, align 4
  %540 = load i64, i64* %535, align 8
  %541 = load i32, i32* %534, align 8
  %542 = getelementptr inbounds %5, %5* %505, i64 0, i32 0, i32 0
  store i64 %540, i64* %542, align 8
  %543 = getelementptr inbounds %5, %5* %505, i64 0, i32 1, i32 0
  store i32 %541, i32* %543, align 8
  %544 = add nsw i64 %475, 1
  br label %679

545:                                              ; preds = %503, %498
  %546 = getelementptr inbounds %2, %2* %493, i64 0, i32 3, i64 0
  %547 = getelementptr inbounds %2, %2* %493, i64 0, i32 2
  %548 = load i64, i64* %547, align 8
  %549 = load %2*, %2** %472, align 8
  %550 = getelementptr inbounds %2, %2* %549, i64 0, i32 2
  %551 = load i64, i64* %550, align 8
  %552 = add i64 %548, 1
  %553 = add i64 %551, %552
  %554 = add i64 %553, 32
  %555 = and i64 %554, -8
  %556 = call noalias i8* @_emalloc(i64 %555) #15
  %557 = bitcast i8* %556 to i32*
  store i32 1, i32* %557, align 8
  %558 = getelementptr inbounds i8, i8* %556, i64 4
  %559 = bitcast i8* %558 to i32*
  store i32 6, i32* %559, align 4
  %560 = getelementptr inbounds i8, i8* %556, i64 8
  %561 = bitcast i8* %560 to i64*
  store i64 0, i64* %561, align 8
  %562 = getelementptr inbounds i8, i8* %556, i64 16
  %563 = bitcast i8* %562 to i64*
  store i64 %553, i64* %563, align 8
  %564 = getelementptr inbounds i8, i8* %556, i64 24
  %565 = load %2*, %2** %472, align 8
  %566 = getelementptr inbounds %2, %2* %565, i64 0, i32 3, i64 0
  %567 = getelementptr inbounds %2, %2* %565, i64 0, i32 2
  %568 = load i64, i64* %567, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %564, i8* nonnull align 8 %566, i64 %568, i1 false) #13
  %569 = bitcast i8* %556 to %2*
  %570 = load i64, i64* %567, align 8
  %571 = getelementptr inbounds %2, %2* %569, i64 0, i32 3, i64 %570
  store i8 95, i8* %571, align 1
  %572 = load i64, i64* %567, align 8
  %573 = getelementptr inbounds %2, %2* %569, i64 0, i32 3, i64 %572
  %574 = getelementptr inbounds i8, i8* %573, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %574, i8* nonnull align 1 %546, i64 %552, i1 false) #13
  %575 = load i64, i64* %563, align 8
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %663, label %577

577:                                              ; preds = %545
  %578 = load i8, i8* %564, align 1
  %579 = zext i8 %578 to i32
  %580 = lshr i32 %579, 5
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %581
  %583 = load i32, i32* %582, align 4
  %584 = and i32 %579, 31
  %585 = shl i32 1, %584
  %586 = and i32 %585, %583
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %663, label %588

588:                                              ; preds = %577
  %589 = icmp ugt i64 %575, 1
  br i1 %589, label %590, label %615

590:                                              ; preds = %588, %604
  %591 = phi i64 [ %605, %604 ], [ 1, %588 ]
  %592 = getelementptr inbounds i8, i8* %564, i64 %591
  %593 = load i8, i8* %592, align 1
  %594 = zext i8 %593 to i32
  %595 = lshr i32 %594, 5
  %596 = or i32 %595, 8
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %597
  %599 = load i32, i32* %598, align 4
  %600 = and i32 %594, 31
  %601 = shl i32 1, %600
  %602 = and i32 %601, %599
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %663, label %604

604:                                              ; preds = %590
  %605 = add nuw i64 %591, 1
  %606 = icmp ult i64 %605, %575
  br i1 %606, label %590, label %607

607:                                              ; preds = %604
  %608 = icmp eq i64 %575, 4
  br i1 %608, label %609, label %615

609:                                              ; preds = %607
  %610 = call i32 @memcmp(i8* nonnull %564, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %615

612:                                              ; preds = %609
  %613 = icmp eq i32 %474, 0
  br i1 %613, label %614, label %663

614:                                              ; preds = %612
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %663

615:                                              ; preds = %609, %607, %588
  %616 = load i8, i8* %488, align 8
  %617 = icmp eq i8 %616, 10
  br i1 %617, label %618, label %621

618:                                              ; preds = %615
  %619 = bitcast %5* %486 to %61**
  %620 = load %61*, %61** %619, align 8
  br label %636

621:                                              ; preds = %615
  %622 = call noalias i8* @_emalloc_24() #13
  %623 = bitcast i8* %622 to i32*
  store i32 1, i32* %623, align 8
  %624 = getelementptr inbounds i8, i8* %622, i64 4
  %625 = bitcast i8* %624 to i32*
  store i32 10, i32* %625, align 4
  %626 = getelementptr inbounds i8, i8* %622, i64 8
  %627 = getelementptr inbounds %5, %5* %486, i64 0, i32 0, i32 0
  %628 = load i64, i64* %627, align 8
  %629 = getelementptr inbounds %5, %5* %486, i64 0, i32 1, i32 0
  %630 = load i32, i32* %629, align 8
  %631 = bitcast i8* %626 to i64*
  store i64 %628, i64* %631, align 8
  %632 = getelementptr inbounds i8, i8* %622, i64 16
  %633 = bitcast i8* %632 to i32*
  store i32 %630, i32* %633, align 8
  %634 = bitcast %5* %486 to i8**
  store i8* %622, i8** %634, align 8
  store i32 1034, i32* %629, align 8
  %635 = bitcast i8* %622 to %61*
  br label %636

636:                                              ; preds = %621, %618
  %637 = phi %61* [ %620, %618 ], [ %635, %621 ]
  %638 = getelementptr inbounds %61, %61* %637, i64 0, i32 0, i32 0
  %639 = load i32, i32* %638, align 4
  %640 = add i32 %639, 1
  store i32 %640, i32* %638, align 4
  %641 = call %5* @zend_hash_find(%9* %164, %2* nonnull %569) #13
  %642 = icmp eq %5* %641, null
  br i1 %642, label %659, label %643

643:                                              ; preds = %636
  %644 = getelementptr inbounds %5, %5* %641, i64 0, i32 1
  %645 = bitcast %7* %644 to i8*
  %646 = load i8, i8* %645, align 8
  %647 = icmp eq i8 %646, 15
  br i1 %647, label %648, label %651

648:                                              ; preds = %643
  %649 = bitcast %5* %641 to %5**
  %650 = load %5*, %5** %649, align 8
  br label %651

651:                                              ; preds = %648, %643
  %652 = phi %5* [ %650, %648 ], [ %641, %643 ]
  call void @_zval_ptr_dtor(%5* %652) #13
  %653 = getelementptr inbounds %5, %5* %486, i64 0, i32 0, i32 0
  %654 = load i64, i64* %653, align 8
  %655 = getelementptr inbounds %5, %5* %486, i64 0, i32 1, i32 0
  %656 = load i32, i32* %655, align 8
  %657 = getelementptr inbounds %5, %5* %652, i64 0, i32 0, i32 0
  store i64 %654, i64* %657, align 8
  %658 = getelementptr inbounds %5, %5* %652, i64 0, i32 1, i32 0
  store i32 %656, i32* %658, align 8
  br label %661

659:                                              ; preds = %636
  %660 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %569, %5* nonnull %486) #13
  br label %661

661:                                              ; preds = %659, %651
  %662 = add nsw i64 %475, 1
  br label %663

663:                                              ; preds = %590, %661, %614, %612, %577, %545
  %664 = phi i64 [ %662, %661 ], [ %475, %612 ], [ %475, %614 ], [ %475, %545 ], [ %475, %577 ], [ %475, %590 ]
  %665 = phi i32 [ %474, %661 ], [ %474, %612 ], [ 1, %614 ], [ %474, %545 ], [ %474, %577 ], [ %474, %590 ]
  %666 = getelementptr inbounds i8, i8* %556, i64 5
  %667 = load i8, i8* %666, align 1
  %668 = and i8 %667, 2
  %669 = icmp eq i8 %668, 0
  br i1 %669, label %670, label %679

670:                                              ; preds = %663
  %671 = load i32, i32* %557, align 8
  %672 = add i32 %671, -1
  store i32 %672, i32* %557, align 8
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %674, label %679

674:                                              ; preds = %670
  %675 = and i8 %667, 1
  %676 = icmp eq i8 %675, 0
  br i1 %676, label %678, label %677

677:                                              ; preds = %674
  call void @free(i8* nonnull %556) #13
  br label %679

678:                                              ; preds = %674
  call void @_efree(i8* nonnull %556) #13
  br label %679

679:                                              ; preds = %678, %677, %670, %663, %533, %495, %491, %485
  %680 = phi i64 [ %544, %533 ], [ %475, %485 ], [ %475, %491 ], [ %475, %495 ], [ %664, %663 ], [ %664, %670 ], [ %664, %677 ], [ %664, %678 ]
  %681 = phi i32 [ %474, %533 ], [ %474, %485 ], [ %474, %491 ], [ %474, %495 ], [ %665, %663 ], [ %665, %670 ], [ %665, %677 ], [ %665, %678 ]
  %682 = getelementptr inbounds %11, %11* %476, i64 1
  %683 = icmp eq %11* %682, %469
  br i1 %683, label %3283, label %473

684:                                              ; preds = %165
  %685 = bitcast %5* %23 to %9**
  %686 = load %9*, %9** %685, align 8
  %687 = getelementptr inbounds %9, %9* %686, i64 0, i32 3
  %688 = load %11*, %11** %687, align 8
  %689 = getelementptr inbounds %9, %9* %686, i64 0, i32 4
  %690 = load i32, i32* %689, align 8
  %691 = zext i32 %690 to i64
  %692 = getelementptr inbounds %11, %11* %688, i64 %691
  %693 = icmp eq i32 %690, 0
  br i1 %693, label %3283, label %694

694:                                              ; preds = %684
  %695 = bitcast %5* %54 to %2**
  br label %696

696:                                              ; preds = %972, %694
  %697 = phi i32 [ 0, %694 ], [ %974, %972 ]
  %698 = phi i64 [ 0, %694 ], [ %973, %972 ]
  %699 = phi %11* [ %688, %694 ], [ %975, %972 ]
  %700 = getelementptr inbounds %11, %11* %699, i64 0, i32 0
  %701 = getelementptr inbounds %11, %11* %699, i64 0, i32 0, i32 1
  %702 = bitcast %7* %701 to i8*
  %703 = load i8, i8* %702, align 8
  %704 = icmp eq i8 %703, 15
  br i1 %704, label %705, label %708

705:                                              ; preds = %696
  %706 = bitcast %11* %699 to %5**
  %707 = load %5*, %5** %706, align 8
  br label %708

708:                                              ; preds = %705, %696
  %709 = phi %5* [ %707, %705 ], [ %700, %696 ]
  %710 = getelementptr inbounds %5, %5* %709, i64 0, i32 1
  %711 = bitcast %7* %710 to i8*
  %712 = load i8, i8* %711, align 8
  %713 = icmp eq i8 %712, 0
  br i1 %713, label %972, label %714

714:                                              ; preds = %708
  %715 = getelementptr inbounds %11, %11* %699, i64 0, i32 2
  %716 = load %2*, %2** %715, align 8
  %717 = icmp eq %2* %716, null
  br i1 %717, label %972, label %718

718:                                              ; preds = %714
  %719 = getelementptr inbounds %2, %2* %716, i64 0, i32 2
  %720 = load i64, i64* %719, align 8
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %972, label %722

722:                                              ; preds = %718
  %723 = call %5* @zend_hash_find(%9* %164, %2* nonnull %716) #13
  %724 = icmp eq %5* %723, null
  br i1 %724, label %905, label %725

725:                                              ; preds = %722
  %726 = getelementptr inbounds %5, %5* %723, i64 0, i32 1
  %727 = bitcast %7* %726 to i8*
  %728 = load i8, i8* %727, align 8
  %729 = icmp eq i8 %728, 15
  br i1 %729, label %730, label %772

730:                                              ; preds = %725
  %731 = bitcast %5* %723 to %5**
  %732 = load %5*, %5** %731, align 8
  %733 = getelementptr inbounds %5, %5* %732, i64 0, i32 1
  %734 = bitcast %7* %733 to i8*
  %735 = load i8, i8* %734, align 8
  %736 = icmp eq i8 %735, 0
  br i1 %736, label %737, label %772

737:                                              ; preds = %730
  %738 = load i8, i8* %711, align 8
  %739 = icmp eq i8 %738, 10
  br i1 %739, label %740, label %745

740:                                              ; preds = %737
  %741 = bitcast %5* %709 to %61**
  %742 = load %61*, %61** %741, align 8
  %743 = getelementptr inbounds %5, %5* %709, i64 0, i32 0, i32 0
  %744 = getelementptr inbounds %5, %5* %709, i64 0, i32 1, i32 0
  br label %760

745:                                              ; preds = %737
  %746 = call noalias i8* @_emalloc_24() #13
  %747 = bitcast i8* %746 to i32*
  store i32 1, i32* %747, align 8
  %748 = getelementptr inbounds i8, i8* %746, i64 4
  %749 = bitcast i8* %748 to i32*
  store i32 10, i32* %749, align 4
  %750 = getelementptr inbounds i8, i8* %746, i64 8
  %751 = getelementptr inbounds %5, %5* %709, i64 0, i32 0, i32 0
  %752 = load i64, i64* %751, align 8
  %753 = getelementptr inbounds %5, %5* %709, i64 0, i32 1, i32 0
  %754 = load i32, i32* %753, align 8
  %755 = bitcast i8* %750 to i64*
  store i64 %752, i64* %755, align 8
  %756 = getelementptr inbounds i8, i8* %746, i64 16
  %757 = bitcast i8* %756 to i32*
  store i32 %754, i32* %757, align 8
  %758 = bitcast %5* %709 to i8**
  store i8* %746, i8** %758, align 8
  store i32 1034, i32* %753, align 8
  %759 = bitcast i8* %746 to %61*
  br label %760

760:                                              ; preds = %745, %740
  %761 = phi i32* [ %744, %740 ], [ %753, %745 ]
  %762 = phi i64* [ %743, %740 ], [ %751, %745 ]
  %763 = phi %61* [ %742, %740 ], [ %759, %745 ]
  %764 = getelementptr inbounds %61, %61* %763, i64 0, i32 0, i32 0
  %765 = load i32, i32* %764, align 4
  %766 = add i32 %765, 1
  store i32 %766, i32* %764, align 4
  %767 = load i64, i64* %762, align 8
  %768 = load i32, i32* %761, align 8
  %769 = getelementptr inbounds %5, %5* %732, i64 0, i32 0, i32 0
  store i64 %767, i64* %769, align 8
  %770 = getelementptr inbounds %5, %5* %732, i64 0, i32 1, i32 0
  store i32 %768, i32* %770, align 8
  %771 = add nsw i64 %698, 1
  br label %972

772:                                              ; preds = %941, %730, %725
  %773 = getelementptr inbounds %2, %2* %716, i64 0, i32 3, i64 0
  %774 = load i64, i64* %719, align 8
  %775 = load %2*, %2** %695, align 8
  %776 = getelementptr inbounds %2, %2* %775, i64 0, i32 2
  %777 = load i64, i64* %776, align 8
  %778 = add i64 %774, 1
  %779 = add i64 %777, %778
  %780 = add i64 %779, 32
  %781 = and i64 %780, -8
  %782 = call noalias i8* @_emalloc(i64 %781) #15
  %783 = bitcast i8* %782 to i32*
  store i32 1, i32* %783, align 8
  %784 = getelementptr inbounds i8, i8* %782, i64 4
  %785 = bitcast i8* %784 to i32*
  store i32 6, i32* %785, align 4
  %786 = getelementptr inbounds i8, i8* %782, i64 8
  %787 = bitcast i8* %786 to i64*
  store i64 0, i64* %787, align 8
  %788 = getelementptr inbounds i8, i8* %782, i64 16
  %789 = bitcast i8* %788 to i64*
  store i64 %779, i64* %789, align 8
  %790 = getelementptr inbounds i8, i8* %782, i64 24
  %791 = load %2*, %2** %695, align 8
  %792 = getelementptr inbounds %2, %2* %791, i64 0, i32 3, i64 0
  %793 = getelementptr inbounds %2, %2* %791, i64 0, i32 2
  %794 = load i64, i64* %793, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %790, i8* nonnull align 8 %792, i64 %794, i1 false) #13
  %795 = bitcast i8* %782 to %2*
  %796 = load i64, i64* %793, align 8
  %797 = getelementptr inbounds %2, %2* %795, i64 0, i32 3, i64 %796
  store i8 95, i8* %797, align 1
  %798 = load i64, i64* %793, align 8
  %799 = getelementptr inbounds %2, %2* %795, i64 0, i32 3, i64 %798
  %800 = getelementptr inbounds i8, i8* %799, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %800, i8* nonnull align 1 %773, i64 %778, i1 false) #13
  %801 = load i64, i64* %789, align 8
  %802 = icmp eq i64 %801, 0
  br i1 %802, label %889, label %803

803:                                              ; preds = %772
  %804 = load i8, i8* %790, align 1
  %805 = zext i8 %804 to i32
  %806 = lshr i32 %805, 5
  %807 = zext i32 %806 to i64
  %808 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %807
  %809 = load i32, i32* %808, align 4
  %810 = and i32 %805, 31
  %811 = shl i32 1, %810
  %812 = and i32 %811, %809
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %889, label %814

814:                                              ; preds = %803
  %815 = icmp ugt i64 %801, 1
  br i1 %815, label %816, label %841

816:                                              ; preds = %814, %830
  %817 = phi i64 [ %831, %830 ], [ 1, %814 ]
  %818 = getelementptr inbounds i8, i8* %790, i64 %817
  %819 = load i8, i8* %818, align 1
  %820 = zext i8 %819 to i32
  %821 = lshr i32 %820, 5
  %822 = or i32 %821, 8
  %823 = zext i32 %822 to i64
  %824 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %823
  %825 = load i32, i32* %824, align 4
  %826 = and i32 %820, 31
  %827 = shl i32 1, %826
  %828 = and i32 %827, %825
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %889, label %830

830:                                              ; preds = %816
  %831 = add nuw i64 %817, 1
  %832 = icmp ult i64 %831, %801
  br i1 %832, label %816, label %833

833:                                              ; preds = %830
  %834 = icmp eq i64 %801, 4
  br i1 %834, label %835, label %841

835:                                              ; preds = %833
  %836 = call i32 @memcmp(i8* nonnull %790, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %838, label %841

838:                                              ; preds = %835
  %839 = icmp eq i32 %697, 0
  br i1 %839, label %840, label %889

840:                                              ; preds = %838
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %889

841:                                              ; preds = %835, %833, %814
  %842 = load i8, i8* %711, align 8
  %843 = icmp eq i8 %842, 10
  br i1 %843, label %844, label %847

844:                                              ; preds = %841
  %845 = bitcast %5* %709 to %61**
  %846 = load %61*, %61** %845, align 8
  br label %862

847:                                              ; preds = %841
  %848 = call noalias i8* @_emalloc_24() #13
  %849 = bitcast i8* %848 to i32*
  store i32 1, i32* %849, align 8
  %850 = getelementptr inbounds i8, i8* %848, i64 4
  %851 = bitcast i8* %850 to i32*
  store i32 10, i32* %851, align 4
  %852 = getelementptr inbounds i8, i8* %848, i64 8
  %853 = getelementptr inbounds %5, %5* %709, i64 0, i32 0, i32 0
  %854 = load i64, i64* %853, align 8
  %855 = getelementptr inbounds %5, %5* %709, i64 0, i32 1, i32 0
  %856 = load i32, i32* %855, align 8
  %857 = bitcast i8* %852 to i64*
  store i64 %854, i64* %857, align 8
  %858 = getelementptr inbounds i8, i8* %848, i64 16
  %859 = bitcast i8* %858 to i32*
  store i32 %856, i32* %859, align 8
  %860 = bitcast %5* %709 to i8**
  store i8* %848, i8** %860, align 8
  store i32 1034, i32* %855, align 8
  %861 = bitcast i8* %848 to %61*
  br label %862

862:                                              ; preds = %847, %844
  %863 = phi %61* [ %846, %844 ], [ %861, %847 ]
  %864 = getelementptr inbounds %61, %61* %863, i64 0, i32 0, i32 0
  %865 = load i32, i32* %864, align 4
  %866 = add i32 %865, 1
  store i32 %866, i32* %864, align 4
  %867 = call %5* @zend_hash_find(%9* %164, %2* nonnull %795) #13
  %868 = icmp eq %5* %867, null
  br i1 %868, label %885, label %869

869:                                              ; preds = %862
  %870 = getelementptr inbounds %5, %5* %867, i64 0, i32 1
  %871 = bitcast %7* %870 to i8*
  %872 = load i8, i8* %871, align 8
  %873 = icmp eq i8 %872, 15
  br i1 %873, label %874, label %877

874:                                              ; preds = %869
  %875 = bitcast %5* %867 to %5**
  %876 = load %5*, %5** %875, align 8
  br label %877

877:                                              ; preds = %874, %869
  %878 = phi %5* [ %876, %874 ], [ %867, %869 ]
  call void @_zval_ptr_dtor(%5* %878) #13
  %879 = getelementptr inbounds %5, %5* %709, i64 0, i32 0, i32 0
  %880 = load i64, i64* %879, align 8
  %881 = getelementptr inbounds %5, %5* %709, i64 0, i32 1, i32 0
  %882 = load i32, i32* %881, align 8
  %883 = getelementptr inbounds %5, %5* %878, i64 0, i32 0, i32 0
  store i64 %880, i64* %883, align 8
  %884 = getelementptr inbounds %5, %5* %878, i64 0, i32 1, i32 0
  store i32 %882, i32* %884, align 8
  br label %887

885:                                              ; preds = %862
  %886 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %795, %5* nonnull %709) #13
  br label %887

887:                                              ; preds = %885, %877
  %888 = add nsw i64 %698, 1
  br label %889

889:                                              ; preds = %816, %887, %840, %838, %803, %772
  %890 = phi i64 [ %888, %887 ], [ %698, %838 ], [ %698, %840 ], [ %698, %772 ], [ %698, %803 ], [ %698, %816 ]
  %891 = phi i32 [ %697, %887 ], [ %697, %838 ], [ 1, %840 ], [ %697, %772 ], [ %697, %803 ], [ %697, %816 ]
  %892 = getelementptr inbounds i8, i8* %782, i64 5
  %893 = load i8, i8* %892, align 1
  %894 = and i8 %893, 2
  %895 = icmp eq i8 %894, 0
  br i1 %895, label %896, label %972

896:                                              ; preds = %889
  %897 = load i32, i32* %783, align 8
  %898 = add i32 %897, -1
  store i32 %898, i32* %783, align 8
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %972

900:                                              ; preds = %896
  %901 = and i8 %893, 1
  %902 = icmp eq i8 %901, 0
  br i1 %902, label %904, label %903

903:                                              ; preds = %900
  call void @free(i8* nonnull %782) #13
  br label %972

904:                                              ; preds = %900
  call void @_efree(i8* nonnull %782) #13
  br label %972

905:                                              ; preds = %722
  %906 = getelementptr inbounds %2, %2* %716, i64 0, i32 3, i64 0
  %907 = load i64, i64* %719, align 8
  %908 = icmp eq i64 %907, 0
  br i1 %908, label %972, label %909

909:                                              ; preds = %905
  %910 = load i8, i8* %906, align 1
  %911 = zext i8 %910 to i32
  %912 = lshr i32 %911, 5
  %913 = zext i32 %912 to i64
  %914 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %913
  %915 = load i32, i32* %914, align 4
  %916 = and i32 %911, 31
  %917 = shl i32 1, %916
  %918 = and i32 %917, %915
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %972, label %920

920:                                              ; preds = %909
  %921 = icmp ugt i64 %907, 1
  br i1 %921, label %922, label %944

922:                                              ; preds = %920, %936
  %923 = phi i64 [ %937, %936 ], [ 1, %920 ]
  %924 = getelementptr inbounds %2, %2* %716, i64 0, i32 3, i64 %923
  %925 = load i8, i8* %924, align 1
  %926 = zext i8 %925 to i32
  %927 = lshr i32 %926, 5
  %928 = or i32 %927, 8
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %929
  %931 = load i32, i32* %930, align 4
  %932 = and i32 %926, 31
  %933 = shl i32 1, %932
  %934 = and i32 %933, %931
  %935 = icmp eq i32 %934, 0
  br i1 %935, label %972, label %936

936:                                              ; preds = %922
  %937 = add nuw i64 %923, 1
  %938 = icmp ult i64 %937, %907
  br i1 %938, label %922, label %939

939:                                              ; preds = %936
  %940 = icmp eq i64 %907, 4
  br i1 %940, label %941, label %944

941:                                              ; preds = %939
  %942 = call i32 @memcmp(i8* nonnull %906, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %772, label %944

944:                                              ; preds = %941, %939, %920
  %945 = load i8, i8* %711, align 8
  %946 = icmp eq i8 %945, 10
  br i1 %946, label %947, label %950

947:                                              ; preds = %944
  %948 = bitcast %5* %709 to %61**
  %949 = load %61*, %61** %948, align 8
  br label %965

950:                                              ; preds = %944
  %951 = call noalias i8* @_emalloc_24() #13
  %952 = bitcast i8* %951 to i32*
  store i32 1, i32* %952, align 8
  %953 = getelementptr inbounds i8, i8* %951, i64 4
  %954 = bitcast i8* %953 to i32*
  store i32 10, i32* %954, align 4
  %955 = getelementptr inbounds i8, i8* %951, i64 8
  %956 = getelementptr inbounds %5, %5* %709, i64 0, i32 0, i32 0
  %957 = load i64, i64* %956, align 8
  %958 = getelementptr inbounds %5, %5* %709, i64 0, i32 1, i32 0
  %959 = load i32, i32* %958, align 8
  %960 = bitcast i8* %955 to i64*
  store i64 %957, i64* %960, align 8
  %961 = getelementptr inbounds i8, i8* %951, i64 16
  %962 = bitcast i8* %961 to i32*
  store i32 %959, i32* %962, align 8
  %963 = bitcast %5* %709 to i8**
  store i8* %951, i8** %963, align 8
  store i32 1034, i32* %958, align 8
  %964 = bitcast i8* %951 to %61*
  br label %965

965:                                              ; preds = %950, %947
  %966 = phi %61* [ %949, %947 ], [ %964, %950 ]
  %967 = getelementptr inbounds %61, %61* %966, i64 0, i32 0, i32 0
  %968 = load i32, i32* %967, align 4
  %969 = add i32 %968, 1
  store i32 %969, i32* %967, align 4
  %970 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %716, %5* nonnull %709) #13
  %971 = add nsw i64 %698, 1
  br label %972

972:                                              ; preds = %922, %965, %909, %905, %904, %903, %896, %889, %760, %718, %714, %708
  %973 = phi i64 [ %771, %760 ], [ %698, %708 ], [ %698, %714 ], [ %698, %718 ], [ %971, %965 ], [ %890, %889 ], [ %890, %896 ], [ %890, %903 ], [ %890, %904 ], [ %698, %905 ], [ %698, %909 ], [ %698, %922 ]
  %974 = phi i32 [ %697, %760 ], [ %697, %708 ], [ %697, %714 ], [ %697, %718 ], [ %697, %965 ], [ %891, %889 ], [ %891, %896 ], [ %891, %903 ], [ %891, %904 ], [ %697, %905 ], [ %697, %909 ], [ %697, %922 ]
  %975 = getelementptr inbounds %11, %11* %699, i64 1
  %976 = icmp eq %11* %975, %692
  br i1 %976, label %3283, label %696

977:                                              ; preds = %165
  %978 = bitcast %5* %23 to %9**
  %979 = load %9*, %9** %978, align 8
  %980 = getelementptr inbounds %9, %9* %979, i64 0, i32 3
  %981 = load %11*, %11** %980, align 8
  %982 = getelementptr inbounds %9, %9* %979, i64 0, i32 4
  %983 = load i32, i32* %982, align 8
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds %11, %11* %981, i64 %984
  %986 = icmp eq i32 %983, 0
  br i1 %986, label %3283, label %987

987:                                              ; preds = %977
  %988 = bitcast %5* %54 to %2**
  br label %989

989:                                              ; preds = %1208, %987
  %990 = phi i32 [ 0, %987 ], [ %1210, %1208 ]
  %991 = phi i64 [ 0, %987 ], [ %1209, %1208 ]
  %992 = phi %11* [ %981, %987 ], [ %1211, %1208 ]
  %993 = getelementptr inbounds %11, %11* %992, i64 0, i32 0
  %994 = getelementptr inbounds %11, %11* %992, i64 0, i32 0, i32 1
  %995 = bitcast %7* %994 to i8*
  %996 = load i8, i8* %995, align 8
  %997 = icmp eq i8 %996, 15
  br i1 %997, label %998, label %1001

998:                                              ; preds = %989
  %999 = bitcast %11* %992 to %5**
  %1000 = load %5*, %5** %999, align 8
  br label %1001

1001:                                             ; preds = %998, %989
  %1002 = phi %5* [ %1000, %998 ], [ %993, %989 ]
  %1003 = getelementptr inbounds %5, %5* %1002, i64 0, i32 1
  %1004 = bitcast %7* %1003 to i8*
  %1005 = load i8, i8* %1004, align 8
  %1006 = icmp eq i8 %1005, 0
  br i1 %1006, label %1208, label %1007

1007:                                             ; preds = %1001
  %1008 = getelementptr inbounds %11, %11* %992, i64 0, i32 2
  %1009 = load %2*, %2** %1008, align 8
  %1010 = icmp eq %2* %1009, null
  br i1 %1010, label %1044, label %1011

1011:                                             ; preds = %1007
  %1012 = getelementptr inbounds %2, %2* %1009, i64 0, i32 2
  %1013 = load i64, i64* %1012, align 8
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1208, label %1015

1015:                                             ; preds = %1011
  %1016 = getelementptr inbounds %2, %2* %1009, i64 0, i32 3, i64 0
  %1017 = load %2*, %2** %988, align 8
  %1018 = getelementptr inbounds %2, %2* %1017, i64 0, i32 2
  %1019 = load i64, i64* %1018, align 8
  %1020 = add i64 %1013, 1
  %1021 = add i64 %1019, %1020
  %1022 = add i64 %1021, 32
  %1023 = and i64 %1022, -8
  %1024 = call noalias i8* @_emalloc(i64 %1023) #15
  %1025 = bitcast i8* %1024 to i32*
  store i32 1, i32* %1025, align 8
  %1026 = getelementptr inbounds i8, i8* %1024, i64 4
  %1027 = bitcast i8* %1026 to i32*
  store i32 6, i32* %1027, align 4
  %1028 = getelementptr inbounds i8, i8* %1024, i64 8
  %1029 = bitcast i8* %1028 to i64*
  store i64 0, i64* %1029, align 8
  %1030 = getelementptr inbounds i8, i8* %1024, i64 16
  %1031 = bitcast i8* %1030 to i64*
  store i64 %1021, i64* %1031, align 8
  %1032 = ptrtoint i8* %1024 to i64
  %1033 = getelementptr inbounds i8, i8* %1024, i64 24
  %1034 = load %2*, %2** %988, align 8
  %1035 = getelementptr inbounds %2, %2* %1034, i64 0, i32 3, i64 0
  %1036 = getelementptr inbounds %2, %2* %1034, i64 0, i32 2
  %1037 = load i64, i64* %1036, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1033, i8* nonnull align 8 %1035, i64 %1037, i1 false) #13
  %1038 = bitcast i8* %1024 to %2*
  %1039 = load i64, i64* %1036, align 8
  %1040 = getelementptr inbounds %2, %2* %1038, i64 0, i32 3, i64 %1039
  store i8 95, i8* %1040, align 1
  %1041 = load i64, i64* %1036, align 8
  %1042 = getelementptr inbounds %2, %2* %1038, i64 0, i32 3, i64 %1041
  %1043 = getelementptr inbounds i8, i8* %1042, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1043, i8* nonnull align 1 %1016, i64 %1020, i1 false) #13
  br label %1095

1044:                                             ; preds = %1007
  %1045 = getelementptr inbounds %11, %11* %992, i64 0, i32 1
  %1046 = load i64, i64* %1045, align 8
  %1047 = call %2* @zend_long_to_str(i64 %1046) #13
  %1048 = getelementptr inbounds %2, %2* %1047, i64 0, i32 3, i64 0
  %1049 = getelementptr inbounds %2, %2* %1047, i64 0, i32 2
  %1050 = load i64, i64* %1049, align 8
  %1051 = load %2*, %2** %988, align 8
  %1052 = getelementptr inbounds %2, %2* %1051, i64 0, i32 2
  %1053 = load i64, i64* %1052, align 8
  %1054 = add i64 %1050, 1
  %1055 = add i64 %1053, %1054
  %1056 = add i64 %1055, 32
  %1057 = and i64 %1056, -8
  %1058 = call noalias i8* @_emalloc(i64 %1057) #15
  %1059 = bitcast i8* %1058 to i32*
  store i32 1, i32* %1059, align 8
  %1060 = getelementptr inbounds i8, i8* %1058, i64 4
  %1061 = bitcast i8* %1060 to i32*
  store i32 6, i32* %1061, align 4
  %1062 = getelementptr inbounds i8, i8* %1058, i64 8
  %1063 = bitcast i8* %1062 to i64*
  store i64 0, i64* %1063, align 8
  %1064 = getelementptr inbounds i8, i8* %1058, i64 16
  %1065 = bitcast i8* %1064 to i64*
  store i64 %1055, i64* %1065, align 8
  %1066 = ptrtoint i8* %1058 to i64
  %1067 = getelementptr inbounds i8, i8* %1058, i64 24
  %1068 = load %2*, %2** %988, align 8
  %1069 = getelementptr inbounds %2, %2* %1068, i64 0, i32 3, i64 0
  %1070 = getelementptr inbounds %2, %2* %1068, i64 0, i32 2
  %1071 = load i64, i64* %1070, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1067, i8* nonnull align 8 %1069, i64 %1071, i1 false) #13
  %1072 = bitcast i8* %1058 to %2*
  %1073 = load i64, i64* %1070, align 8
  %1074 = getelementptr inbounds %2, %2* %1072, i64 0, i32 3, i64 %1073
  store i8 95, i8* %1074, align 1
  %1075 = load i64, i64* %1070, align 8
  %1076 = getelementptr inbounds %2, %2* %1072, i64 0, i32 3, i64 %1075
  %1077 = getelementptr inbounds i8, i8* %1076, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1077, i8* nonnull align 1 %1048, i64 %1054, i1 false) #13
  %1078 = getelementptr inbounds %2, %2* %1047, i64 0, i32 0, i32 1
  %1079 = bitcast %4* %1078 to %63*
  %1080 = getelementptr inbounds %63, %63* %1079, i64 0, i32 1
  %1081 = load i8, i8* %1080, align 1
  %1082 = and i8 %1081, 2
  %1083 = icmp eq i8 %1082, 0
  br i1 %1083, label %1084, label %1095

1084:                                             ; preds = %1044
  %1085 = getelementptr inbounds %2, %2* %1047, i64 0, i32 0, i32 0
  %1086 = load i32, i32* %1085, align 8
  %1087 = add i32 %1086, -1
  store i32 %1087, i32* %1085, align 8
  %1088 = icmp eq i32 %1087, 0
  br i1 %1088, label %1089, label %1095

1089:                                             ; preds = %1084
  %1090 = and i8 %1081, 1
  %1091 = icmp eq i8 %1090, 0
  %1092 = bitcast %2* %1047 to i8*
  br i1 %1091, label %1094, label %1093

1093:                                             ; preds = %1089
  call void @free(i8* %1092) #13
  br label %1095

1094:                                             ; preds = %1089
  call void @_efree(i8* %1092) #13
  br label %1095

1095:                                             ; preds = %1094, %1093, %1084, %1044, %1015
  %1096 = phi i64 [ %1032, %1015 ], [ %1066, %1044 ], [ %1066, %1084 ], [ %1066, %1093 ], [ %1066, %1094 ]
  %1097 = inttoptr i64 %1096 to %2*
  %1098 = getelementptr inbounds %2, %2* %1097, i64 0, i32 3, i64 0
  %1099 = getelementptr inbounds %2, %2* %1097, i64 0, i32 2
  %1100 = load i64, i64* %1099, align 8
  %1101 = icmp eq i64 %1100, 0
  br i1 %1101, label %1188, label %1102

1102:                                             ; preds = %1095
  %1103 = load i8, i8* %1098, align 1
  %1104 = zext i8 %1103 to i32
  %1105 = lshr i32 %1104, 5
  %1106 = zext i32 %1105 to i64
  %1107 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1106
  %1108 = load i32, i32* %1107, align 4
  %1109 = and i32 %1104, 31
  %1110 = shl i32 1, %1109
  %1111 = and i32 %1110, %1108
  %1112 = icmp eq i32 %1111, 0
  br i1 %1112, label %1188, label %1113

1113:                                             ; preds = %1102
  %1114 = icmp ugt i64 %1100, 1
  br i1 %1114, label %1115, label %1140

1115:                                             ; preds = %1113, %1129
  %1116 = phi i64 [ %1130, %1129 ], [ 1, %1113 ]
  %1117 = getelementptr inbounds %2, %2* %1097, i64 0, i32 3, i64 %1116
  %1118 = load i8, i8* %1117, align 1
  %1119 = zext i8 %1118 to i32
  %1120 = lshr i32 %1119, 5
  %1121 = or i32 %1120, 8
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = and i32 %1119, 31
  %1126 = shl i32 1, %1125
  %1127 = and i32 %1126, %1124
  %1128 = icmp eq i32 %1127, 0
  br i1 %1128, label %1188, label %1129

1129:                                             ; preds = %1115
  %1130 = add nuw i64 %1116, 1
  %1131 = icmp ult i64 %1130, %1100
  br i1 %1131, label %1115, label %1132

1132:                                             ; preds = %1129
  %1133 = icmp eq i64 %1100, 4
  br i1 %1133, label %1134, label %1140

1134:                                             ; preds = %1132
  %1135 = call i32 @memcmp(i8* nonnull %1098, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %1136 = icmp eq i32 %1135, 0
  br i1 %1136, label %1137, label %1140

1137:                                             ; preds = %1134
  %1138 = icmp eq i32 %990, 0
  br i1 %1138, label %1139, label %1188

1139:                                             ; preds = %1137
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %1188

1140:                                             ; preds = %1134, %1132, %1113
  %1141 = load i8, i8* %1004, align 8
  %1142 = icmp eq i8 %1141, 10
  br i1 %1142, label %1143, label %1146

1143:                                             ; preds = %1140
  %1144 = bitcast %5* %1002 to %61**
  %1145 = load %61*, %61** %1144, align 8
  br label %1161

1146:                                             ; preds = %1140
  %1147 = call noalias i8* @_emalloc_24() #13
  %1148 = bitcast i8* %1147 to i32*
  store i32 1, i32* %1148, align 8
  %1149 = getelementptr inbounds i8, i8* %1147, i64 4
  %1150 = bitcast i8* %1149 to i32*
  store i32 10, i32* %1150, align 4
  %1151 = getelementptr inbounds i8, i8* %1147, i64 8
  %1152 = getelementptr inbounds %5, %5* %1002, i64 0, i32 0, i32 0
  %1153 = load i64, i64* %1152, align 8
  %1154 = getelementptr inbounds %5, %5* %1002, i64 0, i32 1, i32 0
  %1155 = load i32, i32* %1154, align 8
  %1156 = bitcast i8* %1151 to i64*
  store i64 %1153, i64* %1156, align 8
  %1157 = getelementptr inbounds i8, i8* %1147, i64 16
  %1158 = bitcast i8* %1157 to i32*
  store i32 %1155, i32* %1158, align 8
  %1159 = bitcast %5* %1002 to i8**
  store i8* %1147, i8** %1159, align 8
  store i32 1034, i32* %1154, align 8
  %1160 = bitcast i8* %1147 to %61*
  br label %1161

1161:                                             ; preds = %1146, %1143
  %1162 = phi %61* [ %1145, %1143 ], [ %1160, %1146 ]
  %1163 = getelementptr inbounds %61, %61* %1162, i64 0, i32 0, i32 0
  %1164 = load i32, i32* %1163, align 4
  %1165 = add i32 %1164, 1
  store i32 %1165, i32* %1163, align 4
  %1166 = call %5* @zend_hash_find(%9* %164, %2* nonnull %1097) #13
  %1167 = icmp eq %5* %1166, null
  br i1 %1167, label %1184, label %1168

1168:                                             ; preds = %1161
  %1169 = getelementptr inbounds %5, %5* %1166, i64 0, i32 1
  %1170 = bitcast %7* %1169 to i8*
  %1171 = load i8, i8* %1170, align 8
  %1172 = icmp eq i8 %1171, 15
  br i1 %1172, label %1173, label %1176

1173:                                             ; preds = %1168
  %1174 = bitcast %5* %1166 to %5**
  %1175 = load %5*, %5** %1174, align 8
  br label %1176

1176:                                             ; preds = %1173, %1168
  %1177 = phi %5* [ %1175, %1173 ], [ %1166, %1168 ]
  call void @_zval_ptr_dtor(%5* %1177) #13
  %1178 = getelementptr inbounds %5, %5* %1002, i64 0, i32 0, i32 0
  %1179 = load i64, i64* %1178, align 8
  %1180 = getelementptr inbounds %5, %5* %1002, i64 0, i32 1, i32 0
  %1181 = load i32, i32* %1180, align 8
  %1182 = getelementptr inbounds %5, %5* %1177, i64 0, i32 0, i32 0
  store i64 %1179, i64* %1182, align 8
  %1183 = getelementptr inbounds %5, %5* %1177, i64 0, i32 1, i32 0
  store i32 %1181, i32* %1183, align 8
  br label %1186

1184:                                             ; preds = %1161
  %1185 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %1097, %5* nonnull %1002) #13
  br label %1186

1186:                                             ; preds = %1184, %1176
  %1187 = add nsw i64 %991, 1
  br label %1188

1188:                                             ; preds = %1115, %1186, %1139, %1137, %1102, %1095
  %1189 = phi i64 [ %1187, %1186 ], [ %991, %1137 ], [ %991, %1139 ], [ %991, %1095 ], [ %991, %1102 ], [ %991, %1115 ]
  %1190 = phi i32 [ %990, %1186 ], [ %990, %1137 ], [ 1, %1139 ], [ %990, %1095 ], [ %990, %1102 ], [ %990, %1115 ]
  %1191 = getelementptr inbounds %2, %2* %1097, i64 0, i32 0, i32 1
  %1192 = bitcast %4* %1191 to %63*
  %1193 = getelementptr inbounds %63, %63* %1192, i64 0, i32 1
  %1194 = load i8, i8* %1193, align 1
  %1195 = and i8 %1194, 2
  %1196 = icmp eq i8 %1195, 0
  br i1 %1196, label %1197, label %1208

1197:                                             ; preds = %1188
  %1198 = getelementptr inbounds %2, %2* %1097, i64 0, i32 0, i32 0
  %1199 = load i32, i32* %1198, align 8
  %1200 = add i32 %1199, -1
  store i32 %1200, i32* %1198, align 8
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1202, label %1208

1202:                                             ; preds = %1197
  %1203 = and i8 %1194, 1
  %1204 = icmp eq i8 %1203, 0
  %1205 = inttoptr i64 %1096 to i8*
  br i1 %1204, label %1207, label %1206

1206:                                             ; preds = %1202
  call void @free(i8* %1205) #13
  br label %1208

1207:                                             ; preds = %1202
  call void @_efree(i8* %1205) #13
  br label %1208

1208:                                             ; preds = %1207, %1206, %1197, %1188, %1011, %1001
  %1209 = phi i64 [ %991, %1001 ], [ %991, %1011 ], [ %1189, %1188 ], [ %1189, %1197 ], [ %1189, %1206 ], [ %1189, %1207 ]
  %1210 = phi i32 [ %990, %1001 ], [ %990, %1011 ], [ %1190, %1188 ], [ %1190, %1197 ], [ %1190, %1206 ], [ %1190, %1207 ]
  %1211 = getelementptr inbounds %11, %11* %992, i64 1
  %1212 = icmp eq %11* %1211, %985
  br i1 %1212, label %3283, label %989

1213:                                             ; preds = %165
  %1214 = bitcast %5* %23 to %9**
  %1215 = load %9*, %9** %1214, align 8
  %1216 = getelementptr inbounds %9, %9* %1215, i64 0, i32 3
  %1217 = load %11*, %11** %1216, align 8
  %1218 = getelementptr inbounds %9, %9* %1215, i64 0, i32 4
  %1219 = load i32, i32* %1218, align 8
  %1220 = zext i32 %1219 to i64
  %1221 = getelementptr inbounds %11, %11* %1217, i64 %1220
  %1222 = icmp eq i32 %1219, 0
  br i1 %1222, label %3283, label %1223

1223:                                             ; preds = %1213
  %1224 = bitcast %5* %54 to %2**
  br label %1225

1225:                                             ; preds = %1548, %1223
  %1226 = phi i32 [ 0, %1223 ], [ %1550, %1548 ]
  %1227 = phi i64 [ 0, %1223 ], [ %1549, %1548 ]
  %1228 = phi %11* [ %1217, %1223 ], [ %1551, %1548 ]
  %1229 = getelementptr inbounds %11, %11* %1228, i64 0, i32 0
  %1230 = getelementptr inbounds %11, %11* %1228, i64 0, i32 0, i32 1
  %1231 = bitcast %7* %1230 to i8*
  %1232 = load i8, i8* %1231, align 8
  %1233 = icmp eq i8 %1232, 15
  br i1 %1233, label %1234, label %1237

1234:                                             ; preds = %1225
  %1235 = bitcast %11* %1228 to %5**
  %1236 = load %5*, %5** %1235, align 8
  br label %1237

1237:                                             ; preds = %1234, %1225
  %1238 = phi %5* [ %1236, %1234 ], [ %1229, %1225 ]
  %1239 = getelementptr inbounds %5, %5* %1238, i64 0, i32 1
  %1240 = bitcast %7* %1239 to i8*
  %1241 = load i8, i8* %1240, align 8
  %1242 = icmp eq i8 %1241, 0
  br i1 %1242, label %1548, label %1243

1243:                                             ; preds = %1237
  %1244 = getelementptr inbounds %11, %11* %1228, i64 0, i32 2
  %1245 = load %2*, %2** %1244, align 8
  %1246 = icmp eq %2* %1245, null
  br i1 %1246, label %1371, label %1247

1247:                                             ; preds = %1243
  %1248 = getelementptr inbounds %2, %2* %1245, i64 0, i32 3, i64 0
  %1249 = getelementptr inbounds %2, %2* %1245, i64 0, i32 2
  %1250 = load i64, i64* %1249, align 8
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1287, label %1252

1252:                                             ; preds = %1247
  %1253 = load i8, i8* %1248, align 1
  %1254 = zext i8 %1253 to i32
  %1255 = lshr i32 %1254, 5
  %1256 = zext i32 %1255 to i64
  %1257 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1256
  %1258 = load i32, i32* %1257, align 4
  %1259 = and i32 %1254, 31
  %1260 = shl i32 1, %1259
  %1261 = and i32 %1260, %1258
  %1262 = icmp eq i32 %1261, 0
  br i1 %1262, label %1287, label %1263

1263:                                             ; preds = %1252
  %1264 = icmp ugt i64 %1250, 1
  br i1 %1264, label %1265, label %1360

1265:                                             ; preds = %1263, %1279
  %1266 = phi i64 [ %1280, %1279 ], [ 1, %1263 ]
  %1267 = getelementptr inbounds %2, %2* %1245, i64 0, i32 3, i64 %1266
  %1268 = load i8, i8* %1267, align 1
  %1269 = zext i8 %1268 to i32
  %1270 = lshr i32 %1269, 5
  %1271 = or i32 %1270, 8
  %1272 = zext i32 %1271 to i64
  %1273 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1272
  %1274 = load i32, i32* %1273, align 4
  %1275 = and i32 %1269, 31
  %1276 = shl i32 1, %1275
  %1277 = and i32 %1276, %1274
  %1278 = icmp eq i32 %1277, 0
  br i1 %1278, label %1287, label %1279

1279:                                             ; preds = %1265
  %1280 = add nuw i64 %1266, 1
  %1281 = icmp ult i64 %1280, %1250
  br i1 %1281, label %1265, label %1282

1282:                                             ; preds = %1279
  %1283 = icmp eq i64 %1250, 4
  br i1 %1283, label %1284, label %1360

1284:                                             ; preds = %1282
  %1285 = call i32 @memcmp(i8* nonnull %1248, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1287, label %1360

1287:                                             ; preds = %1265, %1284, %1252, %1247
  %1288 = load %2*, %2** %1224, align 8
  %1289 = getelementptr inbounds %2, %2* %1288, i64 0, i32 2
  %1290 = load i64, i64* %1289, align 8
  %1291 = add i64 %1250, 1
  %1292 = add i64 %1290, %1291
  %1293 = add i64 %1292, 32
  %1294 = and i64 %1293, -8
  %1295 = call noalias i8* @_emalloc(i64 %1294) #15
  %1296 = bitcast i8* %1295 to %2*
  %1297 = bitcast i8* %1295 to i32*
  store i32 1, i32* %1297, align 8
  %1298 = getelementptr inbounds i8, i8* %1295, i64 4
  %1299 = bitcast i8* %1298 to i32*
  store i32 6, i32* %1299, align 4
  %1300 = getelementptr inbounds i8, i8* %1295, i64 8
  %1301 = bitcast i8* %1300 to i64*
  store i64 0, i64* %1301, align 8
  %1302 = getelementptr inbounds i8, i8* %1295, i64 16
  %1303 = bitcast i8* %1302 to i64*
  store i64 %1292, i64* %1303, align 8
  %1304 = getelementptr inbounds i8, i8* %1295, i64 24
  %1305 = load %2*, %2** %1224, align 8
  %1306 = getelementptr inbounds %2, %2* %1305, i64 0, i32 3, i64 0
  %1307 = getelementptr inbounds %2, %2* %1305, i64 0, i32 2
  %1308 = load i64, i64* %1307, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1304, i8* nonnull align 8 %1306, i64 %1308, i1 false) #13
  %1309 = load i64, i64* %1307, align 8
  %1310 = getelementptr inbounds %2, %2* %1296, i64 0, i32 3, i64 %1309
  store i8 95, i8* %1310, align 1
  %1311 = load i64, i64* %1307, align 8
  %1312 = getelementptr inbounds %2, %2* %1296, i64 0, i32 3, i64 %1311
  %1313 = getelementptr inbounds i8, i8* %1312, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1313, i8* nonnull align 1 %1248, i64 %1291, i1 false) #13
  %1314 = load i64, i64* %1303, align 8
  %1315 = icmp eq i64 %1314, 0
  br i1 %1315, label %1346, label %1316

1316:                                             ; preds = %1287
  %1317 = load i8, i8* %1304, align 1
  %1318 = zext i8 %1317 to i32
  %1319 = lshr i32 %1318, 5
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1320
  %1322 = load i32, i32* %1321, align 4
  %1323 = and i32 %1318, 31
  %1324 = shl i32 1, %1323
  %1325 = and i32 %1324, %1322
  %1326 = icmp eq i32 %1325, 0
  br i1 %1326, label %1346, label %1327

1327:                                             ; preds = %1316
  %1328 = icmp ugt i64 %1314, 1
  br i1 %1328, label %1329, label %1468

1329:                                             ; preds = %1327, %1343
  %1330 = phi i64 [ %1344, %1343 ], [ 1, %1327 ]
  %1331 = getelementptr inbounds i8, i8* %1304, i64 %1330
  %1332 = load i8, i8* %1331, align 1
  %1333 = zext i8 %1332 to i32
  %1334 = lshr i32 %1333, 5
  %1335 = or i32 %1334, 8
  %1336 = zext i32 %1335 to i64
  %1337 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1336
  %1338 = load i32, i32* %1337, align 4
  %1339 = and i32 %1333, 31
  %1340 = shl i32 1, %1339
  %1341 = and i32 %1340, %1338
  %1342 = icmp eq i32 %1341, 0
  br i1 %1342, label %1346, label %1343

1343:                                             ; preds = %1329
  %1344 = add nuw i64 %1330, 1
  %1345 = icmp ult i64 %1344, %1314
  br i1 %1345, label %1329, label %1468

1346:                                             ; preds = %1329, %1316, %1287
  %1347 = getelementptr inbounds i8, i8* %1295, i64 5
  %1348 = load i8, i8* %1347, align 1
  %1349 = and i8 %1348, 2
  %1350 = icmp eq i8 %1349, 0
  br i1 %1350, label %1351, label %1548

1351:                                             ; preds = %1346
  %1352 = load i32, i32* %1297, align 8
  %1353 = add i32 %1352, -1
  store i32 %1353, i32* %1297, align 8
  %1354 = icmp eq i32 %1353, 0
  br i1 %1354, label %1355, label %1548

1355:                                             ; preds = %1351
  %1356 = and i8 %1348, 1
  %1357 = icmp eq i8 %1356, 0
  br i1 %1357, label %1359, label %1358

1358:                                             ; preds = %1355
  call void @free(i8* nonnull %1295) #13
  br label %1548

1359:                                             ; preds = %1355
  call void @_efree(i8* nonnull %1295) #13
  br label %1548

1360:                                             ; preds = %1284, %1282, %1263
  %1361 = getelementptr inbounds %2, %2* %1245, i64 0, i32 0, i32 1
  %1362 = bitcast %4* %1361 to %63*
  %1363 = getelementptr inbounds %63, %63* %1362, i64 0, i32 1
  %1364 = load i8, i8* %1363, align 1
  %1365 = and i8 %1364, 2
  %1366 = icmp eq i8 %1365, 0
  br i1 %1366, label %1367, label %1468

1367:                                             ; preds = %1360
  %1368 = getelementptr inbounds %2, %2* %1245, i64 0, i32 0, i32 0
  %1369 = load i32, i32* %1368, align 8
  %1370 = add i32 %1369, 1
  store i32 %1370, i32* %1368, align 8
  br label %1468

1371:                                             ; preds = %1243
  %1372 = getelementptr inbounds %11, %11* %1228, i64 0, i32 1
  %1373 = load i64, i64* %1372, align 8
  %1374 = call %2* @zend_long_to_str(i64 %1373) #13
  %1375 = getelementptr inbounds %2, %2* %1374, i64 0, i32 3, i64 0
  %1376 = getelementptr inbounds %2, %2* %1374, i64 0, i32 2
  %1377 = load i64, i64* %1376, align 8
  %1378 = load %2*, %2** %1224, align 8
  %1379 = getelementptr inbounds %2, %2* %1378, i64 0, i32 2
  %1380 = load i64, i64* %1379, align 8
  %1381 = add i64 %1377, 1
  %1382 = add i64 %1380, %1381
  %1383 = add i64 %1382, 32
  %1384 = and i64 %1383, -8
  %1385 = call noalias i8* @_emalloc(i64 %1384) #15
  %1386 = bitcast i8* %1385 to %2*
  %1387 = bitcast i8* %1385 to i32*
  store i32 1, i32* %1387, align 8
  %1388 = getelementptr inbounds i8, i8* %1385, i64 4
  %1389 = bitcast i8* %1388 to i32*
  store i32 6, i32* %1389, align 4
  %1390 = getelementptr inbounds i8, i8* %1385, i64 8
  %1391 = bitcast i8* %1390 to i64*
  store i64 0, i64* %1391, align 8
  %1392 = getelementptr inbounds i8, i8* %1385, i64 16
  %1393 = bitcast i8* %1392 to i64*
  store i64 %1382, i64* %1393, align 8
  %1394 = getelementptr inbounds i8, i8* %1385, i64 24
  %1395 = load %2*, %2** %1224, align 8
  %1396 = getelementptr inbounds %2, %2* %1395, i64 0, i32 3, i64 0
  %1397 = getelementptr inbounds %2, %2* %1395, i64 0, i32 2
  %1398 = load i64, i64* %1397, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1394, i8* nonnull align 8 %1396, i64 %1398, i1 false) #13
  %1399 = load i64, i64* %1397, align 8
  %1400 = getelementptr inbounds %2, %2* %1386, i64 0, i32 3, i64 %1399
  store i8 95, i8* %1400, align 1
  %1401 = load i64, i64* %1397, align 8
  %1402 = getelementptr inbounds %2, %2* %1386, i64 0, i32 3, i64 %1401
  %1403 = getelementptr inbounds i8, i8* %1402, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1403, i8* nonnull align 1 %1375, i64 %1381, i1 false) #13
  %1404 = getelementptr inbounds %2, %2* %1374, i64 0, i32 0, i32 1
  %1405 = bitcast %4* %1404 to %63*
  %1406 = getelementptr inbounds %63, %63* %1405, i64 0, i32 1
  %1407 = load i8, i8* %1406, align 1
  %1408 = and i8 %1407, 2
  %1409 = icmp eq i8 %1408, 0
  br i1 %1409, label %1410, label %1421

1410:                                             ; preds = %1371
  %1411 = getelementptr inbounds %2, %2* %1374, i64 0, i32 0, i32 0
  %1412 = load i32, i32* %1411, align 8
  %1413 = add i32 %1412, -1
  store i32 %1413, i32* %1411, align 8
  %1414 = icmp eq i32 %1413, 0
  br i1 %1414, label %1415, label %1421

1415:                                             ; preds = %1410
  %1416 = and i8 %1407, 1
  %1417 = icmp eq i8 %1416, 0
  %1418 = bitcast %2* %1374 to i8*
  br i1 %1417, label %1420, label %1419

1419:                                             ; preds = %1415
  call void @free(i8* %1418) #13
  br label %1421

1420:                                             ; preds = %1415
  call void @_efree(i8* %1418) #13
  br label %1421

1421:                                             ; preds = %1420, %1419, %1410, %1371
  %1422 = load i64, i64* %1393, align 8
  %1423 = icmp eq i64 %1422, 0
  br i1 %1423, label %1454, label %1424

1424:                                             ; preds = %1421
  %1425 = load i8, i8* %1394, align 1
  %1426 = zext i8 %1425 to i32
  %1427 = lshr i32 %1426, 5
  %1428 = zext i32 %1427 to i64
  %1429 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1428
  %1430 = load i32, i32* %1429, align 4
  %1431 = and i32 %1426, 31
  %1432 = shl i32 1, %1431
  %1433 = and i32 %1432, %1430
  %1434 = icmp eq i32 %1433, 0
  br i1 %1434, label %1454, label %1435

1435:                                             ; preds = %1424
  %1436 = icmp ugt i64 %1422, 1
  br i1 %1436, label %1437, label %1468

1437:                                             ; preds = %1435, %1451
  %1438 = phi i64 [ %1452, %1451 ], [ 1, %1435 ]
  %1439 = getelementptr inbounds i8, i8* %1394, i64 %1438
  %1440 = load i8, i8* %1439, align 1
  %1441 = zext i8 %1440 to i32
  %1442 = lshr i32 %1441, 5
  %1443 = or i32 %1442, 8
  %1444 = zext i32 %1443 to i64
  %1445 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = and i32 %1441, 31
  %1448 = shl i32 1, %1447
  %1449 = and i32 %1448, %1446
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1454, label %1451

1451:                                             ; preds = %1437
  %1452 = add nuw i64 %1438, 1
  %1453 = icmp ult i64 %1452, %1422
  br i1 %1453, label %1437, label %1468

1454:                                             ; preds = %1437, %1424, %1421
  %1455 = getelementptr inbounds i8, i8* %1385, i64 5
  %1456 = load i8, i8* %1455, align 1
  %1457 = and i8 %1456, 2
  %1458 = icmp eq i8 %1457, 0
  br i1 %1458, label %1459, label %1548

1459:                                             ; preds = %1454
  %1460 = load i32, i32* %1387, align 8
  %1461 = add i32 %1460, -1
  store i32 %1461, i32* %1387, align 8
  %1462 = icmp eq i32 %1461, 0
  br i1 %1462, label %1463, label %1548

1463:                                             ; preds = %1459
  %1464 = and i8 %1456, 1
  %1465 = icmp eq i8 %1464, 0
  br i1 %1465, label %1467, label %1466

1466:                                             ; preds = %1463
  call void @free(i8* nonnull %1385) #13
  br label %1548

1467:                                             ; preds = %1463
  call void @_efree(i8* nonnull %1385) #13
  br label %1548

1468:                                             ; preds = %1343, %1451, %1435, %1367, %1360, %1327
  %1469 = phi %2* [ %1245, %1367 ], [ %1296, %1327 ], [ %1245, %1360 ], [ %1386, %1435 ], [ %1386, %1451 ], [ %1296, %1343 ]
  %1470 = getelementptr inbounds %2, %2* %1469, i64 0, i32 2
  %1471 = load i64, i64* %1470, align 8
  %1472 = icmp eq i64 %1471, 4
  br i1 %1472, label %1473, label %1480

1473:                                             ; preds = %1468
  %1474 = getelementptr inbounds %2, %2* %1469, i64 0, i32 3, i64 0
  %1475 = call i32 @memcmp(i8* nonnull %1474, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %1476 = icmp eq i32 %1475, 0
  br i1 %1476, label %1477, label %1480

1477:                                             ; preds = %1473
  %1478 = icmp eq i32 %1226, 0
  br i1 %1478, label %1479, label %1528

1479:                                             ; preds = %1477
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %1528

1480:                                             ; preds = %1473, %1468
  %1481 = load i8, i8* %1240, align 8
  %1482 = icmp eq i8 %1481, 10
  br i1 %1482, label %1483, label %1486

1483:                                             ; preds = %1480
  %1484 = bitcast %5* %1238 to %61**
  %1485 = load %61*, %61** %1484, align 8
  br label %1501

1486:                                             ; preds = %1480
  %1487 = call noalias i8* @_emalloc_24() #13
  %1488 = bitcast i8* %1487 to i32*
  store i32 1, i32* %1488, align 8
  %1489 = getelementptr inbounds i8, i8* %1487, i64 4
  %1490 = bitcast i8* %1489 to i32*
  store i32 10, i32* %1490, align 4
  %1491 = getelementptr inbounds i8, i8* %1487, i64 8
  %1492 = getelementptr inbounds %5, %5* %1238, i64 0, i32 0, i32 0
  %1493 = load i64, i64* %1492, align 8
  %1494 = getelementptr inbounds %5, %5* %1238, i64 0, i32 1, i32 0
  %1495 = load i32, i32* %1494, align 8
  %1496 = bitcast i8* %1491 to i64*
  store i64 %1493, i64* %1496, align 8
  %1497 = getelementptr inbounds i8, i8* %1487, i64 16
  %1498 = bitcast i8* %1497 to i32*
  store i32 %1495, i32* %1498, align 8
  %1499 = bitcast %5* %1238 to i8**
  store i8* %1487, i8** %1499, align 8
  store i32 1034, i32* %1494, align 8
  %1500 = bitcast i8* %1487 to %61*
  br label %1501

1501:                                             ; preds = %1486, %1483
  %1502 = phi %61* [ %1485, %1483 ], [ %1500, %1486 ]
  %1503 = getelementptr inbounds %61, %61* %1502, i64 0, i32 0, i32 0
  %1504 = load i32, i32* %1503, align 4
  %1505 = add i32 %1504, 1
  store i32 %1505, i32* %1503, align 4
  %1506 = call %5* @zend_hash_find(%9* %164, %2* nonnull %1469) #13
  %1507 = icmp eq %5* %1506, null
  br i1 %1507, label %1524, label %1508

1508:                                             ; preds = %1501
  %1509 = getelementptr inbounds %5, %5* %1506, i64 0, i32 1
  %1510 = bitcast %7* %1509 to i8*
  %1511 = load i8, i8* %1510, align 8
  %1512 = icmp eq i8 %1511, 15
  br i1 %1512, label %1513, label %1516

1513:                                             ; preds = %1508
  %1514 = bitcast %5* %1506 to %5**
  %1515 = load %5*, %5** %1514, align 8
  br label %1516

1516:                                             ; preds = %1513, %1508
  %1517 = phi %5* [ %1515, %1513 ], [ %1506, %1508 ]
  call void @_zval_ptr_dtor(%5* %1517) #13
  %1518 = getelementptr inbounds %5, %5* %1238, i64 0, i32 0, i32 0
  %1519 = load i64, i64* %1518, align 8
  %1520 = getelementptr inbounds %5, %5* %1238, i64 0, i32 1, i32 0
  %1521 = load i32, i32* %1520, align 8
  %1522 = getelementptr inbounds %5, %5* %1517, i64 0, i32 0, i32 0
  store i64 %1519, i64* %1522, align 8
  %1523 = getelementptr inbounds %5, %5* %1517, i64 0, i32 1, i32 0
  store i32 %1521, i32* %1523, align 8
  br label %1526

1524:                                             ; preds = %1501
  %1525 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %1469, %5* nonnull %1238) #13
  br label %1526

1526:                                             ; preds = %1524, %1516
  %1527 = add nsw i64 %1227, 1
  br label %1528

1528:                                             ; preds = %1526, %1479, %1477
  %1529 = phi i64 [ %1527, %1526 ], [ %1227, %1477 ], [ %1227, %1479 ]
  %1530 = phi i32 [ %1226, %1526 ], [ %1226, %1477 ], [ 1, %1479 ]
  %1531 = getelementptr inbounds %2, %2* %1469, i64 0, i32 0, i32 1
  %1532 = bitcast %4* %1531 to %63*
  %1533 = getelementptr inbounds %63, %63* %1532, i64 0, i32 1
  %1534 = load i8, i8* %1533, align 1
  %1535 = and i8 %1534, 2
  %1536 = icmp eq i8 %1535, 0
  br i1 %1536, label %1537, label %1548

1537:                                             ; preds = %1528
  %1538 = getelementptr inbounds %2, %2* %1469, i64 0, i32 0, i32 0
  %1539 = load i32, i32* %1538, align 8
  %1540 = add i32 %1539, -1
  store i32 %1540, i32* %1538, align 8
  %1541 = icmp eq i32 %1540, 0
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1537
  %1543 = and i8 %1534, 1
  %1544 = icmp eq i8 %1543, 0
  %1545 = bitcast %2* %1469 to i8*
  br i1 %1544, label %1547, label %1546

1546:                                             ; preds = %1542
  call void @free(i8* %1545) #13
  br label %1548

1547:                                             ; preds = %1542
  call void @_efree(i8* %1545) #13
  br label %1548

1548:                                             ; preds = %1547, %1546, %1537, %1528, %1467, %1466, %1459, %1454, %1359, %1358, %1351, %1346, %1237
  %1549 = phi i64 [ %1227, %1237 ], [ %1227, %1346 ], [ %1227, %1351 ], [ %1227, %1358 ], [ %1227, %1359 ], [ %1227, %1454 ], [ %1227, %1459 ], [ %1227, %1466 ], [ %1227, %1467 ], [ %1529, %1528 ], [ %1529, %1537 ], [ %1529, %1546 ], [ %1529, %1547 ]
  %1550 = phi i32 [ %1226, %1237 ], [ %1226, %1346 ], [ %1226, %1351 ], [ %1226, %1358 ], [ %1226, %1359 ], [ %1226, %1454 ], [ %1226, %1459 ], [ %1226, %1466 ], [ %1226, %1467 ], [ %1530, %1528 ], [ %1530, %1537 ], [ %1530, %1546 ], [ %1530, %1547 ]
  %1551 = getelementptr inbounds %11, %11* %1228, i64 1
  %1552 = icmp eq %11* %1551, %1221
  br i1 %1552, label %3283, label %1225

1553:                                             ; preds = %165
  %1554 = bitcast %5* %23 to %9**
  %1555 = load %9*, %9** %1554, align 8
  %1556 = getelementptr inbounds %9, %9* %1555, i64 0, i32 3
  %1557 = load %11*, %11** %1556, align 8
  %1558 = getelementptr inbounds %9, %9* %1555, i64 0, i32 4
  %1559 = load i32, i32* %1558, align 8
  %1560 = zext i32 %1559 to i64
  %1561 = getelementptr inbounds %11, %11* %1557, i64 %1560
  %1562 = icmp eq i32 %1559, 0
  br i1 %1562, label %3283, label %1563

1563:                                             ; preds = %1553, %1702
  %1564 = phi i64 [ %1703, %1702 ], [ 0, %1553 ]
  %1565 = phi %11* [ %1704, %1702 ], [ %1557, %1553 ]
  %1566 = getelementptr inbounds %11, %11* %1565, i64 0, i32 0
  %1567 = getelementptr inbounds %11, %11* %1565, i64 0, i32 0, i32 1
  %1568 = bitcast %7* %1567 to i8*
  %1569 = load i8, i8* %1568, align 8
  %1570 = icmp eq i8 %1569, 15
  br i1 %1570, label %1571, label %1574

1571:                                             ; preds = %1563
  %1572 = bitcast %11* %1565 to %5**
  %1573 = load %5*, %5** %1572, align 8
  br label %1574

1574:                                             ; preds = %1571, %1563
  %1575 = phi %5* [ %1573, %1571 ], [ %1566, %1563 ]
  %1576 = getelementptr inbounds %5, %5* %1575, i64 0, i32 1
  %1577 = bitcast %7* %1576 to i8*
  %1578 = load i8, i8* %1577, align 8
  %1579 = icmp eq i8 %1578, 0
  br i1 %1579, label %1702, label %1580

1580:                                             ; preds = %1574
  %1581 = getelementptr inbounds %11, %11* %1565, i64 0, i32 2
  %1582 = load %2*, %2** %1581, align 8
  %1583 = icmp eq %2* %1582, null
  br i1 %1583, label %1702, label %1584

1584:                                             ; preds = %1580
  %1585 = getelementptr inbounds %2, %2* %1582, i64 0, i32 3, i64 0
  %1586 = getelementptr inbounds %2, %2* %1582, i64 0, i32 2
  %1587 = load i64, i64* %1586, align 8
  %1588 = icmp eq i64 %1587, 0
  br i1 %1588, label %1702, label %1589

1589:                                             ; preds = %1584
  %1590 = load i8, i8* %1585, align 1
  %1591 = zext i8 %1590 to i32
  %1592 = lshr i32 %1591, 5
  %1593 = zext i32 %1592 to i64
  %1594 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1593
  %1595 = load i32, i32* %1594, align 4
  %1596 = and i32 %1591, 31
  %1597 = shl i32 1, %1596
  %1598 = and i32 %1597, %1595
  %1599 = icmp eq i32 %1598, 0
  br i1 %1599, label %1702, label %1600

1600:                                             ; preds = %1589
  %1601 = icmp ugt i64 %1587, 1
  br i1 %1601, label %1602, label %1624

1602:                                             ; preds = %1600, %1616
  %1603 = phi i64 [ %1617, %1616 ], [ 1, %1600 ]
  %1604 = getelementptr inbounds %2, %2* %1582, i64 0, i32 3, i64 %1603
  %1605 = load i8, i8* %1604, align 1
  %1606 = zext i8 %1605 to i32
  %1607 = lshr i32 %1606, 5
  %1608 = or i32 %1607, 8
  %1609 = zext i32 %1608 to i64
  %1610 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1609
  %1611 = load i32, i32* %1610, align 4
  %1612 = and i32 %1606, 31
  %1613 = shl i32 1, %1612
  %1614 = and i32 %1613, %1611
  %1615 = icmp eq i32 %1614, 0
  br i1 %1615, label %1702, label %1616

1616:                                             ; preds = %1602
  %1617 = add nuw i64 %1603, 1
  %1618 = icmp ult i64 %1617, %1587
  br i1 %1618, label %1602, label %1619

1619:                                             ; preds = %1616
  %1620 = icmp eq i64 %1587, 4
  br i1 %1620, label %1621, label %1624

1621:                                             ; preds = %1619
  %1622 = call i32 @memcmp(i8* nonnull %1585, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %1623 = icmp eq i32 %1622, 0
  br i1 %1623, label %1702, label %1624

1624:                                             ; preds = %1621, %1619, %1600
  %1625 = call %5* @zend_hash_find(%9* %164, %2* nonnull %1582) #13
  %1626 = icmp eq %5* %1625, null
  br i1 %1626, label %1674, label %1627

1627:                                             ; preds = %1624
  %1628 = getelementptr inbounds %5, %5* %1625, i64 0, i32 1
  %1629 = bitcast %7* %1628 to i8*
  %1630 = load i8, i8* %1629, align 8
  %1631 = icmp eq i8 %1630, 15
  br i1 %1631, label %1632, label %1702

1632:                                             ; preds = %1627
  %1633 = bitcast %5* %1625 to %5**
  %1634 = load %5*, %5** %1633, align 8
  %1635 = getelementptr inbounds %5, %5* %1634, i64 0, i32 1
  %1636 = bitcast %7* %1635 to i8*
  %1637 = load i8, i8* %1636, align 8
  %1638 = icmp eq i8 %1637, 0
  br i1 %1638, label %1639, label %1702

1639:                                             ; preds = %1632
  %1640 = load i8, i8* %1577, align 8
  %1641 = icmp eq i8 %1640, 10
  br i1 %1641, label %1642, label %1647

1642:                                             ; preds = %1639
  %1643 = bitcast %5* %1575 to %61**
  %1644 = load %61*, %61** %1643, align 8
  %1645 = getelementptr inbounds %5, %5* %1575, i64 0, i32 0, i32 0
  %1646 = getelementptr inbounds %5, %5* %1575, i64 0, i32 1, i32 0
  br label %1662

1647:                                             ; preds = %1639
  %1648 = call noalias i8* @_emalloc_24() #13
  %1649 = bitcast i8* %1648 to i32*
  store i32 1, i32* %1649, align 8
  %1650 = getelementptr inbounds i8, i8* %1648, i64 4
  %1651 = bitcast i8* %1650 to i32*
  store i32 10, i32* %1651, align 4
  %1652 = getelementptr inbounds i8, i8* %1648, i64 8
  %1653 = getelementptr inbounds %5, %5* %1575, i64 0, i32 0, i32 0
  %1654 = load i64, i64* %1653, align 8
  %1655 = getelementptr inbounds %5, %5* %1575, i64 0, i32 1, i32 0
  %1656 = load i32, i32* %1655, align 8
  %1657 = bitcast i8* %1652 to i64*
  store i64 %1654, i64* %1657, align 8
  %1658 = getelementptr inbounds i8, i8* %1648, i64 16
  %1659 = bitcast i8* %1658 to i32*
  store i32 %1656, i32* %1659, align 8
  %1660 = bitcast %5* %1575 to i8**
  store i8* %1648, i8** %1660, align 8
  store i32 1034, i32* %1655, align 8
  %1661 = bitcast i8* %1648 to %61*
  br label %1662

1662:                                             ; preds = %1647, %1642
  %1663 = phi i32* [ %1646, %1642 ], [ %1655, %1647 ]
  %1664 = phi i64* [ %1645, %1642 ], [ %1653, %1647 ]
  %1665 = phi %61* [ %1644, %1642 ], [ %1661, %1647 ]
  %1666 = getelementptr inbounds %61, %61* %1665, i64 0, i32 0, i32 0
  %1667 = load i32, i32* %1666, align 4
  %1668 = add i32 %1667, 1
  store i32 %1668, i32* %1666, align 4
  %1669 = load i64, i64* %1664, align 8
  %1670 = load i32, i32* %1663, align 8
  %1671 = getelementptr inbounds %5, %5* %1634, i64 0, i32 0, i32 0
  store i64 %1669, i64* %1671, align 8
  %1672 = getelementptr inbounds %5, %5* %1634, i64 0, i32 1, i32 0
  store i32 %1670, i32* %1672, align 8
  %1673 = add nsw i64 %1564, 1
  br label %1702

1674:                                             ; preds = %1624
  %1675 = load i8, i8* %1577, align 8
  %1676 = icmp eq i8 %1675, 10
  br i1 %1676, label %1677, label %1680

1677:                                             ; preds = %1674
  %1678 = bitcast %5* %1575 to %61**
  %1679 = load %61*, %61** %1678, align 8
  br label %1695

1680:                                             ; preds = %1674
  %1681 = call noalias i8* @_emalloc_24() #13
  %1682 = bitcast i8* %1681 to i32*
  store i32 1, i32* %1682, align 8
  %1683 = getelementptr inbounds i8, i8* %1681, i64 4
  %1684 = bitcast i8* %1683 to i32*
  store i32 10, i32* %1684, align 4
  %1685 = getelementptr inbounds i8, i8* %1681, i64 8
  %1686 = getelementptr inbounds %5, %5* %1575, i64 0, i32 0, i32 0
  %1687 = load i64, i64* %1686, align 8
  %1688 = getelementptr inbounds %5, %5* %1575, i64 0, i32 1, i32 0
  %1689 = load i32, i32* %1688, align 8
  %1690 = bitcast i8* %1685 to i64*
  store i64 %1687, i64* %1690, align 8
  %1691 = getelementptr inbounds i8, i8* %1681, i64 16
  %1692 = bitcast i8* %1691 to i32*
  store i32 %1689, i32* %1692, align 8
  %1693 = bitcast %5* %1575 to i8**
  store i8* %1681, i8** %1693, align 8
  store i32 1034, i32* %1688, align 8
  %1694 = bitcast i8* %1681 to %61*
  br label %1695

1695:                                             ; preds = %1680, %1677
  %1696 = phi %61* [ %1679, %1677 ], [ %1694, %1680 ]
  %1697 = getelementptr inbounds %61, %61* %1696, i64 0, i32 0, i32 0
  %1698 = load i32, i32* %1697, align 4
  %1699 = add i32 %1698, 1
  store i32 %1699, i32* %1697, align 4
  %1700 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %1582, %5* nonnull %1575) #13
  %1701 = add nsw i64 %1564, 1
  br label %1702

1702:                                             ; preds = %1602, %1695, %1662, %1632, %1627, %1621, %1589, %1584, %1580, %1574
  %1703 = phi i64 [ %1564, %1574 ], [ %1564, %1580 ], [ %1564, %1621 ], [ %1673, %1662 ], [ %1564, %1632 ], [ %1564, %1627 ], [ %1701, %1695 ], [ %1564, %1584 ], [ %1564, %1589 ], [ %1564, %1602 ]
  %1704 = getelementptr inbounds %11, %11* %1565, i64 1
  %1705 = icmp eq %11* %1704, %1561
  br i1 %1705, label %3283, label %1563

1706:                                             ; preds = %163
  %1707 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1707) #13
  %1708 = bitcast %5* %23 to %61**
  %1709 = load %61*, %61** %1708, align 8
  %1710 = getelementptr inbounds %5, %5* %23, i64 0, i32 1, i32 0
  %1711 = load i32, i32* %1710, align 8
  %1712 = bitcast %5* %4 to %61**
  store %61* %1709, %61** %1712, align 8
  %1713 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 %1711, i32* %1713, align 8
  %1714 = and i32 %1711, 1024
  %1715 = icmp eq i32 %1714, 0
  br i1 %1715, label %1720, label %1716

1716:                                             ; preds = %1706
  %1717 = getelementptr inbounds %61, %61* %1709, i64 0, i32 0, i32 0
  %1718 = load i32, i32* %1717, align 4
  %1719 = add i32 %1718, 1
  store i32 %1719, i32* %1717, align 4
  br label %1720

1720:                                             ; preds = %1706, %1716
  %1721 = load i64, i64* %3, align 8
  switch i64 %1721, label %3136 [
    i64 6, label %1722
    i64 0, label %1862
    i64 5, label %2025
    i64 2, label %2251
    i64 3, label %2544
    i64 4, label %2788
  ]

1722:                                             ; preds = %1720
  %1723 = bitcast %5* %4 to %9**
  %1724 = load %9*, %9** %1723, align 8
  %1725 = getelementptr inbounds %9, %9* %1724, i64 0, i32 3
  %1726 = load %11*, %11** %1725, align 8
  %1727 = getelementptr inbounds %9, %9* %1724, i64 0, i32 4
  %1728 = load i32, i32* %1727, align 8
  %1729 = zext i32 %1728 to i64
  %1730 = getelementptr inbounds %11, %11* %1726, i64 %1729
  %1731 = icmp eq i32 %1728, 0
  br i1 %1731, label %3281, label %1732

1732:                                             ; preds = %1722, %1857
  %1733 = phi i32 [ %1859, %1857 ], [ 0, %1722 ]
  %1734 = phi i64 [ %1858, %1857 ], [ 0, %1722 ]
  %1735 = phi %11* [ %1860, %1857 ], [ %1726, %1722 ]
  %1736 = getelementptr inbounds %11, %11* %1735, i64 0, i32 0
  %1737 = getelementptr inbounds %11, %11* %1735, i64 0, i32 0, i32 1
  %1738 = bitcast %7* %1737 to i8*
  %1739 = load i8, i8* %1738, align 8
  %1740 = icmp eq i8 %1739, 15
  br i1 %1740, label %1741, label %1744

1741:                                             ; preds = %1732
  %1742 = bitcast %11* %1735 to %5**
  %1743 = load %5*, %5** %1742, align 8
  br label %1744

1744:                                             ; preds = %1741, %1732
  %1745 = phi %5* [ %1743, %1741 ], [ %1736, %1732 ]
  %1746 = getelementptr inbounds %5, %5* %1745, i64 0, i32 1
  %1747 = bitcast %7* %1746 to i8*
  %1748 = load i8, i8* %1747, align 8
  %1749 = icmp eq i8 %1748, 0
  br i1 %1749, label %1857, label %1750

1750:                                             ; preds = %1744
  %1751 = getelementptr inbounds %11, %11* %1735, i64 0, i32 2
  %1752 = load %2*, %2** %1751, align 8
  %1753 = icmp eq %2* %1752, null
  br i1 %1753, label %1857, label %1754

1754:                                             ; preds = %1750
  %1755 = call %5* @zend_hash_find(%9* %164, %2* nonnull %1752) #13
  %1756 = icmp eq %5* %1755, null
  br i1 %1756, label %1857, label %1757

1757:                                             ; preds = %1754
  %1758 = getelementptr inbounds %5, %5* %1755, i64 0, i32 1
  %1759 = bitcast %7* %1758 to i8*
  %1760 = load i8, i8* %1759, align 8
  %1761 = icmp eq i8 %1760, 15
  br i1 %1761, label %1762, label %1769

1762:                                             ; preds = %1757
  %1763 = bitcast %5* %1755 to %5**
  %1764 = load %5*, %5** %1763, align 8
  %1765 = getelementptr inbounds %5, %5* %1764, i64 0, i32 1
  %1766 = bitcast %7* %1765 to i8*
  %1767 = load i8, i8* %1766, align 8
  %1768 = icmp eq i8 %1767, 0
  br i1 %1768, label %1857, label %1769

1769:                                             ; preds = %1762, %1757
  %1770 = phi i8 [ %1767, %1762 ], [ %1760, %1757 ]
  %1771 = phi %5* [ %1764, %1762 ], [ %1755, %1757 ]
  %1772 = getelementptr inbounds %2, %2* %1752, i64 0, i32 3, i64 0
  %1773 = getelementptr inbounds %2, %2* %1752, i64 0, i32 2
  %1774 = load i64, i64* %1773, align 8
  %1775 = icmp eq i64 %1774, 0
  br i1 %1775, label %1857, label %1776

1776:                                             ; preds = %1769
  %1777 = load i8, i8* %1772, align 1
  %1778 = zext i8 %1777 to i32
  %1779 = lshr i32 %1778, 5
  %1780 = zext i32 %1779 to i64
  %1781 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1780
  %1782 = load i32, i32* %1781, align 4
  %1783 = and i32 %1778, 31
  %1784 = shl i32 1, %1783
  %1785 = and i32 %1784, %1782
  %1786 = icmp eq i32 %1785, 0
  br i1 %1786, label %1857, label %1787

1787:                                             ; preds = %1776
  %1788 = icmp ugt i64 %1774, 1
  br i1 %1788, label %1789, label %1816

1789:                                             ; preds = %1787, %1803
  %1790 = phi i64 [ %1804, %1803 ], [ 1, %1787 ]
  %1791 = getelementptr inbounds %2, %2* %1752, i64 0, i32 3, i64 %1790
  %1792 = load i8, i8* %1791, align 1
  %1793 = zext i8 %1792 to i32
  %1794 = lshr i32 %1793, 5
  %1795 = or i32 %1794, 8
  %1796 = zext i32 %1795 to i64
  %1797 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1796
  %1798 = load i32, i32* %1797, align 4
  %1799 = and i32 %1793, 31
  %1800 = shl i32 1, %1799
  %1801 = and i32 %1800, %1798
  %1802 = icmp eq i32 %1801, 0
  br i1 %1802, label %1857, label %1803

1803:                                             ; preds = %1789
  %1804 = add nuw i64 %1790, 1
  %1805 = icmp ult i64 %1804, %1774
  br i1 %1805, label %1789, label %1806

1806:                                             ; preds = %1803
  switch i64 %1774, label %1816 [
    i64 7, label %1807
    i64 4, label %1810
  ]

1807:                                             ; preds = %1806
  %1808 = call i32 @memcmp(i8* nonnull %1772, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @60, i64 0, i64 0), i64 7) #14
  %1809 = icmp eq i32 %1808, 0
  br i1 %1809, label %1857, label %1816

1810:                                             ; preds = %1806
  %1811 = call i32 @memcmp(i8* nonnull %1772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %1812 = icmp eq i32 %1811, 0
  br i1 %1812, label %1813, label %1816

1813:                                             ; preds = %1810
  %1814 = icmp eq i32 %1733, 0
  br i1 %1814, label %1815, label %1857

1815:                                             ; preds = %1813
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %1857

1816:                                             ; preds = %1810, %1807, %1806, %1787
  %1817 = load i8, i8* %1747, align 8
  %1818 = icmp eq i8 %1817, 10
  br i1 %1818, label %1819, label %1824

1819:                                             ; preds = %1816
  %1820 = bitcast %5* %1745 to %59**
  %1821 = load %59*, %59** %1820, align 8
  %1822 = getelementptr inbounds %59, %59* %1821, i64 0, i32 1
  %1823 = getelementptr inbounds %59, %59* %1821, i64 0, i32 1, i32 1
  br label %1824

1824:                                             ; preds = %1819, %1816
  %1825 = phi %7* [ %1823, %1819 ], [ %1746, %1816 ]
  %1826 = phi %5* [ %1822, %1819 ], [ %1745, %1816 ]
  %1827 = bitcast %7* %1825 to %60*
  %1828 = getelementptr inbounds %60, %60* %1827, i64 0, i32 1
  %1829 = load i8, i8* %1828, align 1
  %1830 = and i8 %1829, 4
  %1831 = icmp eq i8 %1830, 0
  br i1 %1831, label %1841, label %1832

1832:                                             ; preds = %1824
  %1833 = bitcast %5* %1826 to %61**
  %1834 = load %61*, %61** %1833, align 8
  %1835 = getelementptr inbounds %61, %61* %1834, i64 0, i32 0, i32 0
  %1836 = load i32, i32* %1835, align 4
  %1837 = add i32 %1836, 1
  store i32 %1837, i32* %1835, align 4
  %1838 = getelementptr inbounds %5, %5* %1771, i64 0, i32 1
  %1839 = bitcast %7* %1838 to i8*
  %1840 = load i8, i8* %1839, align 8
  br label %1841

1841:                                             ; preds = %1832, %1824
  %1842 = phi i8 [ %1840, %1832 ], [ %1770, %1824 ]
  %1843 = icmp eq i8 %1842, 10
  br i1 %1843, label %1844, label %1848

1844:                                             ; preds = %1841
  %1845 = bitcast %5* %1771 to %59**
  %1846 = load %59*, %59** %1845, align 8
  %1847 = getelementptr inbounds %59, %59* %1846, i64 0, i32 1
  br label %1848

1848:                                             ; preds = %1844, %1841
  %1849 = phi %5* [ %1847, %1844 ], [ %1771, %1841 ]
  call void @_zval_ptr_dtor(%5* nonnull %1849) #13
  %1850 = getelementptr inbounds %5, %5* %1826, i64 0, i32 0, i32 0
  %1851 = load i64, i64* %1850, align 8
  %1852 = getelementptr inbounds %7, %7* %1825, i64 0, i32 0
  %1853 = load i32, i32* %1852, align 8
  %1854 = getelementptr inbounds %5, %5* %1849, i64 0, i32 0, i32 0
  store i64 %1851, i64* %1854, align 8
  %1855 = getelementptr inbounds %5, %5* %1849, i64 0, i32 1, i32 0
  store i32 %1853, i32* %1855, align 8
  %1856 = add nsw i64 %1734, 1
  br label %1857

1857:                                             ; preds = %1789, %1848, %1815, %1813, %1807, %1776, %1769, %1762, %1754, %1750, %1744
  %1858 = phi i64 [ %1734, %1744 ], [ %1734, %1750 ], [ %1734, %1762 ], [ %1734, %1807 ], [ %1734, %1813 ], [ %1734, %1815 ], [ %1856, %1848 ], [ %1734, %1754 ], [ %1734, %1769 ], [ %1734, %1776 ], [ %1734, %1789 ]
  %1859 = phi i32 [ %1733, %1744 ], [ %1733, %1750 ], [ %1733, %1762 ], [ %1733, %1807 ], [ %1733, %1813 ], [ 1, %1815 ], [ %1733, %1848 ], [ %1733, %1754 ], [ %1733, %1769 ], [ %1733, %1776 ], [ %1733, %1789 ]
  %1860 = getelementptr inbounds %11, %11* %1735, i64 1
  %1861 = icmp eq %11* %1860, %1730
  br i1 %1861, label %3281, label %1732

1862:                                             ; preds = %1720
  %1863 = bitcast %5* %4 to %9**
  %1864 = load %9*, %9** %1863, align 8
  %1865 = getelementptr inbounds %9, %9* %1864, i64 0, i32 3
  %1866 = load %11*, %11** %1865, align 8
  %1867 = getelementptr inbounds %9, %9* %1864, i64 0, i32 4
  %1868 = load i32, i32* %1867, align 8
  %1869 = zext i32 %1868 to i64
  %1870 = getelementptr inbounds %11, %11* %1866, i64 %1869
  %1871 = icmp eq i32 %1868, 0
  br i1 %1871, label %3281, label %1872

1872:                                             ; preds = %1862, %2020
  %1873 = phi i32 [ %2022, %2020 ], [ 0, %1862 ]
  %1874 = phi i64 [ %2021, %2020 ], [ 0, %1862 ]
  %1875 = phi %11* [ %2023, %2020 ], [ %1866, %1862 ]
  %1876 = getelementptr inbounds %11, %11* %1875, i64 0, i32 0
  %1877 = getelementptr inbounds %11, %11* %1875, i64 0, i32 0, i32 1
  %1878 = bitcast %7* %1877 to i8*
  %1879 = load i8, i8* %1878, align 8
  %1880 = icmp eq i8 %1879, 15
  br i1 %1880, label %1881, label %1884

1881:                                             ; preds = %1872
  %1882 = bitcast %11* %1875 to %5**
  %1883 = load %5*, %5** %1882, align 8
  br label %1884

1884:                                             ; preds = %1881, %1872
  %1885 = phi %5* [ %1883, %1881 ], [ %1876, %1872 ]
  %1886 = getelementptr inbounds %5, %5* %1885, i64 0, i32 1
  %1887 = bitcast %7* %1886 to i8*
  %1888 = load i8, i8* %1887, align 8
  %1889 = icmp eq i8 %1888, 0
  br i1 %1889, label %2020, label %1890

1890:                                             ; preds = %1884
  %1891 = getelementptr inbounds %11, %11* %1875, i64 0, i32 2
  %1892 = load %2*, %2** %1891, align 8
  %1893 = icmp eq %2* %1892, null
  br i1 %1893, label %2020, label %1894

1894:                                             ; preds = %1890
  %1895 = getelementptr inbounds %2, %2* %1892, i64 0, i32 3, i64 0
  %1896 = getelementptr inbounds %2, %2* %1892, i64 0, i32 2
  %1897 = load i64, i64* %1896, align 8
  %1898 = icmp eq i64 %1897, 0
  br i1 %1898, label %2020, label %1899

1899:                                             ; preds = %1894
  %1900 = load i8, i8* %1895, align 1
  %1901 = zext i8 %1900 to i32
  %1902 = lshr i32 %1901, 5
  %1903 = zext i32 %1902 to i64
  %1904 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1903
  %1905 = load i32, i32* %1904, align 4
  %1906 = and i32 %1901, 31
  %1907 = shl i32 1, %1906
  %1908 = and i32 %1907, %1905
  %1909 = icmp eq i32 %1908, 0
  br i1 %1909, label %2020, label %1910

1910:                                             ; preds = %1899
  %1911 = icmp ugt i64 %1897, 1
  br i1 %1911, label %1912, label %1937

1912:                                             ; preds = %1910, %1926
  %1913 = phi i64 [ %1927, %1926 ], [ 1, %1910 ]
  %1914 = getelementptr inbounds %2, %2* %1892, i64 0, i32 3, i64 %1913
  %1915 = load i8, i8* %1914, align 1
  %1916 = zext i8 %1915 to i32
  %1917 = lshr i32 %1916, 5
  %1918 = or i32 %1917, 8
  %1919 = zext i32 %1918 to i64
  %1920 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %1919
  %1921 = load i32, i32* %1920, align 4
  %1922 = and i32 %1916, 31
  %1923 = shl i32 1, %1922
  %1924 = and i32 %1923, %1921
  %1925 = icmp eq i32 %1924, 0
  br i1 %1925, label %2020, label %1926

1926:                                             ; preds = %1912
  %1927 = add nuw i64 %1913, 1
  %1928 = icmp ult i64 %1927, %1897
  br i1 %1928, label %1912, label %1929

1929:                                             ; preds = %1926
  %1930 = icmp eq i64 %1897, 4
  br i1 %1930, label %1931, label %1937

1931:                                             ; preds = %1929
  %1932 = call i32 @memcmp(i8* nonnull %1895, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %1933 = icmp eq i32 %1932, 0
  br i1 %1933, label %1934, label %1937

1934:                                             ; preds = %1931
  %1935 = icmp eq i32 %1873, 0
  br i1 %1935, label %1936, label %2020

1936:                                             ; preds = %1934
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %2020

1937:                                             ; preds = %1931, %1929, %1910
  %1938 = call %5* @zend_hash_find(%9* %164, %2* nonnull %1892) #13
  %1939 = icmp eq %5* %1938, null
  br i1 %1939, label %1994, label %1940

1940:                                             ; preds = %1937
  %1941 = getelementptr inbounds %5, %5* %1938, i64 0, i32 1
  %1942 = bitcast %7* %1941 to i8*
  %1943 = load i8, i8* %1942, align 8
  %1944 = icmp eq i8 %1943, 15
  br i1 %1944, label %1945, label %1948

1945:                                             ; preds = %1940
  %1946 = bitcast %5* %1938 to %5**
  %1947 = load %5*, %5** %1946, align 8
  br label %1948

1948:                                             ; preds = %1945, %1940
  %1949 = phi %5* [ %1947, %1945 ], [ %1938, %1940 ]
  %1950 = load i64, i64* %1896, align 8
  %1951 = icmp eq i64 %1950, 7
  br i1 %1951, label %1952, label %1955

1952:                                             ; preds = %1948
  %1953 = call i32 @memcmp(i8* nonnull %1895, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @60, i64 0, i64 0), i64 7) #14
  %1954 = icmp eq i32 %1953, 0
  br i1 %1954, label %2020, label %1955

1955:                                             ; preds = %1952, %1948
  %1956 = load i8, i8* %1887, align 8
  %1957 = icmp eq i8 %1956, 10
  br i1 %1957, label %1958, label %1963

1958:                                             ; preds = %1955
  %1959 = bitcast %5* %1885 to %59**
  %1960 = load %59*, %59** %1959, align 8
  %1961 = getelementptr inbounds %59, %59* %1960, i64 0, i32 1
  %1962 = getelementptr inbounds %59, %59* %1960, i64 0, i32 1, i32 1
  br label %1963

1963:                                             ; preds = %1958, %1955
  %1964 = phi %7* [ %1962, %1958 ], [ %1886, %1955 ]
  %1965 = phi %5* [ %1961, %1958 ], [ %1885, %1955 ]
  %1966 = bitcast %7* %1964 to %60*
  %1967 = getelementptr inbounds %60, %60* %1966, i64 0, i32 1
  %1968 = load i8, i8* %1967, align 1
  %1969 = and i8 %1968, 4
  %1970 = icmp eq i8 %1969, 0
  br i1 %1970, label %1977, label %1971

1971:                                             ; preds = %1963
  %1972 = bitcast %5* %1965 to %61**
  %1973 = load %61*, %61** %1972, align 8
  %1974 = getelementptr inbounds %61, %61* %1973, i64 0, i32 0, i32 0
  %1975 = load i32, i32* %1974, align 4
  %1976 = add i32 %1975, 1
  store i32 %1976, i32* %1974, align 4
  br label %1977

1977:                                             ; preds = %1971, %1963
  %1978 = getelementptr inbounds %5, %5* %1949, i64 0, i32 1
  %1979 = bitcast %7* %1978 to i8*
  %1980 = load i8, i8* %1979, align 8
  %1981 = icmp eq i8 %1980, 10
  br i1 %1981, label %1982, label %1986

1982:                                             ; preds = %1977
  %1983 = bitcast %5* %1949 to %59**
  %1984 = load %59*, %59** %1983, align 8
  %1985 = getelementptr inbounds %59, %59* %1984, i64 0, i32 1
  br label %1986

1986:                                             ; preds = %1982, %1977
  %1987 = phi %5* [ %1985, %1982 ], [ %1949, %1977 ]
  call void @_zval_ptr_dtor(%5* nonnull %1987) #13
  %1988 = getelementptr inbounds %5, %5* %1965, i64 0, i32 0, i32 0
  %1989 = load i64, i64* %1988, align 8
  %1990 = getelementptr inbounds %7, %7* %1964, i64 0, i32 0
  %1991 = load i32, i32* %1990, align 8
  %1992 = getelementptr inbounds %5, %5* %1987, i64 0, i32 0, i32 0
  store i64 %1989, i64* %1992, align 8
  %1993 = getelementptr inbounds %5, %5* %1987, i64 0, i32 1, i32 0
  store i32 %1991, i32* %1993, align 8
  br label %2018

1994:                                             ; preds = %1937
  %1995 = load i8, i8* %1887, align 8
  %1996 = icmp eq i8 %1995, 10
  br i1 %1996, label %1997, label %2002

1997:                                             ; preds = %1994
  %1998 = bitcast %5* %1885 to %59**
  %1999 = load %59*, %59** %1998, align 8
  %2000 = getelementptr inbounds %59, %59* %1999, i64 0, i32 1
  %2001 = getelementptr inbounds %59, %59* %1999, i64 0, i32 1, i32 1
  br label %2002

2002:                                             ; preds = %1997, %1994
  %2003 = phi %7* [ %2001, %1997 ], [ %1886, %1994 ]
  %2004 = phi %5* [ %2000, %1997 ], [ %1885, %1994 ]
  %2005 = bitcast %7* %2003 to %60*
  %2006 = getelementptr inbounds %60, %60* %2005, i64 0, i32 1
  %2007 = load i8, i8* %2006, align 1
  %2008 = and i8 %2007, 4
  %2009 = icmp eq i8 %2008, 0
  br i1 %2009, label %2016, label %2010

2010:                                             ; preds = %2002
  %2011 = bitcast %5* %2004 to %61**
  %2012 = load %61*, %61** %2011, align 8
  %2013 = getelementptr inbounds %61, %61* %2012, i64 0, i32 0, i32 0
  %2014 = load i32, i32* %2013, align 4
  %2015 = add i32 %2014, 1
  store i32 %2015, i32* %2013, align 4
  br label %2016

2016:                                             ; preds = %2010, %2002
  %2017 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %1892, %5* nonnull %2004) #13
  br label %2018

2018:                                             ; preds = %2016, %1986
  %2019 = add nsw i64 %1874, 1
  br label %2020

2020:                                             ; preds = %1912, %2018, %1952, %1936, %1934, %1899, %1894, %1890, %1884
  %2021 = phi i64 [ %2019, %2018 ], [ %1874, %1884 ], [ %1874, %1890 ], [ %1874, %1934 ], [ %1874, %1936 ], [ %1874, %1952 ], [ %1874, %1894 ], [ %1874, %1899 ], [ %1874, %1912 ]
  %2022 = phi i32 [ %1873, %2018 ], [ %1873, %1884 ], [ %1873, %1890 ], [ %1873, %1934 ], [ 1, %1936 ], [ %1873, %1952 ], [ %1873, %1894 ], [ %1873, %1899 ], [ %1873, %1912 ]
  %2023 = getelementptr inbounds %11, %11* %1875, i64 1
  %2024 = icmp eq %11* %2023, %1870
  br i1 %2024, label %3281, label %1872

2025:                                             ; preds = %1720
  %2026 = bitcast %5* %4 to %9**
  %2027 = load %9*, %9** %2026, align 8
  %2028 = getelementptr inbounds %9, %9* %2027, i64 0, i32 3
  %2029 = load %11*, %11** %2028, align 8
  %2030 = getelementptr inbounds %9, %9* %2027, i64 0, i32 4
  %2031 = load i32, i32* %2030, align 8
  %2032 = zext i32 %2031 to i64
  %2033 = getelementptr inbounds %11, %11* %2029, i64 %2032
  %2034 = icmp eq i32 %2031, 0
  br i1 %2034, label %3281, label %2035

2035:                                             ; preds = %2025
  %2036 = bitcast %5* %54 to %2**
  br label %2037

2037:                                             ; preds = %2246, %2035
  %2038 = phi i32 [ 0, %2035 ], [ %2248, %2246 ]
  %2039 = phi i64 [ 0, %2035 ], [ %2247, %2246 ]
  %2040 = phi %11* [ %2029, %2035 ], [ %2249, %2246 ]
  %2041 = getelementptr inbounds %11, %11* %2040, i64 0, i32 0
  %2042 = getelementptr inbounds %11, %11* %2040, i64 0, i32 0, i32 1
  %2043 = bitcast %7* %2042 to i8*
  %2044 = load i8, i8* %2043, align 8
  %2045 = icmp eq i8 %2044, 15
  br i1 %2045, label %2046, label %2049

2046:                                             ; preds = %2037
  %2047 = bitcast %11* %2040 to %5**
  %2048 = load %5*, %5** %2047, align 8
  br label %2049

2049:                                             ; preds = %2046, %2037
  %2050 = phi %5* [ %2048, %2046 ], [ %2041, %2037 ]
  %2051 = getelementptr inbounds %5, %5* %2050, i64 0, i32 1
  %2052 = bitcast %7* %2051 to i8*
  %2053 = load i8, i8* %2052, align 8
  %2054 = icmp eq i8 %2053, 0
  br i1 %2054, label %2246, label %2055

2055:                                             ; preds = %2049
  %2056 = getelementptr inbounds %11, %11* %2040, i64 0, i32 2
  %2057 = load %2*, %2** %2056, align 8
  %2058 = icmp eq %2* %2057, null
  br i1 %2058, label %2246, label %2059

2059:                                             ; preds = %2055
  %2060 = call %5* @zend_hash_find(%9* %164, %2* nonnull %2057) #13
  %2061 = icmp eq %5* %2060, null
  br i1 %2061, label %2246, label %2062

2062:                                             ; preds = %2059
  %2063 = getelementptr inbounds %5, %5* %2060, i64 0, i32 1
  %2064 = bitcast %7* %2063 to i8*
  %2065 = load i8, i8* %2064, align 8
  %2066 = icmp eq i8 %2065, 15
  br i1 %2066, label %2067, label %2104

2067:                                             ; preds = %2062
  %2068 = bitcast %5* %2060 to %5**
  %2069 = load %5*, %5** %2068, align 8
  %2070 = getelementptr inbounds %5, %5* %2069, i64 0, i32 1
  %2071 = bitcast %7* %2070 to i8*
  %2072 = load i8, i8* %2071, align 8
  %2073 = icmp eq i8 %2072, 0
  br i1 %2073, label %2074, label %2104

2074:                                             ; preds = %2067
  %2075 = load i8, i8* %2052, align 8
  %2076 = icmp eq i8 %2075, 10
  br i1 %2076, label %2077, label %2082

2077:                                             ; preds = %2074
  %2078 = bitcast %5* %2050 to %59**
  %2079 = load %59*, %59** %2078, align 8
  %2080 = getelementptr inbounds %59, %59* %2079, i64 0, i32 1
  %2081 = getelementptr inbounds %59, %59* %2079, i64 0, i32 1, i32 1
  br label %2082

2082:                                             ; preds = %2077, %2074
  %2083 = phi %7* [ %2081, %2077 ], [ %2051, %2074 ]
  %2084 = phi %5* [ %2080, %2077 ], [ %2050, %2074 ]
  %2085 = bitcast %7* %2083 to %60*
  %2086 = getelementptr inbounds %60, %60* %2085, i64 0, i32 1
  %2087 = load i8, i8* %2086, align 1
  %2088 = and i8 %2087, 4
  %2089 = icmp eq i8 %2088, 0
  br i1 %2089, label %2096, label %2090

2090:                                             ; preds = %2082
  %2091 = bitcast %5* %2084 to %61**
  %2092 = load %61*, %61** %2091, align 8
  %2093 = getelementptr inbounds %61, %61* %2092, i64 0, i32 0, i32 0
  %2094 = load i32, i32* %2093, align 4
  %2095 = add i32 %2094, 1
  store i32 %2095, i32* %2093, align 4
  br label %2096

2096:                                             ; preds = %2090, %2082
  %2097 = getelementptr inbounds %5, %5* %2084, i64 0, i32 0, i32 0
  %2098 = load i64, i64* %2097, align 8
  %2099 = getelementptr inbounds %7, %7* %2083, i64 0, i32 0
  %2100 = load i32, i32* %2099, align 8
  %2101 = getelementptr inbounds %5, %5* %2069, i64 0, i32 0, i32 0
  store i64 %2098, i64* %2101, align 8
  %2102 = getelementptr inbounds %5, %5* %2069, i64 0, i32 1, i32 0
  store i32 %2100, i32* %2102, align 8
  %2103 = add nsw i64 %2039, 1
  br label %2246

2104:                                             ; preds = %2067, %2062
  %2105 = getelementptr inbounds %2, %2* %2057, i64 0, i32 3, i64 0
  %2106 = getelementptr inbounds %2, %2* %2057, i64 0, i32 2
  %2107 = load i64, i64* %2106, align 8
  %2108 = load %2*, %2** %2036, align 8
  %2109 = getelementptr inbounds %2, %2* %2108, i64 0, i32 2
  %2110 = load i64, i64* %2109, align 8
  %2111 = add i64 %2107, 1
  %2112 = add i64 %2110, %2111
  %2113 = add i64 %2112, 32
  %2114 = and i64 %2113, -8
  %2115 = call noalias i8* @_emalloc(i64 %2114) #15
  %2116 = bitcast i8* %2115 to i32*
  store i32 1, i32* %2116, align 8
  %2117 = getelementptr inbounds i8, i8* %2115, i64 4
  %2118 = bitcast i8* %2117 to i32*
  store i32 6, i32* %2118, align 4
  %2119 = getelementptr inbounds i8, i8* %2115, i64 8
  %2120 = bitcast i8* %2119 to i64*
  store i64 0, i64* %2120, align 8
  %2121 = getelementptr inbounds i8, i8* %2115, i64 16
  %2122 = bitcast i8* %2121 to i64*
  store i64 %2112, i64* %2122, align 8
  %2123 = getelementptr inbounds i8, i8* %2115, i64 24
  %2124 = load %2*, %2** %2036, align 8
  %2125 = getelementptr inbounds %2, %2* %2124, i64 0, i32 3, i64 0
  %2126 = getelementptr inbounds %2, %2* %2124, i64 0, i32 2
  %2127 = load i64, i64* %2126, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2123, i8* nonnull align 8 %2125, i64 %2127, i1 false) #13
  %2128 = bitcast i8* %2115 to %2*
  %2129 = load i64, i64* %2126, align 8
  %2130 = getelementptr inbounds %2, %2* %2128, i64 0, i32 3, i64 %2129
  store i8 95, i8* %2130, align 1
  %2131 = load i64, i64* %2126, align 8
  %2132 = getelementptr inbounds %2, %2* %2128, i64 0, i32 3, i64 %2131
  %2133 = getelementptr inbounds i8, i8* %2132, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2133, i8* nonnull align 1 %2105, i64 %2111, i1 false) #13
  %2134 = load i64, i64* %2122, align 8
  %2135 = icmp eq i64 %2134, 0
  br i1 %2135, label %2230, label %2136

2136:                                             ; preds = %2104
  %2137 = load i8, i8* %2123, align 1
  %2138 = zext i8 %2137 to i32
  %2139 = lshr i32 %2138, 5
  %2140 = zext i32 %2139 to i64
  %2141 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2140
  %2142 = load i32, i32* %2141, align 4
  %2143 = and i32 %2138, 31
  %2144 = shl i32 1, %2143
  %2145 = and i32 %2144, %2142
  %2146 = icmp eq i32 %2145, 0
  br i1 %2146, label %2230, label %2147

2147:                                             ; preds = %2136
  %2148 = icmp ugt i64 %2134, 1
  br i1 %2148, label %2149, label %2174

2149:                                             ; preds = %2147, %2163
  %2150 = phi i64 [ %2164, %2163 ], [ 1, %2147 ]
  %2151 = getelementptr inbounds i8, i8* %2123, i64 %2150
  %2152 = load i8, i8* %2151, align 1
  %2153 = zext i8 %2152 to i32
  %2154 = lshr i32 %2153, 5
  %2155 = or i32 %2154, 8
  %2156 = zext i32 %2155 to i64
  %2157 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2156
  %2158 = load i32, i32* %2157, align 4
  %2159 = and i32 %2153, 31
  %2160 = shl i32 1, %2159
  %2161 = and i32 %2160, %2158
  %2162 = icmp eq i32 %2161, 0
  br i1 %2162, label %2230, label %2163

2163:                                             ; preds = %2149
  %2164 = add nuw i64 %2150, 1
  %2165 = icmp ult i64 %2164, %2134
  br i1 %2165, label %2149, label %2166

2166:                                             ; preds = %2163
  %2167 = icmp eq i64 %2134, 4
  br i1 %2167, label %2168, label %2174

2168:                                             ; preds = %2166
  %2169 = call i32 @memcmp(i8* nonnull %2123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %2170 = icmp eq i32 %2169, 0
  br i1 %2170, label %2171, label %2174

2171:                                             ; preds = %2168
  %2172 = icmp eq i32 %2038, 0
  br i1 %2172, label %2173, label %2230

2173:                                             ; preds = %2171
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %2230

2174:                                             ; preds = %2168, %2166, %2147
  %2175 = load i8, i8* %2052, align 8
  %2176 = icmp eq i8 %2175, 10
  br i1 %2176, label %2177, label %2182

2177:                                             ; preds = %2174
  %2178 = bitcast %5* %2050 to %59**
  %2179 = load %59*, %59** %2178, align 8
  %2180 = getelementptr inbounds %59, %59* %2179, i64 0, i32 1
  %2181 = getelementptr inbounds %59, %59* %2179, i64 0, i32 1, i32 1
  br label %2182

2182:                                             ; preds = %2177, %2174
  %2183 = phi %7* [ %2181, %2177 ], [ %2051, %2174 ]
  %2184 = phi %5* [ %2180, %2177 ], [ %2050, %2174 ]
  %2185 = bitcast %7* %2183 to %60*
  %2186 = getelementptr inbounds %60, %60* %2185, i64 0, i32 1
  %2187 = load i8, i8* %2186, align 1
  %2188 = and i8 %2187, 4
  %2189 = icmp eq i8 %2188, 0
  br i1 %2189, label %2196, label %2190

2190:                                             ; preds = %2182
  %2191 = bitcast %5* %2184 to %61**
  %2192 = load %61*, %61** %2191, align 8
  %2193 = getelementptr inbounds %61, %61* %2192, i64 0, i32 0, i32 0
  %2194 = load i32, i32* %2193, align 4
  %2195 = add i32 %2194, 1
  store i32 %2195, i32* %2193, align 4
  br label %2196

2196:                                             ; preds = %2190, %2182
  %2197 = call %5* @zend_hash_find(%9* %164, %2* nonnull %2128) #13
  %2198 = icmp eq %5* %2197, null
  br i1 %2198, label %2226, label %2199

2199:                                             ; preds = %2196
  %2200 = getelementptr inbounds %5, %5* %2197, i64 0, i32 1
  %2201 = bitcast %7* %2200 to i8*
  %2202 = load i8, i8* %2201, align 8
  %2203 = icmp eq i8 %2202, 15
  br i1 %2203, label %2204, label %2210

2204:                                             ; preds = %2199
  %2205 = bitcast %5* %2197 to %5**
  %2206 = load %5*, %5** %2205, align 8
  %2207 = getelementptr inbounds %5, %5* %2206, i64 0, i32 1
  %2208 = bitcast %7* %2207 to i8*
  %2209 = load i8, i8* %2208, align 8
  br label %2210

2210:                                             ; preds = %2204, %2199
  %2211 = phi i8 [ %2209, %2204 ], [ %2202, %2199 ]
  %2212 = phi %5* [ %2206, %2204 ], [ %2197, %2199 ]
  %2213 = icmp eq i8 %2211, 10
  br i1 %2213, label %2214, label %2218

2214:                                             ; preds = %2210
  %2215 = bitcast %5* %2212 to %59**
  %2216 = load %59*, %59** %2215, align 8
  %2217 = getelementptr inbounds %59, %59* %2216, i64 0, i32 1
  br label %2218

2218:                                             ; preds = %2214, %2210
  %2219 = phi %5* [ %2217, %2214 ], [ %2212, %2210 ]
  call void @_zval_ptr_dtor(%5* %2219) #13
  %2220 = getelementptr inbounds %5, %5* %2184, i64 0, i32 0, i32 0
  %2221 = load i64, i64* %2220, align 8
  %2222 = getelementptr inbounds %7, %7* %2183, i64 0, i32 0
  %2223 = load i32, i32* %2222, align 8
  %2224 = getelementptr inbounds %5, %5* %2219, i64 0, i32 0, i32 0
  store i64 %2221, i64* %2224, align 8
  %2225 = getelementptr inbounds %5, %5* %2219, i64 0, i32 1, i32 0
  store i32 %2223, i32* %2225, align 8
  br label %2228

2226:                                             ; preds = %2196
  %2227 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %2128, %5* nonnull %2184) #13
  br label %2228

2228:                                             ; preds = %2226, %2218
  %2229 = add nsw i64 %2039, 1
  br label %2230

2230:                                             ; preds = %2149, %2228, %2173, %2171, %2136, %2104
  %2231 = phi i64 [ %2229, %2228 ], [ %2039, %2171 ], [ %2039, %2173 ], [ %2039, %2104 ], [ %2039, %2136 ], [ %2039, %2149 ]
  %2232 = phi i32 [ %2038, %2228 ], [ %2038, %2171 ], [ 1, %2173 ], [ %2038, %2104 ], [ %2038, %2136 ], [ %2038, %2149 ]
  %2233 = getelementptr inbounds i8, i8* %2115, i64 5
  %2234 = load i8, i8* %2233, align 1
  %2235 = and i8 %2234, 2
  %2236 = icmp eq i8 %2235, 0
  br i1 %2236, label %2237, label %2246

2237:                                             ; preds = %2230
  %2238 = load i32, i32* %2116, align 8
  %2239 = add i32 %2238, -1
  store i32 %2239, i32* %2116, align 8
  %2240 = icmp eq i32 %2239, 0
  br i1 %2240, label %2241, label %2246

2241:                                             ; preds = %2237
  %2242 = and i8 %2234, 1
  %2243 = icmp eq i8 %2242, 0
  br i1 %2243, label %2245, label %2244

2244:                                             ; preds = %2241
  call void @free(i8* nonnull %2115) #13
  br label %2246

2245:                                             ; preds = %2241
  call void @_efree(i8* nonnull %2115) #13
  br label %2246

2246:                                             ; preds = %2245, %2244, %2237, %2230, %2096, %2059, %2055, %2049
  %2247 = phi i64 [ %2103, %2096 ], [ %2039, %2049 ], [ %2039, %2055 ], [ %2039, %2059 ], [ %2231, %2230 ], [ %2231, %2237 ], [ %2231, %2244 ], [ %2231, %2245 ]
  %2248 = phi i32 [ %2038, %2096 ], [ %2038, %2049 ], [ %2038, %2055 ], [ %2038, %2059 ], [ %2232, %2230 ], [ %2232, %2237 ], [ %2232, %2244 ], [ %2232, %2245 ]
  %2249 = getelementptr inbounds %11, %11* %2040, i64 1
  %2250 = icmp eq %11* %2249, %2033
  br i1 %2250, label %3281, label %2037

2251:                                             ; preds = %1720
  %2252 = bitcast %5* %4 to %9**
  %2253 = load %9*, %9** %2252, align 8
  %2254 = getelementptr inbounds %9, %9* %2253, i64 0, i32 3
  %2255 = load %11*, %11** %2254, align 8
  %2256 = getelementptr inbounds %9, %9* %2253, i64 0, i32 4
  %2257 = load i32, i32* %2256, align 8
  %2258 = zext i32 %2257 to i64
  %2259 = getelementptr inbounds %11, %11* %2255, i64 %2258
  %2260 = icmp eq i32 %2257, 0
  br i1 %2260, label %3281, label %2261

2261:                                             ; preds = %2251
  %2262 = bitcast %5* %54 to %2**
  br label %2263

2263:                                             ; preds = %2539, %2261
  %2264 = phi i32 [ 0, %2261 ], [ %2541, %2539 ]
  %2265 = phi i64 [ 0, %2261 ], [ %2540, %2539 ]
  %2266 = phi %11* [ %2255, %2261 ], [ %2542, %2539 ]
  %2267 = getelementptr inbounds %11, %11* %2266, i64 0, i32 0
  %2268 = getelementptr inbounds %11, %11* %2266, i64 0, i32 0, i32 1
  %2269 = bitcast %7* %2268 to i8*
  %2270 = load i8, i8* %2269, align 8
  %2271 = icmp eq i8 %2270, 15
  br i1 %2271, label %2272, label %2275

2272:                                             ; preds = %2263
  %2273 = bitcast %11* %2266 to %5**
  %2274 = load %5*, %5** %2273, align 8
  br label %2275

2275:                                             ; preds = %2272, %2263
  %2276 = phi %5* [ %2274, %2272 ], [ %2267, %2263 ]
  %2277 = getelementptr inbounds %5, %5* %2276, i64 0, i32 1
  %2278 = bitcast %7* %2277 to i8*
  %2279 = load i8, i8* %2278, align 8
  %2280 = icmp eq i8 %2279, 0
  br i1 %2280, label %2539, label %2281

2281:                                             ; preds = %2275
  %2282 = getelementptr inbounds %11, %11* %2266, i64 0, i32 2
  %2283 = load %2*, %2** %2282, align 8
  %2284 = icmp eq %2* %2283, null
  br i1 %2284, label %2539, label %2285

2285:                                             ; preds = %2281
  %2286 = getelementptr inbounds %2, %2* %2283, i64 0, i32 2
  %2287 = load i64, i64* %2286, align 8
  %2288 = icmp eq i64 %2287, 0
  br i1 %2288, label %2539, label %2289

2289:                                             ; preds = %2285
  %2290 = call %5* @zend_hash_find(%9* %164, %2* nonnull %2283) #13
  %2291 = icmp eq %5* %2290, null
  br i1 %2291, label %2475, label %2292

2292:                                             ; preds = %2289
  %2293 = getelementptr inbounds %5, %5* %2290, i64 0, i32 1
  %2294 = bitcast %7* %2293 to i8*
  %2295 = load i8, i8* %2294, align 8
  %2296 = icmp eq i8 %2295, 15
  br i1 %2296, label %2297, label %2334

2297:                                             ; preds = %2292
  %2298 = bitcast %5* %2290 to %5**
  %2299 = load %5*, %5** %2298, align 8
  %2300 = getelementptr inbounds %5, %5* %2299, i64 0, i32 1
  %2301 = bitcast %7* %2300 to i8*
  %2302 = load i8, i8* %2301, align 8
  %2303 = icmp eq i8 %2302, 0
  br i1 %2303, label %2304, label %2334

2304:                                             ; preds = %2297
  %2305 = load i8, i8* %2278, align 8
  %2306 = icmp eq i8 %2305, 10
  br i1 %2306, label %2307, label %2312

2307:                                             ; preds = %2304
  %2308 = bitcast %5* %2276 to %59**
  %2309 = load %59*, %59** %2308, align 8
  %2310 = getelementptr inbounds %59, %59* %2309, i64 0, i32 1
  %2311 = getelementptr inbounds %59, %59* %2309, i64 0, i32 1, i32 1
  br label %2312

2312:                                             ; preds = %2307, %2304
  %2313 = phi %7* [ %2311, %2307 ], [ %2277, %2304 ]
  %2314 = phi %5* [ %2310, %2307 ], [ %2276, %2304 ]
  %2315 = bitcast %7* %2313 to %60*
  %2316 = getelementptr inbounds %60, %60* %2315, i64 0, i32 1
  %2317 = load i8, i8* %2316, align 1
  %2318 = and i8 %2317, 4
  %2319 = icmp eq i8 %2318, 0
  br i1 %2319, label %2326, label %2320

2320:                                             ; preds = %2312
  %2321 = bitcast %5* %2314 to %61**
  %2322 = load %61*, %61** %2321, align 8
  %2323 = getelementptr inbounds %61, %61* %2322, i64 0, i32 0, i32 0
  %2324 = load i32, i32* %2323, align 4
  %2325 = add i32 %2324, 1
  store i32 %2325, i32* %2323, align 4
  br label %2326

2326:                                             ; preds = %2320, %2312
  %2327 = getelementptr inbounds %5, %5* %2314, i64 0, i32 0, i32 0
  %2328 = load i64, i64* %2327, align 8
  %2329 = getelementptr inbounds %7, %7* %2313, i64 0, i32 0
  %2330 = load i32, i32* %2329, align 8
  %2331 = getelementptr inbounds %5, %5* %2299, i64 0, i32 0, i32 0
  store i64 %2328, i64* %2331, align 8
  %2332 = getelementptr inbounds %5, %5* %2299, i64 0, i32 1, i32 0
  store i32 %2330, i32* %2332, align 8
  %2333 = add nsw i64 %2265, 1
  br label %2539

2334:                                             ; preds = %2511, %2297, %2292
  %2335 = getelementptr inbounds %2, %2* %2283, i64 0, i32 3, i64 0
  %2336 = load i64, i64* %2286, align 8
  %2337 = load %2*, %2** %2262, align 8
  %2338 = getelementptr inbounds %2, %2* %2337, i64 0, i32 2
  %2339 = load i64, i64* %2338, align 8
  %2340 = add i64 %2336, 1
  %2341 = add i64 %2339, %2340
  %2342 = add i64 %2341, 32
  %2343 = and i64 %2342, -8
  %2344 = call noalias i8* @_emalloc(i64 %2343) #15
  %2345 = bitcast i8* %2344 to i32*
  store i32 1, i32* %2345, align 8
  %2346 = getelementptr inbounds i8, i8* %2344, i64 4
  %2347 = bitcast i8* %2346 to i32*
  store i32 6, i32* %2347, align 4
  %2348 = getelementptr inbounds i8, i8* %2344, i64 8
  %2349 = bitcast i8* %2348 to i64*
  store i64 0, i64* %2349, align 8
  %2350 = getelementptr inbounds i8, i8* %2344, i64 16
  %2351 = bitcast i8* %2350 to i64*
  store i64 %2341, i64* %2351, align 8
  %2352 = getelementptr inbounds i8, i8* %2344, i64 24
  %2353 = load %2*, %2** %2262, align 8
  %2354 = getelementptr inbounds %2, %2* %2353, i64 0, i32 3, i64 0
  %2355 = getelementptr inbounds %2, %2* %2353, i64 0, i32 2
  %2356 = load i64, i64* %2355, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2352, i8* nonnull align 8 %2354, i64 %2356, i1 false) #13
  %2357 = bitcast i8* %2344 to %2*
  %2358 = load i64, i64* %2355, align 8
  %2359 = getelementptr inbounds %2, %2* %2357, i64 0, i32 3, i64 %2358
  store i8 95, i8* %2359, align 1
  %2360 = load i64, i64* %2355, align 8
  %2361 = getelementptr inbounds %2, %2* %2357, i64 0, i32 3, i64 %2360
  %2362 = getelementptr inbounds i8, i8* %2361, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2362, i8* nonnull align 1 %2335, i64 %2340, i1 false) #13
  %2363 = load i64, i64* %2351, align 8
  %2364 = icmp eq i64 %2363, 0
  br i1 %2364, label %2459, label %2365

2365:                                             ; preds = %2334
  %2366 = load i8, i8* %2352, align 1
  %2367 = zext i8 %2366 to i32
  %2368 = lshr i32 %2367, 5
  %2369 = zext i32 %2368 to i64
  %2370 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2369
  %2371 = load i32, i32* %2370, align 4
  %2372 = and i32 %2367, 31
  %2373 = shl i32 1, %2372
  %2374 = and i32 %2373, %2371
  %2375 = icmp eq i32 %2374, 0
  br i1 %2375, label %2459, label %2376

2376:                                             ; preds = %2365
  %2377 = icmp ugt i64 %2363, 1
  br i1 %2377, label %2378, label %2403

2378:                                             ; preds = %2376, %2392
  %2379 = phi i64 [ %2393, %2392 ], [ 1, %2376 ]
  %2380 = getelementptr inbounds i8, i8* %2352, i64 %2379
  %2381 = load i8, i8* %2380, align 1
  %2382 = zext i8 %2381 to i32
  %2383 = lshr i32 %2382, 5
  %2384 = or i32 %2383, 8
  %2385 = zext i32 %2384 to i64
  %2386 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2385
  %2387 = load i32, i32* %2386, align 4
  %2388 = and i32 %2382, 31
  %2389 = shl i32 1, %2388
  %2390 = and i32 %2389, %2387
  %2391 = icmp eq i32 %2390, 0
  br i1 %2391, label %2459, label %2392

2392:                                             ; preds = %2378
  %2393 = add nuw i64 %2379, 1
  %2394 = icmp ult i64 %2393, %2363
  br i1 %2394, label %2378, label %2395

2395:                                             ; preds = %2392
  %2396 = icmp eq i64 %2363, 4
  br i1 %2396, label %2397, label %2403

2397:                                             ; preds = %2395
  %2398 = call i32 @memcmp(i8* nonnull %2352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %2399 = icmp eq i32 %2398, 0
  br i1 %2399, label %2400, label %2403

2400:                                             ; preds = %2397
  %2401 = icmp eq i32 %2264, 0
  br i1 %2401, label %2402, label %2459

2402:                                             ; preds = %2400
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %2459

2403:                                             ; preds = %2397, %2395, %2376
  %2404 = load i8, i8* %2278, align 8
  %2405 = icmp eq i8 %2404, 10
  br i1 %2405, label %2406, label %2411

2406:                                             ; preds = %2403
  %2407 = bitcast %5* %2276 to %59**
  %2408 = load %59*, %59** %2407, align 8
  %2409 = getelementptr inbounds %59, %59* %2408, i64 0, i32 1
  %2410 = getelementptr inbounds %59, %59* %2408, i64 0, i32 1, i32 1
  br label %2411

2411:                                             ; preds = %2406, %2403
  %2412 = phi %7* [ %2410, %2406 ], [ %2277, %2403 ]
  %2413 = phi %5* [ %2409, %2406 ], [ %2276, %2403 ]
  %2414 = bitcast %7* %2412 to %60*
  %2415 = getelementptr inbounds %60, %60* %2414, i64 0, i32 1
  %2416 = load i8, i8* %2415, align 1
  %2417 = and i8 %2416, 4
  %2418 = icmp eq i8 %2417, 0
  br i1 %2418, label %2425, label %2419

2419:                                             ; preds = %2411
  %2420 = bitcast %5* %2413 to %61**
  %2421 = load %61*, %61** %2420, align 8
  %2422 = getelementptr inbounds %61, %61* %2421, i64 0, i32 0, i32 0
  %2423 = load i32, i32* %2422, align 4
  %2424 = add i32 %2423, 1
  store i32 %2424, i32* %2422, align 4
  br label %2425

2425:                                             ; preds = %2419, %2411
  %2426 = call %5* @zend_hash_find(%9* %164, %2* nonnull %2357) #13
  %2427 = icmp eq %5* %2426, null
  br i1 %2427, label %2455, label %2428

2428:                                             ; preds = %2425
  %2429 = getelementptr inbounds %5, %5* %2426, i64 0, i32 1
  %2430 = bitcast %7* %2429 to i8*
  %2431 = load i8, i8* %2430, align 8
  %2432 = icmp eq i8 %2431, 15
  br i1 %2432, label %2433, label %2439

2433:                                             ; preds = %2428
  %2434 = bitcast %5* %2426 to %5**
  %2435 = load %5*, %5** %2434, align 8
  %2436 = getelementptr inbounds %5, %5* %2435, i64 0, i32 1
  %2437 = bitcast %7* %2436 to i8*
  %2438 = load i8, i8* %2437, align 8
  br label %2439

2439:                                             ; preds = %2433, %2428
  %2440 = phi i8 [ %2438, %2433 ], [ %2431, %2428 ]
  %2441 = phi %5* [ %2435, %2433 ], [ %2426, %2428 ]
  %2442 = icmp eq i8 %2440, 10
  br i1 %2442, label %2443, label %2447

2443:                                             ; preds = %2439
  %2444 = bitcast %5* %2441 to %59**
  %2445 = load %59*, %59** %2444, align 8
  %2446 = getelementptr inbounds %59, %59* %2445, i64 0, i32 1
  br label %2447

2447:                                             ; preds = %2443, %2439
  %2448 = phi %5* [ %2446, %2443 ], [ %2441, %2439 ]
  call void @_zval_ptr_dtor(%5* %2448) #13
  %2449 = getelementptr inbounds %5, %5* %2413, i64 0, i32 0, i32 0
  %2450 = load i64, i64* %2449, align 8
  %2451 = getelementptr inbounds %7, %7* %2412, i64 0, i32 0
  %2452 = load i32, i32* %2451, align 8
  %2453 = getelementptr inbounds %5, %5* %2448, i64 0, i32 0, i32 0
  store i64 %2450, i64* %2453, align 8
  %2454 = getelementptr inbounds %5, %5* %2448, i64 0, i32 1, i32 0
  store i32 %2452, i32* %2454, align 8
  br label %2457

2455:                                             ; preds = %2425
  %2456 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %2357, %5* nonnull %2413) #13
  br label %2457

2457:                                             ; preds = %2455, %2447
  %2458 = add nsw i64 %2265, 1
  br label %2459

2459:                                             ; preds = %2378, %2457, %2402, %2400, %2365, %2334
  %2460 = phi i64 [ %2458, %2457 ], [ %2265, %2400 ], [ %2265, %2402 ], [ %2265, %2334 ], [ %2265, %2365 ], [ %2265, %2378 ]
  %2461 = phi i32 [ %2264, %2457 ], [ %2264, %2400 ], [ 1, %2402 ], [ %2264, %2334 ], [ %2264, %2365 ], [ %2264, %2378 ]
  %2462 = getelementptr inbounds i8, i8* %2344, i64 5
  %2463 = load i8, i8* %2462, align 1
  %2464 = and i8 %2463, 2
  %2465 = icmp eq i8 %2464, 0
  br i1 %2465, label %2466, label %2539

2466:                                             ; preds = %2459
  %2467 = load i32, i32* %2345, align 8
  %2468 = add i32 %2467, -1
  store i32 %2468, i32* %2345, align 8
  %2469 = icmp eq i32 %2468, 0
  br i1 %2469, label %2470, label %2539

2470:                                             ; preds = %2466
  %2471 = and i8 %2463, 1
  %2472 = icmp eq i8 %2471, 0
  br i1 %2472, label %2474, label %2473

2473:                                             ; preds = %2470
  call void @free(i8* nonnull %2344) #13
  br label %2539

2474:                                             ; preds = %2470
  call void @_efree(i8* nonnull %2344) #13
  br label %2539

2475:                                             ; preds = %2289
  %2476 = getelementptr inbounds %2, %2* %2283, i64 0, i32 3, i64 0
  %2477 = load i64, i64* %2286, align 8
  %2478 = icmp eq i64 %2477, 0
  br i1 %2478, label %2539, label %2479

2479:                                             ; preds = %2475
  %2480 = load i8, i8* %2476, align 1
  %2481 = zext i8 %2480 to i32
  %2482 = lshr i32 %2481, 5
  %2483 = zext i32 %2482 to i64
  %2484 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2483
  %2485 = load i32, i32* %2484, align 4
  %2486 = and i32 %2481, 31
  %2487 = shl i32 1, %2486
  %2488 = and i32 %2487, %2485
  %2489 = icmp eq i32 %2488, 0
  br i1 %2489, label %2539, label %2490

2490:                                             ; preds = %2479
  %2491 = icmp ugt i64 %2477, 1
  br i1 %2491, label %2492, label %2514

2492:                                             ; preds = %2490, %2506
  %2493 = phi i64 [ %2507, %2506 ], [ 1, %2490 ]
  %2494 = getelementptr inbounds %2, %2* %2283, i64 0, i32 3, i64 %2493
  %2495 = load i8, i8* %2494, align 1
  %2496 = zext i8 %2495 to i32
  %2497 = lshr i32 %2496, 5
  %2498 = or i32 %2497, 8
  %2499 = zext i32 %2498 to i64
  %2500 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2499
  %2501 = load i32, i32* %2500, align 4
  %2502 = and i32 %2496, 31
  %2503 = shl i32 1, %2502
  %2504 = and i32 %2503, %2501
  %2505 = icmp eq i32 %2504, 0
  br i1 %2505, label %2539, label %2506

2506:                                             ; preds = %2492
  %2507 = add nuw i64 %2493, 1
  %2508 = icmp ult i64 %2507, %2477
  br i1 %2508, label %2492, label %2509

2509:                                             ; preds = %2506
  %2510 = icmp eq i64 %2477, 4
  br i1 %2510, label %2511, label %2514

2511:                                             ; preds = %2509
  %2512 = call i32 @memcmp(i8* nonnull %2476, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %2513 = icmp eq i32 %2512, 0
  br i1 %2513, label %2334, label %2514

2514:                                             ; preds = %2511, %2509, %2490
  %2515 = load i8, i8* %2278, align 8
  %2516 = icmp eq i8 %2515, 10
  br i1 %2516, label %2517, label %2522

2517:                                             ; preds = %2514
  %2518 = bitcast %5* %2276 to %59**
  %2519 = load %59*, %59** %2518, align 8
  %2520 = getelementptr inbounds %59, %59* %2519, i64 0, i32 1
  %2521 = getelementptr inbounds %59, %59* %2519, i64 0, i32 1, i32 1
  br label %2522

2522:                                             ; preds = %2517, %2514
  %2523 = phi %7* [ %2521, %2517 ], [ %2277, %2514 ]
  %2524 = phi %5* [ %2520, %2517 ], [ %2276, %2514 ]
  %2525 = bitcast %7* %2523 to %60*
  %2526 = getelementptr inbounds %60, %60* %2525, i64 0, i32 1
  %2527 = load i8, i8* %2526, align 1
  %2528 = and i8 %2527, 4
  %2529 = icmp eq i8 %2528, 0
  br i1 %2529, label %2536, label %2530

2530:                                             ; preds = %2522
  %2531 = bitcast %5* %2524 to %61**
  %2532 = load %61*, %61** %2531, align 8
  %2533 = getelementptr inbounds %61, %61* %2532, i64 0, i32 0, i32 0
  %2534 = load i32, i32* %2533, align 4
  %2535 = add i32 %2534, 1
  store i32 %2535, i32* %2533, align 4
  br label %2536

2536:                                             ; preds = %2530, %2522
  %2537 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %2283, %5* nonnull %2524) #13
  %2538 = add nsw i64 %2265, 1
  br label %2539

2539:                                             ; preds = %2492, %2536, %2479, %2475, %2474, %2473, %2466, %2459, %2326, %2285, %2281, %2275
  %2540 = phi i64 [ %2333, %2326 ], [ %2265, %2275 ], [ %2265, %2281 ], [ %2265, %2285 ], [ %2538, %2536 ], [ %2460, %2459 ], [ %2460, %2466 ], [ %2460, %2473 ], [ %2460, %2474 ], [ %2265, %2475 ], [ %2265, %2479 ], [ %2265, %2492 ]
  %2541 = phi i32 [ %2264, %2326 ], [ %2264, %2275 ], [ %2264, %2281 ], [ %2264, %2285 ], [ %2264, %2536 ], [ %2461, %2459 ], [ %2461, %2466 ], [ %2461, %2473 ], [ %2461, %2474 ], [ %2264, %2475 ], [ %2264, %2479 ], [ %2264, %2492 ]
  %2542 = getelementptr inbounds %11, %11* %2266, i64 1
  %2543 = icmp eq %11* %2542, %2259
  br i1 %2543, label %3281, label %2263

2544:                                             ; preds = %1720
  %2545 = bitcast %5* %4 to %9**
  %2546 = load %9*, %9** %2545, align 8
  %2547 = getelementptr inbounds %9, %9* %2546, i64 0, i32 3
  %2548 = load %11*, %11** %2547, align 8
  %2549 = getelementptr inbounds %9, %9* %2546, i64 0, i32 4
  %2550 = load i32, i32* %2549, align 8
  %2551 = zext i32 %2550 to i64
  %2552 = getelementptr inbounds %11, %11* %2548, i64 %2551
  %2553 = icmp eq i32 %2550, 0
  br i1 %2553, label %3281, label %2554

2554:                                             ; preds = %2544
  %2555 = bitcast %5* %54 to %2**
  br label %2556

2556:                                             ; preds = %2783, %2554
  %2557 = phi i32 [ 0, %2554 ], [ %2785, %2783 ]
  %2558 = phi i64 [ 0, %2554 ], [ %2784, %2783 ]
  %2559 = phi %11* [ %2548, %2554 ], [ %2786, %2783 ]
  %2560 = getelementptr inbounds %11, %11* %2559, i64 0, i32 0
  %2561 = getelementptr inbounds %11, %11* %2559, i64 0, i32 0, i32 1
  %2562 = bitcast %7* %2561 to i8*
  %2563 = load i8, i8* %2562, align 8
  %2564 = icmp eq i8 %2563, 15
  br i1 %2564, label %2565, label %2568

2565:                                             ; preds = %2556
  %2566 = bitcast %11* %2559 to %5**
  %2567 = load %5*, %5** %2566, align 8
  br label %2568

2568:                                             ; preds = %2565, %2556
  %2569 = phi %5* [ %2567, %2565 ], [ %2560, %2556 ]
  %2570 = getelementptr inbounds %5, %5* %2569, i64 0, i32 1
  %2571 = bitcast %7* %2570 to i8*
  %2572 = load i8, i8* %2571, align 8
  %2573 = icmp eq i8 %2572, 0
  br i1 %2573, label %2783, label %2574

2574:                                             ; preds = %2568
  %2575 = getelementptr inbounds %11, %11* %2559, i64 0, i32 2
  %2576 = load %2*, %2** %2575, align 8
  %2577 = icmp eq %2* %2576, null
  br i1 %2577, label %2611, label %2578

2578:                                             ; preds = %2574
  %2579 = getelementptr inbounds %2, %2* %2576, i64 0, i32 2
  %2580 = load i64, i64* %2579, align 8
  %2581 = icmp eq i64 %2580, 0
  br i1 %2581, label %2783, label %2582

2582:                                             ; preds = %2578
  %2583 = getelementptr inbounds %2, %2* %2576, i64 0, i32 3, i64 0
  %2584 = load %2*, %2** %2555, align 8
  %2585 = getelementptr inbounds %2, %2* %2584, i64 0, i32 2
  %2586 = load i64, i64* %2585, align 8
  %2587 = add i64 %2580, 1
  %2588 = add i64 %2586, %2587
  %2589 = add i64 %2588, 32
  %2590 = and i64 %2589, -8
  %2591 = call noalias i8* @_emalloc(i64 %2590) #15
  %2592 = bitcast i8* %2591 to i32*
  store i32 1, i32* %2592, align 8
  %2593 = getelementptr inbounds i8, i8* %2591, i64 4
  %2594 = bitcast i8* %2593 to i32*
  store i32 6, i32* %2594, align 4
  %2595 = getelementptr inbounds i8, i8* %2591, i64 8
  %2596 = bitcast i8* %2595 to i64*
  store i64 0, i64* %2596, align 8
  %2597 = getelementptr inbounds i8, i8* %2591, i64 16
  %2598 = bitcast i8* %2597 to i64*
  store i64 %2588, i64* %2598, align 8
  %2599 = ptrtoint i8* %2591 to i64
  %2600 = getelementptr inbounds i8, i8* %2591, i64 24
  %2601 = load %2*, %2** %2555, align 8
  %2602 = getelementptr inbounds %2, %2* %2601, i64 0, i32 3, i64 0
  %2603 = getelementptr inbounds %2, %2* %2601, i64 0, i32 2
  %2604 = load i64, i64* %2603, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2600, i8* nonnull align 8 %2602, i64 %2604, i1 false) #13
  %2605 = bitcast i8* %2591 to %2*
  %2606 = load i64, i64* %2603, align 8
  %2607 = getelementptr inbounds %2, %2* %2605, i64 0, i32 3, i64 %2606
  store i8 95, i8* %2607, align 1
  %2608 = load i64, i64* %2603, align 8
  %2609 = getelementptr inbounds %2, %2* %2605, i64 0, i32 3, i64 %2608
  %2610 = getelementptr inbounds i8, i8* %2609, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2610, i8* nonnull align 1 %2583, i64 %2587, i1 false) #13
  br label %2662

2611:                                             ; preds = %2574
  %2612 = getelementptr inbounds %11, %11* %2559, i64 0, i32 1
  %2613 = load i64, i64* %2612, align 8
  %2614 = call %2* @zend_long_to_str(i64 %2613) #13
  %2615 = getelementptr inbounds %2, %2* %2614, i64 0, i32 3, i64 0
  %2616 = getelementptr inbounds %2, %2* %2614, i64 0, i32 2
  %2617 = load i64, i64* %2616, align 8
  %2618 = load %2*, %2** %2555, align 8
  %2619 = getelementptr inbounds %2, %2* %2618, i64 0, i32 2
  %2620 = load i64, i64* %2619, align 8
  %2621 = add i64 %2617, 1
  %2622 = add i64 %2620, %2621
  %2623 = add i64 %2622, 32
  %2624 = and i64 %2623, -8
  %2625 = call noalias i8* @_emalloc(i64 %2624) #15
  %2626 = bitcast i8* %2625 to i32*
  store i32 1, i32* %2626, align 8
  %2627 = getelementptr inbounds i8, i8* %2625, i64 4
  %2628 = bitcast i8* %2627 to i32*
  store i32 6, i32* %2628, align 4
  %2629 = getelementptr inbounds i8, i8* %2625, i64 8
  %2630 = bitcast i8* %2629 to i64*
  store i64 0, i64* %2630, align 8
  %2631 = getelementptr inbounds i8, i8* %2625, i64 16
  %2632 = bitcast i8* %2631 to i64*
  store i64 %2622, i64* %2632, align 8
  %2633 = ptrtoint i8* %2625 to i64
  %2634 = getelementptr inbounds i8, i8* %2625, i64 24
  %2635 = load %2*, %2** %2555, align 8
  %2636 = getelementptr inbounds %2, %2* %2635, i64 0, i32 3, i64 0
  %2637 = getelementptr inbounds %2, %2* %2635, i64 0, i32 2
  %2638 = load i64, i64* %2637, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2634, i8* nonnull align 8 %2636, i64 %2638, i1 false) #13
  %2639 = bitcast i8* %2625 to %2*
  %2640 = load i64, i64* %2637, align 8
  %2641 = getelementptr inbounds %2, %2* %2639, i64 0, i32 3, i64 %2640
  store i8 95, i8* %2641, align 1
  %2642 = load i64, i64* %2637, align 8
  %2643 = getelementptr inbounds %2, %2* %2639, i64 0, i32 3, i64 %2642
  %2644 = getelementptr inbounds i8, i8* %2643, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2644, i8* nonnull align 1 %2615, i64 %2621, i1 false) #13
  %2645 = getelementptr inbounds %2, %2* %2614, i64 0, i32 0, i32 1
  %2646 = bitcast %4* %2645 to %63*
  %2647 = getelementptr inbounds %63, %63* %2646, i64 0, i32 1
  %2648 = load i8, i8* %2647, align 1
  %2649 = and i8 %2648, 2
  %2650 = icmp eq i8 %2649, 0
  br i1 %2650, label %2651, label %2662

2651:                                             ; preds = %2611
  %2652 = getelementptr inbounds %2, %2* %2614, i64 0, i32 0, i32 0
  %2653 = load i32, i32* %2652, align 8
  %2654 = add i32 %2653, -1
  store i32 %2654, i32* %2652, align 8
  %2655 = icmp eq i32 %2654, 0
  br i1 %2655, label %2656, label %2662

2656:                                             ; preds = %2651
  %2657 = and i8 %2648, 1
  %2658 = icmp eq i8 %2657, 0
  %2659 = bitcast %2* %2614 to i8*
  br i1 %2658, label %2661, label %2660

2660:                                             ; preds = %2656
  call void @free(i8* %2659) #13
  br label %2662

2661:                                             ; preds = %2656
  call void @_efree(i8* %2659) #13
  br label %2662

2662:                                             ; preds = %2661, %2660, %2651, %2611, %2582
  %2663 = phi i64 [ %2599, %2582 ], [ %2633, %2611 ], [ %2633, %2651 ], [ %2633, %2660 ], [ %2633, %2661 ]
  %2664 = inttoptr i64 %2663 to %2*
  %2665 = getelementptr inbounds %2, %2* %2664, i64 0, i32 3, i64 0
  %2666 = getelementptr inbounds %2, %2* %2664, i64 0, i32 2
  %2667 = load i64, i64* %2666, align 8
  %2668 = icmp eq i64 %2667, 0
  br i1 %2668, label %2763, label %2669

2669:                                             ; preds = %2662
  %2670 = load i8, i8* %2665, align 1
  %2671 = zext i8 %2670 to i32
  %2672 = lshr i32 %2671, 5
  %2673 = zext i32 %2672 to i64
  %2674 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2673
  %2675 = load i32, i32* %2674, align 4
  %2676 = and i32 %2671, 31
  %2677 = shl i32 1, %2676
  %2678 = and i32 %2677, %2675
  %2679 = icmp eq i32 %2678, 0
  br i1 %2679, label %2763, label %2680

2680:                                             ; preds = %2669
  %2681 = icmp ugt i64 %2667, 1
  br i1 %2681, label %2682, label %2707

2682:                                             ; preds = %2680, %2696
  %2683 = phi i64 [ %2697, %2696 ], [ 1, %2680 ]
  %2684 = getelementptr inbounds %2, %2* %2664, i64 0, i32 3, i64 %2683
  %2685 = load i8, i8* %2684, align 1
  %2686 = zext i8 %2685 to i32
  %2687 = lshr i32 %2686, 5
  %2688 = or i32 %2687, 8
  %2689 = zext i32 %2688 to i64
  %2690 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2689
  %2691 = load i32, i32* %2690, align 4
  %2692 = and i32 %2686, 31
  %2693 = shl i32 1, %2692
  %2694 = and i32 %2693, %2691
  %2695 = icmp eq i32 %2694, 0
  br i1 %2695, label %2763, label %2696

2696:                                             ; preds = %2682
  %2697 = add nuw i64 %2683, 1
  %2698 = icmp ult i64 %2697, %2667
  br i1 %2698, label %2682, label %2699

2699:                                             ; preds = %2696
  %2700 = icmp eq i64 %2667, 4
  br i1 %2700, label %2701, label %2707

2701:                                             ; preds = %2699
  %2702 = call i32 @memcmp(i8* nonnull %2665, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %2703 = icmp eq i32 %2702, 0
  br i1 %2703, label %2704, label %2707

2704:                                             ; preds = %2701
  %2705 = icmp eq i32 %2557, 0
  br i1 %2705, label %2706, label %2763

2706:                                             ; preds = %2704
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %2763

2707:                                             ; preds = %2701, %2699, %2680
  %2708 = load i8, i8* %2571, align 8
  %2709 = icmp eq i8 %2708, 10
  br i1 %2709, label %2710, label %2715

2710:                                             ; preds = %2707
  %2711 = bitcast %5* %2569 to %59**
  %2712 = load %59*, %59** %2711, align 8
  %2713 = getelementptr inbounds %59, %59* %2712, i64 0, i32 1
  %2714 = getelementptr inbounds %59, %59* %2712, i64 0, i32 1, i32 1
  br label %2715

2715:                                             ; preds = %2710, %2707
  %2716 = phi %7* [ %2714, %2710 ], [ %2570, %2707 ]
  %2717 = phi %5* [ %2713, %2710 ], [ %2569, %2707 ]
  %2718 = bitcast %7* %2716 to %60*
  %2719 = getelementptr inbounds %60, %60* %2718, i64 0, i32 1
  %2720 = load i8, i8* %2719, align 1
  %2721 = and i8 %2720, 4
  %2722 = icmp eq i8 %2721, 0
  br i1 %2722, label %2729, label %2723

2723:                                             ; preds = %2715
  %2724 = bitcast %5* %2717 to %61**
  %2725 = load %61*, %61** %2724, align 8
  %2726 = getelementptr inbounds %61, %61* %2725, i64 0, i32 0, i32 0
  %2727 = load i32, i32* %2726, align 4
  %2728 = add i32 %2727, 1
  store i32 %2728, i32* %2726, align 4
  br label %2729

2729:                                             ; preds = %2723, %2715
  %2730 = call %5* @zend_hash_find(%9* %164, %2* nonnull %2664) #13
  %2731 = icmp eq %5* %2730, null
  br i1 %2731, label %2759, label %2732

2732:                                             ; preds = %2729
  %2733 = getelementptr inbounds %5, %5* %2730, i64 0, i32 1
  %2734 = bitcast %7* %2733 to i8*
  %2735 = load i8, i8* %2734, align 8
  %2736 = icmp eq i8 %2735, 15
  br i1 %2736, label %2737, label %2743

2737:                                             ; preds = %2732
  %2738 = bitcast %5* %2730 to %5**
  %2739 = load %5*, %5** %2738, align 8
  %2740 = getelementptr inbounds %5, %5* %2739, i64 0, i32 1
  %2741 = bitcast %7* %2740 to i8*
  %2742 = load i8, i8* %2741, align 8
  br label %2743

2743:                                             ; preds = %2737, %2732
  %2744 = phi i8 [ %2742, %2737 ], [ %2735, %2732 ]
  %2745 = phi %5* [ %2739, %2737 ], [ %2730, %2732 ]
  %2746 = icmp eq i8 %2744, 10
  br i1 %2746, label %2747, label %2751

2747:                                             ; preds = %2743
  %2748 = bitcast %5* %2745 to %59**
  %2749 = load %59*, %59** %2748, align 8
  %2750 = getelementptr inbounds %59, %59* %2749, i64 0, i32 1
  br label %2751

2751:                                             ; preds = %2747, %2743
  %2752 = phi %5* [ %2750, %2747 ], [ %2745, %2743 ]
  call void @_zval_ptr_dtor(%5* %2752) #13
  %2753 = getelementptr inbounds %5, %5* %2717, i64 0, i32 0, i32 0
  %2754 = load i64, i64* %2753, align 8
  %2755 = getelementptr inbounds %7, %7* %2716, i64 0, i32 0
  %2756 = load i32, i32* %2755, align 8
  %2757 = getelementptr inbounds %5, %5* %2752, i64 0, i32 0, i32 0
  store i64 %2754, i64* %2757, align 8
  %2758 = getelementptr inbounds %5, %5* %2752, i64 0, i32 1, i32 0
  store i32 %2756, i32* %2758, align 8
  br label %2761

2759:                                             ; preds = %2729
  %2760 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %2664, %5* nonnull %2717) #13
  br label %2761

2761:                                             ; preds = %2759, %2751
  %2762 = add nsw i64 %2558, 1
  br label %2763

2763:                                             ; preds = %2682, %2761, %2706, %2704, %2669, %2662
  %2764 = phi i64 [ %2762, %2761 ], [ %2558, %2704 ], [ %2558, %2706 ], [ %2558, %2662 ], [ %2558, %2669 ], [ %2558, %2682 ]
  %2765 = phi i32 [ %2557, %2761 ], [ %2557, %2704 ], [ 1, %2706 ], [ %2557, %2662 ], [ %2557, %2669 ], [ %2557, %2682 ]
  %2766 = getelementptr inbounds %2, %2* %2664, i64 0, i32 0, i32 1
  %2767 = bitcast %4* %2766 to %63*
  %2768 = getelementptr inbounds %63, %63* %2767, i64 0, i32 1
  %2769 = load i8, i8* %2768, align 1
  %2770 = and i8 %2769, 2
  %2771 = icmp eq i8 %2770, 0
  br i1 %2771, label %2772, label %2783

2772:                                             ; preds = %2763
  %2773 = getelementptr inbounds %2, %2* %2664, i64 0, i32 0, i32 0
  %2774 = load i32, i32* %2773, align 8
  %2775 = add i32 %2774, -1
  store i32 %2775, i32* %2773, align 8
  %2776 = icmp eq i32 %2775, 0
  br i1 %2776, label %2777, label %2783

2777:                                             ; preds = %2772
  %2778 = and i8 %2769, 1
  %2779 = icmp eq i8 %2778, 0
  %2780 = inttoptr i64 %2663 to i8*
  br i1 %2779, label %2782, label %2781

2781:                                             ; preds = %2777
  call void @free(i8* %2780) #13
  br label %2783

2782:                                             ; preds = %2777
  call void @_efree(i8* %2780) #13
  br label %2783

2783:                                             ; preds = %2782, %2781, %2772, %2763, %2578, %2568
  %2784 = phi i64 [ %2558, %2568 ], [ %2558, %2578 ], [ %2764, %2763 ], [ %2764, %2772 ], [ %2764, %2781 ], [ %2764, %2782 ]
  %2785 = phi i32 [ %2557, %2568 ], [ %2557, %2578 ], [ %2765, %2763 ], [ %2765, %2772 ], [ %2765, %2781 ], [ %2765, %2782 ]
  %2786 = getelementptr inbounds %11, %11* %2559, i64 1
  %2787 = icmp eq %11* %2786, %2552
  br i1 %2787, label %3281, label %2556

2788:                                             ; preds = %1720
  %2789 = bitcast %5* %4 to %9**
  %2790 = load %9*, %9** %2789, align 8
  %2791 = getelementptr inbounds %9, %9* %2790, i64 0, i32 3
  %2792 = load %11*, %11** %2791, align 8
  %2793 = getelementptr inbounds %9, %9* %2790, i64 0, i32 4
  %2794 = load i32, i32* %2793, align 8
  %2795 = zext i32 %2794 to i64
  %2796 = getelementptr inbounds %11, %11* %2792, i64 %2795
  %2797 = icmp eq i32 %2794, 0
  br i1 %2797, label %3281, label %2798

2798:                                             ; preds = %2788
  %2799 = bitcast %5* %54 to %2**
  br label %2800

2800:                                             ; preds = %3131, %2798
  %2801 = phi i32 [ 0, %2798 ], [ %3133, %3131 ]
  %2802 = phi i64 [ 0, %2798 ], [ %3132, %3131 ]
  %2803 = phi %11* [ %2792, %2798 ], [ %3134, %3131 ]
  %2804 = getelementptr inbounds %11, %11* %2803, i64 0, i32 0
  %2805 = getelementptr inbounds %11, %11* %2803, i64 0, i32 0, i32 1
  %2806 = bitcast %7* %2805 to i8*
  %2807 = load i8, i8* %2806, align 8
  %2808 = icmp eq i8 %2807, 15
  br i1 %2808, label %2809, label %2812

2809:                                             ; preds = %2800
  %2810 = bitcast %11* %2803 to %5**
  %2811 = load %5*, %5** %2810, align 8
  br label %2812

2812:                                             ; preds = %2809, %2800
  %2813 = phi %5* [ %2811, %2809 ], [ %2804, %2800 ]
  %2814 = getelementptr inbounds %5, %5* %2813, i64 0, i32 1
  %2815 = bitcast %7* %2814 to i8*
  %2816 = load i8, i8* %2815, align 8
  %2817 = icmp eq i8 %2816, 0
  br i1 %2817, label %3131, label %2818

2818:                                             ; preds = %2812
  %2819 = getelementptr inbounds %11, %11* %2803, i64 0, i32 2
  %2820 = load %2*, %2** %2819, align 8
  %2821 = icmp eq %2* %2820, null
  br i1 %2821, label %2946, label %2822

2822:                                             ; preds = %2818
  %2823 = getelementptr inbounds %2, %2* %2820, i64 0, i32 3, i64 0
  %2824 = getelementptr inbounds %2, %2* %2820, i64 0, i32 2
  %2825 = load i64, i64* %2824, align 8
  %2826 = icmp eq i64 %2825, 0
  br i1 %2826, label %2862, label %2827

2827:                                             ; preds = %2822
  %2828 = load i8, i8* %2823, align 1
  %2829 = zext i8 %2828 to i32
  %2830 = lshr i32 %2829, 5
  %2831 = zext i32 %2830 to i64
  %2832 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2831
  %2833 = load i32, i32* %2832, align 4
  %2834 = and i32 %2829, 31
  %2835 = shl i32 1, %2834
  %2836 = and i32 %2835, %2833
  %2837 = icmp eq i32 %2836, 0
  br i1 %2837, label %2862, label %2838

2838:                                             ; preds = %2827
  %2839 = icmp ugt i64 %2825, 1
  br i1 %2839, label %2840, label %2935

2840:                                             ; preds = %2838, %2854
  %2841 = phi i64 [ %2855, %2854 ], [ 1, %2838 ]
  %2842 = getelementptr inbounds %2, %2* %2820, i64 0, i32 3, i64 %2841
  %2843 = load i8, i8* %2842, align 1
  %2844 = zext i8 %2843 to i32
  %2845 = lshr i32 %2844, 5
  %2846 = or i32 %2845, 8
  %2847 = zext i32 %2846 to i64
  %2848 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2847
  %2849 = load i32, i32* %2848, align 4
  %2850 = and i32 %2844, 31
  %2851 = shl i32 1, %2850
  %2852 = and i32 %2851, %2849
  %2853 = icmp eq i32 %2852, 0
  br i1 %2853, label %2862, label %2854

2854:                                             ; preds = %2840
  %2855 = add nuw i64 %2841, 1
  %2856 = icmp ult i64 %2855, %2825
  br i1 %2856, label %2840, label %2857

2857:                                             ; preds = %2854
  %2858 = icmp eq i64 %2825, 4
  br i1 %2858, label %2859, label %2935

2859:                                             ; preds = %2857
  %2860 = call i32 @memcmp(i8* nonnull %2823, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %2861 = icmp eq i32 %2860, 0
  br i1 %2861, label %2862, label %2935

2862:                                             ; preds = %2840, %2859, %2827, %2822
  %2863 = load %2*, %2** %2799, align 8
  %2864 = getelementptr inbounds %2, %2* %2863, i64 0, i32 2
  %2865 = load i64, i64* %2864, align 8
  %2866 = add i64 %2825, 1
  %2867 = add i64 %2865, %2866
  %2868 = add i64 %2867, 32
  %2869 = and i64 %2868, -8
  %2870 = call noalias i8* @_emalloc(i64 %2869) #15
  %2871 = bitcast i8* %2870 to %2*
  %2872 = bitcast i8* %2870 to i32*
  store i32 1, i32* %2872, align 8
  %2873 = getelementptr inbounds i8, i8* %2870, i64 4
  %2874 = bitcast i8* %2873 to i32*
  store i32 6, i32* %2874, align 4
  %2875 = getelementptr inbounds i8, i8* %2870, i64 8
  %2876 = bitcast i8* %2875 to i64*
  store i64 0, i64* %2876, align 8
  %2877 = getelementptr inbounds i8, i8* %2870, i64 16
  %2878 = bitcast i8* %2877 to i64*
  store i64 %2867, i64* %2878, align 8
  %2879 = getelementptr inbounds i8, i8* %2870, i64 24
  %2880 = load %2*, %2** %2799, align 8
  %2881 = getelementptr inbounds %2, %2* %2880, i64 0, i32 3, i64 0
  %2882 = getelementptr inbounds %2, %2* %2880, i64 0, i32 2
  %2883 = load i64, i64* %2882, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2879, i8* nonnull align 8 %2881, i64 %2883, i1 false) #13
  %2884 = load i64, i64* %2882, align 8
  %2885 = getelementptr inbounds %2, %2* %2871, i64 0, i32 3, i64 %2884
  store i8 95, i8* %2885, align 1
  %2886 = load i64, i64* %2882, align 8
  %2887 = getelementptr inbounds %2, %2* %2871, i64 0, i32 3, i64 %2886
  %2888 = getelementptr inbounds i8, i8* %2887, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2888, i8* nonnull align 1 %2823, i64 %2866, i1 false) #13
  %2889 = load i64, i64* %2878, align 8
  %2890 = icmp eq i64 %2889, 0
  br i1 %2890, label %2921, label %2891

2891:                                             ; preds = %2862
  %2892 = load i8, i8* %2879, align 1
  %2893 = zext i8 %2892 to i32
  %2894 = lshr i32 %2893, 5
  %2895 = zext i32 %2894 to i64
  %2896 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2895
  %2897 = load i32, i32* %2896, align 4
  %2898 = and i32 %2893, 31
  %2899 = shl i32 1, %2898
  %2900 = and i32 %2899, %2897
  %2901 = icmp eq i32 %2900, 0
  br i1 %2901, label %2921, label %2902

2902:                                             ; preds = %2891
  %2903 = icmp ugt i64 %2889, 1
  br i1 %2903, label %2904, label %3043

2904:                                             ; preds = %2902, %2918
  %2905 = phi i64 [ %2919, %2918 ], [ 1, %2902 ]
  %2906 = getelementptr inbounds i8, i8* %2879, i64 %2905
  %2907 = load i8, i8* %2906, align 1
  %2908 = zext i8 %2907 to i32
  %2909 = lshr i32 %2908, 5
  %2910 = or i32 %2909, 8
  %2911 = zext i32 %2910 to i64
  %2912 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %2911
  %2913 = load i32, i32* %2912, align 4
  %2914 = and i32 %2908, 31
  %2915 = shl i32 1, %2914
  %2916 = and i32 %2915, %2913
  %2917 = icmp eq i32 %2916, 0
  br i1 %2917, label %2921, label %2918

2918:                                             ; preds = %2904
  %2919 = add nuw i64 %2905, 1
  %2920 = icmp ult i64 %2919, %2889
  br i1 %2920, label %2904, label %3043

2921:                                             ; preds = %2904, %2891, %2862
  %2922 = getelementptr inbounds i8, i8* %2870, i64 5
  %2923 = load i8, i8* %2922, align 1
  %2924 = and i8 %2923, 2
  %2925 = icmp eq i8 %2924, 0
  br i1 %2925, label %2926, label %3131

2926:                                             ; preds = %2921
  %2927 = load i32, i32* %2872, align 8
  %2928 = add i32 %2927, -1
  store i32 %2928, i32* %2872, align 8
  %2929 = icmp eq i32 %2928, 0
  br i1 %2929, label %2930, label %3131

2930:                                             ; preds = %2926
  %2931 = and i8 %2923, 1
  %2932 = icmp eq i8 %2931, 0
  br i1 %2932, label %2934, label %2933

2933:                                             ; preds = %2930
  call void @free(i8* nonnull %2870) #13
  br label %3131

2934:                                             ; preds = %2930
  call void @_efree(i8* nonnull %2870) #13
  br label %3131

2935:                                             ; preds = %2859, %2857, %2838
  %2936 = getelementptr inbounds %2, %2* %2820, i64 0, i32 0, i32 1
  %2937 = bitcast %4* %2936 to %63*
  %2938 = getelementptr inbounds %63, %63* %2937, i64 0, i32 1
  %2939 = load i8, i8* %2938, align 1
  %2940 = and i8 %2939, 2
  %2941 = icmp eq i8 %2940, 0
  br i1 %2941, label %2942, label %3043

2942:                                             ; preds = %2935
  %2943 = getelementptr inbounds %2, %2* %2820, i64 0, i32 0, i32 0
  %2944 = load i32, i32* %2943, align 8
  %2945 = add i32 %2944, 1
  store i32 %2945, i32* %2943, align 8
  br label %3043

2946:                                             ; preds = %2818
  %2947 = getelementptr inbounds %11, %11* %2803, i64 0, i32 1
  %2948 = load i64, i64* %2947, align 8
  %2949 = call %2* @zend_long_to_str(i64 %2948) #13
  %2950 = getelementptr inbounds %2, %2* %2949, i64 0, i32 3, i64 0
  %2951 = getelementptr inbounds %2, %2* %2949, i64 0, i32 2
  %2952 = load i64, i64* %2951, align 8
  %2953 = load %2*, %2** %2799, align 8
  %2954 = getelementptr inbounds %2, %2* %2953, i64 0, i32 2
  %2955 = load i64, i64* %2954, align 8
  %2956 = add i64 %2952, 1
  %2957 = add i64 %2955, %2956
  %2958 = add i64 %2957, 32
  %2959 = and i64 %2958, -8
  %2960 = call noalias i8* @_emalloc(i64 %2959) #15
  %2961 = bitcast i8* %2960 to %2*
  %2962 = bitcast i8* %2960 to i32*
  store i32 1, i32* %2962, align 8
  %2963 = getelementptr inbounds i8, i8* %2960, i64 4
  %2964 = bitcast i8* %2963 to i32*
  store i32 6, i32* %2964, align 4
  %2965 = getelementptr inbounds i8, i8* %2960, i64 8
  %2966 = bitcast i8* %2965 to i64*
  store i64 0, i64* %2966, align 8
  %2967 = getelementptr inbounds i8, i8* %2960, i64 16
  %2968 = bitcast i8* %2967 to i64*
  store i64 %2957, i64* %2968, align 8
  %2969 = getelementptr inbounds i8, i8* %2960, i64 24
  %2970 = load %2*, %2** %2799, align 8
  %2971 = getelementptr inbounds %2, %2* %2970, i64 0, i32 3, i64 0
  %2972 = getelementptr inbounds %2, %2* %2970, i64 0, i32 2
  %2973 = load i64, i64* %2972, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2969, i8* nonnull align 8 %2971, i64 %2973, i1 false) #13
  %2974 = load i64, i64* %2972, align 8
  %2975 = getelementptr inbounds %2, %2* %2961, i64 0, i32 3, i64 %2974
  store i8 95, i8* %2975, align 1
  %2976 = load i64, i64* %2972, align 8
  %2977 = getelementptr inbounds %2, %2* %2961, i64 0, i32 3, i64 %2976
  %2978 = getelementptr inbounds i8, i8* %2977, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2978, i8* nonnull align 1 %2950, i64 %2956, i1 false) #13
  %2979 = getelementptr inbounds %2, %2* %2949, i64 0, i32 0, i32 1
  %2980 = bitcast %4* %2979 to %63*
  %2981 = getelementptr inbounds %63, %63* %2980, i64 0, i32 1
  %2982 = load i8, i8* %2981, align 1
  %2983 = and i8 %2982, 2
  %2984 = icmp eq i8 %2983, 0
  br i1 %2984, label %2985, label %2996

2985:                                             ; preds = %2946
  %2986 = getelementptr inbounds %2, %2* %2949, i64 0, i32 0, i32 0
  %2987 = load i32, i32* %2986, align 8
  %2988 = add i32 %2987, -1
  store i32 %2988, i32* %2986, align 8
  %2989 = icmp eq i32 %2988, 0
  br i1 %2989, label %2990, label %2996

2990:                                             ; preds = %2985
  %2991 = and i8 %2982, 1
  %2992 = icmp eq i8 %2991, 0
  %2993 = bitcast %2* %2949 to i8*
  br i1 %2992, label %2995, label %2994

2994:                                             ; preds = %2990
  call void @free(i8* %2993) #13
  br label %2996

2995:                                             ; preds = %2990
  call void @_efree(i8* %2993) #13
  br label %2996

2996:                                             ; preds = %2995, %2994, %2985, %2946
  %2997 = load i64, i64* %2968, align 8
  %2998 = icmp eq i64 %2997, 0
  br i1 %2998, label %3029, label %2999

2999:                                             ; preds = %2996
  %3000 = load i8, i8* %2969, align 1
  %3001 = zext i8 %3000 to i32
  %3002 = lshr i32 %3001, 5
  %3003 = zext i32 %3002 to i64
  %3004 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %3003
  %3005 = load i32, i32* %3004, align 4
  %3006 = and i32 %3001, 31
  %3007 = shl i32 1, %3006
  %3008 = and i32 %3007, %3005
  %3009 = icmp eq i32 %3008, 0
  br i1 %3009, label %3029, label %3010

3010:                                             ; preds = %2999
  %3011 = icmp ugt i64 %2997, 1
  br i1 %3011, label %3012, label %3043

3012:                                             ; preds = %3010, %3026
  %3013 = phi i64 [ %3027, %3026 ], [ 1, %3010 ]
  %3014 = getelementptr inbounds i8, i8* %2969, i64 %3013
  %3015 = load i8, i8* %3014, align 1
  %3016 = zext i8 %3015 to i32
  %3017 = lshr i32 %3016, 5
  %3018 = or i32 %3017, 8
  %3019 = zext i32 %3018 to i64
  %3020 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %3019
  %3021 = load i32, i32* %3020, align 4
  %3022 = and i32 %3016, 31
  %3023 = shl i32 1, %3022
  %3024 = and i32 %3023, %3021
  %3025 = icmp eq i32 %3024, 0
  br i1 %3025, label %3029, label %3026

3026:                                             ; preds = %3012
  %3027 = add nuw i64 %3013, 1
  %3028 = icmp ult i64 %3027, %2997
  br i1 %3028, label %3012, label %3043

3029:                                             ; preds = %3012, %2999, %2996
  %3030 = getelementptr inbounds i8, i8* %2960, i64 5
  %3031 = load i8, i8* %3030, align 1
  %3032 = and i8 %3031, 2
  %3033 = icmp eq i8 %3032, 0
  br i1 %3033, label %3034, label %3131

3034:                                             ; preds = %3029
  %3035 = load i32, i32* %2962, align 8
  %3036 = add i32 %3035, -1
  store i32 %3036, i32* %2962, align 8
  %3037 = icmp eq i32 %3036, 0
  br i1 %3037, label %3038, label %3131

3038:                                             ; preds = %3034
  %3039 = and i8 %3031, 1
  %3040 = icmp eq i8 %3039, 0
  br i1 %3040, label %3042, label %3041

3041:                                             ; preds = %3038
  call void @free(i8* nonnull %2960) #13
  br label %3131

3042:                                             ; preds = %3038
  call void @_efree(i8* nonnull %2960) #13
  br label %3131

3043:                                             ; preds = %2918, %3026, %3010, %2942, %2935, %2902
  %3044 = phi %2* [ %2820, %2942 ], [ %2871, %2902 ], [ %2820, %2935 ], [ %2961, %3010 ], [ %2961, %3026 ], [ %2871, %2918 ]
  %3045 = getelementptr inbounds %2, %2* %3044, i64 0, i32 2
  %3046 = load i64, i64* %3045, align 8
  %3047 = icmp eq i64 %3046, 4
  br i1 %3047, label %3048, label %3055

3048:                                             ; preds = %3043
  %3049 = getelementptr inbounds %2, %2* %3044, i64 0, i32 3, i64 0
  %3050 = call i32 @memcmp(i8* nonnull %3049, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %3051 = icmp eq i32 %3050, 0
  br i1 %3051, label %3052, label %3055

3052:                                             ; preds = %3048
  %3053 = icmp eq i32 %2801, 0
  br i1 %3053, label %3054, label %3111

3054:                                             ; preds = %3052
  call void (%1*, i8*, ...) @zend_throw_error(%1* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @62, i64 0, i64 0)) #13
  br label %3111

3055:                                             ; preds = %3048, %3043
  %3056 = load i8, i8* %2815, align 8
  %3057 = icmp eq i8 %3056, 10
  br i1 %3057, label %3058, label %3063

3058:                                             ; preds = %3055
  %3059 = bitcast %5* %2813 to %59**
  %3060 = load %59*, %59** %3059, align 8
  %3061 = getelementptr inbounds %59, %59* %3060, i64 0, i32 1
  %3062 = getelementptr inbounds %59, %59* %3060, i64 0, i32 1, i32 1
  br label %3063

3063:                                             ; preds = %3058, %3055
  %3064 = phi %7* [ %3062, %3058 ], [ %2814, %3055 ]
  %3065 = phi %5* [ %3061, %3058 ], [ %2813, %3055 ]
  %3066 = bitcast %7* %3064 to %60*
  %3067 = getelementptr inbounds %60, %60* %3066, i64 0, i32 1
  %3068 = load i8, i8* %3067, align 1
  %3069 = and i8 %3068, 4
  %3070 = icmp eq i8 %3069, 0
  br i1 %3070, label %3077, label %3071

3071:                                             ; preds = %3063
  %3072 = bitcast %5* %3065 to %61**
  %3073 = load %61*, %61** %3072, align 8
  %3074 = getelementptr inbounds %61, %61* %3073, i64 0, i32 0, i32 0
  %3075 = load i32, i32* %3074, align 4
  %3076 = add i32 %3075, 1
  store i32 %3076, i32* %3074, align 4
  br label %3077

3077:                                             ; preds = %3071, %3063
  %3078 = call %5* @zend_hash_find(%9* %164, %2* nonnull %3044) #13
  %3079 = icmp eq %5* %3078, null
  br i1 %3079, label %3107, label %3080

3080:                                             ; preds = %3077
  %3081 = getelementptr inbounds %5, %5* %3078, i64 0, i32 1
  %3082 = bitcast %7* %3081 to i8*
  %3083 = load i8, i8* %3082, align 8
  %3084 = icmp eq i8 %3083, 15
  br i1 %3084, label %3085, label %3091

3085:                                             ; preds = %3080
  %3086 = bitcast %5* %3078 to %5**
  %3087 = load %5*, %5** %3086, align 8
  %3088 = getelementptr inbounds %5, %5* %3087, i64 0, i32 1
  %3089 = bitcast %7* %3088 to i8*
  %3090 = load i8, i8* %3089, align 8
  br label %3091

3091:                                             ; preds = %3085, %3080
  %3092 = phi i8 [ %3090, %3085 ], [ %3083, %3080 ]
  %3093 = phi %5* [ %3087, %3085 ], [ %3078, %3080 ]
  %3094 = icmp eq i8 %3092, 10
  br i1 %3094, label %3095, label %3099

3095:                                             ; preds = %3091
  %3096 = bitcast %5* %3093 to %59**
  %3097 = load %59*, %59** %3096, align 8
  %3098 = getelementptr inbounds %59, %59* %3097, i64 0, i32 1
  br label %3099

3099:                                             ; preds = %3095, %3091
  %3100 = phi %5* [ %3098, %3095 ], [ %3093, %3091 ]
  call void @_zval_ptr_dtor(%5* %3100) #13
  %3101 = getelementptr inbounds %5, %5* %3065, i64 0, i32 0, i32 0
  %3102 = load i64, i64* %3101, align 8
  %3103 = getelementptr inbounds %7, %7* %3064, i64 0, i32 0
  %3104 = load i32, i32* %3103, align 8
  %3105 = getelementptr inbounds %5, %5* %3100, i64 0, i32 0, i32 0
  store i64 %3102, i64* %3105, align 8
  %3106 = getelementptr inbounds %5, %5* %3100, i64 0, i32 1, i32 0
  store i32 %3104, i32* %3106, align 8
  br label %3109

3107:                                             ; preds = %3077
  %3108 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %3044, %5* nonnull %3065) #13
  br label %3109

3109:                                             ; preds = %3107, %3099
  %3110 = add nsw i64 %2802, 1
  br label %3111

3111:                                             ; preds = %3109, %3054, %3052
  %3112 = phi i64 [ %3110, %3109 ], [ %2802, %3052 ], [ %2802, %3054 ]
  %3113 = phi i32 [ %2801, %3109 ], [ %2801, %3052 ], [ 1, %3054 ]
  %3114 = getelementptr inbounds %2, %2* %3044, i64 0, i32 0, i32 1
  %3115 = bitcast %4* %3114 to %63*
  %3116 = getelementptr inbounds %63, %63* %3115, i64 0, i32 1
  %3117 = load i8, i8* %3116, align 1
  %3118 = and i8 %3117, 2
  %3119 = icmp eq i8 %3118, 0
  br i1 %3119, label %3120, label %3131

3120:                                             ; preds = %3111
  %3121 = getelementptr inbounds %2, %2* %3044, i64 0, i32 0, i32 0
  %3122 = load i32, i32* %3121, align 8
  %3123 = add i32 %3122, -1
  store i32 %3123, i32* %3121, align 8
  %3124 = icmp eq i32 %3123, 0
  br i1 %3124, label %3125, label %3131

3125:                                             ; preds = %3120
  %3126 = and i8 %3117, 1
  %3127 = icmp eq i8 %3126, 0
  %3128 = bitcast %2* %3044 to i8*
  br i1 %3127, label %3130, label %3129

3129:                                             ; preds = %3125
  call void @free(i8* %3128) #13
  br label %3131

3130:                                             ; preds = %3125
  call void @_efree(i8* %3128) #13
  br label %3131

3131:                                             ; preds = %3130, %3129, %3120, %3111, %3042, %3041, %3034, %3029, %2934, %2933, %2926, %2921, %2812
  %3132 = phi i64 [ %2802, %2812 ], [ %2802, %2921 ], [ %2802, %2926 ], [ %2802, %2933 ], [ %2802, %2934 ], [ %2802, %3029 ], [ %2802, %3034 ], [ %2802, %3041 ], [ %2802, %3042 ], [ %3112, %3111 ], [ %3112, %3120 ], [ %3112, %3129 ], [ %3112, %3130 ]
  %3133 = phi i32 [ %2801, %2812 ], [ %2801, %2921 ], [ %2801, %2926 ], [ %2801, %2933 ], [ %2801, %2934 ], [ %2801, %3029 ], [ %2801, %3034 ], [ %2801, %3041 ], [ %2801, %3042 ], [ %3113, %3111 ], [ %3113, %3120 ], [ %3113, %3129 ], [ %3113, %3130 ]
  %3134 = getelementptr inbounds %11, %11* %2803, i64 1
  %3135 = icmp eq %11* %3134, %2796
  br i1 %3135, label %3281, label %2800

3136:                                             ; preds = %1720
  %3137 = bitcast %5* %4 to %9**
  %3138 = load %9*, %9** %3137, align 8
  %3139 = getelementptr inbounds %9, %9* %3138, i64 0, i32 3
  %3140 = load %11*, %11** %3139, align 8
  %3141 = getelementptr inbounds %9, %9* %3138, i64 0, i32 4
  %3142 = load i32, i32* %3141, align 8
  %3143 = zext i32 %3142 to i64
  %3144 = getelementptr inbounds %11, %11* %3140, i64 %3143
  %3145 = icmp eq i32 %3142, 0
  br i1 %3145, label %3281, label %3146

3146:                                             ; preds = %3136, %3277
  %3147 = phi i64 [ %3278, %3277 ], [ 0, %3136 ]
  %3148 = phi %11* [ %3279, %3277 ], [ %3140, %3136 ]
  %3149 = getelementptr inbounds %11, %11* %3148, i64 0, i32 0
  %3150 = getelementptr inbounds %11, %11* %3148, i64 0, i32 0, i32 1
  %3151 = bitcast %7* %3150 to i8*
  %3152 = load i8, i8* %3151, align 8
  %3153 = icmp eq i8 %3152, 15
  br i1 %3153, label %3154, label %3157

3154:                                             ; preds = %3146
  %3155 = bitcast %11* %3148 to %5**
  %3156 = load %5*, %5** %3155, align 8
  br label %3157

3157:                                             ; preds = %3154, %3146
  %3158 = phi %5* [ %3156, %3154 ], [ %3149, %3146 ]
  %3159 = getelementptr inbounds %5, %5* %3158, i64 0, i32 1
  %3160 = bitcast %7* %3159 to i8*
  %3161 = load i8, i8* %3160, align 8
  %3162 = icmp eq i8 %3161, 0
  br i1 %3162, label %3277, label %3163

3163:                                             ; preds = %3157
  %3164 = getelementptr inbounds %11, %11* %3148, i64 0, i32 2
  %3165 = load %2*, %2** %3164, align 8
  %3166 = icmp eq %2* %3165, null
  br i1 %3166, label %3277, label %3167

3167:                                             ; preds = %3163
  %3168 = getelementptr inbounds %2, %2* %3165, i64 0, i32 3, i64 0
  %3169 = getelementptr inbounds %2, %2* %3165, i64 0, i32 2
  %3170 = load i64, i64* %3169, align 8
  %3171 = icmp eq i64 %3170, 0
  br i1 %3171, label %3277, label %3172

3172:                                             ; preds = %3167
  %3173 = load i8, i8* %3168, align 1
  %3174 = zext i8 %3173 to i32
  %3175 = lshr i32 %3174, 5
  %3176 = zext i32 %3175 to i64
  %3177 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %3176
  %3178 = load i32, i32* %3177, align 4
  %3179 = and i32 %3174, 31
  %3180 = shl i32 1, %3179
  %3181 = and i32 %3180, %3178
  %3182 = icmp eq i32 %3181, 0
  br i1 %3182, label %3277, label %3183

3183:                                             ; preds = %3172
  %3184 = icmp ugt i64 %3170, 1
  br i1 %3184, label %3185, label %3207

3185:                                             ; preds = %3183, %3199
  %3186 = phi i64 [ %3200, %3199 ], [ 1, %3183 ]
  %3187 = getelementptr inbounds %2, %2* %3165, i64 0, i32 3, i64 %3186
  %3188 = load i8, i8* %3187, align 1
  %3189 = zext i8 %3188 to i32
  %3190 = lshr i32 %3189, 5
  %3191 = or i32 %3190, 8
  %3192 = zext i32 %3191 to i64
  %3193 = getelementptr inbounds [16 x i32], [16 x i32]* @59, i64 0, i64 %3192
  %3194 = load i32, i32* %3193, align 4
  %3195 = and i32 %3189, 31
  %3196 = shl i32 1, %3195
  %3197 = and i32 %3196, %3194
  %3198 = icmp eq i32 %3197, 0
  br i1 %3198, label %3277, label %3199

3199:                                             ; preds = %3185
  %3200 = add nuw i64 %3186, 1
  %3201 = icmp ult i64 %3200, %3170
  br i1 %3201, label %3185, label %3202

3202:                                             ; preds = %3199
  %3203 = icmp eq i64 %3170, 4
  br i1 %3203, label %3204, label %3207

3204:                                             ; preds = %3202
  %3205 = call i32 @memcmp(i8* nonnull %3168, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %3206 = icmp eq i32 %3205, 0
  br i1 %3206, label %3277, label %3207

3207:                                             ; preds = %3204, %3202, %3183
  %3208 = call %5* @zend_hash_find(%9* %164, %2* nonnull %3165) #13
  %3209 = icmp eq %5* %3208, null
  br i1 %3209, label %3252, label %3210

3210:                                             ; preds = %3207
  %3211 = getelementptr inbounds %5, %5* %3208, i64 0, i32 1
  %3212 = bitcast %7* %3211 to i8*
  %3213 = load i8, i8* %3212, align 8
  %3214 = icmp eq i8 %3213, 15
  br i1 %3214, label %3215, label %3277

3215:                                             ; preds = %3210
  %3216 = bitcast %5* %3208 to %5**
  %3217 = load %5*, %5** %3216, align 8
  %3218 = getelementptr inbounds %5, %5* %3217, i64 0, i32 1
  %3219 = bitcast %7* %3218 to i8*
  %3220 = load i8, i8* %3219, align 8
  %3221 = icmp eq i8 %3220, 0
  br i1 %3221, label %3222, label %3277

3222:                                             ; preds = %3215
  %3223 = load i8, i8* %3160, align 8
  %3224 = icmp eq i8 %3223, 10
  br i1 %3224, label %3225, label %3230

3225:                                             ; preds = %3222
  %3226 = bitcast %5* %3158 to %59**
  %3227 = load %59*, %59** %3226, align 8
  %3228 = getelementptr inbounds %59, %59* %3227, i64 0, i32 1
  %3229 = getelementptr inbounds %59, %59* %3227, i64 0, i32 1, i32 1
  br label %3230

3230:                                             ; preds = %3225, %3222
  %3231 = phi %7* [ %3229, %3225 ], [ %3159, %3222 ]
  %3232 = phi %5* [ %3228, %3225 ], [ %3158, %3222 ]
  %3233 = bitcast %7* %3231 to %60*
  %3234 = getelementptr inbounds %60, %60* %3233, i64 0, i32 1
  %3235 = load i8, i8* %3234, align 1
  %3236 = and i8 %3235, 4
  %3237 = icmp eq i8 %3236, 0
  br i1 %3237, label %3244, label %3238

3238:                                             ; preds = %3230
  %3239 = bitcast %5* %3232 to %61**
  %3240 = load %61*, %61** %3239, align 8
  %3241 = getelementptr inbounds %61, %61* %3240, i64 0, i32 0, i32 0
  %3242 = load i32, i32* %3241, align 4
  %3243 = add i32 %3242, 1
  store i32 %3243, i32* %3241, align 4
  br label %3244

3244:                                             ; preds = %3238, %3230
  %3245 = getelementptr inbounds %5, %5* %3232, i64 0, i32 0, i32 0
  %3246 = load i64, i64* %3245, align 8
  %3247 = getelementptr inbounds %7, %7* %3231, i64 0, i32 0
  %3248 = load i32, i32* %3247, align 8
  %3249 = getelementptr inbounds %5, %5* %3217, i64 0, i32 0, i32 0
  store i64 %3246, i64* %3249, align 8
  %3250 = getelementptr inbounds %5, %5* %3217, i64 0, i32 1, i32 0
  store i32 %3248, i32* %3250, align 8
  %3251 = add nsw i64 %3147, 1
  br label %3277

3252:                                             ; preds = %3207
  %3253 = load i8, i8* %3160, align 8
  %3254 = icmp eq i8 %3253, 10
  br i1 %3254, label %3255, label %3260

3255:                                             ; preds = %3252
  %3256 = bitcast %5* %3158 to %59**
  %3257 = load %59*, %59** %3256, align 8
  %3258 = getelementptr inbounds %59, %59* %3257, i64 0, i32 1
  %3259 = getelementptr inbounds %59, %59* %3257, i64 0, i32 1, i32 1
  br label %3260

3260:                                             ; preds = %3255, %3252
  %3261 = phi %7* [ %3259, %3255 ], [ %3159, %3252 ]
  %3262 = phi %5* [ %3258, %3255 ], [ %3158, %3252 ]
  %3263 = bitcast %7* %3261 to %60*
  %3264 = getelementptr inbounds %60, %60* %3263, i64 0, i32 1
  %3265 = load i8, i8* %3264, align 1
  %3266 = and i8 %3265, 4
  %3267 = icmp eq i8 %3266, 0
  br i1 %3267, label %3274, label %3268

3268:                                             ; preds = %3260
  %3269 = bitcast %5* %3262 to %61**
  %3270 = load %61*, %61** %3269, align 8
  %3271 = getelementptr inbounds %61, %61* %3270, i64 0, i32 0, i32 0
  %3272 = load i32, i32* %3271, align 4
  %3273 = add i32 %3272, 1
  store i32 %3273, i32* %3271, align 4
  br label %3274

3274:                                             ; preds = %3268, %3260
  %3275 = call %5* @_zend_hash_add_new(%9* %164, %2* nonnull %3165, %5* nonnull %3262) #13
  %3276 = add nsw i64 %3147, 1
  br label %3277

3277:                                             ; preds = %3185, %3274, %3244, %3215, %3210, %3204, %3172, %3167, %3163, %3157
  %3278 = phi i64 [ %3147, %3157 ], [ %3147, %3163 ], [ %3147, %3204 ], [ %3251, %3244 ], [ %3147, %3215 ], [ %3147, %3210 ], [ %3276, %3274 ], [ %3147, %3167 ], [ %3147, %3172 ], [ %3147, %3185 ]
  %3279 = getelementptr inbounds %11, %11* %3148, i64 1
  %3280 = icmp eq %11* %3279, %3144
  br i1 %3280, label %3281, label %3146

3281:                                             ; preds = %3131, %2783, %2539, %2246, %2020, %1857, %3277, %3136, %2788, %2544, %2251, %2025, %1862, %1722
  %3282 = phi i64 [ 0, %1722 ], [ 0, %1862 ], [ 0, %2025 ], [ 0, %2251 ], [ 0, %2544 ], [ 0, %2788 ], [ 0, %3136 ], [ %3278, %3277 ], [ %1858, %1857 ], [ %2021, %2020 ], [ %2247, %2246 ], [ %2540, %2539 ], [ %2784, %2783 ], [ %3132, %3131 ]
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1707) #13
  br label %3283

3283:                                             ; preds = %1548, %1208, %972, %679, %456, %295, %1702, %1553, %1213, %977, %684, %461, %300, %167, %3281
  %3284 = phi i64 [ %3282, %3281 ], [ 0, %167 ], [ 0, %300 ], [ 0, %461 ], [ 0, %684 ], [ 0, %977 ], [ 0, %1213 ], [ 0, %1553 ], [ %1703, %1702 ], [ %296, %295 ], [ %457, %456 ], [ %680, %679 ], [ %973, %972 ], [ %1209, %1208 ], [ %1549, %1548 ]
  %3285 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %3284, i64* %3285, align 8
  %3286 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %3286, align 8
  br label %3287

3287:                                             ; preds = %48, %160, %49, %3283, %159, %113, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare dso_local void @_convert_to_string(%5*) local_unnamed_addr #1

declare dso_local i32 @zend_forbid_dynamic_call(i8*) local_unnamed_addr #1

declare dso_local %9* @zend_rebuild_symbol_table() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_compact(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 -1) #13
  br label %36

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = tail call i32 @zend_forbid_dynamic_call(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @31, i64 0, i64 0)) #13
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %36, label %13

13:                                               ; preds = %7
  %14 = tail call %9* @zend_rebuild_symbol_table() #13
  %15 = icmp eq %9* %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8**, i8*** %8, i64 3
  %18 = bitcast i8*** %17 to i8*
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 7
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = bitcast i8*** %9 to %9**
  %23 = load %9*, %9** %22, align 8
  %24 = getelementptr inbounds %9, %9* %23, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = tail call i32 @_array_init(%5* %1, i32 %25) #13
  br label %29

27:                                               ; preds = %16
  %28 = tail call i32 @_array_init(%5* %1, i32 %4) #13
  br label %29

29:                                               ; preds = %21, %27
  %30 = zext i32 %4 to i64
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %34, %31 ]
  %33 = getelementptr inbounds %5, %5* %10, i64 %32
  tail call fastcc void @79(%9* nonnull %14, %5* %1, %5* %33)
  %34 = add nuw nsw i64 %32, 1
  %35 = icmp eq i64 %34, %30
  br i1 %35, label %36, label %31

36:                                               ; preds = %31, %6, %13, %7
  ret void
}

declare dso_local i32 @_array_init(%5*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @79(%9* %0, %5* nocapture readonly %1, %5* nocapture readonly %2) unnamed_addr #0 {
  %4 = alloca %5, align 8
  %5 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %5, %5* %2, i64 0, i32 1
  %7 = bitcast %7* %6 to i8*
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 10
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = bitcast %5* %2 to %59**
  %12 = load %59*, %59** %11, align 8
  %13 = getelementptr inbounds %59, %59* %12, i64 0, i32 1
  %14 = getelementptr inbounds %59, %59* %12, i64 0, i32 1, i32 1
  %15 = bitcast %7* %14 to i8*
  %16 = load i8, i8* %15, align 8
  br label %17

17:                                               ; preds = %10, %3
  %18 = phi i8 [ %16, %10 ], [ %8, %3 ]
  %19 = phi %5* [ %13, %10 ], [ %2, %3 ]
  switch i8 %18, label %149 [
    i8 6, label %20
    i8 7, label %89
  ]

20:                                               ; preds = %17
  %21 = bitcast %5* %19 to %2**
  %22 = load %2*, %2** %21, align 8
  %23 = tail call %5* @zend_hash_find(%9* %0, %2* %22) #13
  %24 = icmp eq %5* %23, null
  br i1 %24, label %66, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %5, %5* %23, i64 0, i32 1
  %27 = bitcast %7* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = bitcast %5* %23 to %5**
  %32 = load %5*, %5** %31, align 8
  %33 = getelementptr inbounds %5, %5* %32, i64 0, i32 1
  %34 = bitcast %7* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %5* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %66, label %39

39:                                               ; preds = %30, %25
  %40 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %41 = phi %5* [ %23, %25 ], [ %32, %30 ]
  %42 = icmp eq i8 %40, 10
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = bitcast %5* %41 to %59**
  %45 = load %59*, %59** %44, align 8
  %46 = getelementptr inbounds %59, %59* %45, i64 0, i32 1
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi %5* [ %46, %43 ], [ %41, %39 ]
  %49 = bitcast %5* %48 to %61**
  %50 = load %61*, %61** %49, align 8
  %51 = getelementptr inbounds %5, %5* %48, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %5* %4 to %61**
  store %61* %50, %61** %53, align 8
  %54 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 %52, i32* %54, align 8
  %55 = and i32 %52, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %61, %61* %50, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %47, %57
  %62 = bitcast %5* %1 to %9**
  %63 = load %9*, %9** %62, align 8
  %64 = load %2*, %2** %21, align 8
  %65 = call %5* @_zend_hash_update(%9* %63, %2* %64, %5* nonnull %4) #13
  br label %66

66:                                               ; preds = %30, %20, %61
  %67 = load %2*, %2** %21, align 8
  %68 = getelementptr inbounds %2, %2* %67, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 4
  br i1 %70, label %71, label %149

71:                                               ; preds = %66
  %72 = getelementptr inbounds %2, %2* %67, i64 0, i32 3, i64 0
  %73 = call i32 @memcmp(i8* nonnull %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0), i64 4) #14
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %149

75:                                               ; preds = %71
  %76 = load %24*, %24** getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 16), align 8
  %77 = call %22* @zend_get_this_object(%24* %76) #13
  %78 = icmp eq %22* %77, null
  br i1 %78, label %149, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %22, %22* %77, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 8
  %83 = bitcast %5* %4 to %22**
  store %22* %77, %22** %83, align 8
  %84 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 1032, i32* %84, align 8
  %85 = bitcast %5* %1 to %9**
  %86 = load %9*, %9** %85, align 8
  %87 = load %2*, %2** %21, align 8
  %88 = call %5* @_zend_hash_update(%9* %86, %2* %87, %5* nonnull %4) #13
  br label %149

89:                                               ; preds = %17
  %90 = bitcast %5* %19 to %9**
  %91 = load %9*, %9** %90, align 8
  %92 = getelementptr inbounds %9, %9* %91, i64 0, i32 1
  %93 = bitcast %10* %92 to %62*
  %94 = getelementptr inbounds %62, %62* %93, i64 0, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp ugt i8 %95, 1
  br i1 %96, label %97, label %98

97:                                               ; preds = %89
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @22, i64 0, i64 0)) #13
  br label %149

98:                                               ; preds = %89
  %99 = getelementptr inbounds %10, %10* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %98
  %104 = add i8 %95, 1
  store i8 %104, i8* %94, align 1
  %105 = load %9*, %9** %90, align 8
  br label %106

106:                                              ; preds = %98, %103
  %107 = phi %9* [ %91, %98 ], [ %105, %103 ]
  %108 = getelementptr inbounds %9, %9* %107, i64 0, i32 3
  %109 = load %11*, %11** %108, align 8
  %110 = getelementptr inbounds %9, %9* %107, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %11, %11* %109, i64 %112
  %114 = icmp eq i32 %111, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %106, %132
  %116 = phi %11* [ %133, %132 ], [ %109, %106 ]
  %117 = getelementptr inbounds %11, %11* %116, i64 0, i32 0
  %118 = getelementptr inbounds %11, %11* %116, i64 0, i32 0, i32 1
  %119 = bitcast %7* %118 to i8*
  %120 = load i8, i8* %119, align 8
  %121 = icmp eq i8 %120, 15
  br i1 %121, label %122, label %125

122:                                              ; preds = %115
  %123 = bitcast %11* %116 to %5**
  %124 = load %5*, %5** %123, align 8
  br label %125

125:                                              ; preds = %122, %115
  %126 = phi %5* [ %124, %122 ], [ %117, %115 ]
  %127 = getelementptr inbounds %5, %5* %126, i64 0, i32 1
  %128 = bitcast %7* %127 to i8*
  %129 = load i8, i8* %128, align 8
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %125
  tail call fastcc void @79(%9* %0, %5* %1, %5* %126)
  br label %132

132:                                              ; preds = %125, %131
  %133 = getelementptr inbounds %11, %11* %116, i64 1
  %134 = icmp eq %11* %133, %113
  br i1 %134, label %135, label %115

135:                                              ; preds = %132
  %136 = load %9*, %9** %90, align 8
  br label %137

137:                                              ; preds = %135, %106
  %138 = phi %9* [ %136, %135 ], [ %107, %106 ]
  %139 = getelementptr inbounds %9, %9* %138, i64 0, i32 1
  %140 = getelementptr inbounds %10, %10* %139, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %137
  %145 = bitcast %10* %139 to %62*
  %146 = getelementptr inbounds %62, %62* %145, i64 0, i32 1
  %147 = load i8, i8* %146, align 1
  %148 = add i8 %147, -1
  store i8 %148, i8* %146, align 1
  br label %149

149:                                              ; preds = %17, %66, %144, %137, %71, %75, %79, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_fill(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %8, i32 3, i32 3) #13
  br label %194

11:                                               ; preds = %2
  %12 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %13 = getelementptr inbounds i8**, i8*** %12, i64 2
  %14 = bitcast i8*** %13 to %5*
  %15 = getelementptr inbounds i8**, i8*** %12, i64 3
  %16 = bitcast i8*** %15 to i8*
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 4
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = bitcast i8*** %13 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %3, align 8
  br label %25

22:                                               ; preds = %11
  %23 = call i32 @zend_parse_arg_long_slow(%5* nonnull %14, i64* nonnull %3) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %19, %22
  %26 = getelementptr inbounds i8**, i8*** %12, i64 4
  %27 = bitcast i8*** %26 to %5*
  %28 = getelementptr inbounds i8**, i8*** %12, i64 5
  %29 = bitcast i8*** %28 to i8*
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 4
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = bitcast i8*** %26 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %4, align 8
  br label %43

35:                                               ; preds = %25
  %36 = call i32 @zend_parse_arg_long_slow(%5* nonnull %27, i64* nonnull %4) #13
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %22, %35
  %39 = phi %5* [ %27, %35 ], [ %14, %22 ]
  %40 = phi i32 [ 2, %35 ], [ 1, %22 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %40, i32 0, %5* %39) #13
  br label %194

41:                                               ; preds = %35
  %42 = load i64, i64* %4, align 8
  br label %43

43:                                               ; preds = %41, %32
  %44 = phi i64 [ %42, %41 ], [ %34, %32 ]
  %45 = getelementptr inbounds i8**, i8*** %12, i64 6
  %46 = bitcast i8*** %45 to %5*
  %47 = icmp sgt i64 %44, 0
  br i1 %47, label %48, label %188

48:                                               ; preds = %43
  %49 = icmp sgt i64 %44, 2147483647
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @32, i64 0, i64 0)) #13
  %51 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %51, align 8
  br label %194

52:                                               ; preds = %48
  %53 = load i64, i64* %3, align 8
  %54 = sub i64 -9223372036854775808, %44
  %55 = icmp sgt i64 %53, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @33, i64 0, i64 0)) #13
  %57 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %57, align 8
  br label %194

58:                                               ; preds = %52
  %59 = icmp sgt i64 %53, -1
  %60 = icmp slt i64 %53, %44
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %154

62:                                               ; preds = %58
  %63 = add nsw i64 %53, %44
  %64 = trunc i64 %63 to i32
  %65 = call i32 @_array_init(%5* %1, i32 %64) #13
  %66 = bitcast %5* %1 to %9**
  %67 = load %9*, %9** %66, align 8
  call void @zend_hash_real_init(%9* %67, i8 zeroext 1) #13
  %68 = load i64, i64* %3, align 8
  %69 = load i64, i64* %4, align 8
  %70 = add nsw i64 %69, %68
  %71 = trunc i64 %70 to i32
  %72 = load %9*, %9** %66, align 8
  %73 = getelementptr inbounds %9, %9* %72, i64 0, i32 4
  store i32 %71, i32* %73, align 8
  %74 = trunc i64 %69 to i32
  %75 = load %9*, %9** %66, align 8
  %76 = getelementptr inbounds %9, %9* %75, i64 0, i32 5
  store i32 %74, i32* %76, align 4
  %77 = trunc i64 %68 to i32
  %78 = load %9*, %9** %66, align 8
  %79 = getelementptr inbounds %9, %9* %78, i64 0, i32 7
  store i32 %77, i32* %79, align 4
  %80 = load %9*, %9** %66, align 8
  %81 = getelementptr inbounds %9, %9* %80, i64 0, i32 8
  store i64 %70, i64* %81, align 8
  %82 = getelementptr inbounds i8**, i8*** %12, i64 7
  %83 = bitcast i8*** %82 to %60*
  %84 = getelementptr inbounds %60, %60* %83, i64 0, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = and i8 %85, 4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %94, label %88

88:                                               ; preds = %62
  %89 = bitcast i8*** %45 to %61**
  %90 = load %61*, %61** %89, align 8
  %91 = getelementptr inbounds %61, %61* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, %74
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %62, %88
  %95 = load %9*, %9** %66, align 8
  %96 = getelementptr inbounds %9, %9* %95, i64 0, i32 3
  %97 = load %11*, %11** %96, align 8
  %98 = add nsw i64 %68, -1
  store i64 %98, i64* %3, align 8
  %99 = icmp eq i64 %68, 0
  br i1 %99, label %119, label %100

100:                                              ; preds = %94
  %101 = add i64 %68, -1
  %102 = and i64 %68, 7
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %113, label %104

104:                                              ; preds = %100, %104
  %105 = phi i64 [ %110, %104 ], [ %98, %100 ]
  %106 = phi %11* [ %109, %104 ], [ %97, %100 ]
  %107 = phi i64 [ %111, %104 ], [ %102, %100 ]
  %108 = getelementptr inbounds %11, %11* %106, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %108, align 8
  %109 = getelementptr inbounds %11, %11* %106, i64 1
  %110 = add nsw i64 %105, -1
  %111 = add i64 %107, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %104

113:                                              ; preds = %104, %100
  %114 = phi i64 [ %98, %100 ], [ %110, %104 ]
  %115 = phi %11* [ %97, %100 ], [ %109, %104 ]
  %116 = icmp ult i64 %101, 7
  br i1 %116, label %117, label %126

117:                                              ; preds = %126, %113
  %118 = getelementptr %11, %11* %97, i64 %68
  store i64 -1, i64* %3, align 8
  br label %119

119:                                              ; preds = %117, %94
  %120 = phi %11* [ %118, %117 ], [ %97, %94 ]
  %121 = add nsw i64 %69, -1
  store i64 %121, i64* %4, align 8
  %122 = icmp eq i64 %69, 0
  br i1 %122, label %194, label %123

123:                                              ; preds = %119
  %124 = bitcast i8*** %45 to i64*
  %125 = bitcast i8*** %82 to i32*
  br label %140

126:                                              ; preds = %113, %126
  %127 = phi i64 [ %138, %126 ], [ %114, %113 ]
  %128 = phi %11* [ %137, %126 ], [ %115, %113 ]
  %129 = getelementptr inbounds %11, %11* %128, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds %11, %11* %128, i64 1, i32 0, i32 1, i32 0
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %11, %11* %128, i64 2, i32 0, i32 1, i32 0
  store i32 0, i32* %131, align 8
  %132 = getelementptr inbounds %11, %11* %128, i64 3, i32 0, i32 1, i32 0
  store i32 0, i32* %132, align 8
  %133 = getelementptr inbounds %11, %11* %128, i64 4, i32 0, i32 1, i32 0
  store i32 0, i32* %133, align 8
  %134 = getelementptr inbounds %11, %11* %128, i64 5, i32 0, i32 1, i32 0
  store i32 0, i32* %134, align 8
  %135 = getelementptr inbounds %11, %11* %128, i64 6, i32 0, i32 1, i32 0
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %11, %11* %128, i64 7, i32 0, i32 1, i32 0
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds %11, %11* %128, i64 8
  %138 = add nsw i64 %127, -8
  %139 = icmp eq i64 %127, 7
  br i1 %139, label %117, label %126

140:                                              ; preds = %123, %140
  %141 = phi i64 [ %68, %123 ], [ %147, %140 ]
  %142 = phi %11* [ %120, %123 ], [ %150, %140 ]
  %143 = load i64, i64* %124, align 8
  %144 = load i32, i32* %125, align 8
  %145 = getelementptr inbounds %11, %11* %142, i64 0, i32 0, i32 0, i32 0
  store i64 %143, i64* %145, align 8
  %146 = getelementptr inbounds %11, %11* %142, i64 0, i32 0, i32 1, i32 0
  store i32 %144, i32* %146, align 8
  %147 = add nsw i64 %141, 1
  %148 = getelementptr inbounds %11, %11* %142, i64 0, i32 1
  store i64 %141, i64* %148, align 8
  %149 = getelementptr inbounds %11, %11* %142, i64 0, i32 2
  store %2* null, %2** %149, align 8
  %150 = getelementptr inbounds %11, %11* %142, i64 1
  %151 = load i64, i64* %4, align 8
  %152 = add nsw i64 %151, -1
  store i64 %152, i64* %4, align 8
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %194, label %140

154:                                              ; preds = %58
  %155 = trunc i64 %44 to i32
  %156 = call i32 @_array_init(%5* %1, i32 %155) #13
  %157 = bitcast %5* %1 to %9**
  %158 = load %9*, %9** %157, align 8
  call void @zend_hash_real_init(%9* %158, i8 zeroext 0) #13
  %159 = getelementptr inbounds i8**, i8*** %12, i64 7
  %160 = bitcast i8*** %159 to %60*
  %161 = getelementptr inbounds %60, %60* %160, i64 0, i32 1
  %162 = load i8, i8* %161, align 1
  %163 = and i8 %162, 4
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %154
  %166 = load i64, i64* %4, align 8
  %167 = bitcast i8*** %45 to %61**
  %168 = load %61*, %61** %167, align 8
  %169 = getelementptr inbounds %61, %61* %168, i64 0, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = trunc i64 %166 to i32
  %172 = add i32 %170, %171
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %154, %165
  %174 = load %9*, %9** %157, align 8
  %175 = load i64, i64* %3, align 8
  %176 = call %5* @_zend_hash_index_add_new(%9* %174, i64 %175, %5* nonnull %46) #13
  %177 = load i64, i64* %4, align 8
  %178 = add nsw i64 %177, -1
  store i64 %178, i64* %4, align 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %173, %180
  %181 = load %9*, %9** %157, align 8
  %182 = call %5* @_zend_hash_next_index_insert_new(%9* %181, %5* nonnull %46) #13
  %183 = load i64, i64* %3, align 8
  %184 = add nsw i64 %183, 1
  store i64 %184, i64* %3, align 8
  %185 = load i64, i64* %4, align 8
  %186 = add nsw i64 %185, -1
  store i64 %186, i64* %4, align 8
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %194, label %180

188:                                              ; preds = %43
  %189 = icmp eq i64 %44, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %188
  %191 = call i32 @_array_init(%5* %1, i32 0) #13
  br label %194

192:                                              ; preds = %188
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @34, i64 0, i64 0)) #13
  %193 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %193, align 8
  br label %194

194:                                              ; preds = %180, %140, %173, %119, %10, %38, %192, %190, %56, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare dso_local void @zend_hash_real_init(%9*, i8 zeroext) local_unnamed_addr #1

declare dso_local %5* @_zend_hash_index_add_new(%9*, i64, %5*) local_unnamed_addr #1

declare dso_local %5* @_zend_hash_next_index_insert_new(%9*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_fill_keys(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 2, i32 2) #13
  br label %130

8:                                                ; preds = %2
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = getelementptr inbounds i8**, i8*** %9, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 7
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast i8*** %10 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %16) #13
  br label %130

17:                                               ; preds = %8
  %18 = getelementptr inbounds i8**, i8*** %9, i64 4
  %19 = bitcast i8*** %18 to %5*
  %20 = bitcast i8*** %10 to %9**
  %21 = load %9*, %9** %20, align 8
  %22 = getelementptr inbounds %9, %9* %21, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = tail call i32 @_array_init(%5* %1, i32 %23) #13
  %25 = load %9*, %9** %20, align 8
  %26 = getelementptr inbounds %9, %9* %25, i64 0, i32 3
  %27 = load %11*, %11** %26, align 8
  %28 = getelementptr inbounds %9, %9* %25, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %11, %11* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %130, label %33

33:                                               ; preds = %17
  %34 = getelementptr inbounds i8**, i8*** %9, i64 5
  %35 = bitcast i8*** %34 to %60*
  %36 = getelementptr inbounds %60, %60* %35, i64 0, i32 1
  %37 = bitcast i8*** %18 to %61**
  %38 = bitcast %5* %1 to %9**
  %39 = bitcast i64* %3 to i8*
  br label %40

40:                                               ; preds = %33, %127
  %41 = phi %11* [ %27, %33 ], [ %128, %127 ]
  %42 = getelementptr inbounds %11, %11* %41, i64 0, i32 0
  %43 = getelementptr inbounds %11, %11* %41, i64 0, i32 0, i32 1
  %44 = bitcast %7* %43 to i8*
  %45 = load i8, i8* %44, align 8
  switch i8 %45, label %50 [
    i8 0, label %127
    i8 10, label %46
  ]

46:                                               ; preds = %40
  %47 = bitcast %11* %41 to %59**
  %48 = load %59*, %59** %47, align 8
  %49 = getelementptr inbounds %59, %59* %48, i64 0, i32 1
  br label %50

50:                                               ; preds = %40, %46
  %51 = phi %5* [ %49, %46 ], [ %42, %40 ]
  %52 = load i8, i8* %36, align 1
  %53 = and i8 %52, 4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = load %61*, %61** %37, align 8
  %57 = getelementptr inbounds %61, %61* %56, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %57, align 4
  br label %60

60:                                               ; preds = %50, %55
  %61 = getelementptr inbounds %5, %5* %51, i64 0, i32 1
  %62 = bitcast %7* %61 to i8*
  %63 = load i8, i8* %62, align 8
  switch i8 %63, label %82 [
    i8 4, label %64
    i8 6, label %69
  ]

64:                                               ; preds = %60
  %65 = load %9*, %9** %38, align 8
  %66 = getelementptr inbounds %5, %5* %51, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = call %5* @_zend_hash_index_update(%9* %65, i64 %67, %5* nonnull %19) #13
  br label %127

69:                                               ; preds = %60
  %70 = bitcast %5* %51 to %2**
  %71 = load %2*, %2** %70, align 8
  %72 = getelementptr inbounds %2, %2* %71, i64 0, i32 0, i32 1
  %73 = bitcast %4* %72 to %63*
  %74 = getelementptr inbounds %63, %63* %73, i64 0, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = and i8 %75, 2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %69
  %79 = getelementptr inbounds %2, %2* %71, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, 1
  store i32 %81, i32* %79, align 8
  br label %84

82:                                               ; preds = %60
  %83 = call %2* @_zval_get_string_func(%5* nonnull %51) #13
  br label %84

84:                                               ; preds = %69, %78, %82
  %85 = phi %2* [ %83, %82 ], [ %71, %69 ], [ %71, %78 ]
  %86 = load %9*, %9** %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %87 = getelementptr inbounds %2, %2* %85, i64 0, i32 3, i64 0
  %88 = getelementptr inbounds %2, %2* %85, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = load i8, i8* %87, align 1
  %91 = icmp sgt i8 %90, 57
  br i1 %91, label %107, label %92

92:                                               ; preds = %84
  %93 = icmp slt i8 %90, 48
  br i1 %93, label %94, label %101

94:                                               ; preds = %92
  %95 = icmp eq i8 %90, 45
  br i1 %95, label %96, label %107

96:                                               ; preds = %94
  %97 = getelementptr inbounds %2, %2* %85, i64 0, i32 3, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = add i8 %98, -48
  %100 = icmp ugt i8 %99, 9
  br i1 %100, label %107, label %101

101:                                              ; preds = %96, %92
  %102 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %87, i64 %89, i64* nonnull %3) #13
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = load i64, i64* %3, align 8
  %106 = call %5* @_zend_hash_index_update(%9* %86, i64 %105, %5* nonnull %19) #13
  br label %109

107:                                              ; preds = %101, %96, %94, %84
  %108 = call %5* @_zend_hash_update(%9* %86, %2* nonnull %85, %5* nonnull %19) #13
  br label %109

109:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  %110 = getelementptr inbounds %2, %2* %85, i64 0, i32 0, i32 1
  %111 = bitcast %4* %110 to %63*
  %112 = getelementptr inbounds %63, %63* %111, i64 0, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = and i8 %113, 2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %127

116:                                              ; preds = %109
  %117 = getelementptr inbounds %2, %2* %85, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, -1
  store i32 %119, i32* %117, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %116
  %122 = and i8 %113, 1
  %123 = icmp eq i8 %122, 0
  %124 = bitcast %2* %85 to i8*
  br i1 %123, label %126, label %125

125:                                              ; preds = %121
  call void @free(i8* %124) #13
  br label %127

126:                                              ; preds = %121
  call void @_efree(i8* %124) #13
  br label %127

127:                                              ; preds = %40, %126, %125, %116, %109, %64
  %128 = getelementptr inbounds %11, %11* %41, i64 1
  %129 = icmp eq %11* %128, %31
  br i1 %129, label %130, label %40

130:                                              ; preds = %127, %17, %7, %15
  ret void
}

declare dso_local %5* @_zend_hash_index_update(%9*, i64, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_range(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -2
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 2, i32 3) #13
  %10 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %10, align 8
  br label %564

11:                                               ; preds = %2
  %12 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %13 = getelementptr inbounds i8**, i8*** %12, i64 2
  %14 = bitcast i8*** %13 to %5*
  %15 = getelementptr inbounds i8**, i8*** %12, i64 4
  %16 = bitcast i8*** %15 to %5*
  %17 = icmp slt i32 %6, 3
  br i1 %17, label %54, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8**, i8*** %12, i64 6
  %20 = bitcast i8*** %19 to %5*
  %21 = getelementptr inbounds i8**, i8*** %12, i64 7
  %22 = bitcast i8*** %21 to i8*
  %23 = load i8, i8* %22, align 8
  switch i8 %23, label %45 [
    i8 5, label %41
    i8 6, label %24
  ]

24:                                               ; preds = %18
  %25 = bitcast i8*** %19 to %2**
  %26 = load %2*, %2** %25, align 8
  %27 = getelementptr inbounds %2, %2* %26, i64 0, i32 3, i64 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp sgt i8 %28, 57
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %2, %2* %26, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = tail call zeroext i8 @_is_numeric_string_ex(i8* nonnull %27, i64 %32, i64* null, double* null, i32 0, i32* null) #13
  switch i8 %33, label %36 [
    i8 5, label %37
    i8 0, label %34
  ]

34:                                               ; preds = %30, %24
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @35, i64 0, i64 0)) #13
  %35 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %35, align 8
  br label %564

36:                                               ; preds = %30
  br label %37

37:                                               ; preds = %30, %36
  %38 = phi i32 [ 1, %30 ], [ 0, %36 ]
  %39 = load i8, i8* %22, align 8
  %40 = icmp eq i8 %39, 5
  br i1 %40, label %41, label %45

41:                                               ; preds = %18, %37
  %42 = phi i32 [ %38, %37 ], [ 1, %18 ]
  %43 = bitcast i8*** %19 to double*
  %44 = load double, double* %43, align 8
  br label %48

45:                                               ; preds = %18, %37
  %46 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %47 = tail call double @_zval_get_double_func(%5* nonnull %20) #13
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i32 [ %42, %41 ], [ %46, %45 ]
  %50 = phi double [ %44, %41 ], [ %47, %45 ]
  %51 = fcmp olt double %50, 0.000000e+00
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = fsub double -0.000000e+00, %50
  br label %54

54:                                               ; preds = %11, %48, %52
  %55 = phi double [ %53, %52 ], [ %50, %48 ], [ 1.000000e+00, %11 ]
  %56 = phi i32 [ %49, %52 ], [ %49, %48 ], [ 0, %11 ]
  %57 = getelementptr inbounds i8**, i8*** %12, i64 3
  %58 = bitcast i8*** %57 to i8*
  %59 = load i8, i8* %58, align 8
  switch i8 %59, label %60 [
    i8 6, label %64
    i8 5, label %238
  ]

60:                                               ; preds = %54
  %61 = getelementptr inbounds i8**, i8*** %12, i64 5
  %62 = bitcast i8*** %61 to i8*
  %63 = load i8, i8* %62, align 8
  br label %230

64:                                               ; preds = %54
  %65 = getelementptr inbounds i8**, i8*** %12, i64 5
  %66 = bitcast i8*** %65 to i8*
  %67 = load i8, i8* %66, align 8
  %68 = icmp eq i8 %67, 6
  br i1 %68, label %69, label %230

69:                                               ; preds = %64
  %70 = bitcast i8*** %13 to %2**
  %71 = load %2*, %2** %70, align 8
  %72 = getelementptr inbounds %2, %2* %71, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %230, label %75

75:                                               ; preds = %69
  %76 = bitcast i8*** %15 to %2**
  %77 = load %2*, %2** %76, align 8
  %78 = getelementptr inbounds %2, %2* %77, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %230, label %81

81:                                               ; preds = %75
  %82 = fptosi double %55 to i64
  %83 = getelementptr inbounds %2, %2* %71, i64 0, i32 3, i64 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp sgt i8 %84, 57
  br i1 %85, label %89, label %86

86:                                               ; preds = %81
  %87 = tail call zeroext i8 @_is_numeric_string_ex(i8* nonnull %83, i64 %73, i64* null, double* null, i32 0, i32* null) #13
  %88 = load %2*, %2** %76, align 8
  br label %89

89:                                               ; preds = %81, %86
  %90 = phi %2* [ %88, %86 ], [ %77, %81 ]
  %91 = phi i8 [ %87, %86 ], [ 0, %81 ]
  %92 = getelementptr inbounds %2, %2* %90, i64 0, i32 3, i64 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp sgt i8 %93, 57
  br i1 %94, label %99, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %2, %2* %90, i64 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = tail call zeroext i8 @_is_numeric_string_ex(i8* nonnull %92, i64 %97, i64* null, double* null, i32 0, i32* null) #13
  br label %99

99:                                               ; preds = %89, %95
  %100 = phi i8 [ %98, %95 ], [ 0, %89 ]
  %101 = icmp eq i8 %91, 5
  %102 = icmp eq i8 %100, 5
  %103 = or i1 %101, %102
  %104 = icmp ne i32 %56, 0
  %105 = or i1 %104, %103
  br i1 %105, label %235, label %106

106:                                              ; preds = %99
  %107 = icmp eq i8 %91, 4
  %108 = icmp eq i8 %100, 4
  %109 = or i1 %107, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = load i8, i8* %58, align 8
  br label %412

112:                                              ; preds = %106
  %113 = load %2*, %2** %70, align 8
  %114 = getelementptr inbounds %2, %2* %113, i64 0, i32 3, i64 0
  %115 = load i8, i8* %114, align 8
  %116 = load %2*, %2** %76, align 8
  %117 = getelementptr inbounds %2, %2* %116, i64 0, i32 3, i64 0
  %118 = load i8, i8* %117, align 8
  %119 = zext i8 %115 to i32
  %120 = zext i8 %118 to i32
  %121 = icmp ugt i8 %115, %118
  br i1 %121, label %122, label %169

122:                                              ; preds = %112
  %123 = icmp slt i64 %82, 1
  br i1 %123, label %562, label %124

124:                                              ; preds = %122
  %125 = sub nsw i32 %119, %120
  %126 = sext i32 %125 to i64
  %127 = sdiv i64 %126, %82
  %128 = trunc i64 %127 to i32
  %129 = add i32 %128, 1
  %130 = tail call i32 @_array_init(%5* %1, i32 %129) #13
  %131 = bitcast %5* %1 to %9**
  %132 = load %9*, %9** %131, align 8
  tail call void @zend_hash_real_init(%9* %132, i8 zeroext 1) #13
  %133 = load %9*, %9** %131, align 8
  %134 = getelementptr inbounds %9, %9* %133, i64 0, i32 4
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %9, %9* %133, i64 0, i32 3
  %137 = load %11*, %11** %136, align 8
  %138 = zext i32 %135 to i64
  %139 = getelementptr inbounds %11, %11* %137, i64 %138
  %140 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  %142 = trunc i64 %82 to i8
  br label %143

143:                                              ; preds = %124, %158
  %144 = phi i8 [ %115, %124 ], [ %160, %158 ]
  %145 = phi %11* [ %139, %124 ], [ %159, %158 ]
  %146 = phi i32 [ %135, %124 ], [ %156, %158 ]
  %147 = zext i8 %144 to i64
  %148 = getelementptr inbounds [256 x %2*], [256 x %2*]* @zend_one_char_string, i64 0, i64 %147
  %149 = bitcast %2** %148 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %140, align 8
  store i32 6, i32* %141, align 8
  %151 = getelementptr inbounds %11, %11* %145, i64 0, i32 0, i32 0, i32 0
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %11, %11* %145, i64 0, i32 0, i32 1, i32 0
  store i32 6, i32* %152, align 8
  %153 = zext i32 %146 to i64
  %154 = getelementptr inbounds %11, %11* %145, i64 0, i32 1
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %11, %11* %145, i64 0, i32 2
  store %2* null, %2** %155, align 8
  %156 = add i32 %146, 1
  %157 = icmp slt i64 %147, %82
  br i1 %157, label %162, label %158

158:                                              ; preds = %143
  %159 = getelementptr inbounds %11, %11* %145, i64 1
  %160 = sub i8 %144, %142
  %161 = icmp ult i8 %160, %118
  br i1 %161, label %162, label %143

162:                                              ; preds = %143, %158
  store i32 %156, i32* %134, align 8
  %163 = getelementptr inbounds %9, %9* %133, i64 0, i32 5
  store i32 %156, i32* %163, align 4
  %164 = zext i32 %156 to i64
  %165 = getelementptr inbounds %9, %9* %133, i64 0, i32 8
  store i64 %164, i64* %165, align 8
  %166 = icmp eq i32 %156, 0
  %167 = sext i1 %166 to i32
  %168 = getelementptr inbounds %9, %9* %133, i64 0, i32 7
  store i32 %167, i32* %168, align 4
  br label %564

169:                                              ; preds = %112
  %170 = icmp ugt i8 %118, %115
  br i1 %170, label %171, label %219

171:                                              ; preds = %169
  %172 = icmp slt i64 %82, 1
  br i1 %172, label %562, label %173

173:                                              ; preds = %171
  %174 = sub nsw i32 %120, %119
  %175 = sext i32 %174 to i64
  %176 = sdiv i64 %175, %82
  %177 = trunc i64 %176 to i32
  %178 = add i32 %177, 1
  %179 = tail call i32 @_array_init(%5* %1, i32 %178) #13
  %180 = bitcast %5* %1 to %9**
  %181 = load %9*, %9** %180, align 8
  tail call void @zend_hash_real_init(%9* %181, i8 zeroext 1) #13
  %182 = load %9*, %9** %180, align 8
  %183 = getelementptr inbounds %9, %9* %182, i64 0, i32 4
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %9, %9* %182, i64 0, i32 3
  %186 = load %11*, %11** %185, align 8
  %187 = zext i32 %184 to i64
  %188 = getelementptr inbounds %11, %11* %186, i64 %187
  %189 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %190 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  %191 = trunc i64 %82 to i8
  br label %192

192:                                              ; preds = %173, %208
  %193 = phi i8 [ %115, %173 ], [ %210, %208 ]
  %194 = phi %11* [ %188, %173 ], [ %209, %208 ]
  %195 = phi i32 [ %184, %173 ], [ %205, %208 ]
  %196 = zext i8 %193 to i64
  %197 = getelementptr inbounds [256 x %2*], [256 x %2*]* @zend_one_char_string, i64 0, i64 %196
  %198 = bitcast %2** %197 to i64*
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %189, align 8
  store i32 6, i32* %190, align 8
  %200 = getelementptr inbounds %11, %11* %194, i64 0, i32 0, i32 0, i32 0
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %11, %11* %194, i64 0, i32 0, i32 1, i32 0
  store i32 6, i32* %201, align 8
  %202 = zext i32 %195 to i64
  %203 = getelementptr inbounds %11, %11* %194, i64 0, i32 1
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %11, %11* %194, i64 0, i32 2
  store %2* null, %2** %204, align 8
  %205 = add i32 %195, 1
  %206 = add nsw i64 %196, %82
  %207 = icmp sgt i64 %206, 255
  br i1 %207, label %212, label %208

208:                                              ; preds = %192
  %209 = getelementptr inbounds %11, %11* %194, i64 1
  %210 = add i8 %193, %191
  %211 = icmp ugt i8 %210, %118
  br i1 %211, label %212, label %192

212:                                              ; preds = %192, %208
  store i32 %205, i32* %183, align 8
  %213 = getelementptr inbounds %9, %9* %182, i64 0, i32 5
  store i32 %205, i32* %213, align 4
  %214 = zext i32 %205 to i64
  %215 = getelementptr inbounds %9, %9* %182, i64 0, i32 8
  store i64 %214, i64* %215, align 8
  %216 = icmp eq i32 %205, 0
  %217 = sext i1 %216 to i32
  %218 = getelementptr inbounds %9, %9* %182, i64 0, i32 7
  store i32 %217, i32* %218, align 4
  br label %564

219:                                              ; preds = %169
  %220 = tail call i32 @_array_init(%5* %1, i32 0) #13
  %221 = zext i8 %115 to i64
  %222 = getelementptr inbounds [256 x %2*], [256 x %2*]* @zend_one_char_string, i64 0, i64 %221
  %223 = bitcast %2** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  store i32 6, i32* %226, align 8
  %227 = bitcast %5* %1 to %9**
  %228 = load %9*, %9** %227, align 8
  %229 = call %5* @_zend_hash_next_index_insert_new(%9* %228, %5* nonnull %3) #13
  br label %564

230:                                              ; preds = %60, %64, %69, %75
  %231 = phi i8 [ %63, %60 ], [ %67, %64 ], [ 6, %69 ], [ 6, %75 ]
  %232 = icmp eq i8 %231, 5
  %233 = icmp ne i32 %56, 0
  %234 = or i1 %233, %232
  br i1 %234, label %241, label %412

235:                                              ; preds = %99
  %236 = load i8, i8* %58, align 8
  %237 = icmp eq i8 %236, 5
  br i1 %237, label %238, label %241

238:                                              ; preds = %54, %235
  %239 = bitcast i8*** %13 to double*
  %240 = load double, double* %239, align 8
  br label %243

241:                                              ; preds = %230, %235
  %242 = tail call double @_zval_get_double_func(%5* nonnull %14) #13
  br label %243

243:                                              ; preds = %238, %241
  %244 = phi double [ %240, %238 ], [ %242, %241 ]
  %245 = getelementptr inbounds i8**, i8*** %12, i64 5
  %246 = bitcast i8*** %245 to i8*
  %247 = load i8, i8* %246, align 8
  %248 = icmp eq i8 %247, 5
  br i1 %248, label %249, label %252

249:                                              ; preds = %243
  %250 = bitcast i8*** %15 to double*
  %251 = load double, double* %250, align 8
  br label %254

252:                                              ; preds = %243
  %253 = tail call double @_zval_get_double_func(%5* nonnull %16) #13
  br label %254

254:                                              ; preds = %249, %252
  %255 = phi double [ %251, %249 ], [ %253, %252 ]
  %256 = tail call i32 @__isinf(double %255) #16
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %254
  %259 = tail call i32 @__isinf(double %244) #16
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %258, %254
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @36, i64 0, i64 0), double %244, double %255) #13
  %262 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %262, align 8
  br label %564

263:                                              ; preds = %258
  %264 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  store i32 5, i32* %264, align 8
  %265 = fcmp ogt double %244, %255
  br i1 %265, label %266, label %335

266:                                              ; preds = %263
  %267 = fsub double %244, %255
  %268 = fcmp olt double %267, %55
  %269 = fcmp ole double %55, 0.000000e+00
  %270 = or i1 %269, %268
  br i1 %270, label %562, label %271

271:                                              ; preds = %266
  %272 = fdiv double %267, %55
  %273 = fadd double %272, 1.000000e+00
  %274 = fcmp ult double %273, 0x41E0000000000000
  br i1 %274, label %277, label %275

275:                                              ; preds = %271
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @37, i64 0, i64 0), double %255, double %244) #13
  %276 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %276, align 8
  br label %564

277:                                              ; preds = %271
  %278 = tail call double @_php_math_round(double %273, i32 0, i32 1) #13
  %279 = fptoui double %278 to i32
  %280 = tail call i32 @_array_init(%5* %1, i32 %279) #13
  %281 = bitcast %5* %1 to %9**
  %282 = load %9*, %9** %281, align 8
  tail call void @zend_hash_real_init(%9* %282, i8 zeroext 1) #13
  %283 = load %9*, %9** %281, align 8
  %284 = getelementptr inbounds %9, %9* %283, i64 0, i32 4
  %285 = load i32, i32* %284, align 8
  %286 = icmp eq i32 %279, 0
  %287 = fcmp ult double %244, %255
  %288 = or i1 %286, %287
  br i1 %288, label %327, label %289

289:                                              ; preds = %277
  %290 = getelementptr inbounds %9, %9* %283, i64 0, i32 3
  %291 = load %11*, %11** %290, align 8
  %292 = zext i32 %285 to i64
  %293 = getelementptr inbounds %11, %11* %291, i64 %292
  %294 = bitcast %5* %3 to double*
  store double %244, double* %294, align 8
  %295 = bitcast %11* %293 to double*
  store double %244, double* %295, align 8
  %296 = getelementptr inbounds %11, %11* %291, i64 %292, i32 0, i32 1, i32 0
  store i32 5, i32* %296, align 8
  %297 = zext i32 %285 to i64
  %298 = getelementptr inbounds %11, %11* %291, i64 %292, i32 1
  store i64 %297, i64* %298, align 8
  %299 = getelementptr inbounds %11, %11* %291, i64 %292, i32 2
  store %2* null, %2** %299, align 8
  %300 = add i32 %285, 1
  %301 = fsub double %244, %55
  %302 = icmp ult i32 %279, 2
  %303 = fcmp ult double %301, %255
  %304 = or i1 %302, %303
  br i1 %304, label %327, label %305

305:                                              ; preds = %289
  %306 = load i32, i32* %264, align 8
  br label %307

307:                                              ; preds = %305, %307
  %308 = phi double [ %322, %307 ], [ %301, %305 ]
  %309 = phi i32 [ %319, %307 ], [ 1, %305 ]
  %310 = phi i32 [ %318, %307 ], [ %300, %305 ]
  %311 = phi %11* [ %312, %307 ], [ %293, %305 ]
  %312 = getelementptr inbounds %11, %11* %311, i64 1
  %313 = bitcast %11* %312 to double*
  store double %308, double* %313, align 8
  %314 = getelementptr inbounds %11, %11* %311, i64 1, i32 0, i32 1, i32 0
  store i32 %306, i32* %314, align 8
  %315 = zext i32 %310 to i64
  %316 = getelementptr inbounds %11, %11* %311, i64 1, i32 1
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %11, %11* %311, i64 1, i32 2
  store %2* null, %2** %317, align 8
  %318 = add i32 %310, 1
  %319 = add nuw i32 %309, 1
  %320 = uitofp i32 %319 to double
  %321 = fmul double %55, %320
  %322 = fsub double %244, %321
  %323 = icmp uge i32 %319, %279
  %324 = fcmp ult double %322, %255
  %325 = or i1 %323, %324
  br i1 %325, label %326, label %307

326:                                              ; preds = %307
  store double %308, double* %294, align 8
  br label %327

327:                                              ; preds = %326, %289, %277
  %328 = phi i32 [ %285, %277 ], [ %300, %289 ], [ %318, %326 ]
  store i32 %328, i32* %284, align 8
  %329 = getelementptr inbounds %9, %9* %283, i64 0, i32 5
  store i32 %328, i32* %329, align 4
  %330 = zext i32 %328 to i64
  %331 = getelementptr inbounds %9, %9* %283, i64 0, i32 8
  store i64 %330, i64* %331, align 8
  %332 = icmp eq i32 %328, 0
  %333 = sext i1 %332 to i32
  %334 = getelementptr inbounds %9, %9* %283, i64 0, i32 7
  store i32 %333, i32* %334, align 4
  br label %564

335:                                              ; preds = %263
  %336 = fcmp ogt double %255, %244
  br i1 %336, label %337, label %406

337:                                              ; preds = %335
  %338 = fsub double %255, %244
  %339 = fcmp olt double %338, %55
  %340 = fcmp ole double %55, 0.000000e+00
  %341 = or i1 %340, %339
  br i1 %341, label %562, label %342

342:                                              ; preds = %337
  %343 = fdiv double %338, %55
  %344 = fadd double %343, 1.000000e+00
  %345 = fcmp ult double %344, 0x41E0000000000000
  br i1 %345, label %348, label %346

346:                                              ; preds = %342
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @37, i64 0, i64 0), double %244, double %255) #13
  %347 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %347, align 8
  br label %564

348:                                              ; preds = %342
  %349 = tail call double @_php_math_round(double %344, i32 0, i32 1) #13
  %350 = fptoui double %349 to i32
  %351 = tail call i32 @_array_init(%5* %1, i32 %350) #13
  %352 = bitcast %5* %1 to %9**
  %353 = load %9*, %9** %352, align 8
  tail call void @zend_hash_real_init(%9* %353, i8 zeroext 1) #13
  %354 = load %9*, %9** %352, align 8
  %355 = getelementptr inbounds %9, %9* %354, i64 0, i32 4
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %350, 0
  %358 = fcmp ugt double %244, %255
  %359 = or i1 %357, %358
  br i1 %359, label %398, label %360

360:                                              ; preds = %348
  %361 = getelementptr inbounds %9, %9* %354, i64 0, i32 3
  %362 = load %11*, %11** %361, align 8
  %363 = zext i32 %356 to i64
  %364 = getelementptr inbounds %11, %11* %362, i64 %363
  %365 = bitcast %5* %3 to double*
  store double %244, double* %365, align 8
  %366 = bitcast %11* %364 to double*
  store double %244, double* %366, align 8
  %367 = getelementptr inbounds %11, %11* %362, i64 %363, i32 0, i32 1, i32 0
  store i32 5, i32* %367, align 8
  %368 = zext i32 %356 to i64
  %369 = getelementptr inbounds %11, %11* %362, i64 %363, i32 1
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %11, %11* %362, i64 %363, i32 2
  store %2* null, %2** %370, align 8
  %371 = add i32 %356, 1
  %372 = fadd double %244, %55
  %373 = icmp ult i32 %350, 2
  %374 = fcmp ugt double %372, %255
  %375 = or i1 %373, %374
  br i1 %375, label %398, label %376

376:                                              ; preds = %360
  %377 = load i32, i32* %264, align 8
  br label %378

378:                                              ; preds = %376, %378
  %379 = phi double [ %393, %378 ], [ %372, %376 ]
  %380 = phi i32 [ %390, %378 ], [ 1, %376 ]
  %381 = phi i32 [ %389, %378 ], [ %371, %376 ]
  %382 = phi %11* [ %383, %378 ], [ %364, %376 ]
  %383 = getelementptr inbounds %11, %11* %382, i64 1
  %384 = bitcast %11* %383 to double*
  store double %379, double* %384, align 8
  %385 = getelementptr inbounds %11, %11* %382, i64 1, i32 0, i32 1, i32 0
  store i32 %377, i32* %385, align 8
  %386 = zext i32 %381 to i64
  %387 = getelementptr inbounds %11, %11* %382, i64 1, i32 1
  store i64 %386, i64* %387, align 8
  %388 = getelementptr inbounds %11, %11* %382, i64 1, i32 2
  store %2* null, %2** %388, align 8
  %389 = add i32 %381, 1
  %390 = add nuw i32 %380, 1
  %391 = uitofp i32 %390 to double
  %392 = fmul double %55, %391
  %393 = fadd double %244, %392
  %394 = icmp uge i32 %390, %350
  %395 = fcmp ugt double %393, %255
  %396 = or i1 %394, %395
  br i1 %396, label %397, label %378

397:                                              ; preds = %378
  store double %379, double* %365, align 8
  br label %398

398:                                              ; preds = %397, %360, %348
  %399 = phi i32 [ %356, %348 ], [ %371, %360 ], [ %389, %397 ]
  store i32 %399, i32* %355, align 8
  %400 = getelementptr inbounds %9, %9* %354, i64 0, i32 5
  store i32 %399, i32* %400, align 4
  %401 = zext i32 %399 to i64
  %402 = getelementptr inbounds %9, %9* %354, i64 0, i32 8
  store i64 %401, i64* %402, align 8
  %403 = icmp eq i32 %399, 0
  %404 = sext i1 %403 to i32
  %405 = getelementptr inbounds %9, %9* %354, i64 0, i32 7
  store i32 %404, i32* %405, align 4
  br label %564

406:                                              ; preds = %335
  %407 = tail call i32 @_array_init(%5* %1, i32 0) #13
  %408 = bitcast %5* %3 to double*
  store double %244, double* %408, align 8
  %409 = bitcast %5* %1 to %9**
  %410 = load %9*, %9** %409, align 8
  %411 = call %5* @_zend_hash_next_index_insert_new(%9* %410, %5* nonnull %3) #13
  br label %564

412:                                              ; preds = %110, %230
  %413 = phi i8 [ %111, %110 ], [ %59, %230 ]
  %414 = icmp eq i8 %413, 4
  br i1 %414, label %415, label %418

415:                                              ; preds = %412
  %416 = bitcast i8*** %13 to i64*
  %417 = load i64, i64* %416, align 8
  br label %420

418:                                              ; preds = %412
  %419 = tail call i64 @_zval_get_long_func(%5* nonnull %14) #13
  br label %420

420:                                              ; preds = %415, %418
  %421 = phi i64 [ %417, %415 ], [ %419, %418 ]
  %422 = getelementptr inbounds i8**, i8*** %12, i64 5
  %423 = bitcast i8*** %422 to i8*
  %424 = load i8, i8* %423, align 8
  %425 = icmp eq i8 %424, 4
  br i1 %425, label %426, label %429

426:                                              ; preds = %420
  %427 = bitcast i8*** %15 to i64*
  %428 = load i64, i64* %427, align 8
  br label %431

429:                                              ; preds = %420
  %430 = tail call i64 @_zval_get_long_func(%5* nonnull %16) #13
  br label %431

431:                                              ; preds = %426, %429
  %432 = phi i64 [ %428, %426 ], [ %430, %429 ]
  %433 = fcmp ugt double %55, 0.000000e+00
  br i1 %433, label %434, label %562

434:                                              ; preds = %431
  %435 = fptoui double %55 to i64
  %436 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  store i32 4, i32* %436, align 8
  %437 = icmp sgt i64 %421, %432
  br i1 %437, label %438, label %496

438:                                              ; preds = %434
  %439 = sub nsw i64 %421, %432
  %440 = icmp ult i64 %439, %435
  br i1 %440, label %562, label %441

441:                                              ; preds = %438
  %442 = udiv i64 %439, %435
  %443 = icmp ugt i64 %442, 2147483646
  br i1 %443, label %444, label %446

444:                                              ; preds = %441
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @38, i64 0, i64 0), i64 %432, i64 %421) #13
  %445 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %445, align 8
  br label %564

446:                                              ; preds = %441
  %447 = trunc i64 %442 to i32
  %448 = add i32 %447, 1
  %449 = tail call i32 @_array_init(%5* %1, i32 %448) #13
  %450 = bitcast %5* %1 to %9**
  %451 = load %9*, %9** %450, align 8
  tail call void @zend_hash_real_init(%9* %451, i8 zeroext 1) #13
  %452 = load %9*, %9** %450, align 8
  %453 = getelementptr inbounds %9, %9* %452, i64 0, i32 4
  %454 = load i32, i32* %453, align 8
  %455 = icmp eq i32 %448, 0
  br i1 %455, label %488, label %456

456:                                              ; preds = %446
  %457 = getelementptr inbounds %9, %9* %452, i64 0, i32 3
  %458 = load %11*, %11** %457, align 8
  %459 = zext i32 %454 to i64
  %460 = getelementptr inbounds %11, %11* %458, i64 %459
  %461 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %462 = zext i32 %448 to i64
  store i64 %421, i64* %461, align 8
  %463 = getelementptr inbounds %11, %11* %460, i64 0, i32 0, i32 0, i32 0
  store i64 %421, i64* %463, align 8
  %464 = getelementptr inbounds %11, %11* %458, i64 %459, i32 0, i32 1, i32 0
  store i32 4, i32* %464, align 8
  %465 = zext i32 %454 to i64
  %466 = getelementptr inbounds %11, %11* %458, i64 %459, i32 1
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %11, %11* %458, i64 %459, i32 2
  store %2* null, %2** %467, align 8
  %468 = add i32 %454, 1
  %469 = icmp eq i32 %447, 0
  br i1 %469, label %488, label %470

470:                                              ; preds = %456
  %471 = load i32, i32* %436, align 8
  br label %472

472:                                              ; preds = %470, %472
  %473 = phi i64 [ %485, %472 ], [ 1, %470 ]
  %474 = phi i32 [ %484, %472 ], [ %468, %470 ]
  %475 = phi %11* [ %476, %472 ], [ %460, %470 ]
  %476 = getelementptr inbounds %11, %11* %475, i64 1
  %477 = mul i64 %473, %435
  %478 = sub i64 %421, %477
  %479 = getelementptr inbounds %11, %11* %476, i64 0, i32 0, i32 0, i32 0
  store i64 %478, i64* %479, align 8
  %480 = getelementptr inbounds %11, %11* %475, i64 1, i32 0, i32 1, i32 0
  store i32 %471, i32* %480, align 8
  %481 = zext i32 %474 to i64
  %482 = getelementptr inbounds %11, %11* %475, i64 1, i32 1
  store i64 %481, i64* %482, align 8
  %483 = getelementptr inbounds %11, %11* %475, i64 1, i32 2
  store %2* null, %2** %483, align 8
  %484 = add i32 %474, 1
  %485 = add nuw nsw i64 %473, 1
  %486 = icmp ult i64 %485, %462
  br i1 %486, label %472, label %487

487:                                              ; preds = %472
  store i64 %478, i64* %461, align 8
  br label %488

488:                                              ; preds = %487, %456, %446
  %489 = phi i32 [ %454, %446 ], [ %468, %456 ], [ %484, %487 ]
  store i32 %489, i32* %453, align 8
  %490 = getelementptr inbounds %9, %9* %452, i64 0, i32 5
  store i32 %489, i32* %490, align 4
  %491 = zext i32 %489 to i64
  %492 = getelementptr inbounds %9, %9* %452, i64 0, i32 8
  store i64 %491, i64* %492, align 8
  %493 = icmp eq i32 %489, 0
  %494 = sext i1 %493 to i32
  %495 = getelementptr inbounds %9, %9* %452, i64 0, i32 7
  store i32 %494, i32* %495, align 4
  br label %564

496:                                              ; preds = %434
  %497 = icmp sgt i64 %432, %421
  br i1 %497, label %498, label %556

498:                                              ; preds = %496
  %499 = sub nsw i64 %432, %421
  %500 = icmp ult i64 %499, %435
  br i1 %500, label %562, label %501

501:                                              ; preds = %498
  %502 = udiv i64 %499, %435
  %503 = icmp ugt i64 %502, 2147483646
  br i1 %503, label %504, label %506

504:                                              ; preds = %501
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @38, i64 0, i64 0), i64 %421, i64 %432) #13
  %505 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %505, align 8
  br label %564

506:                                              ; preds = %501
  %507 = trunc i64 %502 to i32
  %508 = add i32 %507, 1
  %509 = tail call i32 @_array_init(%5* %1, i32 %508) #13
  %510 = bitcast %5* %1 to %9**
  %511 = load %9*, %9** %510, align 8
  tail call void @zend_hash_real_init(%9* %511, i8 zeroext 1) #13
  %512 = load %9*, %9** %510, align 8
  %513 = getelementptr inbounds %9, %9* %512, i64 0, i32 4
  %514 = load i32, i32* %513, align 8
  %515 = icmp eq i32 %508, 0
  br i1 %515, label %548, label %516

516:                                              ; preds = %506
  %517 = getelementptr inbounds %9, %9* %512, i64 0, i32 3
  %518 = load %11*, %11** %517, align 8
  %519 = zext i32 %514 to i64
  %520 = getelementptr inbounds %11, %11* %518, i64 %519
  %521 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %522 = zext i32 %508 to i64
  store i64 %421, i64* %521, align 8
  %523 = getelementptr inbounds %11, %11* %520, i64 0, i32 0, i32 0, i32 0
  store i64 %421, i64* %523, align 8
  %524 = getelementptr inbounds %11, %11* %518, i64 %519, i32 0, i32 1, i32 0
  store i32 4, i32* %524, align 8
  %525 = zext i32 %514 to i64
  %526 = getelementptr inbounds %11, %11* %518, i64 %519, i32 1
  store i64 %525, i64* %526, align 8
  %527 = getelementptr inbounds %11, %11* %518, i64 %519, i32 2
  store %2* null, %2** %527, align 8
  %528 = add i32 %514, 1
  %529 = icmp eq i32 %507, 0
  br i1 %529, label %548, label %530

530:                                              ; preds = %516
  %531 = load i32, i32* %436, align 8
  br label %532

532:                                              ; preds = %530, %532
  %533 = phi i64 [ %545, %532 ], [ 1, %530 ]
  %534 = phi i32 [ %544, %532 ], [ %528, %530 ]
  %535 = phi %11* [ %536, %532 ], [ %520, %530 ]
  %536 = getelementptr inbounds %11, %11* %535, i64 1
  %537 = mul i64 %533, %435
  %538 = add i64 %537, %421
  %539 = getelementptr inbounds %11, %11* %536, i64 0, i32 0, i32 0, i32 0
  store i64 %538, i64* %539, align 8
  %540 = getelementptr inbounds %11, %11* %535, i64 1, i32 0, i32 1, i32 0
  store i32 %531, i32* %540, align 8
  %541 = zext i32 %534 to i64
  %542 = getelementptr inbounds %11, %11* %535, i64 1, i32 1
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %11, %11* %535, i64 1, i32 2
  store %2* null, %2** %543, align 8
  %544 = add i32 %534, 1
  %545 = add nuw nsw i64 %533, 1
  %546 = icmp ult i64 %545, %522
  br i1 %546, label %532, label %547

547:                                              ; preds = %532
  store i64 %538, i64* %521, align 8
  br label %548

548:                                              ; preds = %547, %516, %506
  %549 = phi i32 [ %514, %506 ], [ %528, %516 ], [ %544, %547 ]
  store i32 %549, i32* %513, align 8
  %550 = getelementptr inbounds %9, %9* %512, i64 0, i32 5
  store i32 %549, i32* %550, align 4
  %551 = zext i32 %549 to i64
  %552 = getelementptr inbounds %9, %9* %512, i64 0, i32 8
  store i64 %551, i64* %552, align 8
  %553 = icmp eq i32 %549, 0
  %554 = sext i1 %553 to i32
  %555 = getelementptr inbounds %9, %9* %512, i64 0, i32 7
  store i32 %554, i32* %555, align 4
  br label %564

556:                                              ; preds = %496
  %557 = tail call i32 @_array_init(%5* %1, i32 0) #13
  %558 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  store i64 %421, i64* %558, align 8
  %559 = bitcast %5* %1 to %9**
  %560 = load %9*, %9** %559, align 8
  %561 = call %5* @_zend_hash_next_index_insert_new(%9* %560, %5* nonnull %3) #13
  br label %564

562:                                              ; preds = %498, %438, %431, %337, %266, %171, %122
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @39, i64 0, i64 0)) #13
  %563 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %563, align 8
  br label %564

564:                                              ; preds = %212, %219, %162, %406, %398, %327, %556, %548, %488, %504, %444, %346, %275, %34, %9, %562, %261
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind readnone
declare dso_local i32 @__isinf(double) local_unnamed_addr #5

declare dso_local double @_php_math_round(double, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_shuffle(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %11, align 8
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 1, i32 1) #13
  br label %232

8:                                                ; preds = %2
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = bitcast i8*** %10 to %5*
  %12 = getelementptr inbounds i8**, i8*** %9, i64 3
  %13 = bitcast i8*** %12 to i8*
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 10
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = bitcast i8*** %10 to %59**
  %18 = load %59*, %59** %17, align 8
  %19 = getelementptr inbounds %59, %59* %18, i64 0, i32 1
  br label %20

20:                                               ; preds = %8, %16
  %21 = phi %5* [ %19, %16 ], [ %11, %8 ]
  %22 = getelementptr inbounds %5, %5* %21, i64 0, i32 1
  %23 = bitcast %7* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i64 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 16
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %20
  %29 = bitcast %5* %21 to %61**
  %30 = load %61*, %61** %29, align 8
  %31 = getelementptr inbounds %61, %61* %30, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = and i8 %25, 4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = add i32 %32, -1
  store i32 %38, i32* %31, align 4
  br label %39

39:                                               ; preds = %34, %37
  tail call void @_zval_copy_ctor_func(%5* nonnull %21) #13
  br label %40

40:                                               ; preds = %20, %28, %39
  %41 = bitcast %7* %22 to i8*
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 7
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %21) #13
  br label %232

45:                                               ; preds = %40
  %46 = bitcast %11* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46)
  %47 = bitcast %5* %21 to %9**
  %48 = load %9*, %9** %47, align 8
  %49 = getelementptr inbounds %9, %9* %48, i64 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %231, label %52

52:                                               ; preds = %45
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %9, %9* %48, i64 0, i32 1
  %55 = bitcast %10* %54 to %62*
  %56 = getelementptr inbounds %62, %62* %55, i64 0, i32 2
  %57 = load i8, i8* %56, align 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %117

59:                                               ; preds = %52
  %60 = getelementptr inbounds %9, %9* %48, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, %50
  %63 = icmp eq i32 %61, 0
  %64 = or i1 %62, %63
  br i1 %64, label %96, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %9, %9* %48, i64 0, i32 3
  br label %67

67:                                               ; preds = %89, %65
  %68 = phi i32 [ %61, %65 ], [ %90, %89 ]
  %69 = phi i32 [ %61, %65 ], [ %91, %89 ]
  %70 = phi i64 [ 0, %65 ], [ %93, %89 ]
  %71 = phi i32 [ 0, %65 ], [ %92, %89 ]
  %72 = load %11*, %11** %66, align 8
  %73 = getelementptr inbounds %11, %11* %72, i64 %70
  %74 = getelementptr inbounds %11, %11* %72, i64 %70, i32 0, i32 1
  %75 = bitcast %7* %74 to i8*
  %76 = load i8, i8* %75, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %89, label %78

78:                                               ; preds = %67
  %79 = zext i32 %71 to i64
  %80 = icmp eq i64 %70, %79
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %11, %11* %72, i64 %79
  %83 = bitcast %11* %82 to i8*
  %84 = bitcast %11* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 32, i1 false) #13
  %85 = load i32, i32* %60, align 8
  br label %86

86:                                               ; preds = %81, %78
  %87 = phi i32 [ %68, %78 ], [ %85, %81 ]
  %88 = add i32 %71, 1
  br label %89

89:                                               ; preds = %86, %67
  %90 = phi i32 [ %68, %67 ], [ %87, %86 ]
  %91 = phi i32 [ %69, %67 ], [ %87, %86 ]
  %92 = phi i32 [ %71, %67 ], [ %88, %86 ]
  %93 = add nuw nsw i64 %70, 1
  %94 = zext i32 %91 to i64
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %67, label %96

96:                                               ; preds = %89, %59
  %97 = add nsw i64 %53, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %192, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %9, %9* %48, i64 0, i32 3
  br label %101

101:                                              ; preds = %114, %99
  %102 = phi i64 [ %97, %99 ], [ %115, %114 ]
  %103 = tail call i64 @php_mt_rand_range(i64 0, i64 %102) #13
  %104 = icmp eq i64 %103, %102
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = load %11*, %11** %100, align 8
  %107 = getelementptr inbounds %11, %11* %106, i64 %102
  %108 = bitcast %11* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 %108, i64 32, i1 false) #13
  %109 = getelementptr inbounds %11, %11* %106, i64 %103
  %110 = bitcast %11* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %110, i64 32, i1 false) #13
  %111 = load %11*, %11** %100, align 8
  %112 = getelementptr inbounds %11, %11* %111, i64 %103
  %113 = bitcast %11* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* nonnull align 8 %46, i64 32, i1 false) #13
  br label %114

114:                                              ; preds = %105, %101
  %115 = add nsw i64 %102, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %192, label %101

117:                                              ; preds = %52
  %118 = tail call i32 @zend_hash_iterators_lower_pos(%9* nonnull %48, i32 0) #13
  %119 = getelementptr inbounds %9, %9* %48, i64 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %49, align 4
  %122 = icmp eq i32 %120, %121
  %123 = icmp eq i32 %120, 0
  %124 = or i1 %123, %122
  br i1 %124, label %166, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %9, %9* %48, i64 0, i32 3
  br label %127

127:                                              ; preds = %159, %125
  %128 = phi i32 [ %120, %125 ], [ %160, %159 ]
  %129 = phi i64 [ 0, %125 ], [ %163, %159 ]
  %130 = phi i32 [ %118, %125 ], [ %162, %159 ]
  %131 = phi i32 [ 0, %125 ], [ %161, %159 ]
  %132 = load %11*, %11** %126, align 8
  %133 = getelementptr inbounds %11, %11* %132, i64 %129
  %134 = getelementptr inbounds %11, %11* %132, i64 %129, i32 0, i32 1
  %135 = bitcast %7* %134 to i8*
  %136 = load i8, i8* %135, align 8
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %159, label %138

138:                                              ; preds = %127
  %139 = zext i32 %131 to i64
  %140 = icmp eq i64 %129, %139
  br i1 %140, label %155, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %11, %11* %132, i64 %139
  %143 = bitcast %11* %142 to i8*
  %144 = bitcast %11* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 32, i1 false) #13
  %145 = zext i32 %130 to i64
  %146 = icmp eq i64 %129, %145
  br i1 %146, label %147, label %155

147:                                              ; preds = %141
  %148 = load i8, i8* %56, align 2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = trunc i64 %129 to i32
  tail call void @_zend_hash_iterators_update(%9* nonnull %48, i32 %151, i32 %131) #13
  br label %152

152:                                              ; preds = %150, %147
  %153 = add i32 %130, 1
  %154 = tail call i32 @zend_hash_iterators_lower_pos(%9* nonnull %48, i32 %153) #13
  br label %155

155:                                              ; preds = %152, %141, %138
  %156 = phi i32 [ %154, %152 ], [ %130, %141 ], [ %130, %138 ]
  %157 = add i32 %131, 1
  %158 = load i32, i32* %119, align 8
  br label %159

159:                                              ; preds = %155, %127
  %160 = phi i32 [ %128, %127 ], [ %158, %155 ]
  %161 = phi i32 [ %131, %127 ], [ %157, %155 ]
  %162 = phi i32 [ %130, %127 ], [ %156, %155 ]
  %163 = add nuw nsw i64 %129, 1
  %164 = zext i32 %160 to i64
  %165 = icmp ult i64 %163, %164
  br i1 %165, label %127, label %166

166:                                              ; preds = %159, %117
  %167 = add nsw i64 %53, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %192, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %9, %9* %48, i64 0, i32 3
  br label %171

171:                                              ; preds = %189, %169
  %172 = phi i64 [ %167, %169 ], [ %190, %189 ]
  %173 = tail call i64 @php_mt_rand_range(i64 0, i64 %172) #13
  %174 = icmp eq i64 %173, %172
  br i1 %174, label %189, label %175

175:                                              ; preds = %171
  %176 = load %11*, %11** %170, align 8
  %177 = getelementptr inbounds %11, %11* %176, i64 %172
  %178 = bitcast %11* %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 %178, i64 32, i1 false) #13
  %179 = getelementptr inbounds %11, %11* %176, i64 %173
  %180 = bitcast %11* %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %180, i64 32, i1 false) #13
  %181 = load %11*, %11** %170, align 8
  %182 = getelementptr inbounds %11, %11* %181, i64 %173
  %183 = bitcast %11* %182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* nonnull align 8 %46, i64 32, i1 false) #13
  %184 = load i8, i8* %56, align 2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %189, label %186

186:                                              ; preds = %175
  %187 = trunc i64 %172 to i32
  %188 = trunc i64 %173 to i32
  tail call void @_zend_hash_iterators_update(%9* nonnull %48, i32 %188, i32 %187) #13
  br label %189

189:                                              ; preds = %186, %175, %171
  %190 = add nsw i64 %172, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %171

192:                                              ; preds = %189, %114, %166, %96
  %193 = phi i32* [ %119, %166 ], [ %60, %96 ], [ %60, %114 ], [ %119, %189 ]
  store i32 %50, i32* %193, align 8
  %194 = getelementptr inbounds %9, %9* %48, i64 0, i32 7
  store i32 0, i32* %194, align 4
  %195 = getelementptr inbounds %9, %9* %48, i64 0, i32 3
  br label %196

196:                                              ; preds = %220, %192
  %197 = phi i64 [ 0, %192 ], [ %222, %220 ]
  %198 = load %11*, %11** %195, align 8
  %199 = getelementptr inbounds %11, %11* %198, i64 %197, i32 2
  %200 = load %2*, %2** %199, align 8
  %201 = icmp eq %2* %200, null
  br i1 %201, label %220, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %2, %2* %200, i64 0, i32 0, i32 1
  %204 = bitcast %4* %203 to %63*
  %205 = getelementptr inbounds %63, %63* %204, i64 0, i32 1
  %206 = load i8, i8* %205, align 1
  %207 = and i8 %206, 2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %220

209:                                              ; preds = %202
  %210 = getelementptr inbounds %2, %2* %200, i64 0, i32 0, i32 0
  %211 = load i32, i32* %210, align 8
  %212 = add i32 %211, -1
  store i32 %212, i32* %210, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %220

214:                                              ; preds = %209
  %215 = and i8 %206, 1
  %216 = icmp eq i8 %215, 0
  %217 = bitcast %2* %200 to i8*
  br i1 %216, label %219, label %218

218:                                              ; preds = %214
  tail call void @free(i8* %217) #13
  br label %220

219:                                              ; preds = %214
  tail call void @_efree(i8* %217) #13
  br label %220

220:                                              ; preds = %219, %218, %209, %202, %196
  %221 = getelementptr inbounds %11, %11* %198, i64 %197, i32 1
  store i64 %197, i64* %221, align 8
  store %2* null, %2** %199, align 8
  %222 = add nuw nsw i64 %197, 1
  %223 = icmp eq i64 %222, %53
  br i1 %223, label %224, label %196

224:                                              ; preds = %220
  %225 = getelementptr inbounds %9, %9* %48, i64 0, i32 8
  store i64 %53, i64* %225, align 8
  %226 = getelementptr inbounds %10, %10* %54, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = and i32 %227, 4
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %224
  tail call void @zend_hash_to_packed(%9* nonnull %48) #13
  br label %231

231:                                              ; preds = %45, %224, %230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46)
  br label %232

232:                                              ; preds = %44, %7, %231
  %233 = phi i32 [ 3, %231 ], [ 2, %7 ], [ 2, %44 ]
  %234 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %233, i32* %234, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_push(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 2, i32 -1) #13
  br label %95

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8**, i8*** %10, i64 4
  %47 = bitcast i8*** %46 to %5*
  %48 = add nsw i32 %6, -1
  %49 = bitcast %5* %3 to %61**
  %50 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %51 = getelementptr inbounds %7, %7* %50, i64 0, i32 0
  %52 = bitcast %5* %22 to %9**
  %53 = sext i32 %48 to i64
  br label %57

54:                                               ; preds = %41
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %22) #13
  br label %95

55:                                               ; preds = %70
  %56 = icmp slt i64 %74, %53
  br i1 %56, label %57, label %88

57:                                               ; preds = %45, %55
  %58 = phi i64 [ 0, %45 ], [ %74, %55 ]
  %59 = getelementptr inbounds %5, %5* %47, i64 %58
  %60 = bitcast %5* %59 to %61**
  %61 = load %61*, %61** %60, align 8
  %62 = getelementptr inbounds %5, %5* %47, i64 %58, i32 1, i32 0
  %63 = load i32, i32* %62, align 8
  store %61* %61, %61** %49, align 8
  store i32 %63, i32* %51, align 8
  %64 = and i32 %63, 1024
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %61, %61* %61, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 4
  br label %70

70:                                               ; preds = %57, %66
  %71 = load %9*, %9** %52, align 8
  %72 = call %5* @_zend_hash_next_index_insert(%9* %71, %5* nonnull %3) #13
  %73 = icmp eq %5* %72, null
  %74 = add nuw nsw i64 %58, 1
  br i1 %73, label %75, label %55

75:                                               ; preds = %70
  %76 = bitcast %7* %50 to %60*
  %77 = getelementptr inbounds %60, %60* %76, i64 0, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = and i8 %78, 4
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %75
  %82 = load %61*, %61** %49, align 8
  %83 = getelementptr inbounds %61, %61* %82, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, -1
  store i32 %85, i32* %83, align 4
  br label %86

86:                                               ; preds = %75, %81
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @33, i64 0, i64 0)) #13
  %87 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %87, align 8
  br label %95

88:                                               ; preds = %55
  %89 = load %9*, %9** %52, align 8
  %90 = getelementptr inbounds %9, %9* %89, i64 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %94, align 8
  br label %95

95:                                               ; preds = %8, %54, %88, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

declare dso_local %5* @_zend_hash_next_index_insert(%9*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_pop(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %123

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = bitcast i8*** %9 to %59**
  %17 = load %59*, %59** %16, align 8
  %18 = getelementptr inbounds %59, %59* %17, i64 0, i32 1
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi %5* [ %18, %15 ], [ %10, %7 ]
  %21 = getelementptr inbounds %5, %5* %20, i64 0, i32 1
  %22 = bitcast %7* %21 to %60*
  %23 = getelementptr inbounds %60, %60* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = bitcast %5* %20 to %61**
  %29 = load %61*, %61** %28, align 8
  %30 = getelementptr inbounds %61, %61* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = and i8 %24, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = add i32 %31, -1
  store i32 %37, i32* %30, align 4
  br label %38

38:                                               ; preds = %33, %36
  tail call void @_zval_copy_ctor_func(%5* nonnull %20) #13
  br label %39

39:                                               ; preds = %19, %27, %38
  %40 = bitcast %7* %21 to i8*
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 7
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %20) #13
  br label %123

44:                                               ; preds = %39
  %45 = bitcast %5* %20 to %9**
  %46 = load %9*, %9** %45, align 8
  %47 = getelementptr inbounds %9, %9* %46, i64 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %123, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %9, %9* %46, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %9, %9* %46, i64 0, i32 3
  %54 = zext i32 %52 to i64
  br label %55

55:                                               ; preds = %71, %50
  %56 = phi i64 [ %76, %71 ], [ %54, %50 ]
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %123, label %58

58:                                               ; preds = %55
  %59 = add i64 %56, 4294967295
  %60 = load %11*, %11** %53, align 8
  %61 = and i64 %59, 4294967295
  %62 = getelementptr inbounds %11, %11* %60, i64 %61
  %63 = getelementptr inbounds %11, %11* %62, i64 0, i32 0
  %64 = getelementptr inbounds %11, %11* %60, i64 %61, i32 0, i32 1
  %65 = bitcast %7* %64 to i8*
  %66 = load i8, i8* %65, align 8
  %67 = icmp eq i8 %66, 15
  br i1 %67, label %68, label %71

68:                                               ; preds = %58
  %69 = bitcast %11* %62 to %5**
  %70 = load %5*, %5** %69, align 8
  br label %71

71:                                               ; preds = %68, %58
  %72 = phi %5* [ %70, %68 ], [ %63, %58 ]
  %73 = getelementptr inbounds %5, %5* %72, i64 0, i32 1
  %74 = bitcast %7* %73 to i8*
  %75 = load i8, i8* %74, align 8
  %76 = add nsw i64 %56, -1
  switch i8 %75, label %81 [
    i8 0, label %55
    i8 10, label %77
  ]

77:                                               ; preds = %71
  %78 = bitcast %5* %72 to %59**
  %79 = load %59*, %59** %78, align 8
  %80 = getelementptr inbounds %59, %59* %79, i64 0, i32 1
  br label %81

81:                                               ; preds = %71, %77
  %82 = phi %5* [ %80, %77 ], [ %72, %71 ]
  %83 = bitcast %5* %82 to %61**
  %84 = load %61*, %61** %83, align 8
  %85 = getelementptr inbounds %5, %5* %82, i64 0, i32 1, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = bitcast %5* %1 to %61**
  store %61* %84, %61** %87, align 8
  %88 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %86, i32* %88, align 8
  %89 = and i32 %86, 1024
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %61, %61* %84, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  br label %95

95:                                               ; preds = %81, %91
  %96 = getelementptr inbounds %11, %11* %60, i64 %61, i32 2
  %97 = load %2*, %2** %96, align 8
  %98 = icmp eq %2* %97, null
  %99 = load %9*, %9** %45, align 8
  br i1 %98, label %100, label %111

100:                                              ; preds = %95
  %101 = getelementptr inbounds %9, %9* %99, i64 0, i32 8
  %102 = load i64, i64* %101, align 8
  %103 = icmp sgt i64 %102, 0
  %104 = getelementptr inbounds %11, %11* %60, i64 %61, i32 1
  %105 = load i64, i64* %104, align 8
  br i1 %103, label %106, label %117

106:                                              ; preds = %100
  %107 = add nsw i64 %102, -1
  %108 = icmp ult i64 %105, %107
  br i1 %108, label %117, label %109

109:                                              ; preds = %106
  store i64 %107, i64* %101, align 8
  %110 = load %9*, %9** %45, align 8
  br label %117

111:                                              ; preds = %95
  %112 = icmp eq %9* %99, getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 5)
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = tail call i32 @zend_delete_global_variable(%2* nonnull %97) #13
  br label %120

115:                                              ; preds = %111
  %116 = tail call i32 @zend_hash_del(%9* %99, %2* nonnull %97) #13
  br label %120

117:                                              ; preds = %100, %106, %109
  %118 = phi %9* [ %99, %106 ], [ %110, %109 ], [ %99, %100 ]
  %119 = tail call i32 @zend_hash_index_del(%9* %118, i64 %105) #13
  br label %120

120:                                              ; preds = %113, %115, %117
  %121 = load %9*, %9** %45, align 8
  %122 = getelementptr inbounds %9, %9* %121, i64 0, i32 7
  tail call void @zend_hash_internal_pointer_reset_ex(%9* %121, i32* nonnull %122) #13
  br label %123

123:                                              ; preds = %55, %6, %44, %43, %120
  ret void
}

declare dso_local i32 @zend_delete_global_variable(%2*) local_unnamed_addr #1

declare dso_local i32 @zend_hash_del(%9*, %2*) local_unnamed_addr #1

declare dso_local i32 @zend_hash_index_del(%9*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_shift(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %279

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = getelementptr inbounds i8**, i8*** %8, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = bitcast i8*** %9 to %59**
  %17 = load %59*, %59** %16, align 8
  %18 = getelementptr inbounds %59, %59* %17, i64 0, i32 1
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi %5* [ %18, %15 ], [ %10, %7 ]
  %21 = getelementptr inbounds %5, %5* %20, i64 0, i32 1
  %22 = bitcast %7* %21 to %60*
  %23 = getelementptr inbounds %60, %60* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = bitcast %5* %20 to %61**
  %29 = load %61*, %61** %28, align 8
  %30 = getelementptr inbounds %61, %61* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = and i8 %24, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = add i32 %31, -1
  store i32 %37, i32* %30, align 4
  br label %38

38:                                               ; preds = %33, %36
  tail call void @_zval_copy_ctor_func(%5* nonnull %20) #13
  br label %39

39:                                               ; preds = %19, %27, %38
  %40 = bitcast %7* %21 to i8*
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 7
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %20) #13
  br label %279

44:                                               ; preds = %39
  %45 = bitcast %5* %20 to %9**
  %46 = load %9*, %9** %45, align 8
  %47 = getelementptr inbounds %9, %9* %46, i64 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %279, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %9, %9* %46, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %279, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %9, %9* %46, i64 0, i32 3
  %56 = load %11*, %11** %55, align 8
  br label %57

57:                                               ; preds = %54, %74
  %58 = phi i32 [ 0, %54 ], [ %75, %74 ]
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %11, %11* %56, i64 %59
  %61 = getelementptr inbounds %11, %11* %60, i64 0, i32 0
  %62 = getelementptr inbounds %11, %11* %56, i64 %59, i32 0, i32 1
  %63 = bitcast %7* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 15
  br i1 %65, label %66, label %69

66:                                               ; preds = %57
  %67 = bitcast %11* %60 to %5**
  %68 = load %5*, %5** %67, align 8
  br label %69

69:                                               ; preds = %66, %57
  %70 = phi %5* [ %68, %66 ], [ %61, %57 ]
  %71 = getelementptr inbounds %5, %5* %70, i64 0, i32 1
  %72 = bitcast %7* %71 to i8*
  %73 = load i8, i8* %72, align 8
  switch i8 %73, label %81 [
    i8 0, label %74
    i8 10, label %77
  ]

74:                                               ; preds = %69
  %75 = add i32 %58, 1
  %76 = icmp eq i32 %75, %52
  br i1 %76, label %279, label %57

77:                                               ; preds = %69
  %78 = bitcast %5* %70 to %59**
  %79 = load %59*, %59** %78, align 8
  %80 = getelementptr inbounds %59, %59* %79, i64 0, i32 1
  br label %81

81:                                               ; preds = %69, %77
  %82 = phi %5* [ %80, %77 ], [ %70, %69 ]
  %83 = zext i32 %58 to i64
  %84 = bitcast %5* %82 to %61**
  %85 = load %61*, %61** %84, align 8
  %86 = getelementptr inbounds %5, %5* %82, i64 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = bitcast %5* %1 to %61**
  store %61* %85, %61** %88, align 8
  %89 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %87, i32* %89, align 8
  %90 = and i32 %87, 1024
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %61, %61* %85, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  br label %96

96:                                               ; preds = %81, %92
  %97 = getelementptr inbounds %11, %11* %56, i64 %83, i32 2
  %98 = load %2*, %2** %97, align 8
  %99 = icmp eq %2* %98, null
  %100 = load %9*, %9** %45, align 8
  br i1 %99, label %107, label %101

101:                                              ; preds = %96
  %102 = icmp eq %9* %100, getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 5)
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = tail call i32 @zend_delete_global_variable(%2* nonnull %98) #13
  br label %111

105:                                              ; preds = %101
  %106 = tail call i32 @zend_hash_del(%9* %100, %2* nonnull %98) #13
  br label %111

107:                                              ; preds = %96
  %108 = getelementptr inbounds %11, %11* %56, i64 %83, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = tail call i32 @zend_hash_index_del(%9* %100, i64 %109) #13
  br label %111

111:                                              ; preds = %103, %105, %107
  %112 = load %9*, %9** %45, align 8
  %113 = getelementptr inbounds %9, %9* %112, i64 0, i32 1
  %114 = getelementptr inbounds %10, %10* %113, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %111
  %119 = getelementptr inbounds %9, %9* %112, i64 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %237

122:                                              ; preds = %118
  %123 = getelementptr inbounds %9, %9* %112, i64 0, i32 8
  store i64 0, i64* %123, align 8
  br label %276

124:                                              ; preds = %111
  %125 = bitcast %10* %113 to %62*
  %126 = getelementptr inbounds %62, %62* %125, i64 0, i32 2
  %127 = load i8, i8* %126, align 2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %169

129:                                              ; preds = %124
  %130 = getelementptr inbounds %9, %9* %112, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %231, label %133

133:                                              ; preds = %129, %160
  %134 = phi %9* [ %161, %160 ], [ %112, %129 ]
  %135 = phi %9* [ %162, %160 ], [ %112, %129 ]
  %136 = phi i64 [ %164, %160 ], [ 0, %129 ]
  %137 = phi i32 [ %163, %160 ], [ 0, %129 ]
  %138 = getelementptr inbounds %9, %9* %135, i64 0, i32 3
  %139 = load %11*, %11** %138, align 8
  %140 = getelementptr inbounds %11, %11* %139, i64 %136, i32 0, i32 1
  %141 = bitcast %7* %140 to i8*
  %142 = load i8, i8* %141, align 8
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %133
  %145 = zext i32 %137 to i64
  %146 = icmp eq i64 %136, %145
  br i1 %146, label %157, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %11, %11* %139, i64 %145, i32 1
  store i64 %145, i64* %148, align 8
  %149 = getelementptr inbounds %11, %11* %139, i64 %145, i32 2
  store %2* null, %2** %149, align 8
  %150 = getelementptr inbounds %11, %11* %139, i64 %136, i32 0, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %11, %11* %139, i64 %136, i32 0, i32 1, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %11, %11* %139, i64 %145, i32 0, i32 0, i32 0
  store i64 %151, i64* %154, align 8
  %155 = getelementptr inbounds %11, %11* %139, i64 %145, i32 0, i32 1, i32 0
  store i32 %153, i32* %155, align 8
  store i32 0, i32* %152, align 8
  %156 = load %9*, %9** %45, align 8
  br label %157

157:                                              ; preds = %144, %147
  %158 = phi %9* [ %134, %144 ], [ %156, %147 ]
  %159 = add i32 %137, 1
  br label %160

160:                                              ; preds = %133, %157
  %161 = phi %9* [ %134, %133 ], [ %158, %157 ]
  %162 = phi %9* [ %135, %133 ], [ %158, %157 ]
  %163 = phi i32 [ %137, %133 ], [ %159, %157 ]
  %164 = add nuw nsw i64 %136, 1
  %165 = getelementptr inbounds %9, %9* %162, i64 0, i32 4
  %166 = load i32, i32* %165, align 8
  %167 = zext i32 %166 to i64
  %168 = icmp ult i64 %164, %167
  br i1 %168, label %133, label %227

169:                                              ; preds = %124
  %170 = tail call i32 @zend_hash_iterators_lower_pos(%9* nonnull %112, i32 0) #13
  %171 = load %9*, %9** %45, align 8
  %172 = getelementptr inbounds %9, %9* %171, i64 0, i32 4
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %231, label %175

175:                                              ; preds = %169, %218
  %176 = phi %9* [ %219, %218 ], [ %171, %169 ]
  %177 = phi i64 [ %222, %218 ], [ 0, %169 ]
  %178 = phi i32 [ %221, %218 ], [ %170, %169 ]
  %179 = phi i32 [ %220, %218 ], [ 0, %169 ]
  %180 = getelementptr inbounds %9, %9* %176, i64 0, i32 3
  %181 = load %11*, %11** %180, align 8
  %182 = getelementptr inbounds %11, %11* %181, i64 %177, i32 0, i32 1
  %183 = bitcast %7* %182 to i8*
  %184 = load i8, i8* %183, align 8
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %218, label %186

186:                                              ; preds = %175
  %187 = zext i32 %179 to i64
  %188 = icmp eq i64 %177, %187
  br i1 %188, label %214, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %11, %11* %181, i64 %187, i32 1
  store i64 %187, i64* %190, align 8
  %191 = getelementptr inbounds %11, %11* %181, i64 %187, i32 2
  store %2* null, %2** %191, align 8
  %192 = getelementptr inbounds %11, %11* %181, i64 %177, i32 0, i32 0, i32 0
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %11, %11* %181, i64 %177, i32 0, i32 1, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = getelementptr inbounds %11, %11* %181, i64 %187, i32 0, i32 0, i32 0
  store i64 %193, i64* %196, align 8
  %197 = getelementptr inbounds %11, %11* %181, i64 %187, i32 0, i32 1, i32 0
  store i32 %195, i32* %197, align 8
  store i32 0, i32* %194, align 8
  %198 = zext i32 %178 to i64
  %199 = icmp eq i64 %177, %198
  br i1 %199, label %200, label %214

200:                                              ; preds = %189
  %201 = load %9*, %9** %45, align 8
  %202 = getelementptr inbounds %9, %9* %201, i64 0, i32 1
  %203 = bitcast %10* %202 to %62*
  %204 = getelementptr inbounds %62, %62* %203, i64 0, i32 2
  %205 = load i8, i8* %204, align 2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %210, label %207

207:                                              ; preds = %200
  %208 = trunc i64 %177 to i32
  tail call void @_zend_hash_iterators_update(%9* nonnull %201, i32 %208, i32 %179) #13
  %209 = load %9*, %9** %45, align 8
  br label %210

210:                                              ; preds = %200, %207
  %211 = phi %9* [ %201, %200 ], [ %209, %207 ]
  %212 = add i32 %178, 1
  %213 = tail call i32 @zend_hash_iterators_lower_pos(%9* %211, i32 %212) #13
  br label %214

214:                                              ; preds = %189, %210, %186
  %215 = phi i32 [ %178, %186 ], [ %213, %210 ], [ %178, %189 ]
  %216 = add i32 %179, 1
  %217 = load %9*, %9** %45, align 8
  br label %218

218:                                              ; preds = %175, %214
  %219 = phi %9* [ %176, %175 ], [ %217, %214 ]
  %220 = phi i32 [ %179, %175 ], [ %216, %214 ]
  %221 = phi i32 [ %178, %175 ], [ %215, %214 ]
  %222 = add nuw nsw i64 %177, 1
  %223 = getelementptr inbounds %9, %9* %219, i64 0, i32 4
  %224 = load i32, i32* %223, align 8
  %225 = zext i32 %224 to i64
  %226 = icmp ult i64 %222, %225
  br i1 %226, label %175, label %229

227:                                              ; preds = %160
  %228 = getelementptr inbounds %9, %9* %162, i64 0, i32 4
  br label %231

229:                                              ; preds = %218
  %230 = getelementptr inbounds %9, %9* %219, i64 0, i32 4
  br label %231

231:                                              ; preds = %229, %227, %129, %169
  %232 = phi i32* [ %130, %129 ], [ %172, %169 ], [ %228, %227 ], [ %230, %229 ]
  %233 = phi i32 [ 0, %129 ], [ 0, %169 ], [ %163, %227 ], [ %220, %229 ]
  store i32 %233, i32* %232, align 8
  %234 = zext i32 %233 to i64
  %235 = load %9*, %9** %45, align 8
  %236 = getelementptr inbounds %9, %9* %235, i64 0, i32 8
  store i64 %234, i64* %236, align 8
  br label %276

237:                                              ; preds = %118, %260
  %238 = phi %9* [ %261, %260 ], [ %112, %118 ]
  %239 = phi i64 [ %264, %260 ], [ 0, %118 ]
  %240 = phi i32 [ %263, %260 ], [ 0, %118 ]
  %241 = phi i32 [ %262, %260 ], [ 0, %118 ]
  %242 = getelementptr inbounds %9, %9* %238, i64 0, i32 3
  %243 = load %11*, %11** %242, align 8
  %244 = getelementptr inbounds %11, %11* %243, i64 %239, i32 0, i32 1
  %245 = bitcast %7* %244 to i8*
  %246 = load i8, i8* %245, align 8
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %260, label %248

248:                                              ; preds = %237
  %249 = getelementptr inbounds %11, %11* %243, i64 %239, i32 2
  %250 = load %2*, %2** %249, align 8
  %251 = icmp eq %2* %250, null
  br i1 %251, label %252, label %260

252:                                              ; preds = %248
  %253 = getelementptr inbounds %11, %11* %243, i64 %239, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = zext i32 %241 to i64
  %256 = icmp eq i64 %254, %255
  %257 = add i32 %241, 1
  br i1 %256, label %260, label %258

258:                                              ; preds = %252
  store i64 %255, i64* %253, align 8
  %259 = load %9*, %9** %45, align 8
  br label %260

260:                                              ; preds = %252, %248, %258, %237
  %261 = phi %9* [ %238, %237 ], [ %259, %258 ], [ %238, %252 ], [ %238, %248 ]
  %262 = phi i32 [ %241, %237 ], [ %257, %258 ], [ %257, %252 ], [ %241, %248 ]
  %263 = phi i32 [ %240, %237 ], [ 1, %258 ], [ %240, %252 ], [ %240, %248 ]
  %264 = add nuw nsw i64 %239, 1
  %265 = getelementptr inbounds %9, %9* %261, i64 0, i32 4
  %266 = load i32, i32* %265, align 8
  %267 = zext i32 %266 to i64
  %268 = icmp ult i64 %264, %267
  br i1 %268, label %237, label %269

269:                                              ; preds = %260
  %270 = zext i32 %262 to i64
  %271 = getelementptr inbounds %9, %9* %261, i64 0, i32 8
  store i64 %270, i64* %271, align 8
  %272 = icmp eq i32 %263, 0
  br i1 %272, label %276, label %273

273:                                              ; preds = %269
  %274 = load %9*, %9** %45, align 8
  %275 = tail call i32 @zend_hash_rehash(%9* %274) #13
  br label %276

276:                                              ; preds = %122, %273, %269, %231
  %277 = load %9*, %9** %45, align 8
  %278 = getelementptr inbounds %9, %9* %277, i64 0, i32 7
  tail call void @zend_hash_internal_pointer_reset_ex(%9* %277, i32* nonnull %278) #13
  br label %279

279:                                              ; preds = %74, %50, %6, %44, %43, %276
  ret void
}

declare dso_local i32 @zend_hash_iterators_lower_pos(%9*, i32) local_unnamed_addr #1

declare dso_local i32 @zend_hash_rehash(%9*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_unshift(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %9, align 8
  %4 = bitcast %9* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 2, i32 -1) #13
  br label %221

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = bitcast i8*** %11 to %59**
  %19 = load %59*, %59** %18, align 8
  %20 = getelementptr inbounds %59, %59* %19, i64 0, i32 1
  br label %21

21:                                               ; preds = %9, %17
  %22 = phi %5* [ %20, %17 ], [ %12, %9 ]
  %23 = getelementptr inbounds %5, %5* %22, i64 0, i32 1
  %24 = bitcast %7* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = bitcast %5* %22 to %61**
  %31 = load %61*, %61** %30, align 8
  %32 = getelementptr inbounds %61, %61* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = and i8 %26, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = add i32 %33, -1
  store i32 %39, i32* %32, align 4
  br label %40

40:                                               ; preds = %35, %38
  tail call void @_zval_copy_ctor_func(%5* nonnull %22) #13
  br label %41

41:                                               ; preds = %21, %29, %40
  %42 = bitcast %7* %23 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %22) #13
  br label %221

46:                                               ; preds = %41
  %47 = add i32 %6, -1
  %48 = getelementptr inbounds i8**, i8*** %10, i64 4
  %49 = bitcast i8*** %48 to %5*
  %50 = bitcast %5* %22 to %9**
  %51 = load %9*, %9** %50, align 8
  %52 = getelementptr inbounds %9, %9* %51, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %47
  call void @_zend_hash_init(%9* nonnull %3, i32 %54, void (%5*)* nonnull @_zval_ptr_dtor, i8 zeroext 0) #13
  %55 = zext i32 %47 to i64
  br label %56

56:                                               ; preds = %71, %46
  %57 = phi i64 [ 0, %46 ], [ %73, %71 ]
  %58 = getelementptr inbounds %5, %5* %49, i64 %57
  %59 = getelementptr inbounds %5, %5* %49, i64 %57, i32 1
  %60 = bitcast %7* %59 to %60*
  %61 = getelementptr inbounds %60, %60* %60, i64 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %56
  %66 = bitcast %5* %58 to %61**
  %67 = load %61*, %61** %66, align 8
  %68 = getelementptr inbounds %61, %61* %67, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 4
  br label %71

71:                                               ; preds = %56, %65
  %72 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %3, %5* %58) #13
  %73 = add nuw nsw i64 %57, 1
  %74 = icmp eq i64 %73, %55
  br i1 %74, label %75, label %56

75:                                               ; preds = %71
  %76 = load %9*, %9** %50, align 8
  %77 = getelementptr inbounds %9, %9* %76, i64 0, i32 1
  %78 = bitcast %10* %77 to %62*
  %79 = getelementptr inbounds %62, %62* %78, i64 0, i32 2
  %80 = load i8, i8* %79, align 2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %108

82:                                               ; preds = %75
  %83 = getelementptr inbounds %9, %9* %76, i64 0, i32 3
  %84 = load %11*, %11** %83, align 8
  %85 = getelementptr inbounds %9, %9* %76, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %11, %11* %84, i64 %87
  %89 = icmp eq i32 %86, 0
  br i1 %89, label %167, label %90

90:                                               ; preds = %82, %105
  %91 = phi %11* [ %106, %105 ], [ %84, %82 ]
  %92 = getelementptr inbounds %11, %11* %91, i64 0, i32 0
  %93 = getelementptr inbounds %11, %11* %91, i64 0, i32 0, i32 1
  %94 = bitcast %7* %93 to i8*
  %95 = load i8, i8* %94, align 8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %11, %11* %91, i64 0, i32 2
  %99 = load %2*, %2** %98, align 8
  %100 = icmp eq %2* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = call %5* @_zend_hash_add_new(%9* nonnull %3, %2* nonnull %99, %5* nonnull %92) #13
  br label %105

103:                                              ; preds = %97
  %104 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %3, %5* nonnull %92) #13
  br label %105

105:                                              ; preds = %101, %103, %90
  %106 = getelementptr inbounds %11, %11* %91, i64 1
  %107 = icmp eq %11* %106, %88
  br i1 %107, label %167, label %90

108:                                              ; preds = %75
  %109 = call i32 @zend_hash_iterators_lower_pos(%9* %76, i32 0) #13
  %110 = load %9*, %9** %50, align 8
  %111 = getelementptr inbounds %9, %9* %110, i64 0, i32 3
  %112 = load %11*, %11** %111, align 8
  %113 = getelementptr inbounds %9, %9* %110, i64 0, i32 4
  %114 = load i32, i32* %113, align 8
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %11, %11* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %167, label %118

118:                                              ; preds = %108
  %119 = add i32 %6, -1
  br label %120

120:                                              ; preds = %118, %162
  %121 = phi %11* [ %165, %162 ], [ %112, %118 ]
  %122 = phi i32 [ %164, %162 ], [ %109, %118 ]
  %123 = phi i32 [ %163, %162 ], [ %119, %118 ]
  %124 = getelementptr inbounds %11, %11* %121, i64 0, i32 0
  %125 = getelementptr inbounds %11, %11* %121, i64 0, i32 0, i32 1
  %126 = bitcast %7* %125 to i8*
  %127 = load i8, i8* %126, align 8
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %162, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %11, %11* %121, i64 0, i32 2
  %131 = load %2*, %2** %130, align 8
  %132 = icmp eq %2* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = call %5* @_zend_hash_add_new(%9* nonnull %3, %2* nonnull %131, %5* nonnull %124) #13
  br label %137

135:                                              ; preds = %129
  %136 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %3, %5* nonnull %124) #13
  br label %137

137:                                              ; preds = %135, %133
  %138 = load %9*, %9** %50, align 8
  %139 = getelementptr inbounds %9, %9* %138, i64 0, i32 3
  %140 = bitcast %11** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = ptrtoint %11* %121 to i64
  %143 = sub i64 %142, %141
  %144 = lshr exact i64 %143, 5
  %145 = trunc i64 %144 to i32
  %146 = icmp eq i32 %122, %145
  br i1 %146, label %147, label %159

147:                                              ; preds = %137
  %148 = getelementptr inbounds %9, %9* %138, i64 0, i32 1
  %149 = bitcast %10* %148 to %62*
  %150 = getelementptr inbounds %62, %62* %149, i64 0, i32 2
  %151 = load i8, i8* %150, align 2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  call void @_zend_hash_iterators_update(%9* nonnull %138, i32 %122, i32 %123) #13
  %154 = load %9*, %9** %50, align 8
  br label %155

155:                                              ; preds = %147, %153
  %156 = phi %9* [ %138, %147 ], [ %154, %153 ]
  %157 = add i32 %122, 1
  %158 = call i32 @zend_hash_iterators_lower_pos(%9* %156, i32 %157) #13
  br label %159

159:                                              ; preds = %155, %137
  %160 = phi i32 [ %158, %155 ], [ %122, %137 ]
  %161 = add i32 %123, 1
  br label %162

162:                                              ; preds = %120, %159
  %163 = phi i32 [ %161, %159 ], [ %123, %120 ]
  %164 = phi i32 [ %160, %159 ], [ %122, %120 ]
  %165 = getelementptr inbounds %11, %11* %121, i64 1
  %166 = icmp eq %11* %165, %116
  br i1 %166, label %167, label %120

167:                                              ; preds = %162, %105, %108, %82
  %168 = load %9*, %9** %50, align 8
  %169 = getelementptr inbounds %9, %9* %168, i64 0, i32 1
  %170 = bitcast %10* %169 to %62*
  %171 = getelementptr inbounds %62, %62* %170, i64 0, i32 2
  store i8 0, i8* %171, align 2
  %172 = load %9*, %9** %50, align 8
  %173 = getelementptr inbounds %9, %9* %172, i64 0, i32 9
  store void (%5*)* null, void (%5*)** %173, align 8
  %174 = load %9*, %9** %50, align 8
  call void @zend_hash_destroy(%9* %174) #13
  %175 = getelementptr inbounds %9, %9* %3, i64 0, i32 1
  %176 = bitcast %10* %175 to i8*
  %177 = load i8, i8* %176, align 8
  %178 = load %9*, %9** %50, align 8
  %179 = getelementptr inbounds %9, %9* %178, i64 0, i32 1
  %180 = bitcast %10* %179 to i8*
  store i8 %177, i8* %180, align 8
  %181 = getelementptr inbounds %9, %9* %3, i64 0, i32 6
  %182 = load i32, i32* %181, align 8
  %183 = load %9*, %9** %50, align 8
  %184 = getelementptr inbounds %9, %9* %183, i64 0, i32 6
  store i32 %182, i32* %184, align 8
  %185 = getelementptr inbounds %9, %9* %3, i64 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = load %9*, %9** %50, align 8
  %188 = getelementptr inbounds %9, %9* %187, i64 0, i32 2
  store i32 %186, i32* %188, align 4
  %189 = getelementptr inbounds %9, %9* %3, i64 0, i32 4
  %190 = load i32, i32* %189, align 8
  %191 = load %9*, %9** %50, align 8
  %192 = getelementptr inbounds %9, %9* %191, i64 0, i32 4
  store i32 %190, i32* %192, align 8
  %193 = getelementptr inbounds %9, %9* %3, i64 0, i32 5
  %194 = load i32, i32* %193, align 4
  %195 = load %9*, %9** %50, align 8
  %196 = getelementptr inbounds %9, %9* %195, i64 0, i32 5
  store i32 %194, i32* %196, align 4
  %197 = getelementptr inbounds %9, %9* %3, i64 0, i32 8
  %198 = load i64, i64* %197, align 8
  %199 = load %9*, %9** %50, align 8
  %200 = getelementptr inbounds %9, %9* %199, i64 0, i32 8
  store i64 %198, i64* %200, align 8
  %201 = getelementptr inbounds %9, %9* %3, i64 0, i32 3
  %202 = bitcast %11** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = load %9*, %9** %50, align 8
  %205 = getelementptr inbounds %9, %9* %204, i64 0, i32 3
  %206 = bitcast %11** %205 to i64*
  store i64 %203, i64* %206, align 8
  %207 = getelementptr inbounds %9, %9* %3, i64 0, i32 9
  %208 = bitcast void (%5*)** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = load %9*, %9** %50, align 8
  %211 = getelementptr inbounds %9, %9* %210, i64 0, i32 9
  %212 = bitcast void (%5*)** %211 to i64*
  store i64 %209, i64* %212, align 8
  %213 = load %9*, %9** %50, align 8
  %214 = getelementptr inbounds %9, %9* %213, i64 0, i32 7
  call void @zend_hash_internal_pointer_reset_ex(%9* %213, i32* nonnull %214) #13
  %215 = load %9*, %9** %50, align 8
  %216 = getelementptr inbounds %9, %9* %215, i64 0, i32 5
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %220, align 8
  br label %221

221:                                              ; preds = %8, %45, %167
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

declare dso_local void @_zend_hash_init(%9*, i32, void (%5*)*, i8 zeroext) local_unnamed_addr #1

declare dso_local %5* @_zend_hash_add_new(%9*, %2*, %5*) local_unnamed_addr #1

declare dso_local void @zend_hash_destroy(%9*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_splice(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %9, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i64 0, i64* %5, align 8
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -2
  %11 = icmp ugt i32 %10, 2
  br i1 %11, label %81, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %14 = getelementptr inbounds i8**, i8*** %13, i64 2
  %15 = bitcast i8*** %14 to %5*
  %16 = getelementptr inbounds i8**, i8*** %13, i64 3
  %17 = bitcast i8*** %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 10
  br i1 %19, label %20, label %24

20:                                               ; preds = %12
  %21 = bitcast i8*** %14 to %59**
  %22 = load %59*, %59** %21, align 8
  %23 = getelementptr inbounds %59, %59* %22, i64 0, i32 1
  br label %24

24:                                               ; preds = %12, %20
  %25 = phi %5* [ %23, %20 ], [ %15, %12 ]
  %26 = getelementptr inbounds %5, %5* %25, i64 0, i32 1
  %27 = bitcast %7* %26 to %60*
  %28 = getelementptr inbounds %60, %60* %27, i64 0, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = and i8 %29, 16
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %24
  %33 = bitcast %5* %25 to %61**
  %34 = load %61*, %61** %33, align 8
  %35 = getelementptr inbounds %61, %61* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = and i8 %29, 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = add i32 %36, -1
  store i32 %42, i32* %35, align 4
  br label %43

43:                                               ; preds = %38, %41
  tail call void @_zval_copy_ctor_func(%5* nonnull %25) #13
  br label %44

44:                                               ; preds = %24, %32, %43
  %45 = bitcast %7* %26 to i8*
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 7
  br i1 %47, label %48, label %82

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8**, i8*** %13, i64 4
  %50 = bitcast i8*** %49 to %5*
  %51 = getelementptr inbounds i8**, i8*** %13, i64 5
  %52 = bitcast i8*** %51 to i8*
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %53, 4
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = bitcast i8*** %49 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %4, align 8
  br label %61

58:                                               ; preds = %48
  %59 = call i32 @zend_parse_arg_long_slow(%5* nonnull %50, i64* nonnull %4) #13
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %82, label %61

61:                                               ; preds = %55, %58
  %62 = icmp slt i32 %9, 3
  br i1 %62, label %86, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds i8**, i8*** %13, i64 6
  %65 = bitcast i8*** %64 to %5*
  %66 = getelementptr inbounds i8**, i8*** %13, i64 7
  %67 = bitcast i8*** %66 to i8*
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, 4
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = bitcast i8*** %64 to i64*
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %5, align 8
  br label %76

73:                                               ; preds = %63
  %74 = call i32 @zend_parse_arg_long_slow(%5* nonnull %65, i64* nonnull %5) #13
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %70, %73
  %77 = icmp slt i32 %9, 4
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds i8**, i8*** %13, i64 8
  %80 = bitcast i8*** %79 to %5*
  br label %86

81:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %9, i32 2, i32 4) #13
  br label %505

82:                                               ; preds = %44, %58, %73
  %83 = phi %5* [ %65, %73 ], [ %50, %58 ], [ %25, %44 ]
  %84 = phi i32 [ 0, %73 ], [ 0, %58 ], [ 3, %44 ]
  %85 = phi i32 [ 3, %73 ], [ 2, %58 ], [ 1, %44 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %85, i32 %84, %5* %83) #13
  br label %505

86:                                               ; preds = %61, %76, %78
  %87 = phi %5* [ %80, %78 ], [ null, %76 ], [ null, %61 ]
  %88 = bitcast %5* %25 to %9**
  %89 = load %9*, %9** %88, align 8
  %90 = getelementptr inbounds %9, %9* %89, i64 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* %8, align 4
  %93 = icmp ult i32 %92, 3
  br i1 %93, label %94, label %96

94:                                               ; preds = %86
  %95 = sext i32 %91 to i64
  store i64 %95, i64* %5, align 8
  br label %104

96:                                               ; preds = %86
  %97 = icmp eq i32 %92, 4
  br i1 %97, label %98, label %104

98:                                               ; preds = %96
  %99 = getelementptr inbounds %5, %5* %87, i64 0, i32 1
  %100 = bitcast %7* %99 to i8*
  %101 = load i8, i8* %100, align 8
  %102 = icmp eq i8 %101, 7
  br i1 %102, label %104, label %103

103:                                              ; preds = %98
  call void @convert_to_array(%5* nonnull %87) #13
  br label %104

104:                                              ; preds = %94, %98, %103, %96
  %105 = getelementptr inbounds %24, %24* %0, i64 0, i32 5
  %106 = load %24*, %24** %105, align 8
  %107 = icmp eq %24* %106, null
  br i1 %107, label %122, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %24, %24* %106, i64 0, i32 3
  %110 = bitcast %12** %109 to %64**
  %111 = load %64*, %64** %110, align 8
  %112 = getelementptr inbounds %64, %64* %111, i64 0, i32 0
  %113 = load i8, i8* %112, align 8
  %114 = and i8 %113, 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %108
  %117 = getelementptr inbounds %24, %24* %106, i64 0, i32 0
  %118 = load %15*, %15** %117, align 8
  %119 = getelementptr inbounds %15, %15* %118, i64 0, i32 9
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 8
  br i1 %121, label %154, label %122

122:                                              ; preds = %116, %104, %108
  %123 = load i64, i64* %5, align 8
  %124 = load i64, i64* %4, align 8
  %125 = sext i32 %91 to i64
  %126 = icmp sgt i64 %124, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  store i64 %125, i64* %4, align 8
  br label %134

128:                                              ; preds = %122
  %129 = icmp slt i64 %124, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %128
  %131 = add nsw i64 %124, %125
  %132 = icmp sgt i64 %131, 0
  %133 = select i1 %132, i64 %131, i64 0
  store i64 %133, i64* %4, align 8
  br label %134

134:                                              ; preds = %130, %128, %127
  %135 = phi i64 [ %133, %130 ], [ %124, %128 ], [ %125, %127 ]
  %136 = icmp slt i64 %123, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = add i64 %123, %125
  %139 = sub i64 %138, %135
  br label %146

140:                                              ; preds = %134
  %141 = add i64 %135, %123
  %142 = zext i32 %91 to i64
  %143 = icmp ugt i64 %141, %142
  %144 = sub nsw i64 %125, %135
  %145 = select i1 %143, i64 %144, i64 %123
  br label %146

146:                                              ; preds = %140, %137
  %147 = phi i64 [ %139, %137 ], [ %145, %140 ]
  %148 = icmp sgt i64 %147, 0
  %149 = select i1 %148, i64 %147, i64 0
  %150 = trunc i64 %149 to i32
  %151 = call i32 @_array_init(%5* %1, i32 %150) #13
  %152 = bitcast %5* %1 to %9**
  %153 = load %9*, %9** %152, align 8
  br label %154

154:                                              ; preds = %116, %146
  %155 = phi %9* [ %153, %146 ], [ null, %116 ]
  %156 = load %9*, %9** %88, align 8
  %157 = load i64, i64* %4, align 8
  %158 = load i64, i64* %5, align 8
  %159 = icmp eq %5* %87, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = bitcast %5* %87 to %9**
  %162 = load %9*, %9** %161, align 8
  br label %163

163:                                              ; preds = %154, %160
  %164 = phi %9* [ %162, %160 ], [ null, %154 ]
  %165 = bitcast %9* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %165) #13
  %166 = call i32 @zend_hash_iterators_lower_pos(%9* %156, i32 0) #13
  %167 = getelementptr inbounds %9, %9* %156, i64 0, i32 5
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = icmp sgt i64 %157, %169
  br i1 %170, label %177, label %171

171:                                              ; preds = %163
  %172 = icmp slt i64 %157, 0
  br i1 %172, label %173, label %177

173:                                              ; preds = %171
  %174 = add nsw i64 %157, %169
  %175 = icmp sgt i64 %174, 0
  %176 = select i1 %175, i64 %174, i64 0
  br label %177

177:                                              ; preds = %173, %171, %163
  %178 = phi i64 [ %176, %173 ], [ %157, %171 ], [ %169, %163 ]
  %179 = icmp slt i64 %158, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %177
  %181 = add i64 %158, %169
  %182 = sub i64 %181, %178
  br label %190

183:                                              ; preds = %177
  %184 = trunc i64 %178 to i32
  %185 = trunc i64 %158 to i32
  %186 = add i32 %184, %185
  %187 = icmp ugt i32 %186, %168
  %188 = sub nsw i64 %169, %178
  %189 = select i1 %187, i64 %188, i64 %158
  br label %190

190:                                              ; preds = %183, %180
  %191 = phi i64 [ %182, %180 ], [ %189, %183 ]
  %192 = icmp sgt i64 %191, 0
  %193 = sub nsw i64 %169, %191
  %194 = select i1 %192, i64 %193, i64 0
  %195 = icmp ne %9* %164, null
  br i1 %195, label %196, label %200

196:                                              ; preds = %190
  %197 = getelementptr inbounds %9, %9* %164, i64 0, i32 5
  %198 = load i32, i32* %197, align 4
  %199 = zext i32 %198 to i64
  br label %200

200:                                              ; preds = %196, %190
  %201 = phi i64 [ %199, %196 ], [ 0, %190 ]
  %202 = add nsw i64 %201, %194
  %203 = trunc i64 %202 to i32
  call void @_zend_hash_init(%9* nonnull %3, i32 %203, void (%5*)* nonnull @_zval_ptr_dtor, i8 zeroext 0) #13
  %204 = getelementptr inbounds %9, %9* %156, i64 0, i32 4
  %205 = icmp sgt i64 %178, 0
  br i1 %205, label %206, label %260

206:                                              ; preds = %200
  %207 = getelementptr inbounds %9, %9* %156, i64 0, i32 3
  %208 = getelementptr inbounds %9, %9* %156, i64 0, i32 1
  %209 = bitcast %10* %208 to %62*
  %210 = getelementptr inbounds %62, %62* %209, i64 0, i32 2
  br label %211

211:                                              ; preds = %250, %206
  %212 = phi i64 [ 0, %206 ], [ %254, %250 ]
  %213 = phi i32 [ %166, %206 ], [ %252, %250 ]
  %214 = phi i64 [ 0, %206 ], [ %251, %250 ]
  %215 = load i32, i32* %204, align 8
  %216 = zext i32 %215 to i64
  %217 = icmp ult i64 %212, %216
  %218 = trunc i64 %212 to i32
  br i1 %217, label %219, label %258

219:                                              ; preds = %211
  %220 = load %11*, %11** %207, align 8
  %221 = getelementptr inbounds %11, %11* %220, i64 %212, i32 0
  %222 = getelementptr inbounds %11, %11* %220, i64 %212, i32 0, i32 1
  %223 = bitcast %7* %222 to i8*
  %224 = load i8, i8* %223, align 8
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %250, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds %11, %11* %220, i64 %212, i32 2
  %228 = load %2*, %2** %227, align 8
  %229 = icmp eq %2* %228, null
  br i1 %229, label %230, label %232

230:                                              ; preds = %226
  %231 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %3, %5* nonnull %221) #13
  br label %234

232:                                              ; preds = %226
  %233 = call %5* @_zend_hash_add_new(%9* nonnull %3, %2* nonnull %228, %5* nonnull %221) #13
  br label %234

234:                                              ; preds = %232, %230
  %235 = zext i32 %213 to i64
  %236 = icmp eq i64 %212, %235
  br i1 %236, label %237, label %247

237:                                              ; preds = %234
  %238 = icmp eq i64 %214, %212
  br i1 %238, label %244, label %239

239:                                              ; preds = %237
  %240 = load i8, i8* %210, align 2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %239
  %243 = trunc i64 %214 to i32
  call void @_zend_hash_iterators_update(%9* nonnull %156, i32 %218, i32 %243) #13
  br label %244

244:                                              ; preds = %242, %239, %237
  %245 = add i32 %213, 1
  %246 = call i32 @zend_hash_iterators_lower_pos(%9* nonnull %156, i32 %245) #13
  br label %247

247:                                              ; preds = %244, %234
  %248 = phi i32 [ %246, %244 ], [ %213, %234 ]
  %249 = add nsw i64 %214, 1
  br label %250

250:                                              ; preds = %247, %219
  %251 = phi i64 [ %214, %219 ], [ %249, %247 ]
  %252 = phi i32 [ %213, %219 ], [ %248, %247 ]
  %253 = icmp slt i64 %251, %178
  %254 = add nuw nsw i64 %212, 1
  br i1 %253, label %211, label %255

255:                                              ; preds = %250
  %256 = trunc i64 %212 to i32
  %257 = add i32 %256, 1
  br label %260

258:                                              ; preds = %211
  %259 = trunc i64 %212 to i32
  br label %260

260:                                              ; preds = %258, %255, %200
  %261 = phi i64 [ 0, %200 ], [ %251, %255 ], [ %214, %258 ]
  %262 = phi i32 [ 0, %200 ], [ %257, %255 ], [ %259, %258 ]
  %263 = phi i32 [ %166, %200 ], [ %252, %255 ], [ %213, %258 ]
  %264 = icmp eq %9* %155, null
  br i1 %264, label %318, label %265

265:                                              ; preds = %260
  %266 = add nsw i64 %191, %178
  %267 = icmp slt i64 %261, %266
  br i1 %267, label %268, label %369

268:                                              ; preds = %265
  %269 = getelementptr inbounds %9, %9* %156, i64 0, i32 3
  %270 = icmp eq %9* %156, getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 5)
  %271 = zext i32 %262 to i64
  br label %272

272:                                              ; preds = %314, %268
  %273 = phi i64 [ %271, %268 ], [ %317, %314 ]
  %274 = phi i64 [ %261, %268 ], [ %315, %314 ]
  %275 = load i32, i32* %204, align 8
  %276 = zext i32 %275 to i64
  %277 = icmp ult i64 %273, %276
  br i1 %277, label %278, label %364

278:                                              ; preds = %272
  %279 = load %11*, %11** %269, align 8
  %280 = getelementptr inbounds %11, %11* %279, i64 %273, i32 0
  %281 = getelementptr inbounds %11, %11* %279, i64 %273, i32 0, i32 1
  %282 = bitcast %7* %281 to i8*
  %283 = load i8, i8* %282, align 8
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %314, label %285

285:                                              ; preds = %278
  %286 = add nsw i64 %274, 1
  %287 = bitcast %7* %281 to %60*
  %288 = getelementptr inbounds %60, %60* %287, i64 0, i32 1
  %289 = load i8, i8* %288, align 1
  %290 = and i8 %289, 4
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %285
  %293 = bitcast %5* %280 to %61**
  %294 = load %61*, %61** %293, align 8
  %295 = getelementptr inbounds %61, %61* %294, i64 0, i32 0, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = add i32 %296, 1
  store i32 %297, i32* %295, align 4
  br label %298

298:                                              ; preds = %292, %285
  %299 = getelementptr inbounds %11, %11* %279, i64 %273, i32 2
  %300 = load %2*, %2** %299, align 8
  %301 = icmp eq %2* %300, null
  br i1 %301, label %302, label %307

302:                                              ; preds = %298
  %303 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %155, %5* nonnull %280) #13
  %304 = getelementptr inbounds %11, %11* %279, i64 %273, i32 1
  %305 = load i64, i64* %304, align 8
  %306 = call i32 @zend_hash_index_del(%9* nonnull %156, i64 %305) #13
  br label %314

307:                                              ; preds = %298
  %308 = call %5* @_zend_hash_add_new(%9* nonnull %155, %2* nonnull %300, %5* nonnull %280) #13
  %309 = load %2*, %2** %299, align 8
  br i1 %270, label %310, label %312

310:                                              ; preds = %307
  %311 = call i32 @zend_delete_global_variable(%2* %309) #13
  br label %314

312:                                              ; preds = %307
  %313 = call i32 @zend_hash_del(%9* %156, %2* %309) #13
  br label %314

314:                                              ; preds = %312, %310, %302, %278
  %315 = phi i64 [ %274, %278 ], [ %286, %302 ], [ %286, %310 ], [ %286, %312 ]
  %316 = icmp slt i64 %315, %266
  %317 = add nuw nsw i64 %273, 1
  br i1 %316, label %272, label %366

318:                                              ; preds = %260
  %319 = shl i64 %261, 32
  %320 = ashr exact i64 %319, 32
  %321 = add nsw i64 %191, %178
  %322 = icmp sgt i64 %321, %320
  br i1 %322, label %323, label %369

323:                                              ; preds = %318
  %324 = trunc i64 %261 to i32
  %325 = getelementptr inbounds %9, %9* %156, i64 0, i32 3
  %326 = icmp eq %9* %156, getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 5)
  %327 = zext i32 %262 to i64
  br label %328

328:                                              ; preds = %354, %323
  %329 = phi i64 [ %327, %323 ], [ %358, %354 ]
  %330 = phi i32 [ %324, %323 ], [ %355, %354 ]
  %331 = load i32, i32* %204, align 8
  %332 = zext i32 %331 to i64
  %333 = icmp ult i64 %329, %332
  br i1 %333, label %334, label %359

334:                                              ; preds = %328
  %335 = load %11*, %11** %325, align 8
  %336 = getelementptr inbounds %11, %11* %335, i64 %329, i32 0, i32 1
  %337 = bitcast %7* %336 to i8*
  %338 = load i8, i8* %337, align 8
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %334
  %341 = add nsw i32 %330, 1
  %342 = getelementptr inbounds %11, %11* %335, i64 %329, i32 2
  %343 = load %2*, %2** %342, align 8
  %344 = icmp eq %2* %343, null
  br i1 %344, label %345, label %349

345:                                              ; preds = %340
  %346 = getelementptr inbounds %11, %11* %335, i64 %329, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = call i32 @zend_hash_index_del(%9* nonnull %156, i64 %347) #13
  br label %354

349:                                              ; preds = %340
  br i1 %326, label %350, label %352

350:                                              ; preds = %349
  %351 = call i32 @zend_delete_global_variable(%2* nonnull %343) #13
  br label %354

352:                                              ; preds = %349
  %353 = call i32 @zend_hash_del(%9* %156, %2* nonnull %343) #13
  br label %354

354:                                              ; preds = %352, %350, %345, %334
  %355 = phi i32 [ %330, %334 ], [ %341, %345 ], [ %341, %350 ], [ %341, %352 ]
  %356 = sext i32 %355 to i64
  %357 = icmp sgt i64 %321, %356
  %358 = add nuw nsw i64 %329, 1
  br i1 %357, label %328, label %361

359:                                              ; preds = %328
  %360 = trunc i64 %329 to i32
  br label %369

361:                                              ; preds = %354
  %362 = trunc i64 %329 to i32
  %363 = add i32 %362, 1
  br label %369

364:                                              ; preds = %272
  %365 = trunc i64 %273 to i32
  br label %369

366:                                              ; preds = %314
  %367 = trunc i64 %273 to i32
  %368 = add i32 %367, 1
  br label %369

369:                                              ; preds = %366, %364, %361, %359, %318, %265
  %370 = phi i64 [ %261, %318 ], [ %261, %265 ], [ %261, %361 ], [ %261, %359 ], [ %274, %364 ], [ %315, %366 ]
  %371 = phi i32 [ %262, %318 ], [ %262, %265 ], [ %363, %361 ], [ %360, %359 ], [ %365, %364 ], [ %368, %366 ]
  %372 = call i32 @zend_hash_iterators_lower_pos(%9* %156, i32 %263) #13
  br i1 %195, label %373, label %417

373:                                              ; preds = %369
  %374 = getelementptr inbounds %9, %9* %164, i64 0, i32 3
  %375 = load %11*, %11** %374, align 8
  %376 = getelementptr inbounds %9, %9* %164, i64 0, i32 4
  %377 = load i32, i32* %376, align 8
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds %11, %11* %375, i64 %378
  %380 = icmp eq i32 %377, 0
  br i1 %380, label %417, label %381

381:                                              ; preds = %373, %413
  %382 = phi %11* [ %415, %413 ], [ %375, %373 ]
  %383 = phi i64 [ %414, %413 ], [ %370, %373 ]
  %384 = getelementptr inbounds %11, %11* %382, i64 0, i32 0
  %385 = getelementptr inbounds %11, %11* %382, i64 0, i32 0, i32 1
  %386 = bitcast %7* %385 to i8*
  %387 = load i8, i8* %386, align 8
  %388 = icmp eq i8 %387, 15
  br i1 %388, label %389, label %392

389:                                              ; preds = %381
  %390 = bitcast %11* %382 to %5**
  %391 = load %5*, %5** %390, align 8
  br label %392

392:                                              ; preds = %389, %381
  %393 = phi %5* [ %391, %389 ], [ %384, %381 ]
  %394 = getelementptr inbounds %5, %5* %393, i64 0, i32 1
  %395 = bitcast %7* %394 to i8*
  %396 = load i8, i8* %395, align 8
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %413, label %398

398:                                              ; preds = %392
  %399 = bitcast %7* %394 to %60*
  %400 = getelementptr inbounds %60, %60* %399, i64 0, i32 1
  %401 = load i8, i8* %400, align 1
  %402 = and i8 %401, 4
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %410, label %404

404:                                              ; preds = %398
  %405 = bitcast %5* %393 to %61**
  %406 = load %61*, %61** %405, align 8
  %407 = getelementptr inbounds %61, %61* %406, i64 0, i32 0, i32 0
  %408 = load i32, i32* %407, align 4
  %409 = add i32 %408, 1
  store i32 %409, i32* %407, align 4
  br label %410

410:                                              ; preds = %404, %398
  %411 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %3, %5* nonnull %393) #13
  %412 = add nsw i64 %383, 1
  br label %413

413:                                              ; preds = %410, %392
  %414 = phi i64 [ %412, %410 ], [ %383, %392 ]
  %415 = getelementptr inbounds %11, %11* %382, i64 1
  %416 = icmp eq %11* %415, %379
  br i1 %416, label %417, label %381

417:                                              ; preds = %413, %373, %369
  %418 = phi i64 [ %370, %369 ], [ %370, %373 ], [ %414, %413 ]
  %419 = load i32, i32* %204, align 8
  %420 = icmp ult i32 %371, %419
  br i1 %420, label %426, label %421

421:                                              ; preds = %417
  %422 = getelementptr inbounds %9, %9* %156, i64 0, i32 1
  %423 = bitcast %10* %422 to %62*
  %424 = getelementptr inbounds %62, %62* %423, i64 0, i32 2
  %425 = getelementptr inbounds %9, %9* %156, i64 0, i32 3
  br label %476

426:                                              ; preds = %417
  %427 = getelementptr inbounds %9, %9* %156, i64 0, i32 3
  %428 = getelementptr inbounds %9, %9* %156, i64 0, i32 1
  %429 = bitcast %10* %428 to %62*
  %430 = getelementptr inbounds %62, %62* %429, i64 0, i32 2
  %431 = zext i32 %371 to i64
  br label %432

432:                                              ; preds = %469, %426
  %433 = phi i32 [ %419, %426 ], [ %470, %469 ]
  %434 = phi i64 [ %431, %426 ], [ %473, %469 ]
  %435 = phi i32 [ %372, %426 ], [ %472, %469 ]
  %436 = phi i64 [ %418, %426 ], [ %471, %469 ]
  %437 = load %11*, %11** %427, align 8
  %438 = getelementptr inbounds %11, %11* %437, i64 %434, i32 0
  %439 = getelementptr inbounds %11, %11* %437, i64 %434, i32 0, i32 1
  %440 = bitcast %7* %439 to i8*
  %441 = load i8, i8* %440, align 8
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %469, label %443

443:                                              ; preds = %432
  %444 = getelementptr inbounds %11, %11* %437, i64 %434, i32 2
  %445 = load %2*, %2** %444, align 8
  %446 = icmp eq %2* %445, null
  br i1 %446, label %447, label %449

447:                                              ; preds = %443
  %448 = call %5* @_zend_hash_next_index_insert_new(%9* nonnull %3, %5* nonnull %438) #13
  br label %451

449:                                              ; preds = %443
  %450 = call %5* @_zend_hash_add_new(%9* nonnull %3, %2* nonnull %445, %5* nonnull %438) #13
  br label %451

451:                                              ; preds = %449, %447
  %452 = zext i32 %435 to i64
  %453 = icmp eq i64 %434, %452
  br i1 %453, label %454, label %465

454:                                              ; preds = %451
  %455 = icmp eq i64 %436, %434
  br i1 %455, label %462, label %456

456:                                              ; preds = %454
  %457 = load i8, i8* %430, align 2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %462, label %459

459:                                              ; preds = %456
  %460 = trunc i64 %436 to i32
  %461 = trunc i64 %434 to i32
  call void @_zend_hash_iterators_update(%9* nonnull %156, i32 %461, i32 %460) #13
  br label %462

462:                                              ; preds = %459, %456, %454
  %463 = add i32 %435, 1
  %464 = call i32 @zend_hash_iterators_lower_pos(%9* nonnull %156, i32 %463) #13
  br label %465

465:                                              ; preds = %462, %451
  %466 = phi i32 [ %464, %462 ], [ %435, %451 ]
  %467 = add nsw i64 %436, 1
  %468 = load i32, i32* %204, align 8
  br label %469

469:                                              ; preds = %465, %432
  %470 = phi i32 [ %433, %432 ], [ %468, %465 ]
  %471 = phi i64 [ %436, %432 ], [ %467, %465 ]
  %472 = phi i32 [ %435, %432 ], [ %466, %465 ]
  %473 = add nuw nsw i64 %434, 1
  %474 = zext i32 %470 to i64
  %475 = icmp ult i64 %473, %474
  br i1 %475, label %432, label %476

476:                                              ; preds = %469, %421
  %477 = phi %11** [ %425, %421 ], [ %427, %469 ]
  %478 = phi i8* [ %424, %421 ], [ %430, %469 ]
  %479 = phi %10* [ %422, %421 ], [ %428, %469 ]
  store i8 0, i8* %478, align 2
  %480 = getelementptr inbounds %9, %9* %156, i64 0, i32 9
  store void (%5*)* null, void (%5*)** %480, align 8
  call void @zend_hash_destroy(%9* nonnull %156) #13
  %481 = getelementptr inbounds %9, %9* %3, i64 0, i32 1
  %482 = bitcast %10* %481 to i8*
  %483 = load i8, i8* %482, align 8
  %484 = bitcast %10* %479 to i8*
  store i8 %483, i8* %484, align 8
  %485 = getelementptr inbounds %9, %9* %3, i64 0, i32 6
  %486 = load i32, i32* %485, align 8
  %487 = getelementptr inbounds %9, %9* %156, i64 0, i32 6
  store i32 %486, i32* %487, align 8
  %488 = getelementptr inbounds %9, %9* %3, i64 0, i32 2
  %489 = load i32, i32* %488, align 4
  %490 = getelementptr inbounds %9, %9* %156, i64 0, i32 2
  store i32 %489, i32* %490, align 4
  %491 = getelementptr inbounds %9, %9* %3, i64 0, i32 4
  %492 = load i32, i32* %491, align 8
  store i32 %492, i32* %204, align 8
  %493 = getelementptr inbounds %9, %9* %3, i64 0, i32 5
  %494 = load i32, i32* %493, align 4
  store i32 %494, i32* %167, align 4
  %495 = getelementptr inbounds %9, %9* %3, i64 0, i32 8
  %496 = getelementptr inbounds %9, %9* %156, i64 0, i32 8
  %497 = getelementptr inbounds %9, %9* %3, i64 0, i32 3
  %498 = bitcast %11** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %11** %477 to i64*
  store i64 %499, i64* %500, align 8
  %501 = bitcast i64* %495 to <2 x i64>*
  %502 = load <2 x i64>, <2 x i64>* %501, align 8
  %503 = bitcast i64* %496 to <2 x i64>*
  store <2 x i64> %502, <2 x i64>* %503, align 8
  %504 = getelementptr inbounds %9, %9* %156, i64 0, i32 7
  call void @zend_hash_internal_pointer_reset_ex(%9* nonnull %156, i32* nonnull %504) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %165) #13
  br label %505

505:                                              ; preds = %81, %82, %476
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

declare dso_local void @convert_to_array(%5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_slice(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8, align 1
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 0, i8* %4, align 1
  %6 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ugt i32 %8, 2
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %7, i32 2, i32 4) #13
  br label %266

11:                                               ; preds = %2
  %12 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %13 = getelementptr inbounds i8**, i8*** %12, i64 2
  %14 = bitcast i8*** %13 to %5*
  %15 = getelementptr inbounds i8**, i8*** %12, i64 3
  %16 = bitcast i8*** %15 to i8*
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 7
  br i1 %18, label %19, label %50

19:                                               ; preds = %11
  %20 = getelementptr inbounds i8**, i8*** %12, i64 4
  %21 = bitcast i8*** %20 to %5*
  %22 = getelementptr inbounds i8**, i8*** %12, i64 5
  %23 = bitcast i8*** %22 to i8*
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 4
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast i8*** %20 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %3, align 8
  br label %32

29:                                               ; preds = %19
  %30 = call i32 @zend_parse_arg_long_slow(%5* nonnull %21, i64* nonnull %3) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %26, %29
  %33 = icmp slt i32 %7, 3
  br i1 %33, label %54, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8**, i8*** %12, i64 6
  %36 = bitcast i8*** %35 to %5*
  %37 = icmp eq i32 %7, 3
  br i1 %37, label %54, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds i8**, i8*** %12, i64 8
  %40 = bitcast i8*** %39 to %5*
  %41 = getelementptr inbounds i8**, i8*** %12, i64 9
  %42 = bitcast i8*** %41 to i8*
  %43 = load i8, i8* %42, align 8
  switch i8 %43, label %47 [
    i8 3, label %45
    i8 2, label %44
  ]

44:                                               ; preds = %38
  br label %45

45:                                               ; preds = %38, %44
  %46 = phi i8 [ 1, %38 ], [ 0, %44 ]
  store i8 %46, i8* %4, align 1
  br label %54

47:                                               ; preds = %38
  %48 = call i32 @zend_parse_arg_bool_slow(%5* nonnull %40, i8* nonnull %4) #13
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %47, %11, %29
  %51 = phi i32 [ 4, %47 ], [ 2, %29 ], [ 1, %11 ]
  %52 = phi %5* [ %40, %47 ], [ %21, %29 ], [ %14, %11 ]
  %53 = phi i32 [ 1, %47 ], [ 0, %29 ], [ 3, %11 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %51, i32 %53, %5* %52) #13
  br label %266

54:                                               ; preds = %47, %34, %32, %45
  %55 = phi %5* [ %36, %47 ], [ %36, %45 ], [ %36, %34 ], [ null, %32 ]
  %56 = bitcast i8*** %13 to %9**
  %57 = load %9*, %9** %56, align 8
  %58 = getelementptr inbounds %9, %9* %57, i64 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %6, align 4
  %61 = icmp ult i32 %60, 3
  br i1 %61, label %66, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %5, %5* %55, i64 0, i32 1
  %64 = bitcast %7* %63 to i8*
  %65 = load i8, i8* %64, align 8
  switch i8 %65, label %71 [
    i8 1, label %66
    i8 4, label %68
  ]

66:                                               ; preds = %62, %54
  %67 = sext i32 %59 to i64
  br label %73

68:                                               ; preds = %62
  %69 = getelementptr inbounds %5, %5* %55, i64 0, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  br label %73

71:                                               ; preds = %62
  %72 = call i64 @_zval_get_long_func(%5* nonnull %55) #13
  br label %73

73:                                               ; preds = %71, %68, %66
  %74 = phi i64 [ %67, %66 ], [ %70, %68 ], [ %72, %71 ]
  %75 = load i64, i64* %3, align 8
  %76 = sext i32 %59 to i64
  %77 = icmp sgt i64 %75, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = call i32 @_array_init(%5* %1, i32 0) #13
  br label %266

80:                                               ; preds = %73
  %81 = icmp slt i64 %75, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %80
  %83 = add nsw i64 %75, %76
  %84 = icmp sgt i64 %83, 0
  %85 = select i1 %84, i64 %83, i64 0
  store i64 %85, i64* %3, align 8
  br label %86

86:                                               ; preds = %82, %80
  %87 = phi i64 [ %85, %82 ], [ %75, %80 ]
  %88 = icmp slt i64 %74, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = add i64 %74, %76
  %91 = sub i64 %90, %87
  br label %98

92:                                               ; preds = %86
  %93 = add i64 %87, %74
  %94 = zext i32 %59 to i64
  %95 = icmp ugt i64 %93, %94
  %96 = sub nsw i64 %76, %87
  %97 = select i1 %95, i64 %96, i64 %74
  br label %98

98:                                               ; preds = %92, %89
  %99 = phi i64 [ %91, %89 ], [ %97, %92 ]
  %100 = icmp slt i64 %99, 1
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = call i32 @_array_init(%5* %1, i32 0) #13
  br label %266

103:                                              ; preds = %98
  %104 = trunc i64 %99 to i32
  %105 = call i32 @_array_init(%5* %1, i32 %104) #13
  %106 = load %9*, %9** %56, align 8
  %107 = getelementptr inbounds %9, %9* %106, i64 0, i32 1, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %217, label %111

111:                                              ; preds = %103
  %112 = load i8, i8* %4, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %123, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %3, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %217

117:                                              ; preds = %114
  %118 = getelementptr inbounds %9, %9* %106, i64 0, i32 4
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %9, %9* %106, i64 0, i32 5
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %217

123:                                              ; preds = %111, %117
  %124 = bitcast %5* %1 to %9**
  %125 = load %9*, %9** %124, align 8
  call void @zend_hash_real_init(%9* %125, i8 zeroext 1) #13
  %126 = load %9*, %9** %124, align 8
  %127 = getelementptr inbounds %9, %9* %126, i64 0, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = zext i32 %128 to i64
  %130 = load %9*, %9** %56, align 8
  %131 = getelementptr inbounds %9, %9* %130, i64 0, i32 3
  %132 = load %11*, %11** %131, align 8
  %133 = getelementptr inbounds %9, %9* %130, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %11, %11* %132, i64 %135
  %137 = icmp eq i32 %134, 0
  br i1 %137, label %209, label %138

138:                                              ; preds = %123
  %139 = getelementptr inbounds %9, %9* %126, i64 0, i32 3
  %140 = load %11*, %11** %139, align 8
  %141 = getelementptr inbounds %11, %11* %140, i64 %129
  br label %142

142:                                              ; preds = %138, %200
  %143 = phi i32 [ %203, %200 ], [ 0, %138 ]
  %144 = phi %11* [ %202, %200 ], [ %141, %138 ]
  %145 = phi i32 [ %201, %200 ], [ %128, %138 ]
  %146 = phi %11* [ %204, %200 ], [ %132, %138 ]
  %147 = getelementptr inbounds %11, %11* %146, i64 0, i32 0, i32 1
  %148 = bitcast %7* %147 to i8*
  %149 = load i8, i8* %148, align 8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %200, label %151

151:                                              ; preds = %142
  %152 = add nsw i32 %143, 1
  %153 = sext i32 %152 to i64
  %154 = load i64, i64* %3, align 8
  %155 = icmp slt i64 %154, %153
  br i1 %155, label %156, label %200

156:                                              ; preds = %151
  %157 = add nsw i64 %154, %99
  %158 = icmp slt i64 %157, %153
  br i1 %158, label %206, label %159

159:                                              ; preds = %156
  %160 = icmp eq i8 %149, 10
  br i1 %160, label %161, label %176

161:                                              ; preds = %159
  %162 = bitcast %11* %146 to %61**
  %163 = load %61*, %61** %162, align 8
  %164 = getelementptr inbounds %61, %61* %163, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %176

167:                                              ; preds = %161
  %168 = getelementptr inbounds %61, %61* %163, i64 1
  %169 = bitcast %61* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %61, %61* %163, i64 2, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %11, %11* %146, i64 0, i32 0, i32 0, i32 0
  store i64 %170, i64* %173, align 8
  %174 = getelementptr inbounds %11, %11* %146, i64 0, i32 0, i32 1, i32 0
  store i32 %172, i32* %174, align 8
  %175 = bitcast %61* %163 to i8*
  call void @_efree_24(i8* %175) #13
  br label %176

176:                                              ; preds = %159, %161, %167
  %177 = bitcast %7* %147 to %60*
  %178 = getelementptr inbounds %60, %60* %177, i64 0, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = and i8 %179, 4
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = bitcast %11* %146 to %61**
  %184 = load %61*, %61** %183, align 8
  %185 = getelementptr inbounds %61, %61* %184, i64 0, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = add i32 %186, 1
  store i32 %187, i32* %185, align 4
  br label %188

188:                                              ; preds = %176, %182
  %189 = getelementptr inbounds %11, %11* %146, i64 0, i32 0, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %7, %7* %147, i64 0, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = getelementptr inbounds %11, %11* %144, i64 0, i32 0, i32 0, i32 0
  store i64 %190, i64* %193, align 8
  %194 = getelementptr inbounds %11, %11* %144, i64 0, i32 0, i32 1, i32 0
  store i32 %192, i32* %194, align 8
  %195 = zext i32 %145 to i64
  %196 = getelementptr inbounds %11, %11* %144, i64 0, i32 1
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %11, %11* %144, i64 0, i32 2
  store %2* null, %2** %197, align 8
  %198 = getelementptr inbounds %11, %11* %144, i64 1
  %199 = add i32 %145, 1
  br label %200

200:                                              ; preds = %188, %142, %151
  %201 = phi i32 [ %145, %151 ], [ %145, %142 ], [ %199, %188 ]
  %202 = phi %11* [ %144, %151 ], [ %144, %142 ], [ %198, %188 ]
  %203 = phi i32 [ %152, %151 ], [ %143, %142 ], [ %152, %188 ]
  %204 = getelementptr inbounds %11, %11* %146, i64 1
  %205 = icmp eq %11* %204, %136
  br i1 %205, label %206, label %142

206:                                              ; preds = %156, %200
  %207 = phi i32 [ %201, %200 ], [ %145, %156 ]
  %208 = zext i32 %207 to i64
  br label %209

209:                                              ; preds = %206, %123
  %210 = phi i64 [ %208, %206 ], [ %129, %123 ]
  %211 = phi i32 [ %207, %206 ], [ %128, %123 ]
  store i32 %211, i32* %127, align 8
  %212 = getelementptr inbounds %9, %9* %126, i64 0, i32 5
  store i32 %211, i32* %212, align 4
  %213 = getelementptr inbounds %9, %9* %126, i64 0, i32 8
  store i64 %210, i64* %213, align 8
  %214 = icmp eq i32 %211, 0
  %215 = sext i1 %214 to i32
  %216 = getelementptr inbounds %9, %9* %126, i64 0, i32 7
  store i32 %215, i32* %216, align 4
  br label %266

217:                                              ; preds = %103, %114, %117
  %218 = getelementptr inbounds %9, %9* %106, i64 0, i32 3
  %219 = load %11*, %11** %218, align 8
  %220 = getelementptr inbounds %9, %9* %106, i64 0, i32 4
  %221 = load i32, i32* %220, align 8
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %11, %11* %219, i64 %222
  %224 = icmp eq i32 %221, 0
  br i1 %224, label %266, label %225

225:                                              ; preds = %217
  %226 = bitcast %5* %1 to %9**
  br label %227

227:                                              ; preds = %225, %262
  %228 = phi %11* [ %219, %225 ], [ %264, %262 ]
  %229 = phi i32 [ 0, %225 ], [ %263, %262 ]
  %230 = getelementptr inbounds %11, %11* %228, i64 0, i32 0
  %231 = getelementptr inbounds %11, %11* %228, i64 0, i32 0, i32 1
  %232 = bitcast %7* %231 to i8*
  %233 = load i8, i8* %232, align 8
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %262, label %235

235:                                              ; preds = %227
  %236 = getelementptr inbounds %11, %11* %228, i64 0, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %11, %11* %228, i64 0, i32 2
  %239 = load %2*, %2** %238, align 8
  %240 = add nsw i32 %229, 1
  %241 = sext i32 %240 to i64
  %242 = load i64, i64* %3, align 8
  %243 = icmp slt i64 %242, %241
  br i1 %243, label %244, label %262

244:                                              ; preds = %235
  %245 = add nsw i64 %242, %99
  %246 = icmp slt i64 %245, %241
  br i1 %246, label %266, label %247

247:                                              ; preds = %244
  %248 = icmp eq %2* %239, null
  br i1 %248, label %252, label %249

249:                                              ; preds = %247
  %250 = load %9*, %9** %226, align 8
  %251 = call %5* @_zend_hash_add_new(%9* %250, %2* nonnull %239, %5* nonnull %230) #13
  br label %260

252:                                              ; preds = %247
  %253 = load i8, i8* %4, align 1
  %254 = icmp eq i8 %253, 0
  %255 = load %9*, %9** %226, align 8
  br i1 %254, label %258, label %256

256:                                              ; preds = %252
  %257 = call %5* @_zend_hash_index_add_new(%9* %255, i64 %237, %5* nonnull %230) #13
  br label %260

258:                                              ; preds = %252
  %259 = call %5* @_zend_hash_next_index_insert_new(%9* %255, %5* nonnull %230) #13
  br label %260

260:                                              ; preds = %256, %258, %249
  %261 = phi %5* [ %251, %249 ], [ %257, %256 ], [ %259, %258 ]
  call void @zval_add_ref(%5* %261) #13
  br label %262

262:                                              ; preds = %260, %227, %235
  %263 = phi i32 [ %240, %235 ], [ %229, %227 ], [ %240, %260 ]
  %264 = getelementptr inbounds %11, %11* %228, i64 1
  %265 = icmp eq %11* %264, %223
  br i1 %265, label %266, label %227

266:                                              ; preds = %262, %244, %217, %10, %209, %50, %101, %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare dso_local void @_efree_24(i8*) local_unnamed_addr #1

declare dso_local void @zval_add_ref(%5*) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @php_array_merge_recursive(%9* %0, %9* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = getelementptr inbounds %9, %9* %1, i64 0, i32 3
  %5 = load %11*, %11** %4, align 8
  %6 = getelementptr inbounds %9, %9* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %11, %11* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %209, label %11

11:                                               ; preds = %2
  %12 = bitcast %5* %3 to i8*
  %13 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  %14 = bitcast %5* %3 to %61**
  %15 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %16 = bitcast %7* %15 to i8*
  br label %17

17:                                               ; preds = %11, %205
  %18 = phi %11* [ %5, %11 ], [ %206, %205 ]
  %19 = getelementptr inbounds %11, %11* %18, i64 0, i32 0
  %20 = getelementptr inbounds %11, %11* %18, i64 0, i32 0, i32 1
  %21 = bitcast %7* %20 to i8*
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %205, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %11, %11* %18, i64 0, i32 2
  %26 = load %2*, %2** %25, align 8
  %27 = icmp eq %2* %26, null
  br i1 %27, label %203, label %28

28:                                               ; preds = %24
  %29 = call %5* @zend_hash_find(%9* %0, %2* nonnull %26) #13
  %30 = icmp eq %5* %29, null
  br i1 %30, label %201, label %31

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %32 = load i8, i8* %21, align 8
  %33 = icmp eq i8 %32, 10
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = bitcast %11* %18 to %59**
  %36 = load %59*, %59** %35, align 8
  %37 = getelementptr inbounds %59, %59* %36, i64 0, i32 1
  br label %38

38:                                               ; preds = %31, %34
  %39 = phi %5* [ %37, %34 ], [ %19, %31 ]
  %40 = getelementptr inbounds %5, %5* %29, i64 0, i32 1
  %41 = bitcast %7* %40 to i8*
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 10
  br i1 %43, label %44, label %51

44:                                               ; preds = %38
  %45 = bitcast %5* %29 to %59**
  %46 = load %59*, %59** %45, align 8
  %47 = getelementptr inbounds %59, %59* %46, i64 0, i32 1
  %48 = getelementptr inbounds %59, %59* %46, i64 0, i32 1, i32 1
  %49 = bitcast %7* %48 to i8*
  %50 = load i8, i8* %49, align 8
  br label %51

51:                                               ; preds = %44, %38
  %52 = phi i8 [ %50, %44 ], [ %42, %38 ]
  %53 = phi %5* [ %47, %44 ], [ %29, %38 ]
  %54 = icmp eq i8 %52, 7
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = bitcast %5* %53 to %9**
  %57 = load %9*, %9** %56, align 8
  %58 = icmp eq %9* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %9, %9* %57, i64 0, i32 1
  %61 = bitcast %10* %60 to %62*
  %62 = getelementptr inbounds %62, %62* %61, i64 0, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = icmp ugt i8 %63, 1
  br i1 %64, label %78, label %65

65:                                               ; preds = %55, %51, %59
  %66 = phi i1 [ true, %59 ], [ false, %55 ], [ false, %51 ]
  %67 = phi %9* [ %57, %59 ], [ null, %55 ], [ null, %51 ]
  %68 = icmp ne %5* %19, %29
  %69 = xor i1 %43, true
  %70 = or i1 %68, %69
  br i1 %70, label %79, label %71

71:                                               ; preds = %65
  %72 = bitcast %11* %18 to %61**
  %73 = load %61*, %61** %72, align 8
  %74 = getelementptr inbounds %61, %61* %73, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %71, %59
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @22, i64 0, i64 0)) #13
  br label %208

79:                                               ; preds = %65, %71
  %80 = bitcast %7* %40 to %60*
  %81 = getelementptr inbounds %60, %60* %80, i64 0, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  %86 = and i32 %83, 16
  %87 = icmp eq i32 %86, 0
  %88 = and i32 %83, 20
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %122, label %90

90:                                               ; preds = %79
  %91 = bitcast %5* %29 to %61**
  %92 = load %61*, %61** %91, align 8
  %93 = getelementptr inbounds %61, %61* %92, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp ugt i32 %94, 1
  br i1 %95, label %96, label %122

96:                                               ; preds = %90
  br i1 %87, label %101, label %97

97:                                               ; preds = %96
  br i1 %85, label %100, label %98

98:                                               ; preds = %97
  %99 = add i32 %94, -1
  store i32 %99, i32* %93, align 4
  br label %100

100:                                              ; preds = %97, %98
  call void @_zval_copy_ctor_func(%5* nonnull %29) #13
  br label %122

101:                                              ; preds = %96
  br i1 %43, label %102, label %122

102:                                              ; preds = %101
  %103 = add i32 %94, -1
  store i32 %103, i32* %93, align 4
  %104 = bitcast %5* %29 to %59**
  %105 = load %59*, %59** %104, align 8
  %106 = getelementptr inbounds %59, %59* %105, i64 0, i32 1
  %107 = bitcast %5* %106 to %61**
  %108 = load %61*, %61** %107, align 8
  %109 = getelementptr inbounds %59, %59* %105, i64 0, i32 1, i32 1, i32 0
  %110 = load i32, i32* %109, align 8
  store %61* %108, %61** %91, align 8
  %111 = getelementptr inbounds %7, %7* %40, i64 0, i32 0
  store i32 %110, i32* %111, align 8
  %112 = and i32 %110, 5120
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %102
  %115 = and i32 %110, 4096
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  call void @_zval_copy_ctor_func(%5* nonnull %29) #13
  br label %122

118:                                              ; preds = %114
  %119 = getelementptr inbounds %61, %61* %108, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  br label %122

122:                                              ; preds = %118, %117, %102, %79, %90, %101, %100
  %123 = load i8, i8* %41, align 8
  switch i8 %123, label %126 [
    i8 1, label %124
    i8 7, label %127
  ]

124:                                              ; preds = %122
  call void @convert_to_array(%5* nonnull %29) #13
  %125 = call i32 @add_next_index_null(%5* nonnull %29) #13
  br label %127

126:                                              ; preds = %122
  call void @convert_to_array(%5* nonnull %29) #13
  br label %127

127:                                              ; preds = %122, %124, %126
  store i32 0, i32* %13, align 8
  %128 = getelementptr inbounds %5, %5* %39, i64 0, i32 1
  %129 = bitcast %7* %128 to i8*
  %130 = load i8, i8* %129, align 8
  %131 = icmp eq i8 %130, 8
  br i1 %131, label %132, label %145

132:                                              ; preds = %127
  %133 = bitcast %5* %39 to %61**
  %134 = load %61*, %61** %133, align 8
  %135 = getelementptr inbounds %5, %5* %39, i64 0, i32 1, i32 0
  %136 = load i32, i32* %135, align 8
  store %61* %134, %61** %14, align 8
  store i32 %136, i32* %13, align 8
  %137 = and i32 %136, 1024
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %61, %61* %134, i64 0, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  br label %143

143:                                              ; preds = %132, %139
  call void @convert_to_array(%5* nonnull %3) #13
  %144 = load i8, i8* %16, align 8
  br label %145

145:                                              ; preds = %143, %127
  %146 = phi i8 [ %144, %143 ], [ %130, %127 ]
  %147 = phi %5* [ %3, %143 ], [ %39, %127 ]
  %148 = icmp eq i8 %146, 7
  br i1 %148, label %149, label %184

149:                                              ; preds = %145
  br i1 %66, label %150, label %161

150:                                              ; preds = %149
  %151 = getelementptr inbounds %9, %9* %67, i64 0, i32 1
  %152 = getelementptr inbounds %10, %10* %151, i64 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %150
  %157 = bitcast %10* %151 to %62*
  %158 = getelementptr inbounds %62, %62* %157, i64 0, i32 1
  %159 = load i8, i8* %158, align 1
  %160 = add i8 %159, 1
  store i8 %160, i8* %158, align 1
  br label %167

161:                                              ; preds = %149
  %162 = bitcast %5* %29 to %9**
  %163 = load %9*, %9** %162, align 8
  %164 = bitcast %5* %147 to %9**
  %165 = load %9*, %9** %164, align 8
  %166 = call i32 @php_array_merge_recursive(%9* %163, %9* %165)
  br label %181

167:                                              ; preds = %150, %156
  %168 = bitcast %5* %29 to %9**
  %169 = load %9*, %9** %168, align 8
  %170 = bitcast %5* %147 to %9**
  %171 = load %9*, %9** %170, align 8
  %172 = call i32 @php_array_merge_recursive(%9* %169, %9* %171)
  %173 = load i32, i32* %152, align 8
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %167
  %177 = bitcast %10* %151 to %62*
  %178 = getelementptr inbounds %62, %62* %177, i64 0, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = add i8 %179, -1
  store i8 %180, i8* %178, align 1
  br label %181

181:                                              ; preds = %161, %167, %176
  %182 = phi i32 [ %172, %167 ], [ %172, %176 ], [ %166, %161 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %208, label %200

184:                                              ; preds = %145
  %185 = bitcast %7* %20 to %60*
  %186 = getelementptr inbounds %60, %60* %185, i64 0, i32 1
  %187 = load i8, i8* %186, align 1
  %188 = and i8 %187, 4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %196, label %190

190:                                              ; preds = %184
  %191 = bitcast %11* %18 to %61**
  %192 = load %61*, %61** %191, align 8
  %193 = getelementptr inbounds %61, %61* %192, i64 0, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %193, align 4
  br label %196

196:                                              ; preds = %184, %190
  %197 = bitcast %5* %29 to %9**
  %198 = load %9*, %9** %197, align 8
  %199 = call %5* @_zend_hash_next_index_insert(%9* %198, %5* nonnull %147) #13
  br label %200

200:                                              ; preds = %196, %181
  call void @_zval_ptr_dtor(%5* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br label %205

201:                                              ; preds = %28
  %202 = call %5* @_zend_hash_add_new(%9* %0, %2* nonnull %26, %5* nonnull %19) #13
  call void @zval_add_ref(%5* %202) #13
  br label %205

203:                                              ; preds = %24
  %204 = call %5* @_zend_hash_next_index_insert(%9* %0, %5* nonnull %19) #13
  call void @zval_add_ref(%5* %204) #13
  br label %205

205:                                              ; preds = %17, %200, %201, %203
  %206 = getelementptr inbounds %11, %11* %18, i64 1
  %207 = icmp eq %11* %206, %9
  br i1 %207, label %209, label %17

208:                                              ; preds = %181, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br label %209

209:                                              ; preds = %205, %2, %208
  %210 = phi i32 [ 0, %208 ], [ 1, %2 ], [ 1, %205 ]
  ret i32 %210
}

declare dso_local %5* @zend_hash_find(%9*, %2*) local_unnamed_addr #1

declare dso_local i32 @add_next_index_null(%5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @php_array_merge(%9* %0, %9* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %9, %9* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %92, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %92, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %9, %9* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %9, %9* %1, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  tail call void @zend_hash_extend(%9* nonnull %0, i32 %17, i8 zeroext 1) #13
  %18 = getelementptr inbounds %9, %9* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %9, %9* %1, i64 0, i32 3
  %22 = load %11*, %11** %21, align 8
  %23 = getelementptr inbounds %9, %9* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %11, %11* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %85, label %28

28:                                               ; preds = %12
  %29 = getelementptr inbounds %9, %9* %0, i64 0, i32 3
  %30 = load %11*, %11** %29, align 8
  %31 = getelementptr inbounds %11, %11* %30, i64 %20
  br label %32

32:                                               ; preds = %28, %78
  %33 = phi %11* [ %80, %78 ], [ %31, %28 ]
  %34 = phi i32 [ %79, %78 ], [ %19, %28 ]
  %35 = phi %11* [ %81, %78 ], [ %22, %28 ]
  %36 = getelementptr inbounds %11, %11* %35, i64 0, i32 0, i32 1
  %37 = bitcast %7* %36 to i8*
  %38 = load i8, i8* %37, align 8
  switch i8 %38, label %54 [
    i8 0, label %78
    i8 10, label %39
  ]

39:                                               ; preds = %32
  %40 = bitcast %11* %35 to %61**
  %41 = load %61*, %61** %40, align 8
  %42 = getelementptr inbounds %61, %61* %41, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %54

45:                                               ; preds = %39
  %46 = getelementptr inbounds %61, %61* %41, i64 1
  %47 = bitcast %61* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %61, %61* %41, i64 2, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %11, %11* %35, i64 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %51, align 8
  %52 = getelementptr inbounds %11, %11* %35, i64 0, i32 0, i32 1, i32 0
  store i32 %50, i32* %52, align 8
  %53 = bitcast %61* %41 to i8*
  tail call void @_efree_24(i8* %53) #13
  br label %54

54:                                               ; preds = %32, %39, %45
  %55 = bitcast %7* %36 to %60*
  %56 = getelementptr inbounds %60, %60* %55, i64 0, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = and i8 %57, 4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = bitcast %11* %35 to %61**
  %62 = load %61*, %61** %61, align 8
  %63 = getelementptr inbounds %61, %61* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %63, align 4
  br label %66

66:                                               ; preds = %54, %60
  %67 = getelementptr inbounds %11, %11* %35, i64 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %7, %7* %36, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %11, %11* %33, i64 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %71, align 8
  %72 = getelementptr inbounds %11, %11* %33, i64 0, i32 0, i32 1, i32 0
  store i32 %70, i32* %72, align 8
  %73 = zext i32 %34 to i64
  %74 = getelementptr inbounds %11, %11* %33, i64 0, i32 1
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %11, %11* %33, i64 0, i32 2
  store %2* null, %2** %75, align 8
  %76 = getelementptr inbounds %11, %11* %33, i64 1
  %77 = add i32 %34, 1
  br label %78

78:                                               ; preds = %32, %66
  %79 = phi i32 [ %77, %66 ], [ %34, %32 ]
  %80 = phi %11* [ %76, %66 ], [ %33, %32 ]
  %81 = getelementptr inbounds %11, %11* %35, i64 1
  %82 = icmp eq %11* %81, %26
  br i1 %82, label %83, label %32

83:                                               ; preds = %78
  %84 = zext i32 %79 to i64
  br label %85

85:                                               ; preds = %83, %12
  %86 = phi i64 [ %84, %83 ], [ %20, %12 ]
  %87 = phi i32 [ %79, %83 ], [ %19, %12 ]
  store i32 %87, i32* %18, align 8
  store i32 %87, i32* %13, align 4
  %88 = getelementptr inbounds %9, %9* %0, i64 0, i32 8
  store i64 %86, i64* %88, align 8
  %89 = icmp eq i32 %87, 0
  %90 = sext i1 %89 to i32
  %91 = getelementptr inbounds %9, %9* %0, i64 0, i32 7
  store i32 %90, i32* %91, align 4
  br label %147

92:                                               ; preds = %7, %2
  %93 = getelementptr inbounds %9, %9* %1, i64 0, i32 3
  %94 = load %11*, %11** %93, align 8
  %95 = getelementptr inbounds %9, %9* %1, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %11, %11* %94, i64 %97
  %99 = icmp eq i32 %96, 0
  br i1 %99, label %147, label %100

100:                                              ; preds = %92, %144
  %101 = phi %11* [ %145, %144 ], [ %94, %92 ]
  %102 = getelementptr inbounds %11, %11* %101, i64 0, i32 0
  %103 = getelementptr inbounds %11, %11* %101, i64 0, i32 0, i32 1
  %104 = bitcast %7* %103 to i8*
  %105 = load i8, i8* %104, align 8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %144, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %11, %11* %101, i64 0, i32 2
  %109 = load %2*, %2** %108, align 8
  %110 = icmp eq i8 %105, 10
  br i1 %110, label %111, label %126

111:                                              ; preds = %107
  %112 = bitcast %11* %101 to %61**
  %113 = load %61*, %61** %112, align 8
  %114 = getelementptr inbounds %61, %61* %113, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %126

117:                                              ; preds = %111
  %118 = getelementptr inbounds %61, %61* %113, i64 1
  %119 = bitcast %61* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %61, %61* %113, i64 2, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %11, %11* %101, i64 0, i32 0, i32 0, i32 0
  store i64 %120, i64* %123, align 8
  %124 = getelementptr inbounds %11, %11* %101, i64 0, i32 0, i32 1, i32 0
  store i32 %122, i32* %124, align 8
  %125 = bitcast %61* %113 to i8*
  tail call void @_efree_24(i8* %125) #13
  br label %126

126:                                              ; preds = %107, %111, %117
  %127 = bitcast %7* %103 to %60*
  %128 = getelementptr inbounds %60, %60* %127, i64 0, i32 1
  %129 = load i8, i8* %128, align 1
  %130 = and i8 %129, 4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %126
  %133 = bitcast %11* %101 to %61**
  %134 = load %61*, %61** %133, align 8
  %135 = getelementptr inbounds %61, %61* %134, i64 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  br label %138

138:                                              ; preds = %126, %132
  %139 = icmp eq %2* %109, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = tail call %5* @_zend_hash_update(%9* %0, %2* nonnull %109, %5* nonnull %102) #13
  br label %144

142:                                              ; preds = %138
  %143 = tail call %5* @_zend_hash_next_index_insert_new(%9* %0, %5* nonnull %102) #13
  br label %144

144:                                              ; preds = %140, %142, %100
  %145 = getelementptr inbounds %11, %11* %101, i64 1
  %146 = icmp eq %11* %145, %98
  br i1 %146, label %147, label %100

147:                                              ; preds = %144, %92, %85
  ret i32 1
}

declare dso_local void @zend_hash_extend(%9*, i32, i8 zeroext) local_unnamed_addr #1

declare dso_local %5* @_zend_hash_update(%9*, %2*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @php_array_replace_recursive(%9* %0, %9* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %9, %9* %1, i64 0, i32 3
  %4 = load %11*, %11** %3, align 8
  %5 = getelementptr inbounds %9, %9* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %11, %11* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %212, label %10

10:                                               ; preds = %2, %209
  %11 = phi %11* [ %210, %209 ], [ %4, %2 ]
  %12 = getelementptr inbounds %11, %11* %11, i64 0, i32 0
  %13 = getelementptr inbounds %11, %11* %11, i64 0, i32 0, i32 1
  %14 = bitcast %7* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %209, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %11, %11* %11, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %11, %11* %11, i64 0, i32 2
  %21 = load %2*, %2** %20, align 8
  %22 = icmp eq i8 %15, 10
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = bitcast %11* %11 to %59**
  %25 = load %59*, %59** %24, align 8
  %26 = getelementptr inbounds %59, %59* %25, i64 0, i32 1
  br label %27

27:                                               ; preds = %23, %17
  %28 = phi %5* [ %26, %23 ], [ %12, %17 ]
  %29 = icmp eq %2* %21, null
  %30 = getelementptr inbounds %5, %5* %28, i64 0, i32 1
  %31 = bitcast %7* %30 to i8*
  %32 = load i8, i8* %31, align 8
  %33 = icmp ne i8 %32, 7
  br i1 %29, label %51, label %34

34:                                               ; preds = %27
  br i1 %33, label %49, label %35

35:                                               ; preds = %34
  %36 = tail call %5* @zend_hash_find(%9* %0, %2* nonnull %21) #13
  %37 = icmp eq %5* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %5, %5* %36, i64 0, i32 1
  %40 = bitcast %7* %39 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %49 [
    i8 7, label %74
    i8 10, label %42
  ]

42:                                               ; preds = %38
  %43 = bitcast %5* %36 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %59, %59* %44, i64 0, i32 1, i32 1
  %46 = bitcast %7* %45 to i8*
  %47 = load i8, i8* %46, align 8
  %48 = icmp eq i8 %47, 7
  br i1 %48, label %68, label %49

49:                                               ; preds = %38, %42, %35, %34
  %50 = tail call %5* @_zend_hash_update(%9* %0, %2* nonnull %21, %5* nonnull %12) #13
  tail call void @zval_add_ref(%5* %50) #13
  br label %209

51:                                               ; preds = %27
  br i1 %33, label %66, label %52

52:                                               ; preds = %51
  %53 = tail call %5* @zend_hash_index_find(%9* %0, i64 %19) #13
  %54 = icmp eq %5* %53, null
  br i1 %54, label %66, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %5, %5* %53, i64 0, i32 1
  %57 = bitcast %7* %56 to i8*
  %58 = load i8, i8* %57, align 8
  switch i8 %58, label %66 [
    i8 7, label %74
    i8 10, label %59
  ]

59:                                               ; preds = %55
  %60 = bitcast %5* %53 to %59**
  %61 = load %59*, %59** %60, align 8
  %62 = getelementptr inbounds %59, %59* %61, i64 0, i32 1, i32 1
  %63 = bitcast %7* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 7
  br i1 %65, label %68, label %66

66:                                               ; preds = %55, %59, %52, %51
  %67 = tail call %5* @_zend_hash_index_update(%9* %0, i64 %19, %5* nonnull %12) #13
  tail call void @zval_add_ref(%5* %67) #13
  br label %209

68:                                               ; preds = %42, %59
  %69 = phi %7* [ %56, %59 ], [ %39, %42 ]
  %70 = phi %5* [ %53, %59 ], [ %36, %42 ]
  %71 = bitcast %5* %70 to %59**
  %72 = load %59*, %59** %71, align 8
  %73 = getelementptr inbounds %59, %59* %72, i64 0, i32 1
  br label %74

74:                                               ; preds = %38, %55, %68
  %75 = phi %5* [ %70, %68 ], [ %53, %55 ], [ %36, %38 ]
  %76 = phi i1 [ true, %68 ], [ false, %55 ], [ false, %38 ]
  %77 = phi %7* [ %69, %68 ], [ %56, %55 ], [ %39, %38 ]
  %78 = phi %5* [ %73, %68 ], [ %53, %55 ], [ %36, %38 ]
  %79 = bitcast %5* %78 to %9**
  %80 = load %9*, %9** %79, align 8
  %81 = getelementptr inbounds %9, %9* %80, i64 0, i32 1
  %82 = bitcast %10* %81 to %62*
  %83 = getelementptr inbounds %62, %62* %82, i64 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp ugt i8 %84, 1
  br i1 %85, label %110, label %86

86:                                               ; preds = %74
  %87 = bitcast %5* %28 to %9**
  %88 = load %9*, %9** %87, align 8
  %89 = getelementptr inbounds %9, %9* %88, i64 0, i32 1
  %90 = bitcast %10* %89 to %62*
  %91 = getelementptr inbounds %62, %62* %90, i64 0, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp ugt i8 %92, 1
  br i1 %93, label %110, label %94

94:                                               ; preds = %86
  %95 = load i8, i8* %14, align 8
  %96 = icmp ne i8 %95, 10
  %97 = xor i1 %76, true
  %98 = or i1 %96, %97
  br i1 %98, label %111, label %99

99:                                               ; preds = %94
  %100 = bitcast %11* %11 to %59**
  %101 = load %59*, %59** %100, align 8
  %102 = bitcast %5* %75 to %59**
  %103 = load %59*, %59** %102, align 8
  %104 = icmp eq %59* %101, %103
  br i1 %104, label %105, label %111

105:                                              ; preds = %99
  %106 = getelementptr inbounds %59, %59* %103, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %105, %86, %74
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @22, i64 0, i64 0)) #13
  br label %212

111:                                              ; preds = %94, %99, %105
  %112 = bitcast %7* %77 to %60*
  %113 = getelementptr inbounds %60, %60* %112, i64 0, i32 1
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = and i32 %115, 4
  %117 = icmp eq i32 %116, 0
  %118 = and i32 %115, 16
  %119 = icmp eq i32 %118, 0
  %120 = and i32 %115, 20
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %154, label %122

122:                                              ; preds = %111
  %123 = bitcast %5* %75 to %61**
  %124 = load %61*, %61** %123, align 8
  %125 = getelementptr inbounds %61, %61* %124, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp ugt i32 %126, 1
  br i1 %127, label %128, label %154

128:                                              ; preds = %122
  br i1 %119, label %133, label %129

129:                                              ; preds = %128
  br i1 %117, label %132, label %130

130:                                              ; preds = %129
  %131 = add i32 %126, -1
  store i32 %131, i32* %125, align 4
  br label %132

132:                                              ; preds = %129, %130
  tail call void @_zval_copy_ctor_func(%5* nonnull %75) #13
  br label %154

133:                                              ; preds = %128
  br i1 %76, label %134, label %154

134:                                              ; preds = %133
  %135 = add i32 %126, -1
  store i32 %135, i32* %125, align 4
  %136 = bitcast %5* %75 to %59**
  %137 = load %59*, %59** %136, align 8
  %138 = getelementptr inbounds %59, %59* %137, i64 0, i32 1
  %139 = bitcast %5* %138 to %61**
  %140 = load %61*, %61** %139, align 8
  %141 = getelementptr inbounds %59, %59* %137, i64 0, i32 1, i32 1, i32 0
  %142 = load i32, i32* %141, align 8
  store %61* %140, %61** %123, align 8
  %143 = getelementptr inbounds %7, %7* %77, i64 0, i32 0
  store i32 %142, i32* %143, align 8
  %144 = and i32 %142, 5120
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %154, label %146

146:                                              ; preds = %134
  %147 = and i32 %142, 4096
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  tail call void @_zval_copy_ctor_func(%5* nonnull %75) #13
  br label %154

150:                                              ; preds = %146
  %151 = getelementptr inbounds %61, %61* %140, i64 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %151, align 4
  br label %154

154:                                              ; preds = %150, %149, %134, %111, %122, %133, %132
  %155 = bitcast %5* %75 to %9**
  %156 = load %9*, %9** %155, align 8
  %157 = getelementptr inbounds %9, %9* %156, i64 0, i32 1
  %158 = getelementptr inbounds %10, %10* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %154
  %163 = bitcast %10* %157 to %62*
  %164 = getelementptr inbounds %62, %62* %163, i64 0, i32 1
  %165 = load i8, i8* %164, align 1
  %166 = add i8 %165, 1
  store i8 %166, i8* %164, align 1
  br label %167

167:                                              ; preds = %154, %162
  %168 = load %9*, %9** %87, align 8
  %169 = getelementptr inbounds %9, %9* %168, i64 0, i32 1
  %170 = getelementptr inbounds %10, %10* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %167
  %175 = bitcast %10* %169 to %62*
  %176 = getelementptr inbounds %62, %62* %175, i64 0, i32 1
  %177 = load i8, i8* %176, align 1
  %178 = add i8 %177, 1
  store i8 %178, i8* %176, align 1
  %179 = load %9*, %9** %87, align 8
  br label %180

180:                                              ; preds = %167, %174
  %181 = phi %9* [ %168, %167 ], [ %179, %174 ]
  %182 = load %9*, %9** %155, align 8
  %183 = tail call i32 @php_array_replace_recursive(%9* %182, %9* %181)
  %184 = load %9*, %9** %155, align 8
  %185 = getelementptr inbounds %9, %9* %184, i64 0, i32 1
  %186 = getelementptr inbounds %10, %10* %185, i64 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %180
  %191 = bitcast %10* %185 to %62*
  %192 = getelementptr inbounds %62, %62* %191, i64 0, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = add i8 %193, -1
  store i8 %194, i8* %192, align 1
  br label %195

195:                                              ; preds = %180, %190
  %196 = load %9*, %9** %87, align 8
  %197 = getelementptr inbounds %9, %9* %196, i64 0, i32 1
  %198 = getelementptr inbounds %10, %10* %197, i64 0, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %207, label %202

202:                                              ; preds = %195
  %203 = bitcast %10* %197 to %62*
  %204 = getelementptr inbounds %62, %62* %203, i64 0, i32 1
  %205 = load i8, i8* %204, align 1
  %206 = add i8 %205, -1
  store i8 %206, i8* %204, align 1
  br label %207

207:                                              ; preds = %202, %195
  %208 = icmp eq i32 %183, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %207, %10, %66, %49
  %210 = getelementptr inbounds %11, %11* %11, i64 1
  %211 = icmp eq %11* %210, %8
  br i1 %211, label %212, label %10

212:                                              ; preds = %207, %209, %2, %110
  %213 = phi i32 [ 0, %110 ], [ 1, %2 ], [ 0, %207 ], [ 1, %209 ]
  ret i32 %213
}

declare dso_local %5* @zend_hash_index_find(%9*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_merge(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @80(%24* %0, %5* %1, i32 0, i32 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @80(%24* nocapture readonly %0, %5* %1, i32 %2, i32 %3) unnamed_addr #4 {
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 -1) #13
  br label %242

9:                                                ; preds = %4
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = icmp eq i32 %3, 0
  %14 = sext i32 %6 to i64
  br i1 %13, label %56, label %15

15:                                               ; preds = %9, %18
  %16 = phi i64 [ %23, %18 ], [ 0, %9 ]
  %17 = icmp slt i64 %16, %14
  br i1 %17, label %18, label %27

18:                                               ; preds = %15
  %19 = getelementptr inbounds %5, %5* %12, i64 %16, i32 1
  %20 = bitcast %7* %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 7
  %23 = add nuw nsw i64 %16, 1
  br i1 %22, label %15, label %24

24:                                               ; preds = %18
  %25 = trunc i64 %23 to i32
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %25) #13
  %26 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %26, align 8
  br label %242

27:                                               ; preds = %15
  %28 = bitcast i8*** %11 to %9**
  %29 = load %9*, %9** %28, align 8
  %30 = tail call %9* @zend_array_dup(%9* %29) #13
  %31 = bitcast %5* %1 to %9**
  store %9* %30, %9** %31, align 8
  %32 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5127, i32* %32, align 8
  %33 = icmp eq i32 %2, 0
  %34 = icmp sgt i32 %6, 1
  br i1 %33, label %38, label %35

35:                                               ; preds = %27
  br i1 %34, label %36, label %242

36:                                               ; preds = %35
  %37 = zext i32 %6 to i64
  br label %41

38:                                               ; preds = %27
  br i1 %34, label %39, label %242

39:                                               ; preds = %38
  %40 = zext i32 %6 to i64
  br label %49

41:                                               ; preds = %41, %36
  %42 = phi i64 [ 1, %36 ], [ %47, %41 ]
  %43 = getelementptr inbounds %5, %5* %12, i64 %42, i32 0
  %44 = bitcast %6* %43 to %9**
  %45 = load %9*, %9** %44, align 8
  %46 = tail call i32 @php_array_replace_recursive(%9* %30, %9* %45)
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, %37
  br i1 %48, label %242, label %41

49:                                               ; preds = %49, %39
  %50 = phi i64 [ 1, %39 ], [ %54, %49 ]
  %51 = getelementptr inbounds %5, %5* %12, i64 %50, i32 0
  %52 = bitcast %6* %51 to %9**
  %53 = load %9*, %9** %52, align 8
  tail call void @_zend_hash_merge(%9* %30, %9* %53, void (%5*)* nonnull @zval_add_ref, i8 zeroext 1) #13
  %54 = add nuw nsw i64 %50, 1
  %55 = icmp eq i64 %54, %40
  br i1 %55, label %242, label %49

56:                                               ; preds = %9, %67
  %57 = phi i64 [ %74, %67 ], [ 0, %9 ]
  %58 = phi i32 [ %73, %67 ], [ 0, %9 ]
  %59 = getelementptr inbounds %5, %5* %12, i64 %57, i32 1
  %60 = bitcast %7* %59 to i8*
  %61 = load i8, i8* %60, align 8
  %62 = icmp eq i8 %61, 7
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = trunc i64 %57 to i32
  %65 = add nuw nsw i32 %64, 1
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %65) #13
  %66 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %66, align 8
  br label %242

67:                                               ; preds = %56
  %68 = getelementptr inbounds %5, %5* %12, i64 %57
  %69 = bitcast %5* %68 to %9**
  %70 = load %9*, %9** %69, align 8
  %71 = getelementptr inbounds %9, %9* %70, i64 0, i32 5
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, %58
  %74 = add nuw nsw i64 %57, 1
  %75 = icmp slt i64 %74, %14
  br i1 %75, label %56, label %76

76:                                               ; preds = %67
  %77 = bitcast i8*** %11 to %9**
  %78 = load %9*, %9** %77, align 8
  %79 = tail call i32 @_array_init(%5* %1, i32 %73) #13
  %80 = bitcast %5* %1 to %9**
  %81 = load %9*, %9** %80, align 8
  %82 = getelementptr inbounds %9, %9* %78, i64 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %162, label %86

86:                                               ; preds = %76
  tail call void @zend_hash_real_init(%9* %81, i8 zeroext 1) #13
  %87 = getelementptr inbounds %9, %9* %81, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %9, %9* %78, i64 0, i32 3
  %91 = load %11*, %11** %90, align 8
  %92 = getelementptr inbounds %9, %9* %78, i64 0, i32 4
  %93 = load i32, i32* %92, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %11, %11* %91, i64 %94
  %96 = icmp eq i32 %93, 0
  br i1 %96, label %154, label %97

97:                                               ; preds = %86
  %98 = getelementptr inbounds %9, %9* %81, i64 0, i32 3
  %99 = load %11*, %11** %98, align 8
  %100 = getelementptr inbounds %11, %11* %99, i64 %89
  br label %101

101:                                              ; preds = %97, %147
  %102 = phi %11* [ %149, %147 ], [ %100, %97 ]
  %103 = phi i32 [ %148, %147 ], [ %88, %97 ]
  %104 = phi %11* [ %150, %147 ], [ %91, %97 ]
  %105 = getelementptr inbounds %11, %11* %104, i64 0, i32 0, i32 1
  %106 = bitcast %7* %105 to i8*
  %107 = load i8, i8* %106, align 8
  switch i8 %107, label %123 [
    i8 0, label %147
    i8 10, label %108
  ]

108:                                              ; preds = %101
  %109 = bitcast %11* %104 to %61**
  %110 = load %61*, %61** %109, align 8
  %111 = getelementptr inbounds %61, %61* %110, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %123

114:                                              ; preds = %108
  %115 = getelementptr inbounds %61, %61* %110, i64 1
  %116 = bitcast %61* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %61, %61* %110, i64 2, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %11, %11* %104, i64 0, i32 0, i32 0, i32 0
  store i64 %117, i64* %120, align 8
  %121 = getelementptr inbounds %11, %11* %104, i64 0, i32 0, i32 1, i32 0
  store i32 %119, i32* %121, align 8
  %122 = bitcast %61* %110 to i8*
  tail call void @_efree_24(i8* %122) #13
  br label %123

123:                                              ; preds = %101, %108, %114
  %124 = bitcast %7* %105 to %60*
  %125 = getelementptr inbounds %60, %60* %124, i64 0, i32 1
  %126 = load i8, i8* %125, align 1
  %127 = and i8 %126, 4
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %123
  %130 = bitcast %11* %104 to %61**
  %131 = load %61*, %61** %130, align 8
  %132 = getelementptr inbounds %61, %61* %131, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  br label %135

135:                                              ; preds = %123, %129
  %136 = getelementptr inbounds %11, %11* %104, i64 0, i32 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %7, %7* %105, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %11, %11* %102, i64 0, i32 0, i32 0, i32 0
  store i64 %137, i64* %140, align 8
  %141 = getelementptr inbounds %11, %11* %102, i64 0, i32 0, i32 1, i32 0
  store i32 %139, i32* %141, align 8
  %142 = zext i32 %103 to i64
  %143 = getelementptr inbounds %11, %11* %102, i64 0, i32 1
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %11, %11* %102, i64 0, i32 2
  store %2* null, %2** %144, align 8
  %145 = getelementptr inbounds %11, %11* %102, i64 1
  %146 = add i32 %103, 1
  br label %147

147:                                              ; preds = %101, %135
  %148 = phi i32 [ %146, %135 ], [ %103, %101 ]
  %149 = phi %11* [ %145, %135 ], [ %102, %101 ]
  %150 = getelementptr inbounds %11, %11* %104, i64 1
  %151 = icmp eq %11* %150, %95
  br i1 %151, label %152, label %101

152:                                              ; preds = %147
  %153 = zext i32 %148 to i64
  br label %154

154:                                              ; preds = %152, %86
  %155 = phi i64 [ %153, %152 ], [ %89, %86 ]
  %156 = phi i32 [ %148, %152 ], [ %88, %86 ]
  store i32 %156, i32* %87, align 8
  %157 = getelementptr inbounds %9, %9* %81, i64 0, i32 5
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds %9, %9* %81, i64 0, i32 8
  store i64 %155, i64* %158, align 8
  %159 = icmp eq i32 %156, 0
  %160 = sext i1 %159 to i32
  %161 = getelementptr inbounds %9, %9* %81, i64 0, i32 7
  store i32 %160, i32* %161, align 4
  br label %217

162:                                              ; preds = %76
  %163 = getelementptr inbounds %9, %9* %78, i64 0, i32 3
  %164 = load %11*, %11** %163, align 8
  %165 = getelementptr inbounds %9, %9* %78, i64 0, i32 4
  %166 = load i32, i32* %165, align 8
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %11, %11* %164, i64 %167
  %169 = icmp eq i32 %166, 0
  br i1 %169, label %217, label %170

170:                                              ; preds = %162, %214
  %171 = phi %11* [ %215, %214 ], [ %164, %162 ]
  %172 = getelementptr inbounds %11, %11* %171, i64 0, i32 0
  %173 = getelementptr inbounds %11, %11* %171, i64 0, i32 0, i32 1
  %174 = bitcast %7* %173 to i8*
  %175 = load i8, i8* %174, align 8
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %214, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %11, %11* %171, i64 0, i32 2
  %179 = load %2*, %2** %178, align 8
  %180 = icmp eq i8 %175, 10
  br i1 %180, label %181, label %196

181:                                              ; preds = %177
  %182 = bitcast %11* %171 to %61**
  %183 = load %61*, %61** %182, align 8
  %184 = getelementptr inbounds %61, %61* %183, i64 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %196

187:                                              ; preds = %181
  %188 = getelementptr inbounds %61, %61* %183, i64 1
  %189 = bitcast %61* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %61, %61* %183, i64 2, i32 0, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = getelementptr inbounds %11, %11* %171, i64 0, i32 0, i32 0, i32 0
  store i64 %190, i64* %193, align 8
  %194 = getelementptr inbounds %11, %11* %171, i64 0, i32 0, i32 1, i32 0
  store i32 %192, i32* %194, align 8
  %195 = bitcast %61* %183 to i8*
  tail call void @_efree_24(i8* %195) #13
  br label %196

196:                                              ; preds = %177, %181, %187
  %197 = bitcast %7* %173 to %60*
  %198 = getelementptr inbounds %60, %60* %197, i64 0, i32 1
  %199 = load i8, i8* %198, align 1
  %200 = and i8 %199, 4
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %208, label %202

202:                                              ; preds = %196
  %203 = bitcast %11* %171 to %61**
  %204 = load %61*, %61** %203, align 8
  %205 = getelementptr inbounds %61, %61* %204, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %205, align 4
  br label %208

208:                                              ; preds = %196, %202
  %209 = icmp eq %2* %179, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = tail call %5* @_zend_hash_add_new(%9* %81, %2* nonnull %179, %5* nonnull %172) #13
  br label %214

212:                                              ; preds = %208
  %213 = tail call %5* @_zend_hash_next_index_insert_new(%9* %81, %5* nonnull %172) #13
  br label %214

214:                                              ; preds = %210, %212, %170
  %215 = getelementptr inbounds %11, %11* %171, i64 1
  %216 = icmp eq %11* %215, %168
  br i1 %216, label %217, label %170

217:                                              ; preds = %214, %162, %154
  %218 = icmp eq i32 %2, 0
  %219 = icmp sgt i32 %6, 1
  br i1 %218, label %223, label %220

220:                                              ; preds = %217
  br i1 %219, label %221, label %242

221:                                              ; preds = %220
  %222 = zext i32 %6 to i64
  br label %226

223:                                              ; preds = %217
  br i1 %219, label %224, label %242

224:                                              ; preds = %223
  %225 = zext i32 %6 to i64
  br label %234

226:                                              ; preds = %226, %221
  %227 = phi i64 [ 1, %221 ], [ %232, %226 ]
  %228 = getelementptr inbounds %5, %5* %12, i64 %227, i32 0
  %229 = bitcast %6* %228 to %9**
  %230 = load %9*, %9** %229, align 8
  %231 = tail call i32 @php_array_merge_recursive(%9* %81, %9* %230)
  %232 = add nuw nsw i64 %227, 1
  %233 = icmp eq i64 %232, %222
  br i1 %233, label %242, label %226

234:                                              ; preds = %234, %224
  %235 = phi i64 [ 1, %224 ], [ %240, %234 ]
  %236 = getelementptr inbounds %5, %5* %12, i64 %235, i32 0
  %237 = bitcast %6* %236 to %9**
  %238 = load %9*, %9** %237, align 8
  %239 = tail call i32 @php_array_merge(%9* %81, %9* %238)
  %240 = add nuw nsw i64 %235, 1
  %241 = icmp eq i64 %240, %225
  br i1 %241, label %242, label %234

242:                                              ; preds = %41, %49, %226, %234, %35, %38, %220, %223, %8, %24, %63
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_merge_recursive(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @80(%24* %0, %5* %1, i32 1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_replace(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 -1) #13
  br label %40

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = sext i32 %4 to i64
  br label %12

12:                                               ; preds = %15, %7
  %13 = phi i64 [ %20, %15 ], [ 0, %7 ]
  %14 = icmp slt i64 %13, %11
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = getelementptr inbounds %5, %5* %10, i64 %13, i32 1
  %17 = bitcast %7* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 7
  %20 = add nuw nsw i64 %13, 1
  br i1 %19, label %12, label %21

21:                                               ; preds = %15
  %22 = trunc i64 %20 to i32
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %22) #13
  %23 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %23, align 8
  br label %40

24:                                               ; preds = %12
  %25 = bitcast i8*** %9 to %9**
  %26 = load %9*, %9** %25, align 8
  %27 = tail call %9* @zend_array_dup(%9* %26) #13
  %28 = bitcast %5* %1 to %9**
  store %9* %27, %9** %28, align 8
  %29 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5127, i32* %29, align 8
  %30 = icmp sgt i32 %4, 1
  br i1 %30, label %31, label %40

31:                                               ; preds = %24
  %32 = zext i32 %4 to i64
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 1, %31 ], [ %38, %33 ]
  %35 = getelementptr inbounds %5, %5* %10, i64 %34, i32 0
  %36 = bitcast %6* %35 to %9**
  %37 = load %9*, %9** %36, align 8
  tail call void @_zend_hash_merge(%9* %27, %9* %37, void (%5*)* nonnull @zval_add_ref, i8 zeroext 1) #13
  %38 = add nuw nsw i64 %34, 1
  %39 = icmp eq i64 %38, %32
  br i1 %39, label %40, label %33

40:                                               ; preds = %33, %6, %21, %24
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_replace_recursive(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 -1) #13
  br label %41

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = bitcast i8*** %9 to %5*
  %11 = sext i32 %4 to i64
  br label %12

12:                                               ; preds = %15, %7
  %13 = phi i64 [ %20, %15 ], [ 0, %7 ]
  %14 = icmp slt i64 %13, %11
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = getelementptr inbounds %5, %5* %10, i64 %13, i32 1
  %17 = bitcast %7* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 7
  %20 = add nuw nsw i64 %13, 1
  br i1 %19, label %12, label %21

21:                                               ; preds = %15
  %22 = trunc i64 %20 to i32
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %22) #13
  %23 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %23, align 8
  br label %41

24:                                               ; preds = %12
  %25 = bitcast i8*** %9 to %9**
  %26 = load %9*, %9** %25, align 8
  %27 = tail call %9* @zend_array_dup(%9* %26) #13
  %28 = bitcast %5* %1 to %9**
  store %9* %27, %9** %28, align 8
  %29 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5127, i32* %29, align 8
  %30 = icmp sgt i32 %4, 1
  br i1 %30, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %4 to i64
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 1, %31 ], [ %39, %33 ]
  %35 = getelementptr inbounds %5, %5* %10, i64 %34, i32 0
  %36 = bitcast %6* %35 to %9**
  %37 = load %9*, %9** %36, align 8
  %38 = tail call i32 @php_array_replace_recursive(%9* %27, %9* %37) #13
  %39 = add nuw nsw i64 %34, 1
  %40 = icmp eq i64 %39, %32
  br i1 %40, label %41, label %33

41:                                               ; preds = %33, %6, %21, %24
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_keys(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = alloca %5, align 8
  %5 = alloca i8, align 1
  %6 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  store i8 0, i8* %5, align 1
  %7 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp ugt i32 %9, 2
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %8, i32 1, i32 3) #13
  br label %399

12:                                               ; preds = %2
  %13 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %14 = getelementptr inbounds i8**, i8*** %13, i64 2
  %15 = bitcast i8*** %14 to %5*
  %16 = getelementptr inbounds i8**, i8*** %13, i64 3
  %17 = bitcast i8*** %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 7
  br i1 %19, label %20, label %38

20:                                               ; preds = %12
  %21 = icmp slt i32 %8, 2
  br i1 %21, label %42, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8**, i8*** %13, i64 4
  %24 = bitcast i8*** %23 to %5*
  %25 = icmp eq i32 %8, 2
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8**, i8*** %13, i64 6
  %28 = bitcast i8*** %27 to %5*
  %29 = getelementptr inbounds i8**, i8*** %13, i64 7
  %30 = bitcast i8*** %29 to i8*
  %31 = load i8, i8* %30, align 8
  switch i8 %31, label %35 [
    i8 3, label %33
    i8 2, label %32
  ]

32:                                               ; preds = %26
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i8 [ 1, %26 ], [ 0, %32 ]
  store i8 %34, i8* %5, align 1
  br label %42

35:                                               ; preds = %26
  %36 = call i32 @zend_parse_arg_bool_slow(%5* nonnull %28, i8* nonnull %5) #13
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35, %12
  %39 = phi i32 [ 3, %35 ], [ 1, %12 ]
  %40 = phi %5* [ %28, %35 ], [ %15, %12 ]
  %41 = phi i32 [ 1, %35 ], [ 3, %12 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %39, i32 %41, %5* %40) #13
  br label %399

42:                                               ; preds = %35, %22, %20, %33
  %43 = phi %5* [ %24, %35 ], [ %24, %33 ], [ %24, %22 ], [ null, %20 ]
  %44 = bitcast i8*** %14 to %9**
  %45 = load %9*, %9** %44, align 8
  %46 = getelementptr inbounds %9, %9* %45, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %50, label %79

50:                                               ; preds = %42
  %51 = load i8, i8* %17, align 8
  %52 = icmp eq i8 %51, 10
  br i1 %52, label %64, label %53

53:                                               ; preds = %50
  %54 = bitcast i8*** %16 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = bitcast %5* %1 to %9**
  store %9* %45, %9** %56, align 8
  %57 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %55, i32* %57, align 8
  %58 = and i32 %55, 1024
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %399, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %9, %9* %45, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %61, align 4
  br label %399

64:                                               ; preds = %50
  %65 = getelementptr inbounds %9, %9* %45, i64 0, i32 1
  %66 = bitcast %10* %65 to %61**
  %67 = load %61*, %61** %66, align 8
  %68 = getelementptr inbounds %9, %9* %45, i64 0, i32 3
  %69 = bitcast %11** %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %5* %1 to %61**
  store %61* %67, %61** %71, align 8
  %72 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %70, i32* %72, align 8
  %73 = and i32 %70, 1024
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %399, label %75

75:                                               ; preds = %64
  %76 = getelementptr inbounds %61, %61* %67, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 4
  br label %399

79:                                               ; preds = %42
  %80 = icmp eq %5* %43, null
  br i1 %80, label %274, label %81

81:                                               ; preds = %79
  %82 = call i32 @_array_init(%5* %1, i32 0) #13
  %83 = load i8, i8* %5, align 1
  %84 = icmp eq i8 %83, 0
  %85 = getelementptr inbounds %9, %9* %45, i64 0, i32 3
  %86 = load %11*, %11** %85, align 8
  %87 = getelementptr inbounds %9, %9* %45, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %11, %11* %86, i64 %89
  %91 = icmp eq i32 %88, 0
  br i1 %84, label %100, label %92

92:                                               ; preds = %81
  br i1 %91, label %399, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %5, %5* %43, i64 0, i32 1
  %95 = bitcast %7* %94 to i8*
  %96 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %98 = bitcast %5* %1 to %9**
  %99 = bitcast %5* %4 to %2**
  br label %113

100:                                              ; preds = %81
  br i1 %91, label %399, label %101

101:                                              ; preds = %100
  %102 = bitcast %5* %3 to i8*
  %103 = getelementptr inbounds %5, %5* %43, i64 0, i32 1
  %104 = bitcast %7* %103 to i8*
  %105 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %106 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %108 = bitcast %5* %1 to %9**
  %109 = bitcast %5* %4 to %2**
  %110 = getelementptr inbounds %5, %5* %43, i64 0, i32 0, i32 0
  %111 = bitcast %5* %43 to double*
  %112 = bitcast %5* %43 to %2**
  br label %173

113:                                              ; preds = %93, %170
  %114 = phi %11* [ %86, %93 ], [ %171, %170 ]
  %115 = getelementptr inbounds %11, %11* %114, i64 0, i32 0
  %116 = getelementptr inbounds %11, %11* %114, i64 0, i32 0, i32 1
  %117 = bitcast %7* %116 to i8*
  %118 = load i8, i8* %117, align 8
  %119 = icmp eq i8 %118, 15
  br i1 %119, label %120, label %123

120:                                              ; preds = %113
  %121 = bitcast %11* %114 to %5**
  %122 = load %5*, %5** %121, align 8
  br label %123

123:                                              ; preds = %120, %113
  %124 = phi %5* [ %122, %120 ], [ %115, %113 ]
  %125 = getelementptr inbounds %5, %5* %124, i64 0, i32 1
  %126 = bitcast %7* %125 to i8*
  %127 = load i8, i8* %126, align 8
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %170, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %11, %11* %114, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %11, %11* %114, i64 0, i32 2
  %133 = load %2*, %2** %132, align 8
  %134 = icmp eq i8 %127, 10
  br i1 %134, label %135, label %142

135:                                              ; preds = %129
  %136 = bitcast %5* %124 to %59**
  %137 = load %59*, %59** %136, align 8
  %138 = getelementptr inbounds %59, %59* %137, i64 0, i32 1
  %139 = getelementptr inbounds %59, %59* %137, i64 0, i32 1, i32 1
  %140 = bitcast %7* %139 to i8*
  %141 = load i8, i8* %140, align 8
  br label %142

142:                                              ; preds = %135, %129
  %143 = phi i8 [ %141, %135 ], [ %127, %129 ]
  %144 = phi %5* [ %138, %135 ], [ %124, %129 ]
  %145 = load i8, i8* %95, align 8
  %146 = icmp eq i8 %145, %143
  br i1 %146, label %147, label %170

147:                                              ; preds = %142
  %148 = icmp ult i8 %143, 4
  br i1 %148, label %152, label %149

149:                                              ; preds = %147
  %150 = call i32 @zend_is_identical(%5* nonnull %43, %5* nonnull %144) #13
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %147, %149
  %153 = icmp eq %2* %133, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %152
  store %2* %133, %2** %99, align 8
  %155 = getelementptr inbounds %2, %2* %133, i64 0, i32 0, i32 1
  %156 = bitcast %4* %155 to %63*
  %157 = getelementptr inbounds %63, %63* %156, i64 0, i32 1
  %158 = load i8, i8* %157, align 1
  %159 = and i8 %158, 2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %166

161:                                              ; preds = %154
  %162 = getelementptr inbounds %2, %2* %133, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, 1
  store i32 %164, i32* %162, align 8
  br label %166

165:                                              ; preds = %152
  store i64 %131, i64* %96, align 8
  br label %166

166:                                              ; preds = %154, %161, %165
  %167 = phi i32 [ 5126, %161 ], [ 4, %165 ], [ 6, %154 ]
  store i32 %167, i32* %97, align 8
  %168 = load %9*, %9** %98, align 8
  %169 = call %5* @_zend_hash_next_index_insert_new(%9* %168, %5* nonnull %4) #13
  br label %170

170:                                              ; preds = %142, %166, %149, %123
  %171 = getelementptr inbounds %11, %11* %114, i64 1
  %172 = icmp eq %11* %171, %90
  br i1 %172, label %399, label %113

173:                                              ; preds = %101, %271
  %174 = phi %11* [ %86, %101 ], [ %272, %271 ]
  %175 = getelementptr inbounds %11, %11* %174, i64 0, i32 0
  %176 = getelementptr inbounds %11, %11* %174, i64 0, i32 0, i32 1
  %177 = bitcast %7* %176 to i8*
  %178 = load i8, i8* %177, align 8
  %179 = icmp eq i8 %178, 15
  br i1 %179, label %180, label %183

180:                                              ; preds = %173
  %181 = bitcast %11* %174 to %5**
  %182 = load %5*, %5** %181, align 8
  br label %183

183:                                              ; preds = %180, %173
  %184 = phi %5* [ %182, %180 ], [ %175, %173 ]
  %185 = getelementptr inbounds %5, %5* %184, i64 0, i32 1
  %186 = bitcast %7* %185 to i8*
  %187 = load i8, i8* %186, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %271, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %11, %11* %174, i64 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %11, %11* %174, i64 0, i32 2
  %193 = load %2*, %2** %192, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #13
  %194 = load i8, i8* %104, align 8
  switch i8 %194, label %246 [
    i8 4, label %195
    i8 5, label %207
    i8 6, label %219
  ]

195:                                              ; preds = %189
  switch i8 %187, label %246 [
    i8 4, label %196
    i8 5, label %201
  ]

196:                                              ; preds = %195
  %197 = load i64, i64* %110, align 8
  %198 = getelementptr inbounds %5, %5* %184, i64 0, i32 0, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %197, %199
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %200, label %253, label %271

201:                                              ; preds = %195
  %202 = load i64, i64* %110, align 8
  %203 = sitofp i64 %202 to double
  %204 = bitcast %5* %184 to double*
  %205 = load double, double* %204, align 8
  %206 = fcmp oeq double %205, %203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %206, label %253, label %271

207:                                              ; preds = %189
  switch i8 %187, label %246 [
    i8 5, label %208
    i8 4, label %213
  ]

208:                                              ; preds = %207
  %209 = load double, double* %111, align 8
  %210 = bitcast %5* %184 to double*
  %211 = load double, double* %210, align 8
  %212 = fcmp oeq double %209, %211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %212, label %253, label %271

213:                                              ; preds = %207
  %214 = load double, double* %111, align 8
  %215 = getelementptr inbounds %5, %5* %184, i64 0, i32 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = sitofp i64 %216 to double
  %218 = fcmp oeq double %214, %217
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %218, label %253, label %271

219:                                              ; preds = %189
  %220 = icmp eq i8 %187, 6
  br i1 %220, label %221, label %246

221:                                              ; preds = %219
  %222 = load %2*, %2** %112, align 8
  %223 = bitcast %5* %184 to %2**
  %224 = load %2*, %2** %223, align 8
  %225 = icmp eq %2* %222, %224
  br i1 %225, label %226, label %227

226:                                              ; preds = %221
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br label %253

227:                                              ; preds = %221
  %228 = getelementptr inbounds %2, %2* %222, i64 0, i32 3, i64 0
  %229 = load i8, i8* %228, align 8
  %230 = icmp sgt i8 %229, 57
  br i1 %230, label %235, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %2, %2* %224, i64 0, i32 3, i64 0
  %233 = load i8, i8* %232, align 8
  %234 = icmp sgt i8 %233, 57
  br i1 %234, label %235, label %250

235:                                              ; preds = %231, %227
  %236 = getelementptr inbounds %2, %2* %222, i64 0, i32 2
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %2, %2* %224, i64 0, i32 2
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %237, %239
  br i1 %240, label %242, label %241

241:                                              ; preds = %235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br label %271

242:                                              ; preds = %235
  %243 = getelementptr inbounds %2, %2* %224, i64 0, i32 3, i64 0
  %244 = call i32 @memcmp(i8* nonnull %228, i8* nonnull %243, i64 %237) #14
  %245 = icmp eq i32 %244, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %245, label %253, label %271

246:                                              ; preds = %219, %207, %195, %189
  %247 = call i32 @compare_function(%5* nonnull %3, %5* nonnull %43, %5* %184) #13
  %248 = load i64, i64* %105, align 8
  %249 = icmp eq i64 %248, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %249, label %253, label %271

250:                                              ; preds = %231
  %251 = call i64 @zendi_smart_strcmp(%2* nonnull %222, %2* nonnull %224) #13
  %252 = icmp eq i64 %251, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br i1 %252, label %253, label %271

253:                                              ; preds = %242, %213, %208, %246, %201, %196, %250, %226
  %254 = icmp eq %2* %193, null
  br i1 %254, label %266, label %255

255:                                              ; preds = %253
  store %2* %193, %2** %109, align 8
  %256 = getelementptr inbounds %2, %2* %193, i64 0, i32 0, i32 1
  %257 = bitcast %4* %256 to %63*
  %258 = getelementptr inbounds %63, %63* %257, i64 0, i32 1
  %259 = load i8, i8* %258, align 1
  %260 = and i8 %259, 2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %262, label %267

262:                                              ; preds = %255
  %263 = getelementptr inbounds %2, %2* %193, i64 0, i32 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = add i32 %264, 1
  store i32 %265, i32* %263, align 8
  br label %267

266:                                              ; preds = %253
  store i64 %191, i64* %106, align 8
  br label %267

267:                                              ; preds = %255, %262, %266
  %268 = phi i32 [ 5126, %262 ], [ 4, %266 ], [ 6, %255 ]
  store i32 %268, i32* %107, align 8
  %269 = load %9*, %9** %108, align 8
  %270 = call %5* @_zend_hash_next_index_insert_new(%9* %269, %5* nonnull %4) #13
  br label %271

271:                                              ; preds = %242, %213, %208, %246, %201, %196, %250, %241, %267, %183
  %272 = getelementptr inbounds %11, %11* %174, i64 1
  %273 = icmp eq %11* %272, %90
  br i1 %273, label %399, label %173

274:                                              ; preds = %79
  %275 = call i32 @_array_init(%5* %1, i32 %47) #13
  %276 = bitcast %5* %1 to %9**
  %277 = load %9*, %9** %276, align 8
  call void @zend_hash_real_init(%9* %277, i8 zeroext 1) #13
  %278 = load %9*, %9** %276, align 8
  %279 = getelementptr inbounds %9, %9* %278, i64 0, i32 3
  %280 = load %11*, %11** %279, align 8
  %281 = getelementptr inbounds %9, %9* %278, i64 0, i32 4
  %282 = load i32, i32* %281, align 8
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds %11, %11* %280, i64 %283
  %285 = getelementptr inbounds %9, %9* %45, i64 0, i32 1, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = and i32 %286, 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %323, label %289

289:                                              ; preds = %274
  %290 = getelementptr inbounds %9, %9* %45, i64 0, i32 4
  %291 = load i32, i32* %290, align 8
  %292 = load i32, i32* %46, align 4
  %293 = icmp eq i32 %291, %292
  br i1 %293, label %294, label %323

294:                                              ; preds = %289
  %295 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  store i64 0, i64* %295, align 8
  %296 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 4, i32* %296, align 8
  %297 = getelementptr inbounds %11, %11* %284, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %297, align 8
  %298 = getelementptr inbounds %11, %11* %280, i64 %283, i32 0, i32 1, i32 0
  store i32 4, i32* %298, align 8
  %299 = zext i32 %282 to i64
  %300 = getelementptr inbounds %11, %11* %280, i64 %283, i32 1
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %11, %11* %280, i64 %283, i32 2
  store %2* null, %2** %301, align 8
  %302 = add i32 %282, 1
  %303 = load i64, i64* %295, align 8
  %304 = add nsw i64 %303, 1
  store i64 %304, i64* %295, align 8
  %305 = icmp ult i64 %304, %48
  br i1 %305, label %306, label %391

306:                                              ; preds = %294
  %307 = load i32, i32* %296, align 8
  %308 = load i64, i64* %295, align 8
  br label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %321, %309 ], [ %308, %306 ]
  %311 = phi i64 [ %321, %309 ], [ %304, %306 ]
  %312 = phi i32 [ %320, %309 ], [ %302, %306 ]
  %313 = phi %11* [ %314, %309 ], [ %284, %306 ]
  %314 = getelementptr inbounds %11, %11* %313, i64 1
  %315 = getelementptr inbounds %11, %11* %314, i64 0, i32 0, i32 0, i32 0
  store i64 %311, i64* %315, align 8
  %316 = getelementptr inbounds %11, %11* %313, i64 1, i32 0, i32 1, i32 0
  store i32 %307, i32* %316, align 8
  %317 = zext i32 %312 to i64
  %318 = getelementptr inbounds %11, %11* %313, i64 1, i32 1
  store i64 %317, i64* %318, align 8
  %319 = getelementptr inbounds %11, %11* %313, i64 1, i32 2
  store %2* null, %2** %319, align 8
  %320 = add i32 %312, 1
  %321 = add nsw i64 %310, 1
  %322 = icmp ult i64 %321, %48
  br i1 %322, label %309, label %390

323:                                              ; preds = %274, %289
  %324 = load %9*, %9** %44, align 8
  %325 = getelementptr inbounds %9, %9* %324, i64 0, i32 3
  %326 = load %11*, %11** %325, align 8
  %327 = getelementptr inbounds %9, %9* %324, i64 0, i32 4
  %328 = load i32, i32* %327, align 8
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds %11, %11* %326, i64 %329
  %331 = icmp eq i32 %328, 0
  br i1 %331, label %391, label %332

332:                                              ; preds = %323
  %333 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %334 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %335 = bitcast %5* %4 to %2**
  br label %336

336:                                              ; preds = %332, %385
  %337 = phi %11* [ %326, %332 ], [ %388, %385 ]
  %338 = phi i32 [ %282, %332 ], [ %387, %385 ]
  %339 = phi %11* [ %284, %332 ], [ %386, %385 ]
  %340 = getelementptr inbounds %11, %11* %337, i64 0, i32 0
  %341 = getelementptr inbounds %11, %11* %337, i64 0, i32 0, i32 1
  %342 = bitcast %7* %341 to i8*
  %343 = load i8, i8* %342, align 8
  %344 = icmp eq i8 %343, 15
  br i1 %344, label %345, label %348

345:                                              ; preds = %336
  %346 = bitcast %11* %337 to %5**
  %347 = load %5*, %5** %346, align 8
  br label %348

348:                                              ; preds = %345, %336
  %349 = phi %5* [ %347, %345 ], [ %340, %336 ]
  %350 = getelementptr inbounds %5, %5* %349, i64 0, i32 1
  %351 = bitcast %7* %350 to i8*
  %352 = load i8, i8* %351, align 8
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %385, label %354

354:                                              ; preds = %348
  %355 = getelementptr inbounds %11, %11* %337, i64 0, i32 2
  %356 = load %2*, %2** %355, align 8
  %357 = icmp eq %2* %356, null
  br i1 %357, label %372, label %358

358:                                              ; preds = %354
  store %2* %356, %2** %335, align 8
  %359 = getelementptr inbounds %2, %2* %356, i64 0, i32 0, i32 1
  %360 = bitcast %4* %359 to %63*
  %361 = getelementptr inbounds %63, %63* %360, i64 0, i32 1
  %362 = load i8, i8* %361, align 1
  %363 = and i8 %362, 2
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %367, label %365

365:                                              ; preds = %358
  %366 = ptrtoint %2* %356 to i64
  store i32 6, i32* %334, align 8
  br label %375

367:                                              ; preds = %358
  %368 = getelementptr inbounds %2, %2* %356, i64 0, i32 0, i32 0
  %369 = load i32, i32* %368, align 8
  %370 = add i32 %369, 1
  store i32 %370, i32* %368, align 8
  store i32 5126, i32* %334, align 8
  %371 = load i64, i64* %333, align 8
  br label %375

372:                                              ; preds = %354
  %373 = getelementptr inbounds %11, %11* %337, i64 0, i32 1
  %374 = load i64, i64* %373, align 8
  store i64 %374, i64* %333, align 8
  store i32 4, i32* %334, align 8
  br label %375

375:                                              ; preds = %365, %367, %372
  %376 = phi i32 [ 6, %365 ], [ 5126, %367 ], [ 4, %372 ]
  %377 = phi i64 [ %366, %365 ], [ %371, %367 ], [ %374, %372 ]
  %378 = getelementptr inbounds %11, %11* %339, i64 0, i32 0, i32 0, i32 0
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %11, %11* %339, i64 0, i32 0, i32 1, i32 0
  store i32 %376, i32* %379, align 8
  %380 = zext i32 %338 to i64
  %381 = getelementptr inbounds %11, %11* %339, i64 0, i32 1
  store i64 %380, i64* %381, align 8
  %382 = getelementptr inbounds %11, %11* %339, i64 0, i32 2
  store %2* null, %2** %382, align 8
  %383 = getelementptr inbounds %11, %11* %339, i64 1
  %384 = add i32 %338, 1
  br label %385

385:                                              ; preds = %348, %375
  %386 = phi %11* [ %383, %375 ], [ %339, %348 ]
  %387 = phi i32 [ %384, %375 ], [ %338, %348 ]
  %388 = getelementptr inbounds %11, %11* %337, i64 1
  %389 = icmp eq %11* %388, %330
  br i1 %389, label %391, label %336

390:                                              ; preds = %309
  store i64 %321, i64* %295, align 8
  br label %391

391:                                              ; preds = %385, %390, %294, %323
  %392 = phi i32 [ %282, %323 ], [ %302, %294 ], [ %320, %390 ], [ %387, %385 ]
  store i32 %392, i32* %281, align 8
  %393 = getelementptr inbounds %9, %9* %278, i64 0, i32 5
  store i32 %392, i32* %393, align 4
  %394 = zext i32 %392 to i64
  %395 = getelementptr inbounds %9, %9* %278, i64 0, i32 8
  store i64 %394, i64* %395, align 8
  %396 = icmp eq i32 %392, 0
  %397 = sext i1 %396 to i32
  %398 = getelementptr inbounds %9, %9* %278, i64 0, i32 7
  store i32 %397, i32* %398, align 4
  br label %399

399:                                              ; preds = %170, %271, %92, %100, %11, %391, %53, %60, %64, %75, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_values(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 1) #13
  br label %138

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = getelementptr inbounds i8**, i8*** %8, i64 3
  %11 = bitcast i8*** %10 to i8*
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 7
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast i8*** %9 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %15) #13
  br label %138

16:                                               ; preds = %7
  %17 = bitcast i8*** %9 to %9**
  %18 = load %9*, %9** %17, align 8
  %19 = getelementptr inbounds %9, %9* %18, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %23, label %38

23:                                               ; preds = %16
  %24 = getelementptr inbounds %9, %9* %18, i64 0, i32 8
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, %21
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = bitcast i8*** %10 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = bitcast %5* %1 to %9**
  store %9* %18, %9** %30, align 8
  %31 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %29, i32* %31, align 8
  %32 = and i32 %29, 1024
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %138, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %9, %9* %18, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 4
  br label %138

38:                                               ; preds = %16, %23
  %39 = getelementptr inbounds %9, %9* %18, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 4
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %9, %9* %18, i64 0, i32 4
  br i1 %42, label %62, label %44

44:                                               ; preds = %38
  %45 = load i32, i32* %43, align 8
  %46 = icmp eq i32 %45, %20
  br i1 %46, label %47, label %62

47:                                               ; preds = %44
  %48 = getelementptr inbounds %9, %9* %18, i64 0, i32 8
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %21
  br i1 %50, label %51, label %62

51:                                               ; preds = %47
  %52 = bitcast i8*** %10 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = bitcast %5* %1 to %9**
  store %9* %18, %9** %54, align 8
  %55 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %53, i32* %55, align 8
  %56 = and i32 %53, 1024
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %138, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %9, %9* %18, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 4
  br label %138

62:                                               ; preds = %38, %47, %44
  %63 = tail call i32 @_array_init(%5* %1, i32 %20) #13
  %64 = bitcast %5* %1 to %9**
  %65 = load %9*, %9** %64, align 8
  tail call void @zend_hash_real_init(%9* %65, i8 zeroext 1) #13
  %66 = load %9*, %9** %64, align 8
  %67 = getelementptr inbounds %9, %9* %66, i64 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %9, %9* %18, i64 0, i32 3
  %71 = load %11*, %11** %70, align 8
  %72 = load i32, i32* %43, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %11, %11* %71, i64 %73
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %130, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %9, %9* %66, i64 0, i32 3
  %78 = load %11*, %11** %77, align 8
  %79 = getelementptr inbounds %11, %11* %78, i64 %69
  br label %80

80:                                               ; preds = %76, %123
  %81 = phi %11* [ %126, %123 ], [ %71, %76 ]
  %82 = phi i32 [ %125, %123 ], [ %68, %76 ]
  %83 = phi %11* [ %124, %123 ], [ %79, %76 ]
  %84 = getelementptr inbounds %11, %11* %81, i64 0, i32 0
  %85 = getelementptr inbounds %11, %11* %81, i64 0, i32 0, i32 1
  %86 = bitcast %7* %85 to i8*
  %87 = load i8, i8* %86, align 8
  switch i8 %87, label %97 [
    i8 0, label %123
    i8 10, label %88
  ]

88:                                               ; preds = %80
  %89 = bitcast %11* %81 to %61**
  %90 = load %61*, %61** %89, align 8
  %91 = getelementptr inbounds %61, %61* %90, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %61, %61* %90, i64 1
  %96 = bitcast %61* %95 to %5*
  br label %97

97:                                               ; preds = %80, %88, %94
  %98 = phi %5* [ %96, %94 ], [ %84, %88 ], [ %84, %80 ]
  %99 = getelementptr inbounds %5, %5* %98, i64 0, i32 1
  %100 = bitcast %7* %99 to %60*
  %101 = getelementptr inbounds %60, %60* %100, i64 0, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = and i8 %102, 4
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %97
  %106 = bitcast %5* %98 to %61**
  %107 = load %61*, %61** %106, align 8
  %108 = getelementptr inbounds %61, %61* %107, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  br label %111

111:                                              ; preds = %97, %105
  %112 = getelementptr inbounds %5, %5* %98, i64 0, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %7, %7* %99, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %11, %11* %83, i64 0, i32 0, i32 0, i32 0
  store i64 %113, i64* %116, align 8
  %117 = getelementptr inbounds %11, %11* %83, i64 0, i32 0, i32 1, i32 0
  store i32 %115, i32* %117, align 8
  %118 = zext i32 %82 to i64
  %119 = getelementptr inbounds %11, %11* %83, i64 0, i32 1
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %11, %11* %83, i64 0, i32 2
  store %2* null, %2** %120, align 8
  %121 = getelementptr inbounds %11, %11* %83, i64 1
  %122 = add i32 %82, 1
  br label %123

123:                                              ; preds = %80, %111
  %124 = phi %11* [ %121, %111 ], [ %83, %80 ]
  %125 = phi i32 [ %122, %111 ], [ %82, %80 ]
  %126 = getelementptr inbounds %11, %11* %81, i64 1
  %127 = icmp eq %11* %126, %74
  br i1 %127, label %128, label %80

128:                                              ; preds = %123
  %129 = zext i32 %125 to i64
  br label %130

130:                                              ; preds = %128, %62
  %131 = phi i64 [ %129, %128 ], [ %69, %62 ]
  %132 = phi i32 [ %125, %128 ], [ %68, %62 ]
  store i32 %132, i32* %67, align 8
  %133 = getelementptr inbounds %9, %9* %66, i64 0, i32 5
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds %9, %9* %66, i64 0, i32 8
  store i64 %131, i64* %134, align 8
  %135 = icmp eq i32 %132, 0
  %136 = sext i1 %135 to i32
  %137 = getelementptr inbounds %9, %9* %66, i64 0, i32 7
  store i32 %136, i32* %137, align 4
  br label %138

138:                                              ; preds = %6, %51, %58, %27, %34, %14, %130
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_count_values(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %5, align 8
  %6 = alloca %5, align 8
  %7 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %8, i32 1, i32 1) #13
  br label %133

11:                                               ; preds = %2
  %12 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %13 = getelementptr inbounds i8**, i8*** %12, i64 2
  %14 = getelementptr inbounds i8**, i8*** %12, i64 3
  %15 = bitcast i8*** %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 7
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast i8*** %13 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %19) #13
  br label %133

20:                                               ; preds = %11
  %21 = tail call i32 @_array_init(%5* %1, i32 0) #13
  %22 = bitcast i8*** %13 to %9**
  %23 = load %9*, %9** %22, align 8
  %24 = getelementptr inbounds %9, %9* %23, i64 0, i32 3
  %25 = load %11*, %11** %24, align 8
  %26 = getelementptr inbounds %9, %9* %23, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %11, %11* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %133, label %31

31:                                               ; preds = %20
  %32 = bitcast %5* %1 to %9**
  %33 = bitcast i64* %3 to i8*
  %34 = bitcast %5* %5 to i8*
  %35 = getelementptr inbounds %5, %5* %5, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %5, %5* %5, i64 0, i32 1, i32 0
  %37 = bitcast %5* %6 to i8*
  %38 = getelementptr inbounds %5, %5* %6, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %5, %5* %6, i64 0, i32 1, i32 0
  %40 = bitcast i64* %4 to i8*
  br label %41

41:                                               ; preds = %31, %130
  %42 = phi %11* [ %25, %31 ], [ %131, %130 ]
  %43 = getelementptr inbounds %11, %11* %42, i64 0, i32 0
  %44 = getelementptr inbounds %11, %11* %42, i64 0, i32 0, i32 1
  %45 = bitcast %7* %44 to i8*
  %46 = load i8, i8* %45, align 8
  switch i8 %46, label %51 [
    i8 0, label %130
    i8 10, label %47
  ]

47:                                               ; preds = %41
  %48 = bitcast %11* %42 to %59**
  %49 = load %59*, %59** %48, align 8
  %50 = getelementptr inbounds %59, %59* %49, i64 0, i32 1
  br label %51

51:                                               ; preds = %41, %47
  %52 = phi %5* [ %50, %47 ], [ %43, %41 ]
  %53 = getelementptr inbounds %5, %5* %52, i64 0, i32 1
  %54 = bitcast %7* %53 to i8*
  %55 = load i8, i8* %54, align 8
  switch i8 %55, label %129 [
    i8 4, label %56
    i8 6, label %70
  ]

56:                                               ; preds = %51
  %57 = load %9*, %9** %32, align 8
  %58 = getelementptr inbounds %5, %5* %52, i64 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = call %5* @zend_hash_index_find(%9* %57, i64 %59) #13
  %61 = icmp eq %5* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  store i64 1, i64* %35, align 8
  store i32 4, i32* %36, align 8
  %63 = load %9*, %9** %32, align 8
  %64 = load i64, i64* %58, align 8
  %65 = call %5* @_zend_hash_index_update(%9* %63, i64 %64, %5* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %130

66:                                               ; preds = %56
  %67 = getelementptr inbounds %5, %5* %60, i64 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %68, 1
  store i64 %69, i64* %67, align 8
  br label %130

70:                                               ; preds = %51
  %71 = load %9*, %9** %32, align 8
  %72 = bitcast %5* %52 to %2**
  %73 = load %2*, %2** %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %74 = getelementptr inbounds %2, %2* %73, i64 0, i32 3, i64 0
  %75 = getelementptr inbounds %2, %2* %73, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = load i8, i8* %74, align 1
  %78 = icmp sgt i8 %77, 57
  br i1 %78, label %94, label %79

79:                                               ; preds = %70
  %80 = icmp slt i8 %77, 48
  br i1 %80, label %81, label %88

81:                                               ; preds = %79
  %82 = icmp eq i8 %77, 45
  br i1 %82, label %83, label %94

83:                                               ; preds = %81
  %84 = getelementptr inbounds %2, %2* %73, i64 0, i32 3, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = add i8 %85, -48
  %87 = icmp ugt i8 %86, 9
  br i1 %87, label %94, label %88

88:                                               ; preds = %83, %79
  %89 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %74, i64 %76, i64* nonnull %3) #13
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = load i64, i64* %3, align 8
  %93 = call %5* @zend_hash_index_find(%9* %71, i64 %92) #13
  br label %96

94:                                               ; preds = %88, %83, %81, %70
  %95 = call %5* @zend_hash_find(%9* %71, %2* nonnull %73) #13
  br label %96

96:                                               ; preds = %91, %94
  %97 = phi %5* [ %93, %91 ], [ %95, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %98 = icmp eq %5* %97, null
  br i1 %98, label %99, label %125

99:                                               ; preds = %96
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  store i64 1, i64* %38, align 8
  store i32 4, i32* %39, align 8
  %100 = load %9*, %9** %32, align 8
  %101 = load %2*, %2** %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %102 = getelementptr inbounds %2, %2* %101, i64 0, i32 3, i64 0
  %103 = getelementptr inbounds %2, %2* %101, i64 0, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = load i8, i8* %102, align 1
  %106 = icmp sgt i8 %105, 57
  br i1 %106, label %122, label %107

107:                                              ; preds = %99
  %108 = icmp slt i8 %105, 48
  br i1 %108, label %109, label %116

109:                                              ; preds = %107
  %110 = icmp eq i8 %105, 45
  br i1 %110, label %111, label %122

111:                                              ; preds = %109
  %112 = getelementptr inbounds %2, %2* %101, i64 0, i32 3, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = add i8 %113, -48
  %115 = icmp ugt i8 %114, 9
  br i1 %115, label %122, label %116

116:                                              ; preds = %111, %107
  %117 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %102, i64 %104, i64* nonnull %4) #13
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = load i64, i64* %4, align 8
  %121 = call %5* @_zend_hash_index_update(%9* %100, i64 %120, %5* nonnull %6) #13
  br label %124

122:                                              ; preds = %116, %111, %109, %99
  %123 = call %5* @_zend_hash_update(%9* %100, %2* nonnull %101, %5* nonnull %6) #13
  br label %124

124:                                              ; preds = %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  br label %130

125:                                              ; preds = %96
  %126 = getelementptr inbounds %5, %5* %97, i64 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add nsw i64 %127, 1
  store i64 %128, i64* %126, align 8
  br label %130

129:                                              ; preds = %51
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @40, i64 0, i64 0)) #13
  br label %130

130:                                              ; preds = %41, %66, %62, %124, %125, %129
  %131 = getelementptr inbounds %11, %11* %42, i64 1
  %132 = icmp eq %11* %131, %29
  br i1 %132, label %133, label %41

133:                                              ; preds = %130, %20, %10, %18
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_column(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %5, align 8
  %6 = alloca %5, align 8
  %7 = bitcast %5* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = bitcast %5* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -2
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %10, i32 2, i32 3) #13
  br label %345

14:                                               ; preds = %2
  %15 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %16 = getelementptr inbounds i8**, i8*** %15, i64 2
  %17 = getelementptr inbounds i8**, i8*** %15, i64 3
  %18 = bitcast i8*** %17 to i8*
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 7
  br i1 %20, label %21, label %40

21:                                               ; preds = %14
  %22 = bitcast i8*** %16 to %9**
  %23 = load %9*, %9** %22, align 8
  %24 = getelementptr inbounds i8**, i8*** %15, i64 4
  %25 = bitcast i8*** %24 to %5*
  %26 = getelementptr inbounds i8**, i8*** %15, i64 5
  %27 = bitcast i8*** %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 1
  %30 = select i1 %29, %5* null, %5* %25
  %31 = icmp slt i32 %10, 3
  br i1 %31, label %42, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds i8**, i8*** %15, i64 6
  %34 = bitcast i8*** %33 to %5*
  %35 = getelementptr inbounds i8**, i8*** %15, i64 7
  %36 = bitcast i8*** %35 to i8*
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 1
  %39 = select i1 %38, %5* null, %5* %34
  br label %42

40:                                               ; preds = %14
  %41 = bitcast i8*** %16 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %41) #13
  br label %345

42:                                               ; preds = %32, %21
  %43 = phi %5* [ null, %21 ], [ %39, %32 ]
  br i1 %29, label %51, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %5, %5* %30, i64 0, i32 1
  %46 = bitcast %7* %45 to i8*
  %47 = load i8, i8* %46, align 8
  switch i8 %47, label %50 [
    i8 5, label %48
    i8 4, label %51
    i8 8, label %49
    i8 6, label %51
  ]

48:                                               ; preds = %44
  tail call void @convert_to_long(%5* nonnull %30) #13
  br label %51

49:                                               ; preds = %44
  tail call void @_convert_to_string(%5* nonnull %30) #13
  br label %51

50:                                               ; preds = %44
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @41, i64 0, i64 0)) #13
  br label %60

51:                                               ; preds = %49, %44, %44, %48, %42
  %52 = icmp eq %5* %43, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %5, %5* %43, i64 0, i32 1
  %55 = bitcast %7* %54 to i8*
  %56 = load i8, i8* %55, align 8
  switch i8 %56, label %59 [
    i8 5, label %57
    i8 4, label %156
    i8 8, label %58
    i8 6, label %156
  ]

57:                                               ; preds = %53
  tail call void @convert_to_long(%5* nonnull %43) #13
  br label %156

58:                                               ; preds = %53
  tail call void @_convert_to_string(%5* nonnull %43) #13
  br label %156

59:                                               ; preds = %53
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0)) #13
  br label %60

60:                                               ; preds = %59, %50
  %61 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %61, align 8
  br label %345

62:                                               ; preds = %51
  %63 = getelementptr inbounds %9, %9* %23, i64 0, i32 5
  %64 = load i32, i32* %63, align 4
  %65 = tail call i32 @_array_init(%5* %1, i32 %64) #13
  %66 = bitcast %5* %1 to %9**
  %67 = load %9*, %9** %66, align 8
  tail call void @zend_hash_real_init(%9* %67, i8 zeroext 1) #13
  %68 = load %9*, %9** %66, align 8
  %69 = getelementptr inbounds %9, %9* %68, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %9, %9* %23, i64 0, i32 3
  %73 = load %11*, %11** %72, align 8
  %74 = getelementptr inbounds %9, %9* %23, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %11, %11* %73, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %148, label %79

79:                                               ; preds = %62
  %80 = getelementptr inbounds %9, %9* %68, i64 0, i32 3
  %81 = load %11*, %11** %80, align 8
  %82 = getelementptr inbounds %11, %11* %81, i64 %71
  br label %83

83:                                               ; preds = %79, %141
  %84 = phi %11* [ %144, %141 ], [ %73, %79 ]
  %85 = phi %11* [ %143, %141 ], [ %82, %79 ]
  %86 = phi i32 [ %142, %141 ], [ %70, %79 ]
  %87 = getelementptr inbounds %11, %11* %84, i64 0, i32 0
  %88 = getelementptr inbounds %11, %11* %84, i64 0, i32 0, i32 1
  %89 = bitcast %7* %88 to i8*
  %90 = load i8, i8* %89, align 8
  switch i8 %90, label %95 [
    i8 0, label %141
    i8 10, label %91
  ]

91:                                               ; preds = %83
  %92 = bitcast %11* %84 to %59**
  %93 = load %59*, %59** %92, align 8
  %94 = getelementptr inbounds %59, %59* %93, i64 0, i32 1
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi %5* [ %94, %91 ], [ %87, %83 ]
  br i1 %29, label %97, label %110

97:                                               ; preds = %95
  %98 = getelementptr inbounds %5, %5* %96, i64 0, i32 1
  %99 = bitcast %7* %98 to %60*
  %100 = getelementptr inbounds %60, %60* %99, i64 0, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = and i8 %101, 4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %128, label %104

104:                                              ; preds = %97
  %105 = bitcast %5* %96 to %61**
  %106 = load %61*, %61** %105, align 8
  %107 = getelementptr inbounds %61, %61* %106, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  br label %128

110:                                              ; preds = %95
  %111 = call fastcc %5* @81(%5* %96, %5* nonnull %30, %5* nonnull %5)
  %112 = icmp eq %5* %111, null
  br i1 %112, label %141, label %113

113:                                              ; preds = %110
  %114 = icmp eq %5* %111, %5
  br i1 %114, label %128, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %5, %5* %111, i64 0, i32 1
  %117 = bitcast %7* %116 to %60*
  %118 = getelementptr inbounds %60, %60* %117, i64 0, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = and i8 %119, 4
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %115
  %123 = bitcast %5* %111 to %61**
  %124 = load %61*, %61** %123, align 8
  %125 = getelementptr inbounds %61, %61* %124, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  br label %128

128:                                              ; preds = %115, %113, %97, %122, %104
  %129 = phi %5* [ %111, %122 ], [ %111, %115 ], [ %5, %113 ], [ %96, %104 ], [ %96, %97 ]
  %130 = getelementptr inbounds %5, %5* %129, i64 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %5, %5* %129, i64 0, i32 1, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %11, %11* %85, i64 0, i32 0, i32 0, i32 0
  store i64 %131, i64* %134, align 8
  %135 = getelementptr inbounds %11, %11* %85, i64 0, i32 0, i32 1, i32 0
  store i32 %133, i32* %135, align 8
  %136 = zext i32 %86 to i64
  %137 = getelementptr inbounds %11, %11* %85, i64 0, i32 1
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %11, %11* %85, i64 0, i32 2
  store %2* null, %2** %138, align 8
  %139 = getelementptr inbounds %11, %11* %85, i64 1
  %140 = add i32 %86, 1
  br label %141

141:                                              ; preds = %83, %110, %128
  %142 = phi i32 [ %140, %128 ], [ %86, %83 ], [ %86, %110 ]
  %143 = phi %11* [ %139, %128 ], [ %85, %83 ], [ %85, %110 ]
  %144 = getelementptr inbounds %11, %11* %84, i64 1
  %145 = icmp eq %11* %144, %77
  br i1 %145, label %146, label %83

146:                                              ; preds = %141
  %147 = zext i32 %142 to i64
  br label %148

148:                                              ; preds = %146, %62
  %149 = phi i64 [ %147, %146 ], [ %71, %62 ]
  %150 = phi i32 [ %142, %146 ], [ %70, %62 ]
  store i32 %150, i32* %69, align 8
  %151 = getelementptr inbounds %9, %9* %68, i64 0, i32 5
  store i32 %150, i32* %151, align 4
  %152 = getelementptr inbounds %9, %9* %68, i64 0, i32 8
  store i64 %149, i64* %152, align 8
  %153 = icmp eq i32 %150, 0
  %154 = sext i1 %153 to i32
  %155 = getelementptr inbounds %9, %9* %68, i64 0, i32 7
  store i32 %154, i32* %155, align 4
  br label %345

156:                                              ; preds = %58, %53, %53, %57
  %157 = getelementptr inbounds %9, %9* %23, i64 0, i32 5
  %158 = load i32, i32* %157, align 4
  %159 = tail call i32 @_array_init(%5* %1, i32 %158) #13
  %160 = getelementptr inbounds %9, %9* %23, i64 0, i32 3
  %161 = load %11*, %11** %160, align 8
  %162 = getelementptr inbounds %9, %9* %23, i64 0, i32 4
  %163 = load i32, i32* %162, align 8
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %11, %11* %161, i64 %164
  %166 = icmp eq i32 %163, 0
  br i1 %166, label %345, label %167

167:                                              ; preds = %156
  %168 = bitcast %5* %1 to %9**
  %169 = bitcast i64* %3 to i8*
  %170 = bitcast i64* %4 to i8*
  br label %171

171:                                              ; preds = %167, %342
  %172 = phi %11* [ %161, %167 ], [ %343, %342 ]
  %173 = getelementptr inbounds %11, %11* %172, i64 0, i32 0
  %174 = getelementptr inbounds %11, %11* %172, i64 0, i32 0, i32 1
  %175 = bitcast %7* %174 to i8*
  %176 = load i8, i8* %175, align 8
  switch i8 %176, label %181 [
    i8 0, label %342
    i8 10, label %177
  ]

177:                                              ; preds = %171
  %178 = bitcast %11* %172 to %59**
  %179 = load %59*, %59** %178, align 8
  %180 = getelementptr inbounds %59, %59* %179, i64 0, i32 1
  br label %181

181:                                              ; preds = %171, %177
  %182 = phi %5* [ %180, %177 ], [ %173, %171 ]
  br i1 %29, label %183, label %196

183:                                              ; preds = %181
  %184 = getelementptr inbounds %5, %5* %182, i64 0, i32 1
  %185 = bitcast %7* %184 to %60*
  %186 = getelementptr inbounds %60, %60* %185, i64 0, i32 1
  %187 = load i8, i8* %186, align 1
  %188 = and i8 %187, 4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %214, label %190

190:                                              ; preds = %183
  %191 = bitcast %5* %182 to %61**
  %192 = load %61*, %61** %191, align 8
  %193 = getelementptr inbounds %61, %61* %192, i64 0, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %193, align 4
  br label %214

196:                                              ; preds = %181
  %197 = call fastcc %5* @81(%5* %182, %5* nonnull %30, %5* nonnull %5)
  %198 = icmp eq %5* %197, null
  br i1 %198, label %342, label %199

199:                                              ; preds = %196
  %200 = icmp eq %5* %197, %5
  br i1 %200, label %214, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %5, %5* %197, i64 0, i32 1
  %203 = bitcast %7* %202 to %60*
  %204 = getelementptr inbounds %60, %60* %203, i64 0, i32 1
  %205 = load i8, i8* %204, align 1
  %206 = and i8 %205, 4
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %214, label %208

208:                                              ; preds = %201
  %209 = bitcast %5* %197 to %61**
  %210 = load %61*, %61** %209, align 8
  %211 = getelementptr inbounds %61, %61* %210, i64 0, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %211, align 4
  br label %214

214:                                              ; preds = %201, %199, %183, %208, %190
  %215 = phi %5* [ %197, %208 ], [ %197, %201 ], [ %5, %199 ], [ %182, %190 ], [ %182, %183 ]
  %216 = call fastcc %5* @81(%5* %182, %5* nonnull %43, %5* nonnull %6)
  %217 = icmp eq %5* %216, null
  br i1 %217, label %340, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %5, %5* %216, i64 0, i32 1
  %220 = bitcast %7* %219 to i8*
  %221 = load i8, i8* %220, align 8
  switch i8 %221, label %335 [
    i8 6, label %222
    i8 4, label %249
    i8 8, label %254
    i8 1, label %297
    i8 5, label %301
    i8 3, label %321
    i8 2, label %324
    i8 9, label %327
  ]

222:                                              ; preds = %218
  %223 = load %9*, %9** %168, align 8
  %224 = bitcast %5* %216 to %2**
  %225 = load %2*, %2** %224, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #13
  %226 = getelementptr inbounds %2, %2* %225, i64 0, i32 3, i64 0
  %227 = getelementptr inbounds %2, %2* %225, i64 0, i32 2
  %228 = load i64, i64* %227, align 8
  %229 = load i8, i8* %226, align 1
  %230 = icmp sgt i8 %229, 57
  br i1 %230, label %246, label %231

231:                                              ; preds = %222
  %232 = icmp slt i8 %229, 48
  br i1 %232, label %233, label %240

233:                                              ; preds = %231
  %234 = icmp eq i8 %229, 45
  br i1 %234, label %235, label %246

235:                                              ; preds = %233
  %236 = getelementptr inbounds %2, %2* %225, i64 0, i32 3, i64 1
  %237 = load i8, i8* %236, align 1
  %238 = add i8 %237, -48
  %239 = icmp ugt i8 %238, 9
  br i1 %239, label %246, label %240

240:                                              ; preds = %235, %231
  %241 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %226, i64 %228, i64* nonnull %3) #13
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %246, label %243

243:                                              ; preds = %240
  %244 = load i64, i64* %3, align 8
  %245 = call %5* @_zend_hash_index_update(%9* %223, i64 %244, %5* nonnull %215) #13
  br label %248

246:                                              ; preds = %240, %235, %233, %222
  %247 = call %5* @_zend_hash_update(%9* %223, %2* nonnull %225, %5* nonnull %215) #13
  br label %248

248:                                              ; preds = %243, %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #13
  br label %337

249:                                              ; preds = %218
  %250 = load %9*, %9** %168, align 8
  %251 = getelementptr inbounds %5, %5* %216, i64 0, i32 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = call %5* @_zend_hash_index_update(%9* %250, i64 %252, %5* nonnull %215) #13
  br label %337

254:                                              ; preds = %218
  %255 = call %2* @_zval_get_string_func(%5* nonnull %216) #13
  %256 = load %9*, %9** %168, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #13
  %257 = getelementptr inbounds %2, %2* %255, i64 0, i32 3, i64 0
  %258 = getelementptr inbounds %2, %2* %255, i64 0, i32 2
  %259 = load i64, i64* %258, align 8
  %260 = load i8, i8* %257, align 1
  %261 = icmp sgt i8 %260, 57
  br i1 %261, label %277, label %262

262:                                              ; preds = %254
  %263 = icmp slt i8 %260, 48
  br i1 %263, label %264, label %271

264:                                              ; preds = %262
  %265 = icmp eq i8 %260, 45
  br i1 %265, label %266, label %277

266:                                              ; preds = %264
  %267 = getelementptr inbounds %2, %2* %255, i64 0, i32 3, i64 1
  %268 = load i8, i8* %267, align 1
  %269 = add i8 %268, -48
  %270 = icmp ugt i8 %269, 9
  br i1 %270, label %277, label %271

271:                                              ; preds = %266, %262
  %272 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %257, i64 %259, i64* nonnull %4) #13
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %271
  %275 = load i64, i64* %4, align 8
  %276 = call %5* @_zend_hash_index_update(%9* %256, i64 %275, %5* nonnull %215) #13
  br label %279

277:                                              ; preds = %271, %266, %264, %254
  %278 = call %5* @_zend_hash_update(%9* %256, %2* nonnull %255, %5* nonnull %215) #13
  br label %279

279:                                              ; preds = %274, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #13
  %280 = getelementptr inbounds %2, %2* %255, i64 0, i32 0, i32 1
  %281 = bitcast %4* %280 to %63*
  %282 = getelementptr inbounds %63, %63* %281, i64 0, i32 1
  %283 = load i8, i8* %282, align 1
  %284 = and i8 %283, 2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %337

286:                                              ; preds = %279
  %287 = getelementptr inbounds %2, %2* %255, i64 0, i32 0, i32 0
  %288 = load i32, i32* %287, align 8
  %289 = add i32 %288, -1
  store i32 %289, i32* %287, align 8
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %337

291:                                              ; preds = %286
  %292 = and i8 %283, 1
  %293 = icmp eq i8 %292, 0
  %294 = bitcast %2* %255 to i8*
  br i1 %293, label %296, label %295

295:                                              ; preds = %291
  call void @free(i8* %294) #13
  br label %337

296:                                              ; preds = %291
  call void @_efree(i8* %294) #13
  br label %337

297:                                              ; preds = %218
  %298 = load %9*, %9** %168, align 8
  %299 = load %2*, %2** @zend_empty_string, align 8
  %300 = call %5* @_zend_hash_update(%9* %298, %2* %299, %5* nonnull %215) #13
  br label %337

301:                                              ; preds = %218
  %302 = load %9*, %9** %168, align 8
  %303 = bitcast %5* %216 to double*
  %304 = load double, double* %303, align 8
  %305 = call double @llvm.fabs.f64(double %304) #16
  %306 = fcmp ueq double %305, 0x7FF0000000000000
  br i1 %306, label %318, label %307

307:                                              ; preds = %301
  %308 = call i32 @__isnan(double %304) #16
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %318

310:                                              ; preds = %307
  %311 = fcmp oge double %304, 0x43E0000000000000
  %312 = fcmp olt double %304, 0xC3E0000000000000
  %313 = or i1 %311, %312
  br i1 %313, label %314, label %316

314:                                              ; preds = %310
  %315 = call i64 @zend_dval_to_lval_slow(double %304) #13
  br label %318

316:                                              ; preds = %310
  %317 = fptosi double %304 to i64
  br label %318

318:                                              ; preds = %301, %307, %314, %316
  %319 = phi i64 [ %315, %314 ], [ %317, %316 ], [ 0, %307 ], [ 0, %301 ]
  %320 = call %5* @_zend_hash_index_update(%9* %302, i64 %319, %5* nonnull %215) #13
  br label %337

321:                                              ; preds = %218
  %322 = load %9*, %9** %168, align 8
  %323 = call %5* @_zend_hash_index_update(%9* %322, i64 1, %5* nonnull %215) #13
  br label %337

324:                                              ; preds = %218
  %325 = load %9*, %9** %168, align 8
  %326 = call %5* @_zend_hash_index_update(%9* %325, i64 0, %5* nonnull %215) #13
  br label %337

327:                                              ; preds = %218
  %328 = load %9*, %9** %168, align 8
  %329 = bitcast %5* %216 to %65**
  %330 = load %65*, %65** %329, align 8
  %331 = getelementptr inbounds %65, %65* %330, i64 0, i32 1
  %332 = load i32, i32* %331, align 8
  %333 = sext i32 %332 to i64
  %334 = call %5* @_zend_hash_index_update(%9* %328, i64 %333, %5* nonnull %215) #13
  br label %337

335:                                              ; preds = %218
  %336 = call i32 @add_next_index_zval(%5* %1, %5* nonnull %215) #13
  br label %337

337:                                              ; preds = %296, %295, %286, %279, %335, %327, %324, %321, %318, %297, %249, %248
  %338 = icmp eq %5* %216, %6
  br i1 %338, label %339, label %342

339:                                              ; preds = %337
  call void @_zval_ptr_dtor(%5* nonnull %6) #13
  br label %342

340:                                              ; preds = %214
  %341 = call i32 @add_next_index_zval(%5* %1, %5* nonnull %215) #13
  br label %342

342:                                              ; preds = %171, %340, %339, %337, %196
  %343 = getelementptr inbounds %11, %11* %172, i64 1
  %344 = icmp eq %11* %343, %165
  br i1 %344, label %345, label %171

345:                                              ; preds = %342, %156, %13, %148, %40, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %5* @81(%5* %0, %5* %1, %5* %2) unnamed_addr #4 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %5, %5* %0, i64 0, i32 1
  %6 = bitcast %7* %5 to i8*
  %7 = load i8, i8* %6, align 8
  switch i8 %7, label %90 [
    i8 8, label %8
    i8 7, label %38
  ]

8:                                                ; preds = %3
  %9 = bitcast %5* %0 to %22**
  %10 = load %22*, %22** %9, align 8
  %11 = getelementptr inbounds %22, %22* %10, i64 0, i32 3
  %12 = load %23*, %23** %11, align 8
  %13 = getelementptr inbounds %23, %23* %12, i64 0, i32 11
  %14 = load i32 (%5*, %5*, i32, i8**)*, i32 (%5*, %5*, i32, i8**)** %13, align 8
  %15 = icmp eq i32 (%5*, %5*, i32, i8**)* %14, null
  br i1 %15, label %90, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %23, %23* %12, i64 0, i32 4
  %18 = load %5* (%5*, %5*, i32, i8**, %5*)*, %5* (%5*, %5*, i32, i8**, %5*)** %17, align 8
  %19 = icmp eq %5* (%5*, %5*, i32, i8**, %5*)* %18, null
  br i1 %19, label %90, label %20

20:                                               ; preds = %16
  %21 = tail call i32 %14(%5* nonnull %0, %5* %1, i32 2, i8** null) #13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %20
  %24 = load %22*, %22** %9, align 8
  %25 = getelementptr inbounds %22, %22* %24, i64 0, i32 3
  %26 = load %23*, %23** %25, align 8
  %27 = getelementptr inbounds %23, %23* %26, i64 0, i32 11
  %28 = load i32 (%5*, %5*, i32, i8**)*, i32 (%5*, %5*, i32, i8**)** %27, align 8
  %29 = tail call i32 %28(%5* nonnull %0, %5* %1, i32 0, i8** null) #13
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %90, label %31

31:                                               ; preds = %23, %20
  %32 = load %22*, %22** %9, align 8
  %33 = getelementptr inbounds %22, %22* %32, i64 0, i32 3
  %34 = load %23*, %23** %33, align 8
  %35 = getelementptr inbounds %23, %23* %34, i64 0, i32 4
  %36 = load %5* (%5*, %5*, i32, i8**, %5*)*, %5* (%5*, %5*, i32, i8**, %5*)** %35, align 8
  %37 = tail call %5* %36(%5* nonnull %0, %5* %1, i32 0, i8** null, %5* %2) #13
  br label %78

38:                                               ; preds = %3
  %39 = getelementptr inbounds %5, %5* %1, i64 0, i32 1
  %40 = bitcast %7* %39 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %90 [
    i8 6, label %42
    i8 4, label %72
  ]

42:                                               ; preds = %38
  %43 = bitcast %5* %0 to %9**
  %44 = load %9*, %9** %43, align 8
  %45 = bitcast %5* %1 to %2**
  %46 = load %2*, %2** %45, align 8
  %47 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = getelementptr inbounds %2, %2* %46, i64 0, i32 3, i64 0
  %49 = getelementptr inbounds %2, %2* %46, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = load i8, i8* %48, align 1
  %52 = icmp sgt i8 %51, 57
  br i1 %52, label %68, label %53

53:                                               ; preds = %42
  %54 = icmp slt i8 %51, 48
  br i1 %54, label %55, label %62

55:                                               ; preds = %53
  %56 = icmp eq i8 %51, 45
  br i1 %56, label %57, label %68

57:                                               ; preds = %55
  %58 = getelementptr inbounds %2, %2* %46, i64 0, i32 3, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = add i8 %59, -48
  %61 = icmp ugt i8 %60, 9
  br i1 %61, label %68, label %62

62:                                               ; preds = %57, %53
  %63 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %48, i64 %50, i64* nonnull %4) #13
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = load i64, i64* %4, align 8
  %67 = call %5* @zend_hash_index_find(%9* %44, i64 %66) #13
  br label %70

68:                                               ; preds = %62, %57, %55, %42
  %69 = call %5* @zend_hash_find(%9* %44, %2* nonnull %46) #13
  br label %70

70:                                               ; preds = %65, %68
  %71 = phi %5* [ %67, %65 ], [ %69, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %78

72:                                               ; preds = %38
  %73 = bitcast %5* %0 to %9**
  %74 = load %9*, %9** %73, align 8
  %75 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = tail call %5* @zend_hash_index_find(%9* %74, i64 %76) #13
  br label %78

78:                                               ; preds = %72, %70, %31
  %79 = phi %5* [ %37, %31 ], [ %71, %70 ], [ %77, %72 ]
  %80 = icmp eq %5* %79, null
  br i1 %80, label %90, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %5, %5* %79, i64 0, i32 1
  %83 = bitcast %7* %82 to i8*
  %84 = load i8, i8* %83, align 8
  %85 = icmp eq i8 %84, 10
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = bitcast %5* %79 to %59**
  %88 = load %59*, %59** %87, align 8
  %89 = getelementptr inbounds %59, %59* %88, i64 0, i32 1
  br label %90

90:                                               ; preds = %38, %3, %23, %86, %81, %78, %8, %16
  %91 = phi %5* [ null, %16 ], [ null, %8 ], [ %89, %86 ], [ %79, %81 ], [ null, %78 ], [ null, %23 ], [ null, %3 ], [ null, %38 ]
  ret %5* %91
}

declare dso_local i32 @add_next_index_zval(%5*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_reverse(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  %7 = icmp ugt i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 1, i32 2) #13
  br label %171

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 7
  br i1 %16, label %17, label %31

17:                                               ; preds = %9
  %18 = icmp slt i32 %5, 2
  br i1 %18, label %35, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds i8**, i8*** %10, i64 4
  %21 = bitcast i8*** %20 to %5*
  %22 = getelementptr inbounds i8**, i8*** %10, i64 5
  %23 = bitcast i8*** %22 to i8*
  %24 = load i8, i8* %23, align 8
  switch i8 %24, label %28 [
    i8 3, label %26
    i8 2, label %25
  ]

25:                                               ; preds = %19
  br label %26

26:                                               ; preds = %19, %25
  %27 = phi i8 [ 1, %19 ], [ 0, %25 ]
  store i8 %27, i8* %3, align 1
  br label %35

28:                                               ; preds = %19
  %29 = call i32 @zend_parse_arg_bool_slow(%5* nonnull %21, i8* nonnull %3) #13
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %28, %9
  %32 = phi i32 [ 2, %28 ], [ 1, %9 ]
  %33 = phi %5* [ %21, %28 ], [ %12, %9 ]
  %34 = phi i32 [ 1, %28 ], [ 3, %9 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %32, i32 %34, %5* %33) #13
  br label %171

35:                                               ; preds = %28, %17, %26
  %36 = bitcast i8*** %11 to %9**
  %37 = load %9*, %9** %36, align 8
  %38 = getelementptr inbounds %9, %9* %37, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = call i32 @_array_init(%5* %1, i32 %39) #13
  %41 = load %9*, %9** %36, align 8
  %42 = getelementptr inbounds %9, %9* %41, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 4
  %45 = icmp eq i32 %44, 0
  %46 = load i8, i8* %3, align 1
  %47 = icmp ne i8 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %130, label %49

49:                                               ; preds = %35
  %50 = bitcast %5* %1 to %9**
  %51 = load %9*, %9** %50, align 8
  call void @zend_hash_real_init(%9* %51, i8 zeroext 1) #13
  %52 = load %9*, %9** %50, align 8
  %53 = getelementptr inbounds %9, %9* %52, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = load %9*, %9** %36, align 8
  %56 = getelementptr inbounds %9, %9* %55, i64 0, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %122, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %9, %9* %52, i64 0, i32 3
  %61 = load %11*, %11** %60, align 8
  %62 = zext i32 %54 to i64
  %63 = getelementptr inbounds %11, %11* %61, i64 %62
  %64 = getelementptr inbounds %9, %9* %55, i64 0, i32 3
  %65 = zext i32 %57 to i64
  br label %66

66:                                               ; preds = %59, %117
  %67 = phi i64 [ %65, %59 ], [ %121, %117 ]
  %68 = phi %11* [ %63, %59 ], [ %119, %117 ]
  %69 = phi i32 [ %54, %59 ], [ %118, %117 ]
  %70 = load %11*, %11** %64, align 8
  %71 = trunc i64 %67 to i32
  %72 = add i32 %71, -1
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %11, %11* %70, i64 %73, i32 0
  %75 = getelementptr inbounds %11, %11* %70, i64 %73, i32 0, i32 1
  %76 = bitcast %7* %75 to i8*
  %77 = load i8, i8* %76, align 8
  switch i8 %77, label %93 [
    i8 0, label %117
    i8 10, label %78
  ]

78:                                               ; preds = %66
  %79 = bitcast %5* %74 to %61**
  %80 = load %61*, %61** %79, align 8
  %81 = getelementptr inbounds %61, %61* %80, i64 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %93

84:                                               ; preds = %78
  %85 = getelementptr inbounds %61, %61* %80, i64 1
  %86 = bitcast %61* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %61, %61* %80, i64 2, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %5, %5* %74, i64 0, i32 0, i32 0
  store i64 %87, i64* %90, align 8
  %91 = getelementptr inbounds %11, %11* %70, i64 %73, i32 0, i32 1, i32 0
  store i32 %89, i32* %91, align 8
  %92 = bitcast %61* %80 to i8*
  call void @_efree_24(i8* %92) #13
  br label %93

93:                                               ; preds = %66, %78, %84
  %94 = bitcast %7* %75 to %60*
  %95 = getelementptr inbounds %60, %60* %94, i64 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = and i8 %96, 4
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %93
  %100 = bitcast %5* %74 to %61**
  %101 = load %61*, %61** %100, align 8
  %102 = getelementptr inbounds %61, %61* %101, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %102, align 4
  br label %105

105:                                              ; preds = %93, %99
  %106 = getelementptr inbounds %5, %5* %74, i64 0, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %7, %7* %75, i64 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %11, %11* %68, i64 0, i32 0, i32 0, i32 0
  store i64 %107, i64* %110, align 8
  %111 = getelementptr inbounds %11, %11* %68, i64 0, i32 0, i32 1, i32 0
  store i32 %109, i32* %111, align 8
  %112 = zext i32 %69 to i64
  %113 = getelementptr inbounds %11, %11* %68, i64 0, i32 1
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %11, %11* %68, i64 0, i32 2
  store %2* null, %2** %114, align 8
  %115 = getelementptr inbounds %11, %11* %68, i64 1
  %116 = add i32 %69, 1
  br label %117

117:                                              ; preds = %66, %105
  %118 = phi i32 [ %116, %105 ], [ %69, %66 ]
  %119 = phi %11* [ %115, %105 ], [ %68, %66 ]
  %120 = icmp eq i32 %72, 0
  %121 = add nsw i64 %67, -1
  br i1 %120, label %122, label %66

122:                                              ; preds = %117, %49
  %123 = phi i32 [ %54, %49 ], [ %118, %117 ]
  store i32 %123, i32* %53, align 8
  %124 = getelementptr inbounds %9, %9* %52, i64 0, i32 5
  store i32 %123, i32* %124, align 4
  %125 = zext i32 %123 to i64
  %126 = getelementptr inbounds %9, %9* %52, i64 0, i32 8
  store i64 %125, i64* %126, align 8
  %127 = icmp eq i32 %123, 0
  %128 = sext i1 %127 to i32
  %129 = getelementptr inbounds %9, %9* %52, i64 0, i32 7
  store i32 %128, i32* %129, align 4
  br label %171

130:                                              ; preds = %35
  %131 = getelementptr inbounds %9, %9* %41, i64 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %171, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %9, %9* %41, i64 0, i32 3
  %136 = bitcast %5* %1 to %9**
  %137 = zext i32 %132 to i64
  br label %138

138:                                              ; preds = %134, %168
  %139 = phi i64 [ %137, %134 ], [ %170, %168 ]
  %140 = load %11*, %11** %135, align 8
  %141 = trunc i64 %139 to i32
  %142 = add i32 %141, -1
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds %11, %11* %140, i64 %143, i32 0
  %145 = getelementptr inbounds %11, %11* %140, i64 %143, i32 0, i32 1
  %146 = bitcast %7* %145 to i8*
  %147 = load i8, i8* %146, align 8
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %138
  %150 = getelementptr inbounds %11, %11* %140, i64 %143, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %11, %11* %140, i64 %143, i32 2
  %153 = load %2*, %2** %152, align 8
  %154 = icmp eq %2* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %149
  %156 = load %9*, %9** %136, align 8
  %157 = call %5* @_zend_hash_add_new(%9* %156, %2* nonnull %153, %5* nonnull %144) #13
  br label %166

158:                                              ; preds = %149
  %159 = load i8, i8* %3, align 1
  %160 = icmp eq i8 %159, 0
  %161 = load %9*, %9** %136, align 8
  br i1 %160, label %164, label %162

162:                                              ; preds = %158
  %163 = call %5* @_zend_hash_index_add_new(%9* %161, i64 %151, %5* nonnull %144) #13
  br label %166

164:                                              ; preds = %158
  %165 = call %5* @_zend_hash_next_index_insert_new(%9* %161, %5* nonnull %144) #13
  br label %166

166:                                              ; preds = %162, %164, %155
  %167 = phi %5* [ %157, %155 ], [ %163, %162 ], [ %165, %164 ]
  call void @zval_add_ref(%5* %167) #13
  br label %168

168:                                              ; preds = %138, %166
  %169 = icmp eq i32 %142, 0
  %170 = add nsw i64 %139, -1
  br i1 %169, label %171, label %138

171:                                              ; preds = %168, %130, %8, %122, %31
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_pad(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 3, i32 3) #13
  br label %362

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 7
  br i1 %16, label %17, label %32

17:                                               ; preds = %9
  %18 = getelementptr inbounds i8**, i8*** %10, i64 4
  %19 = bitcast i8*** %18 to %5*
  %20 = getelementptr inbounds i8**, i8*** %10, i64 5
  %21 = bitcast i8*** %20 to i8*
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 4
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = bitcast i8*** %18 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  br label %36

27:                                               ; preds = %17
  %28 = call i32 @zend_parse_arg_long_slow(%5* nonnull %19, i64* nonnull %3) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = load i64, i64* %3, align 8
  br label %36

32:                                               ; preds = %9, %27
  %33 = phi i32 [ 0, %27 ], [ 3, %9 ]
  %34 = phi %5* [ %19, %27 ], [ %12, %9 ]
  %35 = phi i32 [ 2, %27 ], [ 1, %9 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %35, i32 %33, %5* %34) #13
  br label %362

36:                                               ; preds = %30, %24
  %37 = phi i64 [ %31, %30 ], [ %26, %24 ]
  %38 = getelementptr inbounds i8**, i8*** %10, i64 6
  %39 = bitcast i8*** %38 to %5*
  %40 = bitcast i8*** %11 to %9**
  %41 = load %9*, %9** %40, align 8
  %42 = getelementptr inbounds %9, %9* %41, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = call i64 @imaxabs(i64 %37) #16
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %36
  %48 = sub i64 %45, %44
  %49 = icmp sgt i64 %48, 1048576
  br i1 %49, label %50, label %52

50:                                               ; preds = %47, %36
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @43, i64 0, i64 0)) #13
  %51 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %51, align 8
  br label %362

52:                                               ; preds = %47
  %53 = icmp sgt i64 %45, %44
  br i1 %53, label %65, label %54

54:                                               ; preds = %52
  %55 = bitcast i8*** %13 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = bitcast %5* %1 to %9**
  store %9* %41, %9** %57, align 8
  %58 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %56, i32* %58, align 8
  %59 = and i32 %56, 1024
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %362, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %9, %9* %41, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %62, align 4
  br label %362

65:                                               ; preds = %52
  %66 = getelementptr inbounds i8**, i8*** %10, i64 7
  %67 = bitcast i8*** %66 to %60*
  %68 = getelementptr inbounds %60, %60* %67, i64 0, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, 4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %65
  %73 = bitcast i8*** %38 to %61**
  %74 = load %61*, %61** %73, align 8
  %75 = getelementptr inbounds %61, %61* %74, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = trunc i64 %48 to i32
  %78 = add i32 %76, %77
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %65, %72
  %80 = trunc i64 %45 to i32
  %81 = call i32 @_array_init(%5* %1, i32 %80) #13
  %82 = load %9*, %9** %40, align 8
  %83 = getelementptr inbounds %9, %9* %82, i64 0, i32 1, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %284, label %87

87:                                               ; preds = %79
  %88 = bitcast %5* %1 to %9**
  %89 = load %9*, %9** %88, align 8
  call void @zend_hash_real_init(%9* %89, i8 zeroext 1) #13
  %90 = load i64, i64* %3, align 8
  %91 = icmp slt i64 %90, 0
  br i1 %91, label %92, label %155

92:                                               ; preds = %87
  %93 = load %9*, %9** %88, align 8
  %94 = getelementptr inbounds %9, %9* %93, i64 0, i32 4
  %95 = load i32, i32* %94, align 8
  %96 = icmp sgt i64 %48, 0
  br i1 %96, label %97, label %147

97:                                               ; preds = %92
  %98 = getelementptr inbounds %9, %9* %93, i64 0, i32 3
  %99 = load %11*, %11** %98, align 8
  %100 = zext i32 %95 to i64
  %101 = getelementptr inbounds %11, %11* %99, i64 %100
  %102 = bitcast i8*** %38 to i64*
  %103 = bitcast i8*** %66 to i32*
  %104 = add i32 %95, %80
  %105 = and i64 %48, 1
  %106 = add nuw nsw i64 %44, 1
  %107 = icmp eq i64 %45, %106
  br i1 %107, label %133, label %108

108:                                              ; preds = %97
  %109 = sub i64 %48, %105
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi %11* [ %101, %108 ], [ %129, %110 ]
  %112 = phi i32 [ %95, %108 ], [ %130, %110 ]
  %113 = phi i64 [ %109, %108 ], [ %131, %110 ]
  %114 = load i64, i64* %102, align 8
  %115 = load i32, i32* %103, align 8
  %116 = getelementptr inbounds %11, %11* %111, i64 0, i32 0, i32 0, i32 0
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds %11, %11* %111, i64 0, i32 0, i32 1, i32 0
  store i32 %115, i32* %117, align 8
  %118 = zext i32 %112 to i64
  %119 = getelementptr inbounds %11, %11* %111, i64 0, i32 1
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %11, %11* %111, i64 0, i32 2
  store %2* null, %2** %120, align 8
  %121 = add i32 %112, 1
  %122 = load i64, i64* %102, align 8
  %123 = load i32, i32* %103, align 8
  %124 = getelementptr inbounds %11, %11* %111, i64 1, i32 0, i32 0, i32 0
  store i64 %122, i64* %124, align 8
  %125 = getelementptr inbounds %11, %11* %111, i64 1, i32 0, i32 1, i32 0
  store i32 %123, i32* %125, align 8
  %126 = zext i32 %121 to i64
  %127 = getelementptr inbounds %11, %11* %111, i64 1, i32 1
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %11, %11* %111, i64 1, i32 2
  store %2* null, %2** %128, align 8
  %129 = getelementptr inbounds %11, %11* %111, i64 2
  %130 = add i32 %112, 2
  %131 = add i64 %113, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %110

133:                                              ; preds = %110, %97
  %134 = phi %11* [ %101, %97 ], [ %129, %110 ]
  %135 = phi i32 [ %95, %97 ], [ %130, %110 ]
  %136 = icmp eq i64 %105, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %133
  %138 = load i64, i64* %102, align 8
  %139 = load i32, i32* %103, align 8
  %140 = getelementptr inbounds %11, %11* %134, i64 0, i32 0, i32 0, i32 0
  store i64 %138, i64* %140, align 8
  %141 = getelementptr inbounds %11, %11* %134, i64 0, i32 0, i32 1, i32 0
  store i32 %139, i32* %141, align 8
  %142 = zext i32 %135 to i64
  %143 = getelementptr inbounds %11, %11* %134, i64 0, i32 1
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %11, %11* %134, i64 0, i32 2
  store %2* null, %2** %144, align 8
  br label %145

145:                                              ; preds = %133, %137
  %146 = sub i32 %104, %43
  br label %147

147:                                              ; preds = %145, %92
  %148 = phi i32 [ %95, %92 ], [ %146, %145 ]
  store i32 %148, i32* %94, align 8
  %149 = getelementptr inbounds %9, %9* %93, i64 0, i32 5
  store i32 %148, i32* %149, align 4
  %150 = zext i32 %148 to i64
  %151 = getelementptr inbounds %9, %9* %93, i64 0, i32 8
  store i64 %150, i64* %151, align 8
  %152 = icmp eq i32 %148, 0
  %153 = sext i1 %152 to i32
  %154 = getelementptr inbounds %9, %9* %93, i64 0, i32 7
  store i32 %153, i32* %154, align 4
  br label %155

155:                                              ; preds = %87, %147
  %156 = load %9*, %9** %88, align 8
  %157 = getelementptr inbounds %9, %9* %156, i64 0, i32 4
  %158 = load i32, i32* %157, align 8
  %159 = zext i32 %158 to i64
  %160 = load %9*, %9** %40, align 8
  %161 = getelementptr inbounds %9, %9* %160, i64 0, i32 3
  %162 = load %11*, %11** %161, align 8
  %163 = getelementptr inbounds %9, %9* %160, i64 0, i32 4
  %164 = load i32, i32* %163, align 8
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds %11, %11* %162, i64 %165
  %167 = icmp eq i32 %164, 0
  br i1 %167, label %211, label %168

168:                                              ; preds = %155
  %169 = getelementptr inbounds %9, %9* %156, i64 0, i32 3
  %170 = load %11*, %11** %169, align 8
  %171 = getelementptr inbounds %11, %11* %170, i64 %159
  br label %172

172:                                              ; preds = %168, %204
  %173 = phi %11* [ %206, %204 ], [ %171, %168 ]
  %174 = phi i32 [ %205, %204 ], [ %158, %168 ]
  %175 = phi %11* [ %207, %204 ], [ %162, %168 ]
  %176 = getelementptr inbounds %11, %11* %175, i64 0, i32 0, i32 1
  %177 = bitcast %7* %176 to i8*
  %178 = load i8, i8* %177, align 8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %204, label %180

180:                                              ; preds = %172
  %181 = bitcast %7* %176 to %60*
  %182 = getelementptr inbounds %60, %60* %181, i64 0, i32 1
  %183 = load i8, i8* %182, align 1
  %184 = and i8 %183, 4
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %192, label %186

186:                                              ; preds = %180
  %187 = bitcast %11* %175 to %61**
  %188 = load %61*, %61** %187, align 8
  %189 = getelementptr inbounds %61, %61* %188, i64 0, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %189, align 4
  br label %192

192:                                              ; preds = %180, %186
  %193 = getelementptr inbounds %11, %11* %175, i64 0, i32 0, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %7, %7* %176, i64 0, i32 0
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds %11, %11* %173, i64 0, i32 0, i32 0, i32 0
  store i64 %194, i64* %197, align 8
  %198 = getelementptr inbounds %11, %11* %173, i64 0, i32 0, i32 1, i32 0
  store i32 %196, i32* %198, align 8
  %199 = zext i32 %174 to i64
  %200 = getelementptr inbounds %11, %11* %173, i64 0, i32 1
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %11, %11* %173, i64 0, i32 2
  store %2* null, %2** %201, align 8
  %202 = getelementptr inbounds %11, %11* %173, i64 1
  %203 = add i32 %174, 1
  br label %204

204:                                              ; preds = %172, %192
  %205 = phi i32 [ %203, %192 ], [ %174, %172 ]
  %206 = phi %11* [ %202, %192 ], [ %173, %172 ]
  %207 = getelementptr inbounds %11, %11* %175, i64 1
  %208 = icmp eq %11* %207, %166
  br i1 %208, label %209, label %172

209:                                              ; preds = %204
  %210 = zext i32 %205 to i64
  br label %211

211:                                              ; preds = %209, %155
  %212 = phi i64 [ %210, %209 ], [ %159, %155 ]
  %213 = phi i32 [ %205, %209 ], [ %158, %155 ]
  store i32 %213, i32* %157, align 8
  %214 = getelementptr inbounds %9, %9* %156, i64 0, i32 5
  store i32 %213, i32* %214, align 4
  %215 = getelementptr inbounds %9, %9* %156, i64 0, i32 8
  store i64 %212, i64* %215, align 8
  %216 = icmp eq i32 %213, 0
  %217 = sext i1 %216 to i32
  %218 = getelementptr inbounds %9, %9* %156, i64 0, i32 7
  store i32 %217, i32* %218, align 4
  %219 = load i64, i64* %3, align 8
  %220 = icmp sgt i64 %219, 0
  br i1 %220, label %221, label %362

221:                                              ; preds = %211
  %222 = load %9*, %9** %88, align 8
  %223 = getelementptr inbounds %9, %9* %222, i64 0, i32 4
  %224 = load i32, i32* %223, align 8
  %225 = icmp sgt i64 %48, 0
  br i1 %225, label %226, label %276

226:                                              ; preds = %221
  %227 = getelementptr inbounds %9, %9* %222, i64 0, i32 3
  %228 = load %11*, %11** %227, align 8
  %229 = zext i32 %224 to i64
  %230 = getelementptr inbounds %11, %11* %228, i64 %229
  %231 = bitcast i8*** %38 to i64*
  %232 = bitcast i8*** %66 to i32*
  %233 = add i32 %224, %80
  %234 = and i64 %48, 1
  %235 = add nuw nsw i64 %44, 1
  %236 = icmp eq i64 %45, %235
  br i1 %236, label %262, label %237

237:                                              ; preds = %226
  %238 = sub i64 %48, %234
  br label %239

239:                                              ; preds = %239, %237
  %240 = phi i32 [ %224, %237 ], [ %259, %239 ]
  %241 = phi %11* [ %230, %237 ], [ %258, %239 ]
  %242 = phi i64 [ %238, %237 ], [ %260, %239 ]
  %243 = load i64, i64* %231, align 8
  %244 = load i32, i32* %232, align 8
  %245 = getelementptr inbounds %11, %11* %241, i64 0, i32 0, i32 0, i32 0
  store i64 %243, i64* %245, align 8
  %246 = getelementptr inbounds %11, %11* %241, i64 0, i32 0, i32 1, i32 0
  store i32 %244, i32* %246, align 8
  %247 = zext i32 %240 to i64
  %248 = getelementptr inbounds %11, %11* %241, i64 0, i32 1
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %11, %11* %241, i64 0, i32 2
  store %2* null, %2** %249, align 8
  %250 = add i32 %240, 1
  %251 = load i64, i64* %231, align 8
  %252 = load i32, i32* %232, align 8
  %253 = getelementptr inbounds %11, %11* %241, i64 1, i32 0, i32 0, i32 0
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %11, %11* %241, i64 1, i32 0, i32 1, i32 0
  store i32 %252, i32* %254, align 8
  %255 = zext i32 %250 to i64
  %256 = getelementptr inbounds %11, %11* %241, i64 1, i32 1
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %11, %11* %241, i64 1, i32 2
  store %2* null, %2** %257, align 8
  %258 = getelementptr inbounds %11, %11* %241, i64 2
  %259 = add i32 %240, 2
  %260 = add i64 %242, -2
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %239

262:                                              ; preds = %239, %226
  %263 = phi i32 [ %224, %226 ], [ %259, %239 ]
  %264 = phi %11* [ %230, %226 ], [ %258, %239 ]
  %265 = icmp eq i64 %234, 0
  br i1 %265, label %274, label %266

266:                                              ; preds = %262
  %267 = load i64, i64* %231, align 8
  %268 = load i32, i32* %232, align 8
  %269 = getelementptr inbounds %11, %11* %264, i64 0, i32 0, i32 0, i32 0
  store i64 %267, i64* %269, align 8
  %270 = getelementptr inbounds %11, %11* %264, i64 0, i32 0, i32 1, i32 0
  store i32 %268, i32* %270, align 8
  %271 = zext i32 %263 to i64
  %272 = getelementptr inbounds %11, %11* %264, i64 0, i32 1
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %11, %11* %264, i64 0, i32 2
  store %2* null, %2** %273, align 8
  br label %274

274:                                              ; preds = %262, %266
  %275 = sub i32 %233, %43
  br label %276

276:                                              ; preds = %274, %221
  %277 = phi i32 [ %224, %221 ], [ %275, %274 ]
  store i32 %277, i32* %223, align 8
  %278 = getelementptr inbounds %9, %9* %222, i64 0, i32 5
  store i32 %277, i32* %278, align 4
  %279 = zext i32 %277 to i64
  %280 = getelementptr inbounds %9, %9* %222, i64 0, i32 8
  store i64 %279, i64* %280, align 8
  %281 = icmp eq i32 %277, 0
  %282 = sext i1 %281 to i32
  %283 = getelementptr inbounds %9, %9* %222, i64 0, i32 7
  store i32 %282, i32* %283, align 4
  br label %362

284:                                              ; preds = %79
  %285 = load i64, i64* %3, align 8
  %286 = icmp slt i64 %285, 0
  %287 = icmp sgt i64 %48, 0
  %288 = and i1 %286, %287
  br i1 %288, label %289, label %299

289:                                              ; preds = %284
  %290 = bitcast %5* %1 to %9**
  br label %291

291:                                              ; preds = %291, %289
  %292 = phi i64 [ 0, %289 ], [ %295, %291 ]
  %293 = load %9*, %9** %290, align 8
  %294 = call %5* @_zend_hash_next_index_insert_new(%9* %293, %5* nonnull %39) #13
  %295 = add nuw nsw i64 %292, 1
  %296 = icmp eq i64 %295, %48
  br i1 %296, label %297, label %291

297:                                              ; preds = %291
  %298 = load %9*, %9** %40, align 8
  br label %299

299:                                              ; preds = %297, %284
  %300 = phi %9* [ %298, %297 ], [ %82, %284 ]
  %301 = getelementptr inbounds %9, %9* %300, i64 0, i32 3
  %302 = load %11*, %11** %301, align 8
  %303 = getelementptr inbounds %9, %9* %300, i64 0, i32 4
  %304 = load i32, i32* %303, align 8
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds %11, %11* %302, i64 %305
  %307 = icmp eq i32 %304, 0
  br i1 %307, label %350, label %308

308:                                              ; preds = %299
  %309 = bitcast %5* %1 to %9**
  br label %310

310:                                              ; preds = %308, %347
  %311 = phi %11* [ %302, %308 ], [ %348, %347 ]
  %312 = getelementptr inbounds %11, %11* %311, i64 0, i32 0
  %313 = getelementptr inbounds %11, %11* %311, i64 0, i32 0, i32 1
  %314 = bitcast %7* %313 to i8*
  %315 = load i8, i8* %314, align 8
  %316 = icmp eq i8 %315, 15
  br i1 %316, label %317, label %320

317:                                              ; preds = %310
  %318 = bitcast %11* %311 to %5**
  %319 = load %5*, %5** %318, align 8
  br label %320

320:                                              ; preds = %317, %310
  %321 = phi %5* [ %319, %317 ], [ %312, %310 ]
  %322 = getelementptr inbounds %5, %5* %321, i64 0, i32 1
  %323 = bitcast %7* %322 to i8*
  %324 = load i8, i8* %323, align 8
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %347, label %326

326:                                              ; preds = %320
  %327 = getelementptr inbounds %11, %11* %311, i64 0, i32 2
  %328 = load %2*, %2** %327, align 8
  %329 = bitcast %7* %322 to %60*
  %330 = getelementptr inbounds %60, %60* %329, i64 0, i32 1
  %331 = load i8, i8* %330, align 1
  %332 = and i8 %331, 4
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %340, label %334

334:                                              ; preds = %326
  %335 = bitcast %5* %321 to %61**
  %336 = load %61*, %61** %335, align 8
  %337 = getelementptr inbounds %61, %61* %336, i64 0, i32 0, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = add i32 %338, 1
  store i32 %339, i32* %337, align 4
  br label %340

340:                                              ; preds = %326, %334
  %341 = icmp eq %2* %328, null
  %342 = load %9*, %9** %309, align 8
  br i1 %341, label %345, label %343

343:                                              ; preds = %340
  %344 = call %5* @_zend_hash_add_new(%9* %342, %2* nonnull %328, %5* nonnull %321) #13
  br label %347

345:                                              ; preds = %340
  %346 = call %5* @_zend_hash_next_index_insert_new(%9* %342, %5* nonnull %321) #13
  br label %347

347:                                              ; preds = %343, %345, %320
  %348 = getelementptr inbounds %11, %11* %311, i64 1
  %349 = icmp eq %11* %348, %306
  br i1 %349, label %350, label %310

350:                                              ; preds = %347, %299
  %351 = load i64, i64* %3, align 8
  %352 = icmp sgt i64 %351, 0
  %353 = and i1 %352, %287
  br i1 %353, label %354, label %362

354:                                              ; preds = %350
  %355 = bitcast %5* %1 to %9**
  br label %356

356:                                              ; preds = %356, %354
  %357 = phi i64 [ 0, %354 ], [ %360, %356 ]
  %358 = load %9*, %9** %355, align 8
  %359 = call %5* @_zend_hash_next_index_insert_new(%9* %358, %5* nonnull %39) #13
  %360 = add nuw nsw i64 %357, 1
  %361 = icmp eq i64 %360, %48
  br i1 %361, label %362, label %356

362:                                              ; preds = %356, %8, %276, %211, %350, %61, %54, %32, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind readnone
declare dso_local i64 @imaxabs(i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define hidden void @zif_array_flip(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %5, align 8
  %5 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %7, i32 1, i32 1) #13
  br label %127

10:                                               ; preds = %2
  %11 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %12 = getelementptr inbounds i8**, i8*** %11, i64 2
  %13 = getelementptr inbounds i8**, i8*** %11, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 7
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast i8*** %12 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %18) #13
  br label %127

19:                                               ; preds = %10
  %20 = bitcast i8*** %12 to %9**
  %21 = load %9*, %9** %20, align 8
  %22 = getelementptr inbounds %9, %9* %21, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = tail call i32 @_array_init(%5* %1, i32 %23) #13
  %25 = load %9*, %9** %20, align 8
  %26 = getelementptr inbounds %9, %9* %25, i64 0, i32 3
  %27 = load %11*, %11** %26, align 8
  %28 = getelementptr inbounds %9, %9* %25, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %11, %11* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %127, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %36 = bitcast %5* %1 to %9**
  %37 = bitcast %5* %4 to %2**
  %38 = bitcast i64* %3 to i8*
  br label %39

39:                                               ; preds = %33, %124
  %40 = phi %11* [ %27, %33 ], [ %125, %124 ]
  %41 = getelementptr inbounds %11, %11* %40, i64 0, i32 0, i32 1
  %42 = bitcast %7* %41 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %124, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %11, %11* %40, i64 0, i32 0
  %47 = getelementptr inbounds %11, %11* %40, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %11, %11* %40, i64 0, i32 2
  %50 = load %2*, %2** %49, align 8
  %51 = icmp eq i8 %43, 10
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = bitcast %11* %40 to %59**
  %54 = load %59*, %59** %53, align 8
  %55 = getelementptr inbounds %59, %59* %54, i64 0, i32 1
  br label %56

56:                                               ; preds = %52, %45
  %57 = phi %5* [ %55, %52 ], [ %46, %45 ]
  %58 = getelementptr inbounds %5, %5* %57, i64 0, i32 1
  %59 = bitcast %7* %58 to i8*
  %60 = load i8, i8* %59, align 8
  switch i8 %60, label %123 [
    i8 4, label %61
    i8 6, label %81
  ]

61:                                               ; preds = %56
  %62 = icmp eq %2* %50, null
  br i1 %62, label %74, label %63

63:                                               ; preds = %61
  store %2* %50, %2** %37, align 8
  %64 = getelementptr inbounds %2, %2* %50, i64 0, i32 0, i32 1
  %65 = bitcast %4* %64 to %63*
  %66 = getelementptr inbounds %63, %63* %65, i64 0, i32 1
  %67 = load i8, i8* %66, align 1
  %68 = and i8 %67, 2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %63
  %71 = getelementptr inbounds %2, %2* %50, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 8
  br label %75

74:                                               ; preds = %61
  store i64 %48, i64* %34, align 8
  br label %75

75:                                               ; preds = %63, %70, %74
  %76 = phi i32 [ 5126, %70 ], [ 4, %74 ], [ 6, %63 ]
  store i32 %76, i32* %35, align 8
  %77 = load %9*, %9** %36, align 8
  %78 = getelementptr inbounds %5, %5* %57, i64 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = call %5* @_zend_hash_index_update(%9* %77, i64 %79, %5* nonnull %4) #13
  br label %124

81:                                               ; preds = %56
  %82 = icmp eq %2* %50, null
  br i1 %82, label %94, label %83

83:                                               ; preds = %81
  store %2* %50, %2** %37, align 8
  %84 = getelementptr inbounds %2, %2* %50, i64 0, i32 0, i32 1
  %85 = bitcast %4* %84 to %63*
  %86 = getelementptr inbounds %63, %63* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, 2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %83
  %91 = getelementptr inbounds %2, %2* %50, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 8
  br label %95

94:                                               ; preds = %81
  store i64 %48, i64* %34, align 8
  br label %95

95:                                               ; preds = %83, %90, %94
  %96 = phi i32 [ 5126, %90 ], [ 4, %94 ], [ 6, %83 ]
  store i32 %96, i32* %35, align 8
  %97 = load %9*, %9** %36, align 8
  %98 = bitcast %5* %57 to %2**
  %99 = load %2*, %2** %98, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %100 = getelementptr inbounds %2, %2* %99, i64 0, i32 3, i64 0
  %101 = getelementptr inbounds %2, %2* %99, i64 0, i32 2
  %102 = load i64, i64* %101, align 8
  %103 = load i8, i8* %100, align 1
  %104 = icmp sgt i8 %103, 57
  br i1 %104, label %120, label %105

105:                                              ; preds = %95
  %106 = icmp slt i8 %103, 48
  br i1 %106, label %107, label %114

107:                                              ; preds = %105
  %108 = icmp eq i8 %103, 45
  br i1 %108, label %109, label %120

109:                                              ; preds = %107
  %110 = getelementptr inbounds %2, %2* %99, i64 0, i32 3, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = add i8 %111, -48
  %113 = icmp ugt i8 %112, 9
  br i1 %113, label %120, label %114

114:                                              ; preds = %109, %105
  %115 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %100, i64 %102, i64* nonnull %3) #13
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = load i64, i64* %3, align 8
  %119 = call %5* @_zend_hash_index_update(%9* %97, i64 %118, %5* nonnull %4) #13
  br label %122

120:                                              ; preds = %114, %109, %107, %95
  %121 = call %5* @_zend_hash_update(%9* %97, %2* nonnull %99, %5* nonnull %4) #13
  br label %122

122:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %124

123:                                              ; preds = %56
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @44, i64 0, i64 0)) #13
  br label %124

124:                                              ; preds = %75, %123, %122, %39
  %125 = getelementptr inbounds %11, %11* %40, i64 1
  %126 = icmp eq %11* %125, %31
  br i1 %126, label %127, label %39

127:                                              ; preds = %124, %19, %9, %17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_change_key_case(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 7
  br i1 %16, label %17, label %33

17:                                               ; preds = %9
  %18 = icmp slt i32 %6, 2
  br i1 %18, label %37, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds i8**, i8*** %10, i64 4
  %21 = bitcast i8*** %20 to %5*
  %22 = getelementptr inbounds i8**, i8*** %10, i64 5
  %23 = bitcast i8*** %22 to i8*
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 4
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast i8*** %20 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %3, align 8
  br label %37

29:                                               ; preds = %19
  %30 = call i32 @zend_parse_arg_long_slow(%5* nonnull %21, i64* nonnull %3) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %37

32:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %102

33:                                               ; preds = %29, %9
  %34 = phi %5* [ %12, %9 ], [ %21, %29 ]
  %35 = phi i32 [ 3, %9 ], [ 0, %29 ]
  %36 = phi i32 [ 1, %9 ], [ 2, %29 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %36, i32 %35, %5* %34) #13
  br label %102

37:                                               ; preds = %17, %29, %26
  %38 = bitcast i8*** %11 to %9**
  %39 = load %9*, %9** %38, align 8
  %40 = getelementptr inbounds %9, %9* %39, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @_array_init(%5* %1, i32 %41) #13
  %43 = load %9*, %9** %38, align 8
  %44 = getelementptr inbounds %9, %9* %43, i64 0, i32 3
  %45 = load %11*, %11** %44, align 8
  %46 = getelementptr inbounds %9, %9* %43, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %11, %11* %45, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %102, label %51

51:                                               ; preds = %37
  %52 = bitcast %5* %1 to %9**
  br label %53

53:                                               ; preds = %51, %99
  %54 = phi %11* [ %45, %51 ], [ %100, %99 ]
  %55 = getelementptr inbounds %11, %11* %54, i64 0, i32 0
  %56 = getelementptr inbounds %11, %11* %54, i64 0, i32 0, i32 1
  %57 = bitcast %7* %56 to i8*
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %99, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %11, %11* %54, i64 0, i32 2
  %62 = load %2*, %2** %61, align 8
  %63 = icmp eq %2* %62, null
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = getelementptr inbounds %11, %11* %54, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = load %9*, %9** %52, align 8
  %68 = call %5* @_zend_hash_index_update(%9* %67, i64 %66, %5* nonnull %55) #13
  br label %97

69:                                               ; preds = %60
  %70 = load i64, i64* %3, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = call %2* @php_string_toupper(%2* nonnull %62) #13
  br label %76

74:                                               ; preds = %69
  %75 = call %2* @php_string_tolower(%2* nonnull %62) #13
  br label %76

76:                                               ; preds = %74, %72
  %77 = phi %2* [ %73, %72 ], [ %75, %74 ]
  %78 = load %9*, %9** %52, align 8
  %79 = call %5* @_zend_hash_update(%9* %78, %2* %77, %5* nonnull %55) #13
  %80 = getelementptr inbounds %2, %2* %77, i64 0, i32 0, i32 1
  %81 = bitcast %4* %80 to %63*
  %82 = getelementptr inbounds %63, %63* %81, i64 0, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = and i8 %83, 2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %97

86:                                               ; preds = %76
  %87 = getelementptr inbounds %2, %2* %77, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, -1
  store i32 %89, i32* %87, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = and i8 %83, 1
  %93 = icmp eq i8 %92, 0
  %94 = bitcast %2* %77 to i8*
  br i1 %93, label %96, label %95

95:                                               ; preds = %91
  call void @free(i8* %94) #13
  br label %97

96:                                               ; preds = %91
  call void @_efree(i8* %94) #13
  br label %97

97:                                               ; preds = %96, %95, %86, %76, %64
  %98 = phi %5* [ %68, %64 ], [ %79, %76 ], [ %79, %86 ], [ %79, %95 ], [ %79, %96 ]
  call void @zval_add_ref(%5* %98) #13
  br label %99

99:                                               ; preds = %53, %97
  %100 = getelementptr inbounds %11, %11* %54, i64 1
  %101 = icmp eq %11* %100, %49
  br i1 %101, label %102, label %53

102:                                              ; preds = %99, %37, %32, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare dso_local %2* @php_string_toupper(%2*) local_unnamed_addr #1

declare dso_local %2* @php_string_tolower(%2*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_unique(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %9, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i64 2, i64* %3, align 8
  %6 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %33, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %12 = getelementptr inbounds i8**, i8*** %11, i64 2
  %13 = bitcast i8*** %12 to %5*
  %14 = getelementptr inbounds i8**, i8*** %11, i64 3
  %15 = bitcast i8*** %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 7
  br i1 %17, label %18, label %34

18:                                               ; preds = %10
  %19 = icmp slt i32 %7, 2
  br i1 %19, label %38, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds i8**, i8*** %11, i64 4
  %22 = bitcast i8*** %21 to %5*
  %23 = getelementptr inbounds i8**, i8*** %11, i64 5
  %24 = bitcast i8*** %23 to i8*
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 4
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = bitcast i8*** %21 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %3, align 8
  br label %38

30:                                               ; preds = %20
  %31 = call i32 @zend_parse_arg_long_slow(%5* nonnull %22, i64* nonnull %3) #13
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %38

33:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %7, i32 1, i32 2) #13
  br label %283

34:                                               ; preds = %30, %10
  %35 = phi i32 [ 3, %10 ], [ 0, %30 ]
  %36 = phi %5* [ %13, %10 ], [ %22, %30 ]
  %37 = phi i32 [ 1, %10 ], [ 2, %30 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %37, i32 %35, %5* %36) #13
  br label %283

38:                                               ; preds = %18, %30, %27
  %39 = bitcast i8*** %12 to %9**
  %40 = load %9*, %9** %39, align 8
  %41 = getelementptr inbounds %9, %9* %40, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %55

44:                                               ; preds = %38
  %45 = bitcast i8*** %14 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %5* %1 to %9**
  store %9* %40, %9** %47, align 8
  %48 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 1024
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %283, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %9, %9* %40, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 4
  br label %283

55:                                               ; preds = %38
  %56 = load i64, i64* %3, align 8
  %57 = icmp eq i64 %56, 2
  br i1 %57, label %58, label %159

58:                                               ; preds = %55
  %59 = bitcast %9* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %59) #13
  call void @_zend_hash_init(%9* nonnull %4, i32 %42, void (%5*)* null, i8 zeroext 0) #13
  %60 = call i32 @_array_init(%5* %1, i32 0) #13
  %61 = load %9*, %9** %39, align 8
  %62 = getelementptr inbounds %9, %9* %61, i64 0, i32 3
  %63 = load %11*, %11** %62, align 8
  %64 = getelementptr inbounds %9, %9* %61, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %11, %11* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %158, label %69

69:                                               ; preds = %58
  %70 = bitcast %5* %1 to %9**
  br label %71

71:                                               ; preds = %69, %155
  %72 = phi %11* [ %63, %69 ], [ %156, %155 ]
  %73 = getelementptr inbounds %11, %11* %72, i64 0, i32 0
  %74 = getelementptr inbounds %11, %11* %72, i64 0, i32 0, i32 1
  %75 = bitcast %7* %74 to i8*
  %76 = load i8, i8* %75, align 8
  %77 = icmp eq i8 %76, 15
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  %79 = bitcast %11* %72 to %5**
  %80 = load %5*, %5** %79, align 8
  br label %81

81:                                               ; preds = %78, %71
  %82 = phi %5* [ %80, %78 ], [ %73, %71 ]
  %83 = getelementptr inbounds %5, %5* %82, i64 0, i32 1
  %84 = bitcast %7* %83 to i8*
  %85 = load i8, i8* %84, align 8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %155, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %11, %11* %72, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %11, %11* %72, i64 0, i32 2
  %91 = load %2*, %2** %90, align 8
  %92 = icmp eq i8 %85, 6
  br i1 %92, label %93, label %97

93:                                               ; preds = %87
  %94 = bitcast %5* %82 to %2**
  %95 = load %2*, %2** %94, align 8
  %96 = call %5* @zend_hash_add_empty_element(%9* nonnull %4, %2* %95) #13
  br label %117

97:                                               ; preds = %87
  %98 = call %2* @_zval_get_string_func(%5* nonnull %82) #13
  %99 = call %5* @zend_hash_add_empty_element(%9* nonnull %4, %2* %98) #13
  %100 = getelementptr inbounds %2, %2* %98, i64 0, i32 0, i32 1
  %101 = bitcast %4* %100 to %63*
  %102 = getelementptr inbounds %63, %63* %101, i64 0, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = and i8 %103, 2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %117

106:                                              ; preds = %97
  %107 = getelementptr inbounds %2, %2* %98, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, -1
  store i32 %109, i32* %107, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %117

111:                                              ; preds = %106
  %112 = and i8 %103, 1
  %113 = icmp eq i8 %112, 0
  %114 = bitcast %2* %98 to i8*
  br i1 %113, label %116, label %115

115:                                              ; preds = %111
  call void @free(i8* %114) #13
  br label %117

116:                                              ; preds = %111
  call void @_efree(i8* %114) #13
  br label %117

117:                                              ; preds = %116, %115, %106, %97, %93
  %118 = phi %5* [ %96, %93 ], [ %99, %97 ], [ %99, %106 ], [ %99, %115 ], [ %99, %116 ]
  %119 = icmp eq %5* %118, null
  br i1 %119, label %155, label %120

120:                                              ; preds = %117
  %121 = load i8, i8* %84, align 8
  %122 = icmp eq i8 %121, 10
  br i1 %122, label %123, label %134

123:                                              ; preds = %120
  %124 = bitcast %5* %82 to %61**
  %125 = load %61*, %61** %124, align 8
  %126 = getelementptr inbounds %61, %61* %125, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %134

129:                                              ; preds = %123
  %130 = getelementptr inbounds %61, %61* %125, i64 1
  %131 = bitcast %61* %130 to %5*
  %132 = getelementptr inbounds %61, %61* %125, i64 2
  %133 = bitcast %61* %132 to %7*
  br label %134

134:                                              ; preds = %120, %123, %129
  %135 = phi %7* [ %83, %120 ], [ %83, %123 ], [ %133, %129 ]
  %136 = phi %5* [ %82, %120 ], [ %82, %123 ], [ %131, %129 ]
  %137 = bitcast %7* %135 to %60*
  %138 = getelementptr inbounds %60, %60* %137, i64 0, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = and i8 %139, 4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %134
  %143 = bitcast %5* %136 to %61**
  %144 = load %61*, %61** %143, align 8
  %145 = getelementptr inbounds %61, %61* %144, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 4
  br label %148

148:                                              ; preds = %134, %142
  %149 = icmp eq %2* %91, null
  %150 = load %9*, %9** %70, align 8
  br i1 %149, label %153, label %151

151:                                              ; preds = %148
  %152 = call %5* @_zend_hash_add_new(%9* %150, %2* nonnull %91, %5* nonnull %136) #13
  br label %155

153:                                              ; preds = %148
  %154 = call %5* @_zend_hash_index_add_new(%9* %150, i64 %89, %5* nonnull %136) #13
  br label %155

155:                                              ; preds = %153, %151, %117, %81
  %156 = getelementptr inbounds %11, %11* %72, i64 1
  %157 = icmp eq %11* %156, %67
  br i1 %157, label %158, label %71

158:                                              ; preds = %155, %58
  call void @zend_hash_destroy(%9* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #13
  br label %283

159:                                              ; preds = %55
  %160 = and i64 %56, -9
  switch i64 %160, label %170 [
    i64 1, label %171
    i64 2, label %161
    i64 6, label %165
    i64 5, label %169
  ]

161:                                              ; preds = %159
  %162 = and i64 %56, 8
  %163 = icmp eq i64 %162, 0
  %164 = select i1 %163, i32 (i8*, i8*)* @111, i32 (i8*, i8*)* @109
  br label %171

165:                                              ; preds = %159
  %166 = and i64 %56, 8
  %167 = icmp eq i64 %166, 0
  %168 = select i1 %167, i32 (i8*, i8*)* @104, i32 (i8*, i8*)* @103
  br label %171

169:                                              ; preds = %159
  br label %171

170:                                              ; preds = %159
  br label %171

171:                                              ; preds = %165, %161, %159, %169, %170
  %172 = phi i32 (i8*, i8*)* [ @115, %169 ], [ @76, %170 ], [ @107, %159 ], [ %164, %161 ], [ %168, %165 ]
  %173 = call %9* @zend_array_dup(%9* %40) #13
  %174 = bitcast %5* %1 to %9**
  store %9* %173, %9** %174, align 8
  %175 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5127, i32* %175, align 8
  %176 = load %9*, %9** %39, align 8
  %177 = getelementptr inbounds %9, %9* %176, i64 0, i32 1, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %9, %9* %176, i64 0, i32 5
  %182 = load i32, i32* %181, align 4
  %183 = add i32 %182, 1
  %184 = zext i32 %183 to i64
  %185 = mul nuw nsw i64 %184, 40
  br i1 %180, label %188, label %186

186:                                              ; preds = %171
  %187 = call noalias i8* @__zend_malloc(i64 %185) #15
  br label %190

188:                                              ; preds = %171
  %189 = call noalias i8* @_emalloc(i64 %185) #15
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i8* [ %187, %186 ], [ %189, %188 ]
  %192 = bitcast i8* %191 to %66*
  %193 = load %9*, %9** %39, align 8
  %194 = getelementptr inbounds %9, %9* %193, i64 0, i32 4
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %229, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %9, %9* %193, i64 0, i32 3
  br label %199

199:                                              ; preds = %197, %223
  %200 = phi i32 [ %195, %197 ], [ %224, %223 ]
  %201 = phi i64 [ 0, %197 ], [ %226, %223 ]
  %202 = phi i32 [ 0, %197 ], [ %225, %223 ]
  %203 = load %11*, %11** %198, align 8
  %204 = getelementptr inbounds %11, %11* %203, i64 %201
  %205 = getelementptr inbounds %11, %11* %203, i64 %201, i32 0, i32 1
  %206 = bitcast %7* %205 to i8*
  %207 = load i8, i8* %206, align 8
  switch i8 %207, label %215 [
    i8 0, label %223
    i8 15, label %208
  ]

208:                                              ; preds = %199
  %209 = bitcast %11* %204 to %5**
  %210 = load %5*, %5** %209, align 8
  %211 = getelementptr inbounds %5, %5* %210, i64 0, i32 1
  %212 = bitcast %7* %211 to i8*
  %213 = load i8, i8* %212, align 8
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %223, label %215

215:                                              ; preds = %199, %208
  %216 = zext i32 %202 to i64
  %217 = getelementptr inbounds %66, %66* %192, i64 %216
  %218 = bitcast %66* %217 to i8*
  %219 = bitcast %11* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 32, i1 false)
  %220 = getelementptr inbounds %66, %66* %192, i64 %216, i32 1
  store i32 %202, i32* %220, align 8
  %221 = add i32 %202, 1
  %222 = load i32, i32* %194, align 8
  br label %223

223:                                              ; preds = %199, %208, %215
  %224 = phi i32 [ %200, %199 ], [ %200, %208 ], [ %222, %215 ]
  %225 = phi i32 [ %202, %199 ], [ %202, %208 ], [ %221, %215 ]
  %226 = add nuw nsw i64 %201, 1
  %227 = zext i32 %224 to i64
  %228 = icmp ult i64 %226, %227
  br i1 %228, label %199, label %229

229:                                              ; preds = %223, %190
  %230 = phi i32 [ 0, %190 ], [ %225, %223 ]
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds %66, %66* %192, i64 %231, i32 0, i32 0, i32 1, i32 0
  store i32 0, i32* %232, align 8
  call void @zend_sort(i8* %191, i64 %231, i64 40, i32 (i8*, i8*)* %172, void (i8*, i8*)* nonnull @82) #13
  %233 = getelementptr inbounds i8, i8* %191, i64 48
  %234 = load i8, i8* %233, align 8
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %275, label %236

236:                                              ; preds = %229
  %237 = getelementptr inbounds i8, i8* %191, i64 40
  %238 = bitcast i8* %237 to %66*
  br label %239

239:                                              ; preds = %236, %268
  %240 = phi %66* [ %270, %268 ], [ %238, %236 ]
  %241 = phi %66* [ %269, %268 ], [ %192, %236 ]
  %242 = bitcast %66* %241 to i8*
  %243 = bitcast %66* %240 to i8*
  %244 = call i32 %172(i8* %242, i8* %243) #13
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %268

246:                                              ; preds = %239
  %247 = getelementptr inbounds %66, %66* %241, i64 0, i32 1
  %248 = load i32, i32* %247, align 8
  %249 = getelementptr inbounds %66, %66* %240, i64 0, i32 1
  %250 = load i32, i32* %249, align 8
  %251 = icmp ugt i32 %248, %250
  %252 = select i1 %251, %66* %240, %66* %241
  %253 = select i1 %251, %66* %241, %66* %240
  %254 = getelementptr inbounds %66, %66* %253, i64 0, i32 0, i32 2
  %255 = load %2*, %2** %254, align 8
  %256 = icmp eq %2* %255, null
  %257 = load %9*, %9** %174, align 8
  br i1 %256, label %258, label %262

258:                                              ; preds = %246
  %259 = getelementptr inbounds %66, %66* %253, i64 0, i32 0, i32 1
  %260 = load i64, i64* %259, align 8
  %261 = call i32 @zend_hash_index_del(%9* %257, i64 %260) #13
  br label %268

262:                                              ; preds = %246
  %263 = icmp eq %9* %257, getelementptr inbounds (%47, %47* @executor_globals, i64 0, i32 5)
  br i1 %263, label %264, label %266

264:                                              ; preds = %262
  %265 = call i32 @zend_delete_global_variable(%2* nonnull %255) #13
  br label %268

266:                                              ; preds = %262
  %267 = call i32 @zend_hash_del(%9* %257, %2* nonnull %255) #13
  br label %268

268:                                              ; preds = %239, %264, %266, %258
  %269 = phi %66* [ %252, %258 ], [ %252, %264 ], [ %252, %266 ], [ %240, %239 ]
  %270 = getelementptr inbounds %66, %66* %240, i64 1
  %271 = getelementptr inbounds %66, %66* %240, i64 1, i32 0, i32 0, i32 1
  %272 = bitcast %7* %271 to i8*
  %273 = load i8, i8* %272, align 8
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %239

275:                                              ; preds = %268, %229
  %276 = load %9*, %9** %39, align 8
  %277 = getelementptr inbounds %9, %9* %276, i64 0, i32 1, i32 0
  %278 = load i32, i32* %277, align 8
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %282, label %281

281:                                              ; preds = %275
  call void @free(i8* %191) #13
  br label %283

282:                                              ; preds = %275
  call void @_efree(i8* %191) #13
  br label %283

283:                                              ; preds = %33, %281, %282, %51, %44, %34, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare dso_local %5* @zend_hash_add_empty_element(%9*, %2*) local_unnamed_addr #1

declare dso_local %9* @zend_array_dup(%9*) local_unnamed_addr #1

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) local_unnamed_addr #6

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define internal void @82(i8* nocapture %0, i8* nocapture %1) #0 {
  %3 = alloca %66, align 8
  %4 = bitcast %66* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %0, i64 40, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* nonnull align 8 %4, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8* nocapture) local_unnamed_addr #7

declare dso_local void @_efree(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_intersect_key(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @83(%24* %0, %5* %1, i32 -1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @83(%24* nocapture readonly %0, %5* %1, i32 %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %5*, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13
  %7 = bitcast %5** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4, align 4
  switch i32 %2, label %11 [
    i32 1, label %12
    i32 0, label %10
  ]

10:                                               ; preds = %3
  br label %12

11:                                               ; preds = %3
  br label %12

12:                                               ; preds = %3, %11, %10
  %13 = phi i32 [ 2, %10 ], [ 3, %3 ], [ 2, %11 ]
  %14 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %10 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %11 ]
  %15 = phi i32 (%5*, %5*)* [ @118, %10 ], [ @117, %3 ], [ null, %11 ]
  %16 = icmp slt i32 %9, %13
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @66, i64 0, i64 0), i32 %13, i32 %9) #13
  br label %197

18:                                               ; preds = %12
  %19 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %9, i8* %14, %5** nonnull %5, i32* nonnull %4, %34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13)) #13
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %197, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %4, align 4
  %23 = load %5*, %5** %5, align 8
  %24 = sext i32 %22 to i64
  br label %25

25:                                               ; preds = %21, %28
  %26 = phi i64 [ 0, %21 ], [ %33, %28 ]
  %27 = icmp slt i64 %26, %24
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = getelementptr inbounds %5, %5* %23, i64 %26, i32 1
  %30 = bitcast %7* %29 to i8*
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 7
  %33 = add nuw nsw i64 %26, 1
  br i1 %32, label %25, label %34

34:                                               ; preds = %28
  %35 = trunc i64 %33 to i32
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %35) #13
  %36 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %36, align 8
  br label %197

37:                                               ; preds = %25
  %38 = call i32 @_array_init(%5* %1, i32 0) #13
  %39 = bitcast %5** %5 to %9***
  %40 = load %9**, %9*** %39, align 8
  %41 = load %9*, %9** %40, align 8
  %42 = getelementptr inbounds %9, %9* %41, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %197, label %45

45:                                               ; preds = %37
  %46 = icmp eq i32 (%5*, %5*)* %15, null
  %47 = bitcast %5* %1 to %9**
  br label %48

48:                                               ; preds = %45, %189
  %49 = phi i64 [ 0, %45 ], [ %190, %189 ]
  %50 = phi %9* [ %41, %45 ], [ %192, %189 ]
  %51 = getelementptr inbounds %9, %9* %50, i64 0, i32 3
  %52 = load %11*, %11** %51, align 8
  %53 = getelementptr inbounds %11, %11* %52, i64 %49
  %54 = getelementptr inbounds %11, %11* %52, i64 %49, i32 0, i32 1
  %55 = bitcast %7* %54 to i8*
  %56 = load i8, i8* %55, align 8
  switch i8 %56, label %57 [
    i8 0, label %189
    i8 15, label %60
  ]

57:                                               ; preds = %48
  %58 = getelementptr inbounds %11, %11* %53, i64 0, i32 0
  %59 = getelementptr inbounds %11, %11* %52, i64 %49, i32 0, i32 1
  br label %67

60:                                               ; preds = %48
  %61 = bitcast %11* %53 to %5**
  %62 = load %5*, %5** %61, align 8
  %63 = getelementptr inbounds %5, %5* %62, i64 0, i32 1
  %64 = bitcast %7* %63 to i8*
  %65 = load i8, i8* %64, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %189, label %67

67:                                               ; preds = %57, %60
  %68 = phi %7* [ %59, %57 ], [ %63, %60 ]
  %69 = phi i8 [ %56, %57 ], [ %65, %60 ]
  %70 = phi %5* [ %58, %57 ], [ %62, %60 ]
  %71 = icmp eq i8 %69, 10
  br i1 %71, label %72, label %87

72:                                               ; preds = %67
  %73 = bitcast %5* %70 to %61**
  %74 = load %61*, %61** %73, align 8
  %75 = getelementptr inbounds %61, %61* %74, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %87

78:                                               ; preds = %72
  %79 = getelementptr inbounds %61, %61* %74, i64 1
  %80 = bitcast %61* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %61, %61* %74, i64 2, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %5, %5* %70, i64 0, i32 0, i32 0
  store i64 %81, i64* %84, align 8
  %85 = getelementptr inbounds %5, %5* %70, i64 0, i32 1, i32 0
  store i32 %83, i32* %85, align 8
  %86 = bitcast %61* %74 to i8*
  call void @_efree_24(i8* %86) #13
  br label %87

87:                                               ; preds = %78, %72, %67
  %88 = getelementptr inbounds %11, %11* %52, i64 %49, i32 2
  %89 = load %2*, %2** %88, align 8
  %90 = icmp eq %2* %89, null
  %91 = load i32, i32* %4, align 4
  %92 = icmp sgt i32 %91, 1
  br i1 %90, label %101, label %93

93:                                               ; preds = %87
  br i1 %92, label %94, label %173

94:                                               ; preds = %93
  %95 = load %5*, %5** %5, align 8
  %96 = getelementptr inbounds %5, %5* %95, i64 1, i32 0
  %97 = bitcast %6* %96 to %9**
  %98 = load %9*, %9** %97, align 8
  %99 = call %5* @zend_hash_find(%9* %98, %2* nonnull %89) #13
  %100 = icmp eq %5* %99, null
  br i1 %100, label %189, label %139

101:                                              ; preds = %87
  br i1 %92, label %102, label %122

102:                                              ; preds = %101
  %103 = getelementptr inbounds %11, %11* %52, i64 %49, i32 1
  br label %104

104:                                              ; preds = %102, %117
  %105 = phi i64 [ 1, %102 ], [ %118, %117 ]
  %106 = load %5*, %5** %5, align 8
  %107 = getelementptr inbounds %5, %5* %106, i64 %105, i32 0
  %108 = bitcast %6* %107 to %9**
  %109 = load %9*, %9** %108, align 8
  %110 = load i64, i64* %103, align 8
  %111 = call %5* @zend_hash_index_find(%9* %109, i64 %110) #13
  %112 = icmp eq %5* %111, null
  br i1 %112, label %189, label %113

113:                                              ; preds = %104
  br i1 %46, label %117, label %114

114:                                              ; preds = %113
  %115 = call i32 %15(%5* %70, %5* nonnull %111) #13
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %189

117:                                              ; preds = %114, %113
  %118 = add nuw nsw i64 %105, 1
  %119 = load i32, i32* %4, align 4
  %120 = sext i32 %119 to i64
  %121 = icmp slt i64 %118, %120
  br i1 %121, label %104, label %122

122:                                              ; preds = %117, %101
  %123 = bitcast %7* %68 to %60*
  %124 = getelementptr inbounds %60, %60* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %122
  %129 = bitcast %5* %70 to %61**
  %130 = load %61*, %61** %129, align 8
  %131 = getelementptr inbounds %61, %61* %130, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 4
  br label %134

134:                                              ; preds = %122, %128
  %135 = load %9*, %9** %47, align 8
  %136 = getelementptr inbounds %11, %11* %52, i64 %49, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = call %5* @_zend_hash_index_update(%9* %135, i64 %137, %5* nonnull %70) #13
  br label %189

139:                                              ; preds = %94, %165
  %140 = phi %5* [ %171, %165 ], [ %99, %94 ]
  %141 = phi i64 [ %161, %165 ], [ 1, %94 ]
  %142 = getelementptr inbounds %5, %5* %140, i64 0, i32 1
  %143 = bitcast %7* %142 to i8*
  %144 = load i8, i8* %143, align 8
  %145 = icmp eq i8 %144, 15
  br i1 %145, label %146, label %155

146:                                              ; preds = %139
  %147 = bitcast %5* %140 to %5**
  %148 = load %5*, %5** %147, align 8
  %149 = getelementptr inbounds %5, %5* %148, i64 0, i32 1
  %150 = bitcast %7* %149 to i8*
  %151 = load i8, i8* %150, align 8
  %152 = icmp eq i8 %151, 0
  %153 = icmp eq %5* %148, null
  %154 = or i1 %153, %152
  br i1 %154, label %189, label %155

155:                                              ; preds = %146, %139
  %156 = phi %5* [ %140, %139 ], [ %148, %146 ]
  br i1 %46, label %160, label %157

157:                                              ; preds = %155
  %158 = call i32 %15(%5* %70, %5* nonnull %156) #13
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %189

160:                                              ; preds = %157, %155
  %161 = add nuw nsw i64 %141, 1
  %162 = load i32, i32* %4, align 4
  %163 = sext i32 %162 to i64
  %164 = icmp slt i64 %161, %163
  br i1 %164, label %165, label %173

165:                                              ; preds = %160
  %166 = load %2*, %2** %88, align 8
  %167 = load %5*, %5** %5, align 8
  %168 = getelementptr inbounds %5, %5* %167, i64 %161, i32 0
  %169 = bitcast %6* %168 to %9**
  %170 = load %9*, %9** %169, align 8
  %171 = call %5* @zend_hash_find(%9* %170, %2* %166) #13
  %172 = icmp eq %5* %171, null
  br i1 %172, label %189, label %139

173:                                              ; preds = %160, %93
  %174 = bitcast %7* %68 to %60*
  %175 = getelementptr inbounds %60, %60* %174, i64 0, i32 1
  %176 = load i8, i8* %175, align 1
  %177 = and i8 %176, 4
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = bitcast %5* %70 to %61**
  %181 = load %61*, %61** %180, align 8
  %182 = getelementptr inbounds %61, %61* %181, i64 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %182, align 4
  br label %185

185:                                              ; preds = %173, %179
  %186 = load %9*, %9** %47, align 8
  %187 = load %2*, %2** %88, align 8
  %188 = call %5* @_zend_hash_update(%9* %186, %2* %187, %5* nonnull %70) #13
  br label %189

189:                                              ; preds = %157, %165, %146, %114, %104, %94, %48, %134, %185, %60
  %190 = add nuw nsw i64 %49, 1
  %191 = load %9**, %9*** %39, align 8
  %192 = load %9*, %9** %191, align 8
  %193 = getelementptr inbounds %9, %9* %192, i64 0, i32 4
  %194 = load i32, i32* %193, align 8
  %195 = zext i32 %194 to i64
  %196 = icmp ult i64 %190, %195
  br i1 %196, label %48, label %197

197:                                              ; preds = %189, %37, %18, %34, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_intersect_ukey(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @84(%24* %0, %5* %1, i32 2, i32 0, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @84(%24* nocapture readonly %0, %5* nocapture %1, i32 %2, i32 %3, i32 %4) unnamed_addr #0 {
  %6 = alloca %5*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %34, align 8
  %9 = alloca %34, align 8
  %10 = alloca %35, align 8
  %11 = alloca %35, align 8
  %12 = alloca %34, align 8
  %13 = alloca %35, align 8
  %14 = bitcast %5** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store %5* null, %5** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  %16 = bitcast %34* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #13
  %17 = bitcast %34* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #13
  %18 = getelementptr inbounds %35, %35* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %19 = getelementptr inbounds %35, %35* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %20 = bitcast %34* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20)
  %21 = getelementptr inbounds %35, %35* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21)
  %22 = icmp eq i32 %2, 1
  br i1 %22, label %23, label %37

23:                                               ; preds = %5
  switch i32 %3, label %25 [
    i32 0, label %26
    i32 1, label %24
  ]

24:                                               ; preds = %23
  br label %26

25:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @67, i64 0, i64 0), i32 %3) #13
  br label %405

26:                                               ; preds = %23, %24
  %27 = phi i32 [ 3, %24 ], [ 2, %23 ]
  %28 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %24 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %23 ]
  %29 = phi i32 (i8*, i8*)* [ @74, %24 ], [ @111, %23 ]
  %30 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %31, %27
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @66, i64 0, i64 0), i32 %27, i32 %31) #13
  br label %405

34:                                               ; preds = %26
  %35 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %31, i8* %28, %5** nonnull %6, i32* nonnull %7, %34* nonnull %8, %35* nonnull %10) #13
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %405, label %69

37:                                               ; preds = %5
  %38 = and i32 %2, 6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %68, label %40

40:                                               ; preds = %37
  %41 = icmp eq i32 %3, 0
  %42 = or i32 %4, %3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %4, 0
  %46 = icmp eq i32 %3, 1
  %47 = and i1 %46, %45
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %4, 1
  %50 = and i1 %41, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = and i1 %46, %49
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @69, i64 0, i64 0), i32 %3, i32 %4) #13
  br label %405

54:                                               ; preds = %51, %48, %44, %40
  %55 = phi i32 [ 2, %40 ], [ 3, %44 ], [ 3, %48 ], [ 4, %51 ]
  %56 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %40 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %44 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %48 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @68, i64 0, i64 0), %51 ]
  %57 = phi %34* [ null, %40 ], [ null, %44 ], [ %8, %48 ], [ %9, %51 ]
  %58 = phi %35* [ null, %40 ], [ null, %44 ], [ %10, %48 ], [ %11, %51 ]
  %59 = phi i32 (i8*, i8*)* [ @93, %40 ], [ @93, %44 ], [ @75, %48 ], [ @75, %51 ]
  %60 = phi i32 (i8*, i8*)* [ @111, %40 ], [ @74, %44 ], [ @111, %48 ], [ @74, %51 ]
  %61 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %62, %55
  br i1 %63, label %64, label %65

64:                                               ; preds = %54
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @66, i64 0, i64 0), i32 %55, i32 %62) #13
  br label %405

65:                                               ; preds = %54
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %62, i8* %56, %5** nonnull %6, i32* nonnull %7, %34* nonnull %8, %35* nonnull %10, %34* nonnull %9, %35* nonnull %11) #13
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %405, label %69

68:                                               ; preds = %37
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @70, i64 0, i64 0), i32 %2) #13
  br label %405

69:                                               ; preds = %34, %65
  %70 = phi %34* [ %57, %65 ], [ null, %34 ]
  %71 = phi %35* [ %58, %65 ], [ null, %34 ]
  %72 = phi i32 (i8*, i8*)* [ %59, %65 ], [ @93, %34 ]
  %73 = phi i32 (i8*, i8*)* [ %60, %65 ], [ %29, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %74 = load i32, i32* %7, align 4
  %75 = sext i32 %74 to i64
  %76 = call noalias i8* @_safe_emalloc(i64 %75, i64 8, i64 0) #13
  %77 = bitcast i8* %76 to %11**
  %78 = load i32, i32* %7, align 4
  %79 = sext i32 %78 to i64
  %80 = call noalias i8* @_safe_emalloc(i64 %79, i64 8, i64 0) #13
  %81 = bitcast i8* %80 to %11**
  %82 = icmp eq i32 %3, 1
  %83 = and i1 %22, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %16, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %18, i64 40, i1 false)
  br label %93

85:                                               ; preds = %69
  %86 = and i32 %2, 6
  %87 = icmp ne i32 %86, 0
  %88 = icmp eq i32 %4, 1
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = bitcast %34* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* align 8 %91, i64 56, i1 false)
  %92 = getelementptr inbounds %35, %35* %71, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 %92, i64 40, i1 false)
  br label %93

93:                                               ; preds = %85, %90, %84
  %94 = load i32, i32* %7, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %177

96:                                               ; preds = %93
  %97 = and i32 %2, 6
  %98 = icmp eq i32 %97, 0
  br label %99

99:                                               ; preds = %96, %172
  %100 = phi i64 [ 0, %96 ], [ %173, %172 ]
  %101 = load %5*, %5** %6, align 8
  %102 = getelementptr inbounds %5, %5* %101, i64 %100, i32 1
  %103 = bitcast %7* %102 to i8*
  %104 = load i8, i8* %103, align 8
  %105 = icmp eq i8 %104, 7
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = trunc i64 %100 to i32
  %108 = add nuw nsw i32 %107, 1
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %108) #13
  store i32 %107, i32* %7, align 4
  br label %381

109:                                              ; preds = %99
  %110 = getelementptr inbounds %5, %5* %101, i64 %100, i32 0
  %111 = bitcast %6* %110 to %9**
  %112 = load %9*, %9** %111, align 8
  %113 = getelementptr inbounds %9, %9* %112, i64 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %9, %9* %112, i64 0, i32 5
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, 1
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 5
  br i1 %116, label %124, label %122

122:                                              ; preds = %109
  %123 = call noalias i8* @__zend_malloc(i64 %121) #15
  br label %126

124:                                              ; preds = %109
  %125 = call noalias i8* @_emalloc(i64 %121) #15
  br label %126

126:                                              ; preds = %124, %122
  %127 = phi i8* [ %123, %122 ], [ %125, %124 ]
  %128 = bitcast i8* %127 to %11*
  %129 = getelementptr inbounds %11*, %11** %77, i64 %100
  %130 = bitcast %11** %129 to i8**
  store i8* %127, i8** %130, align 8
  %131 = getelementptr inbounds %11*, %11** %81, i64 %100
  %132 = bitcast %11** %131 to i8**
  store i8* %127, i8** %132, align 8
  %133 = getelementptr inbounds %9, %9* %112, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %9, %9* %112, i64 0, i32 3
  br label %138

138:                                              ; preds = %136, %153
  %139 = phi i32 [ %134, %136 ], [ %154, %153 ]
  %140 = phi i64 [ 0, %136 ], [ %156, %153 ]
  %141 = phi %11* [ %128, %136 ], [ %155, %153 ]
  %142 = load %11*, %11** %137, align 8
  %143 = getelementptr inbounds %11, %11* %142, i64 %140, i32 0, i32 1
  %144 = bitcast %7* %143 to i8*
  %145 = load i8, i8* %144, align 8
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %153, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %11, %11* %142, i64 %140
  %149 = getelementptr inbounds %11, %11* %141, i64 1
  %150 = bitcast %11* %141 to i8*
  %151 = bitcast %11* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 32, i1 false)
  %152 = load i32, i32* %133, align 8
  br label %153

153:                                              ; preds = %138, %147
  %154 = phi i32 [ %139, %138 ], [ %152, %147 ]
  %155 = phi %11* [ %141, %138 ], [ %149, %147 ]
  %156 = add nuw nsw i64 %140, 1
  %157 = zext i32 %154 to i64
  %158 = icmp ult i64 %156, %157
  br i1 %158, label %138, label %159

159:                                              ; preds = %153, %126
  %160 = phi %11* [ %128, %126 ], [ %155, %153 ]
  %161 = getelementptr inbounds %11, %11* %160, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %161, align 8
  %162 = load i32, i32* %117, align 4
  %163 = icmp ugt i32 %162, 1
  br i1 %163, label %164, label %172

164:                                              ; preds = %159
  br i1 %22, label %165, label %168

165:                                              ; preds = %164
  %166 = load i8*, i8** %130, align 8
  %167 = zext i32 %162 to i64
  call void @zend_sort(i8* %166, i64 %167, i64 32, i32 (i8*, i8*)* %73, void (i8*, i8*)* bitcast (void (%11*, %11*)* @zend_hash_bucket_swap to void (i8*, i8*)*)) #13
  br label %172

168:                                              ; preds = %164
  br i1 %98, label %172, label %169

169:                                              ; preds = %168
  %170 = load i8*, i8** %130, align 8
  %171 = zext i32 %162 to i64
  call void @zend_sort(i8* %170, i64 %171, i64 32, i32 (i8*, i8*)* %72, void (i8*, i8*)* bitcast (void (%11*, %11*)* @zend_hash_bucket_swap to void (i8*, i8*)*)) #13
  br label %172

172:                                              ; preds = %168, %159, %169, %165
  %173 = add nuw nsw i64 %100, 1
  %174 = load i32, i32* %7, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %173, %175
  br i1 %176, label %99, label %177

177:                                              ; preds = %172, %93
  %178 = bitcast %5** %6 to %9***
  %179 = load %9**, %9*** %178, align 8
  %180 = load %9*, %9** %179, align 8
  %181 = call %9* @zend_array_dup(%9* %180) #13
  %182 = bitcast %5* %1 to %9**
  store %9* %181, %9** %182, align 8
  %183 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5127, i32* %183, align 8
  %184 = load %11*, %11** %81, align 8
  %185 = getelementptr inbounds %11, %11* %184, i64 0, i32 0, i32 1
  %186 = bitcast %7* %185 to i8*
  %187 = load i8, i8* %186, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %379, label %189

189:                                              ; preds = %177
  %190 = and i32 %2, 6
  %191 = icmp ne i32 %190, 0
  %192 = icmp eq i32 %4, 1
  %193 = and i1 %191, %192
  %194 = bitcast %34* %70 to i8*
  %195 = getelementptr inbounds %35, %35* %71, i64 0, i32 0
  %196 = and i32 %2, 1
  %197 = icmp eq i32 %196, 0
  %198 = bitcast i8* %80 to i8**
  %199 = icmp eq i32 %2, 6
  %200 = xor i1 %192, true
  br label %201

201:                                              ; preds = %189, %372
  %202 = phi i32 [ 0, %189 ], [ %373, %372 ]
  br i1 %193, label %203, label %204

203:                                              ; preds = %201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* align 8 %194, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 %195, i64 40, i1 false)
  br label %204

204:                                              ; preds = %203, %201
  %205 = load i32, i32* %7, align 4
  %206 = icmp sgt i32 %205, 1
  br i1 %206, label %207, label %312

207:                                              ; preds = %204, %306
  %208 = phi i64 [ %308, %306 ], [ 1, %204 ]
  %209 = phi i32 [ 0, %306 ], [ %202, %204 ]
  %210 = getelementptr inbounds %11*, %11** %81, i64 %208
  br i1 %197, label %230, label %211

211:                                              ; preds = %207
  %212 = load %11*, %11** %210, align 8
  %213 = getelementptr inbounds %11, %11* %212, i64 0, i32 0, i32 1
  %214 = bitcast %7* %213 to i8*
  %215 = load i8, i8* %214, align 8
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %271, label %217

217:                                              ; preds = %211, %223
  %218 = phi %11* [ %225, %223 ], [ %212, %211 ]
  %219 = bitcast %11* %218 to i8*
  %220 = load i8*, i8** %198, align 8
  %221 = call i32 %73(i8* %220, i8* %219) #13
  %222 = icmp sgt i32 %221, 0
  br i1 %222, label %223, label %271

223:                                              ; preds = %217
  %224 = load %11*, %11** %210, align 8
  %225 = getelementptr inbounds %11, %11* %224, i64 1
  store %11* %225, %11** %210, align 8
  %226 = getelementptr inbounds %11, %11* %224, i64 1, i32 0, i32 1
  %227 = bitcast %7* %226 to i8*
  %228 = load i8, i8* %227, align 8
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %271, label %217

230:                                              ; preds = %207
  br i1 %191, label %231, label %271

231:                                              ; preds = %230
  %232 = load %11*, %11** %210, align 8
  %233 = getelementptr inbounds %11, %11* %232, i64 0, i32 0, i32 1
  %234 = bitcast %7* %233 to i8*
  %235 = load i8, i8* %234, align 8
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %250, label %237

237:                                              ; preds = %231, %243
  %238 = phi %11* [ %245, %243 ], [ %232, %231 ]
  %239 = bitcast %11* %238 to i8*
  %240 = load i8*, i8** %198, align 8
  %241 = call i32 %72(i8* %240, i8* %239) #13
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %250

243:                                              ; preds = %237
  %244 = load %11*, %11** %210, align 8
  %245 = getelementptr inbounds %11, %11* %244, i64 1
  store %11* %245, %11** %210, align 8
  %246 = getelementptr inbounds %11, %11* %244, i64 1, i32 0, i32 1
  %247 = bitcast %7* %246 to i8*
  %248 = load i8, i8* %247, align 8
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %271, label %237

250:                                              ; preds = %237, %231
  %251 = phi i32 [ %209, %231 ], [ %241, %237 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %271

253:                                              ; preds = %250
  %254 = load %11*, %11** %210, align 8
  %255 = getelementptr inbounds %11, %11* %254, i64 0, i32 0, i32 1
  %256 = bitcast %7* %255 to i8*
  %257 = load i8, i8* %256, align 8
  %258 = icmp ne i8 %257, 0
  %259 = and i1 %199, %258
  %260 = bitcast %11* %254 to i8*
  br i1 %259, label %261, label %271

261:                                              ; preds = %253
  br i1 %82, label %262, label %263

262:                                              ; preds = %261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %16, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %18, i64 40, i1 false)
  br label %263

263:                                              ; preds = %262, %261
  %264 = load i8*, i8** %198, align 8
  %265 = call i32 %73(i8* %264, i8* %260) #13
  %266 = icmp eq i32 %265, 0
  %267 = or i1 %266, %200
  %268 = xor i1 %266, true
  %269 = zext i1 %268 to i32
  br i1 %267, label %271, label %270

270:                                              ; preds = %263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* align 8 %194, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 %195, i64 40, i1 false)
  br label %271

271:                                              ; preds = %217, %223, %243, %230, %211, %263, %250, %270, %253
  %272 = phi i32 [ %209, %211 ], [ %269, %263 ], [ %251, %250 ], [ 1, %270 ], [ 0, %253 ], [ %209, %230 ], [ %241, %243 ], [ %221, %223 ], [ %221, %217 ]
  %273 = load %11*, %11** %210, align 8
  %274 = getelementptr inbounds %11, %11* %273, i64 0, i32 0, i32 1
  %275 = bitcast %7* %274 to i8*
  %276 = load i8, i8* %275, align 8
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %278, label %304

278:                                              ; preds = %271
  %279 = load %11*, %11** %81, align 8
  %280 = getelementptr inbounds %11, %11* %279, i64 1
  store %11* %280, %11** %81, align 8
  %281 = getelementptr inbounds %11, %11* %279, i64 0, i32 0, i32 1
  %282 = bitcast %7* %281 to i8*
  %283 = load i8, i8* %282, align 8
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %379, label %285

285:                                              ; preds = %278, %297
  %286 = phi %11* [ %298, %297 ], [ %279, %278 ]
  %287 = getelementptr inbounds %11, %11* %286, i64 0, i32 2
  %288 = load %2*, %2** %287, align 8
  %289 = icmp eq %2* %288, null
  %290 = load %9*, %9** %182, align 8
  br i1 %289, label %291, label %295

291:                                              ; preds = %285
  %292 = getelementptr inbounds %11, %11* %286, i64 0, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = call i32 @zend_hash_index_del(%9* %290, i64 %293) #13
  br label %297

295:                                              ; preds = %285
  %296 = call i32 @zend_hash_del(%9* %290, %2* nonnull %288) #13
  br label %297

297:                                              ; preds = %295, %291
  %298 = load %11*, %11** %81, align 8
  %299 = getelementptr inbounds %11, %11* %298, i64 1
  store %11* %299, %11** %81, align 8
  %300 = getelementptr inbounds %11, %11* %298, i64 0, i32 0, i32 1
  %301 = bitcast %7* %300 to i8*
  %302 = load i8, i8* %301, align 8
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %379, label %285

304:                                              ; preds = %271
  %305 = icmp eq i32 %272, 0
  br i1 %305, label %306, label %314

306:                                              ; preds = %304
  %307 = getelementptr inbounds %11, %11* %273, i64 1
  store %11* %307, %11** %210, align 8
  %308 = add nuw nsw i64 %208, 1
  %309 = load i32, i32* %7, align 4
  %310 = sext i32 %309 to i64
  %311 = icmp slt i64 %308, %310
  br i1 %311, label %207, label %320

312:                                              ; preds = %204
  %313 = icmp eq i32 %202, 0
  br i1 %313, label %320, label %314

314:                                              ; preds = %304, %312
  %315 = phi i32 [ %202, %312 ], [ %272, %304 ]
  %316 = phi i64 [ 1, %312 ], [ %208, %304 ]
  %317 = and i64 %316, 4294967295
  %318 = getelementptr inbounds %11*, %11** %81, i64 %317
  %319 = bitcast %11** %318 to i8**
  br label %327

320:                                              ; preds = %306, %312
  %321 = load %11*, %11** %81, align 8
  %322 = getelementptr inbounds %11, %11* %321, i64 1
  store %11* %322, %11** %81, align 8
  %323 = getelementptr inbounds %11, %11* %321, i64 1, i32 0, i32 1
  %324 = bitcast %7* %323 to i8*
  %325 = load i8, i8* %324, align 8
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %379, label %354

327:                                              ; preds = %353, %314
  %328 = load %11*, %11** %81, align 8
  %329 = getelementptr inbounds %11, %11* %328, i64 0, i32 2
  %330 = load %2*, %2** %329, align 8
  %331 = icmp eq %2* %330, null
  %332 = load %9*, %9** %182, align 8
  br i1 %331, label %333, label %337

333:                                              ; preds = %327
  %334 = getelementptr inbounds %11, %11* %328, i64 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = call i32 @zend_hash_index_del(%9* %332, i64 %335) #13
  br label %339

337:                                              ; preds = %327
  %338 = call i32 @zend_hash_del(%9* %332, %2* nonnull %330) #13
  br label %339

339:                                              ; preds = %337, %333
  %340 = load %11*, %11** %81, align 8
  %341 = getelementptr inbounds %11, %11* %340, i64 1
  store %11* %341, %11** %81, align 8
  %342 = getelementptr inbounds %11, %11* %340, i64 1, i32 0, i32 1
  %343 = bitcast %7* %342 to i8*
  %344 = load i8, i8* %343, align 8
  %345 = icmp eq i8 %344, 0
  %346 = bitcast %11* %341 to i8*
  br i1 %345, label %379, label %347

347:                                              ; preds = %339
  br i1 %22, label %348, label %352

348:                                              ; preds = %347
  %349 = load i8*, i8** %319, align 8
  %350 = call i32 %73(i8* nonnull %346, i8* %349) #13
  %351 = icmp sgt i32 %350, -1
  br i1 %351, label %372, label %353

352:                                              ; preds = %347
  br i1 %191, label %372, label %353

353:                                              ; preds = %352, %348
  br label %327

354:                                              ; preds = %320, %365
  %355 = phi %11* [ %367, %365 ], [ %322, %320 ]
  %356 = phi %11* [ %366, %365 ], [ %321, %320 ]
  br i1 %22, label %357, label %364

357:                                              ; preds = %354
  %358 = bitcast %11* %356 to i8*
  %359 = bitcast %11* %355 to i8*
  %360 = call i32 %73(i8* nonnull %358, i8* nonnull %359) #13
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %372

362:                                              ; preds = %357
  %363 = load %11*, %11** %81, align 8
  br label %365

364:                                              ; preds = %354
  br i1 %191, label %372, label %365

365:                                              ; preds = %362, %364
  %366 = phi %11* [ %363, %362 ], [ %355, %364 ]
  %367 = getelementptr inbounds %11, %11* %366, i64 1
  store %11* %367, %11** %81, align 8
  %368 = getelementptr inbounds %11, %11* %366, i64 1, i32 0, i32 1
  %369 = bitcast %7* %368 to i8*
  %370 = load i8, i8* %369, align 8
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %379, label %354

372:                                              ; preds = %348, %352, %357, %364
  %373 = phi i32 [ 0, %364 ], [ 0, %357 ], [ %315, %352 ], [ %315, %348 ]
  %374 = load %11*, %11** %81, align 8
  %375 = getelementptr inbounds %11, %11* %374, i64 0, i32 0, i32 1
  %376 = bitcast %7* %375 to i8*
  %377 = load i8, i8* %376, align 8
  %378 = icmp eq i8 %377, 0
  br i1 %378, label %379, label %201

379:                                              ; preds = %320, %372, %339, %365, %297, %278, %177
  %380 = load i32, i32* %7, align 4
  br label %381

381:                                              ; preds = %379, %106
  %382 = phi i32 [ %380, %379 ], [ %107, %106 ]
  %383 = icmp sgt i32 %382, 0
  br i1 %383, label %384, label %404

384:                                              ; preds = %381, %399
  %385 = phi i64 [ %400, %399 ], [ 0, %381 ]
  %386 = load %5*, %5** %6, align 8
  %387 = getelementptr inbounds %5, %5* %386, i64 %385, i32 0
  %388 = bitcast %6* %387 to %9**
  %389 = load %9*, %9** %388, align 8
  %390 = getelementptr inbounds %9, %9* %389, i64 0, i32 1, i32 0
  %391 = load i32, i32* %390, align 8
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %11*, %11** %77, i64 %385
  %395 = bitcast %11** %394 to i8**
  %396 = load i8*, i8** %395, align 8
  br i1 %393, label %398, label %397

397:                                              ; preds = %384
  call void @free(i8* %396) #13
  br label %399

398:                                              ; preds = %384
  call void @_efree(i8* %396) #13
  br label %399

399:                                              ; preds = %397, %398
  %400 = add nuw nsw i64 %385, 1
  %401 = load i32, i32* %7, align 4
  %402 = sext i32 %401 to i64
  %403 = icmp slt i64 %400, %402
  br i1 %403, label %384, label %404

404:                                              ; preds = %399, %381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %20, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %21, i64 40, i1 false)
  call void @_efree(i8* %80) #13
  call void @_efree(i8* %76) #13
  br label %405

405:                                              ; preds = %65, %34, %404, %68, %64, %53, %33, %25
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_intersect(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @84(%24* %0, %5* %1, i32 1, i32 0, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_uintersect(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @84(%24* %0, %5* %1, i32 1, i32 1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_intersect_assoc(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @83(%24* %0, %5* %1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_intersect_uassoc(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @84(%24* %0, %5* %1, i32 6, i32 0, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_uintersect_assoc(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @83(%24* %0, %5* %1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_uintersect_uassoc(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @84(%24* %0, %5* %1, i32 6, i32 1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_diff_key(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @85(%24* %0, %5* %1, i32 -1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @85(%24* nocapture readonly %0, %5* %1, i32 %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %5*, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13
  %7 = bitcast %5** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4, align 4
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = icmp slt i32 %9, 3
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @71, i64 0, i64 0), i32 %9) #13
  br label %197

14:                                               ; preds = %11
  %15 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %5** nonnull %5, i32* nonnull %4, %34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13)) #13
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %197, label %26

17:                                               ; preds = %3
  %18 = icmp slt i32 %9, 2
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @45, i64 0, i64 0), i32 %9) #13
  br label %197

20:                                               ; preds = %17
  %21 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %5** nonnull %5, i32* nonnull %4) #13
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %197, label %23

23:                                               ; preds = %20
  %24 = icmp eq i32 %2, 0
  %25 = select i1 %24, i32 (%5*, %5*)* @118, i32 (%5*, %5*)* null
  br label %26

26:                                               ; preds = %23, %14
  %27 = phi i32 (%5*, %5*)* [ @117, %14 ], [ %25, %23 ]
  %28 = load i32, i32* %4, align 4
  %29 = load %5*, %5** %5, align 8
  %30 = sext i32 %28 to i64
  br label %31

31:                                               ; preds = %34, %26
  %32 = phi i64 [ %39, %34 ], [ 0, %26 ]
  %33 = icmp slt i64 %32, %30
  br i1 %33, label %34, label %43

34:                                               ; preds = %31
  %35 = getelementptr inbounds %5, %5* %29, i64 %32, i32 1
  %36 = bitcast %7* %35 to i8*
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 7
  %39 = add nuw nsw i64 %32, 1
  br i1 %38, label %31, label %40

40:                                               ; preds = %34
  %41 = trunc i64 %39 to i32
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %41) #13
  %42 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %42, align 8
  br label %197

43:                                               ; preds = %31
  %44 = call i32 @_array_init(%5* %1, i32 0) #13
  %45 = bitcast %5** %5 to %9***
  %46 = load %9**, %9*** %45, align 8
  %47 = load %9*, %9** %46, align 8
  %48 = getelementptr inbounds %9, %9* %47, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %197, label %51

51:                                               ; preds = %43
  %52 = icmp eq i32 (%5*, %5*)* %27, null
  %53 = bitcast %5* %1 to %9**
  br label %54

54:                                               ; preds = %51, %189
  %55 = phi i64 [ 0, %51 ], [ %190, %189 ]
  %56 = phi %9* [ %47, %51 ], [ %192, %189 ]
  %57 = getelementptr inbounds %9, %9* %56, i64 0, i32 3
  %58 = load %11*, %11** %57, align 8
  %59 = getelementptr inbounds %11, %11* %58, i64 %55
  %60 = getelementptr inbounds %11, %11* %58, i64 %55, i32 0, i32 1
  %61 = bitcast %7* %60 to i8*
  %62 = load i8, i8* %61, align 8
  switch i8 %62, label %63 [
    i8 0, label %189
    i8 15, label %66
  ]

63:                                               ; preds = %54
  %64 = getelementptr inbounds %11, %11* %59, i64 0, i32 0
  %65 = getelementptr inbounds %11, %11* %58, i64 %55, i32 0, i32 1
  br label %73

66:                                               ; preds = %54
  %67 = bitcast %11* %59 to %5**
  %68 = load %5*, %5** %67, align 8
  %69 = getelementptr inbounds %5, %5* %68, i64 0, i32 1
  %70 = bitcast %7* %69 to i8*
  %71 = load i8, i8* %70, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %189, label %73

73:                                               ; preds = %63, %66
  %74 = phi %7* [ %65, %63 ], [ %69, %66 ]
  %75 = phi i8 [ %62, %63 ], [ %71, %66 ]
  %76 = phi %5* [ %64, %63 ], [ %68, %66 ]
  %77 = icmp eq i8 %75, 10
  br i1 %77, label %78, label %93

78:                                               ; preds = %73
  %79 = bitcast %5* %76 to %61**
  %80 = load %61*, %61** %79, align 8
  %81 = getelementptr inbounds %61, %61* %80, i64 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %93

84:                                               ; preds = %78
  %85 = getelementptr inbounds %61, %61* %80, i64 1
  %86 = bitcast %61* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %61, %61* %80, i64 2, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %5, %5* %76, i64 0, i32 0, i32 0
  store i64 %87, i64* %90, align 8
  %91 = getelementptr inbounds %5, %5* %76, i64 0, i32 1, i32 0
  store i32 %89, i32* %91, align 8
  %92 = bitcast %61* %80 to i8*
  call void @_efree_24(i8* %92) #13
  br label %93

93:                                               ; preds = %84, %78, %73
  %94 = getelementptr inbounds %11, %11* %58, i64 %55, i32 2
  %95 = load %2*, %2** %94, align 8
  %96 = icmp eq %2* %95, null
  %97 = load i32, i32* %4, align 4
  %98 = icmp sgt i32 %97, 1
  br i1 %96, label %100, label %99

99:                                               ; preds = %93
  br i1 %98, label %138, label %173

100:                                              ; preds = %93
  br i1 %98, label %101, label %121

101:                                              ; preds = %100
  %102 = getelementptr inbounds %11, %11* %58, i64 %55, i32 1
  br label %103

103:                                              ; preds = %101, %116
  %104 = phi i64 [ 1, %101 ], [ %117, %116 ]
  %105 = load %5*, %5** %5, align 8
  %106 = getelementptr inbounds %5, %5* %105, i64 %104, i32 0
  %107 = bitcast %6* %106 to %9**
  %108 = load %9*, %9** %107, align 8
  %109 = load i64, i64* %102, align 8
  %110 = call %5* @zend_hash_index_find(%9* %108, i64 %109) #13
  %111 = icmp eq %5* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %103
  br i1 %52, label %189, label %113

113:                                              ; preds = %112
  %114 = call i32 %27(%5* %76, %5* nonnull %110) #13
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %189, label %116

116:                                              ; preds = %103, %113
  %117 = add nuw nsw i64 %104, 1
  %118 = load i32, i32* %4, align 4
  %119 = sext i32 %118 to i64
  %120 = icmp slt i64 %117, %119
  br i1 %120, label %103, label %121

121:                                              ; preds = %116, %100
  %122 = bitcast %7* %74 to %60*
  %123 = getelementptr inbounds %60, %60* %122, i64 0, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = and i8 %124, 4
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = bitcast %5* %76 to %61**
  %129 = load %61*, %61** %128, align 8
  %130 = getelementptr inbounds %61, %61* %129, i64 0, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  br label %133

133:                                              ; preds = %121, %127
  %134 = load %9*, %9** %53, align 8
  %135 = getelementptr inbounds %11, %11* %58, i64 %55, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = call %5* @_zend_hash_index_update(%9* %134, i64 %136, %5* nonnull %76) #13
  br label %189

138:                                              ; preds = %99, %171
  %139 = phi %2* [ %172, %171 ], [ %95, %99 ]
  %140 = phi i64 [ %167, %171 ], [ 1, %99 ]
  %141 = load %5*, %5** %5, align 8
  %142 = getelementptr inbounds %5, %5* %141, i64 %140, i32 0
  %143 = bitcast %6* %142 to %9**
  %144 = load %9*, %9** %143, align 8
  %145 = call %5* @zend_hash_find(%9* %144, %2* %139) #13
  %146 = icmp eq %5* %145, null
  br i1 %146, label %166, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %5, %5* %145, i64 0, i32 1
  %149 = bitcast %7* %148 to i8*
  %150 = load i8, i8* %149, align 8
  %151 = icmp eq i8 %150, 15
  br i1 %151, label %152, label %161

152:                                              ; preds = %147
  %153 = bitcast %5* %145 to %5**
  %154 = load %5*, %5** %153, align 8
  %155 = getelementptr inbounds %5, %5* %154, i64 0, i32 1
  %156 = bitcast %7* %155 to i8*
  %157 = load i8, i8* %156, align 8
  %158 = icmp eq i8 %157, 0
  %159 = icmp eq %5* %154, null
  %160 = or i1 %159, %158
  br i1 %160, label %166, label %161

161:                                              ; preds = %152, %147
  %162 = phi %5* [ %145, %147 ], [ %154, %152 ]
  br i1 %52, label %189, label %163

163:                                              ; preds = %161
  %164 = call i32 %27(%5* %76, %5* nonnull %162) #13
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %152, %138, %163
  %167 = add nuw nsw i64 %140, 1
  %168 = load i32, i32* %4, align 4
  %169 = sext i32 %168 to i64
  %170 = icmp slt i64 %167, %169
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  %172 = load %2*, %2** %94, align 8
  br label %138

173:                                              ; preds = %166, %99
  %174 = bitcast %7* %74 to %60*
  %175 = getelementptr inbounds %60, %60* %174, i64 0, i32 1
  %176 = load i8, i8* %175, align 1
  %177 = and i8 %176, 4
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = bitcast %5* %76 to %61**
  %181 = load %61*, %61** %180, align 8
  %182 = getelementptr inbounds %61, %61* %181, i64 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %182, align 4
  br label %185

185:                                              ; preds = %173, %179
  %186 = load %9*, %9** %53, align 8
  %187 = load %2*, %2** %94, align 8
  %188 = call %5* @_zend_hash_update(%9* %186, %2* %187, %5* nonnull %76) #13
  br label %189

189:                                              ; preds = %161, %163, %112, %113, %54, %133, %185, %66
  %190 = add nuw nsw i64 %55, 1
  %191 = load %9**, %9*** %45, align 8
  %192 = load %9*, %9** %191, align 8
  %193 = getelementptr inbounds %9, %9* %192, i64 0, i32 4
  %194 = load i32, i32* %193, align 8
  %195 = zext i32 %194 to i64
  %196 = icmp ult i64 %190, %195
  br i1 %196, label %54, label %197

197:                                              ; preds = %189, %43, %20, %14, %40, %19, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_diff_ukey(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @86(%24* %0, %5* %1, i32 2, i32 0, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @86(%24* nocapture readonly %0, %5* nocapture %1, i32 %2, i32 %3, i32 %4) unnamed_addr #0 {
  %6 = alloca %5*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %34, align 8
  %9 = alloca %34, align 8
  %10 = alloca %35, align 8
  %11 = alloca %35, align 8
  %12 = alloca %34, align 8
  %13 = alloca %35, align 8
  %14 = bitcast %5** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store %5* null, %5** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  %16 = bitcast %34* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #13
  %17 = bitcast %34* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #13
  %18 = getelementptr inbounds %35, %35* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %19 = getelementptr inbounds %35, %35* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %20 = bitcast %34* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20)
  %21 = getelementptr inbounds %35, %35* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21)
  %22 = icmp eq i32 %2, 1
  br i1 %22, label %23, label %37

23:                                               ; preds = %5
  switch i32 %3, label %25 [
    i32 0, label %26
    i32 1, label %24
  ]

24:                                               ; preds = %23
  br label %26

25:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @67, i64 0, i64 0), i32 %3) #13
  br label %364

26:                                               ; preds = %23, %24
  %27 = phi i32 [ 3, %24 ], [ 2, %23 ]
  %28 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %24 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %23 ]
  %29 = phi i32 (i8*, i8*)* [ @74, %24 ], [ @111, %23 ]
  %30 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %31, %27
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @66, i64 0, i64 0), i32 %27, i32 %31) #13
  br label %364

34:                                               ; preds = %26
  %35 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %31, i8* %28, %5** nonnull %6, i32* nonnull %7, %34* nonnull %8, %35* nonnull %10) #13
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %364, label %69

37:                                               ; preds = %5
  %38 = and i32 %2, 6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %68, label %40

40:                                               ; preds = %37
  %41 = icmp eq i32 %3, 0
  %42 = or i32 %4, %3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %4, 0
  %46 = icmp eq i32 %3, 1
  %47 = and i1 %46, %45
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %4, 1
  %50 = and i1 %41, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = and i1 %46, %49
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @69, i64 0, i64 0), i32 %3, i32 %4) #13
  br label %364

54:                                               ; preds = %51, %48, %44, %40
  %55 = phi i32 [ 2, %40 ], [ 3, %44 ], [ 3, %48 ], [ 4, %51 ]
  %56 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @65, i64 0, i64 0), %40 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %44 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @64, i64 0, i64 0), %48 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @68, i64 0, i64 0), %51 ]
  %57 = phi %34* [ null, %40 ], [ null, %44 ], [ %8, %48 ], [ %9, %51 ]
  %58 = phi %35* [ null, %40 ], [ null, %44 ], [ %10, %48 ], [ %11, %51 ]
  %59 = phi i32 (i8*, i8*)* [ @93, %40 ], [ @93, %44 ], [ @75, %48 ], [ @75, %51 ]
  %60 = phi i32 (i8*, i8*)* [ @111, %40 ], [ @74, %44 ], [ @111, %48 ], [ @74, %51 ]
  %61 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %62, %55
  br i1 %63, label %64, label %65

64:                                               ; preds = %54
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @66, i64 0, i64 0), i32 %55, i32 %62) #13
  br label %364

65:                                               ; preds = %54
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %62, i8* %56, %5** nonnull %6, i32* nonnull %7, %34* nonnull %8, %35* nonnull %10, %34* nonnull %9, %35* nonnull %11) #13
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %364, label %69

68:                                               ; preds = %37
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @70, i64 0, i64 0), i32 %2) #13
  br label %364

69:                                               ; preds = %34, %65
  %70 = phi %34* [ %57, %65 ], [ null, %34 ]
  %71 = phi %35* [ %58, %65 ], [ null, %34 ]
  %72 = phi i32 (i8*, i8*)* [ %59, %65 ], [ @93, %34 ]
  %73 = phi i32 (i8*, i8*)* [ %60, %65 ], [ %29, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %74 = load i32, i32* %7, align 4
  %75 = sext i32 %74 to i64
  %76 = call noalias i8* @_safe_emalloc(i64 %75, i64 8, i64 0) #13
  %77 = bitcast i8* %76 to %11**
  %78 = load i32, i32* %7, align 4
  %79 = sext i32 %78 to i64
  %80 = call noalias i8* @_safe_emalloc(i64 %79, i64 8, i64 0) #13
  %81 = bitcast i8* %80 to %11**
  %82 = icmp eq i32 %3, 1
  %83 = and i1 %22, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %16, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %18, i64 40, i1 false)
  br label %93

85:                                               ; preds = %69
  %86 = and i32 %2, 6
  %87 = icmp ne i32 %86, 0
  %88 = icmp eq i32 %4, 1
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = bitcast %34* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* align 8 %91, i64 56, i1 false)
  %92 = getelementptr inbounds %35, %35* %71, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 %92, i64 40, i1 false)
  br label %93

93:                                               ; preds = %85, %90, %84
  %94 = load i32, i32* %7, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %177

96:                                               ; preds = %93
  %97 = and i32 %2, 6
  %98 = icmp eq i32 %97, 0
  br label %99

99:                                               ; preds = %96, %172
  %100 = phi i64 [ 0, %96 ], [ %173, %172 ]
  %101 = load %5*, %5** %6, align 8
  %102 = getelementptr inbounds %5, %5* %101, i64 %100, i32 1
  %103 = bitcast %7* %102 to i8*
  %104 = load i8, i8* %103, align 8
  %105 = icmp eq i8 %104, 7
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = trunc i64 %100 to i32
  %108 = add nuw nsw i32 %107, 1
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %108) #13
  store i32 %107, i32* %7, align 4
  br label %340

109:                                              ; preds = %99
  %110 = getelementptr inbounds %5, %5* %101, i64 %100, i32 0
  %111 = bitcast %6* %110 to %9**
  %112 = load %9*, %9** %111, align 8
  %113 = getelementptr inbounds %9, %9* %112, i64 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %9, %9* %112, i64 0, i32 5
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, 1
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 5
  br i1 %116, label %124, label %122

122:                                              ; preds = %109
  %123 = call noalias i8* @__zend_malloc(i64 %121) #15
  br label %126

124:                                              ; preds = %109
  %125 = call noalias i8* @_emalloc(i64 %121) #15
  br label %126

126:                                              ; preds = %124, %122
  %127 = phi i8* [ %123, %122 ], [ %125, %124 ]
  %128 = bitcast i8* %127 to %11*
  %129 = getelementptr inbounds %11*, %11** %77, i64 %100
  %130 = bitcast %11** %129 to i8**
  store i8* %127, i8** %130, align 8
  %131 = getelementptr inbounds %11*, %11** %81, i64 %100
  %132 = bitcast %11** %131 to i8**
  store i8* %127, i8** %132, align 8
  %133 = getelementptr inbounds %9, %9* %112, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %9, %9* %112, i64 0, i32 3
  br label %138

138:                                              ; preds = %136, %153
  %139 = phi i32 [ %134, %136 ], [ %154, %153 ]
  %140 = phi i64 [ 0, %136 ], [ %156, %153 ]
  %141 = phi %11* [ %128, %136 ], [ %155, %153 ]
  %142 = load %11*, %11** %137, align 8
  %143 = getelementptr inbounds %11, %11* %142, i64 %140, i32 0, i32 1
  %144 = bitcast %7* %143 to i8*
  %145 = load i8, i8* %144, align 8
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %153, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %11, %11* %142, i64 %140
  %149 = getelementptr inbounds %11, %11* %141, i64 1
  %150 = bitcast %11* %141 to i8*
  %151 = bitcast %11* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 32, i1 false)
  %152 = load i32, i32* %133, align 8
  br label %153

153:                                              ; preds = %138, %147
  %154 = phi i32 [ %139, %138 ], [ %152, %147 ]
  %155 = phi %11* [ %141, %138 ], [ %149, %147 ]
  %156 = add nuw nsw i64 %140, 1
  %157 = zext i32 %154 to i64
  %158 = icmp ult i64 %156, %157
  br i1 %158, label %138, label %159

159:                                              ; preds = %153, %126
  %160 = phi %11* [ %128, %126 ], [ %155, %153 ]
  %161 = getelementptr inbounds %11, %11* %160, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %161, align 8
  %162 = load i32, i32* %117, align 4
  %163 = icmp ugt i32 %162, 1
  br i1 %163, label %164, label %172

164:                                              ; preds = %159
  br i1 %22, label %165, label %168

165:                                              ; preds = %164
  %166 = load i8*, i8** %130, align 8
  %167 = zext i32 %162 to i64
  call void @zend_sort(i8* %166, i64 %167, i64 32, i32 (i8*, i8*)* %73, void (i8*, i8*)* bitcast (void (%11*, %11*)* @zend_hash_bucket_swap to void (i8*, i8*)*)) #13
  br label %172

168:                                              ; preds = %164
  br i1 %98, label %172, label %169

169:                                              ; preds = %168
  %170 = load i8*, i8** %130, align 8
  %171 = zext i32 %162 to i64
  call void @zend_sort(i8* %170, i64 %171, i64 32, i32 (i8*, i8*)* %72, void (i8*, i8*)* bitcast (void (%11*, %11*)* @zend_hash_bucket_swap to void (i8*, i8*)*)) #13
  br label %172

172:                                              ; preds = %168, %159, %169, %165
  %173 = add nuw nsw i64 %100, 1
  %174 = load i32, i32* %7, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %173, %175
  br i1 %176, label %99, label %177

177:                                              ; preds = %172, %93
  %178 = bitcast %5** %6 to %9***
  %179 = load %9**, %9*** %178, align 8
  %180 = load %9*, %9** %179, align 8
  %181 = call %9* @zend_array_dup(%9* %180) #13
  %182 = bitcast %5* %1 to %9**
  store %9* %181, %9** %182, align 8
  %183 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5127, i32* %183, align 8
  %184 = load %11*, %11** %81, align 8
  %185 = getelementptr inbounds %11, %11* %184, i64 0, i32 0, i32 1
  %186 = bitcast %7* %185 to i8*
  %187 = load i8, i8* %186, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %338, label %189

189:                                              ; preds = %177
  %190 = and i32 %2, 6
  %191 = icmp ne i32 %190, 0
  %192 = icmp eq i32 %4, 1
  %193 = and i1 %191, %192
  %194 = bitcast %34* %70 to i8*
  %195 = getelementptr inbounds %35, %35* %71, i64 0, i32 0
  %196 = bitcast i8* %80 to i8**
  br label %197

197:                                              ; preds = %189, %332
  br i1 %193, label %198, label %199

198:                                              ; preds = %197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* align 8 %194, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 %195, i64 40, i1 false)
  br label %199

199:                                              ; preds = %198, %197
  %200 = load i32, i32* %7, align 4
  %201 = icmp sgt i32 %200, 1
  br i1 %201, label %202, label %280

202:                                              ; preds = %199, %271
  %203 = phi i64 [ %273, %271 ], [ 1, %199 ]
  %204 = phi i32 [ %272, %271 ], [ 1, %199 ]
  %205 = getelementptr inbounds %11*, %11** %81, i64 %203
  %206 = load %11*, %11** %205, align 8
  br i1 %22, label %207, label %225

207:                                              ; preds = %202
  %208 = getelementptr inbounds %11, %11* %206, i64 0, i32 0, i32 1
  %209 = bitcast %7* %208 to i8*
  %210 = load i8, i8* %209, align 8
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %243, label %212

212:                                              ; preds = %207, %218
  %213 = phi %11* [ %220, %218 ], [ %206, %207 ]
  %214 = bitcast %11* %213 to i8*
  %215 = load i8*, i8** %196, align 8
  %216 = call i32 %73(i8* %215, i8* %214) #13
  %217 = icmp sgt i32 %216, 0
  br i1 %217, label %218, label %243

218:                                              ; preds = %212
  %219 = load %11*, %11** %205, align 8
  %220 = getelementptr inbounds %11, %11* %219, i64 1
  store %11* %220, %11** %205, align 8
  %221 = getelementptr inbounds %11, %11* %219, i64 1, i32 0, i32 1
  %222 = bitcast %7* %221 to i8*
  %223 = load i8, i8* %222, align 8
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %271, label %212

225:                                              ; preds = %202
  br i1 %191, label %226, label %243

226:                                              ; preds = %225
  %227 = getelementptr inbounds %11, %11* %206, i64 0, i32 0, i32 1
  %228 = bitcast %7* %227 to i8*
  %229 = load i8, i8* %228, align 8
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %226, %237
  %232 = phi %11* [ %238, %237 ], [ %206, %226 ]
  %233 = load i8*, i8** %196, align 8
  %234 = bitcast %11* %232 to i8*
  %235 = call i32 %72(i8* %233, i8* %234) #13
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %246, label %237

237:                                              ; preds = %231
  %238 = getelementptr inbounds %11, %11* %232, i64 1
  %239 = getelementptr inbounds %11, %11* %232, i64 1, i32 0, i32 1
  %240 = bitcast %7* %239 to i8*
  %241 = load i8, i8* %240, align 8
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %271, label %231

243:                                              ; preds = %212, %226, %207, %225
  %244 = phi i32 [ %204, %225 ], [ %204, %207 ], [ %204, %226 ], [ %216, %212 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %271

246:                                              ; preds = %231, %243
  %247 = phi %11* [ %206, %243 ], [ %232, %231 ]
  br i1 %22, label %248, label %256

248:                                              ; preds = %246
  %249 = load %11*, %11** %205, align 8
  %250 = getelementptr inbounds %11, %11* %249, i64 0, i32 0, i32 1
  %251 = bitcast %7* %250 to i8*
  %252 = load i8, i8* %251, align 8
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %279, label %254

254:                                              ; preds = %248
  %255 = getelementptr inbounds %11, %11* %249, i64 1
  store %11* %255, %11** %205, align 8
  br label %279

256:                                              ; preds = %246
  switch i32 %2, label %271 [
    i32 6, label %257
    i32 2, label %279
  ]

257:                                              ; preds = %256
  %258 = getelementptr inbounds %11, %11* %247, i64 0, i32 0, i32 1
  %259 = bitcast %7* %258 to i8*
  %260 = load i8, i8* %259, align 8
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %271, label %262

262:                                              ; preds = %257
  br i1 %82, label %263, label %264

263:                                              ; preds = %262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %16, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %18, i64 40, i1 false)
  br label %264

264:                                              ; preds = %263, %262
  %265 = load i8*, i8** %196, align 8
  %266 = bitcast %11* %247 to i8*
  %267 = call i32 %73(i8* %265, i8* %266) #13
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %279, label %269

269:                                              ; preds = %264
  br i1 %192, label %270, label %271

270:                                              ; preds = %269
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* align 8 %194, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* align 8 %195, i64 40, i1 false)
  br label %271

271:                                              ; preds = %237, %218, %256, %257, %243, %269, %270
  %272 = phi i32 [ %244, %243 ], [ -1, %270 ], [ -1, %269 ], [ 0, %257 ], [ 0, %256 ], [ %216, %218 ], [ %235, %237 ]
  %273 = add nuw nsw i64 %203, 1
  %274 = load i32, i32* %7, align 4
  %275 = sext i32 %274 to i64
  %276 = icmp slt i64 %273, %275
  br i1 %276, label %202, label %277

277:                                              ; preds = %271
  %278 = icmp eq i32 %272, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %264, %256, %254, %248, %277
  br label %287

280:                                              ; preds = %199, %277
  %281 = load %11*, %11** %81, align 8
  %282 = getelementptr inbounds %11, %11* %281, i64 1
  store %11* %282, %11** %81, align 8
  %283 = getelementptr inbounds %11, %11* %281, i64 1, i32 0, i32 1
  %284 = bitcast %7* %283 to i8*
  %285 = load i8, i8* %284, align 8
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %338, label %314

287:                                              ; preds = %312, %279
  %288 = load %11*, %11** %81, align 8
  %289 = getelementptr inbounds %11, %11* %288, i64 0, i32 2
  %290 = load %2*, %2** %289, align 8
  %291 = icmp eq %2* %290, null
  %292 = load %9*, %9** %182, align 8
  br i1 %291, label %293, label %297

293:                                              ; preds = %287
  %294 = getelementptr inbounds %11, %11* %288, i64 0, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = call i32 @zend_hash_index_del(%9* %292, i64 %295) #13
  br label %299

297:                                              ; preds = %287
  %298 = call i32 @zend_hash_del(%9* %292, %2* nonnull %290) #13
  br label %299

299:                                              ; preds = %297, %293
  %300 = load %11*, %11** %81, align 8
  %301 = getelementptr inbounds %11, %11* %300, i64 1
  store %11* %301, %11** %81, align 8
  %302 = getelementptr inbounds %11, %11* %300, i64 1, i32 0, i32 1
  %303 = bitcast %7* %302 to i8*
  %304 = load i8, i8* %303, align 8
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %338, label %306

306:                                              ; preds = %299
  br i1 %22, label %307, label %313

307:                                              ; preds = %306
  %308 = bitcast %11* %300 to i8*
  %309 = bitcast %11* %301 to i8*
  %310 = call i32 %73(i8* nonnull %308, i8* nonnull %309) #13
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %332

312:                                              ; preds = %307, %313
  br label %287

313:                                              ; preds = %306
  br i1 %191, label %332, label %312

314:                                              ; preds = %280, %325
  %315 = phi %11* [ %327, %325 ], [ %282, %280 ]
  %316 = phi %11* [ %326, %325 ], [ %281, %280 ]
  br i1 %22, label %317, label %324

317:                                              ; preds = %314
  %318 = bitcast %11* %316 to i8*
  %319 = bitcast %11* %315 to i8*
  %320 = call i32 %73(i8* nonnull %318, i8* nonnull %319) #13
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %332

322:                                              ; preds = %317
  %323 = load %11*, %11** %81, align 8
  br label %325

324:                                              ; preds = %314
  br i1 %191, label %332, label %325

325:                                              ; preds = %322, %324
  %326 = phi %11* [ %323, %322 ], [ %315, %324 ]
  %327 = getelementptr inbounds %11, %11* %326, i64 1
  store %11* %327, %11** %81, align 8
  %328 = getelementptr inbounds %11, %11* %326, i64 1, i32 0, i32 1
  %329 = bitcast %7* %328 to i8*
  %330 = load i8, i8* %329, align 8
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %338, label %314

332:                                              ; preds = %317, %324, %307, %313
  %333 = load %11*, %11** %81, align 8
  %334 = getelementptr inbounds %11, %11* %333, i64 0, i32 0, i32 1
  %335 = bitcast %7* %334 to i8*
  %336 = load i8, i8* %335, align 8
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %197

338:                                              ; preds = %280, %332, %325, %299, %177
  %339 = load i32, i32* %7, align 4
  br label %340

340:                                              ; preds = %338, %106
  %341 = phi i32 [ %339, %338 ], [ %107, %106 ]
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %343, label %363

343:                                              ; preds = %340, %358
  %344 = phi i64 [ %359, %358 ], [ 0, %340 ]
  %345 = load %5*, %5** %6, align 8
  %346 = getelementptr inbounds %5, %5* %345, i64 %344, i32 0
  %347 = bitcast %6* %346 to %9**
  %348 = load %9*, %9** %347, align 8
  %349 = getelementptr inbounds %9, %9* %348, i64 0, i32 1, i32 0
  %350 = load i32, i32* %349, align 8
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %11*, %11** %77, i64 %344
  %354 = bitcast %11** %353 to i8**
  %355 = load i8*, i8** %354, align 8
  br i1 %352, label %357, label %356

356:                                              ; preds = %343
  call void @free(i8* %355) #13
  br label %358

357:                                              ; preds = %343
  call void @_efree(i8* %355) #13
  br label %358

358:                                              ; preds = %356, %357
  %359 = add nuw nsw i64 %344, 1
  %360 = load i32, i32* %7, align 4
  %361 = sext i32 %360 to i64
  %362 = icmp slt i64 %359, %361
  br i1 %362, label %343, label %363

363:                                              ; preds = %358, %340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12) to i8*), i8* nonnull align 8 %20, i64 56, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13, i32 0), i8* nonnull align 8 %21, i64 40, i1 false)
  call void @_efree(i8* %80) #13
  call void @_efree(i8* %76) #13
  br label %364

364:                                              ; preds = %65, %34, %363, %68, %64, %53, %33, %25
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_diff(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %9, align 8
  %4 = alloca %5, align 8
  %5 = bitcast %9* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #13
  %6 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @45, i64 0, i64 0), i32 %8) #13
  br label %221

11:                                               ; preds = %2
  %12 = icmp slt i32 %8, 1
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %8, i32 1, i32 -1) #13
  br label %221

14:                                               ; preds = %11
  %15 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %16 = getelementptr inbounds i8**, i8*** %15, i64 2
  %17 = bitcast i8*** %16 to %5*
  %18 = getelementptr inbounds i8**, i8*** %15, i64 3
  %19 = bitcast i8*** %18 to i8*
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 7
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = sext i32 %8 to i64
  br label %26

24:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @46, i64 0, i64 0)) #13
  %25 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %25, align 8
  br label %221

26:                                               ; preds = %22, %37
  %27 = phi i64 [ 1, %22 ], [ %44, %37 ]
  %28 = phi i32 [ 0, %22 ], [ %43, %37 ]
  %29 = getelementptr inbounds %5, %5* %17, i64 %27, i32 1
  %30 = bitcast %7* %29 to i8*
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 7
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = trunc i64 %27 to i32
  %35 = add nuw nsw i32 %34, 1
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @47, i64 0, i64 0), i32 %35) #13
  %36 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %36, align 8
  br label %221

37:                                               ; preds = %26
  %38 = getelementptr inbounds %5, %5* %17, i64 %27
  %39 = bitcast %5* %38 to %9**
  %40 = load %9*, %9** %39, align 8
  %41 = getelementptr inbounds %9, %9* %40, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, %28
  %44 = add nuw nsw i64 %27, 1
  %45 = icmp slt i64 %44, %23
  br i1 %45, label %26, label %46

46:                                               ; preds = %37
  %47 = icmp eq i32 %43, 0
  br i1 %47, label %48, label %61

48:                                               ; preds = %46
  %49 = bitcast i8*** %16 to %61**
  %50 = load %61*, %61** %49, align 8
  %51 = bitcast i8*** %18 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %5* %1 to %61**
  store %61* %50, %61** %53, align 8
  %54 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %52, i32* %54, align 8
  %55 = and i32 %52, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %221, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %61, %61* %50, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 4
  br label %221

61:                                               ; preds = %46
  %62 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 1, i32* %62, align 8
  call void @_zend_hash_init(%9* nonnull %3, i32 %43, void (%5*)* null, i8 zeroext 0) #13
  %63 = zext i32 %8 to i64
  br label %64

64:                                               ; preds = %130, %61
  %65 = phi i64 [ 1, %61 ], [ %131, %130 ]
  %66 = getelementptr inbounds %5, %5* %17, i64 %65, i32 0
  %67 = bitcast %6* %66 to %9**
  %68 = load %9*, %9** %67, align 8
  %69 = getelementptr inbounds %9, %9* %68, i64 0, i32 3
  %70 = load %11*, %11** %69, align 8
  %71 = getelementptr inbounds %9, %9* %68, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %11, %11* %70, i64 %73
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %130, label %76

76:                                               ; preds = %64, %127
  %77 = phi %11* [ %128, %127 ], [ %70, %64 ]
  %78 = getelementptr inbounds %11, %11* %77, i64 0, i32 0
  %79 = getelementptr inbounds %11, %11* %77, i64 0, i32 0, i32 1
  %80 = bitcast %7* %79 to i8*
  %81 = load i8, i8* %80, align 8
  %82 = icmp eq i8 %81, 15
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = bitcast %11* %77 to %5**
  %85 = load %5*, %5** %84, align 8
  br label %86

86:                                               ; preds = %83, %76
  %87 = phi %5* [ %85, %83 ], [ %78, %76 ]
  %88 = getelementptr inbounds %5, %5* %87, i64 0, i32 1
  %89 = bitcast %7* %88 to i8*
  %90 = load i8, i8* %89, align 8
  switch i8 %90, label %104 [
    i8 0, label %127
    i8 6, label %91
  ]

91:                                               ; preds = %86
  %92 = bitcast %5* %87 to %2**
  %93 = load %2*, %2** %92, align 8
  %94 = getelementptr inbounds %2, %2* %93, i64 0, i32 0, i32 1
  %95 = bitcast %4* %94 to %63*
  %96 = getelementptr inbounds %63, %63* %95, i64 0, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %109

100:                                              ; preds = %91
  %101 = getelementptr inbounds %2, %2* %93, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, 1
  store i32 %103, i32* %101, align 8
  br label %109

104:                                              ; preds = %86
  %105 = call %2* @_zval_get_string_func(%5* nonnull %87) #13
  %106 = getelementptr inbounds %2, %2* %105, i64 0, i32 0, i32 1
  %107 = bitcast %4* %106 to %63*
  %108 = getelementptr inbounds %63, %63* %107, i64 0, i32 1
  br label %109

109:                                              ; preds = %91, %100, %104
  %110 = phi i8* [ %96, %91 ], [ %96, %100 ], [ %108, %104 ]
  %111 = phi %2* [ %93, %91 ], [ %93, %100 ], [ %105, %104 ]
  %112 = call %5* @_zend_hash_add(%9* nonnull %3, %2* %111, %5* nonnull %4) #13
  %113 = load i8, i8* %110, align 1
  %114 = and i8 %113, 2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %127

116:                                              ; preds = %109
  %117 = getelementptr inbounds %2, %2* %111, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, -1
  store i32 %119, i32* %117, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %116
  %122 = and i8 %113, 1
  %123 = icmp eq i8 %122, 0
  %124 = bitcast %2* %111 to i8*
  br i1 %123, label %126, label %125

125:                                              ; preds = %121
  call void @free(i8* %124) #13
  br label %127

126:                                              ; preds = %121
  call void @_efree(i8* %124) #13
  br label %127

127:                                              ; preds = %86, %126, %125, %116, %109
  %128 = getelementptr inbounds %11, %11* %77, i64 1
  %129 = icmp eq %11* %128, %74
  br i1 %129, label %130, label %76

130:                                              ; preds = %127, %64
  %131 = add nuw nsw i64 %65, 1
  %132 = icmp eq i64 %131, %63
  br i1 %132, label %133, label %64

133:                                              ; preds = %130
  %134 = bitcast i8*** %16 to %9**
  %135 = load %9*, %9** %134, align 8
  %136 = getelementptr inbounds %9, %9* %135, i64 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = call i32 @_array_init(%5* %1, i32 %137) #13
  %139 = load %9*, %9** %134, align 8
  %140 = getelementptr inbounds %9, %9* %139, i64 0, i32 3
  %141 = load %11*, %11** %140, align 8
  %142 = getelementptr inbounds %9, %9* %139, i64 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %11, %11* %141, i64 %144
  %146 = icmp eq i32 %143, 0
  br i1 %146, label %220, label %147

147:                                              ; preds = %133
  %148 = bitcast %5* %1 to %9**
  br label %149

149:                                              ; preds = %147, %217
  %150 = phi %11* [ %141, %147 ], [ %218, %217 ]
  %151 = getelementptr inbounds %11, %11* %150, i64 0, i32 0
  %152 = getelementptr inbounds %11, %11* %150, i64 0, i32 0, i32 1
  %153 = bitcast %7* %152 to i8*
  %154 = load i8, i8* %153, align 8
  %155 = icmp eq i8 %154, 15
  br i1 %155, label %156, label %159

156:                                              ; preds = %149
  %157 = bitcast %11* %150 to %5**
  %158 = load %5*, %5** %157, align 8
  br label %159

159:                                              ; preds = %156, %149
  %160 = phi %5* [ %158, %156 ], [ %151, %149 ]
  %161 = getelementptr inbounds %5, %5* %160, i64 0, i32 1
  %162 = bitcast %7* %161 to i8*
  %163 = load i8, i8* %162, align 8
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %217, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %11, %11* %150, i64 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %11, %11* %150, i64 0, i32 2
  %169 = load %2*, %2** %168, align 8
  %170 = icmp eq i8 %163, 6
  br i1 %170, label %171, label %184

171:                                              ; preds = %165
  %172 = bitcast %5* %160 to %2**
  %173 = load %2*, %2** %172, align 8
  %174 = getelementptr inbounds %2, %2* %173, i64 0, i32 0, i32 1
  %175 = bitcast %4* %174 to %63*
  %176 = getelementptr inbounds %63, %63* %175, i64 0, i32 1
  %177 = load i8, i8* %176, align 1
  %178 = and i8 %177, 2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %171
  %181 = getelementptr inbounds %2, %2* %173, i64 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = add i32 %182, 1
  store i32 %183, i32* %181, align 8
  br label %186

184:                                              ; preds = %165
  %185 = call %2* @_zval_get_string_func(%5* nonnull %160) #13
  br label %186

186:                                              ; preds = %171, %180, %184
  %187 = phi %2* [ %185, %184 ], [ %173, %171 ], [ %173, %180 ]
  %188 = call zeroext i8 @zend_hash_exists(%9* nonnull %3, %2* %187) #13
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %199

190:                                              ; preds = %186
  %191 = icmp eq %2* %169, null
  %192 = load %9*, %9** %148, align 8
  br i1 %191, label %195, label %193

193:                                              ; preds = %190
  %194 = call %5* @_zend_hash_add_new(%9* %192, %2* nonnull %169, %5* %160) #13
  br label %197

195:                                              ; preds = %190
  %196 = call %5* @_zend_hash_index_add_new(%9* %192, i64 %167, %5* %160) #13
  br label %197

197:                                              ; preds = %195, %193
  %198 = phi %5* [ %194, %193 ], [ %196, %195 ]
  call void @zval_add_ref(%5* %198) #13
  br label %199

199:                                              ; preds = %186, %197
  %200 = getelementptr inbounds %2, %2* %187, i64 0, i32 0, i32 1
  %201 = bitcast %4* %200 to %63*
  %202 = getelementptr inbounds %63, %63* %201, i64 0, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = and i8 %203, 2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %217

206:                                              ; preds = %199
  %207 = getelementptr inbounds %2, %2* %187, i64 0, i32 0, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = add i32 %208, -1
  store i32 %209, i32* %207, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %217

211:                                              ; preds = %206
  %212 = and i8 %203, 1
  %213 = icmp eq i8 %212, 0
  %214 = bitcast %2* %187 to i8*
  br i1 %213, label %216, label %215

215:                                              ; preds = %211
  call void @free(i8* %214) #13
  br label %217

216:                                              ; preds = %211
  call void @_efree(i8* %214) #13
  br label %217

217:                                              ; preds = %216, %215, %206, %199, %159
  %218 = getelementptr inbounds %11, %11* %150, i64 1
  %219 = icmp eq %11* %218, %145
  br i1 %219, label %220, label %149

220:                                              ; preds = %217, %133
  call void @zend_hash_destroy(%9* nonnull %3) #13
  br label %221

221:                                              ; preds = %13, %57, %48, %220, %33, %24, %10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #13
  ret void
}

declare dso_local %5* @_zend_hash_add(%9*, %2*, %5*) local_unnamed_addr #1

declare dso_local zeroext i8 @zend_hash_exists(%9*, %2*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_udiff(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @86(%24* %0, %5* %1, i32 1, i32 1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_diff_assoc(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @85(%24* %0, %5* %1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_diff_uassoc(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @86(%24* %0, %5* %1, i32 6, i32 0, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_udiff_assoc(%24* nocapture readonly %0, %5* %1) local_unnamed_addr #0 {
  tail call fastcc void @85(%24* %0, %5* %1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_udiff_uassoc(%24* nocapture readonly %0, %5* nocapture %1) local_unnamed_addr #0 {
  tail call fastcc void @86(%24* %0, %5* %1, i32 6, i32 1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @php_multisort_compare(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = bitcast i8* %0 to %11**
  %4 = load %11*, %11** %3, align 8
  %5 = bitcast i8* %1 to %11**
  %6 = load %11*, %11** %5, align 8
  br label %7

7:                                                ; preds = %21, %2
  %8 = phi i64 [ %22, %21 ], [ 0, %2 ]
  %9 = load i32 (i8*, i8*)**, i32 (i8*, i8*)*** getelementptr inbounds (%0, %0* @array_globals, i64 0, i32 0), align 8
  %10 = getelementptr inbounds i32 (i8*, i8*)*, i32 (i8*, i8*)** %9, i64 %8
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %10, align 8
  %12 = getelementptr inbounds %11, %11* %4, i64 %8
  %13 = bitcast %11* %12 to i8*
  %14 = getelementptr inbounds %11, %11* %6, i64 %8
  %15 = bitcast %11* %14 to i8*
  %16 = tail call i32 %11(i8* %13, i8* %15) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %7
  %19 = icmp sgt i32 %16, 0
  %20 = select i1 %19, i32 1, i32 -1
  br label %27

21:                                               ; preds = %7
  %22 = add nuw i64 %8, 1
  %23 = getelementptr inbounds %11, %11* %4, i64 %22, i32 0, i32 1
  %24 = bitcast %7* %23 to i8*
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %7

27:                                               ; preds = %21, %18
  %28 = phi i32 [ %20, %18 ], [ 0, %21 ]
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_multisort(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %4, i32 1, i32 -1) #13
  br label %351

7:                                                ; preds = %2
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %9 = getelementptr inbounds i8**, i8*** %8, i64 2
  %10 = sext i32 %4 to i64
  %11 = tail call noalias i8* @_ecalloc(i64 %10, i64 8) #17
  %12 = bitcast i8*** %9 to %5*
  %13 = bitcast i8* %11 to %5**
  %14 = tail call noalias i8* @_ecalloc(i64 %10, i64 8) #17
  store i8* %14, i8** bitcast (%0* @array_globals to i8**), align 8
  br label %15

15:                                               ; preds = %7, %120
  %16 = phi i32 [ 0, %7 ], [ %121, %120 ]
  %17 = phi i32 [ 0, %7 ], [ %122, %120 ]
  %18 = phi i64 [ 0, %7 ], [ %126, %120 ]
  %19 = phi i32 [ 0, %7 ], [ %125, %120 ]
  %20 = phi i32 [ 4, %7 ], [ %124, %120 ]
  %21 = phi i32 [ 0, %7 ], [ %123, %120 ]
  %22 = getelementptr inbounds %5, %5* %12, i64 %18
  %23 = getelementptr inbounds %5, %5* %12, i64 %18, i32 1
  %24 = bitcast %7* %23 to i8*
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 10
  br i1 %26, label %27, label %31

27:                                               ; preds = %15
  %28 = bitcast %5* %22 to %59**
  %29 = load %59*, %59** %28, align 8
  %30 = getelementptr inbounds %59, %59* %29, i64 0, i32 1
  br label %31

31:                                               ; preds = %27, %15
  %32 = phi %5* [ %30, %27 ], [ %22, %15 ]
  %33 = getelementptr inbounds %5, %5* %32, i64 0, i32 1
  %34 = bitcast %7* %33 to i8*
  %35 = load i8, i8* %34, align 8
  switch i8 %35, label %116 [
    i8 7, label %36
    i8 4, label %91
  ]

36:                                               ; preds = %31
  %37 = bitcast %5* %32 to %9**
  %38 = load %9*, %9** %37, align 8
  %39 = getelementptr inbounds %9, %9* %38, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp ugt i32 %40, 1
  br i1 %41, label %42, label %53

42:                                               ; preds = %36
  %43 = bitcast %7* %33 to %60*
  %44 = getelementptr inbounds %60, %60* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = add i32 %40, -1
  store i32 %49, i32* %39, align 8
  br label %50

50:                                               ; preds = %42, %48
  %51 = tail call %9* @zend_array_dup(%9* %38) #13
  store %9* %51, %9** %37, align 8
  %52 = getelementptr inbounds %7, %7* %33, i64 0, i32 0
  store i32 5127, i32* %52, align 8
  br label %53

53:                                               ; preds = %50, %36
  %54 = icmp eq i64 %18, 0
  br i1 %54, label %85, label %55

55:                                               ; preds = %53
  %56 = sext i32 %21 to i64
  %57 = icmp ne i32 %20, 4
  %58 = and i64 %56, -9
  switch i64 %58, label %77 [
    i64 1, label %59
    i64 2, label %61
    i64 6, label %68
    i64 5, label %75
  ]

59:                                               ; preds = %55
  %60 = select i1 %57, i32 (i8*, i8*)* @106, i32 (i8*, i8*)* @107
  br label %79

61:                                               ; preds = %55
  %62 = and i64 %56, 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = select i1 %57, i32 (i8*, i8*)* @108, i32 (i8*, i8*)* @109
  br label %79

66:                                               ; preds = %61
  %67 = select i1 %57, i32 (i8*, i8*)* @110, i32 (i8*, i8*)* @111
  br label %79

68:                                               ; preds = %55
  %69 = and i64 %56, 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = select i1 %57, i32 (i8*, i8*)* @112, i32 (i8*, i8*)* @103
  br label %79

73:                                               ; preds = %68
  %74 = select i1 %57, i32 (i8*, i8*)* @113, i32 (i8*, i8*)* @104
  br label %79

75:                                               ; preds = %55
  %76 = select i1 %57, i32 (i8*, i8*)* @114, i32 (i8*, i8*)* @115
  br label %79

77:                                               ; preds = %55
  %78 = select i1 %57, i32 (i8*, i8*)* @116, i32 (i8*, i8*)* @76
  br label %79

79:                                               ; preds = %59, %64, %66, %71, %73, %75, %77
  %80 = phi i32 (i8*, i8*)* [ %60, %59 ], [ %65, %64 ], [ %67, %66 ], [ %72, %71 ], [ %74, %73 ], [ %76, %75 ], [ %78, %77 ]
  %81 = load i32 (i8*, i8*)**, i32 (i8*, i8*)*** getelementptr inbounds (%0, %0* @array_globals, i64 0, i32 0), align 8
  %82 = add nsw i32 %19, -1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32 (i8*, i8*)*, i32 (i8*, i8*)** %81, i64 %83
  store i32 (i8*, i8*)* %80, i32 (i8*, i8*)** %84, align 8
  br label %85

85:                                               ; preds = %53, %79
  %86 = phi i32 [ 0, %79 ], [ %21, %53 ]
  %87 = phi i32 [ 4, %79 ], [ %20, %53 ]
  %88 = sext i32 %19 to i64
  %89 = getelementptr inbounds %5*, %5** %13, i64 %88
  store %5* %32, %5** %89, align 8
  %90 = add nsw i32 %19, 1
  br label %120

91:                                               ; preds = %31
  %92 = getelementptr inbounds %5, %5* %32, i64 0, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, -9
  switch i64 %94, label %112 [
    i64 4, label %95
    i64 3, label %95
    i64 0, label %104
    i64 1, label %104
    i64 2, label %104
    i64 6, label %104
    i64 5, label %104
  ]

95:                                               ; preds = %91, %91
  %96 = icmp eq i32 %16, 1
  br i1 %96, label %97, label %100

97:                                               ; preds = %95
  %98 = icmp eq i64 %93, 3
  %99 = select i1 %98, i32 3, i32 4
  br label %120

100:                                              ; preds = %95
  %101 = trunc i64 %18 to i32
  %102 = add nuw nsw i32 %101, 1
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @48, i64 0, i64 0), i32 %102) #13
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* %11) #13
  %103 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %103, align 8
  br label %351

104:                                              ; preds = %91, %91, %91, %91, %91
  %105 = icmp eq i32 %17, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %104
  %107 = trunc i64 %93 to i32
  br label %120

108:                                              ; preds = %104
  %109 = trunc i64 %18 to i32
  %110 = add nuw nsw i32 %109, 1
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @48, i64 0, i64 0), i32 %110) #13
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* %11) #13
  %111 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %111, align 8
  br label %351

112:                                              ; preds = %91
  %113 = trunc i64 %18 to i32
  %114 = add nuw nsw i32 %113, 1
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @49, i64 0, i64 0), i32 %114) #13
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* %11) #13
  %115 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %115, align 8
  br label %351

116:                                              ; preds = %31
  %117 = trunc i64 %18 to i32
  %118 = add nuw nsw i32 %117, 1
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @50, i64 0, i64 0), i32 %118) #13
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* %11) #13
  %119 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %119, align 8
  br label %351

120:                                              ; preds = %85, %106, %97
  %121 = phi i32 [ %16, %106 ], [ 0, %97 ], [ 1, %85 ]
  %122 = phi i32 [ 0, %106 ], [ %17, %97 ], [ 1, %85 ]
  %123 = phi i32 [ %107, %106 ], [ %21, %97 ], [ %86, %85 ]
  %124 = phi i32 [ %20, %106 ], [ %99, %97 ], [ %87, %85 ]
  %125 = phi i32 [ %19, %106 ], [ %19, %97 ], [ %90, %85 ]
  %126 = add nuw nsw i64 %18, 1
  %127 = icmp slt i64 %126, %10
  br i1 %127, label %15, label %128

128:                                              ; preds = %120
  %129 = sext i32 %123 to i64
  %130 = icmp ne i32 %124, 4
  %131 = and i64 %129, -9
  switch i64 %131, label %150 [
    i64 1, label %132
    i64 2, label %134
    i64 6, label %141
    i64 5, label %148
  ]

132:                                              ; preds = %128
  %133 = select i1 %130, i32 (i8*, i8*)* @106, i32 (i8*, i8*)* @107
  br label %152

134:                                              ; preds = %128
  %135 = and i64 %129, 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = select i1 %130, i32 (i8*, i8*)* @108, i32 (i8*, i8*)* @109
  br label %152

139:                                              ; preds = %134
  %140 = select i1 %130, i32 (i8*, i8*)* @110, i32 (i8*, i8*)* @111
  br label %152

141:                                              ; preds = %128
  %142 = and i64 %129, 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = select i1 %130, i32 (i8*, i8*)* @112, i32 (i8*, i8*)* @103
  br label %152

146:                                              ; preds = %141
  %147 = select i1 %130, i32 (i8*, i8*)* @113, i32 (i8*, i8*)* @104
  br label %152

148:                                              ; preds = %128
  %149 = select i1 %130, i32 (i8*, i8*)* @114, i32 (i8*, i8*)* @115
  br label %152

150:                                              ; preds = %128
  %151 = select i1 %130, i32 (i8*, i8*)* @116, i32 (i8*, i8*)* @76
  br label %152

152:                                              ; preds = %132, %137, %139, %144, %146, %148, %150
  %153 = phi i32 (i8*, i8*)* [ %133, %132 ], [ %138, %137 ], [ %140, %139 ], [ %145, %144 ], [ %147, %146 ], [ %149, %148 ], [ %151, %150 ]
  %154 = load i32 (i8*, i8*)**, i32 (i8*, i8*)*** getelementptr inbounds (%0, %0* @array_globals, i64 0, i32 0), align 8
  %155 = add nsw i32 %125, -1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i32 (i8*, i8*)*, i32 (i8*, i8*)** %154, i64 %156
  store i32 (i8*, i8*)* %153, i32 (i8*, i8*)** %157, align 8
  %158 = bitcast i8* %11 to %9***
  %159 = load %9**, %9*** %158, align 8
  %160 = load %9*, %9** %159, align 8
  %161 = getelementptr inbounds %9, %9* %160, i64 0, i32 5
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %125, 0
  br i1 %163, label %164, label %180

164:                                              ; preds = %152
  %165 = sext i32 %125 to i64
  br label %168

166:                                              ; preds = %168
  %167 = icmp slt i64 %177, %165
  br i1 %167, label %168, label %180

168:                                              ; preds = %164, %166
  %169 = phi i64 [ 0, %164 ], [ %177, %166 ]
  %170 = getelementptr inbounds %5*, %5** %13, i64 %169
  %171 = bitcast %5** %170 to %9***
  %172 = load %9**, %9*** %171, align 8
  %173 = load %9*, %9** %172, align 8
  %174 = getelementptr inbounds %9, %9* %173, i64 0, i32 5
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, %162
  %177 = add nuw nsw i64 %169, 1
  br i1 %176, label %166, label %178

178:                                              ; preds = %168
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @51, i64 0, i64 0)) #13
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* nonnull %11) #13
  %179 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %179, align 8
  br label %351

180:                                              ; preds = %166, %152
  %181 = icmp slt i32 %162, 1
  br i1 %181, label %182, label %184

182:                                              ; preds = %180
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* nonnull %11) #13
  %183 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %183, align 8
  br label %351

184:                                              ; preds = %180
  %185 = sext i32 %162 to i64
  %186 = tail call noalias i8* @_safe_emalloc(i64 %185, i64 8, i64 0) #13
  %187 = bitcast i8* %186 to %11**
  %188 = add nsw i32 %125, 1
  %189 = sext i32 %188 to i64
  %190 = zext i32 %162 to i64
  br label %194

191:                                              ; preds = %194
  br i1 %163, label %192, label %210

192:                                              ; preds = %191
  %193 = zext i32 %125 to i64
  br label %201

194:                                              ; preds = %194, %184
  %195 = phi i64 [ 0, %184 ], [ %199, %194 ]
  %196 = tail call noalias i8* @_safe_emalloc(i64 %189, i64 32, i64 0) #13
  %197 = getelementptr inbounds %11*, %11** %187, i64 %195
  %198 = bitcast %11** %197 to i8**
  store i8* %196, i8** %198, align 8
  %199 = add nuw nsw i64 %195, 1
  %200 = icmp eq i64 %199, %190
  br i1 %200, label %191, label %194

201:                                              ; preds = %249, %192
  %202 = phi i64 [ 0, %192 ], [ %250, %249 ]
  %203 = getelementptr inbounds %5*, %5** %13, i64 %202
  %204 = bitcast %5** %203 to %9***
  %205 = load %9**, %9*** %204, align 8
  %206 = load %9*, %9** %205, align 8
  %207 = getelementptr inbounds %9, %9* %206, i64 0, i32 4
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %249, label %220

210:                                              ; preds = %249, %191
  %211 = icmp sgt i32 %162, 0
  br i1 %211, label %212, label %285

212:                                              ; preds = %210
  %213 = sext i32 %125 to i64
  %214 = zext i32 %162 to i64
  %215 = add nsw i64 %214, -1
  %216 = and i64 %214, 3
  %217 = icmp ult i64 %215, 3
  br i1 %217, label %273, label %218

218:                                              ; preds = %212
  %219 = sub nsw i64 %214, %216
  br label %252

220:                                              ; preds = %201, %241
  %221 = phi %9* [ %242, %241 ], [ %206, %201 ]
  %222 = phi i64 [ %244, %241 ], [ 0, %201 ]
  %223 = phi i32 [ %243, %241 ], [ 0, %201 ]
  %224 = getelementptr inbounds %9, %9* %221, i64 0, i32 3
  %225 = load %11*, %11** %224, align 8
  %226 = getelementptr inbounds %11, %11* %225, i64 %222, i32 0, i32 1
  %227 = bitcast %7* %226 to i8*
  %228 = load i8, i8* %227, align 8
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %241, label %230

230:                                              ; preds = %220
  %231 = getelementptr inbounds %11, %11* %225, i64 %222
  %232 = sext i32 %223 to i64
  %233 = getelementptr inbounds %11*, %11** %187, i64 %232
  %234 = load %11*, %11** %233, align 8
  %235 = getelementptr inbounds %11, %11* %234, i64 %202
  %236 = bitcast %11* %235 to i8*
  %237 = bitcast %11* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 32, i1 false)
  %238 = add nsw i32 %223, 1
  %239 = load %9**, %9*** %204, align 8
  %240 = load %9*, %9** %239, align 8
  br label %241

241:                                              ; preds = %220, %230
  %242 = phi %9* [ %221, %220 ], [ %240, %230 ]
  %243 = phi i32 [ %223, %220 ], [ %238, %230 ]
  %244 = add nuw nsw i64 %222, 1
  %245 = getelementptr inbounds %9, %9* %242, i64 0, i32 4
  %246 = load i32, i32* %245, align 8
  %247 = zext i32 %246 to i64
  %248 = icmp ult i64 %244, %247
  br i1 %248, label %220, label %249

249:                                              ; preds = %241, %201
  %250 = add nuw nsw i64 %202, 1
  %251 = icmp eq i64 %250, %193
  br i1 %251, label %210, label %201

252:                                              ; preds = %252, %218
  %253 = phi i64 [ 0, %218 ], [ %270, %252 ]
  %254 = phi i64 [ %219, %218 ], [ %271, %252 ]
  %255 = getelementptr inbounds %11*, %11** %187, i64 %253
  %256 = load %11*, %11** %255, align 8
  %257 = getelementptr inbounds %11, %11* %256, i64 %213, i32 0, i32 1, i32 0
  store i32 0, i32* %257, align 8
  %258 = or i64 %253, 1
  %259 = getelementptr inbounds %11*, %11** %187, i64 %258
  %260 = load %11*, %11** %259, align 8
  %261 = getelementptr inbounds %11, %11* %260, i64 %213, i32 0, i32 1, i32 0
  store i32 0, i32* %261, align 8
  %262 = or i64 %253, 2
  %263 = getelementptr inbounds %11*, %11** %187, i64 %262
  %264 = load %11*, %11** %263, align 8
  %265 = getelementptr inbounds %11, %11* %264, i64 %213, i32 0, i32 1, i32 0
  store i32 0, i32* %265, align 8
  %266 = or i64 %253, 3
  %267 = getelementptr inbounds %11*, %11** %187, i64 %266
  %268 = load %11*, %11** %267, align 8
  %269 = getelementptr inbounds %11, %11* %268, i64 %213, i32 0, i32 1, i32 0
  store i32 0, i32* %269, align 8
  %270 = add nuw nsw i64 %253, 4
  %271 = add i64 %254, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %252

273:                                              ; preds = %252, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %252 ]
  %275 = icmp eq i64 %216, 0
  br i1 %275, label %285, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %282, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %283, %276 ], [ %216, %273 ]
  %279 = getelementptr inbounds %11*, %11** %187, i64 %277
  %280 = load %11*, %11** %279, align 8
  %281 = getelementptr inbounds %11, %11* %280, i64 %213, i32 0, i32 1, i32 0
  store i32 0, i32* %281, align 8
  %282 = add nuw nsw i64 %277, 1
  %283 = add i64 %278, -1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %276

285:                                              ; preds = %273, %276, %210
  tail call void @zend_sort(i8* %186, i64 %185, i64 8, i32 (i8*, i8*)* nonnull @php_multisort_compare, void (i8*, i8*)* nonnull @87) #13
  br i1 %163, label %286, label %289

286:                                              ; preds = %285
  %287 = zext i32 %162 to i64
  %288 = zext i32 %125 to i64
  br label %292

289:                                              ; preds = %339, %285
  br i1 %211, label %290, label %349

290:                                              ; preds = %289
  %291 = zext i32 %162 to i64
  br label %342

292:                                              ; preds = %339, %286
  %293 = phi i64 [ 0, %286 ], [ %340, %339 ]
  %294 = getelementptr inbounds %5*, %5** %13, i64 %293
  %295 = bitcast %5** %294 to %9***
  %296 = load %9**, %9*** %295, align 8
  %297 = load %9*, %9** %296, align 8
  %298 = getelementptr inbounds %9, %9* %297, i64 0, i32 4
  store i32 %162, i32* %298, align 8
  %299 = getelementptr inbounds %9, %9* %297, i64 0, i32 7
  store i32 0, i32* %299, align 4
  %300 = getelementptr inbounds %9, %9* %297, i64 0, i32 1, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = lshr i32 %301, 2
  %303 = and i32 %302, 1
  %304 = xor i32 %303, 1
  br i1 %211, label %305, label %332

305:                                              ; preds = %292
  %306 = getelementptr inbounds %9, %9* %297, i64 0, i32 3
  %307 = load %11*, %11** %306, align 8
  br label %308

308:                                              ; preds = %327, %305
  %309 = phi %11* [ %307, %305 ], [ %319, %327 ]
  %310 = phi i64 [ 0, %305 ], [ %330, %327 ]
  %311 = phi i32 [ %304, %305 ], [ %329, %327 ]
  %312 = phi i32 [ 0, %305 ], [ %328, %327 ]
  %313 = getelementptr inbounds %11, %11* %309, i64 %310
  %314 = getelementptr inbounds %11*, %11** %187, i64 %310
  %315 = load %11*, %11** %314, align 8
  %316 = getelementptr inbounds %11, %11* %315, i64 %293
  %317 = bitcast %11* %313 to i8*
  %318 = bitcast %11* %316 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %318, i64 32, i1 false)
  %319 = load %11*, %11** %306, align 8
  %320 = getelementptr inbounds %11, %11* %319, i64 %310, i32 2
  %321 = load %2*, %2** %320, align 8
  %322 = icmp eq %2* %321, null
  br i1 %322, label %323, label %327

323:                                              ; preds = %308
  %324 = add nsw i32 %312, 1
  %325 = sext i32 %312 to i64
  %326 = getelementptr inbounds %11, %11* %319, i64 %310, i32 1
  store i64 %325, i64* %326, align 8
  br label %327

327:                                              ; preds = %308, %323
  %328 = phi i32 [ %324, %323 ], [ %312, %308 ]
  %329 = phi i32 [ %311, %323 ], [ 0, %308 ]
  %330 = add nuw nsw i64 %310, 1
  %331 = icmp eq i64 %330, %287
  br i1 %331, label %332, label %308

332:                                              ; preds = %327, %292
  %333 = phi i32 [ %304, %292 ], [ %329, %327 ]
  %334 = getelementptr inbounds %9, %9* %297, i64 0, i32 8
  store i64 %185, i64* %334, align 8
  %335 = icmp eq i32 %333, 0
  br i1 %335, label %337, label %336

336:                                              ; preds = %332
  tail call void @zend_hash_to_packed(%9* nonnull %297) #13
  br label %339

337:                                              ; preds = %332
  %338 = tail call i32 @zend_hash_rehash(%9* nonnull %297) #13
  br label %339

339:                                              ; preds = %337, %336
  %340 = add nuw nsw i64 %293, 1
  %341 = icmp eq i64 %340, %288
  br i1 %341, label %289, label %292

342:                                              ; preds = %342, %290
  %343 = phi i64 [ 0, %290 ], [ %347, %342 ]
  %344 = getelementptr inbounds %11*, %11** %187, i64 %343
  %345 = bitcast %11** %344 to i8**
  %346 = load i8*, i8** %345, align 8
  tail call void @_efree(i8* %346) #13
  %347 = add nuw nsw i64 %343, 1
  %348 = icmp eq i64 %347, %291
  br i1 %348, label %349, label %342

349:                                              ; preds = %342, %289
  tail call void @_efree(i8* %186) #13
  tail call void @_efree(i8* %14) #13
  tail call void @_efree(i8* %11) #13
  %350 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %350, align 8
  br label %351

351:                                              ; preds = %116, %100, %108, %112, %6, %349, %182, %178
  ret void
}

; Function Attrs: allocsize(0,1)
declare dso_local noalias i8* @_ecalloc(i64, i64) local_unnamed_addr #8

declare dso_local noalias i8* @_safe_emalloc(i64, i64, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind uwtable
define internal void @87(i8* nocapture %0, i8* nocapture %1) #9 {
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast i8* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 %4, i64* %5, align 8
  ret void
}

declare dso_local void @zend_hash_to_packed(%9*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_rand(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 1, i64* %3, align 8
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %10, i64 3
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 7
  br i1 %16, label %17, label %33

17:                                               ; preds = %9
  %18 = icmp slt i32 %6, 2
  br i1 %18, label %37, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds i8**, i8*** %10, i64 4
  %21 = bitcast i8*** %20 to %5*
  %22 = getelementptr inbounds i8**, i8*** %10, i64 5
  %23 = bitcast i8*** %22 to i8*
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 4
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast i8*** %20 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %3, align 8
  br label %37

29:                                               ; preds = %19
  %30 = call i32 @zend_parse_arg_long_slow(%5* nonnull %21, i64* nonnull %3) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %37

32:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 2) #13
  br label %285

33:                                               ; preds = %29, %9
  %34 = phi i32 [ 3, %9 ], [ 0, %29 ]
  %35 = phi %5* [ %12, %9 ], [ %21, %29 ]
  %36 = phi i32 [ 1, %9 ], [ 2, %29 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %36, i32 %34, %5* %35) #13
  br label %285

37:                                               ; preds = %17, %29, %26
  %38 = bitcast i8*** %11 to %9**
  %39 = load %9*, %9** %38, align 8
  %40 = getelementptr inbounds %9, %9* %39, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @52, i64 0, i64 0)) #13
  br label %285

44:                                               ; preds = %37
  %45 = load i64, i64* %3, align 8
  %46 = icmp eq i64 %45, 1
  br i1 %46, label %47, label %140

47:                                               ; preds = %44
  %48 = getelementptr inbounds %9, %9* %39, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = lshr i32 %49, 1
  %51 = sub i32 %49, %50
  %52 = icmp ult i32 %41, %51
  br i1 %52, label %53, label %104

53:                                               ; preds = %47
  %54 = add nsw i32 %41, -1
  %55 = sext i32 %54 to i64
  %56 = call i64 @php_mt_rand_range(i64 0, i64 %55) #13
  %57 = load %9*, %9** %38, align 8
  %58 = getelementptr inbounds %9, %9* %57, i64 0, i32 3
  %59 = load %11*, %11** %58, align 8
  %60 = getelementptr inbounds %9, %9* %57, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %11, %11* %59, i64 %62
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %104, label %65

65:                                               ; preds = %53, %100
  %66 = phi i64 [ %101, %100 ], [ 0, %53 ]
  %67 = phi %11* [ %102, %100 ], [ %59, %53 ]
  %68 = getelementptr inbounds %11, %11* %67, i64 0, i32 0, i32 1
  %69 = bitcast %7* %68 to i8*
  %70 = load i8, i8* %69, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %100, label %72

72:                                               ; preds = %65
  %73 = icmp eq i64 %66, %56
  br i1 %73, label %74, label %98

74:                                               ; preds = %72
  %75 = getelementptr inbounds %11, %11* %67, i64 0, i32 2
  %76 = load %2*, %2** %75, align 8
  %77 = icmp eq %2* %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %74
  %79 = bitcast %5* %1 to %2**
  store %2* %76, %2** %79, align 8
  %80 = getelementptr inbounds %2, %2* %76, i64 0, i32 0, i32 1
  %81 = bitcast %4* %80 to %63*
  %82 = getelementptr inbounds %63, %63* %81, i64 0, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = and i8 %83, 2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %87, align 8
  br label %285

88:                                               ; preds = %78
  %89 = getelementptr inbounds %2, %2* %76, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  store i32 %91, i32* %89, align 8
  %92 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %92, align 8
  br label %285

93:                                               ; preds = %74
  %94 = getelementptr inbounds %11, %11* %67, i64 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %97, align 8
  br label %285

98:                                               ; preds = %72
  %99 = add nsw i64 %66, 1
  br label %100

100:                                              ; preds = %98, %65
  %101 = phi i64 [ %99, %98 ], [ %66, %65 ]
  %102 = getelementptr inbounds %11, %11* %67, i64 1
  %103 = icmp eq %11* %102, %63
  br i1 %103, label %104, label %65

104:                                              ; preds = %100, %53, %47
  %105 = getelementptr inbounds %9, %9* %39, i64 0, i32 3
  br label %106

106:                                              ; preds = %106, %104
  %107 = load i32, i32* %48, align 8
  %108 = add i32 %107, -1
  %109 = zext i32 %108 to i64
  %110 = call i64 @php_mt_rand_range(i64 0, i64 %109) #13
  %111 = load %11*, %11** %105, align 8
  %112 = getelementptr inbounds %11, %11* %111, i64 %110, i32 0, i32 1
  %113 = bitcast %7* %112 to i8*
  %114 = load i8, i8* %113, align 8
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %106, label %116

116:                                              ; preds = %106
  %117 = getelementptr inbounds %11, %11* %111, i64 %110, i32 2
  %118 = load %2*, %2** %117, align 8
  %119 = icmp eq %2* %118, null
  br i1 %119, label %135, label %120

120:                                              ; preds = %116
  %121 = bitcast %5* %1 to %2**
  store %2* %118, %2** %121, align 8
  %122 = getelementptr inbounds %2, %2* %118, i64 0, i32 0, i32 1
  %123 = bitcast %4* %122 to %63*
  %124 = getelementptr inbounds %63, %63* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %129, align 8
  br label %285

130:                                              ; preds = %120
  %131 = getelementptr inbounds %2, %2* %118, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 8
  %134 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %134, align 8
  br label %285

135:                                              ; preds = %116
  %136 = getelementptr inbounds %11, %11* %111, i64 %110, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %139, align 8
  br label %285

140:                                              ; preds = %44
  %141 = icmp slt i64 %45, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %140
  %143 = sext i32 %41 to i64
  %144 = icmp sgt i64 %45, %143
  br i1 %144, label %145, label %146

145:                                              ; preds = %142, %140
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @53, i64 0, i64 0)) #13
  br label %285

146:                                              ; preds = %142
  %147 = trunc i64 %45 to i32
  %148 = call i32 @_array_init(%5* %1, i32 %147) #13
  %149 = load i64, i64* %3, align 8
  %150 = ashr i32 %41, 1
  %151 = sext i32 %150 to i64
  %152 = icmp sgt i64 %149, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %146
  %154 = sub nsw i64 %143, %149
  store i64 %154, i64* %3, align 8
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i64 [ %154, %153 ], [ %149, %146 ]
  %157 = phi i32 [ 1, %153 ], [ 0, %146 ]
  %158 = zext i32 %41 to i64
  %159 = add nuw nsw i64 %158, 63
  %160 = lshr i64 %159, 6
  %161 = trunc i64 %160 to i32
  %162 = shl nuw nsw i64 %160, 3
  %163 = icmp ugt i32 %161, 4096
  br i1 %163, label %164, label %167

164:                                              ; preds = %155
  %165 = call noalias i8* @_emalloc(i64 %162) #15
  %166 = load i64, i64* %3, align 8
  br label %169

167:                                              ; preds = %155
  %168 = alloca i8, i64 %162, align 16
  br label %169

169:                                              ; preds = %167, %164
  %170 = phi i64 [ %166, %164 ], [ %156, %167 ]
  %171 = phi i8* [ %165, %164 ], [ %168, %167 ]
  %172 = bitcast i8* %171 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 %162, i1 false) #13
  %173 = trunc i64 %170 to i32
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %195, label %175

175:                                              ; preds = %169
  %176 = add nsw i32 %41, -1
  %177 = sext i32 %176 to i64
  br label %178

178:                                              ; preds = %175, %192
  %179 = phi i32 [ %173, %175 ], [ %193, %192 ]
  %180 = call i64 @php_mt_rand_range(i64 0, i64 %177) #13
  %181 = lshr i64 %180, 6
  %182 = and i64 %181, 67108863
  %183 = getelementptr inbounds i64, i64* %172, i64 %182
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %180, 63
  %186 = shl i64 1, %185
  %187 = and i64 %186, %184
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %178
  %190 = or i64 %186, %184
  store i64 %190, i64* %183, align 8
  %191 = add nsw i32 %179, -1
  br label %192

192:                                              ; preds = %178, %189
  %193 = phi i32 [ %179, %178 ], [ %191, %189 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %178

195:                                              ; preds = %192, %169
  %196 = bitcast %5* %1 to %9**
  %197 = load %9*, %9** %196, align 8
  call void @zend_hash_real_init(%9* %197, i8 zeroext 1) #13
  %198 = load %9*, %9** %196, align 8
  %199 = getelementptr inbounds %9, %9* %198, i64 0, i32 4
  %200 = load i32, i32* %199, align 8
  %201 = zext i32 %200 to i64
  %202 = load %9*, %9** %38, align 8
  %203 = getelementptr inbounds %9, %9* %202, i64 0, i32 3
  %204 = load %11*, %11** %203, align 8
  %205 = getelementptr inbounds %9, %9* %202, i64 0, i32 4
  %206 = load i32, i32* %205, align 8
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds %11, %11* %204, i64 %207
  %209 = icmp eq i32 %206, 0
  br i1 %209, label %276, label %210

210:                                              ; preds = %195
  %211 = getelementptr inbounds %9, %9* %198, i64 0, i32 3
  %212 = load %11*, %11** %211, align 8
  %213 = getelementptr inbounds %11, %11* %212, i64 %201
  br label %214

214:                                              ; preds = %210, %268
  %215 = phi i32 [ %271, %268 ], [ 0, %210 ]
  %216 = phi %11* [ %272, %268 ], [ %204, %210 ]
  %217 = phi i32 [ %270, %268 ], [ %200, %210 ]
  %218 = phi %11* [ %269, %268 ], [ %213, %210 ]
  %219 = getelementptr inbounds %11, %11* %216, i64 0, i32 0, i32 1
  %220 = bitcast %7* %219 to i8*
  %221 = load i8, i8* %220, align 8
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %268, label %223

223:                                              ; preds = %214
  %224 = getelementptr inbounds %11, %11* %216, i64 0, i32 2
  %225 = load %2*, %2** %224, align 8
  %226 = lshr i32 %215, 6
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i64, i64* %172, i64 %227
  %229 = load i64, i64* %228, align 8
  %230 = and i32 %215, 63
  %231 = zext i32 %230 to i64
  %232 = shl i64 1, %231
  %233 = and i64 %229, %232
  %234 = icmp ne i64 %233, 0
  %235 = zext i1 %234 to i32
  %236 = icmp eq i32 %157, %235
  br i1 %236, label %264, label %237

237:                                              ; preds = %223
  %238 = getelementptr inbounds %11, %11* %216, i64 0, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq %2* %225, null
  br i1 %240, label %253, label %241

241:                                              ; preds = %237
  %242 = ptrtoint %2* %225 to i64
  %243 = getelementptr inbounds %2, %2* %225, i64 0, i32 0, i32 1
  %244 = bitcast %4* %243 to %63*
  %245 = getelementptr inbounds %63, %63* %244, i64 0, i32 1
  %246 = load i8, i8* %245, align 1
  %247 = and i8 %246, 2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %253

249:                                              ; preds = %241
  %250 = getelementptr inbounds %2, %2* %225, i64 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = add i32 %251, 1
  store i32 %252, i32* %250, align 8
  br label %253

253:                                              ; preds = %237, %249, %241
  %254 = phi i32 [ 5126, %249 ], [ 6, %241 ], [ 4, %237 ]
  %255 = phi i64 [ %242, %249 ], [ %242, %241 ], [ %239, %237 ]
  %256 = inttoptr i64 %255 to %61*
  %257 = bitcast %11* %218 to %61**
  store %61* %256, %61** %257, align 8
  %258 = getelementptr inbounds %11, %11* %218, i64 0, i32 0, i32 1, i32 0
  store i32 %254, i32* %258, align 8
  %259 = zext i32 %217 to i64
  %260 = getelementptr inbounds %11, %11* %218, i64 0, i32 1
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %11, %11* %218, i64 0, i32 2
  store %2* null, %2** %261, align 8
  %262 = getelementptr inbounds %11, %11* %218, i64 1
  %263 = add i32 %217, 1
  br label %264

264:                                              ; preds = %223, %253
  %265 = phi %11* [ %262, %253 ], [ %218, %223 ]
  %266 = phi i32 [ %263, %253 ], [ %217, %223 ]
  %267 = add nsw i32 %215, 1
  br label %268

268:                                              ; preds = %214, %264
  %269 = phi %11* [ %265, %264 ], [ %218, %214 ]
  %270 = phi i32 [ %266, %264 ], [ %217, %214 ]
  %271 = phi i32 [ %267, %264 ], [ %215, %214 ]
  %272 = getelementptr inbounds %11, %11* %216, i64 1
  %273 = icmp eq %11* %272, %208
  br i1 %273, label %274, label %214

274:                                              ; preds = %268
  %275 = zext i32 %270 to i64
  br label %276

276:                                              ; preds = %274, %195
  %277 = phi i64 [ %275, %274 ], [ %201, %195 ]
  %278 = phi i32 [ %270, %274 ], [ %200, %195 ]
  store i32 %278, i32* %199, align 8
  %279 = getelementptr inbounds %9, %9* %198, i64 0, i32 5
  store i32 %278, i32* %279, align 4
  %280 = getelementptr inbounds %9, %9* %198, i64 0, i32 8
  store i64 %277, i64* %280, align 8
  %281 = icmp eq i32 %278, 0
  %282 = sext i1 %281 to i32
  %283 = getelementptr inbounds %9, %9* %198, i64 0, i32 7
  store i32 %282, i32* %283, align 4
  br i1 %163, label %284, label %285

284:                                              ; preds = %276
  call void @_efree(i8* %171) #13
  br label %285

285:                                              ; preds = %128, %130, %135, %93, %88, %86, %32, %276, %284, %33, %145, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare dso_local i64 @php_mt_rand_range(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_sum(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 1) #13
  br label %94

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = getelementptr inbounds i8**, i8*** %10, i64 3
  %13 = bitcast i8*** %12 to i8*
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 7
  br i1 %15, label %18, label %16

16:                                               ; preds = %9
  %17 = bitcast i8*** %11 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %17) #13
  br label %94

18:                                               ; preds = %9
  %19 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %20, align 8
  %21 = bitcast i8*** %11 to %9**
  %22 = load %9*, %9** %21, align 8
  %23 = getelementptr inbounds %9, %9* %22, i64 0, i32 3
  %24 = load %11*, %11** %23, align 8
  %25 = getelementptr inbounds %9, %9* %22, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %11, %11* %24, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %94, label %30

30:                                               ; preds = %18
  %31 = bitcast %5* %3 to %61**
  %32 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %5, %5* %1, i64 0, i32 1
  %34 = bitcast %7* %33 to i8*
  %35 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %36 = bitcast %7* %35 to i8*
  %37 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %38 = bitcast %5* %3 to double*
  %39 = bitcast %5* %1 to double*
  br label %40

40:                                               ; preds = %30, %91
  %41 = phi %11* [ %24, %30 ], [ %92, %91 ]
  %42 = getelementptr inbounds %11, %11* %41, i64 0, i32 0, i32 1
  %43 = bitcast %7* %42 to i8*
  %44 = load i8, i8* %43, align 8
  switch i8 %44, label %45 [
    i8 0, label %91
    i8 7, label %91
    i8 8, label %91
  ]

45:                                               ; preds = %40
  %46 = bitcast %11* %41 to %61**
  %47 = load %61*, %61** %46, align 8
  %48 = getelementptr inbounds %11, %11* %41, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 8
  store %61* %47, %61** %31, align 8
  store i32 %49, i32* %32, align 8
  %50 = and i32 %49, 1024
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %61, %61* %47, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %45, %52
  call void @convert_scalar_to_number(%5* nonnull %3) #13
  %57 = load i8, i8* %34, align 8
  switch i8 %57, label %89 [
    i8 4, label %58
    i8 5, label %78
  ]

58:                                               ; preds = %56
  %59 = load i8, i8* %36, align 8
  switch i8 %59, label %89 [
    i8 4, label %60
    i8 5, label %73
  ]

60:                                               ; preds = %58
  %61 = load i64, i64* %19, align 8
  %62 = load i64, i64* %37, align 8
  %63 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %61, i64 %62) #13
  %64 = extractvalue { i64, i1 } %63, 1
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = sitofp i64 %61 to double
  %67 = sitofp i64 %62 to double
  %68 = fadd double %66, %67
  store double %68, double* %39, align 8
  br label %71

69:                                               ; preds = %60
  %70 = extractvalue { i64, i1 } %63, 0
  store i64 %70, i64* %19, align 8
  br label %71

71:                                               ; preds = %69, %65
  %72 = phi i32 [ 4, %69 ], [ 5, %65 ]
  store i32 %72, i32* %20, align 8
  br label %91

73:                                               ; preds = %58
  %74 = load i64, i64* %19, align 8
  %75 = sitofp i64 %74 to double
  %76 = load double, double* %38, align 8
  %77 = fadd double %76, %75
  store double %77, double* %39, align 8
  store i32 5, i32* %20, align 8
  br label %91

78:                                               ; preds = %56
  %79 = load i8, i8* %36, align 8
  switch i8 %79, label %89 [
    i8 5, label %80
    i8 4, label %84
  ]

80:                                               ; preds = %78
  %81 = load double, double* %39, align 8
  %82 = load double, double* %38, align 8
  %83 = fadd double %81, %82
  store double %83, double* %39, align 8
  store i32 5, i32* %20, align 8
  br label %91

84:                                               ; preds = %78
  %85 = load double, double* %39, align 8
  %86 = load i64, i64* %37, align 8
  %87 = sitofp i64 %86 to double
  %88 = fadd double %85, %87
  store double %88, double* %39, align 8
  store i32 5, i32* %20, align 8
  br label %91

89:                                               ; preds = %78, %58, %56
  %90 = call i32 @add_function(%5* nonnull %1, %5* nonnull %1, %5* nonnull %3) #13
  br label %91

91:                                               ; preds = %40, %40, %40, %89, %84, %80, %73, %71
  %92 = getelementptr inbounds %11, %11* %41, i64 1
  %93 = icmp eq %11* %92, %28
  br i1 %93, label %94, label %40

94:                                               ; preds = %91, %18, %8, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

declare dso_local void @convert_scalar_to_number(%5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_product(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %6, i32 1, i32 1) #13
  br label %84

9:                                                ; preds = %2
  %10 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %11 = getelementptr inbounds i8**, i8*** %10, i64 2
  %12 = getelementptr inbounds i8**, i8*** %10, i64 3
  %13 = bitcast i8*** %12 to i8*
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 7
  br i1 %15, label %18, label %16

16:                                               ; preds = %9
  %17 = bitcast i8*** %11 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 3, %5* nonnull %17) #13
  br label %84

18:                                               ; preds = %9
  %19 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 1, i64* %19, align 8
  %20 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %20, align 8
  %21 = bitcast i8*** %11 to %9**
  %22 = load %9*, %9** %21, align 8
  %23 = getelementptr inbounds %9, %9* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %84, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %9, %9* %22, i64 0, i32 3
  %28 = load %11*, %11** %27, align 8
  %29 = getelementptr inbounds %9, %9* %22, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %11, %11* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %84, label %34

34:                                               ; preds = %26
  %35 = bitcast %5* %3 to %61**
  %36 = getelementptr inbounds %5, %5* %3, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %38 = bitcast %7* %37 to i8*
  %39 = getelementptr inbounds %5, %5* %1, i64 0, i32 1
  %40 = bitcast %7* %39 to i8*
  %41 = bitcast %5* %3 to double*
  %42 = bitcast %5* %1 to double*
  %43 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %34, %81
  %45 = phi %11* [ %28, %34 ], [ %82, %81 ]
  %46 = getelementptr inbounds %11, %11* %45, i64 0, i32 0, i32 1
  %47 = bitcast %7* %46 to i8*
  %48 = load i8, i8* %47, align 8
  switch i8 %48, label %49 [
    i8 0, label %81
    i8 7, label %81
    i8 8, label %81
  ]

49:                                               ; preds = %44
  %50 = bitcast %11* %45 to %61**
  %51 = load %61*, %61** %50, align 8
  %52 = getelementptr inbounds %11, %11* %45, i64 0, i32 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 8
  store %61* %51, %61** %35, align 8
  store i32 %53, i32* %36, align 8
  %54 = and i32 %53, 1024
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %61, %61* %51, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %57, align 4
  br label %60

60:                                               ; preds = %49, %56
  call void @convert_scalar_to_number(%5* nonnull %3) #13
  %61 = load i8, i8* %38, align 8
  %62 = icmp eq i8 %61, 4
  br i1 %62, label %63, label %77

63:                                               ; preds = %60
  %64 = load i8, i8* %40, align 8
  %65 = icmp eq i8 %64, 4
  br i1 %65, label %66, label %77

66:                                               ; preds = %63
  %67 = load i64, i64* %19, align 8
  %68 = sitofp i64 %67 to double
  %69 = load i64, i64* %43, align 8
  %70 = sitofp i64 %69 to double
  %71 = fmul double %68, %70
  %72 = fcmp oge double %71, 0xC3E0000000000000
  %73 = fcmp ole double %71, 0x43E0000000000000
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %66
  %76 = mul nsw i64 %69, %67
  store i64 %76, i64* %19, align 8
  br label %81

77:                                               ; preds = %66, %63, %60
  call void @convert_to_double(%5* %1) #13
  call void @convert_to_double(%5* nonnull %3) #13
  %78 = load double, double* %41, align 8
  %79 = load double, double* %42, align 8
  %80 = fmul double %78, %79
  store double %80, double* %42, align 8
  br label %81

81:                                               ; preds = %44, %44, %44, %77, %75
  %82 = getelementptr inbounds %11, %11* %45, i64 1
  %83 = icmp eq %11* %82, %32
  br i1 %83, label %84, label %44

84:                                               ; preds = %81, %26, %8, %18, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

declare dso_local void @convert_to_double(%5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_reduce(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca [2 x %5], align 16
  %4 = alloca %5, align 8
  %5 = alloca %5, align 8
  %6 = alloca %34, align 8
  %7 = alloca %35, align 8
  %8 = alloca i8*, align 8
  %9 = bitcast [2 x %5]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  %10 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = bitcast %5* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = bitcast %34* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #13
  %13 = getelementptr inbounds %35, %35* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %14 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %8, align 8
  %17 = and i32 %15, -2
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %20, label %19

19:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %15, i32 2, i32 3) #13
  br label %50

20:                                               ; preds = %2
  %21 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %22 = getelementptr inbounds i8**, i8*** %21, i64 2
  %23 = bitcast i8*** %22 to %5*
  %24 = getelementptr inbounds i8**, i8*** %21, i64 3
  %25 = bitcast i8*** %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 7
  br i1 %27, label %28, label %46

28:                                               ; preds = %20
  %29 = getelementptr inbounds i8**, i8*** %21, i64 4
  %30 = bitcast i8*** %29 to %5*
  %31 = call i32 @zend_fcall_info_init(%5* nonnull %30, i32 0, %34* nonnull %6, %35* nonnull %7, %2** null, i8** nonnull %8) #13
  %32 = icmp eq i32 %31, 0
  %33 = load i8*, i8** %8, align 8
  %34 = icmp ne i8* %33, null
  br i1 %32, label %35, label %44

35:                                               ; preds = %28
  br i1 %34, label %36, label %37

36:                                               ; preds = %35
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 8192, i32 2, i8* nonnull %33) #13
  br label %37

37:                                               ; preds = %36, %35
  %38 = icmp slt i32 %15, 3
  %39 = getelementptr inbounds i8**, i8*** %21, i64 6
  %40 = bitcast i8*** %39 to %5*
  %41 = select i1 %38, %5* null, %5* %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %42 = load i32, i32* %14, align 4
  %43 = icmp ugt i32 %42, 2
  br i1 %43, label %51, label %68

44:                                               ; preds = %28
  br i1 %34, label %45, label %46

45:                                               ; preds = %44
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 2, i8* nonnull %33) #13
  br label %50

46:                                               ; preds = %44, %20
  %47 = phi i32 [ 2, %44 ], [ 1, %20 ]
  %48 = phi %5* [ %30, %44 ], [ %23, %20 ]
  %49 = phi i32 [ 4, %44 ], [ 3, %20 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %47, i32 %49, %5* %48) #13
  br label %50

50:                                               ; preds = %19, %45, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %168

51:                                               ; preds = %37
  %52 = bitcast %5* %41 to %61**
  %53 = load %61*, %61** %52, align 8
  %54 = getelementptr inbounds %5, %5* %41, i64 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = bitcast %5* %4 to %61**
  store %61* %53, %61** %56, align 8
  %57 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 %55, i32* %57, align 8
  %58 = and i32 %55, 5120
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %51
  %61 = and i32 %55, 4096
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  call void @_zval_copy_ctor_func(%5* nonnull %4) #13
  br label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %61, %61* %53, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  br label %70

68:                                               ; preds = %37
  %69 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  store i32 1, i32* %69, align 8
  br label %70

70:                                               ; preds = %64, %63, %51, %68
  %71 = bitcast i8*** %22 to %9**
  %72 = load %9*, %9** %71, align 8
  %73 = getelementptr inbounds %9, %9* %72, i64 0, i32 5
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %70
  %77 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %78, i64* %81, align 8
  %82 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %80, i32* %82, align 8
  br label %168

83:                                               ; preds = %70
  %84 = getelementptr inbounds %34, %34* %6, i64 0, i32 2
  store %5* %5, %5** %84, align 8
  %85 = getelementptr inbounds %34, %34* %6, i64 0, i32 6
  store i32 2, i32* %85, align 4
  %86 = getelementptr inbounds %34, %34* %6, i64 0, i32 5
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %9, %9* %72, i64 0, i32 3
  %88 = load %11*, %11** %87, align 8
  %89 = getelementptr inbounds %9, %9* %72, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %11, %11* %88, i64 %91
  %93 = icmp eq i32 %90, 0
  br i1 %93, label %139, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0
  %96 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1
  %101 = bitcast %5* %100 to %61**
  %102 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1, i32 1, i32 0
  %103 = getelementptr inbounds %34, %34* %6, i64 0, i32 3
  %104 = getelementptr inbounds %5, %5* %5, i64 0, i32 1
  %105 = bitcast %7* %104 to i8*
  %106 = getelementptr inbounds %5, %5* %5, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %5, %5* %5, i64 0, i32 1, i32 0
  br label %108

108:                                              ; preds = %94, %136
  %109 = phi %11* [ %88, %94 ], [ %137, %136 ]
  %110 = getelementptr inbounds %11, %11* %109, i64 0, i32 0, i32 1
  %111 = bitcast %7* %110 to i8*
  %112 = load i8, i8* %111, align 8
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %136, label %114

114:                                              ; preds = %108
  %115 = load i64, i64* %96, align 8
  %116 = load i32, i32* %97, align 8
  store i64 %115, i64* %98, align 16
  store i32 %116, i32* %99, align 8
  %117 = bitcast %11* %109 to %61**
  %118 = load %61*, %61** %117, align 8
  %119 = getelementptr inbounds %11, %11* %109, i64 0, i32 0, i32 1, i32 0
  %120 = load i32, i32* %119, align 8
  store %61* %118, %61** %101, align 16
  store i32 %120, i32* %102, align 8
  %121 = and i32 %120, 1024
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %114
  %124 = getelementptr inbounds %61, %61* %118, i64 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 4
  br label %127

127:                                              ; preds = %114, %123
  store %5* %95, %5** %103, align 8
  %128 = call i32 @zend_call_function(%34* nonnull %6, %35* nonnull %7) #13
  %129 = icmp ne i32 %128, 0
  %130 = load i8, i8* %105, align 8
  %131 = icmp eq i8 %130, 0
  %132 = or i1 %129, %131
  call void @_zval_ptr_dtor(%5* nonnull %100) #13
  call void @_zval_ptr_dtor(%5* nonnull %95) #13
  br i1 %132, label %168, label %133

133:                                              ; preds = %127
  %134 = load i64, i64* %106, align 8
  %135 = load i32, i32* %107, align 8
  store i64 %134, i64* %96, align 8
  store i32 %135, i32* %97, align 8
  br label %136

136:                                              ; preds = %133, %108
  %137 = getelementptr inbounds %11, %11* %109, i64 1
  %138 = icmp eq %11* %137, %92
  br i1 %138, label %139, label %108

139:                                              ; preds = %136, %83
  %140 = getelementptr inbounds %5, %5* %4, i64 0, i32 1
  %141 = bitcast %7* %140 to i8*
  %142 = load i8, i8* %141, align 8
  %143 = icmp eq i8 %142, 10
  br i1 %143, label %151, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %5, %5* %4, i64 0, i32 1, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  store i64 %146, i64* %149, align 8
  %150 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %148, i32* %150, align 8
  br label %168

151:                                              ; preds = %139
  %152 = bitcast %5* %4 to %59**
  %153 = load %59*, %59** %152, align 8
  %154 = getelementptr inbounds %59, %59* %153, i64 0, i32 1
  %155 = bitcast %5* %154 to %61**
  %156 = load %61*, %61** %155, align 8
  %157 = getelementptr inbounds %59, %59* %153, i64 0, i32 1, i32 1, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = bitcast %5* %1 to %61**
  store %61* %156, %61** %159, align 8
  %160 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 %158, i32* %160, align 8
  %161 = and i32 %158, 1024
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %151
  %164 = getelementptr inbounds %61, %61* %156, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %164, align 4
  br label %167

167:                                              ; preds = %151, %163
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  br label %168

168:                                              ; preds = %127, %144, %167, %50, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  ret void
}

declare dso_local i32 @zend_call_function(%34*, %35*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_filter(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca [2 x %5], align 16
  %4 = alloca %5, align 8
  %5 = alloca i64, align 8
  %6 = alloca %34, align 8
  %7 = alloca %35, align 8
  %8 = alloca i8*, align 8
  %9 = bitcast [2 x %5]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  %10 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  store i64 0, i64* %5, align 8
  %12 = bitcast %34* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%34* @empty_fcall_info to i8*), i64 56, i1 false)
  %13 = getelementptr inbounds %35, %35* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %14 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %8, align 8
  %17 = add i32 %15, -1
  %18 = icmp ugt i32 %17, 2
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %15, i32 1, i32 3) #13
  br label %60

20:                                               ; preds = %2
  %21 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %22 = getelementptr inbounds i8**, i8*** %21, i64 2
  %23 = bitcast i8*** %22 to %5*
  %24 = getelementptr inbounds i8**, i8*** %21, i64 3
  %25 = bitcast i8*** %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 7
  br i1 %27, label %28, label %56

28:                                               ; preds = %20
  %29 = icmp slt i32 %15, 2
  br i1 %29, label %61, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8**, i8*** %21, i64 4
  %32 = bitcast i8*** %31 to %5*
  %33 = call i32 @zend_fcall_info_init(%5* nonnull %32, i32 0, %34* nonnull %6, %35* nonnull %7, %2** null, i8** nonnull %8) #13
  %34 = icmp eq i32 %33, 0
  %35 = load i8*, i8** %8, align 8
  %36 = icmp ne i8* %35, null
  br i1 %34, label %37, label %54

37:                                               ; preds = %30
  br i1 %36, label %38, label %39

38:                                               ; preds = %37
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 8192, i32 2, i8* nonnull %35) #13
  br label %39

39:                                               ; preds = %38, %37
  %40 = icmp slt i32 %15, 3
  br i1 %40, label %61, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds i8**, i8*** %21, i64 6
  %43 = bitcast i8*** %42 to %5*
  %44 = getelementptr inbounds i8**, i8*** %21, i64 7
  %45 = bitcast i8*** %44 to i8*
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 4
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = bitcast i8*** %42 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %5, align 8
  br label %61

51:                                               ; preds = %41
  %52 = call i32 @zend_parse_arg_long_slow(%5* nonnull %43, i64* nonnull %5) #13
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %61

54:                                               ; preds = %30
  br i1 %36, label %55, label %56

55:                                               ; preds = %54
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 2, i8* nonnull %35) #13
  br label %60

56:                                               ; preds = %54, %51, %20
  %57 = phi i32 [ 2, %54 ], [ 1, %20 ], [ 3, %51 ]
  %58 = phi %5* [ %32, %54 ], [ %23, %20 ], [ %43, %51 ]
  %59 = phi i32 [ 4, %54 ], [ 3, %20 ], [ 0, %51 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %57, i32 %59, %5* %58) #13
  br label %60

60:                                               ; preds = %19, %55, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %185

61:                                               ; preds = %48, %51, %39, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %62 = call i32 @_array_init(%5* %1, i32 0) #13
  %63 = bitcast i8*** %22 to %9**
  %64 = load %9*, %9** %63, align 8
  %65 = getelementptr inbounds %9, %9* %64, i64 0, i32 5
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %185, label %68

68:                                               ; preds = %61
  %69 = load i32, i32* %14, align 4
  %70 = icmp ugt i32 %69, 1
  br i1 %70, label %71, label %80

71:                                               ; preds = %68
  %72 = getelementptr inbounds %34, %34* %6, i64 0, i32 5
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %34, %34* %6, i64 0, i32 2
  store %5* %4, %5** %73, align 8
  %74 = load i64, i64* %5, align 8
  %75 = icmp eq i64 %74, 1
  %76 = getelementptr inbounds %34, %34* %6, i64 0, i32 6
  %77 = select i1 %75, i32 2, i32 1
  %78 = zext i1 %75 to i64
  store i32 %77, i32* %76, align 4
  %79 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 %78
  br label %80

80:                                               ; preds = %71, %68
  %81 = phi i8 [ 0, %68 ], [ 1, %71 ]
  %82 = phi %5* [ undef, %68 ], [ %79, %71 ]
  %83 = getelementptr inbounds %9, %9* %64, i64 0, i32 3
  %84 = load %11*, %11** %83, align 8
  %85 = getelementptr inbounds %9, %9* %64, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %11, %11* %84, i64 %87
  %89 = icmp eq i32 %86, 0
  br i1 %89, label %185, label %90

90:                                               ; preds = %80
  %91 = icmp eq i8 %81, 0
  %92 = bitcast %5* %1 to %9**
  %93 = bitcast [2 x %5]* %3 to %61**
  %94 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 1, i32 0
  %95 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0
  %96 = getelementptr inbounds %34, %34* %6, i64 0, i32 3
  %97 = getelementptr inbounds %5, %5* %82, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %5, %5* %82, i64 0, i32 1, i32 0
  %99 = bitcast %5* %82 to %2**
  %100 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1
  %101 = getelementptr inbounds %5, %5* %4, i64 0, i32 1
  %102 = bitcast %7* %101 to i8*
  br label %103

103:                                              ; preds = %90, %182
  %104 = phi %11* [ %84, %90 ], [ %183, %182 ]
  %105 = getelementptr inbounds %11, %11* %104, i64 0, i32 0
  %106 = getelementptr inbounds %11, %11* %104, i64 0, i32 0, i32 1
  %107 = bitcast %7* %106 to i8*
  %108 = load i8, i8* %107, align 8
  %109 = icmp eq i8 %108, 15
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = bitcast %11* %104 to %5**
  %112 = load %5*, %5** %111, align 8
  br label %113

113:                                              ; preds = %110, %103
  %114 = phi %5* [ %112, %110 ], [ %105, %103 ]
  %115 = getelementptr inbounds %5, %5* %114, i64 0, i32 1
  %116 = bitcast %7* %115 to i8*
  %117 = load i8, i8* %116, align 8
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %182, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %11, %11* %104, i64 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %11, %11* %104, i64 0, i32 2
  %123 = load %2*, %2** %122, align 8
  br i1 %91, label %170, label %124

124:                                              ; preds = %119
  %125 = load i64, i64* %5, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %144, label %127

127:                                              ; preds = %124
  %128 = icmp eq %2* %123, null
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  store i64 %121, i64* %97, align 8
  br label %141

130:                                              ; preds = %127
  store %2* %123, %2** %99, align 8
  %131 = getelementptr inbounds %2, %2* %123, i64 0, i32 0, i32 1
  %132 = bitcast %4* %131 to %63*
  %133 = getelementptr inbounds %63, %63* %132, i64 0, i32 1
  %134 = load i8, i8* %133, align 1
  %135 = and i8 %134, 2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %130
  %138 = getelementptr inbounds %2, %2* %123, i64 0, i32 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, 1
  store i32 %140, i32* %138, align 8
  br label %141

141:                                              ; preds = %130, %137, %129
  %142 = phi i32 [ 5126, %137 ], [ 4, %129 ], [ 6, %130 ]
  store i32 %142, i32* %98, align 8
  %143 = icmp eq i64 %125, 2
  br i1 %143, label %155, label %144

144:                                              ; preds = %124, %141
  %145 = bitcast %5* %114 to %61**
  %146 = load %61*, %61** %145, align 8
  %147 = getelementptr inbounds %5, %5* %114, i64 0, i32 1, i32 0
  %148 = load i32, i32* %147, align 8
  store %61* %146, %61** %93, align 16
  store i32 %148, i32* %94, align 8
  %149 = and i32 %148, 1024
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds %61, %61* %146, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  br label %155

155:                                              ; preds = %151, %144, %141
  store %5* %95, %5** %96, align 8
  %156 = call i32 @zend_call_function(%34* nonnull %6, %35* nonnull %7) #13
  %157 = icmp eq i32 %156, 0
  call void @_zval_ptr_dtor(%5* nonnull %95) #13
  %158 = load i64, i64* %5, align 8
  %159 = icmp eq i64 %158, 1
  br i1 %157, label %160, label %168

160:                                              ; preds = %155
  br i1 %159, label %161, label %162

161:                                              ; preds = %160
  call void @_zval_ptr_dtor(%5* nonnull %100) #13
  br label %162

162:                                              ; preds = %161, %160
  %163 = load i8, i8* %102, align 8
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %182, label %165

165:                                              ; preds = %162
  %166 = call i32 @zend_is_true(%5* nonnull %4) #13
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %182, label %173

168:                                              ; preds = %155
  br i1 %159, label %169, label %185

169:                                              ; preds = %168
  call void @_zval_ptr_dtor(%5* nonnull %100) #13
  br label %185

170:                                              ; preds = %119
  %171 = call i32 @zend_is_true(%5* %114) #13
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %182, label %173

173:                                              ; preds = %165, %170
  %174 = icmp eq %2* %123, null
  %175 = load %9*, %9** %92, align 8
  br i1 %174, label %178, label %176

176:                                              ; preds = %173
  %177 = call %5* @_zend_hash_update(%9* %175, %2* nonnull %123, %5* %114) #13
  br label %180

178:                                              ; preds = %173
  %179 = call %5* @_zend_hash_index_update(%9* %175, i64 %121, %5* %114) #13
  br label %180

180:                                              ; preds = %178, %176
  %181 = phi %5* [ %177, %176 ], [ %179, %178 ]
  call void @zval_add_ref(%5* %181) #13
  br label %182

182:                                              ; preds = %165, %170, %162, %113, %180
  %183 = getelementptr inbounds %11, %11* %104, i64 1
  %184 = icmp eq %11* %183, %88
  br i1 %184, label %185, label %103

185:                                              ; preds = %182, %80, %168, %169, %61, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  ret void
}

declare dso_local i32 @zend_is_true(%5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_map(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca %5, align 8
  %4 = alloca %34, align 8
  %5 = alloca %35, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %5, align 8
  %8 = alloca %5, align 8
  %9 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = bitcast %34* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%34* @empty_fcall_info to i8*), i64 56, i1 false)
  %11 = getelementptr inbounds %35, %35* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 getelementptr inbounds (%35, %35* @empty_fcall_info_cache, i64 0, i32 0), i64 40, i1 false)
  %12 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store i8* null, i8** %6, align 8
  %15 = icmp slt i32 %13, 2
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %13, i32 2, i32 -1) #13
  br label %37

17:                                               ; preds = %2
  %18 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %19 = getelementptr inbounds i8**, i8*** %18, i64 2
  %20 = bitcast i8*** %19 to %5*
  %21 = getelementptr inbounds i8**, i8*** %18, i64 3
  %22 = bitcast i8*** %21 to i8*
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = getelementptr inbounds %34, %34* %4, i64 0, i32 0
  store i64 0, i64* %26, align 8
  store i8 0, i8* %11, align 8
  store i8* null, i8** %6, align 8
  br label %38

27:                                               ; preds = %17
  %28 = call i32 @zend_fcall_info_init(%5* nonnull %20, i32 0, %34* nonnull %4, %35* nonnull %5, %2** null, i8** nonnull %6) #13
  %29 = icmp eq i32 %28, 0
  %30 = load i8*, i8** %6, align 8
  %31 = icmp ne i8* %30, null
  br i1 %29, label %32, label %34

32:                                               ; preds = %27
  br i1 %31, label %33, label %38

33:                                               ; preds = %32
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 8192, i32 1, i8* nonnull %30) #13
  br label %38

34:                                               ; preds = %27
  br i1 %31, label %35, label %36

35:                                               ; preds = %34
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 1, i8* nonnull %30) #13
  br label %37

36:                                               ; preds = %34
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 1, i32 4, %5* nonnull %20) #13
  br label %37

37:                                               ; preds = %16, %35, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %359

38:                                               ; preds = %32, %33, %25
  %39 = add i32 %13, -1
  %40 = getelementptr inbounds i8**, i8*** %18, i64 4
  %41 = bitcast i8*** %40 to %5*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %42 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %42, align 8
  %43 = icmp eq i32 %39, 1
  br i1 %43, label %44, label %178

44:                                               ; preds = %38
  %45 = bitcast %5* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #13
  %46 = getelementptr inbounds i8**, i8*** %18, i64 5
  %47 = bitcast i8*** %46 to i8*
  %48 = load i8, i8* %47, align 8
  %49 = icmp eq i8 %48, 7
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @54, i64 0, i64 0), i32 2) #13
  br label %177

51:                                               ; preds = %44
  %52 = bitcast i8*** %40 to %9**
  %53 = getelementptr inbounds %34, %34* %4, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = bitcast i8*** %40 to %61**
  %58 = load %61*, %61** %57, align 8
  %59 = bitcast i8*** %46 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = bitcast %5* %1 to %61**
  store %61* %58, %61** %61, align 8
  store i32 %60, i32* %42, align 8
  %62 = and i32 %60, 1024
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %177, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %61, %61* %58, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  br label %177

68:                                               ; preds = %51
  %69 = load %9*, %9** %52, align 8
  %70 = getelementptr inbounds %9, %9* %69, i64 0, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = call i32 @_array_init(%5* nonnull %1, i32 %71) #13
  %73 = load %9*, %9** %52, align 8
  %74 = getelementptr inbounds %9, %9* %73, i64 0, i32 3
  %75 = load %11*, %11** %74, align 8
  %76 = getelementptr inbounds %9, %9* %73, i64 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %11, %11* %75, i64 %78
  %80 = icmp eq i32 %77, 0
  br i1 %80, label %177, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %34, %34* %4, i64 0, i32 2
  %83 = getelementptr inbounds %34, %34* %4, i64 0, i32 6
  %84 = getelementptr inbounds %34, %34* %4, i64 0, i32 3
  %85 = getelementptr inbounds %34, %34* %4, i64 0, i32 5
  %86 = bitcast %5* %7 to %61**
  %87 = getelementptr inbounds %5, %5* %7, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %5, %5* %7, i64 0, i32 1
  %89 = bitcast %7* %88 to %60*
  %90 = getelementptr inbounds %60, %60* %89, i64 0, i32 1
  %91 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %92 = bitcast %7* %91 to i8*
  %93 = bitcast %5* %1 to %9**
  br label %94

94:                                               ; preds = %81, %174
  %95 = phi %11* [ %75, %81 ], [ %175, %174 ]
  %96 = getelementptr inbounds %11, %11* %95, i64 0, i32 0
  %97 = getelementptr inbounds %11, %11* %95, i64 0, i32 0, i32 1
  %98 = bitcast %7* %97 to i8*
  %99 = load i8, i8* %98, align 8
  %100 = icmp eq i8 %99, 15
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = bitcast %11* %95 to %5**
  %103 = load %5*, %5** %102, align 8
  br label %104

104:                                              ; preds = %101, %94
  %105 = phi %5* [ %103, %101 ], [ %96, %94 ]
  %106 = getelementptr inbounds %5, %5* %105, i64 0, i32 1
  %107 = bitcast %7* %106 to i8*
  %108 = load i8, i8* %107, align 8
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %174, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %11, %11* %95, i64 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %11, %11* %95, i64 0, i32 2
  %114 = load %2*, %2** %113, align 8
  store %5* %3, %5** %82, align 8
  store i32 1, i32* %83, align 4
  store %5* %7, %5** %84, align 8
  store i8 0, i8* %85, align 8
  %115 = bitcast %5* %105 to %61**
  %116 = load %61*, %61** %115, align 8
  %117 = getelementptr inbounds %5, %5* %105, i64 0, i32 1, i32 0
  %118 = load i32, i32* %117, align 8
  store %61* %116, %61** %86, align 8
  store i32 %118, i32* %87, align 8
  %119 = and i32 %118, 1024
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %110
  %122 = getelementptr inbounds %61, %61* %116, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %122, align 4
  br label %125

125:                                              ; preds = %110, %121
  %126 = call i32 @zend_call_function(%34* nonnull %4, %35* nonnull %5) #13
  %127 = load i8, i8* %90, align 1
  %128 = and i8 %127, 4
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %160, label %130

130:                                              ; preds = %125
  %131 = load %61*, %61** %86, align 8
  %132 = getelementptr inbounds %61, %61* %131, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, -1
  store i32 %134, i32* %132, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %130
  call void @_zval_dtor_func(%61* %131) #13
  br label %160

137:                                              ; preds = %130
  %138 = getelementptr inbounds %61, %61* %131, i64 0, i32 0, i32 1
  %139 = bitcast %4* %138 to i8*
  %140 = load i8, i8* %139, align 4
  %141 = icmp eq i8 %140, 10
  br i1 %141, label %142, label %153

142:                                              ; preds = %137
  %143 = getelementptr inbounds %61, %61* %131, i64 2
  %144 = bitcast %61* %143 to %60*
  %145 = getelementptr inbounds %60, %60* %144, i64 0, i32 1
  %146 = load i8, i8* %145, align 1
  %147 = and i8 %146, 4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %61, %61* %131, i64 1
  %151 = bitcast %61* %150 to %61**
  %152 = load %61*, %61** %151, align 8
  br label %153

153:                                              ; preds = %149, %137
  %154 = phi %61* [ %131, %137 ], [ %152, %149 ]
  %155 = getelementptr inbounds %61, %61* %154, i64 0, i32 0, i32 1, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %156, -32768
  %158 = icmp eq i32 %157, 32768
  br i1 %158, label %159, label %160

159:                                              ; preds = %153
  call void @gc_possible_root(%61* %154) #13
  br label %160

160:                                              ; preds = %125, %136, %142, %153, %159
  %161 = icmp ne i32 %126, 0
  %162 = load i8, i8* %92, align 8
  %163 = icmp eq i8 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %172, label %165

165:                                              ; preds = %160
  %166 = icmp eq %2* %114, null
  %167 = load %9*, %9** %93, align 8
  br i1 %166, label %170, label %168

168:                                              ; preds = %165
  %169 = call %5* @_zend_hash_add_new(%9* %167, %2* nonnull %114, %5* nonnull %3) #13
  br label %174

170:                                              ; preds = %165
  %171 = call %5* @_zend_hash_index_add_new(%9* %167, i64 %112, %5* nonnull %3) #13
  br label %174

172:                                              ; preds = %160
  %173 = load %9*, %9** %93, align 8
  call void @zend_array_destroy(%9* %173) #13
  store i32 1, i32* %42, align 8
  br label %177

174:                                              ; preds = %104, %170, %168
  %175 = getelementptr inbounds %11, %11* %95, i64 1
  %176 = icmp eq %11* %175, %79
  br i1 %176, label %177, label %94

177:                                              ; preds = %174, %68, %172, %64, %56, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13
  br label %359

178:                                              ; preds = %38
  %179 = sext i32 %39 to i64
  %180 = call noalias i8* @_ecalloc(i64 %179, i64 4) #17
  %181 = bitcast i8* %180 to i32*
  br label %182

182:                                              ; preds = %178, %192
  %183 = phi i64 [ 0, %178 ], [ %200, %192 ]
  %184 = phi i32 [ 0, %178 ], [ %199, %192 ]
  %185 = getelementptr inbounds %5, %5* %41, i64 %183, i32 1
  %186 = bitcast %7* %185 to i8*
  %187 = load i8, i8* %186, align 8
  %188 = icmp eq i8 %187, 7
  br i1 %188, label %192, label %189

189:                                              ; preds = %182
  %190 = trunc i64 %183 to i32
  %191 = add nuw nsw i32 %190, 2
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @54, i64 0, i64 0), i32 %191) #13
  call void @_efree(i8* %180) #13
  br label %359

192:                                              ; preds = %182
  %193 = getelementptr inbounds %5, %5* %41, i64 %183
  %194 = bitcast %5* %193 to %9**
  %195 = load %9*, %9** %194, align 8
  %196 = getelementptr inbounds %9, %9* %195, i64 0, i32 5
  %197 = load i32, i32* %196, align 4
  %198 = icmp ugt i32 %197, %184
  %199 = select i1 %198, i32 %197, i32 %184
  %200 = add nuw nsw i64 %183, 1
  %201 = icmp slt i64 %200, %179
  br i1 %201, label %182, label %202

202:                                              ; preds = %192
  %203 = call i32 @_array_init(%5* %1, i32 %199) #13
  %204 = getelementptr inbounds %34, %34* %4, i64 0, i32 0
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %269

207:                                              ; preds = %202
  %208 = bitcast %5* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #13
  %209 = icmp eq i32 %199, 0
  br i1 %209, label %268, label %210

210:                                              ; preds = %207
  %211 = bitcast %5* %1 to %9**
  %212 = getelementptr inbounds %5, %5* %8, i64 0, i32 1, i32 0
  %213 = bitcast %5* %3 to %9**
  %214 = bitcast %5* %8 to %61**
  %215 = zext i32 %39 to i64
  br label %216

216:                                              ; preds = %210, %263
  %217 = phi i32 [ 0, %210 ], [ %266, %263 ]
  %218 = call i32 @_array_init(%5* nonnull %3, i32 %39) #13
  br label %219

219:                                              ; preds = %258, %216
  %220 = phi i64 [ 0, %216 ], [ %261, %258 ]
  %221 = getelementptr inbounds i32, i32* %181, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %5, %5* %41, i64 %220, i32 0
  %224 = bitcast %6* %223 to %9**
  %225 = load %9*, %9** %224, align 8
  %226 = getelementptr inbounds %9, %9* %225, i64 0, i32 4
  %227 = load i32, i32* %226, align 8
  %228 = icmp ult i32 %222, %227
  br i1 %228, label %229, label %232

229:                                              ; preds = %219
  %230 = getelementptr inbounds %9, %9* %225, i64 0, i32 3
  %231 = load %11*, %11** %230, align 8
  br label %233

232:                                              ; preds = %255, %219
  store i32 1, i32* %212, align 8
  br label %258

233:                                              ; preds = %229, %255
  %234 = phi i32 [ %256, %255 ], [ %222, %229 ]
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %11, %11* %231, i64 %235, i32 0, i32 1
  %237 = bitcast %7* %236 to i8*
  %238 = load i8, i8* %237, align 8
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %255, label %240

240:                                              ; preds = %233
  %241 = zext i32 %234 to i64
  %242 = getelementptr inbounds %11, %11* %231, i64 %241, i32 0
  %243 = bitcast %5* %242 to %61**
  %244 = load %61*, %61** %243, align 8
  %245 = getelementptr inbounds %11, %11* %231, i64 %241, i32 0, i32 1, i32 0
  %246 = load i32, i32* %245, align 8
  store %61* %244, %61** %214, align 8
  store i32 %246, i32* %212, align 8
  %247 = and i32 %246, 1024
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %253, label %249

249:                                              ; preds = %240
  %250 = getelementptr inbounds %61, %61* %244, i64 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %251, 1
  store i32 %252, i32* %250, align 4
  br label %253

253:                                              ; preds = %240, %249
  %254 = add i32 %234, 1
  store i32 %254, i32* %221, align 4
  br label %258

255:                                              ; preds = %233
  %256 = add i32 %234, 1
  %257 = icmp ult i32 %256, %227
  br i1 %257, label %233, label %232

258:                                              ; preds = %253, %232
  %259 = load %9*, %9** %213, align 8
  %260 = call %5* @_zend_hash_next_index_insert_new(%9* %259, %5* nonnull %8) #13
  %261 = add nuw nsw i64 %220, 1
  %262 = icmp eq i64 %261, %215
  br i1 %262, label %263, label %219

263:                                              ; preds = %258
  %264 = load %9*, %9** %211, align 8
  %265 = call %5* @_zend_hash_next_index_insert_new(%9* %264, %5* nonnull %3) #13
  %266 = add nuw i32 %217, 1
  %267 = icmp eq i32 %266, %199
  br i1 %267, label %268, label %216

268:                                              ; preds = %263, %207
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #13
  br label %358

269:                                              ; preds = %202
  %270 = call noalias i8* @_safe_emalloc(i64 %179, i64 16, i64 0) #13
  %271 = bitcast i8* %270 to %5*
  %272 = icmp eq i32 %199, 0
  br i1 %272, label %356, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %34, %34* %4, i64 0, i32 2
  %275 = getelementptr inbounds %34, %34* %4, i64 0, i32 6
  %276 = getelementptr inbounds %34, %34* %4, i64 0, i32 3
  %277 = bitcast %5** %276 to i8**
  %278 = getelementptr inbounds %34, %34* %4, i64 0, i32 5
  %279 = getelementptr inbounds %5, %5* %3, i64 0, i32 1
  %280 = bitcast %7* %279 to i8*
  %281 = bitcast %5* %1 to %9**
  %282 = zext i32 %39 to i64
  %283 = zext i32 %39 to i64
  br label %284

284:                                              ; preds = %351, %273
  %285 = phi i32 [ 0, %273 ], [ %354, %351 ]
  br label %286

286:                                              ; preds = %329, %284
  %287 = phi i64 [ 0, %284 ], [ %330, %329 ]
  %288 = getelementptr inbounds i32, i32* %181, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %5, %5* %41, i64 %287, i32 0
  %291 = bitcast %6* %290 to %9**
  %292 = load %9*, %9** %291, align 8
  %293 = getelementptr inbounds %9, %9* %292, i64 0, i32 4
  %294 = load i32, i32* %293, align 8
  %295 = icmp ult i32 %289, %294
  br i1 %295, label %296, label %299

296:                                              ; preds = %286
  %297 = getelementptr inbounds %9, %9* %292, i64 0, i32 3
  %298 = load %11*, %11** %297, align 8
  br label %301

299:                                              ; preds = %326, %286
  %300 = getelementptr inbounds %5, %5* %271, i64 %287, i32 1, i32 0
  store i32 1, i32* %300, align 8
  br label %329

301:                                              ; preds = %296, %326
  %302 = phi i32 [ %327, %326 ], [ %289, %296 ]
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds %11, %11* %298, i64 %303, i32 0, i32 1
  %305 = bitcast %7* %304 to i8*
  %306 = load i8, i8* %305, align 8
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %326, label %308

308:                                              ; preds = %301
  %309 = zext i32 %302 to i64
  %310 = getelementptr inbounds %11, %11* %298, i64 %309, i32 0
  %311 = getelementptr inbounds %5, %5* %271, i64 %287
  %312 = bitcast %5* %310 to %61**
  %313 = load %61*, %61** %312, align 8
  %314 = getelementptr inbounds %11, %11* %298, i64 %309, i32 0, i32 1, i32 0
  %315 = load i32, i32* %314, align 8
  %316 = bitcast %5* %311 to %61**
  store %61* %313, %61** %316, align 8
  %317 = getelementptr inbounds %5, %5* %271, i64 %287, i32 1, i32 0
  store i32 %315, i32* %317, align 8
  %318 = and i32 %315, 1024
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %324, label %320

320:                                              ; preds = %308
  %321 = getelementptr inbounds %61, %61* %313, i64 0, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = add i32 %322, 1
  store i32 %323, i32* %321, align 4
  br label %324

324:                                              ; preds = %308, %320
  %325 = add i32 %302, 1
  store i32 %325, i32* %288, align 4
  br label %329

326:                                              ; preds = %301
  %327 = add i32 %302, 1
  %328 = icmp ult i32 %327, %294
  br i1 %328, label %301, label %299

329:                                              ; preds = %324, %299
  %330 = add nuw nsw i64 %287, 1
  %331 = icmp eq i64 %330, %282
  br i1 %331, label %332, label %286

332:                                              ; preds = %329
  store %5* %3, %5** %274, align 8
  store i32 %39, i32* %275, align 4
  store i8* %270, i8** %277, align 8
  store i8 0, i8* %278, align 8
  %333 = call i32 @zend_call_function(%34* nonnull %4, %35* nonnull %5) #13
  %334 = icmp ne i32 %333, 0
  %335 = load i8, i8* %280, align 8
  %336 = icmp eq i8 %335, 0
  %337 = or i1 %334, %336
  br i1 %337, label %338, label %346

338:                                              ; preds = %332
  call void @_efree(i8* %180) #13
  %339 = load %9*, %9** %281, align 8
  call void @zend_array_destroy(%9* %339) #13
  %340 = zext i32 %39 to i64
  br label %341

341:                                              ; preds = %341, %338
  %342 = phi i64 [ 0, %338 ], [ %344, %341 ]
  %343 = getelementptr inbounds %5, %5* %271, i64 %342
  call void @_zval_ptr_dtor(%5* %343) #13
  %344 = add nuw nsw i64 %342, 1
  %345 = icmp eq i64 %344, %340
  br i1 %345, label %357, label %341

346:                                              ; preds = %332, %346
  %347 = phi i64 [ %349, %346 ], [ 0, %332 ]
  %348 = getelementptr inbounds %5, %5* %271, i64 %347
  call void @_zval_ptr_dtor(%5* %348) #13
  %349 = add nuw nsw i64 %347, 1
  %350 = icmp eq i64 %349, %283
  br i1 %350, label %351, label %346

351:                                              ; preds = %346
  %352 = load %9*, %9** %281, align 8
  %353 = call %5* @_zend_hash_next_index_insert_new(%9* %352, %5* nonnull %3) #13
  %354 = add nuw i32 %285, 1
  %355 = icmp ult i32 %354, %199
  br i1 %355, label %284, label %356

356:                                              ; preds = %351, %269
  call void @_efree(i8* %270) #13
  br label %358

357:                                              ; preds = %341
  call void @_efree(i8* %270) #13
  store i32 1, i32* %42, align 8
  br label %359

358:                                              ; preds = %356, %268
  call void @_efree(i8* %180) #13
  br label %359

359:                                              ; preds = %357, %189, %358, %177, %37
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret void
}

declare dso_local void @zend_array_destroy(%9*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_key_exists(%24* %0, %5* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 2, i32 2) #13
  br label %121

8:                                                ; preds = %2
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = getelementptr inbounds i8**, i8*** %9, i64 4
  %12 = bitcast i8*** %11 to %5*
  %13 = getelementptr inbounds i8**, i8*** %9, i64 5
  %14 = bitcast i8*** %13 to i8*
  %15 = load i8, i8* %14, align 8
  switch i8 %15, label %27 [
    i8 7, label %16
    i8 8, label %19
  ]

16:                                               ; preds = %8
  %17 = bitcast i8*** %11 to %9**
  %18 = load %9*, %9** %17, align 8
  br label %28

19:                                               ; preds = %8
  %20 = bitcast i8*** %11 to %22**
  %21 = load %22*, %22** %20, align 8
  %22 = getelementptr inbounds %22, %22* %21, i64 0, i32 3
  %23 = load %23*, %23** %22, align 8
  %24 = getelementptr inbounds %23, %23* %23, i64 0, i32 15
  %25 = load %9* (%5*)*, %9* (%5*)** %24, align 8
  %26 = tail call %9* %25(%5* nonnull %12) #13
  br label %28

27:                                               ; preds = %8
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 2, i32 3, %5* nonnull %12) #13
  br label %121

28:                                               ; preds = %19, %16
  %29 = phi %9* [ %18, %16 ], [ %26, %19 ]
  %30 = getelementptr inbounds i8**, i8*** %9, i64 3
  %31 = bitcast i8*** %30 to i8*
  %32 = load i8, i8* %31, align 8
  switch i8 %32, label %119 [
    i8 6, label %33
    i8 4, label %86
    i8 1, label %94
  ]

33:                                               ; preds = %28
  %34 = bitcast i8*** %10 to %2**
  %35 = load %2*, %2** %34, align 8
  %36 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  %37 = getelementptr inbounds %2, %2* %35, i64 0, i32 3, i64 0
  %38 = getelementptr inbounds %2, %2* %35, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = load i8, i8* %37, align 1
  %41 = icmp sgt i8 %40, 57
  br i1 %41, label %58, label %42

42:                                               ; preds = %33
  %43 = icmp slt i8 %40, 48
  br i1 %43, label %44, label %51

44:                                               ; preds = %42
  %45 = icmp eq i8 %40, 45
  br i1 %45, label %46, label %58

46:                                               ; preds = %44
  %47 = getelementptr inbounds %2, %2* %35, i64 0, i32 3, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = add i8 %48, -48
  %50 = icmp ugt i8 %49, 9
  br i1 %50, label %58, label %51

51:                                               ; preds = %46, %42
  %52 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %37, i64 %39, i64* nonnull %3) #13
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %51
  %55 = load i64, i64* %3, align 8
  %56 = call zeroext i8 @zend_hash_index_exists(%9* %29, i64 %55) #13
  %57 = zext i8 %56 to i32
  br label %78

58:                                               ; preds = %51, %46, %44, %33
  %59 = call %5* @zend_hash_find(%9* %29, %2* nonnull %35) #13
  %60 = icmp eq %5* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %62 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br label %84

63:                                               ; preds = %58
  %64 = getelementptr inbounds %5, %5* %59, i64 0, i32 1
  %65 = bitcast %7* %64 to i8*
  %66 = load i8, i8* %65, align 8
  %67 = icmp eq i8 %66, 15
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %69 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br label %82

70:                                               ; preds = %63
  %71 = bitcast %5* %59 to %5**
  %72 = load %5*, %5** %71, align 8
  %73 = getelementptr inbounds %5, %5* %72, i64 0, i32 1
  %74 = bitcast %7* %73 to i8*
  %75 = load i8, i8* %74, align 8
  %76 = icmp ne i8 %75, 0
  %77 = zext i1 %76 to i32
  br label %78

78:                                               ; preds = %54, %70
  %79 = phi i32 [ %57, %54 ], [ %77, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %80, label %84, label %82

82:                                               ; preds = %68, %78
  %83 = phi i32* [ %69, %68 ], [ %81, %78 ]
  store i32 3, i32* %83, align 8
  br label %121

84:                                               ; preds = %61, %78
  %85 = phi i32* [ %62, %61 ], [ %81, %78 ]
  store i32 2, i32* %85, align 8
  br label %121

86:                                               ; preds = %28
  %87 = bitcast i8*** %10 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = tail call zeroext i8 @zend_hash_index_exists(%9* %29, i64 %88) #13
  %90 = icmp eq i8 %89, 0
  %91 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %90, label %93, label %92

92:                                               ; preds = %86
  store i32 3, i32* %91, align 8
  br label %121

93:                                               ; preds = %86
  store i32 2, i32* %91, align 8
  br label %121

94:                                               ; preds = %28
  %95 = load %2*, %2** @zend_empty_string, align 8
  %96 = tail call %5* @zend_hash_find(%9* %29, %2* %95) #13
  %97 = icmp eq %5* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br label %117

100:                                              ; preds = %94
  %101 = getelementptr inbounds %5, %5* %96, i64 0, i32 1
  %102 = bitcast %7* %101 to i8*
  %103 = load i8, i8* %102, align 8
  %104 = icmp eq i8 %103, 15
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br label %115

107:                                              ; preds = %100
  %108 = bitcast %5* %96 to %5**
  %109 = load %5*, %5** %108, align 8
  %110 = getelementptr inbounds %5, %5* %109, i64 0, i32 1
  %111 = bitcast %7* %110 to i8*
  %112 = load i8, i8* %111, align 8
  %113 = icmp eq i8 %112, 0
  %114 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  br i1 %113, label %117, label %115

115:                                              ; preds = %105, %107
  %116 = phi i32* [ %106, %105 ], [ %114, %107 ]
  store i32 3, i32* %116, align 8
  br label %121

117:                                              ; preds = %98, %107
  %118 = phi i32* [ %99, %98 ], [ %114, %107 ]
  store i32 2, i32* %118, align 8
  br label %121

119:                                              ; preds = %28
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @55, i64 0, i64 0)) #13
  %120 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %120, align 8
  br label %121

121:                                              ; preds = %7, %27, %119, %117, %115, %93, %92, %84, %82
  ret void
}

declare dso_local zeroext i8 @zend_hash_index_exists(%9*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zif_array_chunk(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8, align 1
  %5 = alloca %5, align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 0, i8* %4, align 1
  %7 = bitcast %5* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %9, i32 2, i32 3) #13
  br label %137

13:                                               ; preds = %2
  %14 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %15 = getelementptr inbounds i8**, i8*** %14, i64 2
  %16 = bitcast i8*** %15 to %5*
  %17 = getelementptr inbounds i8**, i8*** %14, i64 3
  %18 = bitcast i8*** %17 to i8*
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 7
  br i1 %20, label %21, label %48

21:                                               ; preds = %13
  %22 = getelementptr inbounds i8**, i8*** %14, i64 4
  %23 = bitcast i8*** %22 to %5*
  %24 = getelementptr inbounds i8**, i8*** %14, i64 5
  %25 = bitcast i8*** %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 4
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = bitcast i8*** %22 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %3, align 8
  br label %34

31:                                               ; preds = %21
  %32 = call i32 @zend_parse_arg_long_slow(%5* nonnull %23, i64* nonnull %3) #13
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %28, %31
  %35 = icmp slt i32 %9, 3
  br i1 %35, label %52, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds i8**, i8*** %14, i64 6
  %38 = bitcast i8*** %37 to %5*
  %39 = getelementptr inbounds i8**, i8*** %14, i64 7
  %40 = bitcast i8*** %39 to i8*
  %41 = load i8, i8* %40, align 8
  switch i8 %41, label %45 [
    i8 3, label %43
    i8 2, label %42
  ]

42:                                               ; preds = %36
  br label %43

43:                                               ; preds = %36, %42
  %44 = phi i8 [ 1, %36 ], [ 0, %42 ]
  store i8 %44, i8* %4, align 1
  br label %52

45:                                               ; preds = %36
  %46 = call i32 @zend_parse_arg_bool_slow(%5* nonnull %38, i8* nonnull %4) #13
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %45, %13, %31
  %49 = phi i32 [ 3, %45 ], [ 2, %31 ], [ 1, %13 ]
  %50 = phi i32 [ 1, %45 ], [ 0, %31 ], [ 3, %13 ]
  %51 = phi %5* [ %38, %45 ], [ %23, %31 ], [ %16, %13 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %49, i32 %50, %5* %51) #13
  br label %137

52:                                               ; preds = %45, %34, %43
  %53 = load i64, i64* %3, align 8
  %54 = icmp slt i64 %53, 1
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @56, i64 0, i64 0)) #13
  br label %137

56:                                               ; preds = %52
  %57 = bitcast i8*** %15 to %9**
  %58 = load %9*, %9** %57, align 8
  %59 = getelementptr inbounds %9, %9* %58, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = icmp sgt i64 %53, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %56
  %64 = icmp sgt i32 %60, 1
  %65 = select i1 %64, i32 %60, i32 1
  %66 = zext i32 %65 to i64
  store i64 %66, i64* %3, align 8
  br label %67

67:                                               ; preds = %63, %56
  %68 = phi i64 [ %66, %63 ], [ %53, %56 ]
  %69 = add nsw i32 %60, -1
  %70 = sext i32 %69 to i64
  %71 = sdiv i64 %70, %68
  %72 = trunc i64 %71 to i32
  %73 = add i32 %72, 1
  %74 = call i32 @_array_init(%5* %1, i32 %73) #13
  %75 = getelementptr inbounds %5, %5* %5, i64 0, i32 1, i32 0
  store i32 0, i32* %75, align 8
  %76 = load %9*, %9** %57, align 8
  %77 = getelementptr inbounds %9, %9* %76, i64 0, i32 3
  %78 = load %11*, %11** %77, align 8
  %79 = getelementptr inbounds %9, %9* %76, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %11, %11* %78, i64 %81
  %83 = icmp eq i32 %80, 0
  br i1 %83, label %137, label %84

84:                                               ; preds = %67
  %85 = getelementptr inbounds %5, %5* %5, i64 0, i32 1
  %86 = bitcast %7* %85 to i8*
  %87 = bitcast %5* %5 to %9**
  br label %88

88:                                               ; preds = %84, %128
  %89 = phi i64 [ 0, %84 ], [ %129, %128 ]
  %90 = phi %11* [ %78, %84 ], [ %130, %128 ]
  %91 = getelementptr inbounds %11, %11* %90, i64 0, i32 0
  %92 = getelementptr inbounds %11, %11* %90, i64 0, i32 0, i32 1
  %93 = bitcast %7* %92 to i8*
  %94 = load i8, i8* %93, align 8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %128, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %11, %11* %90, i64 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %11, %11* %90, i64 0, i32 2
  %100 = load %2*, %2** %99, align 8
  %101 = load i8, i8* %86, align 8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %96
  %104 = load i64, i64* %3, align 8
  %105 = trunc i64 %104 to i32
  %106 = call i32 @_array_init(%5* nonnull %5, i32 %105) #13
  br label %107

107:                                              ; preds = %103, %96
  %108 = load i8, i8* %4, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %107
  %111 = icmp eq %2* %100, null
  %112 = load %9*, %9** %87, align 8
  br i1 %111, label %115, label %113

113:                                              ; preds = %110
  %114 = call %5* @_zend_hash_update(%9* %112, %2* nonnull %100, %5* nonnull %91) #13
  br label %120

115:                                              ; preds = %110
  %116 = call %5* @_zend_hash_index_update(%9* %112, i64 %98, %5* nonnull %91) #13
  br label %120

117:                                              ; preds = %107
  %118 = load %9*, %9** %87, align 8
  %119 = call %5* @_zend_hash_next_index_insert(%9* %118, %5* nonnull %91) #13
  br label %120

120:                                              ; preds = %113, %115, %117
  %121 = phi %5* [ %114, %113 ], [ %116, %115 ], [ %119, %117 ]
  call void @zval_add_ref(%5* %121) #13
  %122 = add nsw i64 %89, 1
  %123 = load i64, i64* %3, align 8
  %124 = srem i64 %122, %123
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = call i32 @add_next_index_zval(%5* %1, %5* nonnull %5) #13
  store i32 0, i32* %75, align 8
  br label %128

128:                                              ; preds = %126, %120, %88
  %129 = phi i64 [ %89, %88 ], [ %122, %120 ], [ %122, %126 ]
  %130 = getelementptr inbounds %11, %11* %90, i64 1
  %131 = icmp eq %11* %130, %82
  br i1 %131, label %132, label %88

132:                                              ; preds = %128
  %133 = load i8, i8* %86, align 8
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = call i32 @add_next_index_zval(%5* %1, %5* nonnull %5) #13
  br label %137

137:                                              ; preds = %67, %12, %135, %132, %48, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_array_combine(%24* %0, %5* %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %24, %24* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %5, i32 2, i32 2) #13
  br label %150

8:                                                ; preds = %2
  %9 = getelementptr inbounds %24, %24* %0, i64 0, i32 7
  %10 = getelementptr inbounds i8**, i8*** %9, i64 2
  %11 = getelementptr inbounds i8**, i8*** %9, i64 3
  %12 = bitcast i8*** %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 7
  br i1 %14, label %15, label %23

15:                                               ; preds = %8
  %16 = bitcast i8*** %10 to %9**
  %17 = load %9*, %9** %16, align 8
  %18 = getelementptr inbounds i8**, i8*** %9, i64 4
  %19 = getelementptr inbounds i8**, i8*** %9, i64 5
  %20 = bitcast i8*** %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 7
  br i1 %22, label %27, label %23

23:                                               ; preds = %8, %15
  %24 = phi i32 [ 2, %15 ], [ 1, %8 ]
  %25 = phi i8*** [ %18, %15 ], [ %10, %8 ]
  %26 = bitcast i8*** %25 to %5*
  tail call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %24, i32 3, %5* %26) #13
  br label %150

27:                                               ; preds = %15
  %28 = bitcast i8*** %18 to %9**
  %29 = load %9*, %9** %28, align 8
  %30 = getelementptr inbounds %9, %9* %17, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %9, %9* %29, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @57, i64 0, i64 0)) #13
  %36 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %36, align 8
  br label %150

37:                                               ; preds = %27
  %38 = tail call i32 @_array_init(%5* %1, i32 %31) #13
  %39 = icmp eq i32 %31, 0
  br i1 %39, label %150, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %9, %9* %17, i64 0, i32 3
  %42 = load %11*, %11** %41, align 8
  %43 = getelementptr inbounds %9, %9* %17, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %11, %11* %42, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %150, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %9, %9* %29, i64 0, i32 4
  %50 = getelementptr inbounds %9, %9* %29, i64 0, i32 3
  %51 = bitcast %5* %1 to %9**
  %52 = bitcast i64* %3 to i8*
  br label %53

53:                                               ; preds = %48, %146
  %54 = phi i32 [ 0, %48 ], [ %147, %146 ]
  %55 = phi %11* [ %42, %48 ], [ %148, %146 ]
  %56 = getelementptr inbounds %11, %11* %55, i64 0, i32 0
  %57 = getelementptr inbounds %11, %11* %55, i64 0, i32 0, i32 1
  %58 = bitcast %7* %57 to i8*
  %59 = load i8, i8* %58, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %146, label %61

61:                                               ; preds = %53
  %62 = load i32, i32* %49, align 8
  %63 = icmp ult i32 %54, %62
  br i1 %63, label %64, label %146

64:                                               ; preds = %61
  %65 = load %11*, %11** %50, align 8
  br label %66

66:                                               ; preds = %64, %143
  %67 = phi i32 [ %54, %64 ], [ %144, %143 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %11, %11* %65, i64 %68, i32 0, i32 1
  %70 = bitcast %7* %69 to i8*
  %71 = load i8, i8* %70, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %143, label %73

73:                                               ; preds = %66
  %74 = zext i32 %67 to i64
  %75 = getelementptr inbounds %11, %11* %65, i64 %74, i32 0
  switch i8 %59, label %94 [
    i8 4, label %76
    i8 6, label %81
  ]

76:                                               ; preds = %73
  %77 = load %9*, %9** %51, align 8
  %78 = getelementptr inbounds %11, %11* %55, i64 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = call %5* @_zend_hash_index_update(%9* %77, i64 %79, %5* %75) #13
  br label %140

81:                                               ; preds = %73
  %82 = bitcast %11* %55 to %2**
  %83 = load %2*, %2** %82, align 8
  %84 = getelementptr inbounds %2, %2* %83, i64 0, i32 0, i32 1
  %85 = bitcast %4* %84 to %63*
  %86 = getelementptr inbounds %63, %63* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, 2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %81
  %91 = getelementptr inbounds %2, %2* %83, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 8
  br label %96

94:                                               ; preds = %73
  %95 = call %2* @_zval_get_string_func(%5* nonnull %56) #13
  br label %96

96:                                               ; preds = %81, %90, %94
  %97 = phi %2* [ %95, %94 ], [ %83, %81 ], [ %83, %90 ]
  %98 = load %9*, %9** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %99 = getelementptr inbounds %2, %2* %97, i64 0, i32 3, i64 0
  %100 = getelementptr inbounds %2, %2* %97, i64 0, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = load i8, i8* %99, align 1
  %103 = icmp sgt i8 %102, 57
  br i1 %103, label %119, label %104

104:                                              ; preds = %96
  %105 = icmp slt i8 %102, 48
  br i1 %105, label %106, label %113

106:                                              ; preds = %104
  %107 = icmp eq i8 %102, 45
  br i1 %107, label %108, label %119

108:                                              ; preds = %106
  %109 = getelementptr inbounds %2, %2* %97, i64 0, i32 3, i64 1
  %110 = load i8, i8* %109, align 1
  %111 = add i8 %110, -48
  %112 = icmp ugt i8 %111, 9
  br i1 %112, label %119, label %113

113:                                              ; preds = %108, %104
  %114 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %99, i64 %101, i64* nonnull %3) #13
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = load i64, i64* %3, align 8
  %118 = call %5* @_zend_hash_index_update(%9* %98, i64 %117, %5* %75) #13
  br label %121

119:                                              ; preds = %113, %108, %106, %96
  %120 = call %5* @_zend_hash_update(%9* %98, %2* nonnull %97, %5* %75) #13
  br label %121

121:                                              ; preds = %116, %119
  %122 = phi %5* [ %118, %116 ], [ %120, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  %123 = getelementptr inbounds %2, %2* %97, i64 0, i32 0, i32 1
  %124 = bitcast %4* %123 to %63*
  %125 = getelementptr inbounds %63, %63* %124, i64 0, i32 1
  %126 = load i8, i8* %125, align 1
  %127 = and i8 %126, 2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %140

129:                                              ; preds = %121
  %130 = getelementptr inbounds %2, %2* %97, i64 0, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = add i32 %131, -1
  store i32 %132, i32* %130, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = and i8 %126, 1
  %136 = icmp eq i8 %135, 0
  %137 = bitcast %2* %97 to i8*
  br i1 %136, label %139, label %138

138:                                              ; preds = %134
  call void @free(i8* %137) #13
  br label %140

139:                                              ; preds = %134
  call void @_efree(i8* %137) #13
  br label %140

140:                                              ; preds = %139, %138, %129, %121, %76
  %141 = phi %5* [ %80, %76 ], [ %122, %121 ], [ %122, %129 ], [ %122, %138 ], [ %122, %139 ]
  call void @zval_add_ref(%5* %141) #13
  %142 = add i32 %67, 1
  br label %146

143:                                              ; preds = %66
  %144 = add i32 %67, 1
  %145 = icmp ult i32 %144, %62
  br i1 %145, label %66, label %146

146:                                              ; preds = %143, %61, %140, %53
  %147 = phi i32 [ %54, %53 ], [ %142, %140 ], [ %54, %61 ], [ %144, %143 ]
  %148 = getelementptr inbounds %11, %11* %55, i64 1
  %149 = icmp eq %11* %148, %46
  br i1 %149, label %150, label %53

150:                                              ; preds = %146, %40, %7, %37, %23, %35
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

declare dso_local i32 @zend_parse_arg_long_slow(%5*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @88(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to %2**
  %5 = load %2*, %2** %4, align 8
  %6 = icmp eq %2* %5, null
  br i1 %6, label %7, label %23

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %0, i64 24
  %9 = bitcast i8* %8 to %2**
  %10 = load %2*, %2** %9, align 8
  %11 = icmp eq %2* %10, null
  %12 = getelementptr inbounds i8, i8* %1, i64 16
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  br i1 %11, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds i8, i8* %0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %14, %18
  %20 = select i1 %19, i32 1, i32 -1
  br label %48

21:                                               ; preds = %7
  %22 = sitofp i64 %14 to double
  br label %30

23:                                               ; preds = %2
  %24 = getelementptr inbounds %2, %2* %5, i64 0, i32 3, i64 0
  %25 = tail call double @zend_strtod(i8* nonnull %24, i8** null) #13
  %26 = getelementptr inbounds i8, i8* %0, i64 24
  %27 = bitcast i8* %26 to %2**
  %28 = load %2*, %2** %27, align 8
  %29 = icmp eq %2* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %23, %21
  %31 = phi double [ %22, %21 ], [ %25, %23 ]
  %32 = phi %2* [ %10, %21 ], [ %28, %23 ]
  %33 = getelementptr inbounds %2, %2* %32, i64 0, i32 3, i64 0
  %34 = tail call double @zend_strtod(i8* nonnull %33, i8** null) #13
  br label %40

35:                                               ; preds = %23
  %36 = getelementptr inbounds i8, i8* %0, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sitofp i64 %38 to double
  br label %40

40:                                               ; preds = %35, %30
  %41 = phi double [ %31, %30 ], [ %25, %35 ]
  %42 = phi double [ %34, %30 ], [ %39, %35 ]
  %43 = fsub double %41, %42
  %44 = fcmp une double %43, 0.000000e+00
  %45 = fcmp olt double %43, 0.000000e+00
  %46 = select i1 %45, i32 -1, i32 1
  %47 = select i1 %44, i32 %46, i32 0
  br label %48

48:                                               ; preds = %15, %40
  %49 = phi i32 [ %20, %15 ], [ %47, %40 ]
  ret i32 %49
}

; Function Attrs: nounwind uwtable
define internal i32 @89(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to %2**
  %5 = load %2*, %2** %4, align 8
  %6 = icmp eq %2* %5, null
  br i1 %6, label %7, label %23

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %1, i64 24
  %9 = bitcast i8* %8 to %2**
  %10 = load %2*, %2** %9, align 8
  %11 = icmp eq %2* %10, null
  %12 = getelementptr inbounds i8, i8* %0, i64 16
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  br i1 %11, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds i8, i8* %1, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %14, %18
  %20 = select i1 %19, i32 1, i32 -1
  br label %48

21:                                               ; preds = %7
  %22 = sitofp i64 %14 to double
  br label %30

23:                                               ; preds = %2
  %24 = getelementptr inbounds %2, %2* %5, i64 0, i32 3, i64 0
  %25 = tail call double @zend_strtod(i8* nonnull %24, i8** null) #13
  %26 = getelementptr inbounds i8, i8* %1, i64 24
  %27 = bitcast i8* %26 to %2**
  %28 = load %2*, %2** %27, align 8
  %29 = icmp eq %2* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %21, %23
  %31 = phi double [ %22, %21 ], [ %25, %23 ]
  %32 = phi %2* [ %10, %21 ], [ %28, %23 ]
  %33 = getelementptr inbounds %2, %2* %32, i64 0, i32 3, i64 0
  %34 = tail call double @zend_strtod(i8* nonnull %33, i8** null) #13
  br label %40

35:                                               ; preds = %23
  %36 = getelementptr inbounds i8, i8* %1, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sitofp i64 %38 to double
  br label %40

40:                                               ; preds = %35, %30
  %41 = phi double [ %31, %30 ], [ %25, %35 ]
  %42 = phi double [ %34, %30 ], [ %39, %35 ]
  %43 = fsub double %41, %42
  %44 = fcmp une double %43, 0.000000e+00
  %45 = fcmp olt double %43, 0.000000e+00
  %46 = select i1 %45, i32 -1, i32 1
  %47 = select i1 %44, i32 %46, i32 0
  br label %48

48:                                               ; preds = %40, %15
  %49 = phi i32 [ %20, %15 ], [ %47, %40 ]
  ret i32 %49
}

; Function Attrs: nounwind uwtable
define internal i32 @90(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call i32 @91(i8* %1, i8* %0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @91(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = alloca [21 x i8], align 16
  %4 = alloca [21 x i8], align 16
  %5 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %5) #13
  %6 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %6) #13
  %7 = getelementptr inbounds i8, i8* %0, i64 24
  %8 = bitcast i8* %7 to %2**
  %9 = load %2*, %2** %8, align 8
  %10 = icmp eq %2* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %2, %2* %9, i64 0, i32 3, i64 0
  %13 = getelementptr inbounds %2, %2* %9, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  br label %49

15:                                               ; preds = %2
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 20
  %17 = getelementptr inbounds i8, i8* %0, i64 16
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %15
  %22 = sub i64 0, %19
  store i8 0, i8* %16, align 4
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i8* [ %16, %21 ], [ %29, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %30, %23 ]
  %26 = urem i64 %25, 10
  %27 = trunc i64 %26 to i8
  %28 = or i8 %27, 48
  %29 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8 %28, i8* %29, align 1
  %30 = udiv i64 %25, 10
  %31 = icmp ugt i64 %25, 9
  br i1 %31, label %23, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %24, i64 -2
  store i8 45, i8* %33, align 1
  br label %44

34:                                               ; preds = %15
  store i8 0, i8* %16, align 4
  br label %35

35:                                               ; preds = %35, %34
  %36 = phi i8* [ %16, %34 ], [ %41, %35 ]
  %37 = phi i64 [ %19, %34 ], [ %42, %35 ]
  %38 = urem i64 %37, 10
  %39 = trunc i64 %38 to i8
  %40 = or i8 %39, 48
  %41 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8 %40, i8* %41, align 1
  %42 = udiv i64 %37, 10
  %43 = icmp ugt i64 %37, 9
  br i1 %43, label %35, label %44

44:                                               ; preds = %35, %32
  %45 = phi i8* [ %33, %32 ], [ %41, %35 ]
  %46 = ptrtoint i8* %16 to i64
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  br label %49

49:                                               ; preds = %44, %11
  %50 = phi i8* [ %12, %11 ], [ %45, %44 ]
  %51 = phi i64 [ %14, %11 ], [ %48, %44 ]
  %52 = getelementptr inbounds i8, i8* %1, i64 24
  %53 = bitcast i8* %52 to %2**
  %54 = load %2*, %2** %53, align 8
  %55 = icmp eq %2* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %2, %2* %54, i64 0, i32 3, i64 0
  %58 = getelementptr inbounds %2, %2* %54, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  br label %94

60:                                               ; preds = %49
  %61 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 20
  %62 = getelementptr inbounds i8, i8* %1, i64 16
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp slt i64 %64, 0
  br i1 %65, label %66, label %79

66:                                               ; preds = %60
  %67 = sub i64 0, %64
  store i8 0, i8* %61, align 4
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i8* [ %61, %66 ], [ %74, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %75, %68 ]
  %71 = urem i64 %70, 10
  %72 = trunc i64 %71 to i8
  %73 = or i8 %72, 48
  %74 = getelementptr inbounds i8, i8* %69, i64 -1
  store i8 %73, i8* %74, align 1
  %75 = udiv i64 %70, 10
  %76 = icmp ugt i64 %70, 9
  br i1 %76, label %68, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds i8, i8* %69, i64 -2
  store i8 45, i8* %78, align 1
  br label %89

79:                                               ; preds = %60
  store i8 0, i8* %61, align 4
  br label %80

80:                                               ; preds = %80, %79
  %81 = phi i8* [ %61, %79 ], [ %86, %80 ]
  %82 = phi i64 [ %64, %79 ], [ %87, %80 ]
  %83 = urem i64 %82, 10
  %84 = trunc i64 %83 to i8
  %85 = or i8 %84, 48
  %86 = getelementptr inbounds i8, i8* %81, i64 -1
  store i8 %85, i8* %86, align 1
  %87 = udiv i64 %82, 10
  %88 = icmp ugt i64 %82, 9
  br i1 %88, label %80, label %89

89:                                               ; preds = %80, %77
  %90 = phi i8* [ %78, %77 ], [ %86, %80 ]
  %91 = ptrtoint i8* %61 to i64
  %92 = ptrtoint i8* %50 to i64
  %93 = sub i64 %91, %92
  br label %94

94:                                               ; preds = %89, %56
  %95 = phi i8* [ %57, %56 ], [ %90, %89 ]
  %96 = phi i64 [ %59, %56 ], [ %93, %89 ]
  %97 = call i32 @zend_binary_strcasecmp_l(i8* %50, i64 %51, i8* nonnull %95, i64 %96) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %5) #13
  ret i32 %97
}

; Function Attrs: nounwind uwtable
define internal i32 @92(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call i32 @93(i8* %1, i8* %0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @93(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = alloca [21 x i8], align 16
  %4 = alloca [21 x i8], align 16
  %5 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %5) #13
  %6 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %6) #13
  %7 = getelementptr inbounds i8, i8* %0, i64 24
  %8 = bitcast i8* %7 to %2**
  %9 = load %2*, %2** %8, align 8
  %10 = icmp eq %2* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %2, %2* %9, i64 0, i32 3, i64 0
  %13 = getelementptr inbounds %2, %2* %9, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  br label %49

15:                                               ; preds = %2
  %16 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 20
  %17 = getelementptr inbounds i8, i8* %0, i64 16
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %15
  %22 = sub i64 0, %19
  store i8 0, i8* %16, align 4
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i8* [ %16, %21 ], [ %29, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %30, %23 ]
  %26 = urem i64 %25, 10
  %27 = trunc i64 %26 to i8
  %28 = or i8 %27, 48
  %29 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8 %28, i8* %29, align 1
  %30 = udiv i64 %25, 10
  %31 = icmp ugt i64 %25, 9
  br i1 %31, label %23, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %24, i64 -2
  store i8 45, i8* %33, align 1
  br label %44

34:                                               ; preds = %15
  store i8 0, i8* %16, align 4
  br label %35

35:                                               ; preds = %35, %34
  %36 = phi i8* [ %16, %34 ], [ %41, %35 ]
  %37 = phi i64 [ %19, %34 ], [ %42, %35 ]
  %38 = urem i64 %37, 10
  %39 = trunc i64 %38 to i8
  %40 = or i8 %39, 48
  %41 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8 %40, i8* %41, align 1
  %42 = udiv i64 %37, 10
  %43 = icmp ugt i64 %37, 9
  br i1 %43, label %35, label %44

44:                                               ; preds = %35, %32
  %45 = phi i8* [ %33, %32 ], [ %41, %35 ]
  %46 = ptrtoint i8* %16 to i64
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  br label %49

49:                                               ; preds = %44, %11
  %50 = phi i8* [ %12, %11 ], [ %45, %44 ]
  %51 = phi i64 [ %14, %11 ], [ %48, %44 ]
  %52 = getelementptr inbounds i8, i8* %1, i64 24
  %53 = bitcast i8* %52 to %2**
  %54 = load %2*, %2** %53, align 8
  %55 = icmp eq %2* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %2, %2* %54, i64 0, i32 3, i64 0
  %58 = getelementptr inbounds %2, %2* %54, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  br label %94

60:                                               ; preds = %49
  %61 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 20
  %62 = getelementptr inbounds i8, i8* %1, i64 16
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp slt i64 %64, 0
  br i1 %65, label %66, label %79

66:                                               ; preds = %60
  %67 = sub i64 0, %64
  store i8 0, i8* %61, align 4
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i8* [ %61, %66 ], [ %74, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %75, %68 ]
  %71 = urem i64 %70, 10
  %72 = trunc i64 %71 to i8
  %73 = or i8 %72, 48
  %74 = getelementptr inbounds i8, i8* %69, i64 -1
  store i8 %73, i8* %74, align 1
  %75 = udiv i64 %70, 10
  %76 = icmp ugt i64 %70, 9
  br i1 %76, label %68, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds i8, i8* %69, i64 -2
  store i8 45, i8* %78, align 1
  br label %89

79:                                               ; preds = %60
  store i8 0, i8* %61, align 4
  br label %80

80:                                               ; preds = %80, %79
  %81 = phi i8* [ %61, %79 ], [ %86, %80 ]
  %82 = phi i64 [ %64, %79 ], [ %87, %80 ]
  %83 = urem i64 %82, 10
  %84 = trunc i64 %83 to i8
  %85 = or i8 %84, 48
  %86 = getelementptr inbounds i8, i8* %81, i64 -1
  store i8 %85, i8* %86, align 1
  %87 = udiv i64 %82, 10
  %88 = icmp ugt i64 %82, 9
  br i1 %88, label %80, label %89

89:                                               ; preds = %80, %77
  %90 = phi i8* [ %78, %77 ], [ %86, %80 ]
  %91 = ptrtoint i8* %61 to i64
  %92 = ptrtoint i8* %90 to i64
  %93 = sub i64 %91, %92
  br label %94

94:                                               ; preds = %89, %56
  %95 = phi i8* [ %57, %56 ], [ %90, %89 ]
  %96 = phi i64 [ %59, %56 ], [ %93, %89 ]
  %97 = call i32 @zend_binary_strcmp(i8* %50, i64 %51, i8* nonnull %95, i64 %96) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %5) #13
  ret i32 %97
}

; Function Attrs: nounwind uwtable
define internal i32 @94(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call fastcc i32 @102(i8* %1, i8* %0, i32 1)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @95(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call fastcc i32 @102(i8* %0, i8* %1, i32 1)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @96(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call fastcc i32 @102(i8* %1, i8* %0, i32 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @97(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call fastcc i32 @102(i8* %0, i8* %1, i32 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @98(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call i32 @99(i8* %1, i8* %0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @99(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = alloca [21 x i8], align 16
  %4 = alloca [21 x i8], align 16
  %5 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %5) #13
  %6 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %6) #13
  %7 = getelementptr inbounds i8, i8* %0, i64 24
  %8 = bitcast i8* %7 to %2**
  %9 = load %2*, %2** %8, align 8
  %10 = icmp eq %2* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %2, %2* %9, i64 0, i32 3, i64 0
  br label %42

13:                                               ; preds = %2
  %14 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 20
  %15 = getelementptr inbounds i8, i8* %0, i64 16
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp slt i64 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %13
  %20 = sub i64 0, %17
  store i8 0, i8* %14, align 4
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i8* [ %14, %19 ], [ %27, %21 ]
  %23 = phi i64 [ %20, %19 ], [ %28, %21 ]
  %24 = urem i64 %23, 10
  %25 = trunc i64 %24 to i8
  %26 = or i8 %25, 48
  %27 = getelementptr inbounds i8, i8* %22, i64 -1
  store i8 %26, i8* %27, align 1
  %28 = udiv i64 %23, 10
  %29 = icmp ugt i64 %23, 9
  br i1 %29, label %21, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds i8, i8* %22, i64 -2
  store i8 45, i8* %31, align 1
  br label %42

32:                                               ; preds = %13
  store i8 0, i8* %14, align 4
  br label %33

33:                                               ; preds = %33, %32
  %34 = phi i8* [ %14, %32 ], [ %39, %33 ]
  %35 = phi i64 [ %17, %32 ], [ %40, %33 ]
  %36 = urem i64 %35, 10
  %37 = trunc i64 %36 to i8
  %38 = or i8 %37, 48
  %39 = getelementptr inbounds i8, i8* %34, i64 -1
  store i8 %38, i8* %39, align 1
  %40 = udiv i64 %35, 10
  %41 = icmp ugt i64 %35, 9
  br i1 %41, label %33, label %42

42:                                               ; preds = %33, %30, %11
  %43 = phi i8* [ %12, %11 ], [ %31, %30 ], [ %39, %33 ]
  %44 = getelementptr inbounds i8, i8* %1, i64 24
  %45 = bitcast i8* %44 to %2**
  %46 = load %2*, %2** %45, align 8
  %47 = icmp eq %2* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %2, %2* %46, i64 0, i32 3, i64 0
  br label %79

50:                                               ; preds = %42
  %51 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 20
  %52 = getelementptr inbounds i8, i8* %1, i64 16
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, 0
  br i1 %55, label %56, label %69

56:                                               ; preds = %50
  %57 = sub i64 0, %54
  store i8 0, i8* %51, align 4
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i8* [ %51, %56 ], [ %64, %58 ]
  %60 = phi i64 [ %57, %56 ], [ %65, %58 ]
  %61 = urem i64 %60, 10
  %62 = trunc i64 %61 to i8
  %63 = or i8 %62, 48
  %64 = getelementptr inbounds i8, i8* %59, i64 -1
  store i8 %63, i8* %64, align 1
  %65 = udiv i64 %60, 10
  %66 = icmp ugt i64 %60, 9
  br i1 %66, label %58, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds i8, i8* %59, i64 -2
  store i8 45, i8* %68, align 1
  br label %79

69:                                               ; preds = %50
  store i8 0, i8* %51, align 4
  br label %70

70:                                               ; preds = %70, %69
  %71 = phi i8* [ %51, %69 ], [ %76, %70 ]
  %72 = phi i64 [ %54, %69 ], [ %77, %70 ]
  %73 = urem i64 %72, 10
  %74 = trunc i64 %73 to i8
  %75 = or i8 %74, 48
  %76 = getelementptr inbounds i8, i8* %71, i64 -1
  store i8 %75, i8* %76, align 1
  %77 = udiv i64 %72, 10
  %78 = icmp ugt i64 %72, 9
  br i1 %78, label %70, label %79

79:                                               ; preds = %70, %67, %48
  %80 = phi i8* [ %49, %48 ], [ %68, %67 ], [ %76, %70 ]
  %81 = call i32 @strcoll(i8* %43, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %5) #13
  ret i32 %81
}

; Function Attrs: nounwind uwtable
define internal i32 @100(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = tail call i32 @101(i8* %1, i8* %0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @101(i8* nocapture readonly %0, i8* nocapture readonly %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca double, align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds i8, i8* %0, i64 24
  %10 = bitcast i8* %9 to %2**
  %11 = load %2*, %2** %10, align 8
  %12 = icmp eq %2* %11, null
  %13 = getelementptr inbounds i8, i8* %1, i64 24
  %14 = bitcast i8* %13 to %2**
  %15 = load %2*, %2** %14, align 8
  %16 = icmp eq %2* %15, null
  br i1 %12, label %17, label %45

17:                                               ; preds = %2
  %18 = getelementptr inbounds i8, i8* %0, i64 16
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  br i1 %16, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %1, i64 16
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp sgt i64 %20, %24
  %26 = select i1 %25, i32 1, i32 -1
  br label %77

27:                                               ; preds = %17
  store i64 %20, i64* %3, align 8
  %28 = getelementptr inbounds %2, %2* %15, i64 0, i32 3, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp sgt i8 %29, 57
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %2, %2* %15, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = call zeroext i8 @_is_numeric_string_ex(i8* nonnull %28, i64 %33, i64* nonnull %4, double* nonnull %5, i32 1, i32* null) #13
  switch i8 %34, label %44 [
    i8 4, label %70
    i8 5, label %35
  ]

35:                                               ; preds = %31
  %36 = load i64, i64* %3, align 8
  %37 = sitofp i64 %36 to double
  %38 = load double, double* %5, align 8
  %39 = fsub double %37, %38
  %40 = fcmp une double %39, 0.000000e+00
  %41 = fcmp olt double %39, 0.000000e+00
  %42 = select i1 %41, i32 -1, i32 1
  %43 = select i1 %40, i32 %42, i32 0
  br label %77

44:                                               ; preds = %27, %31
  store i64 0, i64* %4, align 8
  br label %70

45:                                               ; preds = %2
  br i1 %16, label %49, label %46

46:                                               ; preds = %45
  %47 = tail call i64 @zendi_smart_strcmp(%2* nonnull %11, %2* nonnull %15) #13
  %48 = trunc i64 %47 to i32
  br label %77

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %1, i64 16
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %4, align 8
  %53 = getelementptr inbounds %2, %2* %11, i64 0, i32 3, i64 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp sgt i8 %54, 57
  br i1 %55, label %69, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %2, %2* %11, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = call zeroext i8 @_is_numeric_string_ex(i8* nonnull %53, i64 %58, i64* nonnull %3, double* nonnull %5, i32 1, i32* null) #13
  switch i8 %59, label %69 [
    i8 4, label %70
    i8 5, label %60
  ]

60:                                               ; preds = %56
  %61 = load double, double* %5, align 8
  %62 = load i64, i64* %4, align 8
  %63 = sitofp i64 %62 to double
  %64 = fsub double %61, %63
  %65 = fcmp une double %64, 0.000000e+00
  %66 = fcmp olt double %64, 0.000000e+00
  %67 = select i1 %66, i32 -1, i32 1
  %68 = select i1 %65, i32 %67, i32 0
  br label %77

69:                                               ; preds = %49, %56
  store i64 0, i64* %3, align 8
  br label %70

70:                                               ; preds = %56, %31, %69, %44
  %71 = load i64, i64* %3, align 8
  %72 = load i64, i64* %4, align 8
  %73 = icmp sgt i64 %71, %72
  %74 = icmp slt i64 %71, %72
  %75 = sext i1 %74 to i32
  %76 = select i1 %73, i32 1, i32 %75
  br label %77

77:                                               ; preds = %70, %60, %35, %46, %21
  %78 = phi i32 [ %26, %21 ], [ %48, %46 ], [ %43, %35 ], [ %68, %60 ], [ %76, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret i32 %78
}

declare dso_local double @zend_strtod(i8*, i8**) local_unnamed_addr #1

declare dso_local i32 @zend_binary_strcasecmp_l(i8*, i64, i8*, i64) local_unnamed_addr #1

declare dso_local i32 @zend_binary_strcmp(i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @102(i8* nocapture readonly %0, i8* nocapture readonly %1, i32 %2) unnamed_addr #0 {
  %4 = alloca [21 x i8], align 16
  %5 = alloca [21 x i8], align 16
  %6 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %6) #13
  %7 = getelementptr inbounds [21 x i8], [21 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %7) #13
  %8 = getelementptr inbounds i8, i8* %0, i64 24
  %9 = bitcast i8* %8 to %2**
  %10 = load %2*, %2** %9, align 8
  %11 = icmp eq %2* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %2, %2* %10, i64 0, i32 3, i64 0
  %14 = getelementptr inbounds %2, %2* %10, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  br label %50

16:                                               ; preds = %3
  %17 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 20
  %18 = getelementptr inbounds i8, i8* %0, i64 16
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %16
  %23 = sub i64 0, %20
  store i8 0, i8* %17, align 4
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i8* [ %17, %22 ], [ %30, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %31, %24 ]
  %27 = urem i64 %26, 10
  %28 = trunc i64 %27 to i8
  %29 = or i8 %28, 48
  %30 = getelementptr inbounds i8, i8* %25, i64 -1
  store i8 %29, i8* %30, align 1
  %31 = udiv i64 %26, 10
  %32 = icmp ugt i64 %26, 9
  br i1 %32, label %24, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds i8, i8* %25, i64 -2
  store i8 45, i8* %34, align 1
  br label %45

35:                                               ; preds = %16
  store i8 0, i8* %17, align 4
  br label %36

36:                                               ; preds = %36, %35
  %37 = phi i8* [ %17, %35 ], [ %42, %36 ]
  %38 = phi i64 [ %20, %35 ], [ %43, %36 ]
  %39 = urem i64 %38, 10
  %40 = trunc i64 %39 to i8
  %41 = or i8 %40, 48
  %42 = getelementptr inbounds i8, i8* %37, i64 -1
  store i8 %41, i8* %42, align 1
  %43 = udiv i64 %38, 10
  %44 = icmp ugt i64 %38, 9
  br i1 %44, label %36, label %45

45:                                               ; preds = %36, %33
  %46 = phi i8* [ %34, %33 ], [ %42, %36 ]
  %47 = ptrtoint i8* %17 to i64
  %48 = ptrtoint i8* %46 to i64
  %49 = sub i64 %47, %48
  br label %50

50:                                               ; preds = %45, %12
  %51 = phi i8* [ %13, %12 ], [ %46, %45 ]
  %52 = phi i64 [ %15, %12 ], [ %49, %45 ]
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to %2**
  %55 = load %2*, %2** %54, align 8
  %56 = icmp eq %2* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %2, %2* %55, i64 0, i32 3, i64 0
  %59 = getelementptr inbounds %2, %2* %55, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  br label %95

61:                                               ; preds = %50
  %62 = getelementptr inbounds [21 x i8], [21 x i8]* %5, i64 0, i64 20
  %63 = getelementptr inbounds i8, i8* %1, i64 16
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp slt i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %61
  %68 = sub i64 0, %65
  store i8 0, i8* %62, align 4
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i8* [ %62, %67 ], [ %75, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %76, %69 ]
  %72 = urem i64 %71, 10
  %73 = trunc i64 %72 to i8
  %74 = or i8 %73, 48
  %75 = getelementptr inbounds i8, i8* %70, i64 -1
  store i8 %74, i8* %75, align 1
  %76 = udiv i64 %71, 10
  %77 = icmp ugt i64 %71, 9
  br i1 %77, label %69, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds i8, i8* %70, i64 -2
  store i8 45, i8* %79, align 1
  br label %90

80:                                               ; preds = %61
  store i8 0, i8* %62, align 4
  br label %81

81:                                               ; preds = %81, %80
  %82 = phi i8* [ %62, %80 ], [ %87, %81 ]
  %83 = phi i64 [ %65, %80 ], [ %88, %81 ]
  %84 = urem i64 %83, 10
  %85 = trunc i64 %84 to i8
  %86 = or i8 %85, 48
  %87 = getelementptr inbounds i8, i8* %82, i64 -1
  store i8 %86, i8* %87, align 1
  %88 = udiv i64 %83, 10
  %89 = icmp ugt i64 %83, 9
  br i1 %89, label %81, label %90

90:                                               ; preds = %81, %78
  %91 = phi i8* [ %79, %78 ], [ %87, %81 ]
  %92 = ptrtoint i8* %62 to i64
  %93 = ptrtoint i8* %51 to i64
  %94 = sub i64 %92, %93
  br label %95

95:                                               ; preds = %90, %57
  %96 = phi i8* [ %58, %57 ], [ %91, %90 ]
  %97 = phi i64 [ %60, %57 ], [ %94, %90 ]
  %98 = call i32 @strnatcmp_ex(i8* %51, i64 %52, i8* nonnull %96, i64 %97, i32 %2) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %6) #13
  ret i32 %98
}

declare dso_local i32 @strnatcmp_ex(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8* nocapture, i8* nocapture) local_unnamed_addr #11

declare dso_local i64 @zendi_smart_strcmp(%2*, %2*) local_unnamed_addr #1

declare dso_local i64 @_zval_get_long_func(%5*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @103(i8* %0, i8* %1) #0 {
  %3 = tail call fastcc i32 @105(i8* %0, i8* %1, i32 1)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @104(i8* %0, i8* %1) #0 {
  %3 = tail call fastcc i32 @105(i8* %0, i8* %1, i32 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @105(i8* %0, i8* %1, i32 %2) unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 6
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = bitcast i8* %0 to %2**
  %9 = load %2*, %2** %8, align 8
  %10 = getelementptr inbounds %2, %2* %9, i64 0, i32 0, i32 1
  %11 = bitcast %4* %10 to %63*
  %12 = getelementptr inbounds %63, %63* %11, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %7
  %17 = getelementptr inbounds %2, %2* %9, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  br label %23

20:                                               ; preds = %3
  %21 = bitcast i8* %0 to %5*
  %22 = tail call %2* @_zval_get_string_func(%5* nonnull %21) #13
  br label %23

23:                                               ; preds = %7, %16, %20
  %24 = phi %2* [ %22, %20 ], [ %9, %7 ], [ %9, %16 ]
  %25 = getelementptr inbounds i8, i8* %1, i64 8
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 6
  br i1 %27, label %28, label %41

28:                                               ; preds = %23
  %29 = bitcast i8* %1 to %2**
  %30 = load %2*, %2** %29, align 8
  %31 = getelementptr inbounds %2, %2* %30, i64 0, i32 0, i32 1
  %32 = bitcast %4* %31 to %63*
  %33 = getelementptr inbounds %63, %63* %32, i64 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %28
  %38 = getelementptr inbounds %2, %2* %30, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  br label %44

41:                                               ; preds = %23
  %42 = bitcast i8* %1 to %5*
  %43 = tail call %2* @_zval_get_string_func(%5* nonnull %42) #13
  br label %44

44:                                               ; preds = %28, %37, %41
  %45 = phi %2* [ %43, %41 ], [ %30, %28 ], [ %30, %37 ]
  %46 = getelementptr inbounds %2, %2* %24, i64 0, i32 3, i64 0
  %47 = getelementptr inbounds %2, %2* %24, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %2, %2* %45, i64 0, i32 3, i64 0
  %50 = getelementptr inbounds %2, %2* %45, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = tail call i32 @strnatcmp_ex(i8* nonnull %46, i64 %48, i8* nonnull %49, i64 %51, i32 %2) #13
  %53 = getelementptr inbounds %2, %2* %24, i64 0, i32 0, i32 1
  %54 = bitcast %4* %53 to %63*
  %55 = getelementptr inbounds %63, %63* %54, i64 0, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = and i8 %56, 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %70

59:                                               ; preds = %44
  %60 = getelementptr inbounds %2, %2* %24, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, -1
  store i32 %62, i32* %60, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = and i8 %56, 1
  %66 = icmp eq i8 %65, 0
  %67 = bitcast %2* %24 to i8*
  br i1 %66, label %69, label %68

68:                                               ; preds = %64
  tail call void @free(i8* %67) #13
  br label %70

69:                                               ; preds = %64
  tail call void @_efree(i8* %67) #13
  br label %70

70:                                               ; preds = %44, %59, %68, %69
  %71 = getelementptr inbounds %2, %2* %45, i64 0, i32 0, i32 1
  %72 = bitcast %4* %71 to %63*
  %73 = getelementptr inbounds %63, %63* %72, i64 0, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %88

77:                                               ; preds = %70
  %78 = getelementptr inbounds %2, %2* %45, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, -1
  store i32 %80, i32* %78, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = and i8 %74, 1
  %84 = icmp eq i8 %83, 0
  %85 = bitcast %2* %45 to i8*
  br i1 %84, label %87, label %86

86:                                               ; preds = %82
  tail call void @free(i8* %85) #13
  br label %88

87:                                               ; preds = %82
  tail call void @_efree(i8* %85) #13
  br label %88

88:                                               ; preds = %70, %77, %86, %87
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i32 @106(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %1 to %5*
  %4 = bitcast i8* %0 to %5*
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %0 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @numeric_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @107(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %0 to %5*
  %4 = bitcast i8* %1 to %5*
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %0 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %1 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @numeric_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @108(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %1 to %5*
  %4 = bitcast i8* %0 to %5*
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %0 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @string_case_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @109(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %0 to %5*
  %4 = bitcast i8* %1 to %5*
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %0 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %1 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @string_case_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @110(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %1 to %5*
  %4 = bitcast i8* %0 to %5*
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %0 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @string_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @111(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %0 to %5*
  %4 = bitcast i8* %1 to %5*
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %0 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %1 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @string_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @112(i8* %0, i8* %1) #0 {
  %3 = tail call fastcc i32 @105(i8* %1, i8* %0, i32 1)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @113(i8* %0, i8* %1) #0 {
  %3 = tail call fastcc i32 @105(i8* %1, i8* %0, i32 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @114(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %1 to %5*
  %4 = bitcast i8* %0 to %5*
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %0 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @string_locale_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @115(i8* %0, i8* %1) #0 {
  %3 = bitcast i8* %0 to %5*
  %4 = bitcast i8* %1 to %5*
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 15
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast i8* %0 to %5**
  %10 = load %5*, %5** %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi %5* [ %10, %8 ], [ %3, %2 ]
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 15
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %1 to %5**
  %18 = load %5*, %5** %17, align 8
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi %5* [ %18, %16 ], [ %4, %11 ]
  %21 = tail call i32 @string_locale_compare_function(%5* %12, %5* %20) #13
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @116(i8* %0, i8* %1) #0 {
  %3 = alloca %5, align 8
  %4 = bitcast %5* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = bitcast i8* %0 to %5*
  %6 = bitcast i8* %1 to %5*
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 15
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = bitcast i8* %0 to %5**
  %12 = load %5*, %5** %11, align 8
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi %5* [ %12, %10 ], [ %5, %2 ]
  %15 = getelementptr inbounds i8, i8* %1, i64 8
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 15
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = bitcast i8* %1 to %5**
  %20 = load %5*, %5** %19, align 8
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi %5* [ %20, %18 ], [ %6, %13 ]
  %23 = call i32 @compare_function(%5* nonnull %3, %5* %14, %5* %22) #13
  %24 = icmp eq i32 %23, -1
  %25 = getelementptr inbounds %5, %5* %3, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  %28 = sub i32 0, %27
  %29 = select i1 %24, i32 0, i32 %28
  ret i32 %29
}

declare dso_local i32 @numeric_compare_function(%5*, %5*) local_unnamed_addr #1

declare dso_local i32 @string_case_compare_function(%5*, %5*) local_unnamed_addr #1

declare dso_local i32 @string_compare_function(%5*, %5*) local_unnamed_addr #1

declare dso_local i32 @string_locale_compare_function(%5*, %5*) local_unnamed_addr #1

declare dso_local i32 @compare_function(%5*, %5*, %5*) local_unnamed_addr #1

declare dso_local i32 @zend_fcall_info_init(%5*, i32, %34*, %35*, %2**, i8**) local_unnamed_addr #1

declare dso_local i32 @zend_hash_iterator_add(%9*, i32) local_unnamed_addr #1

declare dso_local noalias i8* @_emalloc_24() local_unnamed_addr #1

declare dso_local i32 @zend_hash_iterator_pos_ex(i32, %5*) local_unnamed_addr #1

declare dso_local i32 @zend_hash_iterator_pos(i32, %9*) local_unnamed_addr #1

declare dso_local void @zend_hash_iterator_del(i32) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

declare dso_local void @zend_throw_error(%1*, i8*, ...) local_unnamed_addr #1

declare dso_local %2* @zend_long_to_str(i64) local_unnamed_addr #1

declare dso_local %22* @zend_get_this_object(%24*) local_unnamed_addr #1

declare dso_local %2* @_zval_get_string_func(%5*) local_unnamed_addr #1

declare dso_local i32 @_zend_handle_numeric_str_ex(i8*, i64, i64*) local_unnamed_addr #1

declare dso_local zeroext i8 @_is_numeric_string_ex(i8*, i64, i64*, double*, i32, i32*) local_unnamed_addr #1

declare dso_local double @_zval_get_double_func(%5*) local_unnamed_addr #1

declare dso_local void @_zend_hash_iterators_update(%9*, i32, i32) local_unnamed_addr #1

declare dso_local i32 @zend_parse_arg_bool_slow(%5*, i8*) local_unnamed_addr #1

declare dso_local void @_zend_hash_merge(%9*, %9*, void (%5*)*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @zend_is_identical(%5*, %5*) local_unnamed_addr #1

declare dso_local void @convert_to_long(%5*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #12

; Function Attrs: nounwind readnone
declare dso_local i32 @__isnan(double) local_unnamed_addr #5

declare dso_local i64 @zend_dval_to_lval_slow(double) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @117(%5* nocapture readonly %0, %5* nocapture readonly %1) #0 {
  %3 = alloca [2 x %5], align 16
  %4 = alloca %5, align 8
  %5 = bitcast [2 x %5]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = bitcast %5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %5, %5* %0, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %5, %5* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 0, i32 0
  store i64 %8, i64* %11, align 16
  %12 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0, i32 1, i32 0
  store i32 %10, i32* %12, align 8
  %13 = getelementptr inbounds %5, %5* %1, i64 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %5, %5* %1, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1, i32 0, i32 0
  store i64 %14, i64* %17, align 16
  %18 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 1, i32 1, i32 0
  store i32 %16, i32* %18, align 8
  store i32 2, i32* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 6), align 4
  %19 = getelementptr inbounds [2 x %5], [2 x %5]* %3, i64 0, i64 0
  store %5* %19, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 3), align 8
  store %5* %4, %5** getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 2), align 8
  store i8 0, i8* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12, i32 5), align 8
  %20 = call i32 @zend_call_function(%34* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 12), %35* getelementptr inbounds (%33, %33* @basic_globals, i64 0, i32 13)) #13
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %2
  %23 = getelementptr inbounds %5, %5* %4, i64 0, i32 1
  %24 = bitcast %7* %23 to i8*
  %25 = load i8, i8* %24, align 8
  switch i8 %25, label %29 [
    i8 0, label %37
    i8 4, label %26
  ]

26:                                               ; preds = %22
  %27 = getelementptr inbounds %5, %5* %4, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  br label %31

29:                                               ; preds = %22
  %30 = call i64 @_zval_get_long_func(%5* nonnull %4) #13
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i64 [ %28, %26 ], [ %30, %29 ]
  call void @_zval_ptr_dtor(%5* nonnull %4) #13
  %33 = icmp slt i64 %32, 0
  %34 = icmp ne i64 %32, 0
  %35 = zext i1 %34 to i32
  %36 = select i1 %33, i32 -1, i32 %35
  br label %37

37:                                               ; preds = %22, %2, %31
  %38 = phi i32 [ %36, %31 ], [ 0, %22 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define internal i32 @118(%5* %0, %5* %1) #0 {
  %3 = tail call i32 @string_compare_function(%5* %0, %5* %1) #13
  ret i32 %3
}

declare dso_local i32 @zend_parse_parameters(i32, i8*, ...) local_unnamed_addr #1

declare dso_local void @zend_hash_bucket_swap(%11*, %11*) #1

declare dso_local i32 @add_function(%5*, %5*, %5*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #12

declare dso_local void @_zval_dtor_func(%61*) local_unnamed_addr #1

declare dso_local void @gc_possible_root(%61*) local_unnamed_addr #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind willreturn writeonly }
attributes #11 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable willreturn }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind allocsize(0) }
attributes #16 = { nounwind readnone }
attributes #17 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
