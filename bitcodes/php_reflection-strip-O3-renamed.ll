; ModuleID = 'php_reflection-strip-O3-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/reflection/php_reflection.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i8, %1*, %0*, i32, i32, i32, i32, %4*, %4*, %4*, %8, %8, %8, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %18, %21* (%0*)*, %20* (%0*, %4*, i32)*, i32 (%0*, %0*)*, %11* (%0*, %1*)*, i32 (%4*, i8**, i64*, %24*)*, i32 (%4*, %0*, i8*, i64, %25*)*, i32, i32, %0**, %0**, %26**, %28**, %30 }
%1 = type { %2, i64, i64, [1 x i8] }
%2 = type { i32, %3 }
%3 = type { i32 }
%4 = type { %5, %6, %7 }
%5 = type { i64 }
%6 = type { i32 }
%7 = type { i32 }
%8 = type { %2, %9, i32, %10*, i32, i32, i32, i32, i64, void (%4*)* }
%9 = type { i32 }
%10 = type { %4, i64, %1* }
%11 = type { %12 }
%12 = type { i8, [3 x i8], i32, %1*, %0*, %11*, i32, i32, %13*, i32*, i32, %14*, i32, i32, %1**, i32, i32, %16*, %17*, %8*, %1*, i32, i32, %1*, i32, i32, %4*, i32, i8**, [6 x i8*] }
%13 = type { %1*, i64, i8, i8 }
%14 = type { i8*, %15, %15, %15, i32, i32, i8, i8, i8, i8 }
%15 = type { i32 }
%16 = type { i32, i32, i32 }
%17 = type { i32, i32, i32, i32 }
%18 = type { %19*, %11*, %11*, %11*, %11*, %11*, %11* }
%19 = type { void (%20*)*, i32 (%20*)*, %4* (%20*)*, void (%20*, %4*)*, void (%20*)*, void (%20*)*, void (%20*)* }
%20 = type { %21, %4, %19*, i64 }
%21 = type { %2, i32, %0*, %22*, %8*, [1 x %4] }
%22 = type { i32, void (%21*)*, void (%21*)*, %21* (%4*)*, %4* (%4*, %4*, i32, i8**, %4*)*, void (%4*, %4*, %4*, i8**)*, %4* (%4*, %4*, i32, %4*)*, void (%4*, %4*, %4*)*, %4* (%4*, %4*, i32, i8**)*, %4* (%4*, %4*)*, void (%4*, %4*)*, i32 (%4*, %4*, i32, i8**)*, void (%4*, %4*, i8**)*, i32 (%4*, %4*, i32)*, void (%4*, %4*)*, %8* (%4*)*, %11* (%21**, %1*, %4*)*, i32 (%1*, %21*, %23*, %4*)*, %11* (%21*)*, %1* (%21*)*, i32 (%4*, %4*)*, i32 (%4*, %4*, i32)*, i32 (%4*, i64*)*, %8* (%4*, i32*)*, i32 (%4*, %0**, %11**, %21**)*, %8* (%4*, %4**, i32*)*, i32 (i8, %4*, %4*, %4*)*, i32 (%4*, %4*, %4*)* }
%23 = type { %14*, %23*, %4*, %11*, %4, %23*, %8*, i8**, %4* }
%24 = type opaque
%25 = type opaque
%26 = type { %27*, %1*, i32 }
%27 = type { %1*, %0*, %1* }
%28 = type { %27*, %29* }
%29 = type { %0* }
%30 = type { %31 }
%31 = type { %1*, i32, i32, %1* }
%32 = type { %4, %4, [32 x %8*], %8**, %8**, %8, %8, [1 x %33]*, i32, i32, %8*, %8*, %8*, %4*, %4*, %35*, %23*, %0*, i64, i32, %8*, %11*, i8, i8, i8, i8, i64, %8, %8, i32, %4, %4, %36, %36, %36, i32, %0*, i64, i32, %8*, %8*, %37*, %38, %21*, %21*, %14*, [3 x %14], %39*, i8, i8, i64, i32, i32, %43*, [16 x %43], i8*, i16, %11, %14, i8, [6 x i8*] }
%33 = type { [8 x i64], i32, %34 }
%34 = type { [16 x i64] }
%35 = type { %4*, %4*, %35* }
%36 = type { i32, i32, i32, i8* }
%37 = type { %1*, i32 (%37*, %1*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, %1*, %1*, void (%37*, i32)*, i32, i32, i32, i32 }
%38 = type { %21**, i32, i32, i32 }
%39 = type { i16, i32, i8, i8, %37*, %40*, i8*, %41*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, void (%39*)*, i8*, i64, i8*, void (i8*)*, void (i8*)*, i32 ()*, i32, i8, i8*, i32, i8* }
%40 = type { i8*, i8*, i8*, i8 }
%41 = type { i8*, void (%23*, %4*)*, %42*, i32, i32 }
%42 = type { i8*, i64, i8, i8 }
%43 = type { %8*, i32 }
%44 = type { %36, %0*, %1*, i32, %12*, %8*, %8*, %8, %8*, i8, i8, i8, i8, i8, %45, %47*, i32, i8, %1*, i32, i32, %48, %50, %56*, %8, %54**, i64, i8, i8, i8, %55*, %56*, %36 }
%45 = type { %46*, %46*, i64, i64, void (i8*)*, i8, %46* }
%46 = type { %46*, %46*, [1 x i8] }
%47 = type { void (%4*, %4*, %4*, i32, i8*)*, i8* }
%48 = type { i32, i32, i32, i32, i32, i32, i32, i32, %49*, %8* }
%49 = type { i32, i32, i32, i32 }
%50 = type { %51, %52, %1*, i8, i8, %8*, %8*, %8*, %8 }
%51 = type { i64 }
%52 = type { i8, i8, %53 }
%53 = type { %4 }
%54 = type opaque
%55 = type { i16, i16, i32, [1 x %55*] }
%56 = type { i8*, i8*, %56* }
%57 = type { i8, i8, i16 }
%58 = type { i8, i8, i8, i8 }
%59 = type { %2 }
%60 = type { i64, %4, %4*, %4*, %21*, i8, i32 }
%61 = type { i8, %11*, %0*, %0*, %21* }
%62 = type { %1*, i64 }
%63 = type { %2, %4 }
%64 = type { %21, %20*, %23*, %23*, %4, %4, %4, %4*, i64, %4, %65, %23, i8, %4*, i32 }
%65 = type { %64*, i32, %66, %68 }
%66 = type { [4 x %67] }
%67 = type { %64*, %64* }
%68 = type { %64* }
%69 = type { i8, [3 x i8], i32, %1*, %0*, %11*, i32, i32, %13* }
%70 = type { %4, %1*, %0* }
%71 = type { i32, i32, %1*, %1*, %0* }
%72 = type { i32, i32, i8*, i8* }
%73 = type { i64, %1* }
%74 = type { %4, %1*, i32, i32 }
%75 = type { i8*, i8*, i8*, i8*, i8*, i32 (%75*)*, void (%75*)*, void ()*, void ()*, void (i32, i8*)*, void (%12*)*, void (%23*)*, void (%23*)*, void (%23*)*, void (%12*)*, void (%12*)*, i32 (i32)*, i32 (i8*)*, i64 (%12*)*, i64 (%12*, i8*)*, i8*, i8*, i8*, i8*, i8*, i32 }

@reflection_class_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@0 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@reflection_exception_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@1 = private unnamed_addr constant [36 x i8] c"Cannot clone object using __clone()\00", align 1
@reflector_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@2 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@3 = private unnamed_addr constant [41 x i8] c"Invocation of method __toString() failed\00", align 1
@4 = private unnamed_addr constant [41 x i8] c"%s::__toString() did not return anything\00", align 1
@zend_printf = external dso_local local_unnamed_addr global i64 (i8*, ...)*, align 8
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [9 x i8] c"abstract\00", align 1
@8 = private unnamed_addr constant [6 x i8] c"final\00", align 1
@9 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@10 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@11 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@12 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@reflection_function_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@13 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@zend_ce_closure = external dso_local local_unnamed_addr global %0*, align 8
@14 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@executor_globals = external dso_local global %32, align 8
@15 = private unnamed_addr constant [29 x i8] c"Function %s() does not exist\00", align 1
@16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@17 = private unnamed_addr constant [57 x i8] c"Internal error: Failed to retrieve the reflection object\00", align 1
@18 = private unnamed_addr constant [33 x i8] c"%s() cannot be called statically\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@20 = private unnamed_addr constant [35 x i8] c"Invocation of function %s() failed\00", align 1
@21 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@reflection_function_abstract_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@zend_ce_generator = external dso_local local_unnamed_addr global %0*, align 8
@22 = private unnamed_addr constant [66 x i8] c"Cannot create ReflectionGenerator based on a terminated Generator\00", align 1
@23 = private unnamed_addr constant [3 x i8] c"|l\00", align 1
@24 = private unnamed_addr constant [53 x i8] c"Cannot fetch information from a terminated Generator\00", align 1
@reflection_parameter_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@25 = private unnamed_addr constant [3 x i8] c"zz\00", align 1
@26 = private unnamed_addr constant [63 x i8] c"Expected array($object, $method) or array($classname, $method)\00", align 1
@27 = private unnamed_addr constant [24 x i8] c"Class %s does not exist\00", align 1
@28 = private unnamed_addr constant [9 x i8] c"__invoke\00", align 1
@29 = private unnamed_addr constant [31 x i8] c"Method %s::%s() does not exist\00", align 1
@30 = private unnamed_addr constant [100 x i8] c"The parameter class is expected to be either a string, an array(class, method) or a callable object\00", align 1
@31 = private unnamed_addr constant [57 x i8] c"The parameter specified by its offset could not be found\00", align 1
@32 = private unnamed_addr constant [55 x i8] c"The parameter specified by its name could not be found\00", align 1
@33 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@34 = private unnamed_addr constant [71 x i8] c"Parameter uses 'self' as type hint but function is not a class member!\00", align 1
@35 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@36 = private unnamed_addr constant [73 x i8] c"Parameter uses 'parent' as type hint but function is not a class member!\00", align 1
@37 = private unnamed_addr constant [76 x i8] c"Parameter uses 'parent' as type hint although class does not have a parent!\00", align 1
@reflection_method_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@38 = private unnamed_addr constant [3 x i8] c"zs\00", align 1
@39 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@40 = private unnamed_addr constant [23 x i8] c"Invalid method name %s\00", align 1
@41 = private unnamed_addr constant [67 x i8] c"The parameter class is expected to be either a string or an object\00", align 1
@42 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@44 = private unnamed_addr constant [73 x i8] c"Given object is not an instance of the class this method was declared in\00", align 1
@zend_empty_string = external dso_local local_unnamed_addr global %1*, align 8
@45 = private unnamed_addr constant [40 x i8] c"Method %s::%s does not have a prototype\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@47 = private unnamed_addr constant [3 x i8] c"zS\00", align 1
@48 = private unnamed_addr constant [37 x i8] c"Class Constant %s::%s does not exist\00", align 1
@49 = private unnamed_addr constant [4 x i8] c"S|z\00", align 1
@50 = private unnamed_addr constant [43 x i8] c"Class %s does not have a property named %s\00", align 1
@51 = private unnamed_addr constant [3 x i8] c"Sz\00", align 1
@52 = private unnamed_addr constant [25 x i8] c"Method %s does not exist\00", align 1
@53 = private unnamed_addr constant [4 x i8] c"|l!\00", align 1
@54 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@55 = private unnamed_addr constant [73 x i8] c"Fully qualified property name %s::%s does not specify a base class of %s\00", align 1
@56 = private unnamed_addr constant [27 x i8] c"Property %s does not exist\00", align 1
@57 = private unnamed_addr constant [45 x i8] c"Access to non-public constructor of class %s\00", align 1
@58 = private unnamed_addr constant [38 x i8] c"Invocation of %s's constructor failed\00", align 1
@59 = private unnamed_addr constant [83 x i8] c"Class %s does not have a constructor, so you cannot pass any constructor arguments\00", align 1
@60 = private unnamed_addr constant [107 x i8] c"Class %s is an internal class marked as final that cannot be instantiated without invoking its constructor\00", align 1
@61 = private unnamed_addr constant [3 x i8] c"|h\00", align 1
@62 = private unnamed_addr constant [7 x i8] c"%s::%s\00", align 1
@63 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@64 = private unnamed_addr constant [68 x i8] c"Internal error: Failed to retrieve the argument's reflection object\00", align 1
@65 = private unnamed_addr constant [66 x i8] c"Parameter one must either be a string or a ReflectionClass object\00", align 1
@66 = private unnamed_addr constant [28 x i8] c"Interface %s does not exist\00", align 1
@67 = private unnamed_addr constant [23 x i8] c"%s is not an interface\00", align 1
@zend_ce_traversable = external dso_local local_unnamed_addr global %0*, align 8
@reflection_object_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@reflection_property_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@reflection_class_constant_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@68 = private unnamed_addr constant [32 x i8] c"Property %s::$%s does not exist\00", align 1
@69 = private unnamed_addr constant [39 x i8] c"Cannot access non-public member %s::%s\00", align 1
@70 = private unnamed_addr constant [51 x i8] c"Internal error: Could not find the property %s::%s\00", align 1
@71 = private unnamed_addr constant [75 x i8] c"Given object is not an instance of the class this property was declared in\00", align 1
@72 = private unnamed_addr constant [3 x i8] c"oz\00", align 1
@reflection_extension_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@module_registry = external dso_local global %8, align 8
@73 = private unnamed_addr constant [28 x i8] c"Extension %s does not exist\00", align 1
@compiler_globals = external dso_local local_unnamed_addr global %44, align 8
@74 = private unnamed_addr constant [9 x i8] c"Required\00", align 1
@75 = private unnamed_addr constant [10 x i8] c"Conflicts\00", align 1
@76 = private unnamed_addr constant [9 x i8] c"Optional\00", align 1
@77 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@78 = private unnamed_addr constant [11 x i8] c"%s%s%s%s%s\00", align 1
@79 = private unnamed_addr constant [2 x i8] c" \00", align 1
@reflection_zend_extension_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@80 = private unnamed_addr constant [33 x i8] c"Zend Extension %s does not exist\00", align 1
@reflection_ext_functions = hidden constant [1 x %41] zeroinitializer, align 16
@81 = internal unnamed_addr global %22* null, align 8
@82 = internal global %22 zeroinitializer, align 8
@83 = private unnamed_addr constant [20 x i8] c"ReflectionException\00", align 1
@zend_new_interned_string = external dso_local local_unnamed_addr global %1* (%1*)*, align 8
@84 = internal constant [1 x %41] zeroinitializer, align 16
@zend_ce_exception = external dso_local local_unnamed_addr global %0*, align 8
@85 = private unnamed_addr constant [11 x i8] c"Reflection\00", align 1
@86 = internal constant [3 x %41] [%41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @244, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_getModifierNames, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @245, i32 0, i32 0), i32 1, i32 257 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_export, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @247, i32 0, i32 0), i32 2, i32 257 }, %41 zeroinitializer], align 16
@reflection_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@87 = private unnamed_addr constant [10 x i8] c"Reflector\00", align 1
@88 = internal constant [3 x %41] [%41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* null, %42* null, i32 -1, i32 259 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* null, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 258 }, %41 zeroinitializer], align 16
@89 = private unnamed_addr constant [27 x i8] c"ReflectionFunctionAbstract\00", align 1
@90 = internal constant [27 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @254, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_inNamespace, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @255, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isClosure, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @256, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isDeprecated, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @257, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isInternal, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @258, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isUserDefined, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @259, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isGenerator, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @260, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isVariadic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @261, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getClosureThis, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @262, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getClosureScopeClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @263, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getDocComment, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @264, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getEndLine, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @265, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getExtension, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @266, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getExtensionName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @267, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getFileName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @269, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getNamespaceName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @270, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getNumberOfParameters, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @271, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getNumberOfRequiredParameters, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @272, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getParameters, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @273, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getShortName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @274, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getStartLine, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @275, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getStaticVariables, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @276, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_returnsReference, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @277, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_hasReturnType, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @278, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getReturnType, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@91 = private unnamed_addr constant [19 x i8] c"ReflectionFunction\00", align 1
@92 = internal constant [8 x %41] [%41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function___construct, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @280, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_export, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @281, i32 0, i32 0), i32 2, i32 257 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @282, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_isDisabled, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @283, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_invoke, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @284, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @285, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_invokeArgs, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @286, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @287, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_function_getClosure, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@93 = private unnamed_addr constant [14 x i8] c"IS_DEPRECATED\00", align 1
@94 = private unnamed_addr constant [20 x i8] c"ReflectionGenerator\00", align 1
@95 = internal constant [8 x %41] [%41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator___construct, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @289, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @290, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator_getExecutingLine, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @291, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator_getExecutingFile, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @292, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator_getTrace, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @293, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @294, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator_getFunction, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @295, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator_getThis, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @296, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_generator_getExecutingGenerator, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@reflection_generator_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@96 = private unnamed_addr constant [20 x i8] c"ReflectionParameter\00", align 1
@97 = internal constant [23 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_export, %42* getelementptr inbounds ([4 x %42], [4 x %42]* @299, i32 0, i32 0), i32 3, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter___construct, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @300, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @301, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isPassedByReference, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @302, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_canBePassedByValue, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @303, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getDeclaringFunction, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @304, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getDeclaringClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @305, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @306, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_hasType, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @307, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getType, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @308, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isArray, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @309, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isCallable, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @310, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_allowsNull, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @311, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getPosition, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @312, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isOptional, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @313, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isDefaultValueAvailable, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @314, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getDefaultValue, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @315, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isDefaultValueConstant, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @316, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_getDefaultValueConstantName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @260, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_parameter_isVariadic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@98 = private unnamed_addr constant [15 x i8] c"ReflectionType\00", align 1
@99 = internal constant [5 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @310, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_type_allowsNull, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @319, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_type_isBuiltin, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_type___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@reflection_type_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@100 = private unnamed_addr constant [20 x i8] c"ReflectionNamedType\00", align 1
@101 = internal constant [2 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_named_type_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@reflection_named_type_ptr = common dso_local local_unnamed_addr global %0* null, align 8
@102 = private unnamed_addr constant [17 x i8] c"ReflectionMethod\00", align 1
@103 = internal constant [19 x %41] [%41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_export, %42* getelementptr inbounds ([4 x %42], [4 x %42]* @320, i32 0, i32 0), i32 3, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method___construct, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @321, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @322, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isPublic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @323, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isPrivate, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @324, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isProtected, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @325, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isAbstract, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @326, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isFinal, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @327, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isStatic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @328, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isConstructor, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @329, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_isDestructor, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @287, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_getClosure, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @330, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @331, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_getModifiers, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @283, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_invoke, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @332, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @285, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_invokeArgs, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @333, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @304, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_getDeclaringClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @334, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_getPrototype, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @335, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_method_setAccessible, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @336, i32 0, i32 0), i32 1, i32 0 }, %41 zeroinitializer], align 16
@104 = private unnamed_addr constant [10 x i8] c"IS_STATIC\00", align 1
@105 = private unnamed_addr constant [10 x i8] c"IS_PUBLIC\00", align 1
@106 = private unnamed_addr constant [13 x i8] c"IS_PROTECTED\00", align 1
@107 = private unnamed_addr constant [11 x i8] c"IS_PRIVATE\00", align 1
@108 = private unnamed_addr constant [12 x i8] c"IS_ABSTRACT\00", align 1
@109 = private unnamed_addr constant [9 x i8] c"IS_FINAL\00", align 1
@110 = private unnamed_addr constant [16 x i8] c"ReflectionClass\00", align 1
@111 = internal constant [55 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_export, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @340, i32 0, i32 0), i32 2, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class___construct, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @341, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @257, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isInternal, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @258, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isUserDefined, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @342, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isAnonymous, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @343, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isInstantiable, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @344, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isCloneable, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @267, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getFileName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @274, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getStartLine, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @264, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getEndLine, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @263, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getDocComment, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @345, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getConstructor, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @346, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_hasMethod, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @347, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @348, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getMethod, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @349, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @350, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getMethods, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @351, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @352, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_hasProperty, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @353, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @354, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getProperty, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @355, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @356, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getProperties, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @357, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @358, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_hasConstant, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @359, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @360, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getConstants, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @361, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getReflectionConstants, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @362, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getConstant, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @363, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @364, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getReflectionConstant, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @363, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @365, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getInterfaces, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @366, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getInterfaceNames, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @367, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isInterface, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @368, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getTraits, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @369, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getTraitNames, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @370, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getTraitAliases, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @371, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isTrait, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @325, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isAbstract, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @326, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isFinal, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @331, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getModifiers, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @372, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isInstance, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @373, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @374, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_newInstance, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @375, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @376, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_newInstanceWithoutConstructor, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @377, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @378, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_newInstanceArgs, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @379, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @380, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getParentClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @381, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isSubclassOf, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @382, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @383, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getStaticProperties, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @384, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getStaticPropertyValue, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @385, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @386, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_setStaticPropertyValue, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @387, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @388, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getDefaultProperties, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @389, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isIterable, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @390, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_isIterable, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @391, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_implementsInterface, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @392, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @265, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getExtension, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @266, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getExtensionName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @254, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_inNamespace, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @269, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getNamespaceName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @273, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_getShortName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@112 = private unnamed_addr constant [21 x i8] c"IS_IMPLICIT_ABSTRACT\00", align 1
@113 = private unnamed_addr constant [21 x i8] c"IS_EXPLICIT_ABSTRACT\00", align 1
@114 = private unnamed_addr constant [17 x i8] c"ReflectionObject\00", align 1
@115 = internal constant [3 x %41] [%41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_object_export, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @397, i32 0, i32 0), i32 2, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_object___construct, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @398, i32 0, i32 0), i32 1, i32 0 }, %41 zeroinitializer], align 16
@116 = private unnamed_addr constant [19 x i8] c"ReflectionProperty\00", align 1
@117 = internal constant [17 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_export, %42* getelementptr inbounds ([4 x %42], [4 x %42]* @399, i32 0, i32 0), i32 3, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property___construct, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @400, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_getValue, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @402, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @403, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_setValue, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @404, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @322, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_isPublic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @323, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_isPrivate, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @324, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_isProtected, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @327, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_isStatic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @405, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_isDefault, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @331, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_getModifiers, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @304, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_getDeclaringClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @263, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_getDocComment, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @335, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_property_setAccessible, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @406, i32 0, i32 0), i32 1, i32 0 }, %41 zeroinitializer], align 16
@118 = private unnamed_addr constant [24 x i8] c"ReflectionClassConstant\00", align 1
@119 = internal constant [13 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_export, %42* getelementptr inbounds ([4 x %42], [4 x %42]* @408, i32 0, i32 0), i32 3, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant___construct, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @409, i32 0, i32 0), i32 2, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_getValue, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @322, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_isPublic, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @323, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_isPrivate, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @324, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_isProtected, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @331, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_getModifiers, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @304, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_getDeclaringClass, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @263, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_class_constant_getDocComment, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@120 = private unnamed_addr constant [20 x i8] c"ReflectionExtension\00", align 1
@121 = internal constant [16 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_export, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @410, i32 0, i32 0), i32 2, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension___construct, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @411, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @412, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getVersion, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @413, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getFunctions, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @360, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getConstants, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @414, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getINIEntries, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @415, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getClasses, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @416, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getClassNames, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @417, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_getDependencies, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @418, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_info, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @419, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_isPersistent, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @420, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_extension_isTemporary, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@122 = private unnamed_addr constant [24 x i8] c"ReflectionZendExtension\00", align 1
@123 = internal constant [10 x %41] [%41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_reflection___clone, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 1028 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension_export, %42* getelementptr inbounds ([3 x %42], [3 x %42]* @410, i32 0, i32 0), i32 2, i32 257 }, %41 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension___construct, %42* getelementptr inbounds ([2 x %42], [2 x %42]* @421, i32 0, i32 0), i32 1, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension___toString, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension_getName, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @412, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension_getVersion, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @422, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension_getAuthor, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @423, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension_getURL, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @424, i32 0, i32 0), void (%23*, %4*)* @zim_reflection_zend_extension_getCopyright, %42* getelementptr inbounds ([1 x %42], [1 x %42]* @252, i32 0, i32 0), i32 0, i32 0 }, %41 zeroinitializer], align 16
@124 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@125 = private unnamed_addr constant [8 x i8] c"Version\00", align 1
@126 = private unnamed_addr constant [48 x i8] c"$Id: fe5f2178c6eb97631d3f8f03ceb9eddb88e664c7 $\00", align 1
@127 = private unnamed_addr constant [11 x i8] c"7.2.28-dev\00", align 1
@128 = private unnamed_addr constant [16 x i8] c"API20170718,NTS\00", align 1
@reflection_module_entry = hidden local_unnamed_addr global %39 { i16 168, i32 20170718, i8 0, i8 0, %37* null, %40* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i32 0, i32 0), %41* getelementptr inbounds ([1 x %41], [1 x %41]* @reflection_ext_functions, i32 0, i32 0), i32 (i32, i32)* @zm_startup_reflection, i32 (i32, i32)* null, i32 (i32, i32)* null, i32 (i32, i32)* null, void (%39*)* @zm_info_reflection, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @127, i32 0, i32 0), i64 0, i8* null, void (i8*)* null, void (i8*)* null, i32 ()* null, i32 0, i8 0, i8* null, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @128, i32 0, i32 0) }, align 8
@129 = private unnamed_addr constant [4 x i8] c"z|b\00", align 1
@130 = private unnamed_addr constant [5 x i8] c"zz|b\00", align 1
@131 = private unnamed_addr constant [27 x i8] c"Could not create reflector\00", align 1
@132 = private unnamed_addr constant [19 x i8] c"reflection::export\00", align 1
@133 = private unnamed_addr constant [39 x i8] c"Could not execute reflection::export()\00", align 1
@134 = private unnamed_addr constant [6 x i8] c"%s%s\0A\00", align 1
@135 = private unnamed_addr constant [11 x i8] c"Closure [ \00", align 1
@136 = private unnamed_addr constant [10 x i8] c"Method [ \00", align 1
@137 = private unnamed_addr constant [12 x i8] c"Function [ \00", align 1
@138 = private unnamed_addr constant [6 x i8] c"<user\00", align 1
@139 = private unnamed_addr constant [10 x i8] c"<internal\00", align 1
@140 = private unnamed_addr constant [13 x i8] c", deprecated\00", align 1
@141 = private unnamed_addr constant [4 x i8] c":%s\00", align 1
@142 = private unnamed_addr constant [14 x i8] c", inherits %s\00", align 1
@143 = private unnamed_addr constant [16 x i8] c", overwrites %s\00", align 1
@144 = private unnamed_addr constant [15 x i8] c", prototype %s\00", align 1
@145 = private unnamed_addr constant [7 x i8] c", ctor\00", align 1
@146 = private unnamed_addr constant [7 x i8] c", dtor\00", align 1
@147 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@148 = private unnamed_addr constant [10 x i8] c"abstract \00", align 1
@149 = private unnamed_addr constant [7 x i8] c"final \00", align 1
@150 = private unnamed_addr constant [8 x i8] c"static \00", align 1
@151 = private unnamed_addr constant [8 x i8] c"public \00", align 1
@152 = private unnamed_addr constant [11 x i8] c"protected \00", align 1
@153 = private unnamed_addr constant [20 x i8] c"<visibility error> \00", align 1
@154 = private unnamed_addr constant [8 x i8] c"method \00", align 1
@155 = private unnamed_addr constant [10 x i8] c"function \00", align 1
@156 = private unnamed_addr constant [8 x i8] c"%s ] {\0A\00", align 1
@157 = private unnamed_addr constant [19 x i8] c"%s  @@ %s %d - %d\0A\00", align 1
@158 = private unnamed_addr constant [5 x i8] c"%s  \00", align 1
@159 = private unnamed_addr constant [16 x i8] c"  %s- Return [ \00", align 1
@160 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@161 = private unnamed_addr constant [9 x i8] c"or NULL \00", align 1
@162 = private unnamed_addr constant [5 x i8] c"%s}\0A\00", align 1
@163 = private unnamed_addr constant [28 x i8] c"%s- Bound Variables [%d] {\0A\00", align 1
@164 = private unnamed_addr constant [28 x i8] c"%s    Variable #%d [ $%s ]\0A\00", align 1
@165 = private unnamed_addr constant [23 x i8] c"%s- Parameters [%d] {\0A\00", align 1
@166 = private unnamed_addr constant [17 x i8] c"Parameter #%d [ \00", align 1
@167 = private unnamed_addr constant [12 x i8] c"<optional> \00", align 1
@168 = private unnamed_addr constant [12 x i8] c"<required> \00", align 1
@169 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@170 = private unnamed_addr constant [4 x i8] c"$%s\00", align 1
@171 = private unnamed_addr constant [9 x i8] c"$param%d\00", align 1
@172 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@173 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@174 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@175 = private unnamed_addr constant [54 x i8] c"Cannot determine default value for internal functions\00", align 1
@176 = private unnamed_addr constant [53 x i8] c"Internal error: Failed to retrieve the default value\00", align 1
@177 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@178 = private unnamed_addr constant [42 x i8] c"Trying to invoke abstract method %s::%s()\00", align 1
@179 = private unnamed_addr constant [50 x i8] c"Trying to invoke %s method %s::%s() from scope %s\00", align 1
@180 = private unnamed_addr constant [4 x i8] c"o!*\00", align 1
@181 = private unnamed_addr constant [4 x i8] c"o!a\00", align 1
@182 = private unnamed_addr constant [62 x i8] c"Trying to invoke non static method %s::%s() without an object\00", align 1
@183 = private unnamed_addr constant [37 x i8] c"Invocation of method %s::%s() failed\00", align 1
@184 = private unnamed_addr constant [35 x i8] c"%sConstant [ %s %s %s ] { Array }\0A\00", align 1
@185 = private unnamed_addr constant [32 x i8] c"%sConstant [ %s %s %s ] { %s }\0A\00", align 1
@186 = private unnamed_addr constant [3 x i8] c"z/\00", align 1
@187 = private unnamed_addr constant [7 x i8] c"%s    \00", align 1
@188 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@189 = private unnamed_addr constant [21 x i8] c"%sObject of class [ \00", align 1
@190 = private unnamed_addr constant [6 x i8] c"Class\00", align 1
@191 = private unnamed_addr constant [10 x i8] c"Interface\00", align 1
@192 = private unnamed_addr constant [6 x i8] c"Trait\00", align 1
@193 = private unnamed_addr constant [8 x i8] c"%s%s [ \00", align 1
@194 = private unnamed_addr constant [15 x i8] c"<iterateable> \00", align 1
@195 = private unnamed_addr constant [11 x i8] c"interface \00", align 1
@196 = private unnamed_addr constant [7 x i8] c"trait \00", align 1
@197 = private unnamed_addr constant [7 x i8] c"class \00", align 1
@198 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@199 = private unnamed_addr constant [12 x i8] c" extends %s\00", align 1
@200 = private unnamed_addr constant [15 x i8] c" implements %s\00", align 1
@201 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@202 = private unnamed_addr constant [6 x i8] c" ] {\0A\00", align 1
@203 = private unnamed_addr constant [17 x i8] c"%s  @@ %s %d-%d\0A\00", align 1
@204 = private unnamed_addr constant [24 x i8] c"%s  - Constants [%d] {\0A\00", align 1
@205 = private unnamed_addr constant [7 x i8] c"%s  }\0A\00", align 1
@206 = private unnamed_addr constant [33 x i8] c"\0A%s  - Static properties [%d] {\0A\00", align 1
@207 = private unnamed_addr constant [29 x i8] c"\0A%s  - Static methods [%d] {\00", align 1
@208 = private unnamed_addr constant [26 x i8] c"\0A%s  - Properties [%d] {\0A\00", align 1
@209 = private unnamed_addr constant [34 x i8] c"\0A%s  - Dynamic properties [%d] {\0A\00", align 1
@210 = private unnamed_addr constant [22 x i8] c"\0A%s  - Methods [%d] {\00", align 1
@211 = private unnamed_addr constant [22 x i8] c"\0A%s  - Methods [0] {\0A\00", align 1
@212 = private unnamed_addr constant [14 x i8] c"%sProperty [ \00", align 1
@213 = private unnamed_addr constant [21 x i8] c"<dynamic> public $%s\00", align 1
@214 = private unnamed_addr constant [12 x i8] c"<implicit> \00", align 1
@215 = private unnamed_addr constant [11 x i8] c"<default> \00", align 1
@216 = private unnamed_addr constant [4 x i8] c" ]\0A\00", align 1
@217 = private unnamed_addr constant [15 x i8] c"%sExtension [ \00", align 1
@218 = private unnamed_addr constant [13 x i8] c"<persistent>\00", align 1
@219 = private unnamed_addr constant [12 x i8] c"<temporary>\00", align 1
@220 = private unnamed_addr constant [34 x i8] c" extension #%d %s version %s ] {\0A\00", align 1
@221 = private unnamed_addr constant [13 x i8] c"<no_version>\00", align 1
@222 = private unnamed_addr constant [21 x i8] c"\0A  - Dependencies {\0A\00", align 1
@223 = private unnamed_addr constant [24 x i8] c"%s    Dependency [ %s (\00", align 1
@224 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@225 = private unnamed_addr constant [12 x i8] c"\0A  - INI {\0A\00", align 1
@226 = private unnamed_addr constant [23 x i8] c"\0A  - Constants [%d] {\0A\00", align 1
@227 = private unnamed_addr constant [18 x i8] c"\0A  - Functions {\0A\00", align 1
@228 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@229 = private unnamed_addr constant [20 x i8] c"\0A  - Classes [%d] {\00", align 1
@230 = private unnamed_addr constant [19 x i8] c"    %sEntry [ %s <\00", align 1
@231 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@232 = private unnamed_addr constant [2 x i8] c",\00", align 1
@233 = private unnamed_addr constant [9 x i8] c"%sPERDIR\00", align 1
@234 = private unnamed_addr constant [9 x i8] c"%sSYSTEM\00", align 1
@235 = private unnamed_addr constant [24 x i8] c"    %s  Current = '%s'\0A\00", align 1
@236 = private unnamed_addr constant [24 x i8] c"    %s  Default = '%s'\0A\00", align 1
@237 = private unnamed_addr constant [9 x i8] c"    %s}\0A\00", align 1
@238 = private unnamed_addr constant [36 x i8] c"%s    Constant [ %s %s ] { Array }\0A\00", align 1
@239 = private unnamed_addr constant [33 x i8] c"%s    Constant [ %s %s ] { %s }\0A\00", align 1
@240 = private unnamed_addr constant [23 x i8] c"%sZend Extension [ %s \00", align 1
@241 = private unnamed_addr constant [7 x i8] c"by %s \00", align 1
@242 = private unnamed_addr constant [6 x i8] c"<%s> \00", align 1
@243 = private unnamed_addr constant [38 x i8] c"Cannot set read-only property %s::$%s\00", align 1
@244 = private unnamed_addr constant [17 x i8] c"getModifierNames\00", align 1
@245 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @248, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@246 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@247 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @249, i32 0, i32 0), i64 ptrtoint ([10 x i8]* @87 to i64), i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@248 = private unnamed_addr constant [10 x i8] c"modifiers\00", align 1
@249 = private unnamed_addr constant [10 x i8] c"reflector\00", align 1
@250 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@251 = private unnamed_addr constant [11 x i8] c"__toString\00", align 1
@252 = internal constant [1 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@253 = private unnamed_addr constant [8 x i8] c"__clone\00", align 1
@254 = private unnamed_addr constant [12 x i8] c"inNamespace\00", align 1
@255 = private unnamed_addr constant [10 x i8] c"isClosure\00", align 1
@256 = private unnamed_addr constant [13 x i8] c"isDeprecated\00", align 1
@257 = private unnamed_addr constant [11 x i8] c"isInternal\00", align 1
@258 = private unnamed_addr constant [14 x i8] c"isUserDefined\00", align 1
@259 = private unnamed_addr constant [12 x i8] c"isGenerator\00", align 1
@260 = private unnamed_addr constant [11 x i8] c"isVariadic\00", align 1
@261 = private unnamed_addr constant [15 x i8] c"getClosureThis\00", align 1
@262 = private unnamed_addr constant [21 x i8] c"getClosureScopeClass\00", align 1
@263 = private unnamed_addr constant [14 x i8] c"getDocComment\00", align 1
@264 = private unnamed_addr constant [11 x i8] c"getEndLine\00", align 1
@265 = private unnamed_addr constant [13 x i8] c"getExtension\00", align 1
@266 = private unnamed_addr constant [17 x i8] c"getExtensionName\00", align 1
@267 = private unnamed_addr constant [12 x i8] c"getFileName\00", align 1
@268 = private unnamed_addr constant [8 x i8] c"getName\00", align 1
@269 = private unnamed_addr constant [17 x i8] c"getNamespaceName\00", align 1
@270 = private unnamed_addr constant [22 x i8] c"getNumberOfParameters\00", align 1
@271 = private unnamed_addr constant [30 x i8] c"getNumberOfRequiredParameters\00", align 1
@272 = private unnamed_addr constant [14 x i8] c"getParameters\00", align 1
@273 = private unnamed_addr constant [13 x i8] c"getShortName\00", align 1
@274 = private unnamed_addr constant [13 x i8] c"getStartLine\00", align 1
@275 = private unnamed_addr constant [19 x i8] c"getStaticVariables\00", align 1
@276 = private unnamed_addr constant [17 x i8] c"returnsReference\00", align 1
@277 = private unnamed_addr constant [14 x i8] c"hasReturnType\00", align 1
@278 = private unnamed_addr constant [14 x i8] c"getReturnType\00", align 1
@279 = private unnamed_addr constant [12 x i8] c"__construct\00", align 1
@280 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@281 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@282 = private unnamed_addr constant [11 x i8] c"isDisabled\00", align 1
@283 = private unnamed_addr constant [7 x i8] c"invoke\00", align 1
@284 = internal constant [2 x %42] [%42 zeroinitializer, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@285 = private unnamed_addr constant [11 x i8] c"invokeArgs\00", align 1
@286 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i64 14, i8 0, i8 0 }], align 16
@287 = private unnamed_addr constant [11 x i8] c"getClosure\00", align 1
@288 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@289 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @297, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@290 = private unnamed_addr constant [17 x i8] c"getExecutingLine\00", align 1
@291 = private unnamed_addr constant [17 x i8] c"getExecutingFile\00", align 1
@292 = private unnamed_addr constant [9 x i8] c"getTrace\00", align 1
@293 = internal constant [2 x %42] [%42 zeroinitializer, %42 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @298, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@294 = private unnamed_addr constant [12 x i8] c"getFunction\00", align 1
@295 = private unnamed_addr constant [8 x i8] c"getThis\00", align 1
@296 = private unnamed_addr constant [22 x i8] c"getExecutingGenerator\00", align 1
@297 = private unnamed_addr constant [10 x i8] c"generator\00", align 1
@298 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@299 = internal constant [4 x %42] [%42 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @317, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @318, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@300 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @317, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @318, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@301 = private unnamed_addr constant [20 x i8] c"isPassedByReference\00", align 1
@302 = private unnamed_addr constant [19 x i8] c"canBePassedByValue\00", align 1
@303 = private unnamed_addr constant [21 x i8] c"getDeclaringFunction\00", align 1
@304 = private unnamed_addr constant [18 x i8] c"getDeclaringClass\00", align 1
@305 = private unnamed_addr constant [9 x i8] c"getClass\00", align 1
@306 = private unnamed_addr constant [8 x i8] c"hasType\00", align 1
@307 = private unnamed_addr constant [8 x i8] c"getType\00", align 1
@308 = private unnamed_addr constant [8 x i8] c"isArray\00", align 1
@309 = private unnamed_addr constant [11 x i8] c"isCallable\00", align 1
@310 = private unnamed_addr constant [11 x i8] c"allowsNull\00", align 1
@311 = private unnamed_addr constant [12 x i8] c"getPosition\00", align 1
@312 = private unnamed_addr constant [11 x i8] c"isOptional\00", align 1
@313 = private unnamed_addr constant [24 x i8] c"isDefaultValueAvailable\00", align 1
@314 = private unnamed_addr constant [16 x i8] c"getDefaultValue\00", align 1
@315 = private unnamed_addr constant [23 x i8] c"isDefaultValueConstant\00", align 1
@316 = private unnamed_addr constant [28 x i8] c"getDefaultValueConstantName\00", align 1
@317 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@318 = private unnamed_addr constant [10 x i8] c"parameter\00", align 1
@319 = private unnamed_addr constant [10 x i8] c"isBuiltin\00", align 1
@320 = internal constant [4 x %42] [%42 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@321 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @337, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@322 = private unnamed_addr constant [9 x i8] c"isPublic\00", align 1
@323 = private unnamed_addr constant [10 x i8] c"isPrivate\00", align 1
@324 = private unnamed_addr constant [12 x i8] c"isProtected\00", align 1
@325 = private unnamed_addr constant [11 x i8] c"isAbstract\00", align 1
@326 = private unnamed_addr constant [8 x i8] c"isFinal\00", align 1
@327 = private unnamed_addr constant [9 x i8] c"isStatic\00", align 1
@328 = private unnamed_addr constant [14 x i8] c"isConstructor\00", align 1
@329 = private unnamed_addr constant [13 x i8] c"isDestructor\00", align 1
@330 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @338, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@331 = private unnamed_addr constant [13 x i8] c"getModifiers\00", align 1
@332 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @338, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@333 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @338, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i64 14, i8 0, i8 0 }], align 16
@334 = private unnamed_addr constant [13 x i8] c"getPrototype\00", align 1
@335 = private unnamed_addr constant [14 x i8] c"setAccessible\00", align 1
@336 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @339, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@337 = private unnamed_addr constant [16 x i8] c"class_or_method\00", align 1
@338 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@339 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@340 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @393, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@341 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @393, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@342 = private unnamed_addr constant [12 x i8] c"isAnonymous\00", align 1
@343 = private unnamed_addr constant [15 x i8] c"isInstantiable\00", align 1
@344 = private unnamed_addr constant [12 x i8] c"isCloneable\00", align 1
@345 = private unnamed_addr constant [15 x i8] c"getConstructor\00", align 1
@346 = private unnamed_addr constant [10 x i8] c"hasMethod\00", align 1
@347 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@348 = private unnamed_addr constant [10 x i8] c"getMethod\00", align 1
@349 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@350 = private unnamed_addr constant [11 x i8] c"getMethods\00", align 1
@351 = internal constant [2 x %42] [%42 zeroinitializer, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @394, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@352 = private unnamed_addr constant [12 x i8] c"hasProperty\00", align 1
@353 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@354 = private unnamed_addr constant [12 x i8] c"getProperty\00", align 1
@355 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@356 = private unnamed_addr constant [14 x i8] c"getProperties\00", align 1
@357 = internal constant [2 x %42] [%42 zeroinitializer, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @394, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@358 = private unnamed_addr constant [12 x i8] c"hasConstant\00", align 1
@359 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@360 = private unnamed_addr constant [13 x i8] c"getConstants\00", align 1
@361 = private unnamed_addr constant [23 x i8] c"getReflectionConstants\00", align 1
@362 = private unnamed_addr constant [12 x i8] c"getConstant\00", align 1
@363 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@364 = private unnamed_addr constant [22 x i8] c"getReflectionConstant\00", align 1
@365 = private unnamed_addr constant [14 x i8] c"getInterfaces\00", align 1
@366 = private unnamed_addr constant [18 x i8] c"getInterfaceNames\00", align 1
@367 = private unnamed_addr constant [12 x i8] c"isInterface\00", align 1
@368 = private unnamed_addr constant [10 x i8] c"getTraits\00", align 1
@369 = private unnamed_addr constant [14 x i8] c"getTraitNames\00", align 1
@370 = private unnamed_addr constant [16 x i8] c"getTraitAliases\00", align 1
@371 = private unnamed_addr constant [8 x i8] c"isTrait\00", align 1
@372 = private unnamed_addr constant [11 x i8] c"isInstance\00", align 1
@373 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @338, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@374 = private unnamed_addr constant [12 x i8] c"newInstance\00", align 1
@375 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@376 = private unnamed_addr constant [30 x i8] c"newInstanceWithoutConstructor\00", align 1
@377 = internal constant [1 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@378 = private unnamed_addr constant [16 x i8] c"newInstanceArgs\00", align 1
@379 = internal constant [2 x %42] [%42 zeroinitializer, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @288, i32 0, i32 0), i64 14, i8 0, i8 0 }], align 16
@380 = private unnamed_addr constant [15 x i8] c"getParentClass\00", align 1
@381 = private unnamed_addr constant [13 x i8] c"isSubclassOf\00", align 1
@382 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@383 = private unnamed_addr constant [20 x i8] c"getStaticProperties\00", align 1
@384 = private unnamed_addr constant [23 x i8] c"getStaticPropertyValue\00", align 1
@385 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @395, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@386 = private unnamed_addr constant [23 x i8] c"setStaticPropertyValue\00", align 1
@387 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @339, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@388 = private unnamed_addr constant [21 x i8] c"getDefaultProperties\00", align 1
@389 = private unnamed_addr constant [11 x i8] c"isIterable\00", align 1
@390 = private unnamed_addr constant [14 x i8] c"isIterateable\00", align 1
@391 = private unnamed_addr constant [20 x i8] c"implementsInterface\00", align 1
@392 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @396, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@393 = private unnamed_addr constant [9 x i8] c"argument\00", align 1
@394 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@395 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@396 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@397 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @393, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@398 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @393, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@399 = internal constant [4 x %42] [%42 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@400 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@401 = private unnamed_addr constant [9 x i8] c"getValue\00", align 1
@402 = internal constant [2 x %42] [%42 zeroinitializer, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @338, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@403 = private unnamed_addr constant [9 x i8] c"setValue\00", align 1
@404 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @338, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @339, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@405 = private unnamed_addr constant [10 x i8] c"isDefault\00", align 1
@406 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @407, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@407 = private unnamed_addr constant [8 x i8] c"visible\00", align 1
@408 = internal constant [4 x %42] [%42 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@409 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@410 = internal constant [3 x %42] [%42 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @250, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@411 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@412 = private unnamed_addr constant [11 x i8] c"getVersion\00", align 1
@413 = private unnamed_addr constant [13 x i8] c"getFunctions\00", align 1
@414 = private unnamed_addr constant [14 x i8] c"getINIEntries\00", align 1
@415 = private unnamed_addr constant [11 x i8] c"getClasses\00", align 1
@416 = private unnamed_addr constant [14 x i8] c"getClassNames\00", align 1
@417 = private unnamed_addr constant [16 x i8] c"getDependencies\00", align 1
@418 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@419 = private unnamed_addr constant [13 x i8] c"isPersistent\00", align 1
@420 = private unnamed_addr constant [12 x i8] c"isTemporary\00", align 1
@421 = internal constant [2 x %42] [%42 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %42 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@422 = private unnamed_addr constant [10 x i8] c"getAuthor\00", align 1
@423 = private unnamed_addr constant [7 x i8] c"getURL\00", align 1
@424 = private unnamed_addr constant [13 x i8] c"getCopyright\00", align 1
@switch.table.zim_reflection_extension_getDependencies = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @74, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @75, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @76, i64 0, i64 0)]
@switch.table.zim_reflection_extension_getDependencies.1 = private unnamed_addr constant [3 x i64] [i64 8, i64 9, i64 8]

; Function Attrs: nounwind uwtable
define dso_local void @zend_reflection_class_factory(%0* %0, %4* %1) local_unnamed_addr #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4, align 8
  %5 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %0, %0* %0, i64 0, i32 1
  %7 = load %1*, %1** %6, align 8
  %8 = bitcast %4* %3 to %1**
  store %1* %7, %1** %8, align 8
  %9 = getelementptr inbounds %1, %1* %7, i64 0, i32 0, i32 1
  %10 = bitcast %3* %9 to %57*
  %11 = getelementptr inbounds %57, %57* %10, i64 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %1, %1* %7, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 8
  br label %19

19:                                               ; preds = %2, %15
  %20 = phi i32 [ 5126, %15 ], [ 6, %2 ]
  %21 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %20, i32* %21, align 8
  %22 = load %0*, %0** @reflection_class_ptr, align 8
  %23 = tail call i32 @_object_init_ex(%4* %1, %0* %22) #9
  %24 = bitcast %4* %1 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = getelementptr inbounds %0, %0* %0, i64 0, i32 0
  %27 = getelementptr inbounds %21, %21* %25, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5
  %31 = bitcast [1 x %4]* %30 to %0**
  store %0* %0, %0** %31, align 8
  %32 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  %33 = tail call noalias i8* @_emalloc(i64 32) #10
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 6, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %33, i64 8
  %38 = bitcast i8* %37 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %38, align 8
  %39 = getelementptr inbounds i8, i8* %33, i64 24
  %40 = bitcast i8* %39 to i32*
  store i32 1701667182, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %33, i64 28
  store i8 0, i8* %41, align 1
  %42 = bitcast %4* %4 to i8**
  store i8* %33, i8** %42, align 8
  %43 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 5126, i32* %43, align 8
  call void @zend_std_write_property(%4* %1, %4* nonnull %4, %4* nonnull %3, i8** null) #9
  %44 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %45 = bitcast %6* %44 to %58*
  %46 = getelementptr inbounds %58, %58* %45, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = and i8 %47, 4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %19
  %51 = bitcast %4* %3 to %59**
  %52 = load %59*, %59** %51, align 8
  %53 = getelementptr inbounds %59, %59* %52, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, -1
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %19, %50
  call void @_zval_ptr_dtor(%4* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local void @zend_std_write_property(%4*, %4*, %4*, i8**) local_unnamed_addr #2

declare dso_local void @_zval_ptr_dtor(%4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection___clone(%23* nocapture readnone %0, %4* nocapture readnone %1) #0 {
  %3 = load %0*, %0** @reflection_exception_ptr, align 8
  %4 = tail call %21* @zend_throw_exception(%0* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1, i64 0, i64 0), i64 0) #9
  ret void
}

declare dso_local %21* @zend_throw_exception(%0*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_export(%23* %0, %4* nocapture %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4, align 8
  %5 = alloca i8, align 1
  %6 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 0, i8* %5, align 1
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = icmp ugt i32 %10, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  tail call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %9, i32 1, i32 2) #9
  br label %118

13:                                               ; preds = %2
  %14 = getelementptr inbounds %23, %23* %0, i64 0, i32 7
  %15 = getelementptr inbounds i8**, i8*** %14, i64 2
  %16 = bitcast i8*** %15 to %4*
  %17 = load %0*, %0** @reflector_ptr, align 8
  %18 = getelementptr inbounds i8**, i8*** %14, i64 3
  %19 = bitcast i8*** %18 to i8*
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %33

22:                                               ; preds = %13
  %23 = icmp eq %0* %17, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %22
  %25 = bitcast i8*** %15 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 0, i32 2
  %28 = load %0*, %0** %27, align 8
  %29 = tail call zeroext i8 @instanceof_function(%0* %28, %0* nonnull %17) #9
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %24
  %32 = load %0*, %0** @reflector_ptr, align 8
  br label %33

33:                                               ; preds = %31, %13
  %34 = phi %0* [ %32, %31 ], [ %17, %13 ]
  %35 = icmp eq %0* %34, null
  br i1 %35, label %54, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %0, %0* %34, i64 0, i32 1
  %38 = load %1*, %1** %37, align 8
  %39 = getelementptr inbounds %1, %1* %38, i64 0, i32 3, i64 0
  tail call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 1, i8* nonnull %39, %4* nonnull %16) #9
  br label %118

40:                                               ; preds = %24, %22
  %41 = icmp slt i32 %9, 2
  br i1 %41, label %58, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8**, i8*** %14, i64 4
  %44 = bitcast i8*** %43 to %4*
  %45 = getelementptr inbounds i8**, i8*** %14, i64 5
  %46 = bitcast i8*** %45 to i8*
  %47 = load i8, i8* %46, align 8
  switch i8 %47, label %51 [
    i8 3, label %49
    i8 2, label %48
  ]

48:                                               ; preds = %42
  br label %49

49:                                               ; preds = %42, %48
  %50 = phi i8 [ 1, %42 ], [ 0, %48 ]
  store i8 %50, i8* %5, align 1
  br label %58

51:                                               ; preds = %42
  %52 = call i32 @zend_parse_arg_bool_slow(%4* nonnull %44, i8* nonnull %5) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %51, %33
  %55 = phi i32 [ 2, %51 ], [ 1, %33 ]
  %56 = phi %4* [ %44, %51 ], [ %16, %33 ]
  %57 = phi i32 [ 1, %51 ], [ 7, %33 ]
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %55, i32 %57, %4* %56) #9
  br label %118

58:                                               ; preds = %51, %40, %49
  %59 = call noalias i8* @_emalloc(i64 40) #10
  %60 = bitcast i8* %59 to i32*
  store i32 1, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 4
  %62 = bitcast i8* %61 to i32*
  store i32 6, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %59, i64 8
  %64 = bitcast i8* %63 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10>, <2 x i64>* %64, align 8
  %65 = getelementptr inbounds i8, i8* %59, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0), i64 10, i1 false) #9
  %66 = getelementptr inbounds i8, i8* %59, i64 34
  store i8 0, i8* %66, align 1
  %67 = bitcast %4* %3 to i8**
  store i8* %59, i8** %67, align 8
  %68 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 5126, i32* %68, align 8
  %69 = call i32 @_call_user_function_ex(%4* nonnull %16, %4* nonnull %3, %4* nonnull %4, i32 0, %4* null, i32 0) #9
  %70 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %71 = bitcast %6* %70 to %58*
  %72 = getelementptr inbounds %58, %58* %71, i64 0, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = and i8 %73, 4
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %58
  %77 = bitcast %4* %3 to %59**
  %78 = load %59*, %59** %77, align 8
  %79 = getelementptr inbounds %59, %59* %78, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, -1
  store i32 %81, i32* %79, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  %84 = load %59*, %59** %77, align 8
  call void @_zval_dtor_func(%59* %84) #9
  br label %85

85:                                               ; preds = %58, %76, %83
  %86 = icmp eq i32 %69, -1
  br i1 %86, label %87, label %90

87:                                               ; preds = %85
  %88 = load %0*, %0** @reflection_exception_ptr, align 8
  %89 = call %21* @zend_throw_exception(%0* %88, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @3, i64 0, i64 0), i64 0) #9
  br label %118

90:                                               ; preds = %85
  %91 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %92 = bitcast %6* %91 to i8*
  %93 = load i8, i8* %92, align 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %104

95:                                               ; preds = %90
  %96 = bitcast i8*** %15 to %21**
  %97 = load %21*, %21** %96, align 8
  %98 = getelementptr inbounds %21, %21* %97, i64 0, i32 2
  %99 = load %0*, %0** %98, align 8
  %100 = getelementptr inbounds %0, %0* %99, i64 0, i32 1
  %101 = load %1*, %1** %100, align 8
  %102 = getelementptr inbounds %1, %1* %101, i64 0, i32 3, i64 0
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @4, i64 0, i64 0), i8* nonnull %102) #9
  %103 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %103, align 8
  br label %118

104:                                              ; preds = %90
  %105 = load i8, i8* %5, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %4, %4* %4, i64 0, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %109, i64* %112, align 8
  %113 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %111, i32* %113, align 8
  br label %118

114:                                              ; preds = %104
  %115 = call i64 @zend_print_zval(%4* nonnull %4, i32 0) #9
  %116 = load i64 (i8*, ...)*, i64 (i8*, ...)** @zend_printf, align 8
  %117 = call i64 (i8*, ...) %116(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  call void @_zval_ptr_dtor(%4* nonnull %4) #9
  br label %118

118:                                              ; preds = %12, %107, %114, %36, %54, %95, %87
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare dso_local void @zend_wrong_parameters_count_error(i8 zeroext, i32, i32, i32) local_unnamed_addr #2

declare dso_local void @zend_wrong_parameter_class_error(i8 zeroext, i32, i8*, %4*) local_unnamed_addr #2

declare dso_local void @zend_wrong_parameter_type_error(i8 zeroext, i32, i32, %4*) local_unnamed_addr #2

declare dso_local i32 @_call_user_function_ex(%4*, %4*, %4*, i32, %4*, i32) local_unnamed_addr #2

declare dso_local void @php_error_docref0(i8*, i32, i8*, ...) local_unnamed_addr #2

declare dso_local i64 @zend_print_zval(%4*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_getModifierNames(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i64 0, i64 0), i64* nonnull %3) #9
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = call i32 @_array_init(%4* %1, i32 0) #9
  %11 = load i64, i64* %3, align 8
  %12 = and i64 %11, 34
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @7, i64 0, i64 0), i64 8) #9
  %16 = load i64, i64* %3, align 8
  br label %17

17:                                               ; preds = %9, %14
  %18 = phi i64 [ %11, %9 ], [ %16, %14 ]
  %19 = and i64 %18, 4
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0), i64 5) #9
  %23 = load i64, i64* %3, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i64 [ %18, %17 ], [ %23, %21 ]
  %26 = and i64 %25, 4096
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @9, i64 0, i64 0), i64 6) #9
  %30 = load i64, i64* %3, align 8
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i64 [ %25, %24 ], [ %30, %28 ]
  %33 = and i64 %32, 1792
  %34 = trunc i64 %33 to i11
  switch i11 %34, label %41 [
    i11 256, label %35
    i11 -1024, label %37
    i11 512, label %39
  ]

35:                                               ; preds = %31
  %36 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @9, i64 0, i64 0), i64 6) #9
  br label %41

37:                                               ; preds = %31
  %38 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @10, i64 0, i64 0), i64 7) #9
  br label %41

39:                                               ; preds = %31
  %40 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @11, i64 0, i64 0), i64 9) #9
  br label %41

41:                                               ; preds = %31, %39, %37, %35
  %42 = load i64, i64* %3, align 8
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = call i32 @add_next_index_stringl(%4* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i64 6) #9
  br label %47

47:                                               ; preds = %45, %41, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

declare dso_local i32 @zend_parse_parameters(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @_array_init(%4*, i32) local_unnamed_addr #2

declare dso_local i32 @add_next_index_stringl(%4*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_function_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @425(i32 %0, %4* nocapture %1, %0* %2, i32 %3) unnamed_addr #0 {
  %5 = alloca %4, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %4*, align 8
  %8 = alloca %4, align 8
  %9 = alloca [2 x %4], align 16
  %10 = alloca i32, align 4
  %11 = alloca %60, align 8
  %12 = alloca %61, align 8
  %13 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = bitcast [2 x %4]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  %18 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #9
  store i32 0, i32* %10, align 4
  %19 = bitcast %60* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #9
  %20 = getelementptr inbounds %61, %61* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #9
  %21 = icmp eq i32 %3, 1
  br i1 %21, label %22, label %33

22:                                               ; preds = %4
  %23 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @129, i64 0, i64 0), %4** nonnull %6, i32* nonnull %10) #9
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %133, label %25

25:                                               ; preds = %22
  %26 = load %4*, %4** %6, align 8
  %27 = getelementptr inbounds %4, %4* %26, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %4, %4* %26, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0, i32 0, i32 0
  store i64 %28, i64* %31, align 16
  %32 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 %30, i32* %32, align 8
  br label %50

33:                                               ; preds = %4
  %34 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @130, i64 0, i64 0), %4** nonnull %6, %4** nonnull %7, i32* nonnull %10) #9
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %133, label %36

36:                                               ; preds = %33
  %37 = load %4*, %4** %6, align 8
  %38 = getelementptr inbounds %4, %4* %37, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %4, %4* %37, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0, i32 0, i32 0
  store i64 %39, i64* %42, align 16
  %43 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 %41, i32* %43, align 8
  %44 = load %4*, %4** %7, align 8
  %45 = getelementptr inbounds %4, %4* %44, i64 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %4, %4* %44, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 1, i32 0, i32 0
  store i64 %46, i64* %49, align 16
  br label %50

50:                                               ; preds = %36, %25
  %51 = phi i32 [ %48, %36 ], [ 1, %25 ]
  %52 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 %51, i32* %52, align 8
  %53 = call i32 @_object_and_properties_init(%4* nonnull %5, %0* %2, %8* null) #9
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = load %0*, %0** @reflection_exception_ptr, align 8
  %57 = call %21* @zend_throw_exception(%0* %56, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @131, i64 0, i64 0), i64 0) #9
  br label %133

58:                                               ; preds = %50
  %59 = getelementptr inbounds %60, %60* %11, i64 0, i32 0
  store i64 56, i64* %59, align 8
  %60 = getelementptr inbounds %60, %60* %11, i64 0, i32 1
  %61 = getelementptr inbounds %60, %60* %11, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %4, %4* %5, i64 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %60, %60* %11, i64 0, i32 4
  %65 = bitcast %21** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %60, %60* %11, i64 0, i32 2
  store %4* %8, %4** %66, align 8
  %67 = getelementptr inbounds %60, %60* %11, i64 0, i32 6
  store i32 %3, i32* %67, align 4
  %68 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0
  %69 = getelementptr inbounds %60, %60* %11, i64 0, i32 3
  store %4* %68, %4** %69, align 8
  %70 = getelementptr inbounds %60, %60* %11, i64 0, i32 5
  store i8 1, i8* %70, align 8
  store i8 1, i8* %20, align 8
  %71 = getelementptr inbounds %0, %0* %2, i64 0, i32 13
  %72 = bitcast %11** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %61, %61* %12, i64 0, i32 1
  %75 = bitcast %11** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %61, %61* %12, i64 0, i32 2
  store %0* %2, %0** %76, align 8
  %77 = inttoptr i64 %63 to %21*
  %78 = getelementptr inbounds %21, %21* %77, i64 0, i32 2
  %79 = bitcast %0** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %61, %61* %12, i64 0, i32 3
  %82 = bitcast %0** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %61, %61* %12, i64 0, i32 4
  %84 = bitcast %21** %83 to i64*
  store i64 %63, i64* %84, align 8
  %85 = call i32 @zend_call_function(%60* nonnull %11, %61* nonnull %12) #9
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  %86 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %87 = icmp eq %21* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %58
  call void @_zval_ptr_dtor(%4* nonnull %5) #9
  br label %133

89:                                               ; preds = %58
  %90 = icmp eq i32 %85, -1
  br i1 %90, label %91, label %94

91:                                               ; preds = %89
  call void @_zval_ptr_dtor(%4* nonnull %5) #9
  %92 = load %0*, %0** @reflection_exception_ptr, align 8
  %93 = call %21* @zend_throw_exception(%0* %92, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @131, i64 0, i64 0), i64 0) #9
  br label %133

94:                                               ; preds = %89
  %95 = load i64, i64* %62, align 8
  %96 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0, i32 0, i32 0
  store i64 %95, i64* %98, align 16
  %99 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 %97, i32* %99, align 8
  %100 = load i32, i32* %10, align 4
  %101 = icmp eq i32 %100, 0
  %102 = select i1 %101, i32 2, i32 3
  %103 = getelementptr inbounds [2 x %4], [2 x %4]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 %102, i32* %103, align 8
  %104 = call noalias i8* @_emalloc(i64 48) #10
  %105 = bitcast i8* %104 to i32*
  store i32 1, i32* %105, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 4
  %107 = bitcast i8* %106 to i32*
  store i32 6, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %104, i64 8
  %109 = bitcast i8* %108 to <2 x i64>*
  store <2 x i64> <i64 0, i64 18>, <2 x i64>* %109, align 8
  %110 = getelementptr inbounds i8, i8* %104, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @132, i64 0, i64 0), i64 18, i1 false) #9
  %111 = getelementptr inbounds i8, i8* %104, i64 42
  store i8 0, i8* %111, align 1
  %112 = bitcast %4* %60 to i8**
  store i8* %104, i8** %112, align 8
  store i32 5126, i32* %61, align 8
  store %21* null, %21** %64, align 8
  store %4* %8, %4** %66, align 8
  store i32 2, i32* %67, align 4
  store %4* %68, %4** %69, align 8
  store i8 1, i8* %70, align 8
  %113 = call i32 @zend_call_function(%60* nonnull %11, %61* null) #9
  call void @_zval_ptr_dtor(%4* nonnull %60) #9
  %114 = icmp eq i32 %113, -1
  %115 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %116 = icmp eq %21* %115, null
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %121

118:                                              ; preds = %94
  call void @_zval_ptr_dtor(%4* nonnull %5) #9
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  %119 = load %0*, %0** @reflection_exception_ptr, align 8
  %120 = call %21* @zend_throw_exception(%0* %119, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @133, i64 0, i64 0), i64 0) #9
  br label %133

121:                                              ; preds = %94
  %122 = load i32, i32* %10, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %4, %4* %8, i64 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %4, %4* %8, i64 0, i32 1, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %126, i64* %129, align 8
  %130 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %128, i32* %130, align 8
  br label %132

131:                                              ; preds = %121
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  br label %132

132:                                              ; preds = %131, %124
  call void @_zval_ptr_dtor(%4* nonnull %5) #9
  br label %133

133:                                              ; preds = %33, %22, %132, %118, %91, %88, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %4, align 8
  %8 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store %4* null, %4** %4, align 8
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %13 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %14 = bitcast %6* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 8
  %17 = select i1 %16, %4* %12, %4* null
  %18 = bitcast %4* %17 to %21**
  %19 = load %21*, %21** %18, align 8
  %20 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = load %0*, %0** @zend_ce_closure, align 8
  %23 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), %4** nonnull %4, %0* %22) #9
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %2
  %26 = load %4*, %4** %4, align 8
  %27 = call %11* @zend_get_closure_method_def(%4* %26) #9
  %28 = bitcast %4** %4 to %59***
  %29 = load %59**, %59*** %28, align 8
  %30 = load %59*, %59** %29, align 8
  %31 = getelementptr inbounds %59, %59* %30, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %31, align 4
  br label %66

34:                                               ; preds = %2
  %35 = load i32, i32* %20, align 4
  %36 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0), i8** nonnull %5, i64* nonnull %6) #9
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %128, label %38

38:                                               ; preds = %34
  %39 = load i8*, i8** %5, align 8
  %40 = load i64, i64* %6, align 8
  %41 = call i8* @zend_str_tolower_dup(i8* %39, i64 %40) #9
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 92
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = load i64, i64* %6, align 8
  br label %50

46:                                               ; preds = %38
  %47 = getelementptr inbounds i8, i8* %41, i64 1
  %48 = load i64, i64* %6, align 8
  %49 = add i64 %48, -1
  store i64 %49, i64* %6, align 8
  br label %50

50:                                               ; preds = %44, %46
  %51 = phi i64 [ %49, %46 ], [ %45, %44 ]
  %52 = phi i8* [ %47, %46 ], [ %41, %44 ]
  %53 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 10), align 8
  %54 = call %4* @zend_hash_str_find(%8* %53, i8* %52, i64 %51) #9
  %55 = icmp eq %4* %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  call void @_efree(i8* %41) #9
  br label %62

57:                                               ; preds = %50
  %58 = bitcast %4* %54 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = bitcast i8* %59 to %11*
  %61 = icmp eq i8* %59, null
  call void @_efree(i8* %41) #9
  br i1 %61, label %62, label %66

62:                                               ; preds = %56, %57
  %63 = load %0*, %0** @reflection_exception_ptr, align 8
  %64 = load i8*, i8** %5, align 8
  %65 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %63, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @15, i64 0, i64 0), i8* %64) #9
  br label %128

66:                                               ; preds = %25, %57
  %67 = phi %11* [ %27, %25 ], [ %60, %57 ]
  %68 = getelementptr inbounds %11, %11* %67, i64 0, i32 0, i32 3
  %69 = load %1*, %1** %68, align 8
  %70 = bitcast %4* %3 to %1**
  store %1* %69, %1** %70, align 8
  %71 = getelementptr inbounds %1, %1* %69, i64 0, i32 0, i32 1
  %72 = bitcast %3* %71 to %57*
  %73 = getelementptr inbounds %57, %57* %72, i64 0, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %66
  %78 = getelementptr inbounds %1, %1* %69, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 8
  br label %81

81:                                               ; preds = %66, %77
  %82 = phi i32 [ 5126, %77 ], [ 6, %66 ]
  %83 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %82, i32* %83, align 8
  %84 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  %85 = call noalias i8* @_emalloc(i64 32) #10
  %86 = bitcast i8* %85 to i32*
  store i32 1, i32* %86, align 8
  %87 = getelementptr inbounds i8, i8* %85, i64 4
  %88 = bitcast i8* %87 to i32*
  store i32 6, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %85, i64 8
  %90 = bitcast i8* %89 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %90, align 8
  %91 = getelementptr inbounds i8, i8* %85, i64 24
  %92 = bitcast i8* %91 to i32*
  store i32 1701667182, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %85, i64 28
  store i8 0, i8* %93, align 1
  %94 = bitcast %4* %7 to i8**
  store i8* %85, i8** %94, align 8
  %95 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 5126, i32* %95, align 8
  call void @zend_std_write_property(%4* %17, %4* nonnull %7, %4* nonnull %3, i8** null) #9
  %96 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %97 = bitcast %6* %96 to %58*
  %98 = getelementptr inbounds %58, %58* %97, i64 0, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = and i8 %99, 4
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %81
  %103 = bitcast %4* %3 to %59**
  %104 = load %59*, %59** %103, align 8
  %105 = getelementptr inbounds %59, %59* %104, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, -1
  store i32 %107, i32* %105, align 4
  br label %108

108:                                              ; preds = %81, %102
  call void @_zval_ptr_dtor(%4* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  %109 = getelementptr inbounds %11, %11* %67, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %111 = bitcast %8** %110 to i8**
  store i8* %109, i8** %111, align 8
  %112 = getelementptr inbounds %21, %21* %19, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 1, i32* %112, align 8
  %113 = load %4*, %4** %4, align 8
  %114 = icmp eq %4* %113, null
  br i1 %114, label %122, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %4, %4* %113, i64 0, i32 0, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %4, %4* %113, i64 0, i32 1, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %21, %21* %19, i64 -1, i32 2
  %121 = bitcast %0** %120 to i64*
  store i64 %117, i64* %121, align 8
  br label %122

122:                                              ; preds = %108, %115
  %123 = phi i32 [ %119, %115 ], [ 0, %108 ]
  %124 = getelementptr inbounds %21, %21* %19, i64 -1, i32 3
  %125 = bitcast %22** %124 to i32*
  store i32 %123, i32* %125, align 8
  %126 = getelementptr inbounds %21, %21* %19, i64 -1, i32 5
  %127 = bitcast [1 x %4]* %126 to %0**
  store %0* null, %0** %127, align 8
  br label %128

128:                                              ; preds = %34, %122, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

declare dso_local i32 @zend_parse_parameters_ex(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local %11* @zend_get_closure_method_def(%4*) local_unnamed_addr #2

declare dso_local i32 @zend_parse_parameters_throw(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @zend_str_tolower_dup(i8*, i64) local_unnamed_addr #2

declare dso_local void @_efree(i8*) local_unnamed_addr #2

declare dso_local %21* @zend_throw_exception_ex(%0*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %54, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %54, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %54

28:                                               ; preds = %12
  %29 = bitcast i8* %17 to %11*
  %30 = getelementptr inbounds %21, %21* %14, i64 -1, i32 5
  %31 = bitcast [1 x %4]* %30 to %0**
  %32 = load %0*, %0** %31, align 8
  call fastcc void @426(%62* nonnull %3, %11* %29, %0* %32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0))
  %33 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %34 = load %1*, %1** %33, align 8
  %35 = icmp eq %1* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %1, %1* %34, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %1, %1* %34, i64 0, i32 3, i64 %38
  store i8 0, i8* %39, align 1
  %40 = load %1*, %1** %33, align 8
  store %1* null, %1** %33, align 8
  br label %43

41:                                               ; preds = %28
  %42 = load %1*, %1** @zend_empty_string, align 8
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi %1* [ %40, %36 ], [ %42, %41 ]
  %45 = bitcast %4* %1 to %1**
  store %1* %44, %1** %45, align 8
  %46 = getelementptr inbounds %1, %1* %44, i64 0, i32 0, i32 1
  %47 = bitcast %3* %46 to %57*
  %48 = getelementptr inbounds %57, %57* %47, i64 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = and i8 %49, 2
  %51 = icmp eq i8 %50, 0
  %52 = select i1 %51, i32 5126, i32 6
  %53 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %52, i32* %53, align 8
  br label %54

54:                                               ; preds = %22, %9, %43, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @zend_throw_error(%0*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @426(%62* %0, %11* readonly %1, %0* readnone %2, i8* %3) unnamed_addr #0 {
  %5 = alloca %62, align 8
  %6 = bitcast %62* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 2
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 23
  %12 = load %1*, %1** %11, align 8
  %13 = icmp eq %1* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %1, %1* %12, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @134, i64 0, i64 0), i8* %3, i8* nonnull %15) #9
  br label %16

16:                                               ; preds = %10, %14, %4
  %17 = tail call i64 @strlen(i8* %3) #11
  %18 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %19 = load %1*, %1** %18, align 8
  %20 = icmp eq %1* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %1, %1* %19, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %17
  %25 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %21, %16
  %29 = phi i64 [ %17, %16 ], [ %24, %21 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %29) #9
  %30 = load %1*, %1** %18, align 8
  %31 = getelementptr inbounds %1, %1* %30, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %21, %28
  %34 = phi i64 [ %32, %28 ], [ %23, %21 ]
  %35 = phi %1* [ %30, %28 ], [ %19, %21 ]
  %36 = phi i64 [ %29, %28 ], [ %24, %21 ]
  %37 = getelementptr inbounds %1, %1* %35, i64 0, i32 3, i64 %34
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %3, i64 %17, i1 false) #9
  %38 = load %1*, %1** %18, align 8
  %39 = getelementptr inbounds %1, %1* %38, i64 0, i32 2
  store i64 %36, i64* %39, align 8
  %40 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 1048576
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %33
  %45 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 4
  %46 = load %0*, %0** %45, align 8
  %47 = icmp eq %0* %46, null
  %48 = select i1 %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @137, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @136, i64 0, i64 0)
  br label %49

49:                                               ; preds = %33, %44
  %50 = phi i8* [ %48, %44 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @135, i64 0, i64 0), %33 ]
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* %50) #9
  %51 = load i8, i8* %7, align 8
  %52 = icmp eq i8 %51, 2
  %53 = select i1 %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @138, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @139, i64 0, i64 0)
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* %53) #9
  %54 = load i32, i32* %40, align 4
  %55 = and i32 %54, 262144
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %79, label %57

57:                                               ; preds = %49
  %58 = load %1*, %1** %18, align 8
  %59 = icmp eq %1* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %1, %1* %58, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 12
  %64 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %63, %65
  br i1 %66, label %72, label %67

67:                                               ; preds = %60, %57
  %68 = phi i64 [ 12, %57 ], [ %63, %60 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %68) #9
  %69 = load %1*, %1** %18, align 8
  %70 = getelementptr inbounds %1, %1* %69, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  br label %72

72:                                               ; preds = %60, %67
  %73 = phi i64 [ %71, %67 ], [ %62, %60 ]
  %74 = phi %1* [ %69, %67 ], [ %58, %60 ]
  %75 = phi i64 [ %68, %67 ], [ %63, %60 ]
  %76 = getelementptr inbounds %1, %1* %74, i64 0, i32 3, i64 %73
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %76, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @140, i64 0, i64 0), i64 12, i1 false) #9
  %77 = load %1*, %1** %18, align 8
  %78 = getelementptr inbounds %1, %1* %77, i64 0, i32 2
  store i64 %75, i64* %78, align 8
  br label %79

79:                                               ; preds = %49, %72
  %80 = load i8, i8* %7, align 8
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %82, label %90

82:                                               ; preds = %79
  %83 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 10
  %84 = bitcast i32* %83 to %39**
  %85 = load %39*, %39** %84, align 8
  %86 = icmp eq %39* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %39, %39* %85, i64 0, i32 6
  %89 = load i8*, i8** %88, align 8
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @141, i64 0, i64 0), i8* %89) #9
  br label %90

90:                                               ; preds = %82, %87, %79
  %91 = icmp eq %0* %2, null
  br i1 %91, label %147, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 4
  %94 = load %0*, %0** %93, align 8
  %95 = icmp eq %0* %94, null
  br i1 %95, label %147, label %96

96:                                               ; preds = %92
  %97 = icmp eq %0* %94, %2
  br i1 %97, label %102, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %0, %0* %94, i64 0, i32 1
  %100 = load %1*, %1** %99, align 8
  %101 = getelementptr inbounds %1, %1* %100, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @142, i64 0, i64 0), i8* nonnull %101) #9
  br label %147

102:                                              ; preds = %96
  %103 = getelementptr inbounds %0, %0* %2, i64 0, i32 2
  %104 = load %0*, %0** %103, align 8
  %105 = icmp eq %0* %104, null
  br i1 %105, label %147, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 3
  %108 = load %1*, %1** %107, align 8
  %109 = getelementptr inbounds %1, %1* %108, i64 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 32
  %112 = and i64 %111, -8
  %113 = tail call noalias i8* @_emalloc(i64 %112) #10
  %114 = bitcast i8* %113 to %1*
  %115 = bitcast i8* %113 to i32*
  store i32 1, i32* %115, align 8
  %116 = getelementptr inbounds i8, i8* %113, i64 4
  %117 = bitcast i8* %116 to i32*
  store i32 6, i32* %117, align 4
  %118 = getelementptr inbounds i8, i8* %113, i64 8
  %119 = bitcast i8* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %113, i64 16
  %121 = bitcast i8* %120 to i64*
  store i64 %110, i64* %121, align 8
  %122 = getelementptr inbounds i8, i8* %113, i64 24
  %123 = load %1*, %1** %107, align 8
  %124 = getelementptr inbounds %1, %1* %123, i64 0, i32 3, i64 0
  %125 = tail call i8* @zend_str_tolower_copy(i8* nonnull %122, i8* nonnull %124, i64 %110) #9
  %126 = load %0*, %0** %93, align 8
  %127 = getelementptr inbounds %0, %0* %126, i64 0, i32 2
  %128 = load %0*, %0** %127, align 8
  %129 = getelementptr inbounds %0, %0* %128, i64 0, i32 10
  %130 = tail call %4* @zend_hash_find(%8* nonnull %129, %1* %114) #9
  %131 = icmp eq %4* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %106
  %133 = bitcast %4* %130 to i8**
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %146, label %136

136:                                              ; preds = %132
  %137 = load %0*, %0** %93, align 8
  %138 = getelementptr inbounds i8, i8* %134, i64 16
  %139 = bitcast i8* %138 to %0**
  %140 = load %0*, %0** %139, align 8
  %141 = icmp eq %0* %137, %140
  br i1 %141, label %146, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %0, %0* %140, i64 0, i32 1
  %144 = load %1*, %1** %143, align 8
  %145 = getelementptr inbounds %1, %1* %144, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @143, i64 0, i64 0), i8* nonnull %145) #9
  br label %146

146:                                              ; preds = %106, %136, %132, %142
  tail call void @_efree(i8* %113) #9
  br label %147

147:                                              ; preds = %102, %92, %90, %98, %146
  %148 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 5
  %149 = load %11*, %11** %148, align 8
  %150 = icmp eq %11* %149, null
  br i1 %150, label %159, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %11, %11* %149, i64 0, i32 0, i32 4
  %153 = load %0*, %0** %152, align 8
  %154 = icmp eq %0* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %0, %0* %153, i64 0, i32 1
  %157 = load %1*, %1** %156, align 8
  %158 = getelementptr inbounds %1, %1* %157, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @144, i64 0, i64 0), i8* nonnull %158) #9
  br label %159

159:                                              ; preds = %151, %147, %155
  %160 = load i32, i32* %40, align 4
  %161 = and i32 %160, 8192
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %186, label %163

163:                                              ; preds = %159
  %164 = load %1*, %1** %18, align 8
  %165 = icmp eq %1* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %1, %1* %164, i64 0, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 6
  %170 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = icmp ult i64 %169, %171
  br i1 %172, label %178, label %173

173:                                              ; preds = %166, %163
  %174 = phi i64 [ 6, %163 ], [ %169, %166 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %174) #9
  %175 = load %1*, %1** %18, align 8
  %176 = getelementptr inbounds %1, %1* %175, i64 0, i32 2
  %177 = load i64, i64* %176, align 8
  br label %178

178:                                              ; preds = %166, %173
  %179 = phi i64 [ %177, %173 ], [ %168, %166 ]
  %180 = phi %1* [ %175, %173 ], [ %164, %166 ]
  %181 = phi i64 [ %174, %173 ], [ %169, %166 ]
  %182 = getelementptr inbounds %1, %1* %180, i64 0, i32 3, i64 %179
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %182, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @145, i64 0, i64 0), i64 6, i1 false) #9
  %183 = load %1*, %1** %18, align 8
  %184 = getelementptr inbounds %1, %1* %183, i64 0, i32 2
  store i64 %181, i64* %184, align 8
  %185 = load i32, i32* %40, align 4
  br label %186

186:                                              ; preds = %159, %178
  %187 = phi i32 [ %160, %159 ], [ %185, %178 ]
  %188 = and i32 %187, 16384
  %189 = icmp eq i32 %188, 0
  %190 = load %1*, %1** %18, align 8
  br i1 %189, label %212, label %191

191:                                              ; preds = %186
  %192 = icmp eq %1* %190, null
  br i1 %192, label %200, label %193

193:                                              ; preds = %191
  %194 = getelementptr inbounds %1, %1* %190, i64 0, i32 2
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, 6
  %197 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = icmp ult i64 %196, %198
  br i1 %199, label %205, label %200

200:                                              ; preds = %193, %191
  %201 = phi i64 [ 6, %191 ], [ %196, %193 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %201) #9
  %202 = load %1*, %1** %18, align 8
  %203 = getelementptr inbounds %1, %1* %202, i64 0, i32 2
  %204 = load i64, i64* %203, align 8
  br label %205

205:                                              ; preds = %193, %200
  %206 = phi i64 [ %204, %200 ], [ %195, %193 ]
  %207 = phi %1* [ %202, %200 ], [ %190, %193 ]
  %208 = phi i64 [ %201, %200 ], [ %196, %193 ]
  %209 = getelementptr inbounds %1, %1* %207, i64 0, i32 3, i64 %206
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %209, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @146, i64 0, i64 0), i64 6, i1 false) #9
  %210 = load %1*, %1** %18, align 8
  %211 = getelementptr inbounds %1, %1* %210, i64 0, i32 2
  store i64 %208, i64* %211, align 8
  br label %212

212:                                              ; preds = %186, %205
  %213 = phi %1* [ %210, %205 ], [ %190, %186 ]
  %214 = icmp eq %1* %213, null
  br i1 %214, label %222, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %1, %1* %213, i64 0, i32 2
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 2
  %219 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = icmp ult i64 %218, %220
  br i1 %221, label %227, label %222

222:                                              ; preds = %215, %212
  %223 = phi i64 [ 2, %212 ], [ %218, %215 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %223) #9
  %224 = load %1*, %1** %18, align 8
  %225 = getelementptr inbounds %1, %1* %224, i64 0, i32 2
  %226 = load i64, i64* %225, align 8
  br label %227

227:                                              ; preds = %215, %222
  %228 = phi i64 [ %226, %222 ], [ %217, %215 ]
  %229 = phi %1* [ %224, %222 ], [ %213, %215 ]
  %230 = phi i64 [ %223, %222 ], [ %218, %215 ]
  %231 = getelementptr inbounds %1, %1* %229, i64 0, i32 3, i64 %228
  %232 = bitcast i8* %231 to i16*
  store i16 8254, i16* %232, align 1
  %233 = load %1*, %1** %18, align 8
  %234 = getelementptr inbounds %1, %1* %233, i64 0, i32 2
  store i64 %230, i64* %234, align 8
  %235 = load i32, i32* %40, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %258, label %238

238:                                              ; preds = %227
  %239 = icmp eq %1* %233, null
  br i1 %239, label %245, label %240

240:                                              ; preds = %238
  %241 = add i64 %230, 9
  %242 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = icmp ult i64 %241, %243
  br i1 %244, label %250, label %245

245:                                              ; preds = %240, %238
  %246 = phi i64 [ 9, %238 ], [ %241, %240 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %246) #9
  %247 = load %1*, %1** %18, align 8
  %248 = getelementptr inbounds %1, %1* %247, i64 0, i32 2
  %249 = load i64, i64* %248, align 8
  br label %250

250:                                              ; preds = %240, %245
  %251 = phi i64 [ %249, %245 ], [ %230, %240 ]
  %252 = phi %1* [ %247, %245 ], [ %233, %240 ]
  %253 = phi i64 [ %246, %245 ], [ %241, %240 ]
  %254 = getelementptr inbounds %1, %1* %252, i64 0, i32 3, i64 %251
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %254, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @148, i64 0, i64 0), i64 9, i1 false) #9
  %255 = load %1*, %1** %18, align 8
  %256 = getelementptr inbounds %1, %1* %255, i64 0, i32 2
  store i64 %253, i64* %256, align 8
  %257 = load i32, i32* %40, align 4
  br label %258

258:                                              ; preds = %227, %250
  %259 = phi i64 [ %230, %227 ], [ %253, %250 ]
  %260 = phi %1* [ %233, %227 ], [ %255, %250 ]
  %261 = phi i32 [ %235, %227 ], [ %257, %250 ]
  %262 = and i32 %261, 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %284, label %264

264:                                              ; preds = %258
  %265 = icmp eq %1* %260, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %264
  %267 = add i64 %259, 6
  %268 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = icmp ult i64 %267, %269
  br i1 %270, label %276, label %271

271:                                              ; preds = %266, %264
  %272 = phi i64 [ 6, %264 ], [ %267, %266 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %272) #9
  %273 = load %1*, %1** %18, align 8
  %274 = getelementptr inbounds %1, %1* %273, i64 0, i32 2
  %275 = load i64, i64* %274, align 8
  br label %276

276:                                              ; preds = %266, %271
  %277 = phi i64 [ %275, %271 ], [ %259, %266 ]
  %278 = phi %1* [ %273, %271 ], [ %260, %266 ]
  %279 = phi i64 [ %272, %271 ], [ %267, %266 ]
  %280 = getelementptr inbounds %1, %1* %278, i64 0, i32 3, i64 %277
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %280, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @149, i64 0, i64 0), i64 6, i1 false) #9
  %281 = load %1*, %1** %18, align 8
  %282 = getelementptr inbounds %1, %1* %281, i64 0, i32 2
  store i64 %279, i64* %282, align 8
  %283 = load i32, i32* %40, align 4
  br label %284

284:                                              ; preds = %258, %276
  %285 = phi i64 [ %259, %258 ], [ %279, %276 ]
  %286 = phi %1* [ %260, %258 ], [ %281, %276 ]
  %287 = phi i32 [ %261, %258 ], [ %283, %276 ]
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %309, label %290

290:                                              ; preds = %284
  %291 = icmp eq %1* %286, null
  br i1 %291, label %297, label %292

292:                                              ; preds = %290
  %293 = add i64 %285, 7
  %294 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = icmp ult i64 %293, %295
  br i1 %296, label %302, label %297

297:                                              ; preds = %292, %290
  %298 = phi i64 [ 7, %290 ], [ %293, %292 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %298) #9
  %299 = load %1*, %1** %18, align 8
  %300 = getelementptr inbounds %1, %1* %299, i64 0, i32 2
  %301 = load i64, i64* %300, align 8
  br label %302

302:                                              ; preds = %292, %297
  %303 = phi i64 [ %301, %297 ], [ %285, %292 ]
  %304 = phi %1* [ %299, %297 ], [ %286, %292 ]
  %305 = phi i64 [ %298, %297 ], [ %293, %292 ]
  %306 = getelementptr inbounds %1, %1* %304, i64 0, i32 3, i64 %303
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %306, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @150, i64 0, i64 0), i64 7, i1 false) #9
  %307 = load %1*, %1** %18, align 8
  %308 = getelementptr inbounds %1, %1* %307, i64 0, i32 2
  store i64 %305, i64* %308, align 8
  br label %309

309:                                              ; preds = %284, %302
  %310 = phi i64 [ %285, %284 ], [ %305, %302 ]
  %311 = phi %1* [ %286, %284 ], [ %307, %302 ]
  %312 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 4
  %313 = load %0*, %0** %312, align 8
  %314 = icmp eq %0* %313, null
  br i1 %314, label %408, label %315

315:                                              ; preds = %309
  %316 = load i32, i32* %40, align 4
  %317 = and i32 %316, 1792
  %318 = trunc i32 %317 to i11
  switch i11 %318, label %371 [
    i11 256, label %319
    i11 -1024, label %336
    i11 512, label %354
  ]

319:                                              ; preds = %315
  %320 = icmp eq %1* %311, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %319
  %322 = add i64 %310, 7
  %323 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %324 = load i64, i64* %323, align 8
  %325 = icmp ult i64 %322, %324
  br i1 %325, label %331, label %326

326:                                              ; preds = %321, %319
  %327 = phi i64 [ 7, %319 ], [ %322, %321 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %327) #9
  %328 = load %1*, %1** %18, align 8
  %329 = getelementptr inbounds %1, %1* %328, i64 0, i32 2
  %330 = load i64, i64* %329, align 8
  br label %331

331:                                              ; preds = %321, %326
  %332 = phi i64 [ %330, %326 ], [ %310, %321 ]
  %333 = phi %1* [ %328, %326 ], [ %311, %321 ]
  %334 = phi i64 [ %327, %326 ], [ %322, %321 ]
  %335 = getelementptr inbounds %1, %1* %333, i64 0, i32 3, i64 %332
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %335, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @151, i64 0, i64 0), i64 7, i1 false) #9
  br label %388

336:                                              ; preds = %315
  %337 = icmp eq %1* %311, null
  br i1 %337, label %343, label %338

338:                                              ; preds = %336
  %339 = add i64 %310, 8
  %340 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %341 = load i64, i64* %340, align 8
  %342 = icmp ult i64 %339, %341
  br i1 %342, label %348, label %343

343:                                              ; preds = %338, %336
  %344 = phi i64 [ 8, %336 ], [ %339, %338 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %344) #9
  %345 = load %1*, %1** %18, align 8
  %346 = getelementptr inbounds %1, %1* %345, i64 0, i32 2
  %347 = load i64, i64* %346, align 8
  br label %348

348:                                              ; preds = %338, %343
  %349 = phi i64 [ %347, %343 ], [ %310, %338 ]
  %350 = phi %1* [ %345, %343 ], [ %311, %338 ]
  %351 = phi i64 [ %344, %343 ], [ %339, %338 ]
  %352 = getelementptr inbounds %1, %1* %350, i64 0, i32 3, i64 %349
  %353 = bitcast i8* %352 to i64*
  store i64 2334399943808742000, i64* %353, align 1
  br label %388

354:                                              ; preds = %315
  %355 = icmp eq %1* %311, null
  br i1 %355, label %361, label %356

356:                                              ; preds = %354
  %357 = add i64 %310, 10
  %358 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %359 = load i64, i64* %358, align 8
  %360 = icmp ult i64 %357, %359
  br i1 %360, label %366, label %361

361:                                              ; preds = %356, %354
  %362 = phi i64 [ 10, %354 ], [ %357, %356 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %362) #9
  %363 = load %1*, %1** %18, align 8
  %364 = getelementptr inbounds %1, %1* %363, i64 0, i32 2
  %365 = load i64, i64* %364, align 8
  br label %366

366:                                              ; preds = %356, %361
  %367 = phi i64 [ %365, %361 ], [ %310, %356 ]
  %368 = phi %1* [ %363, %361 ], [ %311, %356 ]
  %369 = phi i64 [ %362, %361 ], [ %357, %356 ]
  %370 = getelementptr inbounds %1, %1* %368, i64 0, i32 3, i64 %367
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %370, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @152, i64 0, i64 0), i64 10, i1 false) #9
  br label %388

371:                                              ; preds = %315
  %372 = icmp eq %1* %311, null
  br i1 %372, label %378, label %373

373:                                              ; preds = %371
  %374 = add i64 %310, 19
  %375 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %376 = load i64, i64* %375, align 8
  %377 = icmp ult i64 %374, %376
  br i1 %377, label %383, label %378

378:                                              ; preds = %373, %371
  %379 = phi i64 [ 19, %371 ], [ %374, %373 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %379) #9
  %380 = load %1*, %1** %18, align 8
  %381 = getelementptr inbounds %1, %1* %380, i64 0, i32 2
  %382 = load i64, i64* %381, align 8
  br label %383

383:                                              ; preds = %373, %378
  %384 = phi i64 [ %382, %378 ], [ %310, %373 ]
  %385 = phi %1* [ %380, %378 ], [ %311, %373 ]
  %386 = phi i64 [ %379, %378 ], [ %374, %373 ]
  %387 = getelementptr inbounds %1, %1* %385, i64 0, i32 3, i64 %384
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %387, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @153, i64 0, i64 0), i64 19, i1 false) #9
  br label %388

388:                                              ; preds = %383, %366, %348, %331
  %389 = phi i64 [ %386, %383 ], [ %369, %366 ], [ %351, %348 ], [ %334, %331 ]
  %390 = load %1*, %1** %18, align 8
  %391 = getelementptr inbounds %1, %1* %390, i64 0, i32 2
  store i64 %389, i64* %391, align 8
  %392 = icmp eq %1* %390, null
  br i1 %392, label %398, label %393

393:                                              ; preds = %388
  %394 = add i64 %389, 7
  %395 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %396 = load i64, i64* %395, align 8
  %397 = icmp ult i64 %394, %396
  br i1 %397, label %403, label %398

398:                                              ; preds = %393, %388
  %399 = phi i64 [ 7, %388 ], [ %394, %393 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %399) #9
  %400 = load %1*, %1** %18, align 8
  %401 = getelementptr inbounds %1, %1* %400, i64 0, i32 2
  %402 = load i64, i64* %401, align 8
  br label %403

403:                                              ; preds = %393, %398
  %404 = phi i64 [ %402, %398 ], [ %389, %393 ]
  %405 = phi %1* [ %400, %398 ], [ %390, %393 ]
  %406 = phi i64 [ %399, %398 ], [ %394, %393 ]
  %407 = getelementptr inbounds %1, %1* %405, i64 0, i32 3, i64 %404
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %407, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @154, i64 0, i64 0), i64 7, i1 false) #9
  br label %425

408:                                              ; preds = %309
  %409 = icmp eq %1* %311, null
  br i1 %409, label %415, label %410

410:                                              ; preds = %408
  %411 = add i64 %310, 9
  %412 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %413 = load i64, i64* %412, align 8
  %414 = icmp ult i64 %411, %413
  br i1 %414, label %420, label %415

415:                                              ; preds = %410, %408
  %416 = phi i64 [ 9, %408 ], [ %411, %410 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %416) #9
  %417 = load %1*, %1** %18, align 8
  %418 = getelementptr inbounds %1, %1* %417, i64 0, i32 2
  %419 = load i64, i64* %418, align 8
  br label %420

420:                                              ; preds = %410, %415
  %421 = phi i64 [ %419, %415 ], [ %310, %410 ]
  %422 = phi %1* [ %417, %415 ], [ %311, %410 ]
  %423 = phi i64 [ %416, %415 ], [ %411, %410 ]
  %424 = getelementptr inbounds %1, %1* %422, i64 0, i32 3, i64 %421
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %424, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @155, i64 0, i64 0), i64 9, i1 false) #9
  br label %425

425:                                              ; preds = %420, %403
  %426 = phi i64 [ %423, %420 ], [ %406, %403 ]
  %427 = load %1*, %1** %18, align 8
  %428 = getelementptr inbounds %1, %1* %427, i64 0, i32 2
  store i64 %426, i64* %428, align 8
  %429 = load i32, i32* %40, align 4
  %430 = and i32 %429, 67108864
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %449, label %432

432:                                              ; preds = %425
  %433 = icmp eq %1* %427, null
  br i1 %433, label %439, label %434

434:                                              ; preds = %432
  %435 = add i64 %426, 1
  %436 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %437 = load i64, i64* %436, align 8
  %438 = icmp ult i64 %435, %437
  br i1 %438, label %442, label %439

439:                                              ; preds = %434, %432
  %440 = phi i64 [ 1, %432 ], [ %435, %434 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %440) #9
  %441 = load %1*, %1** %18, align 8
  br label %442

442:                                              ; preds = %434, %439
  %443 = phi %1* [ %441, %439 ], [ %427, %434 ]
  %444 = phi i64 [ %440, %439 ], [ %435, %434 ]
  %445 = add i64 %444, -1
  %446 = getelementptr inbounds %1, %1* %443, i64 0, i32 3, i64 %445
  store i8 38, i8* %446, align 1
  %447 = load %1*, %1** %18, align 8
  %448 = getelementptr inbounds %1, %1* %447, i64 0, i32 2
  store i64 %444, i64* %448, align 8
  br label %449

449:                                              ; preds = %425, %442
  %450 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 3
  %451 = load %1*, %1** %450, align 8
  %452 = getelementptr inbounds %1, %1* %451, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @156, i64 0, i64 0), i8* nonnull %452) #9
  %453 = load i8, i8* %7, align 8
  %454 = icmp eq i8 %453, 2
  br i1 %454, label %455, label %463

455:                                              ; preds = %449
  %456 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 20
  %457 = load %1*, %1** %456, align 8
  %458 = getelementptr inbounds %1, %1* %457, i64 0, i32 3, i64 0
  %459 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 21
  %460 = load i32, i32* %459, align 8
  %461 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 22
  %462 = load i32, i32* %461, align 4
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @157, i64 0, i64 0), i8* %3, i8* nonnull %458, i32 %460, i32 %462) #9
  br label %463

463:                                              ; preds = %455, %449
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @158, i64 0, i64 0), i8* %3) #9
  %464 = getelementptr inbounds %62, %62* %5, i64 0, i32 0
  %465 = load %1*, %1** %464, align 8
  %466 = icmp eq %1* %465, null
  br i1 %466, label %471, label %467

467:                                              ; preds = %463
  %468 = getelementptr inbounds %1, %1* %465, i64 0, i32 2
  %469 = load i64, i64* %468, align 8
  %470 = getelementptr inbounds %1, %1* %465, i64 0, i32 3, i64 %469
  store i8 0, i8* %470, align 1
  br label %471

471:                                              ; preds = %463, %467
  %472 = load i32, i32* %40, align 4
  %473 = and i32 %472, 1048576
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %514, label %475

475:                                              ; preds = %471
  %476 = load %1*, %1** %464, align 8
  %477 = getelementptr inbounds %1, %1* %476, i64 0, i32 3, i64 0
  %478 = load i8, i8* %7, align 8
  %479 = icmp eq i8 %478, 2
  br i1 %479, label %480, label %514

480:                                              ; preds = %475
  %481 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 19
  %482 = load %8*, %8** %481, align 8
  %483 = icmp eq %8* %482, null
  br i1 %483, label %514, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %8, %8* %482, i64 0, i32 5
  %486 = load i32, i32* %485, align 4
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %514, label %488

488:                                              ; preds = %484
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  %489 = load i32, i32* %485, align 4
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @163, i64 0, i64 0), i8* nonnull %477, i32 %489) #9
  %490 = getelementptr inbounds %8, %8* %482, i64 0, i32 3
  %491 = load %10*, %10** %490, align 8
  %492 = getelementptr inbounds %8, %8* %482, i64 0, i32 4
  %493 = load i32, i32* %492, align 8
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds %10, %10* %491, i64 %494
  %496 = icmp eq i32 %493, 0
  br i1 %496, label %513, label %497

497:                                              ; preds = %488, %509
  %498 = phi i32 [ %510, %509 ], [ 0, %488 ]
  %499 = phi %10* [ %511, %509 ], [ %491, %488 ]
  %500 = getelementptr inbounds %10, %10* %499, i64 0, i32 0, i32 1
  %501 = bitcast %6* %500 to i8*
  %502 = load i8, i8* %501, align 8
  %503 = icmp eq i8 %502, 0
  br i1 %503, label %509, label %504

504:                                              ; preds = %497
  %505 = getelementptr inbounds %10, %10* %499, i64 0, i32 2
  %506 = load %1*, %1** %505, align 8
  %507 = add i32 %498, 1
  %508 = getelementptr inbounds %1, %1* %506, i64 0, i32 3, i64 0
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @164, i64 0, i64 0), i8* nonnull %477, i32 %498, i8* nonnull %508) #9
  br label %509

509:                                              ; preds = %504, %497
  %510 = phi i32 [ %507, %504 ], [ %498, %497 ]
  %511 = getelementptr inbounds %10, %10* %499, i64 1
  %512 = icmp eq %10* %511, %495
  br i1 %512, label %513, label %497

513:                                              ; preds = %509, %488
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @162, i64 0, i64 0), i8* nonnull %477) #9
  br label %514

514:                                              ; preds = %513, %484, %480, %475, %471
  %515 = load %1*, %1** %464, align 8
  %516 = getelementptr inbounds %1, %1* %515, i64 0, i32 3, i64 0
  %517 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 8
  %518 = load %13*, %13** %517, align 8
  %519 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 7
  %520 = load i32, i32* %519, align 4
  %521 = icmp eq %13* %518, null
  br i1 %521, label %579, label %522

522:                                              ; preds = %514
  %523 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 6
  %524 = load i32, i32* %523, align 8
  %525 = load i32, i32* %40, align 4
  %526 = lshr i32 %525, 24
  %527 = and i32 %526, 1
  %528 = add i32 %527, %524
  %529 = load %1*, %1** %18, align 8
  %530 = icmp eq %1* %529, null
  br i1 %530, label %538, label %531

531:                                              ; preds = %522
  %532 = getelementptr inbounds %1, %1* %529, i64 0, i32 2
  %533 = load i64, i64* %532, align 8
  %534 = add i64 %533, 1
  %535 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %536 = load i64, i64* %535, align 8
  %537 = icmp ult i64 %534, %536
  br i1 %537, label %541, label %538

538:                                              ; preds = %531, %522
  %539 = phi i64 [ 1, %522 ], [ %534, %531 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %539) #9
  %540 = load %1*, %1** %18, align 8
  br label %541

541:                                              ; preds = %538, %531
  %542 = phi %1* [ %540, %538 ], [ %529, %531 ]
  %543 = phi i64 [ %539, %538 ], [ %534, %531 ]
  %544 = add i64 %543, -1
  %545 = getelementptr inbounds %1, %1* %542, i64 0, i32 3, i64 %544
  store i8 10, i8* %545, align 1
  %546 = load %1*, %1** %18, align 8
  %547 = getelementptr inbounds %1, %1* %546, i64 0, i32 2
  store i64 %543, i64* %547, align 8
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @165, i64 0, i64 0), i8* nonnull %516, i32 %528) #9
  %548 = icmp eq i32 %528, 0
  br i1 %548, label %577, label %549

549:                                              ; preds = %541
  %550 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  br label %551

551:                                              ; preds = %567, %549
  %552 = phi %13* [ %518, %549 ], [ %574, %567 ]
  %553 = phi i32 [ 0, %549 ], [ %575, %567 ]
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @158, i64 0, i64 0), i8* nonnull %516) #9
  %554 = icmp ult i32 %553, %520
  %555 = zext i1 %554 to i8
  call fastcc void @430(%62* nonnull %0, %11* %1, %13* nonnull %552, i32 %553, i8 zeroext %555) #9
  %556 = load %1*, %1** %18, align 8
  %557 = icmp eq %1* %556, null
  br i1 %557, label %564, label %558

558:                                              ; preds = %551
  %559 = getelementptr inbounds %1, %1* %556, i64 0, i32 2
  %560 = load i64, i64* %559, align 8
  %561 = add i64 %560, 1
  %562 = load i64, i64* %550, align 8
  %563 = icmp ult i64 %561, %562
  br i1 %563, label %567, label %564

564:                                              ; preds = %558, %551
  %565 = phi i64 [ 1, %551 ], [ %561, %558 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %565) #9
  %566 = load %1*, %1** %18, align 8
  br label %567

567:                                              ; preds = %564, %558
  %568 = phi %1* [ %566, %564 ], [ %556, %558 ]
  %569 = phi i64 [ %565, %564 ], [ %561, %558 ]
  %570 = add i64 %569, -1
  %571 = getelementptr inbounds %1, %1* %568, i64 0, i32 3, i64 %570
  store i8 10, i8* %571, align 1
  %572 = load %1*, %1** %18, align 8
  %573 = getelementptr inbounds %1, %1* %572, i64 0, i32 2
  store i64 %569, i64* %573, align 8
  %574 = getelementptr inbounds %13, %13* %552, i64 1
  %575 = add nuw i32 %553, 1
  %576 = icmp eq i32 %575, %528
  br i1 %576, label %577, label %551

577:                                              ; preds = %567, %541
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @162, i64 0, i64 0), i8* nonnull %516) #9
  %578 = load %1*, %1** %464, align 8
  br label %579

579:                                              ; preds = %514, %577
  %580 = phi %1* [ %515, %514 ], [ %578, %577 ]
  %581 = icmp eq %1* %580, null
  br i1 %581, label %601, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %1, %1* %580, i64 0, i32 0, i32 1
  %584 = bitcast %3* %583 to %57*
  %585 = getelementptr inbounds %57, %57* %584, i64 0, i32 1
  %586 = load i8, i8* %585, align 1
  %587 = and i8 %586, 2
  %588 = icmp eq i8 %587, 0
  br i1 %588, label %589, label %600

589:                                              ; preds = %582
  %590 = getelementptr inbounds %1, %1* %580, i64 0, i32 0, i32 0
  %591 = load i32, i32* %590, align 8
  %592 = add i32 %591, -1
  store i32 %592, i32* %590, align 8
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %600

594:                                              ; preds = %589
  %595 = and i8 %586, 1
  %596 = icmp eq i8 %595, 0
  %597 = bitcast %1* %580 to i8*
  br i1 %596, label %599, label %598

598:                                              ; preds = %594
  call void @free(i8* %597) #9
  br label %600

599:                                              ; preds = %594
  call void @_efree(i8* %597) #9
  br label %600

600:                                              ; preds = %599, %598, %589, %582
  store %1* null, %1** %464, align 8
  br label %601

601:                                              ; preds = %579, %600
  %602 = getelementptr inbounds %62, %62* %5, i64 0, i32 1
  store i64 0, i64* %602, align 8
  %603 = load i32, i32* %40, align 4
  %604 = and i32 %603, 1073741824
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %700, label %606

606:                                              ; preds = %601
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @159, i64 0, i64 0), i8* %3) #9
  %607 = load %13*, %13** %517, align 8
  %608 = getelementptr inbounds %13, %13* %607, i64 -1, i32 1
  %609 = load i64, i64* %608, align 8
  %610 = icmp ugt i64 %609, 511
  br i1 %610, label %611, label %643

611:                                              ; preds = %606
  %612 = and i64 %609, -4
  %613 = inttoptr i64 %612 to %1*
  %614 = getelementptr inbounds %1, %1* %613, i64 0, i32 3, i64 0
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @160, i64 0, i64 0), i8* nonnull %614) #9
  %615 = load %13*, %13** %517, align 8
  %616 = getelementptr inbounds %13, %13* %615, i64 -1, i32 1
  %617 = load i64, i64* %616, align 8
  %618 = and i64 %617, 1
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %677, label %620

620:                                              ; preds = %611
  %621 = load %1*, %1** %18, align 8
  %622 = icmp eq %1* %621, null
  br i1 %622, label %630, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds %1, %1* %621, i64 0, i32 2
  %625 = load i64, i64* %624, align 8
  %626 = add i64 %625, 8
  %627 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %628 = load i64, i64* %627, align 8
  %629 = icmp ult i64 %626, %628
  br i1 %629, label %635, label %630

630:                                              ; preds = %623, %620
  %631 = phi i64 [ 8, %620 ], [ %626, %623 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %631) #9
  %632 = load %1*, %1** %18, align 8
  %633 = getelementptr inbounds %1, %1* %632, i64 0, i32 2
  %634 = load i64, i64* %633, align 8
  br label %635

635:                                              ; preds = %623, %630
  %636 = phi i64 [ %634, %630 ], [ %625, %623 ]
  %637 = phi %1* [ %632, %630 ], [ %621, %623 ]
  %638 = phi i64 [ %631, %630 ], [ %626, %623 ]
  %639 = getelementptr inbounds %1, %1* %637, i64 0, i32 3, i64 %636
  %640 = bitcast i8* %639 to i64*
  store i64 2327319036710384239, i64* %640, align 1
  %641 = load %1*, %1** %18, align 8
  %642 = getelementptr inbounds %1, %1* %641, i64 0, i32 2
  store i64 %638, i64* %642, align 8
  br label %677

643:                                              ; preds = %606
  %644 = icmp ugt i64 %609, 1
  br i1 %644, label %645, label %677

645:                                              ; preds = %643
  %646 = lshr i64 %609, 1
  %647 = trunc i64 %646 to i32
  %648 = call i8* @zend_get_type_by_const(i32 %647) #9
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @160, i64 0, i64 0), i8* %648) #9
  %649 = load %13*, %13** %517, align 8
  %650 = getelementptr inbounds %13, %13* %649, i64 -1, i32 1
  %651 = load i64, i64* %650, align 8
  %652 = and i64 %651, 1
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %677, label %654

654:                                              ; preds = %645
  %655 = load %1*, %1** %18, align 8
  %656 = icmp eq %1* %655, null
  br i1 %656, label %664, label %657

657:                                              ; preds = %654
  %658 = getelementptr inbounds %1, %1* %655, i64 0, i32 2
  %659 = load i64, i64* %658, align 8
  %660 = add i64 %659, 8
  %661 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %662 = load i64, i64* %661, align 8
  %663 = icmp ult i64 %660, %662
  br i1 %663, label %669, label %664

664:                                              ; preds = %657, %654
  %665 = phi i64 [ 8, %654 ], [ %660, %657 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %665) #9
  %666 = load %1*, %1** %18, align 8
  %667 = getelementptr inbounds %1, %1* %666, i64 0, i32 2
  %668 = load i64, i64* %667, align 8
  br label %669

669:                                              ; preds = %657, %664
  %670 = phi i64 [ %668, %664 ], [ %659, %657 ]
  %671 = phi %1* [ %666, %664 ], [ %655, %657 ]
  %672 = phi i64 [ %665, %664 ], [ %660, %657 ]
  %673 = getelementptr inbounds %1, %1* %671, i64 0, i32 3, i64 %670
  %674 = bitcast i8* %673 to i64*
  store i64 2327319036710384239, i64* %674, align 1
  %675 = load %1*, %1** %18, align 8
  %676 = getelementptr inbounds %1, %1* %675, i64 0, i32 2
  store i64 %672, i64* %676, align 8
  br label %677

677:                                              ; preds = %611, %645, %643, %669, %635
  %678 = load %1*, %1** %18, align 8
  %679 = icmp eq %1* %678, null
  br i1 %679, label %687, label %680

680:                                              ; preds = %677
  %681 = getelementptr inbounds %1, %1* %678, i64 0, i32 2
  %682 = load i64, i64* %681, align 8
  %683 = add i64 %682, 2
  %684 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %685 = load i64, i64* %684, align 8
  %686 = icmp ult i64 %683, %685
  br i1 %686, label %692, label %687

687:                                              ; preds = %680, %677
  %688 = phi i64 [ 2, %677 ], [ %683, %680 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %688) #9
  %689 = load %1*, %1** %18, align 8
  %690 = getelementptr inbounds %1, %1* %689, i64 0, i32 2
  %691 = load i64, i64* %690, align 8
  br label %692

692:                                              ; preds = %680, %687
  %693 = phi i64 [ %691, %687 ], [ %682, %680 ]
  %694 = phi %1* [ %689, %687 ], [ %678, %680 ]
  %695 = phi i64 [ %688, %687 ], [ %683, %680 ]
  %696 = getelementptr inbounds %1, %1* %694, i64 0, i32 3, i64 %693
  %697 = bitcast i8* %696 to i16*
  store i16 2653, i16* %697, align 1
  %698 = load %1*, %1** %18, align 8
  %699 = getelementptr inbounds %1, %1* %698, i64 0, i32 2
  store i64 %695, i64* %699, align 8
  br label %700

700:                                              ; preds = %601, %692
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @162, i64 0, i64 0), i8* %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getName(%23* %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %59

41:                                               ; preds = %30, %25
  %42 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %43 = bitcast %4* %42 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %4, %4* %42, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %4* %1 to %59**
  store %59* %44, %59** %47, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 5120
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %41
  %52 = and i32 %46, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %59, %59* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %55, %54, %41, %39, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isClosure(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1048576
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getClosureThis(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %52, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %52, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %52

26:                                               ; preds = %10
  %27 = getelementptr inbounds %21, %21* %12, i64 -1, i32 2
  %28 = getelementptr inbounds %0*, %0** %27, i64 1
  %29 = bitcast %0** %28 to i8*
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %26
  %33 = bitcast %0** %27 to %4*
  %34 = tail call %4* @zend_get_closure_this_ptr(%4* nonnull %33) #9
  %35 = getelementptr inbounds %4, %4* %34, i64 0, i32 1
  %36 = bitcast %6* %35 to i8*
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %32
  %40 = bitcast %4* %34 to %59**
  %41 = load %59*, %59** %40, align 8
  %42 = getelementptr inbounds %4, %4* %34, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = bitcast %4* %1 to %59**
  store %59* %41, %59** %44, align 8
  %45 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %43, i32* %45, align 8
  %46 = and i32 %43, 1024
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %59, %59* %41, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 4
  br label %52

52:                                               ; preds = %26, %32, %39, %48, %20, %7, %25
  ret void
}

declare dso_local %4* @zend_get_closure_this_ptr(%4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getClosureScopeClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %41, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %41, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %41

26:                                               ; preds = %10
  %27 = getelementptr inbounds %21, %21* %12, i64 -1, i32 2
  %28 = getelementptr inbounds %0*, %0** %27, i64 1
  %29 = bitcast %0** %28 to i8*
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %26
  %33 = bitcast %0** %27 to %4*
  %34 = tail call %11* @zend_get_closure_method_def(%4* nonnull %33) #9
  %35 = icmp eq %11* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %11, %11* %34, i64 0, i32 0, i32 4
  %38 = load %0*, %0** %37, align 8
  %39 = icmp eq %0* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @zend_reflection_class_factory(%0* nonnull %38, %4* %1)
  br label %41

41:                                               ; preds = %26, %40, %32, %36, %20, %7, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getClosure(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %48, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %48

26:                                               ; preds = %10
  %27 = getelementptr inbounds %21, %21* %12, i64 -1, i32 2
  %28 = getelementptr inbounds %0*, %0** %27, i64 1
  %29 = bitcast %0** %28 to i8*
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %26
  %33 = bitcast %0** %27 to %59**
  %34 = load %59*, %59** %33, align 8
  %35 = getelementptr inbounds %21, %21* %12, i64 -1, i32 3
  %36 = bitcast %22** %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %4* %1 to %59**
  store %59* %34, %59** %38, align 8
  %39 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %37, i32* %39, align 8
  %40 = and i32 %37, 1024
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %59, %59* %34, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 4
  br label %48

46:                                               ; preds = %26
  %47 = bitcast i8* %15 to %11*
  tail call void @zend_create_fake_closure(%4* %1, %11* %47, %0* null, %0* null, %4* null) #9
  br label %48

48:                                               ; preds = %46, %32, %42, %20, %7, %25
  ret void
}

declare dso_local void @zend_create_fake_closure(%4*, %11*, %0*, %0*, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isInternal(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %31, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %31

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 1
  %29 = select i1 %28, i32 3, i32 2
  %30 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %29, i32* %30, align 8
  br label %31

31:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isUserDefined(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %31, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %31

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  %29 = select i1 %28, i32 3, i32 2
  %30 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %29, i32* %30, align 8
  br label %31

31:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isDisabled(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_function_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %45

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %45, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %45

33:                                               ; preds = %18
  %34 = load i8, i8* %22, align 8
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %22, i64 48
  %38 = bitcast i8* %37 to void (%23*, %4*)**
  %39 = load void (%23*, %4*)*, void (%23*, %4*)** %38, align 8
  %40 = icmp eq void (%23*, %4*)* %39, @zif_display_disabled_function
  %41 = select i1 %40, i32 3, i32 2
  br label %42

42:                                               ; preds = %36, %33
  %43 = phi i32 [ 2, %33 ], [ %41, %36 ]
  %44 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %43, i32* %44, align 8
  br label %45

45:                                               ; preds = %27, %42, %32, %16
  ret void
}

declare dso_local zeroext i8 @instanceof_function(%0*, %0*) local_unnamed_addr #2

declare dso_local i8* @get_active_function_name() local_unnamed_addr #2

declare dso_local void @zif_display_disabled_function(%23*, %4*) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getFileName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %49, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %49, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %49

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %47

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 120
  %31 = bitcast i8* %30 to %1**
  %32 = load %1*, %1** %31, align 8
  %33 = bitcast %4* %1 to %1**
  store %1* %32, %1** %33, align 8
  %34 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 1
  %35 = bitcast %3* %34 to %57*
  %36 = getelementptr inbounds %57, %57* %35, i64 0, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %41, align 8
  br label %49

42:                                               ; preds = %29
  %43 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %46, align 8
  br label %49

47:                                               ; preds = %26
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %48, align 8
  br label %49

49:                                               ; preds = %40, %42, %20, %7, %47, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getStartLine(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %38, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %38

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 128
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %35, align 8
  br label %38

36:                                               ; preds = %26
  %37 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %20, %7, %36, %29, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getEndLine(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %38, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %38

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 132
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %35, align 8
  br label %38

36:                                               ; preds = %26
  %37 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %20, %7, %36, %29, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getDocComment(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %51, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %51, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %51

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %49

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 136
  %31 = bitcast i8* %30 to %1**
  %32 = load %1*, %1** %31, align 8
  %33 = icmp eq %1* %32, null
  br i1 %33, label %49, label %34

34:                                               ; preds = %29
  %35 = bitcast %4* %1 to %1**
  store %1* %32, %1** %35, align 8
  %36 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 1
  %37 = bitcast %3* %36 to %57*
  %38 = getelementptr inbounds %57, %57* %37, i64 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = and i8 %39, 2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %43, align 8
  br label %51

44:                                               ; preds = %34
  %45 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %48, align 8
  br label %51

49:                                               ; preds = %29, %26
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %50, align 8
  br label %51

51:                                               ; preds = %42, %44, %20, %7, %49, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getStaticVariables(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %84, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %84, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %84

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = load i8, i8* %15, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %84

30:                                               ; preds = %26
  %31 = getelementptr inbounds i8, i8* %15, i64 112
  %32 = bitcast i8* %31 to %8**
  %33 = load %8*, %8** %32, align 8
  %34 = icmp eq %8* %33, null
  br i1 %34, label %84, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %8, %8* %33, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp ugt i32 %37, 1
  br i1 %38, label %39, label %52

39:                                               ; preds = %35
  %40 = getelementptr inbounds %8, %8* %33, i64 0, i32 0, i32 1
  %41 = bitcast %3* %40 to %57*
  %42 = getelementptr inbounds %57, %57* %41, i64 0, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, 2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = add i32 %37, -1
  store i32 %47, i32* %36, align 8
  %48 = load %8*, %8** %32, align 8
  br label %49

49:                                               ; preds = %39, %46
  %50 = phi %8* [ %33, %39 ], [ %48, %46 ]
  %51 = tail call %8* @zend_array_dup(%8* %50) #9
  store %8* %51, %8** %32, align 8
  br label %52

52:                                               ; preds = %35, %49
  %53 = phi %8* [ %33, %35 ], [ %51, %49 ]
  %54 = getelementptr inbounds %8, %8* %53, i64 0, i32 3
  %55 = load %10*, %10** %54, align 8
  %56 = getelementptr inbounds %8, %8* %53, i64 0, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %10, %10* %55, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds i8, i8* %15, i64 16
  %63 = bitcast i8* %62 to %0**
  br label %64

64:                                               ; preds = %61, %75
  %65 = phi %10* [ %55, %61 ], [ %76, %75 ]
  %66 = getelementptr inbounds %10, %10* %65, i64 0, i32 0, i32 1
  %67 = bitcast %6* %66 to i8*
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %10, %10* %65, i64 0, i32 0
  %72 = load %0*, %0** %63, align 8
  %73 = tail call i32 @zval_update_constant_ex(%4* %71, %0* %72) #9
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %84

75:                                               ; preds = %70, %64
  %76 = getelementptr inbounds %10, %10* %65, i64 1
  %77 = icmp eq %10* %76, %59
  br i1 %77, label %78, label %64

78:                                               ; preds = %75
  %79 = load %8*, %8** %32, align 8
  br label %80

80:                                               ; preds = %78, %52
  %81 = phi %8* [ %79, %78 ], [ %53, %52 ]
  %82 = bitcast %4* %1 to %8**
  %83 = load %8*, %8** %82, align 8
  tail call void @zend_hash_copy(%8* %83, %8* %81, void (%4*)* nonnull @zval_add_ref) #9
  br label %84

84:                                               ; preds = %70, %26, %80, %30, %20, %7, %25
  ret void
}

declare dso_local %8* @zend_array_dup(%8*) local_unnamed_addr #2

declare dso_local i32 @zval_update_constant_ex(%4*, %0*) local_unnamed_addr #2

declare dso_local void @zend_hash_copy(%8*, %8*, void (%4*)*) local_unnamed_addr #2

declare dso_local void @zval_add_ref(%4*) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_invoke(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %60, align 8
  %7 = alloca %61, align 8
  %8 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store %4* null, %4** %4, align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #9
  store i32 0, i32* %5, align 4
  %11 = bitcast %60* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #9
  %12 = getelementptr inbounds %61, %61* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  %13 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %14 = bitcast %6* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %26

17:                                               ; preds = %2
  %18 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %19 = bitcast %4* %18 to %21**
  %20 = load %21*, %21** %19, align 8
  %21 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_function_ptr, align 8
  %24 = tail call zeroext i8 @instanceof_function(%0* %22, %0* %23) #9
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %17, %2
  %27 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %27) #9
  br label %135

28:                                               ; preds = %17
  %29 = load %21*, %21** %19, align 8
  %30 = getelementptr inbounds %21, %21* %29, i64 -1, i32 4
  %31 = bitcast %8** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %43

34:                                               ; preds = %28
  %35 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %36 = icmp eq %21* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %21, %21* %35, i64 0, i32 2
  %39 = load %0*, %0** %38, align 8
  %40 = load %0*, %0** @reflection_exception_ptr, align 8
  %41 = icmp eq %0* %39, %40
  br i1 %41, label %135, label %42

42:                                               ; preds = %34, %37
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %135

43:                                               ; preds = %28
  %44 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i64 0, i64 0), %4** nonnull %4, i32* nonnull %5) #9
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %135, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %60, %60* %6, i64 0, i32 0
  store i64 56, i64* %49, align 8
  %50 = getelementptr inbounds %60, %60* %6, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %60, %60* %6, i64 0, i32 4
  store %21* null, %21** %51, align 8
  %52 = getelementptr inbounds %60, %60* %6, i64 0, i32 2
  store %4* %3, %4** %52, align 8
  %53 = load i32, i32* %5, align 4
  %54 = getelementptr inbounds %60, %60* %6, i64 0, i32 6
  store i32 %53, i32* %54, align 4
  %55 = bitcast %4** %4 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %60, %60* %6, i64 0, i32 3
  %58 = bitcast %4** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %60, %60* %6, i64 0, i32 5
  store i8 1, i8* %59, align 8
  store i8 1, i8* %12, align 8
  %60 = getelementptr inbounds %61, %61* %7, i64 0, i32 1
  %61 = bitcast %11** %60 to i8**
  store i8* %32, i8** %61, align 8
  %62 = call %0* @zend_get_executed_scope() #9
  %63 = getelementptr inbounds %61, %61* %7, i64 0, i32 2
  store %0* %62, %0** %63, align 8
  %64 = getelementptr inbounds %61, %61* %7, i64 0, i32 3
  %65 = getelementptr inbounds %21, %21* %29, i64 -1, i32 2
  %66 = getelementptr inbounds %0*, %0** %65, i64 1
  %67 = bitcast %0** %66 to i8*
  %68 = bitcast %0** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false)
  %69 = load i8, i8* %67, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %48
  %72 = getelementptr inbounds %61, %61* %7, i64 0, i32 4
  %73 = bitcast %0** %65 to %4*
  %74 = bitcast %0** %65 to %21**
  %75 = load %21*, %21** %74, align 8
  %76 = getelementptr inbounds %21, %21* %75, i64 0, i32 3
  %77 = load %22*, %22** %76, align 8
  %78 = getelementptr inbounds %22, %22* %77, i64 0, i32 24
  %79 = load i32 (%4*, %0**, %11**, %21**)*, i32 (%4*, %0**, %11**, %21**)** %78, align 8
  %80 = call i32 %79(%4* nonnull %73, %0** nonnull %64, %11** nonnull %60, %21** nonnull %72) #9
  br label %81

81:                                               ; preds = %71, %48
  %82 = call i32 @zend_call_function(%60* nonnull %6, %61* nonnull %7) #9
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %84, label %91

84:                                               ; preds = %81
  %85 = load %0*, %0** @reflection_exception_ptr, align 8
  %86 = getelementptr inbounds i8, i8* %32, i64 8
  %87 = bitcast i8* %86 to %1**
  %88 = load %1*, %1** %87, align 8
  %89 = getelementptr inbounds %1, %1* %88, i64 0, i32 3, i64 0
  %90 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %85, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @20, i64 0, i64 0), i8* nonnull %89) #9
  br label %135

91:                                               ; preds = %81
  %92 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %93 = bitcast %6* %92 to i8*
  %94 = load i8, i8* %93, align 8
  switch i8 %94, label %95 [
    i8 0, label %135
    i8 10, label %97
  ]

95:                                               ; preds = %91
  %96 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  br label %128

97:                                               ; preds = %91
  %98 = bitcast %4* %3 to %59**
  %99 = load %59*, %59** %98, align 8
  %100 = getelementptr inbounds %59, %59* %99, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %112

103:                                              ; preds = %97
  %104 = getelementptr inbounds %59, %59* %99, i64 1
  %105 = bitcast %59* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %59, %59* %99, i64 2, i32 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %4, %4* %3, i64 0, i32 0, i32 0
  store i64 %106, i64* %109, align 8
  %110 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %108, i32* %110, align 8
  %111 = bitcast %59* %99 to i8*
  call void @_efree_24(i8* %111) #9
  br label %128

112:                                              ; preds = %97
  %113 = add i32 %101, -1
  store i32 %113, i32* %100, align 4
  %114 = bitcast %4* %3 to %63**
  %115 = load %63*, %63** %114, align 8
  %116 = getelementptr inbounds %63, %63* %115, i64 0, i32 1
  %117 = bitcast %4* %116 to %59**
  %118 = load %59*, %59** %117, align 8
  %119 = getelementptr inbounds %63, %63* %115, i64 0, i32 1, i32 1, i32 0
  %120 = load i32, i32* %119, align 8
  store %59* %118, %59** %98, align 8
  %121 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %120, i32* %121, align 8
  %122 = and i32 %120, 1024
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %112
  %125 = getelementptr inbounds %59, %59* %118, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  br label %128

128:                                              ; preds = %95, %124, %112, %103
  %129 = phi i32* [ %96, %95 ], [ %121, %124 ], [ %121, %112 ], [ %110, %103 ]
  %130 = getelementptr inbounds %4, %4* %3, i64 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = load i32, i32* %129, align 8
  %133 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %132, i32* %134, align 8
  br label %135

135:                                              ; preds = %91, %128, %43, %37, %84, %42, %26
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

declare dso_local %0* @zend_get_executed_scope() local_unnamed_addr #2

declare dso_local i32 @zend_call_function(%60*, %61*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_invokeArgs(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %60, align 8
  %5 = alloca %61, align 8
  %6 = alloca %4*, align 8
  %7 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %60* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #9
  %9 = getelementptr inbounds %61, %61* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #9
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  br i1 %14, label %15, label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %17 = bitcast %4* %16 to %21**
  %18 = load %21*, %21** %17, align 8
  %19 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %20 = load %0*, %0** %19, align 8
  %21 = load %0*, %0** @reflection_function_ptr, align 8
  %22 = tail call zeroext i8 @instanceof_function(%0* %20, %0* %21) #9
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %15, %2
  %25 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %25) #9
  br label %186

26:                                               ; preds = %15
  %27 = load %21*, %21** %17, align 8
  %28 = getelementptr inbounds %21, %21* %27, i64 -1, i32 4
  %29 = bitcast %8** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %41

32:                                               ; preds = %26
  %33 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %34 = icmp eq %21* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %21, %21* %33, i64 0, i32 2
  %37 = load %0*, %0** %36, align 8
  %38 = load %0*, %0** @reflection_exception_ptr, align 8
  %39 = icmp eq %0* %37, %38
  br i1 %39, label %186, label %40

40:                                               ; preds = %32, %35
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %186

41:                                               ; preds = %26
  %42 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i64 0, i64 0), %4** nonnull %6) #9
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %186, label %46

46:                                               ; preds = %41
  %47 = bitcast %4** %6 to %8***
  %48 = load %8**, %8*** %47, align 8
  %49 = load %8*, %8** %48, align 8
  %50 = getelementptr inbounds %8, %8* %49, i64 0, i32 5
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = call noalias i8* @_safe_emalloc(i64 16, i64 %52, i64 0) #9
  %54 = bitcast i8* %53 to %4*
  %55 = load %8**, %8*** %47, align 8
  %56 = load %8*, %8** %55, align 8
  %57 = getelementptr inbounds %8, %8* %56, i64 0, i32 3
  %58 = load %10*, %10** %57, align 8
  %59 = getelementptr inbounds %8, %8* %56, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %10, %10* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %92, label %64

64:                                               ; preds = %46, %88
  %65 = phi i32 [ %89, %88 ], [ 0, %46 ]
  %66 = phi %10* [ %90, %88 ], [ %58, %46 ]
  %67 = getelementptr inbounds %10, %10* %66, i64 0, i32 0, i32 1
  %68 = bitcast %6* %67 to i8*
  %69 = load i8, i8* %68, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %88, label %71

71:                                               ; preds = %64
  %72 = sext i32 %65 to i64
  %73 = getelementptr inbounds %4, %4* %54, i64 %72
  %74 = bitcast %10* %66 to %59**
  %75 = load %59*, %59** %74, align 8
  %76 = getelementptr inbounds %10, %10* %66, i64 0, i32 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = bitcast %4* %73 to %59**
  store %59* %75, %59** %78, align 8
  %79 = getelementptr inbounds %4, %4* %54, i64 %72, i32 1, i32 0
  store i32 %77, i32* %79, align 8
  %80 = and i32 %77, 1024
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %71
  %83 = getelementptr inbounds %59, %59* %75, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 4
  br label %86

86:                                               ; preds = %71, %82
  %87 = add nsw i32 %65, 1
  br label %88

88:                                               ; preds = %64, %86
  %89 = phi i32 [ %87, %86 ], [ %65, %64 ]
  %90 = getelementptr inbounds %10, %10* %66, i64 1
  %91 = icmp eq %10* %90, %62
  br i1 %91, label %92, label %64

92:                                               ; preds = %88, %46
  %93 = phi i32 [ 0, %46 ], [ %89, %88 ]
  %94 = getelementptr inbounds %60, %60* %4, i64 0, i32 0
  store i64 56, i64* %94, align 8
  %95 = getelementptr inbounds %60, %60* %4, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %60, %60* %4, i64 0, i32 4
  store %21* null, %21** %96, align 8
  %97 = getelementptr inbounds %60, %60* %4, i64 0, i32 2
  store %4* %3, %4** %97, align 8
  %98 = getelementptr inbounds %60, %60* %4, i64 0, i32 6
  store i32 %93, i32* %98, align 4
  %99 = getelementptr inbounds %60, %60* %4, i64 0, i32 3
  %100 = bitcast %4** %99 to i8**
  store i8* %53, i8** %100, align 8
  %101 = getelementptr inbounds %60, %60* %4, i64 0, i32 5
  store i8 1, i8* %101, align 8
  store i8 1, i8* %9, align 8
  %102 = getelementptr inbounds %61, %61* %5, i64 0, i32 1
  %103 = bitcast %11** %102 to i8**
  store i8* %30, i8** %103, align 8
  %104 = call %0* @zend_get_executed_scope() #9
  %105 = getelementptr inbounds %61, %61* %5, i64 0, i32 2
  store %0* %104, %0** %105, align 8
  %106 = getelementptr inbounds %61, %61* %5, i64 0, i32 3
  %107 = getelementptr inbounds %21, %21* %27, i64 -1, i32 2
  %108 = getelementptr inbounds %0*, %0** %107, i64 1
  %109 = bitcast %0** %108 to i8*
  %110 = bitcast %0** %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 16, i1 false)
  %111 = load i8, i8* %109, align 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %92
  %114 = getelementptr inbounds %61, %61* %5, i64 0, i32 4
  %115 = bitcast %0** %107 to %4*
  %116 = bitcast %0** %107 to %21**
  %117 = load %21*, %21** %116, align 8
  %118 = getelementptr inbounds %21, %21* %117, i64 0, i32 3
  %119 = load %22*, %22** %118, align 8
  %120 = getelementptr inbounds %22, %22* %119, i64 0, i32 24
  %121 = load i32 (%4*, %0**, %11**, %21**)*, i32 (%4*, %0**, %11**, %21**)** %120, align 8
  %122 = call i32 %121(%4* nonnull %115, %0** nonnull %106, %11** nonnull %102, %21** nonnull %114) #9
  br label %123

123:                                              ; preds = %113, %92
  %124 = call i32 @zend_call_function(%60* nonnull %4, %61* nonnull %5) #9
  %125 = icmp sgt i32 %93, 0
  br i1 %125, label %126, label %133

126:                                              ; preds = %123
  %127 = zext i32 %93 to i64
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i64 [ 0, %126 ], [ %131, %128 ]
  %130 = getelementptr inbounds %4, %4* %54, i64 %129
  call void @_zval_ptr_dtor(%4* %130) #9
  %131 = add nuw nsw i64 %129, 1
  %132 = icmp eq i64 %131, %127
  br i1 %132, label %133, label %128

133:                                              ; preds = %128, %123
  call void @_efree(i8* %53) #9
  %134 = icmp eq i32 %124, -1
  br i1 %134, label %135, label %142

135:                                              ; preds = %133
  %136 = load %0*, %0** @reflection_exception_ptr, align 8
  %137 = getelementptr inbounds i8, i8* %30, i64 8
  %138 = bitcast i8* %137 to %1**
  %139 = load %1*, %1** %138, align 8
  %140 = getelementptr inbounds %1, %1* %139, i64 0, i32 3, i64 0
  %141 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %136, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @20, i64 0, i64 0), i8* nonnull %140) #9
  br label %186

142:                                              ; preds = %133
  %143 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %144 = bitcast %6* %143 to i8*
  %145 = load i8, i8* %144, align 8
  switch i8 %145, label %146 [
    i8 0, label %186
    i8 10, label %148
  ]

146:                                              ; preds = %142
  %147 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  br label %179

148:                                              ; preds = %142
  %149 = bitcast %4* %3 to %59**
  %150 = load %59*, %59** %149, align 8
  %151 = getelementptr inbounds %59, %59* %150, i64 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %163

154:                                              ; preds = %148
  %155 = getelementptr inbounds %59, %59* %150, i64 1
  %156 = bitcast %59* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %59, %59* %150, i64 2, i32 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %4, %4* %3, i64 0, i32 0, i32 0
  store i64 %157, i64* %160, align 8
  %161 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %159, i32* %161, align 8
  %162 = bitcast %59* %150 to i8*
  call void @_efree_24(i8* %162) #9
  br label %179

163:                                              ; preds = %148
  %164 = add i32 %152, -1
  store i32 %164, i32* %151, align 4
  %165 = bitcast %4* %3 to %63**
  %166 = load %63*, %63** %165, align 8
  %167 = getelementptr inbounds %63, %63* %166, i64 0, i32 1
  %168 = bitcast %4* %167 to %59**
  %169 = load %59*, %59** %168, align 8
  %170 = getelementptr inbounds %63, %63* %166, i64 0, i32 1, i32 1, i32 0
  %171 = load i32, i32* %170, align 8
  store %59* %169, %59** %149, align 8
  %172 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %171, i32* %172, align 8
  %173 = and i32 %171, 1024
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %179, label %175

175:                                              ; preds = %163
  %176 = getelementptr inbounds %59, %59* %169, i64 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %176, align 4
  br label %179

179:                                              ; preds = %146, %175, %163, %154
  %180 = phi i32* [ %147, %146 ], [ %172, %175 ], [ %172, %163 ], [ %161, %154 ]
  %181 = getelementptr inbounds %4, %4* %3, i64 0, i32 0, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = load i32, i32* %180, align 8
  %184 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %183, i32* %185, align 8
  br label %186

186:                                              ; preds = %142, %179, %41, %35, %135, %40, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare dso_local noalias i8* @_safe_emalloc(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_returnsReference(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %41

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %41, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %41

33:                                               ; preds = %18
  %34 = getelementptr inbounds i8, i8* %22, i64 4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 67108864
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 2, i32 3
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %39, i32* %40, align 8
  br label %41

41:                                               ; preds = %27, %33, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getNumberOfParameters(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %46

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %46

33:                                               ; preds = %18
  %34 = getelementptr inbounds i8, i8* %22, i64 32
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds i8, i8* %22, i64 4
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = lshr i32 %39, 24
  %41 = and i32 %40, 1
  %42 = add i32 %41, %36
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %45, align 8
  br label %46

46:                                               ; preds = %27, %33, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getNumberOfRequiredParameters(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %40

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %40, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %40

33:                                               ; preds = %18
  %34 = getelementptr inbounds i8, i8* %22, i64 36
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %39, align 8
  br label %40

40:                                               ; preds = %27, %33, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getParameters(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4, align 8
  %5 = alloca %4, align 8
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %7 = bitcast %6* %6 to i8*
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 8
  br i1 %9, label %10, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %12 = bitcast %4* %11 to %21**
  %13 = load %21*, %21** %12, align 8
  %14 = getelementptr inbounds %21, %21* %13, i64 0, i32 2
  %15 = load %0*, %0** %14, align 8
  %16 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %17 = tail call zeroext i8 @instanceof_function(%0* %15, %0* %16) #9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %10, %2
  %20 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %20) #9
  br label %198

21:                                               ; preds = %10
  %22 = load %21*, %21** %12, align 8
  %23 = getelementptr inbounds %21, %21* %22, i64 -1, i32 4
  %24 = bitcast %8** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %36

27:                                               ; preds = %21
  %28 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %29 = icmp eq %21* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %21, %21* %28, i64 0, i32 2
  %32 = load %0*, %0** %31, align 8
  %33 = load %0*, %0** @reflection_exception_ptr, align 8
  %34 = icmp eq %0* %32, %33
  br i1 %34, label %198, label %35

35:                                               ; preds = %27, %30
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %198

36:                                               ; preds = %21
  %37 = getelementptr inbounds i8, i8* %25, i64 40
  %38 = bitcast i8* %37 to %13**
  %39 = load %13*, %13** %38, align 8
  %40 = getelementptr inbounds i8, i8* %25, i64 32
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds i8, i8* %25, i64 4
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = lshr i32 %45, 24
  %47 = and i32 %46, 1
  %48 = add i32 %47, %42
  %49 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %50 = icmp eq i32 %48, 0
  br i1 %50, label %198, label %51

51:                                               ; preds = %36
  %52 = bitcast %4* %5 to i8*
  %53 = getelementptr inbounds %21, %21* %22, i64 -1, i32 2
  %54 = bitcast %0** %53 to %4*
  %55 = getelementptr inbounds %0*, %0** %53, i64 1
  %56 = bitcast %0** %55 to i8*
  %57 = getelementptr inbounds i8, i8* %25, i64 36
  %58 = bitcast i8* %57 to i32*
  %59 = bitcast %4* %3 to i8*
  %60 = getelementptr inbounds i8, i8* %25, i64 8
  %61 = bitcast i8* %60 to %1**
  %62 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  %63 = bitcast %4* %5 to %21**
  %64 = bitcast %4* %4 to i8*
  %65 = bitcast %4* %4 to i8**
  %66 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %68 = bitcast %6* %67 to %58*
  %69 = getelementptr inbounds %58, %58* %68, i64 0, i32 1
  %70 = bitcast %4* %3 to %1**
  %71 = bitcast %4* %3 to %59**
  %72 = bitcast %4* %3 to i8**
  br label %73

73:                                               ; preds = %193, %51
  %74 = phi %13* [ %39, %51 ], [ %195, %193 ]
  %75 = phi i32 [ 0, %51 ], [ %196, %193 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9
  %76 = load i32, i32* %44, align 4
  %77 = and i32 %76, 2097152
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %95, label %79

79:                                               ; preds = %73
  %80 = call noalias i8* @_emalloc_224() #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %25, i64 224, i1 false) #9
  %81 = load %1*, %1** %61, align 8
  %82 = getelementptr inbounds %1, %1* %81, i64 0, i32 0, i32 1
  %83 = bitcast %3* %82 to %57*
  %84 = getelementptr inbounds %57, %57* %83, i64 0, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = and i8 %85, 2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %79
  %89 = getelementptr inbounds %1, %1* %81, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  store i32 %91, i32* %89, align 8
  br label %92

92:                                               ; preds = %88, %79
  %93 = getelementptr inbounds i8, i8* %80, i64 8
  %94 = bitcast i8* %93 to %1**
  store %1* %81, %1** %94, align 8
  br label %95

95:                                               ; preds = %73, %92
  %96 = phi i8* [ %80, %92 ], [ %25, %73 ]
  %97 = load i8, i8* %56, align 8
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, %4* null, %4* %54
  %100 = load i32, i32* %58, align 4
  %101 = icmp ult i32 %75, %100
  %102 = zext i1 %101 to i8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #9
  %103 = getelementptr inbounds %13, %13* %74, i64 0, i32 0
  %104 = load %1*, %1** %103, align 8
  %105 = icmp eq %1* %104, null
  %106 = bitcast %1* %104 to i8*
  br i1 %105, label %142, label %107

107:                                              ; preds = %95
  %108 = load i8, i8* %96, align 8
  %109 = icmp eq i8 %108, 1
  br i1 %109, label %110, label %131

110:                                              ; preds = %107
  %111 = getelementptr inbounds i8, i8* %96, i64 4
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = trunc i32 %113 to i8
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %131, label %116

116:                                              ; preds = %110
  %117 = call i64 @strlen(i8* %106) #11
  %118 = add i64 %117, 32
  %119 = and i64 %118, -8
  %120 = call noalias i8* @_emalloc(i64 %119) #10
  %121 = bitcast i8* %120 to %1*
  %122 = bitcast i8* %120 to i32*
  store i32 1, i32* %122, align 8
  %123 = getelementptr inbounds i8, i8* %120, i64 4
  %124 = bitcast i8* %123 to i32*
  store i32 6, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %120, i64 8
  %126 = bitcast i8* %125 to i64*
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %120, i64 16
  %128 = bitcast i8* %127 to i64*
  store i64 %117, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %120, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* align 1 %106, i64 %117, i1 false) #9
  %130 = getelementptr inbounds %1, %1* %121, i64 0, i32 3, i64 %117
  store i8 0, i8* %130, align 1
  store i8* %120, i8** %72, align 8
  br label %142

131:                                              ; preds = %110, %107
  store %1* %104, %1** %70, align 8
  %132 = getelementptr inbounds %1, %1* %104, i64 0, i32 0, i32 1
  %133 = bitcast %3* %132 to %57*
  %134 = getelementptr inbounds %57, %57* %133, i64 0, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = and i8 %135, 2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %131
  %139 = getelementptr inbounds %1, %1* %104, i64 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, 1
  store i32 %141, i32* %139, align 8
  br label %142

142:                                              ; preds = %95, %131, %138, %116
  %143 = phi i32 [ 5126, %138 ], [ 5126, %116 ], [ 6, %131 ], [ 1, %95 ]
  store i32 %143, i32* %62, align 8
  %144 = load %0*, %0** @reflection_parameter_ptr, align 8
  %145 = call i32 @_object_init_ex(%4* nonnull %5, %0* %144) #9
  %146 = load %21*, %21** %63, align 8
  %147 = call noalias i8* @_emalloc_24() #9
  %148 = getelementptr inbounds i8, i8* %147, i64 8
  %149 = bitcast i8* %148 to %13**
  store %13* %74, %13** %149, align 8
  %150 = bitcast i8* %147 to i32*
  store i32 %75, i32* %150, align 8
  %151 = getelementptr inbounds i8, i8* %147, i64 4
  store i8 %102, i8* %151, align 4
  %152 = getelementptr inbounds i8, i8* %147, i64 16
  %153 = bitcast i8* %152 to i8**
  store i8* %96, i8** %153, align 8
  %154 = getelementptr inbounds %21, %21* %146, i64 -1, i32 4
  %155 = bitcast %8** %154 to i8**
  store i8* %147, i8** %155, align 8
  %156 = getelementptr inbounds %21, %21* %146, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 3, i32* %156, align 8
  %157 = getelementptr inbounds i8, i8* %96, i64 16
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %21, %21* %146, i64 -1, i32 5, i64 0, i32 0, i32 0
  store i64 %159, i64* %160, align 8
  br i1 %98, label %175, label %161

161:                                              ; preds = %142
  %162 = bitcast %4* %99 to %59**
  %163 = load %59*, %59** %162, align 8
  %164 = getelementptr inbounds %59, %59* %163, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %164, align 4
  %167 = getelementptr inbounds %4, %4* %99, i64 0, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %4, %4* %99, i64 0, i32 1, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %21, %21* %146, i64 -1, i32 2
  %172 = bitcast %0** %171 to i64*
  store i64 %168, i64* %172, align 8
  %173 = getelementptr inbounds %21, %21* %146, i64 -1, i32 3
  %174 = bitcast %22** %173 to i32*
  store i32 %170, i32* %174, align 8
  br label %175

175:                                              ; preds = %161, %142
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9
  %176 = call noalias i8* @_emalloc(i64 32) #10
  %177 = bitcast i8* %176 to i32*
  store i32 1, i32* %177, align 8
  %178 = getelementptr inbounds i8, i8* %176, i64 4
  %179 = bitcast i8* %178 to i32*
  store i32 6, i32* %179, align 4
  %180 = getelementptr inbounds i8, i8* %176, i64 8
  %181 = bitcast i8* %180 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %181, align 8
  %182 = getelementptr inbounds i8, i8* %176, i64 24
  %183 = bitcast i8* %182 to i32*
  store i32 1701667182, i32* %183, align 8
  %184 = getelementptr inbounds i8, i8* %176, i64 28
  store i8 0, i8* %184, align 1
  store i8* %176, i8** %65, align 8
  store i32 5126, i32* %66, align 8
  call void @zend_std_write_property(%4* nonnull %5, %4* nonnull %4, %4* nonnull %3, i8** null) #9
  %185 = load i8, i8* %69, align 1
  %186 = and i8 %185, 4
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %193, label %188

188:                                              ; preds = %175
  %189 = load %59*, %59** %71, align 8
  %190 = getelementptr inbounds %59, %59* %189, i64 0, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = add i32 %191, -1
  store i32 %192, i32* %190, align 4
  br label %193

193:                                              ; preds = %175, %188
  call void @_zval_ptr_dtor(%4* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #9
  %194 = call i32 @add_next_index_zval(%4* %1, %4* nonnull %5) #9
  %195 = getelementptr inbounds %13, %13* %74, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9
  %196 = add nuw i32 %75, 1
  %197 = icmp eq i32 %196, %48
  br i1 %197, label %198, label %73

198:                                              ; preds = %193, %36, %30, %35, %19
  ret void
}

declare dso_local i32 @add_next_index_zval(%4*, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getExtension(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %48

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %48, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %48

33:                                               ; preds = %18
  %34 = load i8, i8* %22, align 8
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %37, align 8
  br label %48

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %22, i64 56
  %40 = bitcast i8* %39 to %39**
  %41 = load %39*, %39** %40, align 8
  %42 = icmp eq %39* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %39, %39* %41, i64 0, i32 6
  %45 = load i8*, i8** %44, align 8
  tail call fastcc void @427(%4* %1, i8* %45)
  br label %48

46:                                               ; preds = %38
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %47, align 8
  br label %48

48:                                               ; preds = %27, %43, %46, %36, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @427(%4* %0, i8* %1) unnamed_addr #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4, align 8
  %5 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = tail call i64 @strlen(i8* %1) #11
  %7 = add i64 %6, 32
  %8 = and i64 %7, -8
  %9 = tail call noalias i8* @_emalloc(i64 %8) #10
  %10 = bitcast i8* %9 to %1*
  %11 = bitcast i8* %9 to i32*
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 4
  %13 = bitcast i8* %12 to i32*
  store i32 6, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %6, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = tail call i8* @zend_str_tolower_copy(i8* nonnull %18, i8* %1, i64 %6) #9
  %20 = tail call %4* @zend_hash_find(%8* nonnull @module_registry, %1* %10) #9
  %21 = icmp eq %4* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = bitcast %4* %20 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %2, %22
  %26 = phi i8* [ %24, %22 ], [ null, %2 ]
  %27 = getelementptr inbounds i8, i8* %9, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %25
  %33 = and i32 %29, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void @free(i8* nonnull %9) #9
  br label %37

36:                                               ; preds = %32
  tail call void @_efree(i8* nonnull %9) #9
  br label %37

37:                                               ; preds = %25, %35, %36
  %38 = icmp eq i8* %26, null
  br i1 %38, label %90, label %39

39:                                               ; preds = %37
  %40 = load %0*, %0** @reflection_extension_ptr, align 8
  %41 = tail call i32 @_object_init_ex(%4* %0, %0* %40) #9
  %42 = bitcast %4* %0 to %21**
  %43 = load %21*, %21** %42, align 8
  %44 = getelementptr inbounds i8, i8* %26, i64 32
  %45 = bitcast i8* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call noalias i8* @_emalloc(i64 %8) #10
  %48 = bitcast i8* %47 to %1*
  %49 = bitcast i8* %47 to i32*
  store i32 1, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 4
  %51 = bitcast i8* %50 to i32*
  store i32 6, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %47, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %47, i64 16
  %55 = bitcast i8* %54 to i64*
  store i64 %6, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %47, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 1 %46, i64 %6, i1 false) #9
  %57 = getelementptr inbounds %1, %1* %48, i64 0, i32 3, i64 %6
  store i8 0, i8* %57, align 1
  %58 = bitcast %4* %3 to i8**
  store i8* %47, i8** %58, align 8
  %59 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %60 = getelementptr inbounds %6, %6* %59, i64 0, i32 0
  store i32 5126, i32* %60, align 8
  %61 = getelementptr inbounds %21, %21* %43, i64 -1, i32 4
  %62 = bitcast %8** %61 to i8**
  store i8* %26, i8** %62, align 8
  %63 = getelementptr inbounds %21, %21* %43, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %21, %21* %43, i64 -1, i32 5
  %65 = bitcast [1 x %4]* %64 to %0**
  store %0* null, %0** %65, align 8
  %66 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #9
  %67 = tail call noalias i8* @_emalloc(i64 32) #10
  %68 = bitcast i8* %67 to i32*
  store i32 1, i32* %68, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to i32*
  store i32 6, i32* %70, align 4
  %71 = getelementptr inbounds i8, i8* %67, i64 8
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds i8, i8* %67, i64 24
  %74 = bitcast i8* %73 to i32*
  store i32 1701667182, i32* %74, align 8
  %75 = getelementptr inbounds i8, i8* %67, i64 28
  store i8 0, i8* %75, align 1
  %76 = bitcast %4* %4 to i8**
  store i8* %67, i8** %76, align 8
  %77 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 5126, i32* %77, align 8
  call void @zend_std_write_property(%4* %0, %4* nonnull %4, %4* nonnull %3, i8** null) #9
  %78 = bitcast %6* %59 to %58*
  %79 = getelementptr inbounds %58, %58* %78, i64 0, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, 4
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %39
  %84 = bitcast %4* %3 to %59**
  %85 = load %59*, %59** %84, align 8
  %86 = getelementptr inbounds %59, %59* %85, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, -1
  store i32 %88, i32* %86, align 4
  br label %89

89:                                               ; preds = %39, %83
  call void @_zval_ptr_dtor(%4* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #9
  br label %90

90:                                               ; preds = %37, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getExtensionName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %64

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %64, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %64

33:                                               ; preds = %18
  %34 = load i8, i8* %22, align 8
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %37, align 8
  br label %64

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %22, i64 56
  %40 = bitcast i8* %39 to %39**
  %41 = load %39*, %39** %40, align 8
  %42 = icmp eq %39* %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %39, %39* %41, i64 0, i32 6
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i64 @strlen(i8* %45) #11
  %47 = add i64 %46, 32
  %48 = and i64 %47, -8
  %49 = tail call noalias i8* @_emalloc(i64 %48) #10
  %50 = bitcast i8* %49 to %1*
  %51 = bitcast i8* %49 to i32*
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %49, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 6, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %49, i64 8
  %55 = bitcast i8* %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to i64*
  store i64 %46, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %49, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 1 %45, i64 %46, i1 false) #9
  %59 = getelementptr inbounds %1, %1* %50, i64 0, i32 3, i64 %46
  store i8 0, i8* %59, align 1
  %60 = bitcast %4* %1 to i8**
  store i8* %49, i8** %60, align 8
  %61 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %61, align 8
  br label %64

62:                                               ; preds = %38
  %63 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %63, align 8
  br label %64

64:                                               ; preds = %27, %62, %43, %36, %32, %16
  ret void
}

; Function Attrs: argmemonly nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator___construct(%23* nocapture readonly %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4*, align 8
  %4 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = bitcast %4* %5 to %21**
  %7 = load %21*, %21** %6, align 8
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = load %0*, %0** @zend_ce_generator, align 8
  %11 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), %4** nonnull %3, %0* %10) #9
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %43, label %13

13:                                               ; preds = %2
  %14 = bitcast %4** %3 to %64***
  %15 = load %64**, %64*** %14, align 8
  %16 = load %64*, %64** %15, align 8
  %17 = getelementptr inbounds %64, %64* %16, i64 0, i32 2
  %18 = load %23*, %23** %17, align 8
  %19 = icmp eq %23* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = load %0*, %0** @reflection_exception_ptr, align 8
  %22 = call %21* @zend_throw_exception(%0* %21, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @22, i64 0, i64 0), i64 0) #9
  br label %43

23:                                               ; preds = %13
  %24 = getelementptr inbounds %21, %21* %7, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %21, %21* %7, i64 -1, i32 2
  %26 = bitcast %64** %15 to %59**
  %27 = load %59*, %59** %26, align 8
  %28 = getelementptr inbounds %64*, %64** %15, i64 1
  %29 = bitcast %64** %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = bitcast %0** %25 to %59**
  store %59* %27, %59** %31, align 8
  %32 = getelementptr inbounds %21, %21* %7, i64 -1, i32 3
  %33 = bitcast %22** %32 to i32*
  store i32 %30, i32* %33, align 8
  %34 = and i32 %30, 1024
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %59, %59* %27, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 4
  br label %40

40:                                               ; preds = %23, %36
  %41 = load i64, i64* bitcast (%0** @zend_ce_generator to i64*), align 8
  %42 = getelementptr inbounds %21, %21* %7, i64 -1, i32 5, i64 0, i32 0, i32 0
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %2, %40, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator_getTrace(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  store i64 1, i64* %3, align 8
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = bitcast %4* %5 to %21**
  %7 = load %21*, %21** %6, align 8
  %8 = getelementptr inbounds %21, %21* %7, i64 -1, i32 2
  %9 = bitcast %0** %8 to %64**
  %10 = load %64*, %64** %9, align 8
  %11 = load i64, i64* bitcast (%23** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 16) to i64*), align 8
  %12 = getelementptr inbounds %64, %64* %10, i64 0, i32 2
  %13 = load %23*, %23** %12, align 8
  %14 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @23, i64 0, i64 0), i64* nonnull %3) #9
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %82, label %18

18:                                               ; preds = %2
  %19 = icmp eq %23* %13, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = load %0*, %0** @reflection_exception_ptr, align 8
  %22 = call %21* @zend_throw_exception(%0* %21, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @24, i64 0, i64 0), i64 0) #9
  br label %82

23:                                               ; preds = %18
  %24 = getelementptr inbounds %64, %64* %10, i64 0, i32 10, i32 0
  %25 = load %64*, %64** %24, align 8
  %26 = icmp eq %64* %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = load %23*, %23** %12, align 8
  %29 = getelementptr inbounds %23, %23* %28, i64 0, i32 5
  %30 = bitcast %23** %29 to i64*
  %31 = load i64, i64* %30, align 8
  br label %59

32:                                               ; preds = %23
  %33 = getelementptr inbounds %64, %64* %10, i64 0, i32 10, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %64, %64* %10, i64 0, i32 10, i32 3, i32 0
  %38 = load %64*, %64** %37, align 8
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi %64* [ %38, %36 ], [ %10, %32 ]
  %41 = getelementptr inbounds %64, %64* %40, i64 0, i32 10, i32 3, i32 0
  %42 = load %64*, %64** %41, align 8
  %43 = getelementptr inbounds %64, %64* %42, i64 0, i32 2
  %44 = load %23*, %23** %43, align 8
  %45 = icmp eq %23* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %64, %64* %42, i64 0, i32 10, i32 0
  %48 = load %64*, %64** %47, align 8
  %49 = icmp eq %64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46, %39
  %51 = call %64* @zend_generator_update_current(%64* nonnull %10, %64* %40) #9
  br label %52

52:                                               ; preds = %46, %50
  %53 = phi %64* [ %51, %50 ], [ %42, %46 ]
  %54 = load %23*, %23** %12, align 8
  %55 = getelementptr inbounds %23, %23* %54, i64 0, i32 5
  %56 = bitcast %23** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq %64* %10, %53
  br i1 %58, label %59, label %62

59:                                               ; preds = %27, %52
  %60 = phi i64 [ %31, %27 ], [ %57, %52 ]
  %61 = phi %23** [ %29, %27 ], [ %55, %52 ]
  store %23* null, %23** %61, align 8
  br label %69

62:                                               ; preds = %52
  %63 = getelementptr inbounds %64, %64* %53, i64 0, i32 2
  %64 = load %23*, %23** %63, align 8
  %65 = getelementptr inbounds %23, %23* %64, i64 0, i32 5
  %66 = load %23*, %23** %65, align 8
  %67 = getelementptr inbounds %64, %64* %10, i64 0, i32 11
  %68 = getelementptr inbounds %64, %64* %10, i64 0, i32 11, i32 5
  store %23* null, %23** %68, align 8
  store %23* %67, %23** %65, align 8
  br label %69

69:                                               ; preds = %62, %59
  %70 = phi %23** [ %63, %62 ], [ %12, %59 ]
  %71 = phi i64 [ %57, %62 ], [ %60, %59 ]
  %72 = phi %23* [ %66, %62 ], [ null, %59 ]
  %73 = bitcast %23** %70 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* bitcast (%23** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 16) to i64*), align 8
  %75 = load i64, i64* %3, align 8
  %76 = trunc i64 %75 to i32
  call void @zend_fetch_debug_backtrace(%4* %1, i32 0, i32 %76, i32 0) #9
  store i64 %11, i64* bitcast (%23** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 16) to i64*), align 8
  %77 = load %23*, %23** %70, align 8
  %78 = getelementptr inbounds %23, %23* %77, i64 0, i32 5
  store %23* %72, %23** %78, align 8
  %79 = load %23*, %23** %12, align 8
  %80 = getelementptr inbounds %23, %23* %79, i64 0, i32 5
  %81 = bitcast %23** %80 to i64*
  store i64 %71, i64* %81, align 8
  br label %82

82:                                               ; preds = %2, %69, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

declare dso_local void @zend_fetch_debug_backtrace(%4*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator_getExecutingLine(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = bitcast %4* %3 to %21**
  %5 = load %21*, %21** %4, align 8
  %6 = getelementptr inbounds %21, %21* %5, i64 -1, i32 2
  %7 = bitcast %0** %6 to %64**
  %8 = load %64*, %64** %7, align 8
  %9 = getelementptr inbounds %64, %64* %8, i64 0, i32 2
  %10 = load %23*, %23** %9, align 8
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %30, label %17

17:                                               ; preds = %2, %14
  %18 = icmp eq %23* %10, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %0*, %0** @reflection_exception_ptr, align 8
  %21 = tail call %21* @zend_throw_exception(%0* %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @24, i64 0, i64 0), i64 0) #9
  br label %30

22:                                               ; preds = %17
  %23 = getelementptr inbounds %23, %23* %10, i64 0, i32 0
  %24 = load %14*, %14** %23, align 8
  %25 = getelementptr inbounds %14, %14* %24, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %29, align 8
  br label %30

30:                                               ; preds = %14, %22, %19
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator_getExecutingFile(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = bitcast %4* %3 to %21**
  %5 = load %21*, %21** %4, align 8
  %6 = getelementptr inbounds %21, %21* %5, i64 -1, i32 2
  %7 = bitcast %0** %6 to %64**
  %8 = load %64*, %64** %7, align 8
  %9 = getelementptr inbounds %64, %64* %8, i64 0, i32 2
  %10 = load %23*, %23** %9, align 8
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %42, label %17

17:                                               ; preds = %2, %14
  %18 = icmp eq %23* %10, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %0*, %0** @reflection_exception_ptr, align 8
  %21 = tail call %21* @zend_throw_exception(%0* %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @24, i64 0, i64 0), i64 0) #9
  br label %42

22:                                               ; preds = %17
  %23 = getelementptr inbounds %23, %23* %10, i64 0, i32 3
  %24 = bitcast %11** %23 to %12**
  %25 = load %12*, %12** %24, align 8
  %26 = getelementptr inbounds %12, %12* %25, i64 0, i32 20
  %27 = load %1*, %1** %26, align 8
  %28 = bitcast %4* %1 to %1**
  store %1* %27, %1** %28, align 8
  %29 = getelementptr inbounds %1, %1* %27, i64 0, i32 0, i32 1
  %30 = bitcast %3* %29 to %57*
  %31 = getelementptr inbounds %57, %57* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %36, align 8
  br label %42

37:                                               ; preds = %22
  %38 = getelementptr inbounds %1, %1* %27, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  %41 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %41, align 8
  br label %42

42:                                               ; preds = %35, %37, %14, %19
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator_getFunction(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %5 = bitcast %4* %4 to %21**
  %6 = load %21*, %21** %5, align 8
  %7 = getelementptr inbounds %21, %21* %6, i64 -1, i32 2
  %8 = bitcast %0** %7 to %64**
  %9 = load %64*, %64** %8, align 8
  %10 = getelementptr inbounds %64, %64* %9, i64 0, i32 2
  %11 = load %23*, %23** %10, align 8
  %12 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %43, label %18

18:                                               ; preds = %2, %15
  %19 = icmp eq %23* %11, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = load %0*, %0** @reflection_exception_ptr, align 8
  %22 = tail call %21* @zend_throw_exception(%0* %21, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @24, i64 0, i64 0), i64 0) #9
  br label %43

23:                                               ; preds = %18
  %24 = getelementptr inbounds %23, %23* %11, i64 0, i32 3
  %25 = load %11*, %11** %24, align 8
  %26 = getelementptr inbounds %11, %11* %25, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 1048576
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %23
  %31 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %32 = getelementptr inbounds %11, %11* %25, i64 0, i32 0, i32 5
  %33 = bitcast %11** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %4, %4* %3, i64 0, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 1032, i32* %36, align 8
  call fastcc void @428(%11* %25, %4* nonnull %3, %4* %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  br label %43

37:                                               ; preds = %23
  %38 = getelementptr inbounds %11, %11* %25, i64 0, i32 0, i32 4
  %39 = load %0*, %0** %38, align 8
  %40 = icmp eq %0* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  tail call fastcc void @429(%0* nonnull %39, %11* nonnull %25, %4* null, %4* %1)
  br label %43

42:                                               ; preds = %37
  tail call fastcc void @428(%11* nonnull %25, %4* null, %4* %1)
  br label %43

43:                                               ; preds = %30, %42, %41, %15, %20
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @428(%11* %0, %4* readonly %1, %4* %2) unnamed_addr #0 {
  %4 = alloca %4, align 8
  %5 = alloca %4, align 8
  %6 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %11, %11* %0, i64 0, i32 0, i32 3
  %8 = load %1*, %1** %7, align 8
  %9 = bitcast %4* %4 to %1**
  store %1* %8, %1** %9, align 8
  %10 = getelementptr inbounds %1, %1* %8, i64 0, i32 0, i32 1
  %11 = bitcast %3* %10 to %57*
  %12 = getelementptr inbounds %57, %57* %11, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %1, %1* %8, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  br label %20

20:                                               ; preds = %3, %16
  %21 = phi i32 [ 5126, %16 ], [ 6, %3 ]
  %22 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = load %0*, %0** @reflection_function_ptr, align 8
  %24 = tail call i32 @_object_init_ex(%4* %2, %0* %23) #9
  %25 = bitcast %4* %2 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = getelementptr inbounds %11, %11* %0, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %29 = bitcast %8** %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds %21, %21* %26, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %21, %21* %26, i64 -1, i32 5
  %32 = bitcast [1 x %4]* %31 to %0**
  store %0* null, %0** %32, align 8
  %33 = icmp eq %4* %1, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %20
  %35 = bitcast %4* %1 to %59**
  %36 = load %59*, %59** %35, align 8
  %37 = getelementptr inbounds %59, %59* %36, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %21, %21* %26, i64 -1, i32 2
  %45 = bitcast %0** %44 to i64*
  store i64 %41, i64* %45, align 8
  %46 = getelementptr inbounds %21, %21* %26, i64 -1, i32 3
  %47 = bitcast %22** %46 to i32*
  store i32 %43, i32* %47, align 8
  br label %48

48:                                               ; preds = %20, %34
  %49 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  %50 = tail call noalias i8* @_emalloc(i64 32) #10
  %51 = bitcast i8* %50 to i32*
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 6, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 8
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %55, align 8
  %56 = getelementptr inbounds i8, i8* %50, i64 24
  %57 = bitcast i8* %56 to i32*
  store i32 1701667182, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 28
  store i8 0, i8* %58, align 1
  %59 = bitcast %4* %5 to i8**
  store i8* %50, i8** %59, align 8
  %60 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 5126, i32* %60, align 8
  call void @zend_std_write_property(%4* nonnull %2, %4* nonnull %5, %4* nonnull %4, i8** null) #9
  %61 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %62 = bitcast %6* %61 to %58*
  %63 = getelementptr inbounds %58, %58* %62, i64 0, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = and i8 %64, 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %48
  %68 = bitcast %4* %4 to %59**
  %69 = load %59*, %59** %68, align 8
  %70 = getelementptr inbounds %59, %59* %69, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, -1
  store i32 %72, i32* %70, align 4
  br label %73

73:                                               ; preds = %48, %67
  call void @_zval_ptr_dtor(%4* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @429(%0* %0, %11* %1, %4* readonly %2, %4* %3) unnamed_addr #0 {
  %5 = alloca %4, align 8
  %6 = alloca %4, align 8
  %7 = alloca %4, align 8
  %8 = alloca %4, align 8
  %9 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 4
  %12 = load %0*, %0** %11, align 8
  %13 = icmp eq %0* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %0, %0* %12, i64 0, i32 37
  %16 = load %26**, %26*** %15, align 8
  %17 = icmp eq %26** %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = tail call %1* @zend_resolve_method_name(%0* %0, %11* nonnull %1) #9
  br label %23

20:                                               ; preds = %14, %4
  %21 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 3
  %22 = load %1*, %1** %21, align 8
  br label %23

23:                                               ; preds = %20, %18
  %24 = phi %1* [ %19, %18 ], [ %22, %20 ]
  %25 = bitcast %4* %5 to %1**
  store %1* %24, %1** %25, align 8
  %26 = getelementptr inbounds %1, %1* %24, i64 0, i32 0, i32 1
  %27 = bitcast %3* %26 to %57*
  %28 = getelementptr inbounds %57, %57* %27, i64 0, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = and i8 %29, 2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %23
  %33 = getelementptr inbounds %1, %1* %24, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 8
  br label %36

36:                                               ; preds = %23, %32
  %37 = phi i32 [ 5126, %32 ], [ 6, %23 ]
  %38 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 %37, i32* %38, align 8
  %39 = load %0*, %0** %11, align 8
  %40 = getelementptr inbounds %0, %0* %39, i64 0, i32 1
  %41 = load %1*, %1** %40, align 8
  %42 = bitcast %4* %6 to %1**
  store %1* %41, %1** %42, align 8
  %43 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 1
  %44 = bitcast %3* %43 to %57*
  %45 = getelementptr inbounds %57, %57* %44, i64 0, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %36
  %50 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 8
  br label %53

53:                                               ; preds = %36, %49
  %54 = phi i32 [ 5126, %49 ], [ 6, %36 ]
  %55 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 %54, i32* %55, align 8
  %56 = load %0*, %0** @reflection_method_ptr, align 8
  %57 = tail call i32 @_object_init_ex(%4* %3, %0* %56) #9
  %58 = bitcast %4* %3 to %21**
  %59 = load %21*, %21** %58, align 8
  %60 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %21, %21* %59, i64 -1, i32 4
  %62 = bitcast %8** %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = getelementptr inbounds %21, %21* %59, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds %21, %21* %59, i64 -1, i32 5
  %65 = bitcast [1 x %4]* %64 to %0**
  store %0* %0, %0** %65, align 8
  %66 = icmp eq %4* %2, null
  br i1 %66, label %81, label %67

67:                                               ; preds = %53
  %68 = bitcast %4* %2 to %59**
  %69 = load %59*, %59** %68, align 8
  %70 = getelementptr inbounds %59, %59* %69, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %4, %4* %2, i64 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %4, %4* %2, i64 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %21, %21* %59, i64 -1, i32 2
  %78 = bitcast %0** %77 to i64*
  store i64 %74, i64* %78, align 8
  %79 = getelementptr inbounds %21, %21* %59, i64 -1, i32 3
  %80 = bitcast %22** %79 to i32*
  store i32 %76, i32* %80, align 8
  br label %81

81:                                               ; preds = %53, %67
  %82 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #9
  %83 = tail call noalias i8* @_emalloc(i64 32) #10
  %84 = bitcast i8* %83 to i32*
  store i32 1, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 6, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %83, i64 8
  %88 = bitcast i8* %87 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %88, align 8
  %89 = getelementptr inbounds i8, i8* %83, i64 24
  %90 = bitcast i8* %89 to i32*
  store i32 1701667182, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %83, i64 28
  store i8 0, i8* %91, align 1
  %92 = bitcast %4* %7 to i8**
  store i8* %83, i8** %92, align 8
  %93 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 5126, i32* %93, align 8
  call void @zend_std_write_property(%4* nonnull %3, %4* nonnull %7, %4* nonnull %5, i8** null) #9
  %94 = getelementptr inbounds %4, %4* %5, i64 0, i32 1
  %95 = bitcast %6* %94 to %58*
  %96 = getelementptr inbounds %58, %58* %95, i64 0, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %81
  %101 = bitcast %4* %5 to %59**
  %102 = load %59*, %59** %101, align 8
  %103 = getelementptr inbounds %59, %59* %102, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, -1
  store i32 %105, i32* %103, align 4
  br label %106

106:                                              ; preds = %81, %100
  call void @_zval_ptr_dtor(%4* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #9
  %107 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #9
  %108 = call noalias i8* @_emalloc(i64 32) #10
  %109 = bitcast i8* %108 to i32*
  store i32 1, i32* %109, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 4
  %111 = bitcast i8* %110 to i32*
  store i32 6, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %108, i64 8
  %113 = bitcast i8* %112 to <2 x i64>*
  store <2 x i64> <i64 0, i64 5>, <2 x i64>* %113, align 8
  %114 = getelementptr inbounds i8, i8* %108, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i1 false) #9
  %115 = getelementptr inbounds i8, i8* %108, i64 29
  store i8 0, i8* %115, align 1
  %116 = bitcast %4* %8 to i8**
  store i8* %108, i8** %116, align 8
  %117 = getelementptr inbounds %4, %4* %8, i64 0, i32 1, i32 0
  store i32 5126, i32* %117, align 8
  call void @zend_std_write_property(%4* nonnull %3, %4* nonnull %8, %4* nonnull %6, i8** null) #9
  %118 = getelementptr inbounds %4, %4* %6, i64 0, i32 1
  %119 = bitcast %6* %118 to %58*
  %120 = getelementptr inbounds %58, %58* %119, i64 0, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = and i8 %121, 4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %130, label %124

124:                                              ; preds = %106
  %125 = bitcast %4* %6 to %59**
  %126 = load %59*, %59** %125, align 8
  %127 = getelementptr inbounds %59, %59* %126, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, -1
  store i32 %129, i32* %127, align 4
  br label %130

130:                                              ; preds = %106, %124
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator_getThis(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = bitcast %4* %3 to %21**
  %5 = load %21*, %21** %4, align 8
  %6 = getelementptr inbounds %21, %21* %5, i64 -1, i32 2
  %7 = bitcast %0** %6 to %64**
  %8 = load %64*, %64** %7, align 8
  %9 = getelementptr inbounds %64, %64* %8, i64 0, i32 2
  %10 = load %23*, %23** %9, align 8
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %43, label %17

17:                                               ; preds = %2, %14
  %18 = icmp eq %23* %10, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %0*, %0** @reflection_exception_ptr, align 8
  %21 = tail call %21* @zend_throw_exception(%0* %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @24, i64 0, i64 0), i64 0) #9
  br label %43

22:                                               ; preds = %17
  %23 = getelementptr inbounds %23, %23* %10, i64 0, i32 4, i32 1
  %24 = bitcast %6* %23 to i8*
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 8
  br i1 %26, label %27, label %41

27:                                               ; preds = %22
  %28 = getelementptr inbounds %23, %23* %10, i64 0, i32 4
  %29 = bitcast %4* %28 to %59**
  %30 = load %59*, %59** %29, align 8
  %31 = getelementptr inbounds %23, %23* %10, i64 0, i32 4, i32 1, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = bitcast %4* %1 to %59**
  store %59* %30, %59** %33, align 8
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %34, align 8
  %35 = and i32 %32, 1024
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %59, %59* %30, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  br label %43

41:                                               ; preds = %22
  %42 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %42, align 8
  br label %43

43:                                               ; preds = %41, %27, %37, %14, %19
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_generator_getExecutingGenerator(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = bitcast %4* %3 to %21**
  %5 = load %21*, %21** %4, align 8
  %6 = getelementptr inbounds %21, %21* %5, i64 -1, i32 2
  %7 = bitcast %0** %6 to %64**
  %8 = load %64*, %64** %7, align 8
  %9 = getelementptr inbounds %64, %64* %8, i64 0, i32 2
  %10 = load %23*, %23** %9, align 8
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %54, label %17

17:                                               ; preds = %2, %14
  %18 = icmp eq %23* %10, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %0*, %0** @reflection_exception_ptr, align 8
  %21 = tail call %21* @zend_throw_exception(%0* %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @24, i64 0, i64 0), i64 0) #9
  br label %54

22:                                               ; preds = %17
  %23 = getelementptr inbounds %64, %64* %8, i64 0, i32 10, i32 0
  %24 = load %64*, %64** %23, align 8
  %25 = icmp eq %64* %24, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %64, %64* %8, i64 0, i32 10, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %64, %64* %8, i64 0, i32 10, i32 3, i32 0
  %32 = load %64*, %64** %31, align 8
  br label %33

33:                                               ; preds = %30, %26
  %34 = phi %64* [ %32, %30 ], [ %8, %26 ]
  %35 = getelementptr inbounds %64, %64* %34, i64 0, i32 10, i32 3, i32 0
  %36 = load %64*, %64** %35, align 8
  %37 = getelementptr inbounds %64, %64* %36, i64 0, i32 2
  %38 = load %23*, %23** %37, align 8
  %39 = icmp eq %23* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %64, %64* %36, i64 0, i32 10, i32 0
  %42 = load %64*, %64** %41, align 8
  %43 = icmp eq %64* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40, %33
  %45 = tail call %64* @zend_generator_update_current(%64* nonnull %8, %64* %34) #9
  br label %46

46:                                               ; preds = %22, %40, %44
  %47 = phi %64* [ %45, %44 ], [ %8, %22 ], [ %36, %40 ]
  %48 = getelementptr inbounds %64, %64* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = getelementptr inbounds %64, %64* %47, i64 0, i32 0
  %52 = bitcast %4* %1 to %21**
  store %21* %51, %21** %52, align 8
  %53 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1032, i32* %53, align 8
  br label %54

54:                                               ; preds = %14, %46, %19
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_parameter_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4, align 8
  %6 = alloca %4, align 8
  %7 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @25, i64 0, i64 0), %4** nonnull %3, %4** nonnull %4) #9
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %426, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %16 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %17 = bitcast %6* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 8
  %20 = select i1 %19, %4* %15, %4* null
  %21 = bitcast %4* %20 to %21**
  %22 = load %21*, %21** %21, align 8
  %23 = load %4*, %4** %3, align 8
  %24 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %25 = bitcast %6* %24 to i8*
  %26 = load i8, i8* %25, align 8
  switch i8 %26, label %170 [
    i8 6, label %27
    i8 7, label %54
    i8 8, label %138
  ]

27:                                               ; preds = %14
  %28 = bitcast %4* %23 to %1**
  %29 = bitcast %4** %3 to %1***
  %30 = load %1*, %1** %28, align 8
  %31 = getelementptr inbounds %1, %1* %30, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %1, %1* %30, i64 0, i32 3, i64 0
  %34 = call i8* @zend_str_tolower_dup(i8* nonnull %33, i64 %32) #9
  %35 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 10), align 8
  %36 = call %4* @zend_hash_str_find(%8* %35, i8* %34, i64 %32) #9
  %37 = icmp eq %4* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %27
  call void @_efree(i8* %34) #9
  br label %43

39:                                               ; preds = %27
  %40 = bitcast %4* %36 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  call void @_efree(i8* %34) #9
  br i1 %42, label %43, label %49

43:                                               ; preds = %38, %39
  %44 = load %0*, %0** @reflection_exception_ptr, align 8
  %45 = load %1**, %1*** %29, align 8
  %46 = load %1*, %1** %45, align 8
  %47 = getelementptr inbounds %1, %1* %46, i64 0, i32 3, i64 0
  %48 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %44, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @15, i64 0, i64 0), i8* nonnull %47) #9
  br label %426

49:                                               ; preds = %39
  %50 = bitcast i8* %41 to %11*
  %51 = getelementptr inbounds i8, i8* %41, i64 16
  %52 = bitcast i8* %51 to %0**
  %53 = load %0*, %0** %52, align 8
  br label %173

54:                                               ; preds = %14
  %55 = bitcast %4* %23 to %8**
  %56 = load %8*, %8** %55, align 8
  %57 = call %4* @zend_hash_index_find(%8* %56, i64 0) #9
  %58 = icmp eq %4* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = bitcast %4** %3 to %8***
  %61 = load %8**, %8*** %60, align 8
  %62 = load %8*, %8** %61, align 8
  %63 = call %4* @zend_hash_index_find(%8* %62, i64 1) #9
  %64 = icmp eq %4* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %59, %54
  %66 = load %0*, %0** @reflection_exception_ptr, align 8
  %67 = call %21* @zend_throw_exception(%0* %66, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @26, i64 0, i64 0), i64 0) #9
  br label %426

68:                                               ; preds = %59
  %69 = getelementptr inbounds %4, %4* %57, i64 0, i32 1
  %70 = bitcast %6* %69 to i8*
  %71 = load i8, i8* %70, align 8
  switch i8 %71, label %77 [
    i8 8, label %72
    i8 6, label %78
  ]

72:                                               ; preds = %68
  %73 = bitcast %4* %57 to %21**
  %74 = load %21*, %21** %73, align 8
  %75 = getelementptr inbounds %21, %21* %74, i64 0, i32 2
  %76 = load %0*, %0** %75, align 8
  br label %88

77:                                               ; preds = %68
  call void @_convert_to_string(%4* nonnull %57) #9
  br label %78

78:                                               ; preds = %68, %77
  %79 = bitcast %4* %57 to %1**
  %80 = load %1*, %1** %79, align 8
  %81 = call %0* @zend_lookup_class(%1* %80) #9
  %82 = icmp eq %0* %81, null
  br i1 %82, label %83, label %88

83:                                               ; preds = %78
  %84 = load %0*, %0** @reflection_exception_ptr, align 8
  %85 = load %1*, %1** %79, align 8
  %86 = getelementptr inbounds %1, %1* %85, i64 0, i32 3, i64 0
  %87 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %84, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %86) #9
  br label %426

88:                                               ; preds = %78, %72
  %89 = phi %0* [ %76, %72 ], [ %81, %78 ]
  %90 = getelementptr inbounds %4, %4* %63, i64 0, i32 1
  %91 = bitcast %6* %90 to i8*
  %92 = load i8, i8* %91, align 8
  %93 = icmp eq i8 %92, 6
  br i1 %93, label %95, label %94

94:                                               ; preds = %88
  call void @_convert_to_string(%4* nonnull %63) #9
  br label %95

95:                                               ; preds = %88, %94
  %96 = bitcast %4* %63 to %1**
  %97 = load %1*, %1** %96, align 8
  %98 = getelementptr inbounds %1, %1* %97, i64 0, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %1, %1* %97, i64 0, i32 3, i64 0
  %101 = call i8* @zend_str_tolower_dup(i8* nonnull %100, i64 %99) #9
  %102 = load %0*, %0** @zend_ce_closure, align 8
  %103 = icmp eq %0* %89, %102
  br i1 %103, label %104, label %119

104:                                              ; preds = %95
  %105 = load i8, i8* %70, align 8
  %106 = icmp eq i8 %105, 8
  %107 = icmp eq i64 %99, 8
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %119

109:                                              ; preds = %104
  %110 = call i32 @memcmp(i8* %101, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 8) #11
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %119

112:                                              ; preds = %109
  %113 = bitcast %4* %57 to %21**
  %114 = load %21*, %21** %113, align 8
  %115 = call %11* @zend_get_closure_invoke_method(%21* %114) #9
  %116 = icmp eq %11* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %11, %11* %115, i64 0, i32 0, i32 5
  store %11* null, %11** %118, align 8
  br label %136

119:                                              ; preds = %112, %109, %104, %95
  %120 = getelementptr inbounds %0, %0* %89, i64 0, i32 10
  %121 = call %4* @zend_hash_str_find(%8* nonnull %120, i8* %101, i64 %99) #9
  %122 = icmp eq %4* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = bitcast %4* %121 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast i8* %125 to %11*
  %127 = icmp eq i8* %125, null
  br i1 %127, label %128, label %136

128:                                              ; preds = %119, %123
  call void @_efree(i8* %101) #9
  %129 = load %0*, %0** @reflection_exception_ptr, align 8
  %130 = getelementptr inbounds %0, %0* %89, i64 0, i32 1
  %131 = load %1*, %1** %130, align 8
  %132 = getelementptr inbounds %1, %1* %131, i64 0, i32 3, i64 0
  %133 = load %1*, %1** %96, align 8
  %134 = getelementptr inbounds %1, %1* %133, i64 0, i32 3, i64 0
  %135 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %129, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @29, i64 0, i64 0), i8* nonnull %132, i8* nonnull %134) #9
  br label %426

136:                                              ; preds = %117, %123
  %137 = phi %11* [ %115, %117 ], [ %126, %123 ]
  call void @_efree(i8* %101) #9
  br label %173

138:                                              ; preds = %14
  %139 = bitcast %4* %23 to %21**
  %140 = load %21*, %21** %139, align 8
  %141 = getelementptr inbounds %21, %21* %140, i64 0, i32 2
  %142 = load %0*, %0** %141, align 8
  %143 = load %0*, %0** @zend_ce_closure, align 8
  %144 = call zeroext i8 @instanceof_function(%0* %142, %0* %143) #9
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %138
  %147 = load %4*, %4** %3, align 8
  %148 = call %11* @zend_get_closure_method_def(%4* %147) #9
  %149 = bitcast %4** %3 to %59***
  %150 = load %59**, %59*** %149, align 8
  %151 = load %59*, %59** %150, align 8
  %152 = getelementptr inbounds %59, %59* %151, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  br label %173

155:                                              ; preds = %138
  %156 = getelementptr inbounds %0, %0* %142, i64 0, i32 10
  %157 = call %4* @zend_hash_str_find(%8* nonnull %156, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 9) #9
  %158 = icmp eq %4* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = bitcast %4* %157 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = bitcast i8* %161 to %11*
  %163 = icmp eq i8* %161, null
  br i1 %163, label %164, label %173

164:                                              ; preds = %155, %159
  %165 = load %0*, %0** @reflection_exception_ptr, align 8
  %166 = getelementptr inbounds %0, %0* %142, i64 0, i32 1
  %167 = load %1*, %1** %166, align 8
  %168 = getelementptr inbounds %1, %1* %167, i64 0, i32 3, i64 0
  %169 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %165, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @29, i64 0, i64 0), i8* nonnull %168, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0)) #9
  br label %426

170:                                              ; preds = %14
  %171 = load %0*, %0** @reflection_exception_ptr, align 8
  %172 = call %21* @zend_throw_exception(%0* %171, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @30, i64 0, i64 0), i64 0) #9
  br label %426

173:                                              ; preds = %136, %146, %159, %49
  %174 = phi i8 [ 1, %146 ], [ 0, %159 ], [ 0, %136 ], [ 0, %49 ]
  %175 = phi %0* [ %142, %146 ], [ %142, %159 ], [ %89, %136 ], [ %53, %49 ]
  %176 = phi %11* [ %148, %146 ], [ %162, %159 ], [ %137, %136 ], [ %50, %49 ]
  %177 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 8
  %178 = load %13*, %13** %177, align 8
  %179 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 6
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = lshr i32 %182, 24
  %184 = and i32 %183, 1
  %185 = add i32 %184, %180
  %186 = load %4*, %4** %4, align 8
  %187 = getelementptr inbounds %4, %4* %186, i64 0, i32 1
  %188 = bitcast %6* %187 to i8*
  %189 = load i8, i8* %188, align 8
  switch i8 %189, label %235 [
    i8 4, label %190
    i8 6, label %236
  ]

190:                                              ; preds = %173
  %191 = getelementptr inbounds %4, %4* %186, i64 0, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = trunc i64 %192 to i32
  %194 = icmp sgt i32 %193, -1
  %195 = icmp ugt i32 %185, %193
  %196 = and i1 %194, %195
  br i1 %196, label %325, label %197

197:                                              ; preds = %190
  %198 = and i32 %182, 2097152
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %228, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 0
  %202 = load i8, i8* %201, align 8
  %203 = icmp eq i8 %202, 3
  br i1 %203, label %224, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 3
  %206 = load %1*, %1** %205, align 8
  %207 = getelementptr inbounds %1, %1* %206, i64 0, i32 0, i32 1
  %208 = bitcast %3* %207 to %57*
  %209 = getelementptr inbounds %57, %57* %208, i64 0, i32 1
  %210 = load i8, i8* %209, align 1
  %211 = and i8 %210, 2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %224

213:                                              ; preds = %204
  %214 = getelementptr inbounds %1, %1* %206, i64 0, i32 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = add i32 %215, -1
  store i32 %216, i32* %214, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %224

218:                                              ; preds = %213
  %219 = and i8 %210, 1
  %220 = icmp eq i8 %219, 0
  %221 = bitcast %1* %206 to i8*
  br i1 %220, label %223, label %222

222:                                              ; preds = %218
  call void @free(i8* %221) #9
  br label %224

223:                                              ; preds = %218
  call void @_efree(i8* %221) #9
  br label %224

224:                                              ; preds = %223, %222, %213, %204, %200
  %225 = icmp eq %11* %176, getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57)
  br i1 %225, label %226, label %227

226:                                              ; preds = %224
  store %1* null, %1** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 3), align 8
  br label %228

227:                                              ; preds = %224
  call void @_efree(i8* %201) #9
  br label %228

228:                                              ; preds = %197, %226, %227
  %229 = icmp eq i8 %174, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = load %4*, %4** %3, align 8
  call void @_zval_ptr_dtor(%4* %231) #9
  br label %232

232:                                              ; preds = %228, %230
  %233 = load %0*, %0** @reflection_exception_ptr, align 8
  %234 = call %21* @zend_throw_exception(%0* %233, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @31, i64 0, i64 0), i64 0) #9
  br label %426

235:                                              ; preds = %173
  call void @_convert_to_string(%4* %186) #9
  br label %236

236:                                              ; preds = %173, %235
  %237 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 0
  %238 = load i8, i8* %237, align 8
  %239 = icmp eq i8 %238, 1
  br i1 %239, label %240, label %264

240:                                              ; preds = %236
  %241 = load i32, i32* %181, align 4
  %242 = trunc i32 %241 to i8
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %264, label %244

244:                                              ; preds = %240
  %245 = icmp eq i32 %185, 0
  br i1 %245, label %284, label %246

246:                                              ; preds = %244
  %247 = bitcast %4** %4 to %1***
  %248 = load %1**, %1*** %247, align 8
  %249 = zext i32 %185 to i64
  br label %250

250:                                              ; preds = %246, %261
  %251 = phi i64 [ 0, %246 ], [ %262, %261 ]
  %252 = getelementptr inbounds %13, %13* %178, i64 %251, i32 0
  %253 = load %1*, %1** %252, align 8
  %254 = icmp eq %1* %253, null
  br i1 %254, label %261, label %255

255:                                              ; preds = %250
  %256 = bitcast %1* %253 to i8*
  %257 = load %1*, %1** %248, align 8
  %258 = getelementptr inbounds %1, %1* %257, i64 0, i32 3, i64 0
  %259 = call i32 @strcmp(i8* %256, i8* nonnull %258) #11
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %323, label %261

261:                                              ; preds = %250, %255
  %262 = add nuw nsw i64 %251, 1
  %263 = icmp ult i64 %262, %249
  br i1 %263, label %250, label %284

264:                                              ; preds = %240, %236
  %265 = icmp eq i32 %185, 0
  br i1 %265, label %284, label %266

266:                                              ; preds = %264
  %267 = bitcast %4** %4 to %1***
  %268 = load %1**, %1*** %267, align 8
  %269 = zext i32 %185 to i64
  br label %270

270:                                              ; preds = %266, %281
  %271 = phi i64 [ 0, %266 ], [ %282, %281 ]
  %272 = getelementptr inbounds %13, %13* %178, i64 %271, i32 0
  %273 = load %1*, %1** %272, align 8
  %274 = icmp eq %1* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %270
  %276 = getelementptr inbounds %1, %1* %273, i64 0, i32 3, i64 0
  %277 = load %1*, %1** %268, align 8
  %278 = getelementptr inbounds %1, %1* %277, i64 0, i32 3, i64 0
  %279 = call i32 @strcmp(i8* nonnull %276, i8* nonnull %278) #11
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %321, label %281

281:                                              ; preds = %270, %275
  %282 = add nuw nsw i64 %271, 1
  %283 = icmp ult i64 %282, %269
  br i1 %283, label %270, label %284

284:                                              ; preds = %261, %281, %244, %264
  %285 = load i32, i32* %181, align 4
  %286 = and i32 %285, 2097152
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %314, label %288

288:                                              ; preds = %284
  %289 = icmp eq i8 %238, 3
  br i1 %289, label %310, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 3
  %292 = load %1*, %1** %291, align 8
  %293 = getelementptr inbounds %1, %1* %292, i64 0, i32 0, i32 1
  %294 = bitcast %3* %293 to %57*
  %295 = getelementptr inbounds %57, %57* %294, i64 0, i32 1
  %296 = load i8, i8* %295, align 1
  %297 = and i8 %296, 2
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %310

299:                                              ; preds = %290
  %300 = getelementptr inbounds %1, %1* %292, i64 0, i32 0, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = add i32 %301, -1
  store i32 %302, i32* %300, align 8
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %310

304:                                              ; preds = %299
  %305 = and i8 %296, 1
  %306 = icmp eq i8 %305, 0
  %307 = bitcast %1* %292 to i8*
  br i1 %306, label %309, label %308

308:                                              ; preds = %304
  call void @free(i8* %307) #9
  br label %310

309:                                              ; preds = %304
  call void @_efree(i8* %307) #9
  br label %310

310:                                              ; preds = %309, %308, %299, %290, %288
  %311 = icmp eq %11* %176, getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57)
  br i1 %311, label %312, label %313

312:                                              ; preds = %310
  store %1* null, %1** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 3), align 8
  br label %314

313:                                              ; preds = %310
  call void @_efree(i8* nonnull %237) #9
  br label %314

314:                                              ; preds = %284, %312, %313
  %315 = icmp eq i8 %174, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = load %4*, %4** %3, align 8
  call void @_zval_ptr_dtor(%4* %317) #9
  br label %318

318:                                              ; preds = %314, %316
  %319 = load %0*, %0** @reflection_exception_ptr, align 8
  %320 = call %21* @zend_throw_exception(%0* %319, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @32, i64 0, i64 0), i64 0) #9
  br label %426

321:                                              ; preds = %275
  %322 = trunc i64 %271 to i32
  br label %325

323:                                              ; preds = %255
  %324 = trunc i64 %251 to i32
  br label %325

325:                                              ; preds = %323, %321, %190
  %326 = phi i32 [ %193, %190 ], [ %322, %321 ], [ %324, %323 ]
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds %13, %13* %178, i64 %327
  %329 = getelementptr inbounds %13, %13* %328, i64 0, i32 0
  %330 = load %1*, %1** %329, align 8
  %331 = icmp eq %1* %330, null
  %332 = bitcast %1* %330 to i8*
  br i1 %331, label %369, label %333

333:                                              ; preds = %325
  %334 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 0
  %335 = load i8, i8* %334, align 8
  %336 = icmp eq i8 %335, 1
  br i1 %336, label %337, label %357

337:                                              ; preds = %333
  %338 = load i32, i32* %181, align 4
  %339 = trunc i32 %338 to i8
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %357, label %341

341:                                              ; preds = %337
  %342 = call i64 @strlen(i8* %332) #11
  %343 = add i64 %342, 32
  %344 = and i64 %343, -8
  %345 = call noalias i8* @_emalloc(i64 %344) #10
  %346 = bitcast i8* %345 to %1*
  %347 = bitcast i8* %345 to i32*
  store i32 1, i32* %347, align 8
  %348 = getelementptr inbounds i8, i8* %345, i64 4
  %349 = bitcast i8* %348 to i32*
  store i32 6, i32* %349, align 4
  %350 = getelementptr inbounds i8, i8* %345, i64 8
  %351 = bitcast i8* %350 to i64*
  store i64 0, i64* %351, align 8
  %352 = getelementptr inbounds i8, i8* %345, i64 16
  %353 = bitcast i8* %352 to i64*
  store i64 %342, i64* %353, align 8
  %354 = getelementptr inbounds i8, i8* %345, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %354, i8* align 1 %332, i64 %342, i1 false) #9
  %355 = getelementptr inbounds %1, %1* %346, i64 0, i32 3, i64 %342
  store i8 0, i8* %355, align 1
  %356 = bitcast %4* %5 to i8**
  store i8* %345, i8** %356, align 8
  br label %369

357:                                              ; preds = %333, %337
  %358 = bitcast %4* %5 to %1**
  store %1* %330, %1** %358, align 8
  %359 = getelementptr inbounds %1, %1* %330, i64 0, i32 0, i32 1
  %360 = bitcast %3* %359 to %57*
  %361 = getelementptr inbounds %57, %57* %360, i64 0, i32 1
  %362 = load i8, i8* %361, align 1
  %363 = and i8 %362, 2
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %365, label %369

365:                                              ; preds = %357
  %366 = getelementptr inbounds %1, %1* %330, i64 0, i32 0, i32 0
  %367 = load i32, i32* %366, align 8
  %368 = add i32 %367, 1
  store i32 %368, i32* %366, align 8
  br label %369

369:                                              ; preds = %325, %357, %365, %341
  %370 = phi i32 [ 5126, %365 ], [ 5126, %341 ], [ 6, %357 ], [ 1, %325 ]
  %371 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 %370, i32* %371, align 8
  %372 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %372) #9
  %373 = call noalias i8* @_emalloc(i64 32) #10
  %374 = bitcast i8* %373 to i32*
  store i32 1, i32* %374, align 8
  %375 = getelementptr inbounds i8, i8* %373, i64 4
  %376 = bitcast i8* %375 to i32*
  store i32 6, i32* %376, align 4
  %377 = getelementptr inbounds i8, i8* %373, i64 8
  %378 = bitcast i8* %377 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %378, align 8
  %379 = getelementptr inbounds i8, i8* %373, i64 24
  %380 = bitcast i8* %379 to i32*
  store i32 1701667182, i32* %380, align 8
  %381 = getelementptr inbounds i8, i8* %373, i64 28
  store i8 0, i8* %381, align 1
  %382 = bitcast %4* %6 to i8**
  store i8* %373, i8** %382, align 8
  %383 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 5126, i32* %383, align 8
  call void @zend_std_write_property(%4* %20, %4* nonnull %6, %4* nonnull %5, i8** null) #9
  %384 = getelementptr inbounds %4, %4* %5, i64 0, i32 1
  %385 = bitcast %6* %384 to %58*
  %386 = getelementptr inbounds %58, %58* %385, i64 0, i32 1
  %387 = load i8, i8* %386, align 1
  %388 = and i8 %387, 4
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %396, label %390

390:                                              ; preds = %369
  %391 = bitcast %4* %5 to %59**
  %392 = load %59*, %59** %391, align 8
  %393 = getelementptr inbounds %59, %59* %392, i64 0, i32 0, i32 0
  %394 = load i32, i32* %393, align 4
  %395 = add i32 %394, -1
  store i32 %395, i32* %393, align 4
  br label %396

396:                                              ; preds = %369, %390
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %372) #9
  %397 = call noalias i8* @_emalloc_24() #9
  %398 = getelementptr inbounds i8, i8* %397, i64 8
  %399 = bitcast i8* %398 to %13**
  store %13* %328, %13** %399, align 8
  %400 = bitcast i8* %397 to i32*
  store i32 %326, i32* %400, align 8
  %401 = getelementptr inbounds %11, %11* %176, i64 0, i32 0, i32 7
  %402 = load i32, i32* %401, align 4
  %403 = icmp ult i32 %326, %402
  %404 = zext i1 %403 to i8
  %405 = getelementptr inbounds i8, i8* %397, i64 4
  store i8 %404, i8* %405, align 4
  %406 = getelementptr inbounds i8, i8* %397, i64 16
  %407 = bitcast i8* %406 to %11**
  store %11* %176, %11** %407, align 8
  %408 = getelementptr inbounds %21, %21* %22, i64 -1, i32 4
  %409 = bitcast %8** %408 to i8**
  store i8* %397, i8** %409, align 8
  %410 = getelementptr inbounds %21, %21* %22, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 3, i32* %410, align 8
  %411 = getelementptr inbounds %21, %21* %22, i64 -1, i32 5
  %412 = bitcast [1 x %4]* %411 to %0**
  store %0* %175, %0** %412, align 8
  %413 = load %4*, %4** %3, align 8
  %414 = icmp eq %4* %413, null
  %415 = icmp eq i8 %174, 0
  %416 = or i1 %415, %414
  br i1 %416, label %426, label %417

417:                                              ; preds = %396
  %418 = getelementptr inbounds %4, %4* %413, i64 0, i32 0, i32 0
  %419 = load i64, i64* %418, align 8
  %420 = getelementptr inbounds %4, %4* %413, i64 0, i32 1, i32 0
  %421 = load i32, i32* %420, align 8
  %422 = getelementptr inbounds %21, %21* %22, i64 -1, i32 2
  %423 = bitcast %0** %422 to i64*
  store i64 %419, i64* %423, align 8
  %424 = getelementptr inbounds %21, %21* %22, i64 -1, i32 3
  %425 = bitcast %22** %424 to i32*
  store i32 %421, i32* %425, align 8
  br label %426

426:                                              ; preds = %83, %128, %65, %417, %396, %318, %43, %2, %232, %170, %164
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

declare dso_local %4* @zend_hash_index_find(%8*, i64) local_unnamed_addr #2

declare dso_local void @_convert_to_string(%4*) local_unnamed_addr #2

declare dso_local %0* @zend_lookup_class(%1*) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare dso_local %11* @zend_get_closure_invoke_method(%21*) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare dso_local noalias i8* @_emalloc_24() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %60, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %60, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %60

28:                                               ; preds = %12
  %29 = getelementptr inbounds i8, i8* %17, i64 16
  %30 = bitcast i8* %29 to %11**
  %31 = load %11*, %11** %30, align 8
  %32 = getelementptr inbounds i8, i8* %17, i64 8
  %33 = bitcast i8* %32 to %13**
  %34 = load %13*, %13** %33, align 8
  %35 = bitcast i8* %17 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds i8, i8* %17, i64 4
  %38 = load i8, i8* %37, align 4
  call fastcc void @430(%62* nonnull %3, %11* %31, %13* %34, i32 %36, i8 zeroext %38)
  %39 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %40 = load %1*, %1** %39, align 8
  %41 = icmp eq %1* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %28
  %43 = getelementptr inbounds %1, %1* %40, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %1, %1* %40, i64 0, i32 3, i64 %44
  store i8 0, i8* %45, align 1
  %46 = load %1*, %1** %39, align 8
  store %1* null, %1** %39, align 8
  br label %49

47:                                               ; preds = %28
  %48 = load %1*, %1** @zend_empty_string, align 8
  br label %49

49:                                               ; preds = %42, %47
  %50 = phi %1* [ %46, %42 ], [ %48, %47 ]
  %51 = bitcast %4* %1 to %1**
  store %1* %50, %1** %51, align 8
  %52 = getelementptr inbounds %1, %1* %50, i64 0, i32 0, i32 1
  %53 = bitcast %3* %52 to %57*
  %54 = getelementptr inbounds %57, %57* %53, i64 0, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  %58 = select i1 %57, i32 5126, i32 6
  %59 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %58, i32* %59, align 8
  br label %60

60:                                               ; preds = %22, %9, %49, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @430(%62* %0, %11* nocapture readonly %1, %13* nocapture readonly %2, i32 %3, i8 zeroext %4) unnamed_addr #0 {
  %6 = alloca %4, align 8
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @166, i64 0, i64 0), i32 %3) #9
  %7 = icmp ne i8 %4, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @167, i64 0, i64 0)) #9
  br label %10

9:                                                ; preds = %5
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @168, i64 0, i64 0)) #9
  br label %10

10:                                               ; preds = %9, %8
  %11 = getelementptr inbounds %13, %13* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, 511
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = and i64 %12, -4
  %16 = inttoptr i64 %15 to %1*
  %17 = getelementptr inbounds %1, %1* %16, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @160, i64 0, i64 0), i8* nonnull %17) #9
  %18 = load i64, i64* %11, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %14
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @161, i64 0, i64 0)) #9
  br label %32

22:                                               ; preds = %10
  %23 = icmp ugt i64 %12, 1
  br i1 %23, label %24, label %32

24:                                               ; preds = %22
  %25 = lshr i64 %12, 1
  %26 = trunc i64 %25 to i32
  %27 = tail call i8* @zend_get_type_by_const(i32 %26) #9
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @160, i64 0, i64 0), i8* %27) #9
  %28 = load i64, i64* %11, align 8
  %29 = and i64 %28, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @161, i64 0, i64 0)) #9
  br label %32

32:                                               ; preds = %14, %24, %22, %31, %21
  %33 = getelementptr inbounds %13, %13* %2, i64 0, i32 2
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %38 = load %1*, %1** %37, align 8
  %39 = icmp eq %1* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %1, %1* %38, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  %44 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %50, label %47

47:                                               ; preds = %40, %36
  %48 = phi i64 [ 1, %36 ], [ %43, %40 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %48) #9
  %49 = load %1*, %1** %37, align 8
  br label %50

50:                                               ; preds = %40, %47
  %51 = phi %1* [ %49, %47 ], [ %38, %40 ]
  %52 = phi i64 [ %48, %47 ], [ %43, %40 ]
  %53 = add i64 %52, -1
  %54 = getelementptr inbounds %1, %1* %51, i64 0, i32 3, i64 %53
  store i8 38, i8* %54, align 1
  %55 = load %1*, %1** %37, align 8
  %56 = getelementptr inbounds %1, %1* %55, i64 0, i32 2
  store i64 %52, i64* %56, align 8
  br label %57

57:                                               ; preds = %32, %50
  %58 = getelementptr inbounds %13, %13* %2, i64 0, i32 3
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %84, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %63 = load %1*, %1** %62, align 8
  %64 = icmp eq %1* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %1, %1* %63, i64 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 3
  %69 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %65, %61
  %73 = phi i64 [ 3, %61 ], [ %68, %65 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %73) #9
  %74 = load %1*, %1** %62, align 8
  %75 = getelementptr inbounds %1, %1* %74, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  br label %77

77:                                               ; preds = %65, %72
  %78 = phi i64 [ %76, %72 ], [ %67, %65 ]
  %79 = phi %1* [ %74, %72 ], [ %63, %65 ]
  %80 = phi i64 [ %73, %72 ], [ %68, %65 ]
  %81 = getelementptr inbounds %1, %1* %79, i64 0, i32 3, i64 %78
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @169, i64 0, i64 0), i64 3, i1 false) #9
  %82 = load %1*, %1** %62, align 8
  %83 = getelementptr inbounds %1, %1* %82, i64 0, i32 2
  store i64 %80, i64* %83, align 8
  br label %84

84:                                               ; preds = %57, %77
  %85 = getelementptr inbounds %13, %13* %2, i64 0, i32 0
  %86 = load %1*, %1** %85, align 8
  %87 = icmp eq %1* %86, null
  %88 = bitcast %1* %86 to i8*
  br i1 %87, label %102, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 0
  %91 = load i8, i8* %90, align 8
  %92 = icmp eq i8 %91, 1
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = trunc i32 %95 to i8
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93, %89
  %99 = getelementptr inbounds %1, %1* %86, i64 0, i32 3, i64 0
  br label %100

100:                                              ; preds = %93, %98
  %101 = phi i8* [ %99, %98 ], [ %88, %93 ]
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @170, i64 0, i64 0), i8* %101) #9
  br label %104

102:                                              ; preds = %84
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @171, i64 0, i64 0), i32 %3) #9
  %103 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %102, %100
  %105 = phi i8* [ %103, %102 ], [ %90, %100 ]
  %106 = load i8, i8* %105, align 8
  %107 = icmp ne i8 %106, 2
  %108 = or i1 %7, %107
  br i1 %108, label %414, label %109

109:                                              ; preds = %104
  %110 = getelementptr %11, %11* %1, i64 0, i32 0, i32 10
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr %11, %11* %1, i64 0, i32 0, i32 11
  %113 = load %14*, %14** %112, align 8
  %114 = zext i32 %111 to i64
  %115 = getelementptr inbounds %14, %14* %113, i64 %114
  %116 = add i32 %3, 1
  %117 = icmp eq i32 %111, 0
  br i1 %117, label %414, label %118

118:                                              ; preds = %109, %126
  %119 = phi %14* [ %127, %126 ], [ %113, %109 ]
  %120 = getelementptr inbounds %14, %14* %119, i64 0, i32 6
  %121 = load i8, i8* %120, align 4
  switch i8 %121, label %126 [
    i8 63, label %122
    i8 64, label %122
    i8 -92, label %122
  ]

122:                                              ; preds = %118, %118, %118
  %123 = getelementptr inbounds %14, %14* %119, i64 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, %116
  br i1 %125, label %129, label %126

126:                                              ; preds = %122, %118
  %127 = getelementptr inbounds %14, %14* %119, i64 1
  %128 = icmp ult %14* %127, %115
  br i1 %128, label %118, label %414

129:                                              ; preds = %122
  %130 = icmp eq i8 %121, 64
  br i1 %130, label %131, label %414

131:                                              ; preds = %129
  %132 = getelementptr inbounds %14, %14* %119, i64 0, i32 8
  %133 = load i8, i8* %132, align 2
  %134 = icmp eq i8 %133, 8
  br i1 %134, label %414, label %135

135:                                              ; preds = %131
  %136 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #9
  %137 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %138 = load %1*, %1** %137, align 8
  %139 = icmp eq %1* %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %1, %1* %138, i64 0, i32 2
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 3
  %144 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = icmp ult i64 %143, %145
  br i1 %146, label %152, label %147

147:                                              ; preds = %140, %135
  %148 = phi i64 [ 3, %135 ], [ %143, %140 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %148) #9
  %149 = load %1*, %1** %137, align 8
  %150 = getelementptr inbounds %1, %1* %149, i64 0, i32 2
  %151 = load i64, i64* %150, align 8
  br label %152

152:                                              ; preds = %140, %147
  %153 = phi i64 [ %151, %147 ], [ %142, %140 ]
  %154 = phi %1* [ %149, %147 ], [ %138, %140 ]
  %155 = phi i64 [ %148, %147 ], [ %143, %140 ]
  %156 = getelementptr inbounds %1, %1* %154, i64 0, i32 3, i64 %153
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %156, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @172, i64 0, i64 0), i64 3, i1 false) #9
  %157 = load %1*, %1** %137, align 8
  %158 = getelementptr inbounds %1, %1* %157, i64 0, i32 2
  store i64 %155, i64* %158, align 8
  %159 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 26
  %160 = bitcast %4** %159 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds %14, %14* %119, i64 0, i32 2, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %161, i64 %164
  %166 = bitcast i8* %165 to %59**
  %167 = load %59*, %59** %166, align 8
  %168 = getelementptr inbounds i8, i8* %165, i64 8
  %169 = bitcast i8* %168 to i32*
  %170 = load i32, i32* %169, align 8
  %171 = bitcast %4* %6 to %59**
  store %59* %167, %59** %171, align 8
  %172 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 %170, i32* %172, align 8
  %173 = and i32 %170, 5120
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %183, label %175

175:                                              ; preds = %152
  %176 = and i32 %170, 4096
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %175
  call void @_zval_copy_ctor_func(%4* nonnull %6) #9
  br label %183

179:                                              ; preds = %175
  %180 = getelementptr inbounds %59, %59* %167, i64 0, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %180, align 4
  br label %183

183:                                              ; preds = %152, %178, %179
  %184 = getelementptr inbounds %11, %11* %1, i64 0, i32 0, i32 4
  %185 = load %0*, %0** %184, align 8
  %186 = call i32 @zval_update_constant_ex(%4* nonnull %6, %0* %185) #9
  %187 = icmp eq i32 %186, -1
  br i1 %187, label %413, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %4, %4* %6, i64 0, i32 1
  %190 = bitcast %6* %189 to i8*
  %191 = load i8, i8* %190, align 8
  switch i8 %191, label %369 [
    i8 3, label %192
    i8 2, label %215
    i8 1, label %237
    i8 6, label %260
    i8 7, label %347
  ]

192:                                              ; preds = %188
  %193 = load %1*, %1** %137, align 8
  %194 = icmp eq %1* %193, null
  br i1 %194, label %202, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %1, %1* %193, i64 0, i32 2
  %197 = load i64, i64* %196, align 8
  %198 = add i64 %197, 4
  %199 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = icmp ult i64 %198, %200
  br i1 %201, label %207, label %202

202:                                              ; preds = %195, %192
  %203 = phi i64 [ 4, %192 ], [ %198, %195 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %203) #9
  %204 = load %1*, %1** %137, align 8
  %205 = getelementptr inbounds %1, %1* %204, i64 0, i32 2
  %206 = load i64, i64* %205, align 8
  br label %207

207:                                              ; preds = %195, %202
  %208 = phi i64 [ %206, %202 ], [ %197, %195 ]
  %209 = phi %1* [ %204, %202 ], [ %193, %195 ]
  %210 = phi i64 [ %203, %202 ], [ %198, %195 ]
  %211 = getelementptr inbounds %1, %1* %209, i64 0, i32 3, i64 %208
  %212 = bitcast i8* %211 to i32*
  store i32 1702195828, i32* %212, align 1
  %213 = load %1*, %1** %137, align 8
  %214 = getelementptr inbounds %1, %1* %213, i64 0, i32 2
  store i64 %210, i64* %214, align 8
  br label %412

215:                                              ; preds = %188
  %216 = load %1*, %1** %137, align 8
  %217 = icmp eq %1* %216, null
  br i1 %217, label %225, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %1, %1* %216, i64 0, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = add i64 %220, 5
  %222 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = icmp ult i64 %221, %223
  br i1 %224, label %230, label %225

225:                                              ; preds = %218, %215
  %226 = phi i64 [ 5, %215 ], [ %221, %218 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %226) #9
  %227 = load %1*, %1** %137, align 8
  %228 = getelementptr inbounds %1, %1* %227, i64 0, i32 2
  %229 = load i64, i64* %228, align 8
  br label %230

230:                                              ; preds = %218, %225
  %231 = phi i64 [ %229, %225 ], [ %220, %218 ]
  %232 = phi %1* [ %227, %225 ], [ %216, %218 ]
  %233 = phi i64 [ %226, %225 ], [ %221, %218 ]
  %234 = getelementptr inbounds %1, %1* %232, i64 0, i32 3, i64 %231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @173, i64 0, i64 0), i64 5, i1 false) #9
  %235 = load %1*, %1** %137, align 8
  %236 = getelementptr inbounds %1, %1* %235, i64 0, i32 2
  store i64 %233, i64* %236, align 8
  br label %412

237:                                              ; preds = %188
  %238 = load %1*, %1** %137, align 8
  %239 = icmp eq %1* %238, null
  br i1 %239, label %247, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %1, %1* %238, i64 0, i32 2
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, 4
  %244 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = icmp ult i64 %243, %245
  br i1 %246, label %252, label %247

247:                                              ; preds = %240, %237
  %248 = phi i64 [ 4, %237 ], [ %243, %240 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %248) #9
  %249 = load %1*, %1** %137, align 8
  %250 = getelementptr inbounds %1, %1* %249, i64 0, i32 2
  %251 = load i64, i64* %250, align 8
  br label %252

252:                                              ; preds = %240, %247
  %253 = phi i64 [ %251, %247 ], [ %242, %240 ]
  %254 = phi %1* [ %249, %247 ], [ %238, %240 ]
  %255 = phi i64 [ %248, %247 ], [ %243, %240 ]
  %256 = getelementptr inbounds %1, %1* %254, i64 0, i32 3, i64 %253
  %257 = bitcast i8* %256 to i32*
  store i32 1280070990, i32* %257, align 1
  %258 = load %1*, %1** %137, align 8
  %259 = getelementptr inbounds %1, %1* %258, i64 0, i32 2
  store i64 %255, i64* %259, align 8
  br label %412

260:                                              ; preds = %188
  %261 = load %1*, %1** %137, align 8
  %262 = icmp eq %1* %261, null
  br i1 %262, label %270, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %1, %1* %261, i64 0, i32 2
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, 1
  %267 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = icmp ult i64 %266, %268
  br i1 %269, label %273, label %270

270:                                              ; preds = %263, %260
  %271 = phi i64 [ 1, %260 ], [ %266, %263 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %271) #9
  %272 = load %1*, %1** %137, align 8
  br label %273

273:                                              ; preds = %263, %270
  %274 = phi %1* [ %272, %270 ], [ %261, %263 ]
  %275 = phi i64 [ %271, %270 ], [ %266, %263 ]
  %276 = add i64 %275, -1
  %277 = getelementptr inbounds %1, %1* %274, i64 0, i32 3, i64 %276
  store i8 39, i8* %277, align 1
  %278 = load %1*, %1** %137, align 8
  %279 = getelementptr inbounds %1, %1* %278, i64 0, i32 2
  store i64 %275, i64* %279, align 8
  %280 = bitcast %4* %6 to %1**
  %281 = load %1*, %1** %280, align 8
  %282 = getelementptr inbounds %1, %1* %281, i64 0, i32 3, i64 0
  %283 = getelementptr inbounds %1, %1* %281, i64 0, i32 2
  %284 = load i64, i64* %283, align 8
  %285 = icmp ult i64 %284, 15
  %286 = select i1 %285, i64 %284, i64 15
  %287 = icmp eq %1* %278, null
  br i1 %287, label %293, label %288

288:                                              ; preds = %273
  %289 = add i64 %286, %275
  %290 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = icmp ult i64 %289, %291
  br i1 %292, label %298, label %293

293:                                              ; preds = %288, %273
  %294 = phi i64 [ %286, %273 ], [ %289, %288 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %294) #9
  %295 = load %1*, %1** %137, align 8
  %296 = getelementptr inbounds %1, %1* %295, i64 0, i32 2
  %297 = load i64, i64* %296, align 8
  br label %298

298:                                              ; preds = %288, %293
  %299 = phi i64 [ %297, %293 ], [ %275, %288 ]
  %300 = phi %1* [ %295, %293 ], [ %278, %288 ]
  %301 = phi i64 [ %294, %293 ], [ %289, %288 ]
  %302 = getelementptr inbounds %1, %1* %300, i64 0, i32 3, i64 %299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %302, i8* nonnull align 1 %282, i64 %286, i1 false) #9
  %303 = load %1*, %1** %137, align 8
  %304 = getelementptr inbounds %1, %1* %303, i64 0, i32 2
  store i64 %301, i64* %304, align 8
  %305 = load %1*, %1** %280, align 8
  %306 = getelementptr inbounds %1, %1* %305, i64 0, i32 2
  %307 = load i64, i64* %306, align 8
  %308 = icmp ugt i64 %307, 15
  br i1 %308, label %309, label %328

309:                                              ; preds = %298
  %310 = icmp eq %1* %303, null
  br i1 %310, label %316, label %311

311:                                              ; preds = %309
  %312 = add i64 %301, 3
  %313 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %312, %314
  br i1 %315, label %321, label %316

316:                                              ; preds = %311, %309
  %317 = phi i64 [ 3, %309 ], [ %312, %311 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %317) #9
  %318 = load %1*, %1** %137, align 8
  %319 = getelementptr inbounds %1, %1* %318, i64 0, i32 2
  %320 = load i64, i64* %319, align 8
  br label %321

321:                                              ; preds = %311, %316
  %322 = phi i64 [ %320, %316 ], [ %301, %311 ]
  %323 = phi %1* [ %318, %316 ], [ %303, %311 ]
  %324 = phi i64 [ %317, %316 ], [ %312, %311 ]
  %325 = getelementptr inbounds %1, %1* %323, i64 0, i32 3, i64 %322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %325, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @169, i64 0, i64 0), i64 3, i1 false) #9
  %326 = load %1*, %1** %137, align 8
  %327 = getelementptr inbounds %1, %1* %326, i64 0, i32 2
  store i64 %324, i64* %327, align 8
  br label %328

328:                                              ; preds = %321, %298
  %329 = phi i64 [ %324, %321 ], [ %301, %298 ]
  %330 = phi %1* [ %326, %321 ], [ %303, %298 ]
  %331 = icmp eq %1* %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %328
  %333 = add i64 %329, 1
  %334 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = icmp ult i64 %333, %335
  br i1 %336, label %340, label %337

337:                                              ; preds = %332, %328
  %338 = phi i64 [ 1, %328 ], [ %333, %332 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %338) #9
  %339 = load %1*, %1** %137, align 8
  br label %340

340:                                              ; preds = %332, %337
  %341 = phi %1* [ %339, %337 ], [ %330, %332 ]
  %342 = phi i64 [ %338, %337 ], [ %333, %332 ]
  %343 = add i64 %342, -1
  %344 = getelementptr inbounds %1, %1* %341, i64 0, i32 3, i64 %343
  store i8 39, i8* %344, align 1
  %345 = load %1*, %1** %137, align 8
  %346 = getelementptr inbounds %1, %1* %345, i64 0, i32 2
  store i64 %342, i64* %346, align 8
  br label %412

347:                                              ; preds = %188
  %348 = load %1*, %1** %137, align 8
  %349 = icmp eq %1* %348, null
  br i1 %349, label %357, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %1, %1* %348, i64 0, i32 2
  %352 = load i64, i64* %351, align 8
  %353 = add i64 %352, 5
  %354 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %355 = load i64, i64* %354, align 8
  %356 = icmp ult i64 %353, %355
  br i1 %356, label %362, label %357

357:                                              ; preds = %350, %347
  %358 = phi i64 [ 5, %347 ], [ %353, %350 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %358) #9
  %359 = load %1*, %1** %137, align 8
  %360 = getelementptr inbounds %1, %1* %359, i64 0, i32 2
  %361 = load i64, i64* %360, align 8
  br label %362

362:                                              ; preds = %350, %357
  %363 = phi i64 [ %361, %357 ], [ %352, %350 ]
  %364 = phi %1* [ %359, %357 ], [ %348, %350 ]
  %365 = phi i64 [ %358, %357 ], [ %353, %350 ]
  %366 = getelementptr inbounds %1, %1* %364, i64 0, i32 3, i64 %363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %366, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @174, i64 0, i64 0), i64 5, i1 false) #9
  %367 = load %1*, %1** %137, align 8
  %368 = getelementptr inbounds %1, %1* %367, i64 0, i32 2
  store i64 %365, i64* %368, align 8
  br label %412

369:                                              ; preds = %188
  %370 = call %1* @_zval_get_string_func(%4* nonnull %6) #9
  %371 = getelementptr inbounds %1, %1* %370, i64 0, i32 3, i64 0
  %372 = getelementptr inbounds %1, %1* %370, i64 0, i32 2
  %373 = load i64, i64* %372, align 8
  %374 = load %1*, %1** %137, align 8
  %375 = icmp eq %1* %374, null
  br i1 %375, label %383, label %376

376:                                              ; preds = %369
  %377 = getelementptr inbounds %1, %1* %374, i64 0, i32 2
  %378 = load i64, i64* %377, align 8
  %379 = add i64 %378, %373
  %380 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %381 = load i64, i64* %380, align 8
  %382 = icmp ult i64 %379, %381
  br i1 %382, label %388, label %383

383:                                              ; preds = %376, %369
  %384 = phi i64 [ %373, %369 ], [ %379, %376 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %384) #9
  %385 = load %1*, %1** %137, align 8
  %386 = getelementptr inbounds %1, %1* %385, i64 0, i32 2
  %387 = load i64, i64* %386, align 8
  br label %388

388:                                              ; preds = %376, %383
  %389 = phi i64 [ %387, %383 ], [ %378, %376 ]
  %390 = phi %1* [ %385, %383 ], [ %374, %376 ]
  %391 = phi i64 [ %384, %383 ], [ %379, %376 ]
  %392 = getelementptr inbounds %1, %1* %390, i64 0, i32 3, i64 %389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %392, i8* nonnull align 1 %371, i64 %373, i1 false) #9
  %393 = load %1*, %1** %137, align 8
  %394 = getelementptr inbounds %1, %1* %393, i64 0, i32 2
  store i64 %391, i64* %394, align 8
  %395 = getelementptr inbounds %1, %1* %370, i64 0, i32 0, i32 1
  %396 = bitcast %3* %395 to %57*
  %397 = getelementptr inbounds %57, %57* %396, i64 0, i32 1
  %398 = load i8, i8* %397, align 1
  %399 = and i8 %398, 2
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %401, label %412

401:                                              ; preds = %388
  %402 = getelementptr inbounds %1, %1* %370, i64 0, i32 0, i32 0
  %403 = load i32, i32* %402, align 8
  %404 = add i32 %403, -1
  store i32 %404, i32* %402, align 8
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %412

406:                                              ; preds = %401
  %407 = and i8 %398, 1
  %408 = icmp eq i8 %407, 0
  %409 = bitcast %1* %370 to i8*
  br i1 %408, label %411, label %410

410:                                              ; preds = %406
  call void @free(i8* %409) #9
  br label %412

411:                                              ; preds = %406
  call void @_efree(i8* %409) #9
  br label %412

412:                                              ; preds = %207, %252, %362, %340, %230, %388, %401, %410, %411
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #9
  br label %414

413:                                              ; preds = %183
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #9
  br label %438

414:                                              ; preds = %126, %109, %129, %131, %412, %104
  %415 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %416 = load %1*, %1** %415, align 8
  %417 = icmp eq %1* %416, null
  br i1 %417, label %425, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %1, %1* %416, i64 0, i32 2
  %420 = load i64, i64* %419, align 8
  %421 = add i64 %420, 2
  %422 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %423 = load i64, i64* %422, align 8
  %424 = icmp ult i64 %421, %423
  br i1 %424, label %430, label %425

425:                                              ; preds = %418, %414
  %426 = phi i64 [ 2, %414 ], [ %421, %418 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %426) #9
  %427 = load %1*, %1** %415, align 8
  %428 = getelementptr inbounds %1, %1* %427, i64 0, i32 2
  %429 = load i64, i64* %428, align 8
  br label %430

430:                                              ; preds = %418, %425
  %431 = phi i64 [ %429, %425 ], [ %420, %418 ]
  %432 = phi %1* [ %427, %425 ], [ %416, %418 ]
  %433 = phi i64 [ %426, %425 ], [ %421, %418 ]
  %434 = getelementptr inbounds %1, %1* %432, i64 0, i32 3, i64 %431
  %435 = bitcast i8* %434 to i16*
  store i16 23840, i16* %435, align 1
  %436 = load %1*, %1** %415, align 8
  %437 = getelementptr inbounds %1, %1* %436, i64 0, i32 2
  store i64 %433, i64* %437, align 8
  br label %438

438:                                              ; preds = %413, %430
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getName(%23* %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %59

41:                                               ; preds = %30, %25
  %42 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %43 = bitcast %4* %42 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %4, %4* %42, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %4* %1 to %59**
  store %59* %44, %59** %47, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 5120
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %41
  %52 = and i32 %46, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %59, %59* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %55, %54, %41, %39, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getDeclaringFunction(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %69, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %69, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %69

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to %11**
  %29 = load %11*, %11** %28, align 8
  %30 = getelementptr inbounds %11, %11* %29, i64 0, i32 0, i32 4
  %31 = load %0*, %0** %30, align 8
  %32 = icmp eq %0* %31, null
  %33 = icmp eq %11* %29, null
  br i1 %33, label %58, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %11, %11* %29, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 2097152
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = tail call noalias i8* @_emalloc_224() #9
  %41 = bitcast i8* %40 to %11*
  %42 = getelementptr inbounds %11, %11* %29, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %42, i64 224, i1 false) #9
  %43 = getelementptr inbounds %11, %11* %29, i64 0, i32 0, i32 3
  %44 = load %1*, %1** %43, align 8
  %45 = getelementptr inbounds %1, %1* %44, i64 0, i32 0, i32 1
  %46 = bitcast %3* %45 to %57*
  %47 = getelementptr inbounds %57, %57* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %39
  %52 = getelementptr inbounds %1, %1* %44, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 8
  br label %55

55:                                               ; preds = %51, %39
  %56 = getelementptr inbounds i8, i8* %40, i64 8
  %57 = bitcast i8* %56 to %1**
  store %1* %44, %1** %57, align 8
  br label %58

58:                                               ; preds = %26, %34, %55
  %59 = phi %11* [ %41, %55 ], [ %29, %34 ], [ null, %26 ]
  %60 = getelementptr inbounds %21, %21* %12, i64 -1, i32 2
  %61 = bitcast %0** %60 to %4*
  %62 = getelementptr inbounds %0*, %0** %60, i64 1
  %63 = bitcast %0** %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 0
  %66 = select i1 %65, %4* null, %4* %61
  br i1 %32, label %67, label %68

67:                                               ; preds = %58
  tail call fastcc void @428(%11* %59, %4* %66, %4* %1)
  br label %69

68:                                               ; preds = %58
  tail call fastcc void @429(%0* nonnull %31, %11* %59, %4* %66, %4* %1)
  br label %69

69:                                               ; preds = %67, %68, %20, %7, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getDeclaringClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to %69**
  %29 = load %69*, %69** %28, align 8
  %30 = getelementptr inbounds %69, %69* %29, i64 0, i32 4
  %31 = load %0*, %0** %30, align 8
  %32 = icmp eq %0* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %26
  tail call void @zend_reflection_class_factory(%0* nonnull %31, %4* %1)
  br label %34

34:                                               ; preds = %33, %26, %20, %7, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %80, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %80, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %80

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, 511
  br i1 %32, label %33, label %80

33:                                               ; preds = %26
  %34 = and i64 %31, -4
  %35 = inttoptr i64 %34 to %1*
  %36 = getelementptr inbounds %1, %1* %35, i64 0, i32 3, i64 0
  %37 = getelementptr inbounds %1, %1* %35, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %36, i64 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i64 0, i64 0), i64 4) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %33
  %42 = getelementptr inbounds i8, i8* %15, i64 16
  %43 = bitcast i8* %42 to %69**
  %44 = load %69*, %69** %43, align 8
  %45 = getelementptr inbounds %69, %69* %44, i64 0, i32 4
  %46 = load %0*, %0** %45, align 8
  %47 = icmp eq %0* %46, null
  br i1 %47, label %48, label %78

48:                                               ; preds = %41
  %49 = load %0*, %0** @reflection_exception_ptr, align 8
  %50 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %49, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @34, i64 0, i64 0)) #9
  br label %80

51:                                               ; preds = %33
  %52 = load i64, i64* %37, align 8
  %53 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %36, i64 %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @35, i64 0, i64 0), i64 6) #9
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %72

55:                                               ; preds = %51
  %56 = getelementptr inbounds i8, i8* %15, i64 16
  %57 = bitcast i8* %56 to %69**
  %58 = load %69*, %69** %57, align 8
  %59 = getelementptr inbounds %69, %69* %58, i64 0, i32 4
  %60 = load %0*, %0** %59, align 8
  %61 = icmp eq %0* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = load %0*, %0** @reflection_exception_ptr, align 8
  %64 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %63, i64 0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @36, i64 0, i64 0)) #9
  br label %80

65:                                               ; preds = %55
  %66 = getelementptr inbounds %0, %0* %60, i64 0, i32 2
  %67 = load %0*, %0** %66, align 8
  %68 = icmp eq %0* %67, null
  br i1 %68, label %69, label %78

69:                                               ; preds = %65
  %70 = load %0*, %0** @reflection_exception_ptr, align 8
  %71 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %70, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @37, i64 0, i64 0)) #9
  br label %80

72:                                               ; preds = %51
  %73 = tail call %0* @zend_lookup_class(%1* nonnull %35) #9
  %74 = icmp eq %0* %73, null
  br i1 %74, label %75, label %78

75:                                               ; preds = %72
  %76 = load %0*, %0** @reflection_exception_ptr, align 8
  %77 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %76, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %36) #9
  br label %80

78:                                               ; preds = %65, %41, %72
  %79 = phi %0* [ %46, %41 ], [ %73, %72 ], [ %67, %65 ]
  tail call void @zend_reflection_class_factory(%0* nonnull %79, %4* %1)
  br label %80

80:                                               ; preds = %26, %78, %48, %62, %69, %75, %20, %7, %25
  ret void
}

declare dso_local i32 @zend_binary_strcasecmp(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_hasType(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %35

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, 1
  %33 = select i1 %32, i32 3, i32 2
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  br label %35

35:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getType(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %106, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %106, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %106

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, 1
  %33 = ptrtoint %13* %29 to i64
  br i1 %32, label %36, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %35, align 8
  br label %106

36:                                               ; preds = %26
  %37 = getelementptr inbounds i8, i8* %15, i64 16
  %38 = bitcast i8* %37 to %11**
  %39 = load %11*, %11** %38, align 8
  %40 = icmp eq %11* %39, null
  br i1 %40, label %67, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %11, %11* %39, i64 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 2097152
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %67, label %46

46:                                               ; preds = %41
  %47 = tail call noalias i8* @_emalloc_224() #9
  %48 = bitcast i8* %47 to %11*
  %49 = getelementptr inbounds %11, %11* %39, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %49, i64 224, i1 false) #9
  %50 = getelementptr inbounds %11, %11* %39, i64 0, i32 0, i32 3
  %51 = load %1*, %1** %50, align 8
  %52 = getelementptr inbounds %1, %1* %51, i64 0, i32 0, i32 1
  %53 = bitcast %3* %52 to %57*
  %54 = getelementptr inbounds %57, %57* %53, i64 0, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %46
  %59 = getelementptr inbounds %1, %1* %51, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %46
  %63 = getelementptr inbounds i8, i8* %47, i64 8
  %64 = bitcast i8* %63 to %1**
  store %1* %51, %1** %64, align 8
  %65 = bitcast i8* %27 to i64*
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %36, %41, %62
  %68 = phi i64 [ %66, %62 ], [ %33, %41 ], [ %33, %36 ]
  %69 = phi %11* [ %48, %62 ], [ %39, %41 ], [ null, %36 ]
  %70 = getelementptr inbounds %21, %21* %12, i64 -1, i32 2
  %71 = bitcast %0** %70 to %4*
  %72 = getelementptr inbounds %0*, %0** %70, i64 1
  %73 = bitcast %0** %72 to i8*
  %74 = load i8, i8* %73, align 8
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, %4* null, %4* %71
  %77 = load %0*, %0** @reflection_named_type_ptr, align 8
  %78 = tail call i32 @_object_init_ex(%4* %1, %0* %77) #9
  %79 = bitcast %4* %1 to %21**
  %80 = load %21*, %21** %79, align 8
  %81 = tail call noalias i8* @_emalloc_16() #9
  %82 = bitcast i8* %81 to i64*
  store i64 %68, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 8
  %84 = bitcast i8* %83 to %11**
  store %11* %69, %11** %84, align 8
  %85 = getelementptr inbounds %21, %21* %80, i64 -1, i32 4
  %86 = bitcast %8** %85 to i8**
  store i8* %81, i8** %86, align 8
  %87 = getelementptr inbounds %21, %21* %80, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 4, i32* %87, align 8
  %88 = getelementptr inbounds %11, %11* %69, i64 0, i32 0, i32 4
  %89 = bitcast %0** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %21, %21* %80, i64 -1, i32 5, i64 0, i32 0, i32 0
  store i64 %90, i64* %91, align 8
  br i1 %75, label %106, label %92

92:                                               ; preds = %67
  %93 = bitcast %4* %76 to %59**
  %94 = load %59*, %59** %93, align 8
  %95 = getelementptr inbounds %59, %59* %94, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %4, %4* %76, i64 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %4, %4* %76, i64 0, i32 1, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %21, %21* %80, i64 -1, i32 2
  %103 = bitcast %0** %102 to i64*
  store i64 %99, i64* %103, align 8
  %104 = getelementptr inbounds %21, %21* %80, i64 -1, i32 3
  %105 = bitcast %22** %104 to i32*
  store i32 %101, i32* %105, align 8
  br label %106

106:                                              ; preds = %92, %67, %20, %7, %34, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isArray(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %36, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %36

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, -2
  %33 = icmp eq i64 %32, 14
  %34 = select i1 %33, i32 3, i32 2
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %34, i32* %35, align 8
  br label %36

36:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isCallable(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %36, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %36

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, -2
  %33 = icmp eq i64 %32, 28
  %34 = select i1 %33, i32 3, i32 2
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %34, i32* %35, align 8
  br label %36

36:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_allowsNull(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %36, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %36

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  %34 = select i1 %33, i32 2, i32 3
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %34, i32* %35, align 8
  br label %36

36:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isPassedByReference(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %35

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 2
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i32 2, i32 3
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  br label %35

35:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_canBePassedByValue(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %35

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 2
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 1
  %33 = select i1 %32, i32 2, i32 3
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  br label %35

35:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getPosition(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %31, align 8
  br label %32

32:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isOptional(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = load i8, i8* %27, align 4
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i32 3, i32 2
  %31 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isDefaultValueAvailable(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %67, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %67, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %67

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to %11**
  %29 = load %11*, %11** %28, align 8
  %30 = getelementptr inbounds %11, %11* %29, i64 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %34, align 8
  br label %67

35:                                               ; preds = %26
  %36 = bitcast i8* %15 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr %11, %11* %29, i64 0, i32 0, i32 10
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr %11, %11* %29, i64 0, i32 0, i32 11
  %41 = load %14*, %14** %40, align 8
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %14, %14* %41, i64 %42
  %44 = add i32 %37, 1
  %45 = icmp eq i32 %39, 0
  br i1 %45, label %63, label %46

46:                                               ; preds = %35, %54
  %47 = phi %14* [ %55, %54 ], [ %41, %35 ]
  %48 = getelementptr inbounds %14, %14* %47, i64 0, i32 6
  %49 = load i8, i8* %48, align 4
  switch i8 %49, label %54 [
    i8 63, label %50
    i8 64, label %50
    i8 -92, label %50
  ]

50:                                               ; preds = %46, %46, %46
  %51 = getelementptr inbounds %14, %14* %47, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, %44
  br i1 %53, label %57, label %54

54:                                               ; preds = %50, %46
  %55 = getelementptr inbounds %14, %14* %47, i64 1
  %56 = icmp ult %14* %55, %43
  br i1 %56, label %46, label %63

57:                                               ; preds = %50
  %58 = icmp eq i8 %49, 64
  br i1 %58, label %59, label %63

59:                                               ; preds = %57
  %60 = getelementptr inbounds %14, %14* %47, i64 0, i32 8
  %61 = load i8, i8* %60, align 2
  %62 = icmp eq i8 %61, 8
  br i1 %62, label %63, label %65

63:                                               ; preds = %54, %35, %57, %59
  %64 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %64, align 8
  br label %67

65:                                               ; preds = %59
  %66 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %66, align 8
  br label %67

67:                                               ; preds = %20, %7, %65, %63, %33, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getDefaultValue(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %106, label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %9
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %106, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %106

26:                                               ; preds = %9
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = load %0*, %0** @reflection_exception_ptr, align 8
  %34 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %33, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @175, i64 0, i64 0)) #9
  br label %106

35:                                               ; preds = %26
  %36 = bitcast i8* %15 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr i8, i8* %29, i64 56
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr i8, i8* %29, i64 64
  %42 = bitcast i8* %41 to %14**
  %43 = load %14*, %14** %42, align 8
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds %14, %14* %43, i64 %44
  %46 = add i32 %37, 1
  %47 = icmp eq i32 %40, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %35, %56
  %49 = phi %14* [ %57, %56 ], [ %43, %35 ]
  %50 = getelementptr inbounds %14, %14* %49, i64 0, i32 6
  %51 = load i8, i8* %50, align 4
  switch i8 %51, label %56 [
    i8 63, label %52
    i8 64, label %52
    i8 -92, label %52
  ]

52:                                               ; preds = %48, %48, %48
  %53 = getelementptr inbounds %14, %14* %49, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, %46
  br i1 %55, label %59, label %56

56:                                               ; preds = %52, %48
  %57 = getelementptr inbounds %14, %14* %49, i64 1
  %58 = icmp ult %14* %57, %45
  br i1 %58, label %48, label %65

59:                                               ; preds = %52
  %60 = icmp eq i8 %51, 64
  br i1 %60, label %61, label %65

61:                                               ; preds = %59
  %62 = getelementptr inbounds %14, %14* %49, i64 0, i32 8
  %63 = load i8, i8* %62, align 2
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %68

65:                                               ; preds = %56, %35, %59, %61
  %66 = load %0*, %0** @reflection_exception_ptr, align 8
  %67 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %66, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @176, i64 0, i64 0)) #9
  br label %106

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %29, i64 152
  %70 = bitcast i8* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %14, %14* %49, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  %76 = bitcast i8* %75 to %59**
  %77 = load %59*, %59** %76, align 8
  %78 = getelementptr inbounds i8, i8* %75, i64 8
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 8
  %81 = bitcast %4* %1 to %59**
  store %59* %77, %59** %81, align 8
  %82 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %83 = getelementptr inbounds %6, %6* %82, i64 0, i32 0
  store i32 %80, i32* %83, align 8
  %84 = and i32 %80, 5120
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %68
  %87 = and i32 %80, 4096
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %59, %59* %77, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 4
  br label %94

94:                                               ; preds = %68, %89, %90
  %95 = bitcast %6* %82 to %58*
  %96 = getelementptr inbounds %58, %58* %95, i64 0, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = bitcast i8* %27 to %69**
  %102 = load %69*, %69** %101, align 8
  %103 = getelementptr inbounds %69, %69* %102, i64 0, i32 4
  %104 = load %0*, %0** %103, align 8
  %105 = tail call i32 @zval_update_constant_ex(%4* nonnull %1, %0* %104) #9
  br label %106

106:                                              ; preds = %20, %32, %25, %65, %100, %94, %6
  ret void
}

declare dso_local void @_zval_copy_ctor_func(%4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isDefaultValueConstant(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %83, label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %9
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %80, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %80

26:                                               ; preds = %9
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = load %0*, %0** @reflection_exception_ptr, align 8
  %34 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %33, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @175, i64 0, i64 0)) #9
  br label %80

35:                                               ; preds = %26
  %36 = bitcast i8* %15 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr i8, i8* %29, i64 56
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr i8, i8* %29, i64 64
  %42 = bitcast i8* %41 to %14**
  %43 = load %14*, %14** %42, align 8
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds %14, %14* %43, i64 %44
  %46 = add i32 %37, 1
  %47 = icmp eq i32 %40, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %35, %56
  %49 = phi %14* [ %57, %56 ], [ %43, %35 ]
  %50 = getelementptr inbounds %14, %14* %49, i64 0, i32 6
  %51 = load i8, i8* %50, align 4
  switch i8 %51, label %56 [
    i8 63, label %52
    i8 64, label %52
    i8 -92, label %52
  ]

52:                                               ; preds = %48, %48, %48
  %53 = getelementptr inbounds %14, %14* %49, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, %46
  br i1 %55, label %59, label %56

56:                                               ; preds = %52, %48
  %57 = getelementptr inbounds %14, %14* %49, i64 1
  %58 = icmp ult %14* %57, %45
  br i1 %58, label %48, label %65

59:                                               ; preds = %52
  %60 = icmp eq i8 %51, 64
  br i1 %60, label %61, label %65

61:                                               ; preds = %59
  %62 = getelementptr inbounds %14, %14* %49, i64 0, i32 8
  %63 = load i8, i8* %62, align 2
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %68

65:                                               ; preds = %56, %35, %59, %61
  %66 = load %0*, %0** @reflection_exception_ptr, align 8
  %67 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %66, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @176, i64 0, i64 0)) #9
  br label %79

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %29, i64 152
  %70 = bitcast i8* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %14, %14* %49, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 11
  br i1 %78, label %80, label %79

79:                                               ; preds = %65, %68
  br label %80

80:                                               ; preds = %68, %25, %32, %20, %79
  %81 = phi i32 [ 2, %79 ], [ 2, %20 ], [ 2, %32 ], [ 2, %25 ], [ 3, %68 ]
  %82 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %81, i32* %82, align 8
  br label %83

83:                                               ; preds = %80, %6
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_getDefaultValueConstantName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %96, label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %9
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %96, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %96

26:                                               ; preds = %9
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = load %0*, %0** @reflection_exception_ptr, align 8
  %34 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %33, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @175, i64 0, i64 0)) #9
  br label %96

35:                                               ; preds = %26
  %36 = bitcast i8* %15 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr i8, i8* %29, i64 56
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr i8, i8* %29, i64 64
  %42 = bitcast i8* %41 to %14**
  %43 = load %14*, %14** %42, align 8
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds %14, %14* %43, i64 %44
  %46 = add i32 %37, 1
  %47 = icmp eq i32 %40, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %35, %56
  %49 = phi %14* [ %57, %56 ], [ %43, %35 ]
  %50 = getelementptr inbounds %14, %14* %49, i64 0, i32 6
  %51 = load i8, i8* %50, align 4
  switch i8 %51, label %56 [
    i8 63, label %52
    i8 64, label %52
    i8 -92, label %52
  ]

52:                                               ; preds = %48, %48, %48
  %53 = getelementptr inbounds %14, %14* %49, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, %46
  br i1 %55, label %59, label %56

56:                                               ; preds = %52, %48
  %57 = getelementptr inbounds %14, %14* %49, i64 1
  %58 = icmp ult %14* %57, %45
  br i1 %58, label %48, label %65

59:                                               ; preds = %52
  %60 = icmp eq i8 %51, 64
  br i1 %60, label %61, label %65

61:                                               ; preds = %59
  %62 = getelementptr inbounds %14, %14* %49, i64 0, i32 8
  %63 = load i8, i8* %62, align 2
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %68

65:                                               ; preds = %56, %35, %59, %61
  %66 = load %0*, %0** @reflection_exception_ptr, align 8
  %67 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %66, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @176, i64 0, i64 0)) #9
  br label %96

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %29, i64 152
  %70 = bitcast i8* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %14, %14* %49, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 11
  br i1 %78, label %79, label %96

79:                                               ; preds = %68
  %80 = bitcast i8* %75 to %1**
  %81 = load %1*, %1** %80, align 8
  %82 = bitcast %4* %1 to %1**
  store %1* %81, %1** %82, align 8
  %83 = getelementptr inbounds %1, %1* %81, i64 0, i32 0, i32 1
  %84 = bitcast %3* %83 to %57*
  %85 = getelementptr inbounds %57, %57* %84, i64 0, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = and i8 %86, 2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %90, align 8
  br label %96

91:                                               ; preds = %79
  %92 = getelementptr inbounds %1, %1* %81, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 8
  %95 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %95, align 8
  br label %96

96:                                               ; preds = %20, %32, %25, %65, %68, %89, %91, %6
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_parameter_isVariadic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %35

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to %13**
  %29 = load %13*, %13** %28, align 8
  %30 = getelementptr inbounds %13, %13* %29, i64 0, i32 3
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i32 2, i32 3
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  br label %35

35:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_type_allowsNull(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %35

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %13**
  %28 = load %13*, %13** %27, align 8
  %29 = getelementptr inbounds %13, %13* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %31, 0
  %33 = select i1 %32, i32 2, i32 3
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  br label %35

35:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_type_isBuiltin(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %36, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %36

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %13**
  %28 = load %13*, %13** %27, align 8
  %29 = getelementptr inbounds %13, %13* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, 1
  %32 = icmp ugt i64 %30, 511
  %33 = select i1 %32, i32 2, i32 3
  %34 = select i1 %31, i32 %33, i32 2
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %34, i32* %35, align 8
  br label %36

36:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_type___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %41, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %41, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %41

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %13**
  %28 = load %13*, %13** %27, align 8
  %29 = getelementptr %13, %13* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call fastcc %1* @431(i64 %30)
  %32 = bitcast %4* %1 to %1**
  store %1* %31, %1** %32, align 8
  %33 = getelementptr inbounds %1, %1* %31, i64 0, i32 0, i32 1
  %34 = bitcast %3* %33 to %57*
  %35 = getelementptr inbounds %57, %57* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, i32 5126, i32 6
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %39, i32* %40, align 8
  br label %41

41:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %1* @431(i64 %0) unnamed_addr #0 {
  %2 = icmp ugt i64 %0, 511
  br i1 %2, label %3, label %16

3:                                                ; preds = %1
  %4 = and i64 %0, -4
  %5 = inttoptr i64 %4 to %1*
  %6 = getelementptr inbounds %1, %1* %5, i64 0, i32 0, i32 1
  %7 = bitcast %3* %6 to %57*
  %8 = getelementptr inbounds %57, %57* %7, i64 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %3
  %13 = getelementptr inbounds %1, %1* %5, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, 1
  store i32 %15, i32* %13, align 8
  br label %57

16:                                               ; preds = %1
  %17 = lshr i64 %0, 1
  %18 = trunc i64 %17 to i63
  switch i63 %18, label %40 [
    i63 13, label %19
    i63 4, label %30
  ]

19:                                               ; preds = %16
  %20 = tail call noalias i8* @_emalloc(i64 32) #10
  %21 = bitcast i8* %20 to %1*
  %22 = bitcast i8* %20 to i32*
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 6, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %20, i64 8
  %26 = bitcast i8* %25 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 24
  %28 = bitcast i8* %27 to i32*
  store i32 1819242338, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %20, i64 28
  store i8 0, i8* %29, align 1
  br label %57

30:                                               ; preds = %16
  %31 = tail call noalias i8* @_emalloc(i64 32) #10
  %32 = bitcast i8* %31 to %1*
  %33 = bitcast i8* %31 to i32*
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 4
  %35 = bitcast i8* %34 to i32*
  store i32 6, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %31, i64 8
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 0, i64 3>, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds i8, i8* %31, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @177, i64 0, i64 0), i64 3, i1 false) #9
  %39 = getelementptr inbounds i8, i8* %31, i64 27
  store i8 0, i8* %39, align 1
  br label %57

40:                                               ; preds = %16
  %41 = trunc i64 %17 to i32
  %42 = tail call i8* @zend_get_type_by_const(i32 %41) #9
  %43 = tail call i64 @strlen(i8* %42) #11
  %44 = add i64 %43, 32
  %45 = and i64 %44, -8
  %46 = tail call noalias i8* @_emalloc(i64 %45) #10
  %47 = bitcast i8* %46 to %1*
  %48 = bitcast i8* %46 to i32*
  store i32 1, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %46, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 6, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %46, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %46, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 %43, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %46, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 1 %42, i64 %43, i1 false) #9
  %56 = getelementptr inbounds %1, %1* %47, i64 0, i32 3, i64 %43
  store i8 0, i8* %56, align 1
  br label %57

57:                                               ; preds = %12, %3, %40, %30, %19
  %58 = phi %1* [ %47, %40 ], [ %32, %30 ], [ %21, %19 ], [ %5, %3 ], [ %5, %12 ]
  ret %1* %58
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_named_type_getName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %41, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %41, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %41

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %13**
  %28 = load %13*, %13** %27, align 8
  %29 = getelementptr %13, %13* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call fastcc %1* @431(i64 %30)
  %32 = bitcast %4* %1 to %1**
  store %1* %31, %1** %32, align 8
  %33 = getelementptr inbounds %1, %1* %31, i64 0, i32 0, i32 1
  %34 = bitcast %3* %33 to %57*
  %35 = getelementptr inbounds %57, %57* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, i32 5126, i32 6
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %39, i32* %40, align 8
  br label %41

41:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_method_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %4, align 8
  %8 = alloca %4, align 8
  %9 = alloca %4, align 8
  %10 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %16 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @38, i64 0, i64 0), %4** nonnull %4, i8** nonnull %5, i64* nonnull %6) #9
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %60

20:                                               ; preds = %2
  %21 = load i32, i32* %16, align 4
  %22 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0), i8** nonnull %5, i64* nonnull %6) #9
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %280, label %24

24:                                               ; preds = %20
  %25 = load i8*, i8** %5, align 8
  %26 = call i8* @strstr(i8* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @39, i64 0, i64 0)) #11
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = load %0*, %0** @reflection_exception_ptr, align 8
  %30 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %29, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @40, i64 0, i64 0), i8* %25) #9
  br label %280

31:                                               ; preds = %24
  store %4* %7, %4** %4, align 8
  %32 = ptrtoint i8* %26 to i64
  %33 = ptrtoint i8* %25 to i64
  %34 = sub i64 %32, %33
  %35 = add i64 %34, 32
  %36 = and i64 %35, -8
  %37 = call noalias i8* @_emalloc(i64 %36) #10
  %38 = bitcast i8* %37 to %1*
  %39 = bitcast i8* %37 to i32*
  store i32 1, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 4
  %41 = bitcast i8* %40 to i32*
  store i32 6, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %37, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 %34, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %37, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 1 %25, i64 %34, i1 false) #9
  %47 = getelementptr inbounds %1, %1* %38, i64 0, i32 3, i64 %34
  store i8 0, i8* %47, align 1
  %48 = bitcast %4* %7 to i8**
  store i8* %37, i8** %48, align 8
  %49 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 5126, i32* %49, align 8
  %50 = load i64, i64* %6, align 8
  %51 = sub i64 -2, %34
  %52 = add i64 %51, %50
  store i64 %52, i64* %6, align 8
  %53 = getelementptr inbounds i8, i8* %26, i64 2
  store i8* %53, i8** %5, align 8
  %54 = load %4*, %4** %4, align 8
  %55 = getelementptr inbounds %4, %4* %54, i64 0, i32 1
  %56 = bitcast %6* %55 to i8*
  %57 = load i8, i8* %56, align 8
  %58 = bitcast %4* %54 to %21**
  %59 = bitcast i8* %37 to %59*
  br label %69

60:                                               ; preds = %2
  %61 = load %4*, %4** %4, align 8
  %62 = getelementptr inbounds %4, %4* %61, i64 0, i32 1
  %63 = bitcast %6* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 8
  %66 = bitcast %4* %61 to %21**
  %67 = select i1 %65, %21** %66, %21** null
  %68 = select i1 %65, %4* %61, %4* null
  br label %69

69:                                               ; preds = %60, %31
  %70 = phi %59* [ %59, %31 ], [ undef, %60 ]
  %71 = phi %4* [ %54, %31 ], [ %61, %60 ]
  %72 = phi %21** [ %58, %31 ], [ %66, %60 ]
  %73 = phi i8 [ %57, %31 ], [ %64, %60 ]
  %74 = phi %21** [ null, %31 ], [ %67, %60 ]
  %75 = phi %4* [ null, %31 ], [ %68, %60 ]
  %76 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %77 = bitcast %6* %76 to i8*
  %78 = load i8, i8* %77, align 8
  %79 = icmp eq i8 %78, 8
  %80 = select i1 %79, %4* %15, %4* null
  %81 = bitcast %4* %80 to %21**
  %82 = load %21*, %21** %81, align 8
  switch i8 %73, label %123 [
    i8 6, label %83
    i8 8, label %119
  ]

83:                                               ; preds = %69
  %84 = bitcast %4* %71 to %1**
  %85 = bitcast %4** %4 to %1***
  %86 = load %1*, %1** %84, align 8
  %87 = call %0* @zend_lookup_class(%1* %86) #9
  %88 = icmp eq %0* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = load %4*, %4** %4, align 8
  br label %134

91:                                               ; preds = %83
  %92 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %93 = icmp eq %21* %92, null
  br i1 %93, label %94, label %100

94:                                               ; preds = %91
  %95 = load %0*, %0** @reflection_exception_ptr, align 8
  %96 = load %1**, %1*** %85, align 8
  %97 = load %1*, %1** %96, align 8
  %98 = getelementptr inbounds %1, %1* %97, i64 0, i32 3, i64 0
  %99 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %95, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %98) #9
  br label %100

100:                                              ; preds = %91, %94
  %101 = load %4*, %4** %4, align 8
  %102 = icmp eq %4* %101, %7
  br i1 %102, label %103, label %280

103:                                              ; preds = %100
  %104 = getelementptr inbounds %4, %4* %7, i64 0, i32 1
  %105 = bitcast %6* %104 to %58*
  %106 = getelementptr inbounds %58, %58* %105, i64 0, i32 1
  %107 = load i8, i8* %106, align 1
  %108 = and i8 %107, 4
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %280, label %110

110:                                              ; preds = %103
  %111 = bitcast %4* %7 to %59**
  %112 = load %59*, %59** %111, align 8
  %113 = getelementptr inbounds %59, %59* %112, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = add i32 %114, -1
  store i32 %115, i32* %113, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %280

117:                                              ; preds = %110
  %118 = load %59*, %59** %111, align 8
  call void @_zval_dtor_func(%59* %118) #9
  br label %280

119:                                              ; preds = %69
  %120 = load %21*, %21** %72, align 8
  %121 = getelementptr inbounds %21, %21* %120, i64 0, i32 2
  %122 = load %0*, %0** %121, align 8
  br label %134

123:                                              ; preds = %69
  %124 = icmp eq %4* %71, %7
  br i1 %124, label %125, label %131

125:                                              ; preds = %123
  %126 = getelementptr inbounds %59, %59* %70, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = add i32 %127, -1
  store i32 %128, i32* %126, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  call void @_zval_dtor_func(%59* %70) #9
  br label %131

131:                                              ; preds = %130, %125, %123
  %132 = load %0*, %0** @reflection_exception_ptr, align 8
  %133 = call %21* @zend_throw_exception(%0* %132, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @41, i64 0, i64 0), i64 0) #9
  br label %280

134:                                              ; preds = %89, %119
  %135 = phi %4* [ %71, %119 ], [ %90, %89 ]
  %136 = phi %0* [ %122, %119 ], [ %87, %89 ]
  %137 = icmp eq %4* %135, %7
  br i1 %137, label %138, label %154

138:                                              ; preds = %134
  %139 = getelementptr inbounds %4, %4* %7, i64 0, i32 1
  %140 = bitcast %6* %139 to %58*
  %141 = getelementptr inbounds %58, %58* %140, i64 0, i32 1
  %142 = load i8, i8* %141, align 1
  %143 = and i8 %142, 4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %154, label %145

145:                                              ; preds = %138
  %146 = bitcast %4* %7 to %59**
  %147 = load %59*, %59** %146, align 8
  %148 = getelementptr inbounds %59, %59* %147, i64 0, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = add i32 %149, -1
  store i32 %150, i32* %148, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %145
  %153 = load %59*, %59** %146, align 8
  call void @_zval_dtor_func(%59* %153) #9
  br label %154

154:                                              ; preds = %152, %145, %138, %134
  %155 = load i8*, i8** %5, align 8
  %156 = load i64, i64* %6, align 8
  %157 = call i8* @zend_str_tolower_dup(i8* %155, i64 %156) #9
  %158 = load %0*, %0** @zend_ce_closure, align 8
  %159 = icmp eq %0* %136, %158
  %160 = icmp ne %4* %75, null
  %161 = and i1 %160, %159
  %162 = load i64, i64* %6, align 8
  %163 = icmp eq i64 %162, 8
  %164 = and i1 %161, %163
  br i1 %164, label %165, label %176

165:                                              ; preds = %154
  %166 = call i32 @memcmp(i8* %157, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 8) #11
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %176

168:                                              ; preds = %165
  %169 = load %21*, %21** %74, align 8
  %170 = call %11* @zend_get_closure_invoke_method(%21* %169) #9
  %171 = icmp eq %11* %170, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = load i64, i64* %6, align 8
  br label %176

174:                                              ; preds = %168
  %175 = getelementptr inbounds %11, %11* %170, i64 0, i32 0, i32 5
  store %11* null, %11** %175, align 8
  br label %193

176:                                              ; preds = %172, %165, %154
  %177 = phi i64 [ %173, %172 ], [ 8, %165 ], [ %162, %154 ]
  %178 = getelementptr inbounds %0, %0* %136, i64 0, i32 10
  %179 = call %4* @zend_hash_str_find(%8* nonnull %178, i8* %157, i64 %177) #9
  %180 = icmp eq %4* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %176
  %182 = bitcast %4* %179 to i8**
  %183 = load i8*, i8** %182, align 8
  %184 = bitcast i8* %183 to %11*
  %185 = icmp eq i8* %183, null
  br i1 %185, label %186, label %193

186:                                              ; preds = %176, %181
  call void @_efree(i8* %157) #9
  %187 = load %0*, %0** @reflection_exception_ptr, align 8
  %188 = getelementptr inbounds %0, %0* %136, i64 0, i32 1
  %189 = load %1*, %1** %188, align 8
  %190 = getelementptr inbounds %1, %1* %189, i64 0, i32 3, i64 0
  %191 = load i8*, i8** %5, align 8
  %192 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %187, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @29, i64 0, i64 0), i8* nonnull %190, i8* %191) #9
  br label %280

193:                                              ; preds = %181, %174
  %194 = phi %11* [ %170, %174 ], [ %184, %181 ]
  call void @_efree(i8* %157) #9
  %195 = getelementptr inbounds %11, %11* %194, i64 0, i32 0, i32 4
  %196 = load %0*, %0** %195, align 8
  %197 = getelementptr inbounds %0, %0* %196, i64 0, i32 1
  %198 = load %1*, %1** %197, align 8
  %199 = bitcast %4* %3 to %1**
  store %1* %198, %1** %199, align 8
  %200 = getelementptr inbounds %1, %1* %198, i64 0, i32 0, i32 1
  %201 = bitcast %3* %200 to %57*
  %202 = getelementptr inbounds %57, %57* %201, i64 0, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = and i8 %203, 2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %193
  %207 = getelementptr inbounds %1, %1* %198, i64 0, i32 0, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = add i32 %208, 1
  store i32 %209, i32* %207, align 8
  br label %210

210:                                              ; preds = %193, %206
  %211 = phi i32 [ 5126, %206 ], [ 6, %193 ]
  %212 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 %211, i32* %212, align 8
  %213 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %213) #9
  %214 = call noalias i8* @_emalloc(i64 32) #10
  %215 = bitcast i8* %214 to i32*
  store i32 1, i32* %215, align 8
  %216 = getelementptr inbounds i8, i8* %214, i64 4
  %217 = bitcast i8* %216 to i32*
  store i32 6, i32* %217, align 4
  %218 = getelementptr inbounds i8, i8* %214, i64 8
  %219 = bitcast i8* %218 to <2 x i64>*
  store <2 x i64> <i64 0, i64 5>, <2 x i64>* %219, align 8
  %220 = getelementptr inbounds i8, i8* %214, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %220, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i1 false) #9
  %221 = getelementptr inbounds i8, i8* %214, i64 29
  store i8 0, i8* %221, align 1
  %222 = bitcast %4* %8 to i8**
  store i8* %214, i8** %222, align 8
  %223 = getelementptr inbounds %4, %4* %8, i64 0, i32 1, i32 0
  store i32 5126, i32* %223, align 8
  call void @zend_std_write_property(%4* %80, %4* nonnull %8, %4* nonnull %3, i8** null) #9
  %224 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %225 = bitcast %6* %224 to %58*
  %226 = getelementptr inbounds %58, %58* %225, i64 0, i32 1
  %227 = load i8, i8* %226, align 1
  %228 = and i8 %227, 4
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %236, label %230

230:                                              ; preds = %210
  %231 = bitcast %4* %3 to %59**
  %232 = load %59*, %59** %231, align 8
  %233 = getelementptr inbounds %59, %59* %232, i64 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = add i32 %234, -1
  store i32 %235, i32* %233, align 4
  br label %236

236:                                              ; preds = %210, %230
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %213) #9
  %237 = getelementptr inbounds %11, %11* %194, i64 0, i32 0, i32 3
  %238 = load %1*, %1** %237, align 8
  store %1* %238, %1** %199, align 8
  %239 = getelementptr inbounds %1, %1* %238, i64 0, i32 0, i32 1
  %240 = bitcast %3* %239 to %57*
  %241 = getelementptr inbounds %57, %57* %240, i64 0, i32 1
  %242 = load i8, i8* %241, align 1
  %243 = and i8 %242, 2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %249

245:                                              ; preds = %236
  %246 = getelementptr inbounds %1, %1* %238, i64 0, i32 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = add i32 %247, 1
  store i32 %248, i32* %246, align 8
  br label %249

249:                                              ; preds = %236, %245
  %250 = phi i32 [ 5126, %245 ], [ 6, %236 ]
  %251 = getelementptr inbounds %6, %6* %224, i64 0, i32 0
  store i32 %250, i32* %251, align 8
  %252 = bitcast %4* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %252) #9
  %253 = call noalias i8* @_emalloc(i64 32) #10
  %254 = bitcast i8* %253 to i32*
  store i32 1, i32* %254, align 8
  %255 = getelementptr inbounds i8, i8* %253, i64 4
  %256 = bitcast i8* %255 to i32*
  store i32 6, i32* %256, align 4
  %257 = getelementptr inbounds i8, i8* %253, i64 8
  %258 = bitcast i8* %257 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %258, align 8
  %259 = getelementptr inbounds i8, i8* %253, i64 24
  %260 = bitcast i8* %259 to i32*
  store i32 1701667182, i32* %260, align 8
  %261 = getelementptr inbounds i8, i8* %253, i64 28
  store i8 0, i8* %261, align 1
  %262 = bitcast %4* %9 to i8**
  store i8* %253, i8** %262, align 8
  %263 = getelementptr inbounds %4, %4* %9, i64 0, i32 1, i32 0
  store i32 5126, i32* %263, align 8
  call void @zend_std_write_property(%4* %80, %4* nonnull %9, %4* nonnull %3, i8** null) #9
  %264 = load i8, i8* %226, align 1
  %265 = and i8 %264, 4
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %273, label %267

267:                                              ; preds = %249
  %268 = bitcast %4* %3 to %59**
  %269 = load %59*, %59** %268, align 8
  %270 = getelementptr inbounds %59, %59* %269, i64 0, i32 0, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = add i32 %271, -1
  store i32 %272, i32* %270, align 4
  br label %273

273:                                              ; preds = %249, %267
  call void @_zval_ptr_dtor(%4* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %252) #9
  %274 = getelementptr inbounds %11, %11* %194, i64 0, i32 0, i32 0
  %275 = getelementptr inbounds %21, %21* %82, i64 -1, i32 4
  %276 = bitcast %8** %275 to i8**
  store i8* %274, i8** %276, align 8
  %277 = getelementptr inbounds %21, %21* %82, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 1, i32* %277, align 8
  %278 = getelementptr inbounds %21, %21* %82, i64 -1, i32 5
  %279 = bitcast [1 x %4]* %278 to %0**
  store %0* %136, %0** %279, align 8
  br label %280

280:                                              ; preds = %117, %110, %103, %100, %20, %273, %186, %131, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %54, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %54, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %54

28:                                               ; preds = %12
  %29 = bitcast i8* %17 to %11*
  %30 = getelementptr inbounds %21, %21* %14, i64 -1, i32 5
  %31 = bitcast [1 x %4]* %30 to %0**
  %32 = load %0*, %0** %31, align 8
  call fastcc void @426(%62* nonnull %3, %11* %29, %0* %32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0))
  %33 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %34 = load %1*, %1** %33, align 8
  %35 = icmp eq %1* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %1, %1* %34, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %1, %1* %34, i64 0, i32 3, i64 %38
  store i8 0, i8* %39, align 1
  %40 = load %1*, %1** %33, align 8
  store %1* null, %1** %33, align 8
  br label %43

41:                                               ; preds = %28
  %42 = load %1*, %1** @zend_empty_string, align 8
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi %1* [ %40, %36 ], [ %42, %41 ]
  %45 = bitcast %4* %1 to %1**
  store %1* %44, %1** %45, align 8
  %46 = getelementptr inbounds %1, %1* %44, i64 0, i32 0, i32 1
  %47 = bitcast %3* %46 to %57*
  %48 = getelementptr inbounds %57, %57* %47, i64 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = and i8 %49, 2
  %51 = icmp eq i8 %50, 0
  %52 = select i1 %51, i32 5126, i32 6
  %53 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %52, i32* %53, align 8
  br label %54

54:                                               ; preds = %22, %9, %43, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_getClosure(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4*, align 8
  %4 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 0, i32 2
  %14 = load %0*, %0** %13, align 8
  %15 = load %0*, %0** @reflection_method_ptr, align 8
  %16 = tail call zeroext i8 @instanceof_function(%0* %14, %0* %15) #9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9, %2
  %19 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %19) #9
  br label %90

20:                                               ; preds = %9
  %21 = load %21*, %21** %11, align 8
  %22 = getelementptr inbounds %21, %21* %21, i64 -1, i32 4
  %23 = bitcast %8** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %20
  %27 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %28 = icmp eq %21* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %21, %21* %27, i64 0, i32 2
  %31 = load %0*, %0** %30, align 8
  %32 = load %0*, %0** @reflection_exception_ptr, align 8
  %33 = icmp eq %0* %31, %32
  br i1 %33, label %90, label %34

34:                                               ; preds = %26, %29
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %90

35:                                               ; preds = %20
  %36 = bitcast i8* %24 to %11*
  %37 = getelementptr inbounds i8, i8* %24, i64 4
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %24, i64 16
  %44 = bitcast i8* %43 to %0**
  %45 = load %0*, %0** %44, align 8
  tail call void @zend_create_fake_closure(%4* %1, %11* %36, %0* %45, %0* %45, %4* null) #9
  br label %90

46:                                               ; preds = %35
  %47 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i64 0, i64 0), %4** nonnull %3) #9
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %90, label %51

51:                                               ; preds = %46
  %52 = bitcast %4** %3 to %21***
  %53 = load %21**, %21*** %52, align 8
  %54 = load %21*, %21** %53, align 8
  %55 = getelementptr inbounds %21, %21* %54, i64 0, i32 2
  %56 = load %0*, %0** %55, align 8
  %57 = getelementptr inbounds i8, i8* %24, i64 16
  %58 = bitcast i8* %57 to %0**
  %59 = load %0*, %0** %58, align 8
  %60 = call zeroext i8 @instanceof_function(%0* %56, %0* %59) #9
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %51
  %63 = load %0*, %0** @reflection_exception_ptr, align 8
  %64 = call %21* @zend_throw_exception(%0* %63, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @44, i64 0, i64 0), i64 0) #9
  br label %90

65:                                               ; preds = %51
  %66 = load %4*, %4** %3, align 8
  %67 = bitcast %4* %66 to %21**
  %68 = load %21*, %21** %67, align 8
  %69 = getelementptr inbounds %21, %21* %68, i64 0, i32 2
  %70 = load %0*, %0** %69, align 8
  %71 = load %0*, %0** @zend_ce_closure, align 8
  %72 = icmp eq %0* %70, %71
  br i1 %72, label %73, label %88

73:                                               ; preds = %65
  %74 = load i32, i32* %38, align 4
  %75 = and i32 %74, 2097152
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %4, %4* %66, i64 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = bitcast %4* %1 to %21**
  store %21* %68, %21** %80, align 8
  %81 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %79, i32* %81, align 8
  %82 = and i32 %79, 1024
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %21, %21* %68, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  br label %90

88:                                               ; preds = %73, %65
  %89 = load %0*, %0** %58, align 8
  call void @zend_create_fake_closure(%4* %1, %11* nonnull %36, %0* %89, %0* %70, %4* %66) #9
  br label %90

90:                                               ; preds = %42, %88, %77, %84, %46, %29, %62, %34, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_invoke(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  tail call fastcc void @432(%23* %0, %4* %1, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @432(%23* nocapture readonly %0, %4* nocapture %1, i32 %2) unnamed_addr #0 {
  %4 = alloca %4, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %60, align 8
  %9 = alloca %61, align 8
  %10 = alloca %4*, align 8
  %11 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  store %4* null, %4** %5, align 8
  %13 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 0, i32* %7, align 4
  %15 = bitcast %60* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #9
  %16 = getelementptr inbounds %61, %61* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  %17 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %19 = bitcast %6* %18 to i8*
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %31

22:                                               ; preds = %3
  %23 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %24 = bitcast %4* %23 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %27 = load %0*, %0** %26, align 8
  %28 = load %0*, %0** @reflection_method_ptr, align 8
  %29 = tail call zeroext i8 @instanceof_function(%0* %27, %0* %28) #9
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %22, %3
  %32 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %32) #9
  br label %329

33:                                               ; preds = %22
  %34 = load %21*, %21** %24, align 8
  %35 = getelementptr inbounds %21, %21* %34, i64 -1, i32 4
  %36 = bitcast %8** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %48

39:                                               ; preds = %33
  %40 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %41 = icmp eq %21* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %21, %21* %40, i64 0, i32 2
  %44 = load %0*, %0** %43, align 8
  %45 = load %0*, %0** @reflection_exception_ptr, align 8
  %46 = icmp eq %0* %44, %45
  br i1 %46, label %329, label %47

47:                                               ; preds = %39, %42
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %329

48:                                               ; preds = %33
  %49 = getelementptr inbounds i8, i8* %37, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %51, 258
  %55 = icmp eq i32 %54, 256
  br i1 %55, label %96, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %21, %21* %34, i64 -1, i32 5, i64 0, i32 2
  %58 = bitcast %7* %57 to i8*
  %59 = load i8, i8* %58, align 4
  %60 = and i8 %59, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %96

62:                                               ; preds = %56
  %63 = load %0*, %0** @reflection_exception_ptr, align 8
  br i1 %53, label %76, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds i8, i8* %37, i64 16
  %66 = bitcast i8* %65 to %0**
  %67 = load %0*, %0** %66, align 8
  %68 = getelementptr inbounds %0, %0* %67, i64 0, i32 1
  %69 = load %1*, %1** %68, align 8
  %70 = getelementptr inbounds %1, %1* %69, i64 0, i32 3, i64 0
  %71 = getelementptr inbounds i8, i8* %37, i64 8
  %72 = bitcast i8* %71 to %1**
  %73 = load %1*, %1** %72, align 8
  %74 = getelementptr inbounds %1, %1* %73, i64 0, i32 3, i64 0
  %75 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %63, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @178, i64 0, i64 0), i8* nonnull %70, i8* nonnull %74) #9
  br label %329

76:                                               ; preds = %62
  %77 = and i32 %51, 512
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @11, i64 0, i64 0)
  %80 = getelementptr inbounds i8, i8* %37, i64 16
  %81 = bitcast i8* %80 to %0**
  %82 = load %0*, %0** %81, align 8
  %83 = getelementptr inbounds %0, %0* %82, i64 0, i32 1
  %84 = load %1*, %1** %83, align 8
  %85 = getelementptr inbounds %1, %1* %84, i64 0, i32 3, i64 0
  %86 = getelementptr inbounds i8, i8* %37, i64 8
  %87 = bitcast i8* %86 to %1**
  %88 = load %1*, %1** %87, align 8
  %89 = getelementptr inbounds %1, %1* %88, i64 0, i32 3, i64 0
  %90 = getelementptr inbounds %21, %21* %34, i64 0, i32 2
  %91 = load %0*, %0** %90, align 8
  %92 = getelementptr inbounds %0, %0* %91, i64 0, i32 1
  %93 = load %1*, %1** %92, align 8
  %94 = getelementptr inbounds %1, %1* %93, i64 0, i32 3, i64 0
  %95 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %63, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @179, i64 0, i64 0), i8* %79, i8* nonnull %85, i8* nonnull %89, i8* nonnull %94) #9
  br label %329

96:                                               ; preds = %48, %56
  %97 = icmp ne i32 %2, 0
  %98 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %103

100:                                              ; preds = %96
  %101 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @180, i64 0, i64 0), %4** nonnull %6, %4** nonnull %5, i32* nonnull %7) #9
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %329, label %154

103:                                              ; preds = %96
  %104 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @181, i64 0, i64 0), %4** nonnull %6, %4** nonnull %10) #9
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %329, label %106

106:                                              ; preds = %103
  %107 = bitcast %4** %10 to %8***
  %108 = load %8**, %8*** %107, align 8
  %109 = load %8*, %8** %108, align 8
  %110 = getelementptr inbounds %8, %8* %109, i64 0, i32 5
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %7, align 4
  %112 = sext i32 %111 to i64
  %113 = call noalias i8* @_safe_emalloc(i64 16, i64 %112, i64 0) #9
  %114 = bitcast %4** %5 to i8**
  store i8* %113, i8** %114, align 8
  store i32 0, i32* %7, align 4
  %115 = load %8**, %8*** %107, align 8
  %116 = load %8*, %8** %115, align 8
  %117 = getelementptr inbounds %8, %8* %116, i64 0, i32 3
  %118 = load %10*, %10** %117, align 8
  %119 = getelementptr inbounds %8, %8* %116, i64 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %10, %10* %118, i64 %121
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %154, label %124

124:                                              ; preds = %106, %150
  %125 = phi i32 [ %151, %150 ], [ 0, %106 ]
  %126 = phi %10* [ %152, %150 ], [ %118, %106 ]
  %127 = getelementptr inbounds %10, %10* %126, i64 0, i32 0, i32 1
  %128 = bitcast %6* %127 to i8*
  %129 = load i8, i8* %128, align 8
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %150, label %131

131:                                              ; preds = %124
  %132 = load %4*, %4** %5, align 8
  %133 = sext i32 %125 to i64
  %134 = getelementptr inbounds %4, %4* %132, i64 %133
  %135 = bitcast %10* %126 to %59**
  %136 = load %59*, %59** %135, align 8
  %137 = getelementptr inbounds %10, %10* %126, i64 0, i32 0, i32 1, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = bitcast %4* %134 to %59**
  store %59* %136, %59** %139, align 8
  %140 = getelementptr inbounds %4, %4* %132, i64 %133, i32 1, i32 0
  store i32 %138, i32* %140, align 8
  %141 = and i32 %138, 1024
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %131
  %144 = getelementptr inbounds %59, %59* %136, i64 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %144, align 4
  br label %147

147:                                              ; preds = %131, %143
  %148 = load i32, i32* %7, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %7, align 4
  br label %150

150:                                              ; preds = %124, %147
  %151 = phi i32 [ %125, %124 ], [ %149, %147 ]
  %152 = getelementptr inbounds %10, %10* %126, i64 1
  %153 = icmp eq %10* %152, %122
  br i1 %153, label %154, label %124

154:                                              ; preds = %150, %106, %100
  %155 = load i32, i32* %50, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %164, label %158

158:                                              ; preds = %154
  store %4* null, %4** %6, align 8
  %159 = getelementptr inbounds i8, i8* %37, i64 16
  %160 = bitcast i8* %159 to %0**
  %161 = load %0*, %0** %160, align 8
  %162 = getelementptr inbounds %60, %60* %8, i64 0, i32 0
  store i64 56, i64* %162, align 8
  %163 = getelementptr inbounds %60, %60* %8, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %163, align 8
  br label %205

164:                                              ; preds = %154
  %165 = load %4*, %4** %6, align 8
  %166 = icmp eq %4* %165, null
  br i1 %166, label %167, label %180

167:                                              ; preds = %164
  %168 = load %0*, %0** @reflection_exception_ptr, align 8
  %169 = getelementptr inbounds i8, i8* %37, i64 16
  %170 = bitcast i8* %169 to %0**
  %171 = load %0*, %0** %170, align 8
  %172 = getelementptr inbounds %0, %0* %171, i64 0, i32 1
  %173 = load %1*, %1** %172, align 8
  %174 = getelementptr inbounds %1, %1* %173, i64 0, i32 3, i64 0
  %175 = getelementptr inbounds i8, i8* %37, i64 8
  %176 = bitcast i8* %175 to %1**
  %177 = load %1*, %1** %176, align 8
  %178 = getelementptr inbounds %1, %1* %177, i64 0, i32 3, i64 0
  %179 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %168, i64 0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @182, i64 0, i64 0), i8* nonnull %174, i8* nonnull %178) #9
  br label %329

180:                                              ; preds = %164
  %181 = bitcast %4* %165 to %21**
  %182 = load %21*, %21** %181, align 8
  %183 = getelementptr inbounds %21, %21* %182, i64 0, i32 2
  %184 = load %0*, %0** %183, align 8
  %185 = getelementptr inbounds i8, i8* %37, i64 16
  %186 = bitcast i8* %185 to %0**
  %187 = load %0*, %0** %186, align 8
  %188 = call zeroext i8 @instanceof_function(%0* %184, %0* %187) #9
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %197

190:                                              ; preds = %180
  br i1 %97, label %194, label %191

191:                                              ; preds = %190
  %192 = bitcast %4** %5 to i8**
  %193 = load i8*, i8** %192, align 8
  call void @_efree(i8* %193) #9
  br label %194

194:                                              ; preds = %191, %190
  %195 = load %0*, %0** @reflection_exception_ptr, align 8
  %196 = call %21* @zend_throw_exception(%0* %195, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @44, i64 0, i64 0), i64 0) #9
  br label %329

197:                                              ; preds = %180
  %198 = load %4*, %4** %6, align 8
  %199 = getelementptr inbounds %60, %60* %8, i64 0, i32 0
  store i64 56, i64* %199, align 8
  %200 = getelementptr inbounds %60, %60* %8, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %200, align 8
  %201 = icmp eq %4* %198, null
  br i1 %201, label %205, label %202

202:                                              ; preds = %197
  %203 = bitcast %4* %198 to %21**
  %204 = load %21*, %21** %203, align 8
  br label %205

205:                                              ; preds = %158, %197, %202
  %206 = phi i1 [ false, %202 ], [ true, %197 ], [ true, %158 ]
  %207 = phi %0* [ %184, %202 ], [ %184, %197 ], [ %161, %158 ]
  %208 = phi %21** [ %203, %202 ], [ null, %197 ], [ null, %158 ]
  %209 = phi %21* [ %204, %202 ], [ null, %197 ], [ null, %158 ]
  %210 = getelementptr inbounds %60, %60* %8, i64 0, i32 4
  store %21* %209, %21** %210, align 8
  %211 = getelementptr inbounds %60, %60* %8, i64 0, i32 2
  store %4* %4, %4** %211, align 8
  %212 = load i32, i32* %7, align 4
  %213 = getelementptr inbounds %60, %60* %8, i64 0, i32 6
  store i32 %212, i32* %213, align 4
  %214 = bitcast %4** %5 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %60, %60* %8, i64 0, i32 3
  %217 = bitcast %4** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = getelementptr inbounds %60, %60* %8, i64 0, i32 5
  store i8 1, i8* %218, align 8
  store i8 1, i8* %16, align 8
  %219 = getelementptr inbounds %61, %61* %9, i64 0, i32 1
  %220 = bitcast %11** %219 to i8**
  store i8* %37, i8** %220, align 8
  %221 = getelementptr inbounds %61, %61* %9, i64 0, i32 2
  store %0* %207, %0** %221, align 8
  %222 = getelementptr inbounds %21, %21* %34, i64 -1, i32 5, i64 0, i32 0, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds %61, %61* %9, i64 0, i32 3
  %225 = bitcast %0** %224 to i64*
  store i64 %223, i64* %225, align 8
  br i1 %206, label %228, label %226

226:                                              ; preds = %205
  %227 = load %21*, %21** %208, align 8
  br label %228

228:                                              ; preds = %205, %226
  %229 = phi %21* [ %227, %226 ], [ null, %205 ]
  %230 = getelementptr inbounds %61, %61* %9, i64 0, i32 4
  store %21* %229, %21** %230, align 8
  %231 = load i32, i32* %50, align 4
  %232 = and i32 %231, 2097152
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %252, label %234

234:                                              ; preds = %228
  %235 = call noalias i8* @_emalloc_224() #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* nonnull align 8 %37, i64 224, i1 false) #9
  %236 = getelementptr inbounds i8, i8* %37, i64 8
  %237 = bitcast i8* %236 to %1**
  %238 = load %1*, %1** %237, align 8
  %239 = getelementptr inbounds %1, %1* %238, i64 0, i32 0, i32 1
  %240 = bitcast %3* %239 to %57*
  %241 = getelementptr inbounds %57, %57* %240, i64 0, i32 1
  %242 = load i8, i8* %241, align 1
  %243 = and i8 %242, 2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %249

245:                                              ; preds = %234
  %246 = getelementptr inbounds %1, %1* %238, i64 0, i32 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = add i32 %247, 1
  store i32 %248, i32* %246, align 8
  br label %249

249:                                              ; preds = %234, %245
  %250 = getelementptr inbounds i8, i8* %235, i64 8
  %251 = bitcast i8* %250 to %1**
  store %1* %238, %1** %251, align 8
  store i8* %235, i8** %220, align 8
  br label %252

252:                                              ; preds = %228, %249
  %253 = call i32 @zend_call_function(%60* nonnull %8, %61* nonnull %9) #9
  br i1 %97, label %270, label %254

254:                                              ; preds = %252
  %255 = load i32, i32* %7, align 4
  %256 = icmp sgt i32 %255, 0
  %257 = load %4*, %4** %5, align 8
  br i1 %256, label %258, label %267

258:                                              ; preds = %254, %258
  %259 = phi i64 [ %262, %258 ], [ 0, %254 ]
  %260 = phi %4* [ %266, %258 ], [ %257, %254 ]
  %261 = getelementptr inbounds %4, %4* %260, i64 %259
  call void @_zval_ptr_dtor(%4* %261) #9
  %262 = add nuw nsw i64 %259, 1
  %263 = load i32, i32* %7, align 4
  %264 = sext i32 %263 to i64
  %265 = icmp slt i64 %262, %264
  %266 = load %4*, %4** %5, align 8
  br i1 %265, label %258, label %267

267:                                              ; preds = %258, %254
  %268 = phi %4* [ %257, %254 ], [ %266, %258 ]
  %269 = bitcast %4* %268 to i8*
  call void @_efree(i8* %269) #9
  br label %270

270:                                              ; preds = %267, %252
  %271 = icmp eq i32 %253, -1
  br i1 %271, label %272, label %285

272:                                              ; preds = %270
  %273 = load %0*, %0** @reflection_exception_ptr, align 8
  %274 = getelementptr inbounds i8, i8* %37, i64 16
  %275 = bitcast i8* %274 to %0**
  %276 = load %0*, %0** %275, align 8
  %277 = getelementptr inbounds %0, %0* %276, i64 0, i32 1
  %278 = load %1*, %1** %277, align 8
  %279 = getelementptr inbounds %1, %1* %278, i64 0, i32 3, i64 0
  %280 = getelementptr inbounds i8, i8* %37, i64 8
  %281 = bitcast i8* %280 to %1**
  %282 = load %1*, %1** %281, align 8
  %283 = getelementptr inbounds %1, %1* %282, i64 0, i32 3, i64 0
  %284 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %273, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @183, i64 0, i64 0), i8* nonnull %279, i8* nonnull %283) #9
  br label %329

285:                                              ; preds = %270
  %286 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %287 = bitcast %6* %286 to i8*
  %288 = load i8, i8* %287, align 8
  switch i8 %288, label %289 [
    i8 0, label %329
    i8 10, label %291
  ]

289:                                              ; preds = %285
  %290 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  br label %322

291:                                              ; preds = %285
  %292 = bitcast %4* %4 to %59**
  %293 = load %59*, %59** %292, align 8
  %294 = getelementptr inbounds %59, %59* %293, i64 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %306

297:                                              ; preds = %291
  %298 = getelementptr inbounds %59, %59* %293, i64 1
  %299 = bitcast %59* %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = getelementptr inbounds %59, %59* %293, i64 2, i32 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = getelementptr inbounds %4, %4* %4, i64 0, i32 0, i32 0
  store i64 %300, i64* %303, align 8
  %304 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %302, i32* %304, align 8
  %305 = bitcast %59* %293 to i8*
  call void @_efree_24(i8* %305) #9
  br label %322

306:                                              ; preds = %291
  %307 = add i32 %295, -1
  store i32 %307, i32* %294, align 4
  %308 = bitcast %4* %4 to %63**
  %309 = load %63*, %63** %308, align 8
  %310 = getelementptr inbounds %63, %63* %309, i64 0, i32 1
  %311 = bitcast %4* %310 to %59**
  %312 = load %59*, %59** %311, align 8
  %313 = getelementptr inbounds %63, %63* %309, i64 0, i32 1, i32 1, i32 0
  %314 = load i32, i32* %313, align 8
  store %59* %312, %59** %292, align 8
  %315 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %314, i32* %315, align 8
  %316 = and i32 %314, 1024
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %306
  %319 = getelementptr inbounds %59, %59* %312, i64 0, i32 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = add i32 %320, 1
  store i32 %321, i32* %319, align 4
  br label %322

322:                                              ; preds = %289, %318, %306, %297
  %323 = phi i32* [ %290, %289 ], [ %315, %318 ], [ %315, %306 ], [ %304, %297 ]
  %324 = getelementptr inbounds %4, %4* %4, i64 0, i32 0, i32 0
  %325 = load i64, i64* %324, align 8
  %326 = load i32, i32* %323, align 8
  %327 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %325, i64* %327, align 8
  %328 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %326, i32* %328, align 8
  br label %329

329:                                              ; preds = %285, %322, %103, %100, %64, %76, %42, %272, %194, %167, %47, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_invokeArgs(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  tail call fastcc void @432(%23* %0, %4* %1, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isFinal(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 4
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isAbstract(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isPublic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isPrivate(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1024
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isProtected(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 512
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isStatic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %33, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %33

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = or i32 %30, 2
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %31, i32* %32, align 8
  br label %33

33:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isDeprecated(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 262144
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isGenerator(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 8388608
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_isVariadic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 16777216
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_inNamespace(%23* %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %65, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %62, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %62, label %39

39:                                               ; preds = %30, %25
  %40 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %41 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %42 = icmp eq i8 %40, 6
  br i1 %42, label %43, label %61

43:                                               ; preds = %39
  %44 = bitcast %4* %41 to %1**
  %45 = load %1*, %1** %44, align 8
  %46 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 0
  %47 = getelementptr inbounds %1, %1* %45, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 %48
  br label %52

52:                                               ; preds = %56, %50
  %53 = phi i8* [ %51, %50 ], [ %54, %56 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = icmp ult i8* %54, %46
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = load i8, i8* %54, align 1
  %58 = icmp eq i8 %57, 92
  br i1 %58, label %59, label %52

59:                                               ; preds = %56
  %60 = icmp ugt i8* %54, %46
  br i1 %60, label %62, label %61

61:                                               ; preds = %52, %43, %39, %59
  br label %62

62:                                               ; preds = %59, %10, %30, %61
  %63 = phi i32 [ 2, %61 ], [ 2, %30 ], [ 2, %10 ], [ 3, %59 ]
  %64 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %63, i32* %64, align 8
  br label %65

65:                                               ; preds = %62, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getNamespaceName(%23* %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %85, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %82, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %82, label %39

39:                                               ; preds = %30, %25
  %40 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %41 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %42 = icmp eq i8 %40, 6
  br i1 %42, label %43, label %79

43:                                               ; preds = %39
  %44 = bitcast %4* %41 to %1**
  %45 = load %1*, %1** %44, align 8
  %46 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 0
  %47 = getelementptr inbounds %1, %1* %45, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %79, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 %48
  br label %52

52:                                               ; preds = %56, %50
  %53 = phi i8* [ %51, %50 ], [ %54, %56 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = icmp ult i8* %54, %46
  br i1 %55, label %79, label %56

56:                                               ; preds = %52
  %57 = load i8, i8* %54, align 1
  %58 = icmp eq i8 %57, 92
  br i1 %58, label %59, label %52

59:                                               ; preds = %56
  %60 = icmp ugt i8* %54, %46
  br i1 %60, label %61, label %79

61:                                               ; preds = %59
  %62 = ptrtoint i8* %54 to i64
  %63 = ptrtoint i8* %46 to i64
  %64 = sub i64 %62, %63
  %65 = add i64 %64, 32
  %66 = and i64 %65, -8
  %67 = tail call noalias i8* @_emalloc(i64 %66) #10
  %68 = bitcast i8* %67 to %1*
  %69 = bitcast i8* %67 to i32*
  store i32 1, i32* %69, align 8
  %70 = getelementptr inbounds i8, i8* %67, i64 4
  %71 = bitcast i8* %70 to i32*
  store i32 6, i32* %71, align 4
  %72 = getelementptr inbounds i8, i8* %67, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds i8, i8* %67, i64 16
  %75 = bitcast i8* %74 to i64*
  store i64 %64, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %67, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 1 %46, i64 %64, i1 false) #9
  %77 = getelementptr inbounds %1, %1* %68, i64 0, i32 3, i64 %64
  store i8 0, i8* %77, align 1
  %78 = bitcast %4* %1 to i8**
  store i8* %67, i8** %78, align 8
  br label %82

79:                                               ; preds = %52, %43, %59, %39
  %80 = load i64, i64* bitcast (%1** @zend_empty_string to i64*), align 8
  %81 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  br label %82

82:                                               ; preds = %10, %30, %61, %79
  %83 = phi i32 [ 6, %79 ], [ 5126, %61 ], [ 2, %30 ], [ 2, %10 ]
  %84 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %83, i32* %84, align 8
  br label %85

85:                                               ; preds = %82, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getShortName(%23* %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %101, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %101

41:                                               ; preds = %30, %25
  %42 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %43 = phi %4* [ %23, %25 ], [ %32, %30 ]
  switch i8 %42, label %87 [
    i8 6, label %44
    i8 10, label %83
  ]

44:                                               ; preds = %41
  %45 = bitcast %4* %43 to %1**
  %46 = load %1*, %1** %45, align 8
  %47 = getelementptr inbounds %1, %1* %46, i64 0, i32 3, i64 0
  %48 = getelementptr inbounds %1, %1* %46, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %87, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %1, %1* %46, i64 0, i32 3, i64 %49
  br label %53

53:                                               ; preds = %57, %51
  %54 = phi i8* [ %52, %51 ], [ %55, %57 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 -1
  %56 = icmp ult i8* %55, %47
  br i1 %56, label %87, label %57

57:                                               ; preds = %53
  %58 = load i8, i8* %55, align 1
  %59 = icmp eq i8 %58, 92
  br i1 %59, label %60, label %53

60:                                               ; preds = %57
  %61 = icmp ugt i8* %55, %47
  br i1 %61, label %62, label %87

62:                                               ; preds = %60
  %63 = ptrtoint i8* %55 to i64
  %64 = ptrtoint i8* %47 to i64
  %65 = xor i64 %63, -1
  %66 = add i64 %49, %64
  %67 = add i64 %66, %65
  %68 = add i64 %67, 32
  %69 = and i64 %68, -8
  %70 = tail call noalias i8* @_emalloc(i64 %69) #10
  %71 = bitcast i8* %70 to %1*
  %72 = bitcast i8* %70 to i32*
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %70, i64 4
  %74 = bitcast i8* %73 to i32*
  store i32 6, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %70, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %70, i64 16
  %78 = bitcast i8* %77 to i64*
  store i64 %67, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %70, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* nonnull align 1 %54, i64 %67, i1 false) #9
  %80 = getelementptr inbounds %1, %1* %71, i64 0, i32 3, i64 %67
  store i8 0, i8* %80, align 1
  %81 = bitcast %4* %1 to i8**
  store i8* %70, i8** %81, align 8
  %82 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %82, align 8
  br label %101

83:                                               ; preds = %41
  %84 = bitcast %4* %43 to %63**
  %85 = load %63*, %63** %84, align 8
  %86 = getelementptr inbounds %63, %63* %85, i64 0, i32 1
  br label %87

87:                                               ; preds = %53, %60, %41, %44, %83
  %88 = phi %4* [ %86, %83 ], [ %43, %44 ], [ %43, %41 ], [ %43, %60 ], [ %43, %53 ]
  %89 = bitcast %4* %88 to %59**
  %90 = load %59*, %59** %89, align 8
  %91 = getelementptr inbounds %4, %4* %88, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = bitcast %4* %1 to %59**
  store %59* %90, %59** %93, align 8
  %94 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %92, i32* %94, align 8
  %95 = and i32 %92, 1024
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %87
  %98 = getelementptr inbounds %59, %59* %90, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  br label %101

101:                                              ; preds = %97, %87, %7, %62, %39
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_hasReturnType(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1073741824
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_function_getReturnType(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %97, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %97, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %97

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1073741824
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %33, align 8
  br label %97

34:                                               ; preds = %26
  %35 = and i32 %29, 2097152
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %34
  %38 = tail call noalias i8* @_emalloc_224() #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %15, i64 224, i1 false) #9
  %39 = getelementptr inbounds i8, i8* %15, i64 8
  %40 = bitcast i8* %39 to %1**
  %41 = load %1*, %1** %40, align 8
  %42 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 1
  %43 = bitcast %3* %42 to %57*
  %44 = getelementptr inbounds %57, %57* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %37
  %49 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  br label %52

52:                                               ; preds = %48, %37
  %53 = getelementptr inbounds i8, i8* %38, i64 8
  %54 = bitcast i8* %53 to %1**
  store %1* %41, %1** %54, align 8
  br label %55

55:                                               ; preds = %34, %52
  %56 = phi i8* [ %38, %52 ], [ %15, %34 ]
  %57 = getelementptr inbounds %21, %21* %12, i64 -1, i32 2
  %58 = bitcast %0** %57 to %4*
  %59 = getelementptr inbounds %0*, %0** %57, i64 1
  %60 = bitcast %0** %59 to i8*
  %61 = load i8, i8* %60, align 8
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, %4* null, %4* %58
  %64 = getelementptr inbounds i8, i8* %15, i64 40
  %65 = bitcast i8* %64 to %13**
  %66 = load %13*, %13** %65, align 8
  %67 = getelementptr inbounds %13, %13* %66, i64 -1
  %68 = load %0*, %0** @reflection_named_type_ptr, align 8
  %69 = tail call i32 @_object_init_ex(%4* %1, %0* %68) #9
  %70 = bitcast %4* %1 to %21**
  %71 = load %21*, %21** %70, align 8
  %72 = tail call noalias i8* @_emalloc_16() #9
  %73 = bitcast i8* %72 to %13**
  store %13* %67, %13** %73, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 8
  %75 = bitcast i8* %74 to i8**
  store i8* %56, i8** %75, align 8
  %76 = getelementptr inbounds %21, %21* %71, i64 -1, i32 4
  %77 = bitcast %8** %76 to i8**
  store i8* %72, i8** %77, align 8
  %78 = getelementptr inbounds %21, %21* %71, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 4, i32* %78, align 8
  %79 = getelementptr inbounds i8, i8* %56, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %21, %21* %71, i64 -1, i32 5, i64 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  br i1 %62, label %97, label %83

83:                                               ; preds = %55
  %84 = bitcast %4* %63 to %59**
  %85 = load %59*, %59** %84, align 8
  %86 = getelementptr inbounds %59, %59* %85, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %4, %4* %63, i64 0, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %4, %4* %63, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %21, %21* %71, i64 -1, i32 2
  %94 = bitcast %0** %93 to i64*
  store i64 %90, i64* %94, align 8
  %95 = getelementptr inbounds %21, %21* %71, i64 -1, i32 3
  %96 = bitcast %22** %95 to i32*
  store i32 %92, i32* %96, align 8
  br label %97

97:                                               ; preds = %83, %55, %20, %7, %32, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isConstructor(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %50, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %50, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %50

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 8192
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %21, %21* %12, i64 -1, i32 5
  %34 = bitcast [1 x %4]* %33 to %0**
  %35 = load %0*, %0** %34, align 8
  %36 = getelementptr inbounds %0, %0* %35, i64 0, i32 13
  %37 = load %11*, %11** %36, align 8
  %38 = icmp eq %11* %37, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %11, %11* %37, i64 0, i32 0, i32 4
  %41 = load %0*, %0** %40, align 8
  %42 = getelementptr inbounds i8, i8* %15, i64 16
  %43 = bitcast i8* %42 to %0**
  %44 = load %0*, %0** %43, align 8
  %45 = icmp eq %0* %41, %44
  %46 = select i1 %45, i32 3, i32 2
  br label %47

47:                                               ; preds = %32, %26, %39
  %48 = phi i32 [ 2, %32 ], [ 2, %26 ], [ %46, %39 ]
  %49 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %48, i32* %49, align 8
  br label %50

50:                                               ; preds = %20, %7, %47, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_isDestructor(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 16384
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_getModifiers(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 5895
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_getDeclaringClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_method_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %44

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %44

33:                                               ; preds = %18
  %34 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %44, label %40

40:                                               ; preds = %33, %37
  %41 = getelementptr inbounds i8, i8* %22, i64 16
  %42 = bitcast i8* %41 to %0**
  %43 = load %0*, %0** %42, align 8
  tail call void @zend_reflection_class_factory(%0* %43, %4* %1)
  br label %44

44:                                               ; preds = %37, %27, %40, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_getPrototype(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_method_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %61

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %61, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %61

33:                                               ; preds = %18
  %34 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %61, label %40

40:                                               ; preds = %33, %37
  %41 = getelementptr inbounds i8, i8* %22, i64 24
  %42 = bitcast i8* %41 to %11**
  %43 = load %11*, %11** %42, align 8
  %44 = icmp eq %11* %43, null
  br i1 %44, label %45, label %58

45:                                               ; preds = %40
  %46 = load %0*, %0** @reflection_exception_ptr, align 8
  %47 = getelementptr inbounds %21, %21* %19, i64 -1, i32 5
  %48 = bitcast [1 x %4]* %47 to %0**
  %49 = load %0*, %0** %48, align 8
  %50 = getelementptr inbounds %0, %0* %49, i64 0, i32 1
  %51 = load %1*, %1** %50, align 8
  %52 = getelementptr inbounds %1, %1* %51, i64 0, i32 3, i64 0
  %53 = getelementptr inbounds i8, i8* %22, i64 8
  %54 = bitcast i8* %53 to %1**
  %55 = load %1*, %1** %54, align 8
  %56 = getelementptr inbounds %1, %1* %55, i64 0, i32 3, i64 0
  %57 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %46, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @45, i64 0, i64 0), i8* nonnull %52, i8* nonnull %56) #9
  br label %61

58:                                               ; preds = %40
  %59 = getelementptr inbounds %11, %11* %43, i64 0, i32 0, i32 4
  %60 = load %0*, %0** %59, align 8
  tail call fastcc void @429(%0* %60, %11* nonnull %43, %4* null, %4* %1)
  br label %61

61:                                               ; preds = %37, %27, %58, %45, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_method_setAccessible(%23* nocapture readonly %0, %4* nocapture readnone %1) #0 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i64 0, i64 0), i8* nonnull %3) #9
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %10 = bitcast %4* %9 to %21**
  %11 = load %21*, %21** %10, align 8
  %12 = load i8, i8* %3, align 1
  %13 = getelementptr inbounds %21, %21* %11, i64 -1, i32 5, i64 0, i32 2
  %14 = bitcast %7* %13 to i8*
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %12, 1
  %17 = and i8 %15, -2
  %18 = or i8 %17, %16
  store i8 %18, i8* %14, align 4
  br label %19

19:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4*, align 8
  %4 = alloca %4, align 8
  %5 = alloca %4, align 8
  %6 = alloca %1*, align 8
  %7 = alloca %4, align 8
  %8 = alloca %4, align 8
  %9 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = bitcast %1** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @47, i64 0, i64 0), %4** nonnull %3, %1** nonnull %6) #9
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %160, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %19 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %20 = bitcast %6* %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 8
  %23 = select i1 %22, %4* %18, %4* null
  %24 = bitcast %4* %23 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = load %4*, %4** %3, align 8
  %27 = getelementptr inbounds %4, %4* %26, i64 0, i32 1
  %28 = bitcast %6* %27 to i8*
  %29 = load i8, i8* %28, align 8
  switch i8 %29, label %47 [
    i8 6, label %30
    i8 8, label %42
  ]

30:                                               ; preds = %17
  %31 = bitcast %4* %26 to %1**
  %32 = load %1*, %1** %31, align 8
  %33 = call %0* @zend_lookup_class(%1* %32) #9
  %34 = icmp eq %0* %33, null
  br i1 %34, label %35, label %50

35:                                               ; preds = %30
  %36 = bitcast %4** %3 to %1***
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = load %1**, %1*** %36, align 8
  %39 = load %1*, %1** %38, align 8
  %40 = getelementptr inbounds %1, %1* %39, i64 0, i32 3, i64 0
  %41 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %37, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %40) #9
  br label %160

42:                                               ; preds = %17
  %43 = bitcast %4* %26 to %21**
  %44 = load %21*, %21** %43, align 8
  %45 = getelementptr inbounds %21, %21* %44, i64 0, i32 2
  %46 = load %0*, %0** %45, align 8
  br label %50

47:                                               ; preds = %17
  %48 = load %0*, %0** @reflection_exception_ptr, align 8
  %49 = call %21* @zend_throw_exception(%0* %48, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @41, i64 0, i64 0), i64 0) #9
  br label %160

50:                                               ; preds = %30, %42
  %51 = phi %0* [ %46, %42 ], [ %33, %30 ]
  %52 = getelementptr inbounds %0, %0* %51, i64 0, i32 12
  %53 = load %1*, %1** %6, align 8
  %54 = call %4* @zend_hash_find(%8* nonnull %52, %1* %53) #9
  %55 = icmp eq %4* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %50
  %57 = bitcast %4* %54 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %50, %56
  %61 = load %0*, %0** @reflection_exception_ptr, align 8
  %62 = getelementptr inbounds %0, %0* %51, i64 0, i32 1
  %63 = load %1*, %1** %62, align 8
  %64 = getelementptr inbounds %1, %1* %63, i64 0, i32 3, i64 0
  %65 = load %1*, %1** %6, align 8
  %66 = getelementptr inbounds %1, %1* %65, i64 0, i32 3, i64 0
  %67 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %61, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @48, i64 0, i64 0), i8* nonnull %64, i8* nonnull %66) #9
  br label %160

68:                                               ; preds = %56
  %69 = load %1*, %1** %6, align 8
  %70 = bitcast %4* %4 to %1**
  store %1* %69, %1** %70, align 8
  %71 = getelementptr inbounds %1, %1* %69, i64 0, i32 0, i32 1
  %72 = bitcast %3* %71 to %57*
  %73 = getelementptr inbounds %57, %57* %72, i64 0, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68
  %78 = getelementptr inbounds %1, %1* %69, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 8
  br label %81

81:                                               ; preds = %68, %77
  %82 = phi i32 [ 5126, %77 ], [ 6, %68 ]
  %83 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %0, %0* %51, i64 0, i32 1
  %85 = load %1*, %1** %84, align 8
  %86 = bitcast %4* %5 to %1**
  store %1* %85, %1** %86, align 8
  %87 = getelementptr inbounds %1, %1* %85, i64 0, i32 0, i32 1
  %88 = bitcast %3* %87 to %57*
  %89 = getelementptr inbounds %57, %57* %88, i64 0, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = and i8 %90, 2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %81
  %94 = getelementptr inbounds %1, %1* %85, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 8
  br label %97

97:                                               ; preds = %81, %93
  %98 = phi i32 [ 5126, %93 ], [ 6, %81 ]
  %99 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %21, %21* %25, i64 -1, i32 4
  %101 = bitcast %8** %100 to i8**
  store i8* %58, i8** %101, align 8
  %102 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 7, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %58, i64 24
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5, i64 0, i32 0, i32 0
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5, i64 0, i32 2
  %108 = bitcast %7* %107 to i8*
  %109 = load i8, i8* %108, align 4
  %110 = and i8 %109, -2
  store i8 %110, i8* %108, align 4
  %111 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #9
  %112 = call noalias i8* @_emalloc(i64 32) #10
  %113 = bitcast i8* %112 to i32*
  store i32 1, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 4
  %115 = bitcast i8* %114 to i32*
  store i32 6, i32* %115, align 4
  %116 = getelementptr inbounds i8, i8* %112, i64 8
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %117, align 8
  %118 = getelementptr inbounds i8, i8* %112, i64 24
  %119 = bitcast i8* %118 to i32*
  store i32 1701667182, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %112, i64 28
  store i8 0, i8* %120, align 1
  %121 = bitcast %4* %7 to i8**
  store i8* %112, i8** %121, align 8
  %122 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 5126, i32* %122, align 8
  call void @zend_std_write_property(%4* %23, %4* nonnull %7, %4* nonnull %4, i8** null) #9
  %123 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %124 = bitcast %6* %123 to %58*
  %125 = getelementptr inbounds %58, %58* %124, i64 0, i32 1
  %126 = load i8, i8* %125, align 1
  %127 = and i8 %126, 4
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %97
  %130 = bitcast %4* %4 to %59**
  %131 = load %59*, %59** %130, align 8
  %132 = getelementptr inbounds %59, %59* %131, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, -1
  store i32 %134, i32* %132, align 4
  br label %135

135:                                              ; preds = %97, %129
  call void @_zval_ptr_dtor(%4* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #9
  %136 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #9
  %137 = call noalias i8* @_emalloc(i64 32) #10
  %138 = bitcast i8* %137 to i32*
  store i32 1, i32* %138, align 8
  %139 = getelementptr inbounds i8, i8* %137, i64 4
  %140 = bitcast i8* %139 to i32*
  store i32 6, i32* %140, align 4
  %141 = getelementptr inbounds i8, i8* %137, i64 8
  %142 = bitcast i8* %141 to <2 x i64>*
  store <2 x i64> <i64 0, i64 5>, <2 x i64>* %142, align 8
  %143 = getelementptr inbounds i8, i8* %137, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %143, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i1 false) #9
  %144 = getelementptr inbounds i8, i8* %137, i64 29
  store i8 0, i8* %144, align 1
  %145 = bitcast %4* %8 to i8**
  store i8* %137, i8** %145, align 8
  %146 = getelementptr inbounds %4, %4* %8, i64 0, i32 1, i32 0
  store i32 5126, i32* %146, align 8
  call void @zend_std_write_property(%4* %23, %4* nonnull %8, %4* nonnull %5, i8** null) #9
  %147 = getelementptr inbounds %4, %4* %5, i64 0, i32 1
  %148 = bitcast %6* %147 to %58*
  %149 = getelementptr inbounds %58, %58* %148, i64 0, i32 1
  %150 = load i8, i8* %149, align 1
  %151 = and i8 %150, 4
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %135
  %154 = bitcast %4* %5 to %59**
  %155 = load %59*, %59** %154, align 8
  %156 = getelementptr inbounds %59, %59* %155, i64 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, -1
  store i32 %158, i32* %156, align 4
  br label %159

159:                                              ; preds = %135, %153
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #9
  br label %160

160:                                              ; preds = %2, %159, %60, %47, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant___toString(%23* %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = alloca %4, align 8
  %5 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false)
  %6 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %105, label %14

14:                                               ; preds = %2, %11
  %15 = bitcast %4* %7 to %21**
  %16 = load %21*, %21** %15, align 8
  %17 = getelementptr inbounds %21, %21* %16, i64 -1, i32 4
  %18 = bitcast %8** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %14
  %22 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %23 = icmp eq %21* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %21, %21* %22, i64 0, i32 2
  %26 = load %0*, %0** %25, align 8
  %27 = load %0*, %0** @reflection_exception_ptr, align 8
  %28 = icmp eq %0* %26, %27
  br i1 %28, label %105, label %29

29:                                               ; preds = %21, %24
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %105

30:                                               ; preds = %14
  %31 = bitcast i8* %19 to %70*
  %32 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %33 = bitcast %6* %32 to i8*
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 8
  %36 = select i1 %35, %4* %7, %4* null
  %37 = bitcast %4* %36 to %21**
  %38 = load %21*, %21** %37, align 8
  %39 = getelementptr inbounds %21, %21* %38, i64 0, i32 3
  %40 = load %22*, %22** %39, align 8
  %41 = getelementptr inbounds %22, %22* %40, i64 0, i32 15
  %42 = load %8* (%4*)*, %8* (%4*)** %41, align 8
  %43 = tail call %8* %42(%4* %36) #9
  %44 = tail call %4* @zend_hash_str_find(%8* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %45 = icmp eq %4* %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %4, %4* %44, i64 0, i32 1
  %48 = bitcast %6* %47 to i8*
  %49 = load i8, i8* %48, align 8
  %50 = icmp eq i8 %49, 15
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = bitcast %4* %44 to %4**
  %53 = load %4*, %4** %52, align 8
  %54 = getelementptr inbounds %4, %4* %53, i64 0, i32 1
  %55 = bitcast %6* %54 to i8*
  %56 = load i8, i8* %55, align 8
  %57 = icmp eq i8 %56, 0
  %58 = icmp eq %4* %53, null
  %59 = or i1 %58, %57
  br i1 %59, label %60, label %62

60:                                               ; preds = %51, %30
  %61 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 2, i32* %61, align 8
  br label %80

62:                                               ; preds = %51, %46
  %63 = phi %4* [ %44, %46 ], [ %53, %51 ]
  %64 = bitcast %4* %63 to %59**
  %65 = load %59*, %59** %64, align 8
  %66 = getelementptr inbounds %4, %4* %63, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = bitcast %4* %4 to %59**
  store %59* %65, %59** %68, align 8
  %69 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %67, i32* %69, align 8
  %70 = and i32 %67, 5120
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %62
  %73 = and i32 %67, 4096
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  call void @_zval_copy_ctor_func(%4* nonnull %4) #9
  br label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %59, %59* %65, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %77, align 4
  br label %80

80:                                               ; preds = %60, %62, %75, %76
  %81 = bitcast %4* %4 to %1**
  %82 = load %1*, %1** %81, align 8
  %83 = getelementptr inbounds %1, %1* %82, i64 0, i32 3, i64 0
  call fastcc void @433(%62* nonnull %3, i8* nonnull %83, %70* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0))
  call void @_zval_ptr_dtor(%4* nonnull %4) #9
  %84 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %85 = load %1*, %1** %84, align 8
  %86 = icmp eq %1* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %1, %1* %85, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %1, %1* %85, i64 0, i32 3, i64 %89
  store i8 0, i8* %90, align 1
  %91 = load %1*, %1** %84, align 8
  store %1* null, %1** %84, align 8
  br label %94

92:                                               ; preds = %80
  %93 = load %1*, %1** @zend_empty_string, align 8
  br label %94

94:                                               ; preds = %87, %92
  %95 = phi %1* [ %91, %87 ], [ %93, %92 ]
  %96 = bitcast %4* %1 to %1**
  store %1* %95, %1** %96, align 8
  %97 = getelementptr inbounds %1, %1* %95, i64 0, i32 0, i32 1
  %98 = bitcast %3* %97 to %57*
  %99 = getelementptr inbounds %57, %57* %98, i64 0, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 2
  %102 = icmp eq i8 %101, 0
  %103 = select i1 %102, i32 5126, i32 6
  %104 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %103, i32* %104, align 8
  br label %105

105:                                              ; preds = %24, %11, %94, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @433(%62* %0, i8* %1, %70* %2, i8* %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %70, %70* %2, i64 0, i32 0
  %6 = getelementptr inbounds %70, %70* %2, i64 0, i32 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i8* @zend_visibility_string(i32 %7) #9
  %9 = getelementptr inbounds %70, %70* %2, i64 0, i32 2
  %10 = load %0*, %0** %9, align 8
  %11 = tail call i32 @zval_update_constant_ex(%4* %5, %0* %10) #9
  %12 = tail call i8* @zend_zval_type_name(%4* %5) #9
  %13 = getelementptr inbounds %70, %70* %2, i64 0, i32 0, i32 1
  %14 = bitcast %6* %13 to i8*
  %15 = load i8, i8* %14, align 8
  switch i8 %15, label %30 [
    i8 7, label %16
    i8 6, label %17
  ]

16:                                               ; preds = %4
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @184, i64 0, i64 0), i8* %3, i8* %8, i8* %12, i8* %1) #9
  br label %53

17:                                               ; preds = %4
  %18 = bitcast %70* %2 to %1**
  %19 = load %1*, %1** %18, align 8
  %20 = getelementptr inbounds %1, %1* %19, i64 0, i32 0, i32 1
  %21 = bitcast %3* %20 to %57*
  %22 = getelementptr inbounds %57, %57* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %17
  %27 = getelementptr inbounds %1, %1* %19, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 8
  br label %35

30:                                               ; preds = %4
  %31 = tail call %1* @_zval_get_string_func(%4* nonnull %5) #9
  %32 = getelementptr inbounds %1, %1* %31, i64 0, i32 0, i32 1
  %33 = bitcast %3* %32 to %57*
  %34 = getelementptr inbounds %57, %57* %33, i64 0, i32 1
  br label %35

35:                                               ; preds = %17, %26, %30
  %36 = phi i8* [ %22, %17 ], [ %22, %26 ], [ %34, %30 ]
  %37 = phi %1* [ %19, %17 ], [ %19, %26 ], [ %31, %30 ]
  %38 = getelementptr inbounds %1, %1* %37, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @185, i64 0, i64 0), i8* %3, i8* %8, i8* %12, i8* %1, i8* nonnull %38) #9
  %39 = load i8, i8* %36, align 1
  %40 = and i8 %39, 2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %53

42:                                               ; preds = %35
  %43 = getelementptr inbounds %1, %1* %37, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -1
  store i32 %45, i32* %43, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = and i8 %39, 1
  %49 = icmp eq i8 %48, 0
  %50 = bitcast %1* %37 to i8*
  br i1 %49, label %52, label %51

51:                                               ; preds = %47
  tail call void @free(i8* %50) #9
  br label %53

52:                                               ; preds = %47
  tail call void @_efree(i8* %50) #9
  br label %53

53:                                               ; preds = %52, %51, %42, %35, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_getName(%23* %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %59

41:                                               ; preds = %30, %25
  %42 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %43 = bitcast %4* %42 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %4, %4* %42, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %4* %1 to %59**
  store %59* %44, %59** %47, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 5120
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %41
  %52 = and i32 %46, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %59, %59* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %55, %54, %41, %39, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_isPublic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 4352
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_isPrivate(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1024
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_isProtected(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 512
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_getModifiers(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %33, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %33

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %32, align 8
  br label %33

33:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_getValue(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %56, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %56, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %56

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %59**
  %28 = load %59*, %59** %27, align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 8
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = bitcast %4* %1 to %59**
  store %59* %28, %59** %32, align 8
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %34 = getelementptr inbounds %6, %6* %33, i64 0, i32 0
  store i32 %31, i32* %34, align 8
  %35 = and i32 %31, 5120
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26
  %38 = and i32 %31, 4096
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %59, %59* %28, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 4
  br label %45

45:                                               ; preds = %26, %40, %41
  %46 = bitcast %6* %33 to %58*
  %47 = getelementptr inbounds %58, %58* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %15, i64 24
  %53 = bitcast i8* %52 to %0**
  %54 = load %0*, %0** %53, align 8
  %55 = tail call i32 @zval_update_constant_ex(%4* nonnull %1, %0* %54) #9
  br label %56

56:                                               ; preds = %51, %45, %20, %7, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_getDeclaringClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %30, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %30

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 24
  %28 = bitcast i8* %27 to %0**
  %29 = load %0*, %0** %28, align 8
  tail call void @zend_reflection_class_factory(%0* %29, %4* %1)
  br label %30

30:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_getDocComment(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %48, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %48

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to %1**
  %29 = load %1*, %1** %28, align 8
  %30 = icmp eq %1* %29, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %26
  %32 = bitcast %4* %1 to %1**
  store %1* %29, %1** %32, align 8
  %33 = getelementptr inbounds %1, %1* %29, i64 0, i32 0, i32 1
  %34 = bitcast %3* %33 to %57*
  %35 = getelementptr inbounds %57, %57* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %40, align 8
  br label %48

41:                                               ; preds = %31
  %42 = getelementptr inbounds %1, %1* %29, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %45, align 8
  br label %48

46:                                               ; preds = %26
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %47, align 8
  br label %48

48:                                               ; preds = %39, %41, %20, %7, %46, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_class_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class___construct(%23* %0, %4* nocapture readnone %1) #0 {
  tail call fastcc void @434(%23* %0, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @434(%23* %0, i32 %1) unnamed_addr #0 {
  %3 = alloca %4*, align 8
  %4 = alloca %4, align 8
  %5 = alloca %4, align 8
  %6 = alloca %4, align 8
  %7 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = icmp ne i32 %1, 0
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %9, label %13, label %16

13:                                               ; preds = %2
  %14 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i64 0, i64 0), %4** nonnull %3) #9
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %164, label %19

16:                                               ; preds = %2
  %17 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @186, i64 0, i64 0), %4** nonnull %3) #9
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %164, label %19

19:                                               ; preds = %16, %13
  %20 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %21 = bitcast %6* %20 to i8*
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 8
  %24 = select i1 %23, %4* %10, %4* null
  %25 = bitcast %4* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = load %4*, %4** %3, align 8
  %28 = getelementptr inbounds %4, %4* %27, i64 0, i32 1
  %29 = bitcast %6* %28 to i8*
  %30 = load i8, i8* %29, align 8
  switch i8 %30, label %99 [
    i8 8, label %34
    i8 6, label %31
  ]

31:                                               ; preds = %19
  %32 = bitcast %4* %27 to %1**
  %33 = bitcast %4** %3 to %1***
  br label %102

34:                                               ; preds = %19
  %35 = bitcast %4* %27 to %21**
  %36 = bitcast %4** %3 to %21***
  %37 = load %21*, %21** %35, align 8
  %38 = getelementptr inbounds %21, %21* %37, i64 0, i32 2
  %39 = load %0*, %0** %38, align 8
  %40 = getelementptr inbounds %0, %0* %39, i64 0, i32 1
  %41 = load %1*, %1** %40, align 8
  %42 = bitcast %4* %4 to %1**
  store %1* %41, %1** %42, align 8
  %43 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 1
  %44 = bitcast %3* %43 to %57*
  %45 = getelementptr inbounds %57, %57* %44, i64 0, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %34
  %50 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 8
  br label %53

53:                                               ; preds = %34, %49
  %54 = phi i32 [ 5126, %49 ], [ 6, %34 ]
  %55 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %54, i32* %55, align 8
  %56 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  %57 = call noalias i8* @_emalloc(i64 32) #10
  %58 = bitcast i8* %57 to i32*
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i32*
  store i32 6, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %57, i64 8
  %62 = bitcast i8* %61 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i32*
  store i32 1701667182, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 28
  store i8 0, i8* %65, align 1
  %66 = bitcast %4* %5 to i8**
  store i8* %57, i8** %66, align 8
  %67 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 5126, i32* %67, align 8
  call void @zend_std_write_property(%4* %24, %4* nonnull %5, %4* nonnull %4, i8** null) #9
  %68 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %69 = bitcast %6* %68 to %58*
  %70 = getelementptr inbounds %58, %58* %69, i64 0, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, 4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %53
  %75 = bitcast %4* %4 to %59**
  %76 = load %59*, %59** %75, align 8
  %77 = getelementptr inbounds %59, %59* %76, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  store i32 %79, i32* %77, align 4
  br label %80

80:                                               ; preds = %53, %74
  call void @_zval_ptr_dtor(%4* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9
  %81 = load %21**, %21*** %36, align 8
  %82 = load %21*, %21** %81, align 8
  %83 = getelementptr inbounds %21, %21* %82, i64 0, i32 2
  %84 = bitcast %0** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %87 = bitcast %8** %86 to i64*
  store i64 %85, i64* %87, align 8
  br i1 %9, label %88, label %162

88:                                               ; preds = %80
  %89 = load %4*, %4** %3, align 8
  %90 = getelementptr inbounds %4, %4* %89, i64 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %4, %4* %89, i64 0, i32 1, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %21, %21* %26, i64 -1, i32 2
  %95 = bitcast %0** %94 to i64*
  store i64 %91, i64* %95, align 8
  %96 = getelementptr inbounds %21, %21* %26, i64 -1, i32 3
  %97 = bitcast %22** %96 to i32*
  store i32 %93, i32* %97, align 8
  %98 = load %4*, %4** %3, align 8
  call void @zval_add_ref(%4* %98) #9
  br label %162

99:                                               ; preds = %19
  call void @_convert_to_string(%4* %27) #9
  %100 = bitcast %4** %3 to %1***
  %101 = load %1**, %1*** %100, align 8
  br label %102

102:                                              ; preds = %31, %99
  %103 = phi %1*** [ %33, %31 ], [ %100, %99 ]
  %104 = phi %1** [ %32, %31 ], [ %101, %99 ]
  %105 = load %1*, %1** %104, align 8
  %106 = call %0* @zend_lookup_class(%1* %105) #9
  %107 = icmp eq %0* %106, null
  br i1 %107, label %108, label %117

108:                                              ; preds = %102
  %109 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %110 = icmp eq %21* %109, null
  br i1 %110, label %111, label %164

111:                                              ; preds = %108
  %112 = load %0*, %0** @reflection_exception_ptr, align 8
  %113 = load %1**, %1*** %103, align 8
  %114 = load %1*, %1** %113, align 8
  %115 = getelementptr inbounds %1, %1* %114, i64 0, i32 3, i64 0
  %116 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %112, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %115) #9
  br label %164

117:                                              ; preds = %102
  %118 = getelementptr inbounds %0, %0* %106, i64 0, i32 1
  %119 = load %1*, %1** %118, align 8
  %120 = bitcast %4* %4 to %1**
  store %1* %119, %1** %120, align 8
  %121 = getelementptr inbounds %1, %1* %119, i64 0, i32 0, i32 1
  %122 = bitcast %3* %121 to %57*
  %123 = getelementptr inbounds %57, %57* %122, i64 0, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = and i8 %124, 2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %117
  %128 = getelementptr inbounds %1, %1* %119, i64 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 8
  br label %131

131:                                              ; preds = %117, %127
  %132 = phi i32 [ 5126, %127 ], [ 6, %117 ]
  %133 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %132, i32* %133, align 8
  %134 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #9
  %135 = call noalias i8* @_emalloc(i64 32) #10
  %136 = bitcast i8* %135 to i32*
  store i32 1, i32* %136, align 8
  %137 = getelementptr inbounds i8, i8* %135, i64 4
  %138 = bitcast i8* %137 to i32*
  store i32 6, i32* %138, align 4
  %139 = getelementptr inbounds i8, i8* %135, i64 8
  %140 = bitcast i8* %139 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %140, align 8
  %141 = getelementptr inbounds i8, i8* %135, i64 24
  %142 = bitcast i8* %141 to i32*
  store i32 1701667182, i32* %142, align 8
  %143 = getelementptr inbounds i8, i8* %135, i64 28
  store i8 0, i8* %143, align 1
  %144 = bitcast %4* %6 to i8**
  store i8* %135, i8** %144, align 8
  %145 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 5126, i32* %145, align 8
  call void @zend_std_write_property(%4* %24, %4* nonnull %6, %4* nonnull %4, i8** null) #9
  %146 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %147 = bitcast %6* %146 to %58*
  %148 = getelementptr inbounds %58, %58* %147, i64 0, i32 1
  %149 = load i8, i8* %148, align 1
  %150 = and i8 %149, 4
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %131
  %153 = bitcast %4* %4 to %59**
  %154 = load %59*, %59** %153, align 8
  %155 = getelementptr inbounds %59, %59* %154, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = add i32 %156, -1
  store i32 %157, i32* %155, align 4
  br label %158

158:                                              ; preds = %131, %152
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #9
  %159 = getelementptr inbounds %0, %0* %106, i64 0, i32 0
  %160 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %161 = bitcast %8** %160 to i8**
  store i8* %159, i8** %161, align 8
  br label %162

162:                                              ; preds = %80, %88, %158
  %163 = getelementptr inbounds %21, %21* %26, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 0, i32* %163, align 8
  br label %164

164:                                              ; preds = %111, %108, %16, %13, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getStaticProperties(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %0*
  %28 = tail call i32 @zend_update_class_constants(%0* %27) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = tail call i32 @_array_init(%4* %1, i32 0) #9
  tail call fastcc void @435(%0* %27, i32 1, %4* %1)
  br label %32

32:                                               ; preds = %26, %20, %7, %30, %25
  ret void
}

declare dso_local i32 @zend_update_class_constants(%0*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @435(%0* %0, i32 %1, %4* nocapture readonly %2) unnamed_addr #0 {
  %4 = alloca %4, align 8
  %5 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %0, %0* %0, i64 0, i32 11, i32 3
  %7 = load %10*, %10** %6, align 8
  %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 11, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %10, %10* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %201, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %1, 0
  %15 = getelementptr inbounds %0, %0* %0, i64 0, i32 7
  %16 = getelementptr inbounds %0, %0* %0, i64 0, i32 8
  %17 = bitcast %4* %4 to %59**
  %18 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %19 = getelementptr inbounds %6, %6* %18, i64 0, i32 0
  %20 = bitcast %6* %18 to %58*
  %21 = getelementptr inbounds %58, %58* %20, i64 0, i32 1
  %22 = bitcast %4* %2 to %8**
  br i1 %14, label %23, label %113

23:                                               ; preds = %13, %110
  %24 = phi %10* [ %111, %110 ], [ %7, %13 ]
  %25 = getelementptr inbounds %10, %10* %24, i64 0, i32 0, i32 1
  %26 = bitcast %6* %25 to i8*
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %110, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %10, %10* %24, i64 0, i32 2
  %31 = load %1*, %1** %30, align 8
  %32 = bitcast %10* %24 to %71**
  %33 = load %71*, %71** %32, align 8
  %34 = getelementptr inbounds %71, %71* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 131072
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %71, %71* %33, i64 0, i32 4
  %40 = load %0*, %0** %39, align 8
  %41 = icmp eq %0* %40, %0
  br i1 %41, label %42, label %110

42:                                               ; preds = %38, %29
  %43 = and i32 %35, 512
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %71, %71* %33, i64 0, i32 4
  %47 = load %0*, %0** %46, align 8
  %48 = call i32 @zend_check_protected(%0* %47, %0* %0) #9
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %110, label %50

50:                                               ; preds = %45
  %51 = load i32, i32* %34, align 4
  br label %52

52:                                               ; preds = %50, %42
  %53 = phi i32 [ %51, %50 ], [ %35, %42 ]
  %54 = and i32 %53, 1024
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %71, %71* %33, i64 0, i32 4
  %58 = load %0*, %0** %57, align 8
  %59 = icmp eq %0* %58, %0
  %60 = and i32 %53, 1
  %61 = icmp eq i32 %60, 0
  %62 = and i1 %59, %61
  br i1 %62, label %66, label %110

63:                                               ; preds = %52
  %64 = and i32 %53, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %110

66:                                               ; preds = %56, %63
  %67 = load %4*, %4** %15, align 8
  %68 = getelementptr inbounds %71, %71* %33, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, -40
  %71 = lshr i32 %70, 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %4, %4* %67, i64 %72
  %74 = icmp eq %4* %73, null
  br i1 %74, label %110, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %4, %4* %67, i64 %72, i32 1
  %77 = bitcast %6* %76 to i8*
  %78 = load i8, i8* %77, align 8
  %79 = icmp eq i8 %78, 10
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = bitcast %4* %73 to %63**
  %82 = load %63*, %63** %81, align 8
  %83 = getelementptr inbounds %63, %63* %82, i64 0, i32 1
  br label %84

84:                                               ; preds = %80, %75
  %85 = phi %4* [ %83, %80 ], [ %73, %75 ]
  %86 = bitcast %4* %85 to %59**
  %87 = load %59*, %59** %86, align 8
  %88 = getelementptr inbounds %4, %4* %85, i64 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 8
  store %59* %87, %59** %17, align 8
  store i32 %89, i32* %19, align 8
  %90 = and i32 %89, 5120
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %84
  %93 = and i32 %89, 4096
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  call void @_zval_copy_ctor_func(%4* nonnull %4) #9
  br label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %59, %59* %87, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %97, align 4
  br label %100

100:                                              ; preds = %96, %95, %84
  %101 = load i8, i8* %21, align 1
  %102 = and i8 %101, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = call i32 @zval_update_constant_ex(%4* nonnull %4, %0* null) #9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %201

107:                                              ; preds = %104, %100
  %108 = load %8*, %8** %22, align 8
  %109 = call %4* @_zend_hash_update(%8* %108, %1* %31, %4* nonnull %4) #9
  br label %110

110:                                              ; preds = %107, %66, %63, %56, %45, %38, %23
  %111 = getelementptr inbounds %10, %10* %24, i64 1
  %112 = icmp eq %10* %111, %11
  br i1 %112, label %201, label %23

113:                                              ; preds = %13, %198
  %114 = phi %10* [ %199, %198 ], [ %7, %13 ]
  %115 = getelementptr inbounds %10, %10* %114, i64 0, i32 0, i32 1
  %116 = bitcast %6* %115 to i8*
  %117 = load i8, i8* %116, align 8
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %198, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %10, %10* %114, i64 0, i32 2
  %121 = load %1*, %1** %120, align 8
  %122 = bitcast %10* %114 to %71**
  %123 = load %71*, %71** %122, align 8
  %124 = getelementptr inbounds %71, %71* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 131072
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %71, %71* %123, i64 0, i32 4
  %130 = load %0*, %0** %129, align 8
  %131 = icmp eq %0* %130, %0
  br i1 %131, label %132, label %198

132:                                              ; preds = %128, %119
  %133 = and i32 %125, 512
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %142, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %71, %71* %123, i64 0, i32 4
  %137 = load %0*, %0** %136, align 8
  %138 = call i32 @zend_check_protected(%0* %137, %0* %0) #9
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %198, label %140

140:                                              ; preds = %135
  %141 = load i32, i32* %124, align 4
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i32 [ %141, %140 ], [ %125, %132 ]
  %144 = and i32 %143, 1024
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %71, %71* %123, i64 0, i32 4
  %148 = load %0*, %0** %147, align 8
  %149 = icmp ne %0* %148, %0
  %150 = and i32 %143, 1
  %151 = icmp eq i32 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %198, label %156

153:                                              ; preds = %142
  %154 = and i32 %143, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %198, label %156

156:                                              ; preds = %146, %153
  %157 = load %4*, %4** %16, align 8
  %158 = getelementptr inbounds %71, %71* %123, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %4, %4* %157, i64 %160
  %162 = icmp eq %4* %161, null
  br i1 %162, label %198, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %4, %4* %157, i64 %160, i32 1
  %165 = bitcast %6* %164 to i8*
  %166 = load i8, i8* %165, align 8
  %167 = icmp eq i8 %166, 10
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = bitcast %4* %161 to %63**
  %170 = load %63*, %63** %169, align 8
  %171 = getelementptr inbounds %63, %63* %170, i64 0, i32 1
  br label %172

172:                                              ; preds = %163, %168
  %173 = phi %4* [ %171, %168 ], [ %161, %163 ]
  %174 = bitcast %4* %173 to %59**
  %175 = load %59*, %59** %174, align 8
  %176 = getelementptr inbounds %4, %4* %173, i64 0, i32 1, i32 0
  %177 = load i32, i32* %176, align 8
  store %59* %175, %59** %17, align 8
  store i32 %177, i32* %19, align 8
  %178 = and i32 %177, 5120
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %172
  %181 = and i32 %177, 4096
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %180
  call void @_zval_copy_ctor_func(%4* nonnull %4) #9
  br label %188

184:                                              ; preds = %180
  %185 = getelementptr inbounds %59, %59* %175, i64 0, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = add i32 %186, 1
  store i32 %187, i32* %185, align 4
  br label %188

188:                                              ; preds = %172, %183, %184
  %189 = load i8, i8* %21, align 1
  %190 = and i8 %189, 1
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %188
  %193 = call i32 @zval_update_constant_ex(%4* nonnull %4, %0* null) #9
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %201

195:                                              ; preds = %192, %188
  %196 = load %8*, %8** %22, align 8
  %197 = call %4* @_zend_hash_update(%8* %196, %1* %121, %4* nonnull %4) #9
  br label %198

198:                                              ; preds = %146, %153, %195, %113, %128, %135, %156
  %199 = getelementptr inbounds %10, %10* %114, i64 1
  %200 = icmp eq %10* %199, %11
  br i1 %200, label %201, label %113

201:                                              ; preds = %198, %192, %110, %104, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getStaticPropertyValue(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %4*, align 8
  %5 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store %4* null, %4** %4, align 8
  %7 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @49, i64 0, i64 0), %1** nonnull %3, %4** nonnull %4) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %84, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %13 = bitcast %4* %12 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %11
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %84, label %27

27:                                               ; preds = %19, %22
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %84

28:                                               ; preds = %11
  %29 = bitcast i8* %17 to %0*
  %30 = call i32 @zend_update_class_constants(%0* %29) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %84

32:                                               ; preds = %28
  %33 = load %1*, %1** %3, align 8
  %34 = call %4* @zend_std_get_static_property(%0* %29, %1* %33, i8 zeroext 1) #9
  %35 = icmp eq %4* %34, null
  br i1 %35, label %36, label %61

36:                                               ; preds = %32
  %37 = load %4*, %4** %4, align 8
  %38 = icmp eq %4* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = bitcast %4* %37 to %59**
  %41 = load %59*, %59** %40, align 8
  %42 = getelementptr inbounds %4, %4* %37, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = bitcast %4* %1 to %59**
  store %59* %41, %59** %44, align 8
  %45 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %43, i32* %45, align 8
  %46 = and i32 %43, 1024
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %84, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %59, %59* %41, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 4
  br label %84

52:                                               ; preds = %36
  %53 = load %0*, %0** @reflection_exception_ptr, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 8
  %55 = bitcast i8* %54 to %1**
  %56 = load %1*, %1** %55, align 8
  %57 = getelementptr inbounds %1, %1* %56, i64 0, i32 3, i64 0
  %58 = load %1*, %1** %3, align 8
  %59 = getelementptr inbounds %1, %1* %58, i64 0, i32 3, i64 0
  %60 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %53, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @50, i64 0, i64 0), i8* nonnull %57, i8* nonnull %59) #9
  br label %84

61:                                               ; preds = %32
  %62 = getelementptr inbounds %4, %4* %34, i64 0, i32 1
  %63 = bitcast %6* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 10
  br i1 %65, label %66, label %70

66:                                               ; preds = %61
  %67 = bitcast %4* %34 to %63**
  %68 = load %63*, %63** %67, align 8
  %69 = getelementptr inbounds %63, %63* %68, i64 0, i32 1
  br label %70

70:                                               ; preds = %61, %66
  %71 = phi %4* [ %69, %66 ], [ %34, %61 ]
  %72 = bitcast %4* %71 to %59**
  %73 = load %59*, %59** %72, align 8
  %74 = getelementptr inbounds %4, %4* %71, i64 0, i32 1, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = bitcast %4* %1 to %59**
  store %59* %73, %59** %76, align 8
  %77 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %75, i32* %77, align 8
  %78 = and i32 %75, 1024
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %70
  %81 = getelementptr inbounds %59, %59* %73, i64 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  br label %84

84:                                               ; preds = %80, %70, %52, %39, %48, %28, %22, %2, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare dso_local %4* @zend_std_get_static_property(%0*, %1*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_setStaticPropertyValue(%23* nocapture readonly %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %4*, align 8
  %5 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @51, i64 0, i64 0), %1** nonnull %3, %4** nonnull %4) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %69, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %13 = bitcast %4* %12 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %11
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %69, label %27

27:                                               ; preds = %19, %22
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %69

28:                                               ; preds = %11
  %29 = bitcast i8* %17 to %0*
  %30 = call i32 @zend_update_class_constants(%0* %29) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %69

32:                                               ; preds = %28
  %33 = load %1*, %1** %3, align 8
  %34 = call %4* @zend_std_get_static_property(%0* %29, %1* %33, i8 zeroext 1) #9
  %35 = icmp eq %4* %34, null
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = getelementptr inbounds i8, i8* %17, i64 8
  %39 = bitcast i8* %38 to %1**
  %40 = load %1*, %1** %39, align 8
  %41 = getelementptr inbounds %1, %1* %40, i64 0, i32 3, i64 0
  %42 = load %1*, %1** %3, align 8
  %43 = getelementptr inbounds %1, %1* %42, i64 0, i32 3, i64 0
  %44 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %37, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @50, i64 0, i64 0), i8* nonnull %41, i8* nonnull %43) #9
  br label %69

45:                                               ; preds = %32
  %46 = getelementptr inbounds %4, %4* %34, i64 0, i32 1
  %47 = bitcast %6* %46 to i8*
  %48 = load i8, i8* %47, align 8
  %49 = icmp eq i8 %48, 10
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = bitcast %4* %34 to %63**
  %52 = load %63*, %63** %51, align 8
  %53 = getelementptr inbounds %63, %63* %52, i64 0, i32 1
  br label %54

54:                                               ; preds = %50, %45
  %55 = phi %4* [ %53, %50 ], [ %34, %45 ]
  call void @_zval_ptr_dtor(%4* nonnull %55) #9
  %56 = load %4*, %4** %4, align 8
  %57 = bitcast %4* %56 to %59**
  %58 = load %59*, %59** %57, align 8
  %59 = getelementptr inbounds %4, %4* %56, i64 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = bitcast %4* %55 to %59**
  store %59* %58, %59** %61, align 8
  %62 = getelementptr inbounds %4, %4* %55, i64 0, i32 1, i32 0
  store i32 %60, i32* %62, align 8
  %63 = and i32 %60, 1024
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %59, %59* %58, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 4
  br label %69

69:                                               ; preds = %65, %54, %28, %22, %2, %36, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getDefaultProperties(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %0*
  %28 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %29 = tail call i32 @zend_update_class_constants(%0* %27) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call fastcc void @435(%0* %27, i32 1, %4* %1)
  tail call fastcc void @435(%0* %27, i32 0, %4* %1)
  br label %32

32:                                               ; preds = %26, %20, %7, %31, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %53, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %53, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %53

28:                                               ; preds = %12
  %29 = bitcast i8* %17 to %0*
  %30 = getelementptr inbounds %21, %21* %14, i64 -1, i32 2
  %31 = bitcast %0** %30 to %4*
  call fastcc void @436(%62* nonnull %3, %0* %29, %4* nonnull %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0))
  %32 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %33 = load %1*, %1** %32, align 8
  %34 = icmp eq %1* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %1, %1* %33, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %1, %1* %33, i64 0, i32 3, i64 %37
  store i8 0, i8* %38, align 1
  %39 = load %1*, %1** %32, align 8
  store %1* null, %1** %32, align 8
  br label %42

40:                                               ; preds = %28
  %41 = load %1*, %1** @zend_empty_string, align 8
  br label %42

42:                                               ; preds = %35, %40
  %43 = phi %1* [ %39, %35 ], [ %41, %40 ]
  %44 = bitcast %4* %1 to %1**
  store %1* %43, %1** %44, align 8
  %45 = getelementptr inbounds %1, %1* %43, i64 0, i32 0, i32 1
  %46 = bitcast %3* %45 to %57*
  %47 = getelementptr inbounds %57, %57* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  %51 = select i1 %50, i32 5126, i32 6
  %52 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %22, %9, %42, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @436(%62* %0, %0* %1, %4* %2, i8* %3) unnamed_addr #0 {
  %5 = alloca %62, align 8
  %6 = alloca %62, align 8
  %7 = tail call %1* (i64, i8*, ...) @zend_strpprintf(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @187, i64 0, i64 0), i8* %3) #9
  %8 = getelementptr inbounds %0, %0* %1, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 2
  br i1 %10, label %11, label %37

11:                                               ; preds = %4
  %12 = getelementptr inbounds %0, %0* %1, i64 0, i32 39, i32 0, i32 3
  %13 = load %1*, %1** %12, align 8
  %14 = icmp eq %1* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %1, %1* %13, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @188, i64 0, i64 0), i8* %3, i8* nonnull %16) #9
  %17 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %18 = load %1*, %1** %17, align 8
  %19 = icmp eq %1* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %1, %1* %18, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  %24 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %20, %15
  %28 = phi i64 [ 1, %15 ], [ %23, %20 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %28) #9
  %29 = load %1*, %1** %17, align 8
  br label %30

30:                                               ; preds = %20, %27
  %31 = phi %1* [ %29, %27 ], [ %18, %20 ]
  %32 = phi i64 [ %28, %27 ], [ %23, %20 ]
  %33 = add i64 %32, -1
  %34 = getelementptr inbounds %1, %1* %31, i64 0, i32 3, i64 %33
  store i8 10, i8* %34, align 1
  %35 = load %1*, %1** %17, align 8
  %36 = getelementptr inbounds %1, %1* %35, i64 0, i32 2
  store i64 %32, i64* %36, align 8
  br label %37

37:                                               ; preds = %11, %30, %4
  %38 = icmp ne %4* %2, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = getelementptr inbounds %4, %4* %2, i64 0, i32 1
  %41 = bitcast %6* %40 to i8*
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 8
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @189, i64 0, i64 0), i8* %3) #9
  br label %54

45:                                               ; preds = %39, %37
  %46 = getelementptr inbounds %0, %0* %1, i64 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 64
  %49 = icmp eq i32 %48, 0
  %50 = trunc i32 %47 to i8
  %51 = icmp slt i8 %50, 0
  %52 = select i1 %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @192, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @190, i64 0, i64 0)
  %53 = select i1 %49, i8* %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @191, i64 0, i64 0)
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @193, i64 0, i64 0), i8* %3, i8* %53) #9
  br label %54

54:                                               ; preds = %45, %44
  %55 = load i8, i8* %8, align 8
  %56 = icmp eq i8 %55, 2
  %57 = select i1 %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @138, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @139, i64 0, i64 0)
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* %57) #9
  %58 = load i8, i8* %8, align 8
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %60, label %68

60:                                               ; preds = %54
  %61 = getelementptr inbounds %0, %0* %1, i64 0, i32 39, i32 0, i32 1
  %62 = bitcast i32* %61 to %39**
  %63 = load %39*, %39** %62, align 8
  %64 = icmp eq %39* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %39, %39* %63, i64 0, i32 6
  %67 = load i8*, i8** %66, align 8
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @141, i64 0, i64 0), i8* %67) #9
  br label %68

68:                                               ; preds = %60, %65, %54
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @147, i64 0, i64 0)) #9
  %69 = getelementptr inbounds %0, %0* %1, i64 0, i32 28
  %70 = load %20* (%0*, %4*, i32)*, %20* (%0*, %4*, i32)** %69, align 8
  %71 = icmp eq %20* (%0*, %4*, i32)* %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @194, i64 0, i64 0)) #9
  br label %73

73:                                               ; preds = %68, %72
  %74 = getelementptr inbounds %0, %0* %1, i64 0, i32 4
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 64
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @195, i64 0, i64 0)) #9
  br label %94

79:                                               ; preds = %73
  %80 = trunc i32 %75 to i8
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @196, i64 0, i64 0)) #9
  br label %94

83:                                               ; preds = %79
  %84 = and i32 %75, 48
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @148, i64 0, i64 0)) #9
  %87 = load i32, i32* %74, align 4
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i32 [ %75, %83 ], [ %87, %86 ]
  %90 = and i32 %89, 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @149, i64 0, i64 0)) #9
  br label %93

93:                                               ; preds = %88, %92
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @197, i64 0, i64 0)) #9
  br label %94

94:                                               ; preds = %82, %93, %78
  %95 = getelementptr inbounds %0, %0* %1, i64 0, i32 1
  %96 = load %1*, %1** %95, align 8
  %97 = getelementptr inbounds %1, %1* %96, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @198, i64 0, i64 0), i8* nonnull %97) #9
  %98 = getelementptr inbounds %0, %0* %1, i64 0, i32 2
  %99 = load %0*, %0** %98, align 8
  %100 = icmp eq %0* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %0, %0* %99, i64 0, i32 1
  %103 = load %1*, %1** %102, align 8
  %104 = getelementptr inbounds %1, %1* %103, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @199, i64 0, i64 0), i8* nonnull %104) #9
  br label %105

105:                                              ; preds = %94, %101
  %106 = getelementptr inbounds %0, %0* %1, i64 0, i32 33
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %136, label %109

109:                                              ; preds = %105
  %110 = load i32, i32* %74, align 4
  %111 = and i32 %110, 64
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %0, %0* %1, i64 0, i32 35
  %114 = load %0**, %0*** %113, align 8
  %115 = load %0*, %0** %114, align 8
  %116 = getelementptr inbounds %0, %0* %115, i64 0, i32 1
  %117 = load %1*, %1** %116, align 8
  %118 = getelementptr inbounds %1, %1* %117, i64 0, i32 3, i64 0
  br i1 %112, label %120, label %119

119:                                              ; preds = %109
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @199, i64 0, i64 0), i8* nonnull %118) #9
  br label %121

120:                                              ; preds = %109
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @200, i64 0, i64 0), i8* nonnull %118) #9
  br label %121

121:                                              ; preds = %120, %119
  %122 = load i32, i32* %106, align 8
  %123 = icmp ugt i32 %122, 1
  br i1 %123, label %124, label %136

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %132, %124 ], [ 1, %121 ]
  %126 = load %0**, %0*** %113, align 8
  %127 = getelementptr inbounds %0*, %0** %126, i64 %125
  %128 = load %0*, %0** %127, align 8
  %129 = getelementptr inbounds %0, %0* %128, i64 0, i32 1
  %130 = load %1*, %1** %129, align 8
  %131 = getelementptr inbounds %1, %1* %130, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @201, i64 0, i64 0), i8* nonnull %131) #9
  %132 = add nuw nsw i64 %125, 1
  %133 = load i32, i32* %106, align 8
  %134 = zext i32 %133 to i64
  %135 = icmp ult i64 %132, %134
  br i1 %135, label %124, label %136

136:                                              ; preds = %124, %121, %105
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @202, i64 0, i64 0)) #9
  %137 = load i8, i8* %8, align 8
  %138 = icmp eq i8 %137, 2
  br i1 %138, label %139, label %147

139:                                              ; preds = %136
  %140 = getelementptr inbounds %0, %0* %1, i64 0, i32 39, i32 0, i32 0
  %141 = load %1*, %1** %140, align 8
  %142 = getelementptr inbounds %1, %1* %141, i64 0, i32 3, i64 0
  %143 = getelementptr inbounds %0, %0* %1, i64 0, i32 39, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %0, %0* %1, i64 0, i32 39, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @203, i64 0, i64 0), i8* %3, i8* nonnull %142, i32 %144, i32 %146) #9
  br label %147

147:                                              ; preds = %139, %136
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  %148 = getelementptr inbounds %0, %0* %1, i64 0, i32 12, i32 5
  %149 = load i32, i32* %148, align 4
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @204, i64 0, i64 0), i8* %3, i32 %149) #9
  %150 = icmp sgt i32 %149, 0
  br i1 %150, label %151, label %178

151:                                              ; preds = %147
  %152 = getelementptr inbounds %0, %0* %1, i64 0, i32 12, i32 3
  %153 = load %10*, %10** %152, align 8
  %154 = getelementptr inbounds %0, %0* %1, i64 0, i32 12, i32 4
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %10, %10* %153, i64 %156
  %158 = icmp eq i32 %155, 0
  br i1 %158, label %178, label %159

159:                                              ; preds = %151
  %160 = getelementptr inbounds %1, %1* %7, i64 0, i32 3, i64 0
  br label %161

161:                                              ; preds = %159, %175
  %162 = phi %10* [ %153, %159 ], [ %176, %175 ]
  %163 = getelementptr inbounds %10, %10* %162, i64 0, i32 0, i32 1
  %164 = bitcast %6* %163 to i8*
  %165 = load i8, i8* %164, align 8
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %175, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %10, %10* %162, i64 0, i32 2
  %169 = load %1*, %1** %168, align 8
  %170 = bitcast %10* %162 to %70**
  %171 = load %70*, %70** %170, align 8
  %172 = getelementptr inbounds %1, %1* %169, i64 0, i32 3, i64 0
  tail call fastcc void @433(%62* %0, i8* nonnull %172, %70* %171, i8* nonnull %160)
  %173 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %174 = icmp eq %21* %173, null
  br i1 %174, label %175, label %744

175:                                              ; preds = %167, %161
  %176 = getelementptr inbounds %10, %10* %162, i64 1
  %177 = icmp eq %10* %176, %157
  br i1 %177, label %178, label %161

178:                                              ; preds = %175, %151, %147
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* %3) #9
  %179 = getelementptr inbounds %0, %0* %1, i64 0, i32 11
  %180 = getelementptr inbounds %0, %0* %1, i64 0, i32 11, i32 5
  %181 = load i32, i32* %180, align 4
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %178
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @206, i64 0, i64 0), i8* %3, i32 0) #9
  br label %282

184:                                              ; preds = %178
  %185 = getelementptr inbounds %0, %0* %1, i64 0, i32 11, i32 3
  %186 = load %10*, %10** %185, align 8
  %187 = getelementptr inbounds %0, %0* %1, i64 0, i32 11, i32 4
  %188 = load i32, i32* %187, align 8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %200, label %190

190:                                              ; preds = %184
  %191 = zext i32 %188 to i64
  %192 = shl nuw nsw i64 %191, 5
  %193 = add nsw i64 %192, -32
  %194 = lshr exact i64 %193, 5
  %195 = add nuw nsw i64 %194, 1
  %196 = and i64 %195, 1
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %229, label %198

198:                                              ; preds = %190
  %199 = sub nsw i64 %195, %196
  br label %201

200:                                              ; preds = %184
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @206, i64 0, i64 0), i8* %3, i32 0) #9
  br label %282

201:                                              ; preds = %758, %198
  %202 = phi i32 [ 0, %198 ], [ %760, %758 ]
  %203 = phi i32 [ 0, %198 ], [ %759, %758 ]
  %204 = phi %10* [ %186, %198 ], [ %761, %758 ]
  %205 = phi i64 [ %199, %198 ], [ %762, %758 ]
  %206 = getelementptr inbounds %10, %10* %204, i64 0, i32 0, i32 1
  %207 = bitcast %6* %206 to i8*
  %208 = load i8, i8* %207, align 8
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %201
  %211 = bitcast %10* %204 to %71**
  %212 = load %71*, %71** %211, align 8
  %213 = getelementptr inbounds %71, %71* %212, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = and i32 %214, 131072
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %210
  %218 = add nsw i32 %203, 1
  br label %222

219:                                              ; preds = %210
  %220 = and i32 %214, 1
  %221 = add nsw i32 %220, %202
  br label %222

222:                                              ; preds = %219, %217, %201
  %223 = phi i32 [ %203, %201 ], [ %218, %217 ], [ %203, %219 ]
  %224 = phi i32 [ %202, %201 ], [ %202, %217 ], [ %221, %219 ]
  %225 = getelementptr inbounds %10, %10* %204, i64 1, i32 0, i32 1
  %226 = bitcast %6* %225 to i8*
  %227 = load i8, i8* %226, align 8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %758, label %745

229:                                              ; preds = %758, %190
  %230 = phi i32 [ undef, %190 ], [ %759, %758 ]
  %231 = phi i32 [ undef, %190 ], [ %760, %758 ]
  %232 = phi i32 [ 0, %190 ], [ %760, %758 ]
  %233 = phi i32 [ 0, %190 ], [ %759, %758 ]
  %234 = phi %10* [ %186, %190 ], [ %761, %758 ]
  %235 = icmp eq i64 %196, 0
  br i1 %235, label %253, label %236

236:                                              ; preds = %229
  %237 = getelementptr inbounds %10, %10* %234, i64 0, i32 0, i32 1
  %238 = bitcast %6* %237 to i8*
  %239 = load i8, i8* %238, align 8
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %253, label %241

241:                                              ; preds = %236
  %242 = bitcast %10* %234 to %71**
  %243 = load %71*, %71** %242, align 8
  %244 = getelementptr inbounds %71, %71* %243, i64 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = and i32 %245, 131072
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %250, label %248

248:                                              ; preds = %241
  %249 = add nsw i32 %233, 1
  br label %253

250:                                              ; preds = %241
  %251 = and i32 %245, 1
  %252 = add nsw i32 %251, %232
  br label %253

253:                                              ; preds = %250, %248, %236, %229
  %254 = phi i32 [ %230, %229 ], [ %233, %236 ], [ %249, %248 ], [ %233, %250 ]
  %255 = phi i32 [ %231, %229 ], [ %232, %236 ], [ %232, %248 ], [ %252, %250 ]
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @206, i64 0, i64 0), i8* %3, i32 %255) #9
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %257, label %282

257:                                              ; preds = %253
  %258 = load %10*, %10** %185, align 8
  %259 = load i32, i32* %187, align 8
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds %10, %10* %258, i64 %260
  %262 = icmp eq i32 %259, 0
  br i1 %262, label %282, label %263

263:                                              ; preds = %257
  %264 = getelementptr inbounds %1, %1* %7, i64 0, i32 3, i64 0
  br label %265

265:                                              ; preds = %263, %279
  %266 = phi %10* [ %258, %263 ], [ %280, %279 ]
  %267 = getelementptr inbounds %10, %10* %266, i64 0, i32 0, i32 1
  %268 = bitcast %6* %267 to i8*
  %269 = load i8, i8* %268, align 8
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %279, label %271

271:                                              ; preds = %265
  %272 = bitcast %10* %266 to %71**
  %273 = load %71*, %71** %272, align 8
  %274 = getelementptr inbounds %71, %71* %273, i64 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 131073
  %277 = icmp eq i32 %276, 1
  br i1 %277, label %278, label %279

278:                                              ; preds = %271
  tail call fastcc void @442(%62* %0, %71* %273, i8* null, i8* nonnull %264)
  br label %279

279:                                              ; preds = %278, %271, %265
  %280 = getelementptr inbounds %10, %10* %266, i64 1
  %281 = icmp eq %10* %280, %261
  br i1 %281, label %282, label %265

282:                                              ; preds = %279, %200, %257, %183, %253
  %283 = phi i32 [ 0, %183 ], [ %255, %253 ], [ %255, %257 ], [ 0, %200 ], [ %255, %279 ]
  %284 = phi i32 [ 0, %183 ], [ %254, %253 ], [ %254, %257 ], [ 0, %200 ], [ %254, %279 ]
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* %3) #9
  %285 = getelementptr inbounds %0, %0* %1, i64 0, i32 10, i32 5
  %286 = load i32, i32* %285, align 4
  %287 = icmp sgt i32 %286, 0
  br i1 %287, label %289, label %288

288:                                              ; preds = %282
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @207, i64 0, i64 0), i8* %3, i32 0) #9
  br label %359

289:                                              ; preds = %282
  %290 = getelementptr inbounds %0, %0* %1, i64 0, i32 10, i32 3
  %291 = load %10*, %10** %290, align 8
  %292 = getelementptr inbounds %0, %0* %1, i64 0, i32 10, i32 4
  %293 = load i32, i32* %292, align 8
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds %10, %10* %291, i64 %294
  %296 = icmp eq i32 %293, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %289
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @207, i64 0, i64 0), i8* %3, i32 0) #9
  br label %359

298:                                              ; preds = %289, %321
  %299 = phi i32 [ %322, %321 ], [ 0, %289 ]
  %300 = phi %10* [ %323, %321 ], [ %291, %289 ]
  %301 = getelementptr inbounds %10, %10* %300, i64 0, i32 0, i32 1
  %302 = bitcast %6* %301 to i8*
  %303 = load i8, i8* %302, align 8
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %298
  %306 = bitcast %10* %300 to %69**
  %307 = load %69*, %69** %306, align 8
  %308 = getelementptr inbounds %69, %69* %307, i64 0, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %321, label %312

312:                                              ; preds = %305
  %313 = and i32 %309, 1024
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %319, label %315

315:                                              ; preds = %312
  %316 = getelementptr inbounds %69, %69* %307, i64 0, i32 4
  %317 = load %0*, %0** %316, align 8
  %318 = icmp eq %0* %317, %1
  br i1 %318, label %319, label %321

319:                                              ; preds = %315, %312
  %320 = add nsw i32 %299, 1
  br label %321

321:                                              ; preds = %315, %319, %305, %298
  %322 = phi i32 [ %299, %298 ], [ %320, %319 ], [ %299, %315 ], [ %299, %305 ]
  %323 = getelementptr inbounds %10, %10* %300, i64 1
  %324 = icmp eq %10* %323, %295
  br i1 %324, label %325, label %298

325:                                              ; preds = %321
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @207, i64 0, i64 0), i8* %3, i32 %322) #9
  %326 = icmp sgt i32 %322, 0
  br i1 %326, label %327, label %359

327:                                              ; preds = %325
  %328 = load %10*, %10** %290, align 8
  %329 = load i32, i32* %292, align 8
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds %10, %10* %328, i64 %330
  %332 = icmp eq i32 %329, 0
  br i1 %332, label %361, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %1, %1* %7, i64 0, i32 3, i64 0
  br label %335

335:                                              ; preds = %333, %356
  %336 = phi %10* [ %328, %333 ], [ %357, %356 ]
  %337 = getelementptr inbounds %10, %10* %336, i64 0, i32 0, i32 1
  %338 = bitcast %6* %337 to i8*
  %339 = load i8, i8* %338, align 8
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %356, label %341

341:                                              ; preds = %335
  %342 = bitcast %10* %336 to %11**
  %343 = load %11*, %11** %342, align 8
  %344 = getelementptr inbounds %11, %11* %343, i64 0, i32 0, i32 2
  %345 = load i32, i32* %344, align 4
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %356, label %348

348:                                              ; preds = %341
  %349 = and i32 %345, 1024
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %355, label %351

351:                                              ; preds = %348
  %352 = getelementptr inbounds %11, %11* %343, i64 0, i32 0, i32 4
  %353 = load %0*, %0** %352, align 8
  %354 = icmp eq %0* %353, %1
  br i1 %354, label %355, label %356

355:                                              ; preds = %351, %348
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  tail call fastcc void @426(%62* %0, %11* %343, %0* %1, i8* nonnull %334)
  br label %356

356:                                              ; preds = %351, %355, %341, %335
  %357 = getelementptr inbounds %10, %10* %336, i64 1
  %358 = icmp eq %10* %357, %331
  br i1 %358, label %361, label %335

359:                                              ; preds = %297, %288, %325
  %360 = phi i32 [ 0, %288 ], [ %322, %325 ], [ 0, %297 ]
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  br label %361

361:                                              ; preds = %356, %327, %359
  %362 = phi i32 [ %360, %359 ], [ %322, %327 ], [ %322, %356 ]
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* %3) #9
  %363 = load i32, i32* %180, align 4
  %364 = sub i32 %363, %283
  %365 = sub i32 %364, %284
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @208, i64 0, i64 0), i8* %3, i32 %365) #9
  %366 = icmp sgt i32 %365, 0
  br i1 %366, label %367, label %394

367:                                              ; preds = %361
  %368 = getelementptr inbounds %0, %0* %1, i64 0, i32 11, i32 3
  %369 = load %10*, %10** %368, align 8
  %370 = getelementptr inbounds %0, %0* %1, i64 0, i32 11, i32 4
  %371 = load i32, i32* %370, align 8
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds %10, %10* %369, i64 %372
  %374 = icmp eq i32 %371, 0
  br i1 %374, label %394, label %375

375:                                              ; preds = %367
  %376 = getelementptr inbounds %1, %1* %7, i64 0, i32 3, i64 0
  br label %377

377:                                              ; preds = %375, %391
  %378 = phi %10* [ %369, %375 ], [ %392, %391 ]
  %379 = getelementptr inbounds %10, %10* %378, i64 0, i32 0, i32 1
  %380 = bitcast %6* %379 to i8*
  %381 = load i8, i8* %380, align 8
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %391, label %383

383:                                              ; preds = %377
  %384 = bitcast %10* %378 to %71**
  %385 = load %71*, %71** %384, align 8
  %386 = getelementptr inbounds %71, %71* %385, i64 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = and i32 %387, 131073
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %383
  tail call fastcc void @442(%62* %0, %71* %385, i8* null, i8* nonnull %376)
  br label %391

391:                                              ; preds = %390, %383, %377
  %392 = getelementptr inbounds %10, %10* %378, i64 1
  %393 = icmp eq %10* %392, %373
  br i1 %393, label %394, label %377

394:                                              ; preds = %391, %367, %361
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* %3) #9
  br i1 %38, label %395, label %532

395:                                              ; preds = %394
  %396 = getelementptr inbounds %4, %4* %2, i64 0, i32 1
  %397 = bitcast %6* %396 to i8*
  %398 = load i8, i8* %397, align 8
  %399 = icmp eq i8 %398, 8
  br i1 %399, label %400, label %532

400:                                              ; preds = %395
  %401 = bitcast %4* %2 to %21**
  %402 = load %21*, %21** %401, align 8
  %403 = getelementptr inbounds %21, %21* %402, i64 0, i32 3
  %404 = load %22*, %22** %403, align 8
  %405 = getelementptr inbounds %22, %22* %404, i64 0, i32 15
  %406 = load %8* (%4*)*, %8* (%4*)** %405, align 8
  %407 = icmp eq %8* (%4*)* %406, null
  br i1 %407, label %532, label %408

408:                                              ; preds = %400
  %409 = tail call %8* %406(%4* nonnull %2) #9
  %410 = bitcast %62* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %410) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %410, i8 0, i64 16, i1 false)
  %411 = icmp eq %8* %409, null
  br i1 %411, label %476, label %412

412:                                              ; preds = %408
  %413 = getelementptr inbounds %8, %8* %409, i64 0, i32 5
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %476, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %8, %8* %409, i64 0, i32 3
  %418 = load %10*, %10** %417, align 8
  %419 = getelementptr inbounds %8, %8* %409, i64 0, i32 4
  %420 = load i32, i32* %419, align 8
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds %10, %10* %418, i64 %421
  %423 = icmp eq i32 %420, 0
  br i1 %423, label %476, label %424

424:                                              ; preds = %416
  %425 = getelementptr inbounds %1, %1* %7, i64 0, i32 3, i64 0
  %426 = getelementptr inbounds %62, %62* %5, i64 0, i32 0
  %427 = getelementptr inbounds %62, %62* %5, i64 0, i32 1
  br label %428

428:                                              ; preds = %424, %472
  %429 = phi i32 [ 0, %424 ], [ %473, %472 ]
  %430 = phi %10* [ %418, %424 ], [ %474, %472 ]
  %431 = getelementptr inbounds %10, %10* %430, i64 0, i32 0, i32 1
  %432 = bitcast %6* %431 to i8*
  %433 = load i8, i8* %432, align 8
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %472, label %435

435:                                              ; preds = %428
  %436 = getelementptr inbounds %10, %10* %430, i64 0, i32 2
  %437 = load %1*, %1** %436, align 8
  %438 = icmp eq %1* %437, null
  br i1 %438, label %472, label %439

439:                                              ; preds = %435
  %440 = getelementptr inbounds %1, %1* %437, i64 0, i32 2
  %441 = load i64, i64* %440, align 8
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %472, label %443

443:                                              ; preds = %439
  %444 = getelementptr inbounds %1, %1* %437, i64 0, i32 3, i64 0
  %445 = load i8, i8* %444, align 8
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %472, label %447

447:                                              ; preds = %443
  %448 = call zeroext i8 @zend_hash_exists(%8* nonnull %179, %1* nonnull %437) #9
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %450, label %472

450:                                              ; preds = %447
  %451 = add nsw i32 %429, 1
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @212, i64 0, i64 0), i8* nonnull %425) #9
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @213, i64 0, i64 0), i8* nonnull %444) #9
  %452 = load %1*, %1** %426, align 8
  %453 = icmp eq %1* %452, null
  br i1 %453, label %460, label %454

454:                                              ; preds = %450
  %455 = getelementptr inbounds %1, %1* %452, i64 0, i32 2
  %456 = load i64, i64* %455, align 8
  %457 = add i64 %456, 3
  %458 = load i64, i64* %427, align 8
  %459 = icmp ult i64 %457, %458
  br i1 %459, label %465, label %460

460:                                              ; preds = %454, %450
  %461 = phi i64 [ 3, %450 ], [ %457, %454 ]
  call void @smart_str_erealloc(%62* nonnull %5, i64 %461) #9
  %462 = load %1*, %1** %426, align 8
  %463 = getelementptr inbounds %1, %1* %462, i64 0, i32 2
  %464 = load i64, i64* %463, align 8
  br label %465

465:                                              ; preds = %454, %460
  %466 = phi i64 [ %464, %460 ], [ %456, %454 ]
  %467 = phi %1* [ %462, %460 ], [ %452, %454 ]
  %468 = phi i64 [ %461, %460 ], [ %457, %454 ]
  %469 = getelementptr inbounds %1, %1* %467, i64 0, i32 3, i64 %466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %469, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @216, i64 0, i64 0), i64 3, i1 false) #9
  %470 = load %1*, %1** %426, align 8
  %471 = getelementptr inbounds %1, %1* %470, i64 0, i32 2
  store i64 %468, i64* %471, align 8
  br label %472

472:                                              ; preds = %465, %435, %439, %443, %447, %428
  %473 = phi i32 [ %429, %428 ], [ %429, %447 ], [ %451, %465 ], [ %429, %443 ], [ %429, %439 ], [ %429, %435 ]
  %474 = getelementptr inbounds %10, %10* %430, i64 1
  %475 = icmp eq %10* %474, %422
  br i1 %475, label %476, label %428

476:                                              ; preds = %472, %416, %412, %408
  %477 = phi i32 [ 0, %412 ], [ 0, %408 ], [ 0, %416 ], [ %473, %472 ]
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @209, i64 0, i64 0), i8* %3, i32 %477) #9
  %478 = getelementptr inbounds %62, %62* %5, i64 0, i32 0
  %479 = load %1*, %1** %478, align 8
  %480 = icmp eq %1* %479, null
  br i1 %480, label %509, label %481

481:                                              ; preds = %476
  %482 = getelementptr inbounds %1, %1* %479, i64 0, i32 2
  %483 = load i64, i64* %482, align 8
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %509, label %485

485:                                              ; preds = %481
  %486 = getelementptr inbounds %1, %1* %479, i64 0, i32 3, i64 0
  %487 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %488 = load %1*, %1** %487, align 8
  %489 = icmp eq %1* %488, null
  br i1 %489, label %497, label %490

490:                                              ; preds = %485
  %491 = getelementptr inbounds %1, %1* %488, i64 0, i32 2
  %492 = load i64, i64* %491, align 8
  %493 = add i64 %492, %483
  %494 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %495 = load i64, i64* %494, align 8
  %496 = icmp ult i64 %493, %495
  br i1 %496, label %502, label %497

497:                                              ; preds = %490, %485
  %498 = phi i64 [ %483, %485 ], [ %493, %490 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %498) #9
  %499 = load %1*, %1** %487, align 8
  %500 = getelementptr inbounds %1, %1* %499, i64 0, i32 2
  %501 = load i64, i64* %500, align 8
  br label %502

502:                                              ; preds = %497, %490
  %503 = phi i64 [ %501, %497 ], [ %492, %490 ]
  %504 = phi %1* [ %499, %497 ], [ %488, %490 ]
  %505 = phi i64 [ %498, %497 ], [ %493, %490 ]
  %506 = getelementptr inbounds %1, %1* %504, i64 0, i32 3, i64 %503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %506, i8* nonnull align 1 %486, i64 %483, i1 false) #9
  %507 = load %1*, %1** %487, align 8
  %508 = getelementptr inbounds %1, %1* %507, i64 0, i32 2
  store i64 %505, i64* %508, align 8
  br label %509

509:                                              ; preds = %476, %481, %502
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* %3) #9
  %510 = load %1*, %1** %478, align 8
  %511 = icmp eq %1* %510, null
  br i1 %511, label %531, label %512

512:                                              ; preds = %509
  %513 = getelementptr inbounds %1, %1* %510, i64 0, i32 0, i32 1
  %514 = bitcast %3* %513 to %57*
  %515 = getelementptr inbounds %57, %57* %514, i64 0, i32 1
  %516 = load i8, i8* %515, align 1
  %517 = and i8 %516, 2
  %518 = icmp eq i8 %517, 0
  br i1 %518, label %519, label %530

519:                                              ; preds = %512
  %520 = getelementptr inbounds %1, %1* %510, i64 0, i32 0, i32 0
  %521 = load i32, i32* %520, align 8
  %522 = add i32 %521, -1
  store i32 %522, i32* %520, align 8
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %530

524:                                              ; preds = %519
  %525 = and i8 %516, 1
  %526 = icmp eq i8 %525, 0
  %527 = bitcast %1* %510 to i8*
  br i1 %526, label %529, label %528

528:                                              ; preds = %524
  call void @free(i8* %527) #9
  br label %530

529:                                              ; preds = %524
  call void @_efree(i8* %527) #9
  br label %530

530:                                              ; preds = %529, %528, %519, %512
  store %1* null, %1** %478, align 8
  br label %531

531:                                              ; preds = %509, %530
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %410) #9
  br label %532

532:                                              ; preds = %400, %531, %395, %394
  %533 = load i32, i32* %285, align 4
  %534 = sub i32 %533, %362
  %535 = icmp sgt i32 %534, 0
  br i1 %535, label %536, label %725

536:                                              ; preds = %532
  %537 = bitcast %62* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %537) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %537, i8 0, i64 16, i1 false)
  %538 = getelementptr inbounds %0, %0* %1, i64 0, i32 10, i32 3
  %539 = load %10*, %10** %538, align 8
  %540 = getelementptr inbounds %0, %0* %1, i64 0, i32 10, i32 4
  %541 = load i32, i32* %540, align 8
  %542 = zext i32 %541 to i64
  %543 = getelementptr inbounds %10, %10* %539, i64 %542
  %544 = icmp eq i32 %541, 0
  %545 = getelementptr inbounds %62, %62* %6, i64 0, i32 0
  br i1 %544, label %667, label %546

546:                                              ; preds = %536
  %547 = bitcast %4* %2 to %21**
  %548 = getelementptr inbounds %1, %1* %7, i64 0, i32 3, i64 0
  %549 = getelementptr inbounds %62, %62* %6, i64 0, i32 1
  br label %550

550:                                              ; preds = %546, %663
  %551 = phi i32 [ 0, %546 ], [ %664, %663 ]
  %552 = phi %10* [ %539, %546 ], [ %665, %663 ]
  %553 = getelementptr inbounds %10, %10* %552, i64 0, i32 0, i32 1
  %554 = bitcast %6* %553 to i8*
  %555 = load i8, i8* %554, align 8
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %663, label %557

557:                                              ; preds = %550
  %558 = getelementptr inbounds %10, %10* %552, i64 0, i32 2
  %559 = load %1*, %1** %558, align 8
  %560 = bitcast %10* %552 to %11**
  %561 = load %11*, %11** %560, align 8
  %562 = getelementptr inbounds %11, %11* %561, i64 0, i32 0, i32 2
  %563 = load i32, i32* %562, align 4
  %564 = and i32 %563, 1
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %663

566:                                              ; preds = %557
  %567 = and i32 %563, 1024
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %573, label %569

569:                                              ; preds = %566
  %570 = getelementptr inbounds %11, %11* %561, i64 0, i32 0, i32 4
  %571 = load %0*, %0** %570, align 8
  %572 = icmp eq %0* %571, %1
  br i1 %572, label %573, label %663

573:                                              ; preds = %569, %566
  %574 = getelementptr inbounds %11, %11* %561, i64 0, i32 0, i32 3
  %575 = load %1*, %1** %574, align 8
  %576 = getelementptr inbounds %1, %1* %575, i64 0, i32 2
  %577 = load i64, i64* %576, align 8
  %578 = and i32 %563, 8192
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %593, label %580

580:                                              ; preds = %573
  %581 = getelementptr inbounds %11, %11* %561, i64 0, i32 0, i32 4
  %582 = load %0*, %0** %581, align 8
  %583 = icmp ne %0* %582, %1
  %584 = icmp ne %1* %559, null
  %585 = and i1 %584, %583
  br i1 %585, label %586, label %593

586:                                              ; preds = %580
  %587 = getelementptr inbounds %1, %1* %559, i64 0, i32 3, i64 0
  %588 = getelementptr inbounds %1, %1* %559, i64 0, i32 2
  %589 = load i64, i64* %588, align 8
  %590 = getelementptr inbounds %1, %1* %575, i64 0, i32 3, i64 0
  %591 = call i32 @zend_binary_strcasecmp(i8* nonnull %587, i64 %589, i8* nonnull %590, i64 %577) #9
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %663

593:                                              ; preds = %580, %586, %573
  %594 = load %0*, %0** @zend_ce_closure, align 8
  %595 = icmp eq %0* %594, %1
  %596 = and i1 %38, %595
  %597 = icmp eq i64 %577, 8
  %598 = and i1 %597, %596
  br i1 %598, label %599, label %610

599:                                              ; preds = %593
  %600 = load %1*, %1** %574, align 8
  %601 = getelementptr inbounds %1, %1* %600, i64 0, i32 3, i64 0
  %602 = call i32 @memcmp(i8* nonnull %601, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 8) #11
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %610

604:                                              ; preds = %599
  %605 = load %21*, %21** %547, align 8
  %606 = call %11* @zend_get_closure_invoke_method(%21* %605) #9
  %607 = icmp eq %11* %606, null
  br i1 %607, label %610, label %608

608:                                              ; preds = %604
  %609 = getelementptr inbounds %11, %11* %606, i64 0, i32 0, i32 5
  store %11* null, %11** %609, align 8
  br label %610

610:                                              ; preds = %593, %599, %604, %608
  %611 = phi %11* [ %606, %608 ], [ %561, %604 ], [ %561, %599 ], [ %561, %593 ]
  %612 = phi %11* [ %606, %608 ], [ null, %604 ], [ null, %599 ], [ null, %593 ]
  %613 = load %1*, %1** %545, align 8
  %614 = icmp eq %1* %613, null
  br i1 %614, label %621, label %615

615:                                              ; preds = %610
  %616 = getelementptr inbounds %1, %1* %613, i64 0, i32 2
  %617 = load i64, i64* %616, align 8
  %618 = add i64 %617, 1
  %619 = load i64, i64* %549, align 8
  %620 = icmp ult i64 %618, %619
  br i1 %620, label %624, label %621

621:                                              ; preds = %615, %610
  %622 = phi i64 [ 1, %610 ], [ %618, %615 ]
  call void @smart_str_erealloc(%62* nonnull %6, i64 %622) #9
  %623 = load %1*, %1** %545, align 8
  br label %624

624:                                              ; preds = %615, %621
  %625 = phi %1* [ %623, %621 ], [ %613, %615 ]
  %626 = phi i64 [ %622, %621 ], [ %618, %615 ]
  %627 = add i64 %626, -1
  %628 = getelementptr inbounds %1, %1* %625, i64 0, i32 3, i64 %627
  store i8 10, i8* %628, align 1
  %629 = load %1*, %1** %545, align 8
  %630 = getelementptr inbounds %1, %1* %629, i64 0, i32 2
  store i64 %626, i64* %630, align 8
  call fastcc void @426(%62* nonnull %6, %11* nonnull %611, %0* %1, i8* nonnull %548)
  %631 = add nsw i32 %551, 1
  %632 = icmp eq %11* %612, null
  br i1 %632, label %663, label %633

633:                                              ; preds = %624
  %634 = getelementptr inbounds %11, %11* %612, i64 0, i32 0, i32 2
  %635 = load i32, i32* %634, align 4
  %636 = and i32 %635, 2097152
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %663, label %638

638:                                              ; preds = %633
  %639 = getelementptr inbounds %11, %11* %612, i64 0, i32 0, i32 3
  %640 = load %1*, %1** %639, align 8
  %641 = getelementptr inbounds %1, %1* %640, i64 0, i32 0, i32 1
  %642 = bitcast %3* %641 to %57*
  %643 = getelementptr inbounds %57, %57* %642, i64 0, i32 1
  %644 = load i8, i8* %643, align 1
  %645 = and i8 %644, 2
  %646 = icmp eq i8 %645, 0
  br i1 %646, label %647, label %658

647:                                              ; preds = %638
  %648 = getelementptr inbounds %1, %1* %640, i64 0, i32 0, i32 0
  %649 = load i32, i32* %648, align 8
  %650 = add i32 %649, -1
  store i32 %650, i32* %648, align 8
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %658

652:                                              ; preds = %647
  %653 = and i8 %644, 1
  %654 = icmp eq i8 %653, 0
  %655 = bitcast %1* %640 to i8*
  br i1 %654, label %657, label %656

656:                                              ; preds = %652
  call void @free(i8* %655) #9
  br label %658

657:                                              ; preds = %652
  call void @_efree(i8* %655) #9
  br label %658

658:                                              ; preds = %657, %656, %647, %638
  %659 = icmp eq %11* %612, getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57)
  br i1 %659, label %660, label %661

660:                                              ; preds = %658
  store %1* null, %1** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 3), align 8
  br label %663

661:                                              ; preds = %658
  %662 = getelementptr inbounds %11, %11* %612, i64 0, i32 0, i32 0
  call void @_efree(i8* nonnull %662) #9
  br label %663

663:                                              ; preds = %661, %660, %633, %624, %557, %569, %586, %550
  %664 = phi i32 [ %551, %550 ], [ %551, %569 ], [ %551, %557 ], [ %551, %586 ], [ %631, %624 ], [ %631, %633 ], [ %631, %660 ], [ %631, %661 ]
  %665 = getelementptr inbounds %10, %10* %552, i64 1
  %666 = icmp eq %10* %665, %543
  br i1 %666, label %667, label %550

667:                                              ; preds = %663, %536
  %668 = phi i32 [ 0, %536 ], [ %664, %663 ]
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @210, i64 0, i64 0), i8* %3, i32 %668) #9
  %669 = load %1*, %1** %545, align 8
  %670 = icmp eq %1* %669, null
  br i1 %670, label %699, label %671

671:                                              ; preds = %667
  %672 = getelementptr inbounds %1, %1* %669, i64 0, i32 2
  %673 = load i64, i64* %672, align 8
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %699, label %675

675:                                              ; preds = %671
  %676 = getelementptr inbounds %1, %1* %669, i64 0, i32 3, i64 0
  %677 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %678 = load %1*, %1** %677, align 8
  %679 = icmp eq %1* %678, null
  br i1 %679, label %687, label %680

680:                                              ; preds = %675
  %681 = getelementptr inbounds %1, %1* %678, i64 0, i32 2
  %682 = load i64, i64* %681, align 8
  %683 = add i64 %682, %673
  %684 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %685 = load i64, i64* %684, align 8
  %686 = icmp ult i64 %683, %685
  br i1 %686, label %692, label %687

687:                                              ; preds = %680, %675
  %688 = phi i64 [ %673, %675 ], [ %683, %680 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %688) #9
  %689 = load %1*, %1** %677, align 8
  %690 = getelementptr inbounds %1, %1* %689, i64 0, i32 2
  %691 = load i64, i64* %690, align 8
  br label %692

692:                                              ; preds = %687, %680
  %693 = phi i64 [ %691, %687 ], [ %682, %680 ]
  %694 = phi %1* [ %689, %687 ], [ %678, %680 ]
  %695 = phi i64 [ %688, %687 ], [ %683, %680 ]
  %696 = getelementptr inbounds %1, %1* %694, i64 0, i32 3, i64 %693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %696, i8* nonnull align 1 %676, i64 %673, i1 false) #9
  %697 = load %1*, %1** %677, align 8
  %698 = getelementptr inbounds %1, %1* %697, i64 0, i32 2
  store i64 %695, i64* %698, align 8
  br label %699

699:                                              ; preds = %667, %671, %692
  %700 = icmp eq i32 %668, 0
  br i1 %700, label %701, label %702

701:                                              ; preds = %699
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  br label %702

702:                                              ; preds = %699, %701
  %703 = load %1*, %1** %545, align 8
  %704 = icmp eq %1* %703, null
  br i1 %704, label %724, label %705

705:                                              ; preds = %702
  %706 = getelementptr inbounds %1, %1* %703, i64 0, i32 0, i32 1
  %707 = bitcast %3* %706 to %57*
  %708 = getelementptr inbounds %57, %57* %707, i64 0, i32 1
  %709 = load i8, i8* %708, align 1
  %710 = and i8 %709, 2
  %711 = icmp eq i8 %710, 0
  br i1 %711, label %712, label %723

712:                                              ; preds = %705
  %713 = getelementptr inbounds %1, %1* %703, i64 0, i32 0, i32 0
  %714 = load i32, i32* %713, align 8
  %715 = add i32 %714, -1
  store i32 %715, i32* %713, align 8
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %717, label %723

717:                                              ; preds = %712
  %718 = and i8 %709, 1
  %719 = icmp eq i8 %718, 0
  %720 = bitcast %1* %703 to i8*
  br i1 %719, label %722, label %721

721:                                              ; preds = %717
  call void @free(i8* %720) #9
  br label %723

722:                                              ; preds = %717
  call void @_efree(i8* %720) #9
  br label %723

723:                                              ; preds = %722, %721, %712, %705
  store %1* null, %1** %545, align 8
  br label %724

724:                                              ; preds = %702, %723
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %537) #9
  br label %726

725:                                              ; preds = %532
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @211, i64 0, i64 0), i8* %3) #9
  br label %726

726:                                              ; preds = %725, %724
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* %3) #9
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @162, i64 0, i64 0), i8* %3) #9
  %727 = getelementptr inbounds %1, %1* %7, i64 0, i32 0, i32 1
  %728 = bitcast %3* %727 to %57*
  %729 = getelementptr inbounds %57, %57* %728, i64 0, i32 1
  %730 = load i8, i8* %729, align 1
  %731 = and i8 %730, 2
  %732 = icmp eq i8 %731, 0
  br i1 %732, label %733, label %744

733:                                              ; preds = %726
  %734 = getelementptr inbounds %1, %1* %7, i64 0, i32 0, i32 0
  %735 = load i32, i32* %734, align 8
  %736 = add i32 %735, -1
  store i32 %736, i32* %734, align 8
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %744

738:                                              ; preds = %733
  %739 = and i8 %730, 1
  %740 = icmp eq i8 %739, 0
  %741 = bitcast %1* %7 to i8*
  br i1 %740, label %743, label %742

742:                                              ; preds = %738
  call void @free(i8* %741) #9
  br label %744

743:                                              ; preds = %738
  call void @_efree(i8* %741) #9
  br label %744

744:                                              ; preds = %167, %743, %742, %733, %726
  ret void

745:                                              ; preds = %222
  %746 = getelementptr inbounds %10, %10* %204, i64 1
  %747 = bitcast %10* %746 to %71**
  %748 = load %71*, %71** %747, align 8
  %749 = getelementptr inbounds %71, %71* %748, i64 0, i32 1
  %750 = load i32, i32* %749, align 4
  %751 = and i32 %750, 131072
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %755, label %753

753:                                              ; preds = %745
  %754 = add nsw i32 %223, 1
  br label %758

755:                                              ; preds = %745
  %756 = and i32 %750, 1
  %757 = add nsw i32 %756, %224
  br label %758

758:                                              ; preds = %755, %753, %222
  %759 = phi i32 [ %223, %222 ], [ %754, %753 ], [ %223, %755 ]
  %760 = phi i32 [ %224, %222 ], [ %224, %753 ], [ %757, %755 ]
  %761 = getelementptr inbounds %10, %10* %204, i64 2
  %762 = add i64 %205, -2
  %763 = icmp eq i64 %762, 0
  br i1 %763, label %229, label %201
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getName(%23* %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %59

41:                                               ; preds = %30, %25
  %42 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %43 = bitcast %4* %42 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %4, %4* %42, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %4* %1 to %59**
  store %59* %44, %59** %47, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 5120
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %41
  %52 = and i32 %46, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %59, %59* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %55, %54, %41, %39, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isInternal(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %31, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %31

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 1
  %29 = select i1 %28, i32 3, i32 2
  %30 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %29, i32* %30, align 8
  br label %31

31:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isUserDefined(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %31, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %31

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  %29 = select i1 %28, i32 3, i32 2
  %30 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %29, i32* %30, align 8
  br label %31

31:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isAnonymous(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getFileName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %49, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %49, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %49

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %47

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 480
  %31 = bitcast i8* %30 to %1**
  %32 = load %1*, %1** %31, align 8
  %33 = bitcast %4* %1 to %1**
  store %1* %32, %1** %33, align 8
  %34 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 1
  %35 = bitcast %3* %34 to %57*
  %36 = getelementptr inbounds %57, %57* %35, i64 0, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %41, align 8
  br label %49

42:                                               ; preds = %29
  %43 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %46, align 8
  br label %49

47:                                               ; preds = %26
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %48, align 8
  br label %49

49:                                               ; preds = %40, %42, %20, %7, %47, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getStartLine(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %38, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %38

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 488
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %35, align 8
  br label %38

36:                                               ; preds = %26
  %37 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %20, %7, %36, %29, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getEndLine(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %38, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %38

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 492
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %35, align 8
  br label %38

36:                                               ; preds = %26
  %37 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %20, %7, %36, %29, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getDocComment(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %51, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %51, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %51

26:                                               ; preds = %10
  %27 = load i8, i8* %15, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %49

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %15, i64 496
  %31 = bitcast i8* %30 to %1**
  %32 = load %1*, %1** %31, align 8
  %33 = icmp eq %1* %32, null
  br i1 %33, label %49, label %34

34:                                               ; preds = %29
  %35 = bitcast %4* %1 to %1**
  store %1* %32, %1** %35, align 8
  %36 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 1
  %37 = bitcast %3* %36 to %57*
  %38 = getelementptr inbounds %57, %57* %37, i64 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = and i8 %39, 2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %43, align 8
  br label %51

44:                                               ; preds = %34
  %45 = getelementptr inbounds %1, %1* %32, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %48, align 8
  br label %51

49:                                               ; preds = %29, %26
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %50, align 8
  br label %51

51:                                               ; preds = %42, %44, %20, %7, %49, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getConstructor(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %35, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %35

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 232
  %28 = bitcast i8* %27 to %11**
  %29 = load %11*, %11** %28, align 8
  %30 = icmp eq %11* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = bitcast i8* %15 to %0*
  tail call fastcc void @429(%0* %32, %11* nonnull %29, %4* null, %4* %1)
  br label %35

33:                                               ; preds = %26
  %34 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %34, align 8
  br label %35

35:                                               ; preds = %20, %7, %31, %33, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_hasMethod(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %8 = bitcast %6* %7 to i8*
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %13 = bitcast %4* %12 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 0, i32 2
  %16 = load %0*, %0** %15, align 8
  %17 = load %0*, %0** @reflection_class_ptr, align 8
  %18 = tail call zeroext i8 @instanceof_function(%0* %16, %0* %17) #9
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %11, %2
  %21 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %21) #9
  br label %64

22:                                               ; preds = %11
  %23 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0), i8** nonnull %3, i64* nonnull %4) #9
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %64, label %27

27:                                               ; preds = %22
  %28 = load %21*, %21** %13, align 8
  %29 = getelementptr inbounds %21, %21* %28, i64 -1, i32 4
  %30 = bitcast %8** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %42

33:                                               ; preds = %27
  %34 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %35 = icmp eq %21* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %21, %21* %34, i64 0, i32 2
  %38 = load %0*, %0** %37, align 8
  %39 = load %0*, %0** @reflection_exception_ptr, align 8
  %40 = icmp eq %0* %38, %39
  br i1 %40, label %64, label %41

41:                                               ; preds = %33, %36
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %64

42:                                               ; preds = %27
  %43 = bitcast i8* %31 to %0*
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %4, align 8
  %46 = call i8* @zend_str_tolower_dup(i8* %44, i64 %45) #9
  %47 = load %0*, %0** @zend_ce_closure, align 8
  %48 = icmp eq %0* %47, %43
  %49 = load i64, i64* %4, align 8
  %50 = icmp eq i64 %49, 8
  %51 = and i1 %48, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = call i32 @memcmp(i8* %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 8) #11
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %52, %42
  %56 = getelementptr inbounds i8, i8* %31, i64 64
  %57 = bitcast i8* %56 to %8*
  %58 = call zeroext i8 @zend_hash_str_exists(%8* nonnull %57, i8* %46, i64 %49) #9
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55, %52
  call void @_efree(i8* %46) #9
  %61 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %61, align 8
  br label %64

62:                                               ; preds = %55
  call void @_efree(i8* %46) #9
  %63 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %63, align 8
  br label %64

64:                                               ; preds = %36, %22, %62, %60, %41, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare dso_local zeroext i8 @zend_hash_str_exists(%8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getMethod(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %10 = bitcast %6* %9 to i8*
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %15 = bitcast %4* %14 to %21**
  %16 = load %21*, %21** %15, align 8
  %17 = getelementptr inbounds %21, %21* %16, i64 0, i32 2
  %18 = load %0*, %0** %17, align 8
  %19 = load %0*, %0** @reflection_class_ptr, align 8
  %20 = tail call zeroext i8 @instanceof_function(%0* %18, %0* %19) #9
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %13, %2
  %23 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %23) #9
  br label %129

24:                                               ; preds = %13
  %25 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0), i8** nonnull %4, i64* nonnull %5) #9
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %129, label %29

29:                                               ; preds = %24
  %30 = load %21*, %21** %15, align 8
  %31 = getelementptr inbounds %21, %21* %30, i64 -1, i32 4
  %32 = bitcast %8** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %44

35:                                               ; preds = %29
  %36 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %37 = icmp eq %21* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %21, %21* %36, i64 0, i32 2
  %40 = load %0*, %0** %39, align 8
  %41 = load %0*, %0** @reflection_exception_ptr, align 8
  %42 = icmp eq %0* %40, %41
  br i1 %42, label %129, label %43

43:                                               ; preds = %35, %38
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %129

44:                                               ; preds = %29
  %45 = bitcast i8* %33 to %0*
  %46 = load i8*, i8** %4, align 8
  %47 = load i64, i64* %5, align 8
  %48 = call i8* @zend_str_tolower_dup(i8* %46, i64 %47) #9
  %49 = load %0*, %0** @zend_ce_closure, align 8
  %50 = icmp eq %0* %49, %45
  br i1 %50, label %51, label %72

51:                                               ; preds = %44
  %52 = getelementptr inbounds %21, %21* %30, i64 -1, i32 2
  %53 = getelementptr inbounds %0*, %0** %52, i64 1
  %54 = bitcast %0** %53 to i8*
  %55 = load i8, i8* %54, align 8
  %56 = icmp ne i8 %55, 0
  %57 = load i64, i64* %5, align 8
  %58 = icmp eq i64 %57, 8
  %59 = and i1 %56, %58
  br i1 %59, label %60, label %75

60:                                               ; preds = %51
  %61 = call i32 @memcmp(i8* %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 8) #11
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %60
  %64 = bitcast %0** %52 to %21**
  %65 = load %21*, %21** %64, align 8
  %66 = call %11* @zend_get_closure_invoke_method(%21* %65) #9
  %67 = icmp eq %11* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load %0*, %0** @zend_ce_closure, align 8
  br label %72

70:                                               ; preds = %63
  %71 = getelementptr inbounds %11, %11* %66, i64 0, i32 0, i32 5
  store %11* null, %11** %71, align 8
  call fastcc void @429(%0* %45, %11* nonnull %66, %4* null, %4* %1)
  call void @_efree(i8* %48) #9
  br label %129

72:                                               ; preds = %68, %44
  %73 = phi %0* [ %69, %68 ], [ %49, %44 ]
  %74 = icmp eq %0* %73, %45
  br i1 %74, label %75, label %113

75:                                               ; preds = %60, %51, %72
  %76 = getelementptr inbounds %21, %21* %30, i64 -1, i32 2
  %77 = getelementptr inbounds %0*, %0** %76, i64 1
  %78 = bitcast %0** %77 to i8*
  %79 = load i8, i8* %78, align 8
  %80 = icmp eq i8 %79, 0
  %81 = load i64, i64* %5, align 8
  %82 = icmp eq i64 %81, 8
  %83 = and i1 %80, %82
  br i1 %83, label %84, label %113

84:                                               ; preds = %75
  %85 = call i32 @memcmp(i8* %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i64 0, i64 0), i64 8) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %113

87:                                               ; preds = %84
  %88 = call i32 @_object_init_ex(%4* nonnull %3, %0* %45) #9
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %113

90:                                               ; preds = %87
  %91 = bitcast %4* %3 to %21**
  %92 = load %21*, %21** %91, align 8
  %93 = call %11* @zend_get_closure_invoke_method(%21* %92) #9
  %94 = icmp eq %11* %93, null
  br i1 %94, label %113, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %11, %11* %93, i64 0, i32 0, i32 5
  store %11* null, %11** %96, align 8
  call fastcc void @429(%0* %45, %11* nonnull %93, %4* null, %4* %1)
  %97 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %98 = bitcast %6* %97 to %58*
  %99 = getelementptr inbounds %58, %58* %98, i64 0, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 4
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %95
  %104 = bitcast %4* %3 to %59**
  %105 = load %59*, %59** %104, align 8
  %106 = getelementptr inbounds %59, %59* %105, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, -1
  store i32 %108, i32* %106, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %103
  %111 = load %59*, %59** %104, align 8
  call void @_zval_dtor_func(%59* %111) #9
  br label %112

112:                                              ; preds = %95, %103, %110
  call void @_efree(i8* %48) #9
  br label %129

113:                                              ; preds = %90, %87, %84, %75, %72
  %114 = getelementptr inbounds i8, i8* %33, i64 64
  %115 = bitcast i8* %114 to %8*
  %116 = load i64, i64* %5, align 8
  %117 = call %4* @zend_hash_str_find(%8* nonnull %115, i8* %48, i64 %116) #9
  %118 = icmp eq %4* %117, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %113
  %120 = bitcast %4* %117 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast i8* %121 to %11*
  call fastcc void @429(%0* %45, %11* %124, %4* null, %4* %1)
  call void @_efree(i8* %48) #9
  br label %129

125:                                              ; preds = %113, %119
  call void @_efree(i8* %48) #9
  %126 = load %0*, %0** @reflection_exception_ptr, align 8
  %127 = load i8*, i8** %4, align 8
  %128 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %126, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @52, i64 0, i64 0), i8* %127) #9
  br label %129

129:                                              ; preds = %70, %123, %112, %38, %24, %125, %43, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare dso_local i32 @_object_init_ex(%4*, %0*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getMethods(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %0*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %4, align 8
  %8 = bitcast %0** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i64 0, i64* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #9
  store i8 1, i8* %6, align 1
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %11 = bitcast %6* %10 to i8*
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 8
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 2
  %19 = load %0*, %0** %18, align 8
  %20 = load %0*, %0** @reflection_class_ptr, align 8
  %21 = tail call zeroext i8 @instanceof_function(%0* %19, %0* %20) #9
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %14, %2
  %24 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %24) #9
  br label %91

25:                                               ; preds = %14
  %26 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @53, i64 0, i64 0), i64* nonnull %5, i8* nonnull %6) #9
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %91, label %30

30:                                               ; preds = %25
  %31 = load i8, i8* %6, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i64 1799, i64* %5, align 8
  br label %34

34:                                               ; preds = %30, %33
  %35 = load %21*, %21** %16, align 8
  %36 = getelementptr inbounds %21, %21* %35, i64 -1, i32 4
  %37 = bitcast %8** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %49

40:                                               ; preds = %34
  %41 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %42 = icmp eq %21* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %21, %21* %41, i64 0, i32 2
  %45 = load %0*, %0** %44, align 8
  %46 = load %0*, %0** @reflection_exception_ptr, align 8
  %47 = icmp eq %0* %45, %46
  br i1 %47, label %91, label %48

48:                                               ; preds = %40, %43
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %91

49:                                               ; preds = %34
  %50 = bitcast %0** %4 to i8**
  store i8* %38, i8** %50, align 8
  %51 = call i32 @_array_init(%4* %1, i32 0) #9
  %52 = getelementptr inbounds i8, i8* %38, i64 64
  %53 = bitcast i8* %52 to %8*
  %54 = load i64, i64* %5, align 8
  call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* nonnull %53, i32 (%4*, i32, %72*, %73*)* nonnull @437, i32 4, %0** nonnull %4, %4* %1, i64 %54) #9
  %55 = load %0*, %0** %4, align 8
  %56 = load %0*, %0** @zend_ce_closure, align 8
  %57 = call zeroext i8 @instanceof_function(%0* %55, %0* %56) #9
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %91, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %21, %21* %35, i64 -1, i32 2
  %61 = bitcast %0** %60 to %4*
  %62 = getelementptr inbounds %0*, %0** %60, i64 1
  %63 = bitcast %0** %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp ne i8 %64, 0
  %66 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #9
  br i1 %65, label %70, label %67

67:                                               ; preds = %59
  %68 = load %0*, %0** %4, align 8
  %69 = call i32 @_object_init_ex(%4* nonnull %7, %0* %68) #9
  br label %70

70:                                               ; preds = %59, %67
  %71 = phi %4* [ %7, %67 ], [ %61, %59 ]
  %72 = bitcast %4* %71 to %21**
  %73 = load %21*, %21** %72, align 8
  %74 = call %11* @zend_get_closure_invoke_method(%21* %73) #9
  %75 = icmp eq %11* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %11, %11* %74, i64 0, i32 0, i32 5
  store %11* null, %11** %77, align 8
  %78 = load i64, i64* %5, align 8
  %79 = getelementptr inbounds %11, %11* %74, i64 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = and i64 %78, %81
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %76
  %85 = load %0*, %0** %4, align 8
  %86 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #9
  call fastcc void @429(%0* %85, %11* nonnull %74, %4* null, %4* nonnull %3) #9
  %87 = call i32 @add_next_index_zval(%4* %1, %4* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #9
  br label %88

88:                                               ; preds = %84, %76, %70
  br i1 %65, label %90, label %89

89:                                               ; preds = %88
  call void @_zval_ptr_dtor(%4* nonnull %7) #9
  br label %90

90:                                               ; preds = %89, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #9
  br label %91

91:                                               ; preds = %90, %49, %43, %25, %48, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

declare dso_local void @zend_hash_apply_with_arguments(%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @437(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readnone %3) #0 {
  %5 = alloca %4, align 8
  %6 = bitcast %4* %0 to %11**
  %7 = load %11*, %11** %6, align 8
  %8 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 41
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 8
  store i8* %14, i8** %12, align 8
  %15 = bitcast i8* %13 to %0***
  %16 = load %0**, %0*** %15, align 8
  %17 = load %0*, %0** %16, align 8
  br label %28

18:                                               ; preds = %4
  %19 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %9 to i64
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = add i32 %9, 8
  store i32 %23, i32* %8, align 8
  %24 = bitcast i8* %22 to %0***
  %25 = load %0**, %0*** %24, align 8
  %26 = load %0*, %0** %25, align 8
  %27 = icmp ult i32 %23, 41
  br i1 %27, label %35, label %28

28:                                               ; preds = %18, %11
  %29 = phi %0* [ %17, %11 ], [ %26, %18 ]
  %30 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr i8, i8* %31, i64 8
  store i8* %32, i8** %30, align 8
  %33 = bitcast i8* %31 to %4**
  %34 = load %4*, %4** %33, align 8
  br label %50

35:                                               ; preds = %18
  %36 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = sext i32 %23 to i64
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = add i32 %9, 16
  store i32 %40, i32* %8, align 8
  %41 = bitcast i8* %39 to %4**
  %42 = load %4*, %4** %41, align 8
  %43 = icmp ult i32 %40, 41
  br i1 %43, label %44, label %50

44:                                               ; preds = %35
  %45 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = sext i32 %40 to i64
  %48 = getelementptr i8, i8* %46, i64 %47
  %49 = add i32 %9, 24
  store i32 %49, i32* %8, align 8
  br label %56

50:                                               ; preds = %28, %35
  %51 = phi %4* [ %34, %28 ], [ %42, %35 ]
  %52 = phi %0* [ %29, %28 ], [ %26, %35 ]
  %53 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr i8, i8* %54, i64 8
  store i8* %55, i8** %53, align 8
  br label %56

56:                                               ; preds = %50, %44
  %57 = phi %4* [ %42, %44 ], [ %51, %50 ]
  %58 = phi %0* [ %26, %44 ], [ %52, %50 ]
  %59 = phi i8* [ %48, %44 ], [ %54, %50 ]
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %11, %11* %7, i64 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = and i64 %61, %64
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  call fastcc void @429(%0* %58, %11* nonnull %7, %4* null, %4* nonnull %5) #9
  %69 = call i32 @add_next_index_zval(%4* %57, %4* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %70

70:                                               ; preds = %56, %67
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_hasProperty(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %4, align 8
  %5 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %8 = bitcast %6* %7 to i8*
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %13 = bitcast %4* %12 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 0, i32 2
  %16 = load %0*, %0** %15, align 8
  %17 = load %0*, %0** @reflection_class_ptr, align 8
  %18 = tail call zeroext i8 @instanceof_function(%0* %16, %0* %17) #9
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %11, %2
  %21 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %21) #9
  br label %103

22:                                               ; preds = %11
  %23 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i64 0, i64 0), %1** nonnull %3) #9
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %103, label %27

27:                                               ; preds = %22
  %28 = load %21*, %21** %13, align 8
  %29 = getelementptr inbounds %21, %21* %28, i64 -1, i32 4
  %30 = bitcast %8** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %42

33:                                               ; preds = %27
  %34 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %35 = icmp eq %21* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %21, %21* %34, i64 0, i32 2
  %38 = load %0*, %0** %37, align 8
  %39 = load %0*, %0** @reflection_exception_ptr, align 8
  %40 = icmp eq %0* %38, %39
  br i1 %40, label %103, label %41

41:                                               ; preds = %33, %36
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %103

42:                                               ; preds = %27
  %43 = getelementptr inbounds i8, i8* %31, i64 120
  %44 = bitcast i8* %43 to %8*
  %45 = load %1*, %1** %3, align 8
  %46 = call %4* @zend_hash_find(%8* nonnull %44, %1* %45) #9
  %47 = icmp eq %4* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %42
  %49 = bitcast %4* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %50, i64 4
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 131072
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  br i1 %57, label %60, label %59

59:                                               ; preds = %52
  store i32 2, i32* %58, align 8
  br label %103

60:                                               ; preds = %52
  store i32 3, i32* %58, align 8
  br label %103

61:                                               ; preds = %42, %48
  %62 = getelementptr inbounds %21, %21* %28, i64 -1, i32 2
  %63 = bitcast %0** %62 to %4*
  %64 = getelementptr inbounds %0*, %0** %62, i64 1
  %65 = bitcast %0** %64 to i8*
  %66 = load i8, i8* %65, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %101, label %68

68:                                               ; preds = %61
  %69 = bitcast %0** %62 to %21**
  %70 = load %21*, %21** %69, align 8
  %71 = getelementptr inbounds %21, %21* %70, i64 0, i32 3
  %72 = load %22*, %22** %71, align 8
  %73 = getelementptr inbounds %22, %22* %72, i64 0, i32 11
  %74 = load i32 (%4*, %4*, i32, i8**)*, i32 (%4*, %4*, i32, i8**)** %73, align 8
  %75 = icmp eq i32 (%4*, %4*, i32, i8**)* %74, null
  br i1 %75, label %101, label %76

76:                                               ; preds = %68
  %77 = load %1*, %1** %3, align 8
  %78 = bitcast %4* %4 to %1**
  store %1* %77, %1** %78, align 8
  %79 = getelementptr inbounds %1, %1* %77, i64 0, i32 0, i32 1
  %80 = bitcast %3* %79 to %57*
  %81 = getelementptr inbounds %57, %57* %80, i64 0, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = and i8 %82, 2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %76
  %86 = getelementptr inbounds %1, %1* %77, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 8
  br label %89

89:                                               ; preds = %76, %85
  %90 = phi i32 [ 5126, %85 ], [ 6, %76 ]
  %91 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %90, i32* %91, align 8
  %92 = load %21*, %21** %69, align 8
  %93 = getelementptr inbounds %21, %21* %92, i64 0, i32 3
  %94 = load %22*, %22** %93, align 8
  %95 = getelementptr inbounds %22, %22* %94, i64 0, i32 11
  %96 = load i32 (%4*, %4*, i32, i8**)*, i32 (%4*, %4*, i32, i8**)** %95, align 8
  %97 = call i32 %96(%4* nonnull %63, %4* nonnull %4, i32 2, i8** null) #9
  %98 = icmp eq i32 %97, 0
  call void @_zval_ptr_dtor(%4* nonnull %4) #9
  br i1 %98, label %101, label %99

99:                                               ; preds = %89
  %100 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %100, align 8
  br label %103

101:                                              ; preds = %89, %68, %61
  %102 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %102, align 8
  br label %103

103:                                              ; preds = %36, %22, %101, %99, %60, %59, %41, %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getProperty(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %71, align 8
  %5 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %7 = bitcast %6* %6 to i8*
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 8
  br i1 %9, label %10, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %12 = bitcast %4* %11 to %21**
  %13 = load %21*, %21** %12, align 8
  %14 = getelementptr inbounds %21, %21* %13, i64 0, i32 2
  %15 = load %0*, %0** %14, align 8
  %16 = load %0*, %0** @reflection_class_ptr, align 8
  %17 = tail call zeroext i8 @instanceof_function(%0* %15, %0* %16) #9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %10, %2
  %20 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %20) #9
  br label %200

21:                                               ; preds = %10
  %22 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i64 0, i64 0), %1** nonnull %3) #9
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %200, label %26

26:                                               ; preds = %21
  %27 = load %21*, %21** %12, align 8
  %28 = getelementptr inbounds %21, %21* %27, i64 -1, i32 4
  %29 = bitcast %8** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %41

32:                                               ; preds = %26
  %33 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %34 = icmp eq %21* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %21, %21* %33, i64 0, i32 2
  %37 = load %0*, %0** %36, align 8
  %38 = load %0*, %0** @reflection_exception_ptr, align 8
  %39 = icmp eq %0* %37, %38
  br i1 %39, label %200, label %40

40:                                               ; preds = %32, %35
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %200

41:                                               ; preds = %26
  %42 = bitcast i8* %30 to %0*
  %43 = getelementptr inbounds i8, i8* %30, i64 120
  %44 = bitcast i8* %43 to %8*
  %45 = load %1*, %1** %3, align 8
  %46 = call %4* @zend_hash_find(%8* nonnull %44, %1* %45) #9
  %47 = icmp eq %4* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %41
  %49 = bitcast %4* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast i8* %50 to %71*
  %52 = icmp eq i8* %50, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 131072
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %100

59:                                               ; preds = %53
  call fastcc void @438(%0* %42, %71* nonnull %51, %4* %1)
  br label %200

60:                                               ; preds = %41, %48
  %61 = getelementptr inbounds %21, %21* %27, i64 -1, i32 2
  %62 = getelementptr inbounds %0*, %0** %61, i64 1
  %63 = bitcast %0** %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %100, label %66

66:                                               ; preds = %60
  %67 = bitcast %0** %61 to %4*
  %68 = bitcast %0** %61 to %21**
  %69 = load %21*, %21** %68, align 8
  %70 = getelementptr inbounds %21, %21* %69, i64 0, i32 3
  %71 = load %22*, %22** %70, align 8
  %72 = getelementptr inbounds %22, %22* %71, i64 0, i32 15
  %73 = load %8* (%4*)*, %8* (%4*)** %72, align 8
  %74 = call %8* %73(%4* nonnull %67) #9
  %75 = load %1*, %1** %3, align 8
  %76 = call zeroext i8 @zend_hash_exists(%8* %74, %1* %75) #9
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %100, label %78

78:                                               ; preds = %66
  %79 = bitcast %71* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %71, %71* %4, i64 0, i32 1
  store i32 4096, i32* %80, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = getelementptr inbounds %1, %1* %81, i64 0, i32 0, i32 1
  %83 = bitcast %3* %82 to %57*
  %84 = getelementptr inbounds %57, %57* %83, i64 0, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = and i8 %85, 2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %78
  %89 = getelementptr inbounds %1, %1* %81, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  store i32 %91, i32* %89, align 8
  br label %92

92:                                               ; preds = %78, %88
  %93 = getelementptr inbounds %71, %71* %4, i64 0, i32 2
  store %1* %81, %1** %93, align 8
  %94 = getelementptr inbounds %71, %71* %4, i64 0, i32 3
  store %1* null, %1** %94, align 8
  %95 = getelementptr inbounds %71, %71* %4, i64 0, i32 4
  %96 = bitcast %0** %95 to i8**
  store i8* %30, i8** %96, align 8
  call fastcc void @438(%0* %42, %71* nonnull %4, %4* %1)
  %97 = bitcast %4* %1 to %21**
  %98 = load %21*, %21** %97, align 8
  %99 = getelementptr inbounds %21, %21* %98, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 6, i32* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  br label %200

100:                                              ; preds = %66, %60, %53
  %101 = load %1*, %1** %3, align 8
  %102 = getelementptr inbounds %1, %1* %101, i64 0, i32 3, i64 0
  %103 = call i8* @strstr(i8* nonnull %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @39, i64 0, i64 0)) #11
  %104 = icmp eq i8* %103, null
  br i1 %104, label %196, label %105

105:                                              ; preds = %100
  %106 = ptrtoint i8* %103 to i64
  %107 = ptrtoint i8* %102 to i64
  %108 = sub i64 %106, %107
  %109 = add i64 %108, 32
  %110 = and i64 %109, -8
  %111 = call noalias i8* @_emalloc(i64 %110) #10
  %112 = bitcast i8* %111 to %1*
  %113 = bitcast i8* %111 to i32*
  store i32 1, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 4
  %115 = bitcast i8* %114 to i32*
  store i32 6, i32* %115, align 4
  %116 = getelementptr inbounds i8, i8* %111, i64 8
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %111, i64 16
  %119 = bitcast i8* %118 to i64*
  store i64 %108, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %111, i64 24
  %121 = load %1*, %1** %3, align 8
  %122 = getelementptr inbounds %1, %1* %121, i64 0, i32 3, i64 0
  %123 = call i8* @zend_str_tolower_copy(i8* nonnull %120, i8* nonnull %122, i64 %108) #9
  %124 = getelementptr inbounds %1, %1* %112, i64 0, i32 3, i64 %108
  store i8 0, i8* %124, align 1
  %125 = load %1*, %1** %3, align 8
  %126 = getelementptr inbounds %1, %1* %125, i64 0, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 -2, %108
  %129 = add i64 %128, %127
  %130 = getelementptr inbounds i8, i8* %103, i64 2
  %131 = call %0* @zend_lookup_class(%1* %112) #9
  %132 = icmp eq %0* %131, null
  br i1 %132, label %133, label %153

133:                                              ; preds = %105
  %134 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %135 = icmp eq %21* %134, null
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = load %0*, %0** @reflection_exception_ptr, align 8
  %138 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %137, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %120) #9
  br label %139

139:                                              ; preds = %133, %136
  %140 = getelementptr inbounds i8, i8* %111, i64 5
  %141 = load i8, i8* %140, align 1
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %200

144:                                              ; preds = %139
  %145 = load i32, i32* %113, align 8
  %146 = add i32 %145, -1
  store i32 %146, i32* %113, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %200

148:                                              ; preds = %144
  %149 = and i8 %141, 1
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %148
  call void @free(i8* nonnull %111) #9
  br label %200

152:                                              ; preds = %148
  call void @_efree(i8* nonnull %111) #9
  br label %200

153:                                              ; preds = %105
  %154 = getelementptr inbounds i8, i8* %111, i64 5
  %155 = load i8, i8* %154, align 1
  %156 = and i8 %155, 2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %167

158:                                              ; preds = %153
  %159 = load i32, i32* %113, align 8
  %160 = add i32 %159, -1
  store i32 %160, i32* %113, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %158
  %163 = and i8 %155, 1
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  call void @free(i8* nonnull %111) #9
  br label %167

166:                                              ; preds = %162
  call void @_efree(i8* nonnull %111) #9
  br label %167

167:                                              ; preds = %153, %158, %165, %166
  %168 = call zeroext i8 @instanceof_function(%0* %42, %0* nonnull %131) #9
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %180

170:                                              ; preds = %167
  %171 = load %0*, %0** @reflection_exception_ptr, align 8
  %172 = getelementptr inbounds %0, %0* %131, i64 0, i32 1
  %173 = load %1*, %1** %172, align 8
  %174 = getelementptr inbounds %1, %1* %173, i64 0, i32 3, i64 0
  %175 = getelementptr inbounds i8, i8* %30, i64 8
  %176 = bitcast i8* %175 to %1**
  %177 = load %1*, %1** %176, align 8
  %178 = getelementptr inbounds %1, %1* %177, i64 0, i32 3, i64 0
  %179 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %171, i64 -1, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @55, i64 0, i64 0), i8* nonnull %174, i8* nonnull %130, i8* nonnull %178) #9
  br label %200

180:                                              ; preds = %167
  %181 = getelementptr inbounds %0, %0* %131, i64 0, i32 11
  %182 = call %4* @zend_hash_str_find(%8* nonnull %181, i8* nonnull %130, i64 %129) #9
  %183 = icmp eq %4* %182, null
  br i1 %183, label %196, label %184

184:                                              ; preds = %180
  %185 = bitcast %4* %182 to i8**
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast i8* %186 to %71*
  %188 = icmp eq i8* %186, null
  br i1 %188, label %196, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds i8, i8* %186, i64 4
  %191 = bitcast i8* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = and i32 %192, 131072
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %189
  call fastcc void @438(%0* nonnull %131, %71* nonnull %187, %4* %1)
  br label %200

196:                                              ; preds = %180, %184, %100, %189
  %197 = phi i8* [ %130, %189 ], [ %130, %184 ], [ %102, %100 ], [ %130, %180 ]
  %198 = load %0*, %0** @reflection_exception_ptr, align 8
  %199 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %198, i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @56, i64 0, i64 0), i8* nonnull %197) #9
  br label %200

200:                                              ; preds = %152, %151, %144, %139, %35, %21, %196, %195, %170, %92, %59, %40, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @438(%0* %0, %71* nocapture readonly %1, %4* %2) unnamed_addr #0 {
  %4 = alloca %4, align 8
  %5 = alloca %4, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %4, align 8
  %10 = alloca %4, align 8
  %11 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %71, %71* %1, i64 0, i32 2
  %17 = load %1*, %1** %16, align 8
  %18 = call i32 @zend_unmangle_property_name_ex(%1* %17, i8** nonnull %6, i8** nonnull %7, i64* nonnull %8) #9
  %19 = getelementptr inbounds %71, %71* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1024
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %55

23:                                               ; preds = %3
  %24 = icmp eq %0* %0, null
  br i1 %24, label %54, label %25

25:                                               ; preds = %23, %38
  %26 = phi %0* [ %27, %38 ], [ %0, %23 ]
  %27 = phi %0* [ %41, %38 ], [ %0, %23 ]
  %28 = getelementptr inbounds %0, %0* %27, i64 0, i32 11
  %29 = load i8*, i8** %7, align 8
  %30 = load i64, i64* %8, align 8
  %31 = call %4* @zend_hash_str_find(%8* nonnull %28, i8* %29, i64 %30) #9
  %32 = icmp eq %4* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = bitcast %4* %31 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %71*
  %37 = icmp eq i8* %35, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %25, %33
  %39 = phi %71* [ %36, %33 ], [ null, %25 ]
  %40 = getelementptr inbounds %0, %0* %27, i64 0, i32 2
  %41 = load %0*, %0** %40, align 8
  %42 = icmp eq %0* %41, null
  br i1 %42, label %45, label %25

43:                                               ; preds = %33
  %44 = bitcast i8* %35 to %71*
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi %0* [ %26, %43 ], [ %27, %38 ]
  %47 = phi %71* [ %44, %43 ], [ %39, %38 ]
  %48 = icmp eq %71* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %71, %71* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 131072
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %23, %49, %45
  br label %55

55:                                               ; preds = %54, %49, %3
  %56 = phi %71* [ %1, %3 ], [ %1, %54 ], [ %47, %49 ]
  %57 = phi %0* [ %0, %3 ], [ %0, %54 ], [ %46, %49 ]
  %58 = load i8*, i8** %7, align 8
  %59 = load i64, i64* %8, align 8
  %60 = add i64 %59, 32
  %61 = and i64 %60, -8
  %62 = call noalias i8* @_emalloc(i64 %61) #10
  %63 = bitcast i8* %62 to %1*
  %64 = bitcast i8* %62 to i32*
  store i32 1, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %62, i64 4
  %66 = bitcast i8* %65 to i32*
  store i32 6, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %62, i64 8
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %62, i64 16
  %70 = bitcast i8* %69 to i64*
  store i64 %59, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %62, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 1 %58, i64 %59, i1 false) #9
  %72 = getelementptr inbounds %1, %1* %63, i64 0, i32 3, i64 %59
  store i8 0, i8* %72, align 1
  %73 = bitcast %4* %4 to i8**
  store i8* %62, i8** %73, align 8
  %74 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %75 = getelementptr inbounds %6, %6* %74, i64 0, i32 0
  store i32 5126, i32* %75, align 8
  %76 = getelementptr inbounds %71, %71* %56, i64 0, i32 4
  %77 = load %0*, %0** %76, align 8
  %78 = getelementptr inbounds %0, %0* %77, i64 0, i32 1
  %79 = load %1*, %1** %78, align 8
  %80 = bitcast %4* %5 to %1**
  store %1* %79, %1** %80, align 8
  %81 = getelementptr inbounds %1, %1* %79, i64 0, i32 0, i32 1
  %82 = bitcast %3* %81 to %57*
  %83 = getelementptr inbounds %57, %57* %82, i64 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %55
  %88 = getelementptr inbounds %1, %1* %79, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 8
  br label %91

91:                                               ; preds = %55, %87
  %92 = phi i32 [ 5126, %87 ], [ 6, %55 ]
  %93 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 %92, i32* %93, align 8
  %94 = load %0*, %0** @reflection_property_ptr, align 8
  %95 = call i32 @_object_init_ex(%4* %2, %0* %94) #9
  %96 = bitcast %4* %2 to %21**
  %97 = load %21*, %21** %96, align 8
  %98 = call noalias i8* @_emalloc_40() #9
  %99 = bitcast i8* %98 to %0**
  store %0* %57, %0** %99, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 8
  %101 = bitcast %71* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 8 %101, i64 32, i1 false)
  %102 = getelementptr inbounds %21, %21* %97, i64 -1, i32 4
  %103 = bitcast %8** %102 to i8**
  store i8* %98, i8** %103, align 8
  %104 = getelementptr inbounds %21, %21* %97, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 5, i32* %104, align 8
  %105 = getelementptr inbounds %21, %21* %97, i64 -1, i32 5
  %106 = bitcast [1 x %4]* %105 to %0**
  store %0* %57, %0** %106, align 8
  %107 = getelementptr inbounds %21, %21* %97, i64 -1, i32 5, i64 0, i32 2
  %108 = bitcast %7* %107 to i8*
  %109 = load i8, i8* %108, align 4
  %110 = and i8 %109, -2
  store i8 %110, i8* %108, align 4
  %111 = bitcast %4* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #9
  %112 = call noalias i8* @_emalloc(i64 32) #10
  %113 = bitcast i8* %112 to i32*
  store i32 1, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 4
  %115 = bitcast i8* %114 to i32*
  store i32 6, i32* %115, align 4
  %116 = getelementptr inbounds i8, i8* %112, i64 8
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %117, align 8
  %118 = getelementptr inbounds i8, i8* %112, i64 24
  %119 = bitcast i8* %118 to i32*
  store i32 1701667182, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %112, i64 28
  store i8 0, i8* %120, align 1
  %121 = bitcast %4* %9 to i8**
  store i8* %112, i8** %121, align 8
  %122 = getelementptr inbounds %4, %4* %9, i64 0, i32 1, i32 0
  store i32 5126, i32* %122, align 8
  call void @zend_std_write_property(%4* %2, %4* nonnull %9, %4* nonnull %4, i8** null) #9
  %123 = bitcast %6* %74 to %58*
  %124 = getelementptr inbounds %58, %58* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %91
  %129 = bitcast %4* %4 to %59**
  %130 = load %59*, %59** %129, align 8
  %131 = getelementptr inbounds %59, %59* %130, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, -1
  store i32 %133, i32* %131, align 4
  br label %134

134:                                              ; preds = %91, %128
  call void @_zval_ptr_dtor(%4* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #9
  %135 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #9
  %136 = call noalias i8* @_emalloc(i64 32) #10
  %137 = bitcast i8* %136 to i32*
  store i32 1, i32* %137, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 4
  %139 = bitcast i8* %138 to i32*
  store i32 6, i32* %139, align 4
  %140 = getelementptr inbounds i8, i8* %136, i64 8
  %141 = bitcast i8* %140 to <2 x i64>*
  store <2 x i64> <i64 0, i64 5>, <2 x i64>* %141, align 8
  %142 = getelementptr inbounds i8, i8* %136, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i1 false) #9
  %143 = getelementptr inbounds i8, i8* %136, i64 29
  store i8 0, i8* %143, align 1
  %144 = bitcast %4* %10 to i8**
  store i8* %136, i8** %144, align 8
  %145 = getelementptr inbounds %4, %4* %10, i64 0, i32 1, i32 0
  store i32 5126, i32* %145, align 8
  call void @zend_std_write_property(%4* nonnull %2, %4* nonnull %10, %4* nonnull %5, i8** null) #9
  %146 = getelementptr inbounds %4, %4* %5, i64 0, i32 1
  %147 = bitcast %6* %146 to %58*
  %148 = getelementptr inbounds %58, %58* %147, i64 0, i32 1
  %149 = load i8, i8* %148, align 1
  %150 = and i8 %149, 4
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %134
  %153 = bitcast %4* %5 to %59**
  %154 = load %59*, %59** %153, align 8
  %155 = getelementptr inbounds %59, %59* %154, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = add i32 %156, -1
  store i32 %157, i32* %155, align 4
  br label %158

158:                                              ; preds = %134, %152
  call void @_zval_ptr_dtor(%4* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  ret void
}

declare dso_local zeroext i8 @zend_hash_exists(%8*, %1*) local_unnamed_addr #2

declare dso_local i8* @zend_str_tolower_copy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getProperties(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %0*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = bitcast %0** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 0, i64* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 1, i8* %5, align 1
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %9 = bitcast %6* %8 to i8*
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %14 = bitcast %4* %13 to %21**
  %15 = load %21*, %21** %14, align 8
  %16 = getelementptr inbounds %21, %21* %15, i64 0, i32 2
  %17 = load %0*, %0** %16, align 8
  %18 = load %0*, %0** @reflection_class_ptr, align 8
  %19 = tail call zeroext i8 @instanceof_function(%0* %17, %0* %18) #9
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %12, %2
  %22 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %22) #9
  br label %73

23:                                               ; preds = %12
  %24 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @53, i64 0, i64 0), i64* nonnull %4, i8* nonnull %5) #9
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %73, label %28

28:                                               ; preds = %23
  %29 = load i8, i8* %5, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  store i64 1793, i64* %4, align 8
  br label %32

32:                                               ; preds = %28, %31
  %33 = load %21*, %21** %14, align 8
  %34 = getelementptr inbounds %21, %21* %33, i64 -1, i32 4
  %35 = bitcast %8** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %47

38:                                               ; preds = %32
  %39 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %40 = icmp eq %21* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %21, %21* %39, i64 0, i32 2
  %43 = load %0*, %0** %42, align 8
  %44 = load %0*, %0** @reflection_exception_ptr, align 8
  %45 = icmp eq %0* %43, %44
  br i1 %45, label %73, label %46

46:                                               ; preds = %38, %41
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %73

47:                                               ; preds = %32
  %48 = bitcast %0** %3 to i8**
  store i8* %36, i8** %48, align 8
  %49 = call i32 @_array_init(%4* %1, i32 0) #9
  %50 = getelementptr inbounds i8, i8* %36, i64 120
  %51 = bitcast i8* %50 to %8*
  %52 = load i64, i64* %4, align 8
  call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* nonnull %51, i32 (%4*, i32, %72*, %73*)* nonnull @439, i32 3, %0** nonnull %3, %4* %1, i64 %52) #9
  %53 = getelementptr inbounds %21, %21* %33, i64 -1, i32 2
  %54 = bitcast %0** %53 to %4*
  %55 = getelementptr inbounds %0*, %0** %53, i64 1
  %56 = bitcast %0** %55 to i8*
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %47
  %60 = load i64, i64* %4, align 8
  %61 = and i64 %60, 256
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = bitcast %0** %53 to %21**
  %65 = load %21*, %21** %64, align 8
  %66 = getelementptr inbounds %21, %21* %65, i64 0, i32 3
  %67 = load %22*, %22** %66, align 8
  %68 = getelementptr inbounds %22, %22* %67, i64 0, i32 15
  %69 = load %8* (%4*)*, %8* (%4*)** %68, align 8
  %70 = icmp eq %8* (%4*)* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %63
  %72 = call %8* %69(%4* nonnull %54) #9
  call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %72, i32 (%4*, i32, %72*, %73*)* nonnull @440, i32 2, %0** nonnull %3, %4* %1) #9
  br label %73

73:                                               ; preds = %71, %47, %59, %63, %41, %23, %46, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @439(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readnone %3) #0 {
  %5 = alloca %4, align 8
  %6 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = bitcast %4* %0 to %71**
  %8 = load %71*, %71** %7, align 8
  %9 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, 41
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  %16 = bitcast i8* %14 to %0***
  %17 = load %0**, %0*** %16, align 8
  %18 = load %0*, %0** %17, align 8
  br label %29

19:                                               ; preds = %4
  %20 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %10 to i64
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = add i32 %10, 8
  store i32 %24, i32* %9, align 8
  %25 = bitcast i8* %23 to %0***
  %26 = load %0**, %0*** %25, align 8
  %27 = load %0*, %0** %26, align 8
  %28 = icmp ult i32 %24, 41
  br i1 %28, label %36, label %29

29:                                               ; preds = %19, %12
  %30 = phi %0* [ %18, %12 ], [ %27, %19 ]
  %31 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr i8, i8* %32, i64 8
  store i8* %33, i8** %31, align 8
  %34 = bitcast i8* %32 to %4**
  %35 = load %4*, %4** %34, align 8
  br label %51

36:                                               ; preds = %19
  %37 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %38 = load i8*, i8** %37, align 8
  %39 = sext i32 %24 to i64
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = add i32 %10, 16
  store i32 %41, i32* %9, align 8
  %42 = bitcast i8* %40 to %4**
  %43 = load %4*, %4** %42, align 8
  %44 = icmp ult i32 %41, 41
  br i1 %44, label %45, label %51

45:                                               ; preds = %36
  %46 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = sext i32 %41 to i64
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = add i32 %10, 24
  store i32 %50, i32* %9, align 8
  br label %57

51:                                               ; preds = %29, %36
  %52 = phi %4* [ %35, %29 ], [ %43, %36 ]
  %53 = phi %0* [ %30, %29 ], [ %27, %36 ]
  %54 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr i8, i8* %55, i64 8
  store i8* %56, i8** %54, align 8
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi %4* [ %43, %45 ], [ %52, %51 ]
  %59 = phi %0* [ %27, %45 ], [ %53, %51 ]
  %60 = phi i8* [ %49, %45 ], [ %55, %51 ]
  %61 = getelementptr inbounds %71, %71* %8, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 131072
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %57
  %66 = bitcast i8* %60 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i32 %62 to i64
  %69 = and i64 %67, %68
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  call fastcc void @438(%0* %59, %71* nonnull %8, %4* nonnull %5)
  %72 = call i32 @add_next_index_zval(%4* %58, %4* nonnull %5) #9
  br label %73

73:                                               ; preds = %71, %65, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @440(%4* nocapture readnone %0, i32 %1, %72* nocapture %2, %73* nocapture readonly %3) #0 {
  %5 = alloca %4, align 8
  %6 = alloca %71, align 8
  %7 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 41
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 8
  store i8* %14, i8** %12, align 8
  %15 = bitcast i8* %13 to %0***
  %16 = load %0**, %0*** %15, align 8
  %17 = load %0*, %0** %16, align 8
  br label %34

18:                                               ; preds = %4
  %19 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %9 to i64
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = add i32 %9, 8
  store i32 %23, i32* %8, align 8
  %24 = bitcast i8* %22 to %0***
  %25 = load %0**, %0*** %24, align 8
  %26 = load %0*, %0** %25, align 8
  %27 = icmp ult i32 %23, 41
  br i1 %27, label %28, label %34

28:                                               ; preds = %18
  %29 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %23 to i64
  %32 = getelementptr i8, i8* %30, i64 %31
  %33 = add i32 %9, 16
  store i32 %33, i32* %8, align 8
  br label %39

34:                                               ; preds = %11, %18
  %35 = phi %0* [ %17, %11 ], [ %26, %18 ]
  %36 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr i8, i8* %37, i64 8
  store i8* %38, i8** %36, align 8
  br label %39

39:                                               ; preds = %34, %28
  %40 = phi %0* [ %26, %28 ], [ %35, %34 ]
  %41 = phi i8* [ %32, %28 ], [ %37, %34 ]
  %42 = bitcast i8* %41 to %4**
  %43 = load %4*, %4** %42, align 8
  %44 = getelementptr inbounds %73, %73* %3, i64 0, i32 1
  %45 = load %1*, %1** %44, align 8
  %46 = icmp eq %1* %45, null
  br i1 %46, label %65, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 0
  %49 = load i8, i8* %48, align 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = tail call %71* @zend_get_property_info(%0* %40, %1* nonnull %45, i32 1) #9
  %53 = icmp eq %71* %52, null
  br i1 %53, label %54, label %65

54:                                               ; preds = %51
  %55 = bitcast %71* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #9
  %56 = getelementptr inbounds %71, %71* %6, i64 0, i32 3
  store %1* null, %1** %56, align 8
  %57 = getelementptr inbounds %71, %71* %6, i64 0, i32 1
  store i32 4096, i32* %57, align 4
  %58 = bitcast %1** %44 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %71, %71* %6, i64 0, i32 2
  %61 = bitcast %1** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %71, %71* %6, i64 0, i32 4
  store %0* %40, %0** %62, align 8
  %63 = getelementptr inbounds %71, %71* %6, i64 0, i32 0
  store i32 -1, i32* %63, align 8
  call fastcc void @438(%0* %40, %71* nonnull %6, %4* nonnull %5)
  %64 = call i32 @add_next_index_zval(%4* %43, %4* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #9
  br label %65

65:                                               ; preds = %51, %54, %47, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_hasConstant(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %1*, align 8
  %4 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 0, i32 2
  %14 = load %0*, %0** %13, align 8
  %15 = load %0*, %0** @reflection_class_ptr, align 8
  %16 = tail call zeroext i8 @instanceof_function(%0* %14, %0* %15) #9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9, %2
  %19 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %19) #9
  br label %49

20:                                               ; preds = %9
  %21 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i64 0, i64 0), %1** nonnull %3) #9
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = load %21*, %21** %11, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %33 = icmp eq %21* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %21, %21* %32, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = icmp eq %0* %36, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %31, %34
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %49

40:                                               ; preds = %25
  %41 = getelementptr inbounds i8, i8* %29, i64 176
  %42 = bitcast i8* %41 to %8*
  %43 = load %1*, %1** %3, align 8
  %44 = call zeroext i8 @zend_hash_exists(%8* nonnull %42, %1* %43) #9
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  br i1 %45, label %48, label %47

47:                                               ; preds = %40
  store i32 3, i32* %46, align 8
  br label %49

48:                                               ; preds = %40
  store i32 2, i32* %46, align 8
  br label %49

49:                                               ; preds = %34, %20, %48, %47, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getConstants(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %74, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %74, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %74

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %0*
  %28 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %29 = getelementptr inbounds i8, i8* %15, i64 192
  %30 = bitcast i8* %29 to %10**
  %31 = load %10*, %10** %30, align 8
  %32 = getelementptr inbounds i8, i8* %15, i64 200
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %10, %10* %31, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %74, label %38

38:                                               ; preds = %26
  %39 = bitcast %4* %1 to %8**
  br label %40

40:                                               ; preds = %38, %71
  %41 = phi %10* [ %31, %38 ], [ %72, %71 ]
  %42 = getelementptr inbounds %10, %10* %41, i64 0, i32 0, i32 1
  %43 = bitcast %6* %42 to i8*
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %71, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %10, %10* %41, i64 0, i32 2
  %48 = load %1*, %1** %47, align 8
  %49 = bitcast %10* %41 to %70**
  %50 = load %70*, %70** %49, align 8
  %51 = getelementptr inbounds %70, %70* %50, i64 0, i32 0
  %52 = tail call i32 @zval_update_constant_ex(%4* %51, %0* %27) #9
  %53 = icmp eq i32 %52, 0
  %54 = load %8*, %8** %39, align 8
  br i1 %53, label %55, label %69

55:                                               ; preds = %46
  %56 = tail call %4* @_zend_hash_add_new(%8* %54, %1* %48, %4* %51) #9
  %57 = getelementptr inbounds %4, %4* %56, i64 0, i32 1
  %58 = bitcast %6* %57 to %58*
  %59 = getelementptr inbounds %58, %58* %58, i64 0, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, 4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %55
  %64 = bitcast %4* %56 to %59**
  %65 = load %59*, %59** %64, align 8
  %66 = getelementptr inbounds %59, %59* %65, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 4
  br label %71

69:                                               ; preds = %46
  tail call void @zend_array_destroy(%8* %54) #9
  %70 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %70, align 8
  br label %74

71:                                               ; preds = %40, %55, %63
  %72 = getelementptr inbounds %10, %10* %41, i64 1
  %73 = icmp eq %10* %72, %36
  br i1 %73, label %74, label %40

74:                                               ; preds = %71, %26, %25, %7, %20, %69
  ret void
}

declare dso_local void @zend_array_destroy(%8*) local_unnamed_addr #2

declare dso_local %4* @_zend_hash_add_new(%8*, %1*, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getReflectionConstants(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %58, label %11

11:                                               ; preds = %2, %8
  %12 = bitcast %4* %4 to %21**
  %13 = load %21*, %21** %12, align 8
  %14 = getelementptr inbounds %21, %21* %13, i64 -1, i32 4
  %15 = bitcast %8** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %20 = icmp eq %21* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %21, %21* %19, i64 0, i32 2
  %23 = load %0*, %0** %22, align 8
  %24 = load %0*, %0** @reflection_exception_ptr, align 8
  %25 = icmp eq %0* %23, %24
  br i1 %25, label %58, label %26

26:                                               ; preds = %18, %21
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %58

27:                                               ; preds = %11
  %28 = bitcast i8* %16 to %0*
  %29 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %30 = getelementptr inbounds i8, i8* %16, i64 192
  %31 = bitcast i8* %30 to %10**
  %32 = load %10*, %10** %31, align 8
  %33 = getelementptr inbounds i8, i8* %16, i64 200
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %10, %10* %32, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %27
  %40 = bitcast %4* %3 to i8*
  %41 = bitcast %4* %1 to %8**
  br label %42

42:                                               ; preds = %39, %55
  %43 = phi %10* [ %32, %39 ], [ %56, %55 ]
  %44 = getelementptr inbounds %10, %10* %43, i64 0, i32 0, i32 1
  %45 = bitcast %6* %44 to i8*
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %10, %10* %43, i64 0, i32 2
  %50 = load %1*, %1** %49, align 8
  %51 = bitcast %10* %43 to %70**
  %52 = load %70*, %70** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  call fastcc void @441(%0* %28, %1* %50, %70* %52, %4* nonnull %3)
  %53 = load %8*, %8** %41, align 8
  %54 = call %4* @_zend_hash_next_index_insert(%8* %53, %4* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  br label %55

55:                                               ; preds = %42, %48
  %56 = getelementptr inbounds %10, %10* %43, i64 1
  %57 = icmp eq %10* %56, %37
  br i1 %57, label %58, label %42

58:                                               ; preds = %55, %27, %21, %8, %26
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @441(%0* nocapture readonly %0, %1* %1, %70* %2, %4* %3) unnamed_addr #0 {
  %5 = alloca %4, align 8
  %6 = alloca %4, align 8
  %7 = alloca %4, align 8
  %8 = alloca %4, align 8
  %9 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = bitcast %4* %5 to %1**
  store %1* %1, %1** %11, align 8
  %12 = getelementptr inbounds %1, %1* %1, i64 0, i32 0, i32 1
  %13 = bitcast %3* %12 to %57*
  %14 = getelementptr inbounds %57, %57* %13, i64 0, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %4
  %19 = getelementptr inbounds %1, %1* %1, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  store i32 %21, i32* %19, align 8
  br label %22

22:                                               ; preds = %4, %18
  %23 = phi i32 [ 5126, %18 ], [ 6, %4 ]
  %24 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %0, %0* %0, i64 0, i32 1
  %26 = load %1*, %1** %25, align 8
  %27 = bitcast %4* %6 to %1**
  store %1* %26, %1** %27, align 8
  %28 = getelementptr inbounds %1, %1* %26, i64 0, i32 0, i32 1
  %29 = bitcast %3* %28 to %57*
  %30 = getelementptr inbounds %57, %57* %29, i64 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %22
  %35 = getelementptr inbounds %1, %1* %26, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 8
  br label %38

38:                                               ; preds = %22, %34
  %39 = phi i32 [ 5126, %34 ], [ 6, %22 ]
  %40 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 %39, i32* %40, align 8
  %41 = load %0*, %0** @reflection_class_constant_ptr, align 8
  %42 = tail call i32 @_object_init_ex(%4* %3, %0* %41) #9
  %43 = bitcast %4* %3 to %21**
  %44 = load %21*, %21** %43, align 8
  %45 = getelementptr inbounds %21, %21* %44, i64 -1, i32 4
  %46 = bitcast %8** %45 to %70**
  store %70* %2, %70** %46, align 8
  %47 = getelementptr inbounds %21, %21* %44, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 7, i32* %47, align 8
  %48 = getelementptr inbounds %70, %70* %2, i64 0, i32 2
  %49 = bitcast %0** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %21, %21* %44, i64 -1, i32 5, i64 0, i32 0, i32 0
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %21, %21* %44, i64 -1, i32 5, i64 0, i32 2
  %53 = bitcast %7* %52 to i8*
  %54 = load i8, i8* %53, align 4
  %55 = and i8 %54, -2
  store i8 %55, i8* %53, align 4
  %56 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  %57 = tail call noalias i8* @_emalloc(i64 32) #10
  %58 = bitcast i8* %57 to i32*
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i32*
  store i32 6, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %57, i64 8
  %62 = bitcast i8* %61 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i32*
  store i32 1701667182, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 28
  store i8 0, i8* %65, align 1
  %66 = bitcast %4* %7 to i8**
  store i8* %57, i8** %66, align 8
  %67 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 5126, i32* %67, align 8
  call void @zend_std_write_property(%4* %3, %4* nonnull %7, %4* nonnull %5, i8** null) #9
  %68 = getelementptr inbounds %4, %4* %5, i64 0, i32 1
  %69 = bitcast %6* %68 to %58*
  %70 = getelementptr inbounds %58, %58* %69, i64 0, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, 4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %38
  %75 = bitcast %4* %5 to %59**
  %76 = load %59*, %59** %75, align 8
  %77 = getelementptr inbounds %59, %59* %76, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  store i32 %79, i32* %77, align 4
  br label %80

80:                                               ; preds = %38, %74
  call void @_zval_ptr_dtor(%4* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9
  %81 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #9
  %82 = call noalias i8* @_emalloc(i64 32) #10
  %83 = bitcast i8* %82 to i32*
  store i32 1, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 4
  %85 = bitcast i8* %84 to i32*
  store i32 6, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %82, i64 8
  %87 = bitcast i8* %86 to <2 x i64>*
  store <2 x i64> <i64 0, i64 5>, <2 x i64>* %87, align 8
  %88 = getelementptr inbounds i8, i8* %82, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i1 false) #9
  %89 = getelementptr inbounds i8, i8* %82, i64 29
  store i8 0, i8* %89, align 1
  %90 = bitcast %4* %8 to i8**
  store i8* %82, i8** %90, align 8
  %91 = getelementptr inbounds %4, %4* %8, i64 0, i32 1, i32 0
  store i32 5126, i32* %91, align 8
  call void @zend_std_write_property(%4* nonnull %3, %4* nonnull %8, %4* nonnull %6, i8** null) #9
  %92 = getelementptr inbounds %4, %4* %6, i64 0, i32 1
  %93 = bitcast %6* %92 to %58*
  %94 = getelementptr inbounds %58, %58* %93, i64 0, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = and i8 %95, 4
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %80
  %99 = bitcast %4* %6 to %59**
  %100 = load %59*, %59** %99, align 8
  %101 = getelementptr inbounds %59, %59* %100, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, -1
  store i32 %103, i32* %101, align 4
  br label %104

104:                                              ; preds = %80, %98
  call void @_zval_ptr_dtor(%4* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare dso_local %4* @_zend_hash_next_index_insert(%8*, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getConstant(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 0, i32 2
  %14 = load %0*, %0** %13, align 8
  %15 = load %0*, %0** @reflection_class_ptr, align 8
  %16 = tail call zeroext i8 @instanceof_function(%0* %14, %0* %15) #9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9, %2
  %19 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %19) #9
  br label %96

20:                                               ; preds = %9
  %21 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i64 0, i64 0), %1** nonnull %3) #9
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %96, label %25

25:                                               ; preds = %20
  %26 = load %21*, %21** %11, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %33 = icmp eq %21* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %21, %21* %32, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = icmp eq %0* %36, %37
  br i1 %38, label %96, label %39

39:                                               ; preds = %31, %34
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %96

40:                                               ; preds = %25
  %41 = bitcast i8* %29 to %0*
  %42 = getelementptr inbounds i8, i8* %29, i64 176
  %43 = bitcast i8* %42 to %8*
  %44 = getelementptr inbounds i8, i8* %29, i64 192
  %45 = bitcast i8* %44 to %10**
  %46 = load %10*, %10** %45, align 8
  %47 = getelementptr inbounds i8, i8* %29, i64 200
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %10, %10* %46, i64 %50
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %40, %65
  %54 = phi %10* [ %66, %65 ], [ %46, %40 ]
  %55 = getelementptr inbounds %10, %10* %54, i64 0, i32 0, i32 1
  %56 = bitcast %6* %55 to i8*
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %53
  %60 = bitcast %10* %54 to %70**
  %61 = load %70*, %70** %60, align 8
  %62 = getelementptr inbounds %70, %70* %61, i64 0, i32 0
  %63 = call i32 @zval_update_constant_ex(%4* %62, %0* %41) #9
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %96

65:                                               ; preds = %59, %53
  %66 = getelementptr inbounds %10, %10* %54, i64 1
  %67 = icmp eq %10* %66, %51
  br i1 %67, label %68, label %53

68:                                               ; preds = %65, %40
  %69 = load %1*, %1** %3, align 8
  %70 = call %4* @zend_hash_find(%8* nonnull %43, %1* %69) #9
  %71 = icmp eq %4* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = bitcast %4* %70 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %68, %72
  %77 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %77, align 8
  br label %96

78:                                               ; preds = %72
  %79 = bitcast i8* %74 to %59**
  %80 = load %59*, %59** %79, align 8
  %81 = getelementptr inbounds i8, i8* %74, i64 8
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = bitcast %4* %1 to %59**
  store %59* %80, %59** %84, align 8
  %85 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %83, i32* %85, align 8
  %86 = and i32 %83, 5120
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %78
  %89 = and i32 %83, 4096
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %88
  call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %59, %59* %80, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  br label %96

96:                                               ; preds = %59, %92, %91, %78, %34, %20, %76, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getReflectionConstant(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = bitcast %4* %5 to %21**
  %7 = load %21*, %21** %6, align 8
  %8 = getelementptr inbounds %21, %21* %7, i64 -1, i32 4
  %9 = bitcast %8** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %14 = icmp eq %21* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %21, %21* %13, i64 0, i32 2
  %17 = load %0*, %0** %16, align 8
  %18 = load %0*, %0** @reflection_exception_ptr, align 8
  %19 = icmp eq %0* %17, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %12, %15
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %42

21:                                               ; preds = %2
  %22 = bitcast i8* %10 to %0*
  %23 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i64 0, i64 0), %1** nonnull %3) #9
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %42, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %10, i64 176
  %29 = bitcast i8* %28 to %8*
  %30 = load %1*, %1** %3, align 8
  %31 = call %4* @zend_hash_find(%8* nonnull %29, %1* %30) #9
  %32 = icmp eq %4* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = bitcast %4* %31 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %27, %33
  %38 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %38, align 8
  br label %42

39:                                               ; preds = %33
  %40 = bitcast i8* %35 to %70*
  %41 = load %1*, %1** %3, align 8
  call fastcc void @441(%0* %22, %1* %41, %70* %40, %4* %1)
  br label %42

42:                                               ; preds = %21, %15, %39, %37, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isInstantiable(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %48, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %48

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 240
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %33, align 8
  br label %48

34:                                               ; preds = %26
  %35 = getelementptr inbounds i8, i8* %15, i64 232
  %36 = bitcast i8* %35 to %11**
  %37 = load %11*, %11** %36, align 8
  %38 = icmp eq %11* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 3, i32* %40, align 8
  br label %48

41:                                               ; preds = %34
  %42 = getelementptr inbounds %11, %11* %37, i64 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 256
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, i32 2, i32 3
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %47, align 8
  br label %48

48:                                               ; preds = %20, %7, %41, %39, %32, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isCloneable(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %4, align 8
  %4 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %100, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %100, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %100

28:                                               ; preds = %12
  %29 = bitcast i8* %17 to %0*
  %30 = getelementptr inbounds i8, i8* %17, i64 28
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 240
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %36, align 8
  br label %100

37:                                               ; preds = %28
  %38 = getelementptr inbounds %21, %21* %14, i64 -1, i32 2
  %39 = getelementptr inbounds %0*, %0** %38, i64 1
  %40 = bitcast %0** %39 to i8*
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds i8, i8* %17, i64 248
  %44 = bitcast i8* %43 to %11**
  %45 = load %11*, %11** %44, align 8
  %46 = icmp ne %11* %45, null
  br i1 %42, label %65, label %47

47:                                               ; preds = %37
  br i1 %46, label %48, label %55

48:                                               ; preds = %47
  %49 = getelementptr inbounds %11, %11* %45, i64 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 256
  %52 = icmp eq i32 %51, 0
  %53 = select i1 %52, i32 2, i32 3
  %54 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %53, i32* %54, align 8
  br label %100

55:                                               ; preds = %47
  %56 = bitcast %0** %38 to %21**
  %57 = load %21*, %21** %56, align 8
  %58 = getelementptr inbounds %21, %21* %57, i64 0, i32 3
  %59 = load %22*, %22** %58, align 8
  %60 = getelementptr inbounds %22, %22* %59, i64 0, i32 3
  %61 = load %21* (%4*)*, %21* (%4*)** %60, align 8
  %62 = icmp eq %21* (%4*)* %61, null
  %63 = select i1 %62, i32 2, i32 3
  %64 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %63, i32* %64, align 8
  br label %100

65:                                               ; preds = %37
  br i1 %46, label %66, label %73

66:                                               ; preds = %65
  %67 = getelementptr inbounds %11, %11* %45, i64 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 256
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 2, i32 3
  %72 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %71, i32* %72, align 8
  br label %100

73:                                               ; preds = %65
  %74 = call i32 @_object_init_ex(%4* nonnull %3, %0* nonnull %29) #9
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %100

76:                                               ; preds = %73
  %77 = bitcast %4* %3 to %21**
  %78 = load %21*, %21** %77, align 8
  %79 = getelementptr inbounds %21, %21* %78, i64 0, i32 3
  %80 = load %22*, %22** %79, align 8
  %81 = getelementptr inbounds %22, %22* %80, i64 0, i32 3
  %82 = load %21* (%4*)*, %21* (%4*)** %81, align 8
  %83 = icmp eq %21* (%4*)* %82, null
  %84 = select i1 %83, i32 2, i32 3
  %85 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %84, i32* %85, align 8
  %86 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %87 = bitcast %6* %86 to %58*
  %88 = getelementptr inbounds %58, %58* %87, i64 0, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = and i8 %89, 4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %76
  %93 = getelementptr inbounds %21, %21* %78, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, -1
  store i32 %95, i32* %93, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = bitcast %4* %3 to %59**
  %99 = load %59*, %59** %98, align 8
  call void @_zval_dtor_func(%59* %99) #9
  br label %100

100:                                              ; preds = %97, %92, %76, %73, %22, %9, %66, %55, %48, %35, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isInterface(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 64
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isTrait(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = trunc i32 %29 to i8
  %31 = icmp sgt i8 %30, -1
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isFinal(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 4
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isAbstract(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 48
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getModifiers(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 52
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isInstance(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %4*, align 8
  %4 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 0, i32 2
  %14 = load %0*, %0** %13, align 8
  %15 = load %0*, %0** @reflection_class_ptr, align 8
  %16 = tail call zeroext i8 @instanceof_function(%0* %14, %0* %15) #9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9, %2
  %19 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %19) #9
  br label %51

20:                                               ; preds = %9
  %21 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i64 0, i64 0), %4** nonnull %3) #9
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %51, label %25

25:                                               ; preds = %20
  %26 = load %21*, %21** %11, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %33 = icmp eq %21* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %21, %21* %32, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = icmp eq %0* %36, %37
  br i1 %38, label %51, label %39

39:                                               ; preds = %31, %34
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %51

40:                                               ; preds = %25
  %41 = bitcast i8* %29 to %0*
  %42 = bitcast %4** %3 to %21***
  %43 = load %21**, %21*** %42, align 8
  %44 = load %21*, %21** %43, align 8
  %45 = getelementptr inbounds %21, %21* %44, i64 0, i32 2
  %46 = load %0*, %0** %45, align 8
  %47 = call zeroext i8 @instanceof_function(%0* %46, %0* %41) #9
  %48 = icmp eq i8 %47, 0
  %49 = select i1 %48, i32 2, i32 3
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %34, %20, %40, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_newInstance(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %60, align 8
  %7 = alloca %61, align 8
  %8 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %10 = bitcast %6* %9 to i8*
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %15 = bitcast %4* %14 to %21**
  %16 = load %21*, %21** %15, align 8
  %17 = getelementptr inbounds %21, %21* %16, i64 0, i32 2
  %18 = load %0*, %0** %17, align 8
  %19 = load %0*, %0** @reflection_class_ptr, align 8
  %20 = tail call zeroext i8 @instanceof_function(%0* %18, %0* %19) #9
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %13, %2
  %23 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %23) #9
  br label %223

24:                                               ; preds = %13
  %25 = load %21*, %21** %15, align 8
  %26 = getelementptr inbounds %21, %21* %25, i64 -1, i32 4
  %27 = bitcast %8** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %32 = icmp eq %21* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %21, %21* %31, i64 0, i32 2
  %35 = load %0*, %0** %34, align 8
  %36 = load %0*, %0** @reflection_exception_ptr, align 8
  %37 = icmp eq %0* %35, %36
  br i1 %37, label %223, label %38

38:                                               ; preds = %30, %33
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %223

39:                                               ; preds = %24
  %40 = bitcast i8* %28 to %0*
  %41 = tail call i32 @_object_init_ex(%4* %1, %0* %40) #9
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %223

43:                                               ; preds = %39
  %44 = load i64, i64* bitcast (%0** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 17) to i64*), align 8
  store i8* %28, i8** bitcast (%0** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 17) to i8**), align 8
  %45 = bitcast %4* %1 to %21**
  %46 = load %21*, %21** %45, align 8
  %47 = getelementptr inbounds %21, %21* %46, i64 0, i32 3
  %48 = load %22*, %22** %47, align 8
  %49 = getelementptr inbounds %22, %22* %48, i64 0, i32 18
  %50 = load %11* (%21*)*, %11* (%21*)** %49, align 8
  %51 = tail call %11* %50(%21* %46) #9
  store i64 %44, i64* bitcast (%0** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 17) to i64*), align 8
  %52 = icmp eq %11* %51, null
  br i1 %52, label %212, label %53

53:                                               ; preds = %43
  %54 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  store %4* null, %4** %4, align 8
  %55 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #9
  store i32 0, i32* %5, align 4
  %56 = bitcast %60* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #9
  %57 = getelementptr inbounds %61, %61* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #9
  %58 = getelementptr inbounds %11, %11* %51, i64 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 256
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %86

62:                                               ; preds = %53
  %63 = load %0*, %0** @reflection_exception_ptr, align 8
  %64 = getelementptr inbounds i8, i8* %28, i64 8
  %65 = bitcast i8* %64 to %1**
  %66 = load %1*, %1** %65, align 8
  %67 = getelementptr inbounds %1, %1* %66, i64 0, i32 3, i64 0
  %68 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %63, i64 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @57, i64 0, i64 0), i8* nonnull %67) #9
  %69 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %70 = bitcast %6* %69 to %58*
  %71 = getelementptr inbounds %58, %58* %70, i64 0, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, 4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %62
  %76 = bitcast %4* %1 to %59**
  %77 = load %59*, %59** %76, align 8
  %78 = getelementptr inbounds %59, %59* %77, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, -1
  store i32 %80, i32* %78, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %75
  %83 = load %59*, %59** %76, align 8
  tail call void @_zval_dtor_func(%59* %83) #9
  br label %84

84:                                               ; preds = %62, %75, %82
  %85 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %223

86:                                               ; preds = %53
  %87 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i64 0, i64 0), %4** nonnull %4, i32* nonnull %5) #9
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %100, label %91

91:                                               ; preds = %86
  %92 = load i32, i32* %5, align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = bitcast %4** %4 to i64*
  %96 = load i64, i64* %95, align 8
  br label %140

97:                                               ; preds = %91
  %98 = load %4*, %4** %4, align 8
  %99 = ptrtoint %4* %98 to i64
  br label %118

100:                                              ; preds = %86
  %101 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %102 = bitcast %6* %101 to %58*
  %103 = getelementptr inbounds %58, %58* %102, i64 0, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = and i8 %104, 4
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %100
  %108 = bitcast %4* %1 to %59**
  %109 = load %59*, %59** %108, align 8
  %110 = getelementptr inbounds %59, %59* %109, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, -1
  store i32 %112, i32* %110, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %107
  %115 = load %59*, %59** %108, align 8
  call void @_zval_dtor_func(%59* %115) #9
  br label %116

116:                                              ; preds = %100, %107, %114
  %117 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %223

118:                                              ; preds = %97, %135
  %119 = phi i32 [ %92, %97 ], [ %136, %135 ]
  %120 = phi i64 [ 0, %97 ], [ %137, %135 ]
  %121 = getelementptr inbounds %4, %4* %98, i64 %120, i32 1
  %122 = bitcast %6* %121 to %58*
  %123 = getelementptr inbounds %58, %58* %122, i64 0, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = and i8 %124, 4
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %4, %4* %98, i64 %120
  %129 = bitcast %4* %128 to %59**
  %130 = load %59*, %59** %129, align 8
  %131 = getelementptr inbounds %59, %59* %130, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 4
  %134 = load i32, i32* %5, align 4
  br label %135

135:                                              ; preds = %118, %127
  %136 = phi i32 [ %119, %118 ], [ %134, %127 ]
  %137 = add nuw nsw i64 %120, 1
  %138 = sext i32 %136 to i64
  %139 = icmp slt i64 %137, %138
  br i1 %139, label %118, label %140

140:                                              ; preds = %135, %94
  %141 = phi i64 [ %96, %94 ], [ %99, %135 ]
  %142 = phi i32 [ %92, %94 ], [ %136, %135 ]
  %143 = getelementptr inbounds %60, %60* %6, i64 0, i32 0
  store i64 56, i64* %143, align 8
  %144 = getelementptr inbounds %60, %60* %6, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %144, align 8
  %145 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %60, %60* %6, i64 0, i32 4
  %148 = bitcast %21** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = getelementptr inbounds %60, %60* %6, i64 0, i32 2
  store %4* %3, %4** %149, align 8
  %150 = getelementptr inbounds %60, %60* %6, i64 0, i32 6
  store i32 %142, i32* %150, align 4
  %151 = getelementptr inbounds %60, %60* %6, i64 0, i32 3
  %152 = bitcast %4** %151 to i64*
  store i64 %141, i64* %152, align 8
  %153 = getelementptr inbounds %60, %60* %6, i64 0, i32 5
  store i8 1, i8* %153, align 8
  store i8 1, i8* %57, align 8
  %154 = getelementptr inbounds %61, %61* %7, i64 0, i32 1
  store %11* %51, %11** %154, align 8
  %155 = call %0* @zend_get_executed_scope() #9
  %156 = getelementptr inbounds %61, %61* %7, i64 0, i32 2
  store %0* %155, %0** %156, align 8
  %157 = load %21*, %21** %45, align 8
  %158 = getelementptr inbounds %21, %21* %157, i64 0, i32 2
  %159 = bitcast %0** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %61, %61* %7, i64 0, i32 3
  %162 = bitcast %0** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = ptrtoint %21* %157 to i64
  %164 = getelementptr inbounds %61, %61* %7, i64 0, i32 4
  %165 = bitcast %21** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = call i32 @zend_call_function(%60* nonnull %6, %61* nonnull %7) #9
  call void @_zval_ptr_dtor(%4* nonnull %3) #9
  %167 = load i32, i32* %5, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %177

169:                                              ; preds = %140, %169
  %170 = phi i64 [ %173, %169 ], [ 0, %140 ]
  %171 = load %4*, %4** %4, align 8
  %172 = getelementptr inbounds %4, %4* %171, i64 %170
  call void @_zval_ptr_dtor(%4* %172) #9
  %173 = add nuw nsw i64 %170, 1
  %174 = load i32, i32* %5, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %173, %175
  br i1 %176, label %169, label %177

177:                                              ; preds = %169, %140
  %178 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %179 = icmp eq %21* %178, null
  br i1 %179, label %187, label %180

180:                                              ; preds = %177
  %181 = load %21*, %21** %45, align 8
  %182 = getelementptr inbounds %21, %21* %181, i64 0, i32 0, i32 1
  %183 = bitcast %3* %182 to %57*
  %184 = getelementptr inbounds %57, %57* %183, i64 0, i32 1
  %185 = load i8, i8* %184, align 1
  %186 = or i8 %185, 8
  store i8 %186, i8* %184, align 1
  br label %187

187:                                              ; preds = %177, %180
  %188 = icmp eq i32 %166, -1
  br i1 %188, label %189, label %211

189:                                              ; preds = %187
  %190 = getelementptr inbounds i8, i8* %28, i64 8
  %191 = bitcast i8* %190 to %1**
  %192 = load %1*, %1** %191, align 8
  %193 = getelementptr inbounds %1, %1* %192, i64 0, i32 3, i64 0
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @58, i64 0, i64 0), i8* nonnull %193) #9
  %194 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %195 = bitcast %6* %194 to %58*
  %196 = getelementptr inbounds %58, %58* %195, i64 0, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = and i8 %197, 4
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %209, label %200

200:                                              ; preds = %189
  %201 = bitcast %4* %1 to %59**
  %202 = load %59*, %59** %201, align 8
  %203 = getelementptr inbounds %59, %59* %202, i64 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = add i32 %204, -1
  store i32 %205, i32* %203, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %200
  %208 = load %59*, %59** %201, align 8
  call void @_zval_dtor_func(%59* %208) #9
  br label %209

209:                                              ; preds = %189, %200, %207
  %210 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %210, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %223

211:                                              ; preds = %187
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  br label %223

212:                                              ; preds = %43
  %213 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %223, label %216

216:                                              ; preds = %212
  %217 = load %0*, %0** @reflection_exception_ptr, align 8
  %218 = getelementptr inbounds i8, i8* %28, i64 8
  %219 = bitcast i8* %218 to %1**
  %220 = load %1*, %1** %219, align 8
  %221 = getelementptr inbounds %1, %1* %220, i64 0, i32 3, i64 0
  %222 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %217, i64 0, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @59, i64 0, i64 0), i8* nonnull %221) #9
  br label %223

223:                                              ; preds = %216, %212, %211, %84, %209, %116, %39, %33, %38, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_newInstanceWithoutConstructor(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %4 = bitcast %6* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %9 = bitcast %4* %8 to %21**
  %10 = load %21*, %21** %9, align 8
  %11 = getelementptr inbounds %21, %21* %10, i64 0, i32 2
  %12 = load %0*, %0** %11, align 8
  %13 = load %0*, %0** @reflection_class_ptr, align 8
  %14 = tail call zeroext i8 @instanceof_function(%0* %12, %0* %13) #9
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7, %2
  %17 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %17) #9
  br label %54

18:                                               ; preds = %7
  %19 = load %21*, %21** %9, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %54, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %54

33:                                               ; preds = %18
  %34 = bitcast i8* %22 to %0*
  %35 = getelementptr inbounds i8, i8* %22, i64 392
  %36 = bitcast i8* %35 to %21* (%0*)**
  %37 = load %21* (%0*)*, %21* (%0*)** %36, align 8
  %38 = icmp eq %21* (%0*)* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %22, i64 28
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = load %0*, %0** @reflection_exception_ptr, align 8
  %47 = getelementptr inbounds i8, i8* %22, i64 8
  %48 = bitcast i8* %47 to %1**
  %49 = load %1*, %1** %48, align 8
  %50 = getelementptr inbounds %1, %1* %49, i64 0, i32 3, i64 0
  %51 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %46, i64 0, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @60, i64 0, i64 0), i8* nonnull %50) #9
  br label %54

52:                                               ; preds = %39, %33
  %53 = tail call i32 @_object_init_ex(%4* %1, %0* %34) #9
  br label %54

54:                                               ; preds = %27, %52, %45, %32, %16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_newInstanceArgs(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %8*, align 8
  %5 = alloca %60, align 8
  %6 = alloca %61, align 8
  %7 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %10 = bitcast %6* %9 to i8*
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %15 = bitcast %4* %14 to %21**
  %16 = load %21*, %21** %15, align 8
  %17 = getelementptr inbounds %21, %21* %16, i64 0, i32 2
  %18 = load %0*, %0** %17, align 8
  %19 = load %0*, %0** @reflection_class_ptr, align 8
  %20 = tail call zeroext i8 @instanceof_function(%0* %18, %0* %19) #9
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %13, %2
  %23 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %23) #9
  br label %222

24:                                               ; preds = %13
  %25 = load %21*, %21** %15, align 8
  %26 = getelementptr inbounds %21, %21* %25, i64 -1, i32 4
  %27 = bitcast %8** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %32 = icmp eq %21* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %21, %21* %31, i64 0, i32 2
  %35 = load %0*, %0** %34, align 8
  %36 = load %0*, %0** @reflection_exception_ptr, align 8
  %37 = icmp eq %0* %35, %36
  br i1 %37, label %222, label %38

38:                                               ; preds = %30, %33
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %222

39:                                               ; preds = %24
  %40 = bitcast i8* %28 to %0*
  %41 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @61, i64 0, i64 0), %8** nonnull %4) #9
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %222, label %45

45:                                               ; preds = %39
  %46 = load i32, i32* %41, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = load %8*, %8** %4, align 8
  %50 = getelementptr inbounds %8, %8* %49, i64 0, i32 5
  %51 = load i32, i32* %50, align 4
  br label %52

52:                                               ; preds = %45, %48
  %53 = phi i32 [ %51, %48 ], [ 0, %45 ]
  %54 = call i32 @_object_init_ex(%4* %1, %0* %40) #9
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %222

56:                                               ; preds = %52
  %57 = load i64, i64* bitcast (%0** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 17) to i64*), align 8
  store i8* %28, i8** bitcast (%0** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 17) to i8**), align 8
  %58 = bitcast %4* %1 to %21**
  %59 = load %21*, %21** %58, align 8
  %60 = getelementptr inbounds %21, %21* %59, i64 0, i32 3
  %61 = load %22*, %22** %60, align 8
  %62 = getelementptr inbounds %22, %22* %61, i64 0, i32 18
  %63 = load %11* (%21*)*, %11* (%21*)** %62, align 8
  %64 = call %11* %63(%21* %59) #9
  store i64 %57, i64* bitcast (%0** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 17) to i64*), align 8
  %65 = icmp eq %11* %64, null
  br i1 %65, label %213, label %66

66:                                               ; preds = %56
  %67 = bitcast %60* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %67) #9
  %68 = getelementptr inbounds %61, %61* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %68) #9
  %69 = getelementptr inbounds %11, %11* %64, i64 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 256
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %97

73:                                               ; preds = %66
  %74 = load %0*, %0** @reflection_exception_ptr, align 8
  %75 = getelementptr inbounds i8, i8* %28, i64 8
  %76 = bitcast i8* %75 to %1**
  %77 = load %1*, %1** %76, align 8
  %78 = getelementptr inbounds %1, %1* %77, i64 0, i32 3, i64 0
  %79 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %74, i64 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @57, i64 0, i64 0), i8* nonnull %78) #9
  %80 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %81 = bitcast %6* %80 to %58*
  %82 = getelementptr inbounds %58, %58* %81, i64 0, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = and i8 %83, 4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %73
  %87 = bitcast %4* %1 to %59**
  %88 = load %59*, %59** %87, align 8
  %89 = getelementptr inbounds %59, %59* %88, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -1
  store i32 %91, i32* %89, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86
  %94 = load %59*, %59** %87, align 8
  call void @_zval_dtor_func(%59* %94) #9
  br label %95

95:                                               ; preds = %73, %86, %93
  %96 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %67) #9
  br label %222

97:                                               ; preds = %66
  %98 = icmp eq i32 %53, 0
  br i1 %98, label %139, label %99

99:                                               ; preds = %97
  %100 = sext i32 %53 to i64
  %101 = call noalias i8* @_safe_emalloc(i64 16, i64 %100, i64 0) #9
  %102 = bitcast i8* %101 to %4*
  %103 = load %8*, %8** %4, align 8
  %104 = getelementptr inbounds %8, %8* %103, i64 0, i32 3
  %105 = load %10*, %10** %104, align 8
  %106 = getelementptr inbounds %8, %8* %103, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %10, %10* %105, i64 %108
  %110 = icmp eq i32 %107, 0
  br i1 %110, label %139, label %111

111:                                              ; preds = %99, %135
  %112 = phi i32 [ %136, %135 ], [ 0, %99 ]
  %113 = phi %10* [ %137, %135 ], [ %105, %99 ]
  %114 = getelementptr inbounds %10, %10* %113, i64 0, i32 0, i32 1
  %115 = bitcast %6* %114 to i8*
  %116 = load i8, i8* %115, align 8
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %135, label %118

118:                                              ; preds = %111
  %119 = sext i32 %112 to i64
  %120 = getelementptr inbounds %4, %4* %102, i64 %119
  %121 = bitcast %10* %113 to %59**
  %122 = load %59*, %59** %121, align 8
  %123 = getelementptr inbounds %10, %10* %113, i64 0, i32 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = bitcast %4* %120 to %59**
  store %59* %122, %59** %125, align 8
  %126 = getelementptr inbounds %4, %4* %102, i64 %119, i32 1, i32 0
  store i32 %124, i32* %126, align 8
  %127 = and i32 %124, 1024
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %59, %59* %122, i64 0, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  br label %133

133:                                              ; preds = %118, %129
  %134 = add nsw i32 %112, 1
  br label %135

135:                                              ; preds = %111, %133
  %136 = phi i32 [ %134, %133 ], [ %112, %111 ]
  %137 = getelementptr inbounds %10, %10* %113, i64 1
  %138 = icmp eq %10* %137, %109
  br i1 %138, label %139, label %111

139:                                              ; preds = %135, %99, %97
  %140 = phi i8* [ null, %97 ], [ %101, %99 ], [ %101, %135 ]
  %141 = phi %4* [ null, %97 ], [ %102, %99 ], [ %102, %135 ]
  %142 = phi i32 [ 0, %97 ], [ 0, %99 ], [ %136, %135 ]
  %143 = getelementptr inbounds %60, %60* %5, i64 0, i32 0
  store i64 56, i64* %143, align 8
  %144 = getelementptr inbounds %60, %60* %5, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %144, align 8
  %145 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %60, %60* %5, i64 0, i32 4
  %148 = bitcast %21** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = getelementptr inbounds %60, %60* %5, i64 0, i32 2
  store %4* %3, %4** %149, align 8
  %150 = getelementptr inbounds %60, %60* %5, i64 0, i32 6
  store i32 %142, i32* %150, align 4
  %151 = getelementptr inbounds %60, %60* %5, i64 0, i32 3
  %152 = bitcast %4** %151 to i8**
  store i8* %140, i8** %152, align 8
  %153 = getelementptr inbounds %60, %60* %5, i64 0, i32 5
  store i8 1, i8* %153, align 8
  store i8 1, i8* %68, align 8
  %154 = getelementptr inbounds %61, %61* %6, i64 0, i32 1
  store %11* %64, %11** %154, align 8
  %155 = call %0* @zend_get_executed_scope() #9
  %156 = getelementptr inbounds %61, %61* %6, i64 0, i32 2
  store %0* %155, %0** %156, align 8
  %157 = load %21*, %21** %58, align 8
  %158 = getelementptr inbounds %21, %21* %157, i64 0, i32 2
  %159 = bitcast %0** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %61, %61* %6, i64 0, i32 3
  %162 = bitcast %0** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = ptrtoint %21* %157 to i64
  %164 = getelementptr inbounds %61, %61* %6, i64 0, i32 4
  %165 = bitcast %21** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = call i32 @zend_call_function(%60* nonnull %5, %61* nonnull %6) #9
  call void @_zval_ptr_dtor(%4* nonnull %3) #9
  %167 = icmp eq %4* %141, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %139
  %169 = icmp sgt i32 %142, 0
  br i1 %169, label %170, label %177

170:                                              ; preds = %168
  %171 = zext i32 %142 to i64
  br label %172

172:                                              ; preds = %172, %170
  %173 = phi i64 [ 0, %170 ], [ %175, %172 ]
  %174 = getelementptr inbounds %4, %4* %141, i64 %173
  call void @_zval_ptr_dtor(%4* nonnull %174) #9
  %175 = add nuw nsw i64 %173, 1
  %176 = icmp eq i64 %175, %171
  br i1 %176, label %177, label %172

177:                                              ; preds = %172, %168
  call void @_efree(i8* %140) #9
  br label %178

178:                                              ; preds = %139, %177
  %179 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %180 = icmp eq %21* %179, null
  br i1 %180, label %188, label %181

181:                                              ; preds = %178
  %182 = load %21*, %21** %58, align 8
  %183 = getelementptr inbounds %21, %21* %182, i64 0, i32 0, i32 1
  %184 = bitcast %3* %183 to %57*
  %185 = getelementptr inbounds %57, %57* %184, i64 0, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = or i8 %186, 8
  store i8 %187, i8* %185, align 1
  br label %188

188:                                              ; preds = %178, %181
  %189 = icmp eq i32 %166, -1
  br i1 %189, label %190, label %212

190:                                              ; preds = %188
  call void @_zval_ptr_dtor(%4* nonnull %3) #9
  %191 = getelementptr inbounds i8, i8* %28, i64 8
  %192 = bitcast i8* %191 to %1**
  %193 = load %1*, %1** %192, align 8
  %194 = getelementptr inbounds %1, %1* %193, i64 0, i32 3, i64 0
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @58, i64 0, i64 0), i8* nonnull %194) #9
  %195 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %196 = bitcast %6* %195 to %58*
  %197 = getelementptr inbounds %58, %58* %196, i64 0, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = and i8 %198, 4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %210, label %201

201:                                              ; preds = %190
  %202 = bitcast %4* %1 to %59**
  %203 = load %59*, %59** %202, align 8
  %204 = getelementptr inbounds %59, %59* %203, i64 0, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = add i32 %205, -1
  store i32 %206, i32* %204, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %201
  %209 = load %59*, %59** %202, align 8
  call void @_zval_dtor_func(%59* %209) #9
  br label %210

210:                                              ; preds = %190, %201, %208
  %211 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %211, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %67) #9
  br label %222

212:                                              ; preds = %188
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %67) #9
  br label %222

213:                                              ; preds = %56
  %214 = icmp eq i32 %53, 0
  br i1 %214, label %222, label %215

215:                                              ; preds = %213
  %216 = load %0*, %0** @reflection_exception_ptr, align 8
  %217 = getelementptr inbounds i8, i8* %28, i64 8
  %218 = bitcast i8* %217 to %1**
  %219 = load %1*, %1** %218, align 8
  %220 = getelementptr inbounds %1, %1* %219, i64 0, i32 3, i64 0
  %221 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %216, i64 0, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @59, i64 0, i64 0), i8* nonnull %220) #9
  br label %222

222:                                              ; preds = %215, %213, %212, %95, %210, %52, %39, %33, %38, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getInterfaces(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %54, label %11

11:                                               ; preds = %2, %8
  %12 = bitcast %4* %4 to %21**
  %13 = load %21*, %21** %12, align 8
  %14 = getelementptr inbounds %21, %21* %13, i64 -1, i32 4
  %15 = bitcast %8** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %20 = icmp eq %21* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %21, %21* %19, i64 0, i32 2
  %23 = load %0*, %0** %22, align 8
  %24 = load %0*, %0** @reflection_exception_ptr, align 8
  %25 = icmp eq %0* %23, %24
  br i1 %25, label %54, label %26

26:                                               ; preds = %18, %21
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %54

27:                                               ; preds = %11
  %28 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %29 = getelementptr inbounds i8, i8* %16, i64 440
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %54, label %33

33:                                               ; preds = %27
  %34 = bitcast %4* %3 to i8*
  %35 = getelementptr inbounds i8, i8* %16, i64 448
  %36 = bitcast i8* %35 to %0***
  %37 = bitcast %4* %1 to %8**
  br label %38

38:                                               ; preds = %33, %38
  %39 = phi i64 [ 0, %33 ], [ %50, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %40 = load %0**, %0*** %36, align 8
  %41 = getelementptr inbounds %0*, %0** %40, i64 %39
  %42 = load %0*, %0** %41, align 8
  call void @zend_reflection_class_factory(%0* %42, %4* nonnull %3)
  %43 = load %8*, %8** %37, align 8
  %44 = load %0**, %0*** %36, align 8
  %45 = getelementptr inbounds %0*, %0** %44, i64 %39
  %46 = load %0*, %0** %45, align 8
  %47 = getelementptr inbounds %0, %0* %46, i64 0, i32 1
  %48 = load %1*, %1** %47, align 8
  %49 = call %4* @_zend_hash_update(%8* %43, %1* %48, %4* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  %50 = add nuw nsw i64 %39, 1
  %51 = load i32, i32* %30, align 8
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %38, label %54

54:                                               ; preds = %38, %27, %21, %8, %26
  ret void
}

declare dso_local %4* @_zend_hash_update(%8*, %1*, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getInterfaceNames(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %58, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %58, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %58

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = getelementptr inbounds i8, i8* %15, i64 440
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %15, i64 448
  %34 = bitcast i8* %33 to %0***
  br label %35

35:                                               ; preds = %32, %52
  %36 = phi i64 [ 0, %32 ], [ %54, %52 ]
  %37 = load %0**, %0*** %34, align 8
  %38 = getelementptr inbounds %0*, %0** %37, i64 %36
  %39 = load %0*, %0** %38, align 8
  %40 = getelementptr inbounds %0, %0* %39, i64 0, i32 1
  %41 = load %1*, %1** %40, align 8
  %42 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 1
  %43 = bitcast %3* %42 to %57*
  %44 = getelementptr inbounds %57, %57* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  br label %52

52:                                               ; preds = %35, %48
  %53 = tail call i32 @add_next_index_str(%4* %1, %1* %41) #9
  %54 = add nuw nsw i64 %36, 1
  %55 = load i32, i32* %29, align 8
  %56 = zext i32 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %35, label %58

58:                                               ; preds = %52, %26, %20, %7, %25
  ret void
}

declare dso_local i32 @add_next_index_str(%4*, %1*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getTraits(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %54, label %11

11:                                               ; preds = %2, %8
  %12 = bitcast %4* %4 to %21**
  %13 = load %21*, %21** %12, align 8
  %14 = getelementptr inbounds %21, %21* %13, i64 -1, i32 4
  %15 = bitcast %8** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %20 = icmp eq %21* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %21, %21* %19, i64 0, i32 2
  %23 = load %0*, %0** %22, align 8
  %24 = load %0*, %0** @reflection_exception_ptr, align 8
  %25 = icmp eq %0* %23, %24
  br i1 %25, label %54, label %26

26:                                               ; preds = %18, %21
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %54

27:                                               ; preds = %11
  %28 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %29 = getelementptr inbounds i8, i8* %16, i64 444
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %54, label %33

33:                                               ; preds = %27
  %34 = bitcast %4* %3 to i8*
  %35 = getelementptr inbounds i8, i8* %16, i64 456
  %36 = bitcast i8* %35 to %0***
  %37 = bitcast %4* %1 to %8**
  br label %38

38:                                               ; preds = %33, %38
  %39 = phi i64 [ 0, %33 ], [ %50, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %40 = load %0**, %0*** %36, align 8
  %41 = getelementptr inbounds %0*, %0** %40, i64 %39
  %42 = load %0*, %0** %41, align 8
  call void @zend_reflection_class_factory(%0* %42, %4* nonnull %3)
  %43 = load %8*, %8** %37, align 8
  %44 = load %0**, %0*** %36, align 8
  %45 = getelementptr inbounds %0*, %0** %44, i64 %39
  %46 = load %0*, %0** %45, align 8
  %47 = getelementptr inbounds %0, %0* %46, i64 0, i32 1
  %48 = load %1*, %1** %47, align 8
  %49 = call %4* @_zend_hash_update(%8* %43, %1* %48, %4* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  %50 = add nuw nsw i64 %39, 1
  %51 = load i32, i32* %30, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %38, label %54

54:                                               ; preds = %38, %27, %21, %8, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getTraitNames(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %58, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %58, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %58

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = getelementptr inbounds i8, i8* %15, i64 444
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %15, i64 456
  %34 = bitcast i8* %33 to %0***
  br label %35

35:                                               ; preds = %32, %52
  %36 = phi i64 [ 0, %32 ], [ %54, %52 ]
  %37 = load %0**, %0*** %34, align 8
  %38 = getelementptr inbounds %0*, %0** %37, i64 %36
  %39 = load %0*, %0** %38, align 8
  %40 = getelementptr inbounds %0, %0* %39, i64 0, i32 1
  %41 = load %1*, %1** %40, align 8
  %42 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 1
  %43 = bitcast %3* %42 to %57*
  %44 = getelementptr inbounds %57, %57* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = getelementptr inbounds %1, %1* %41, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  br label %52

52:                                               ; preds = %35, %48
  %53 = tail call i32 @add_next_index_str(%4* %1, %1* %41) #9
  %54 = add nuw nsw i64 %36, 1
  %55 = load i32, i32* %29, align 4
  %56 = zext i32 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %35, label %58

58:                                               ; preds = %52, %26, %20, %7, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getTraitAliases(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %95, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %95, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %95

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = getelementptr inbounds i8, i8* %15, i64 464
  %29 = bitcast i8* %28 to %26***
  %30 = load %26**, %26*** %29, align 8
  %31 = icmp eq %26** %30, null
  br i1 %31, label %95, label %32

32:                                               ; preds = %26
  %33 = load %26*, %26** %30, align 8
  %34 = icmp eq %26* %33, null
  br i1 %34, label %95, label %35

35:                                               ; preds = %32, %88
  %36 = phi %26** [ %89, %88 ], [ %30, %32 ]
  %37 = phi %26* [ %93, %88 ], [ %33, %32 ]
  %38 = phi i64 [ %91, %88 ], [ 0, %32 ]
  %39 = phi i32 [ %90, %88 ], [ 0, %32 ]
  %40 = getelementptr inbounds %26, %26* %37, i64 0, i32 0
  %41 = load %27*, %27** %40, align 8
  %42 = getelementptr inbounds %26, %26* %37, i64 0, i32 1
  %43 = load %1*, %1** %42, align 8
  %44 = icmp eq %1* %43, null
  br i1 %44, label %88, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %27, %27* %41, i64 0, i32 1
  %47 = load %0*, %0** %46, align 8
  %48 = getelementptr inbounds %0, %0* %47, i64 0, i32 1
  %49 = load %1*, %1** %48, align 8
  %50 = getelementptr inbounds %1, %1* %49, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %27, %27* %41, i64 0, i32 0
  %53 = load %1*, %1** %52, align 8
  %54 = getelementptr inbounds %1, %1* %53, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, %51
  %57 = add i64 %56, 2
  %58 = add i64 %56, 34
  %59 = and i64 %58, -8
  %60 = tail call noalias i8* @_emalloc(i64 %59) #10
  %61 = bitcast i8* %60 to %1*
  %62 = bitcast i8* %60 to i32*
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %60, i64 4
  %64 = bitcast i8* %63 to i32*
  store i32 6, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %60, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 %57, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %60, i64 24
  %70 = add i64 %56, 3
  %71 = load %0*, %0** %46, align 8
  %72 = getelementptr inbounds %0, %0* %71, i64 0, i32 1
  %73 = load %1*, %1** %72, align 8
  %74 = getelementptr inbounds %1, %1* %73, i64 0, i32 3, i64 0
  %75 = load %1*, %1** %52, align 8
  %76 = getelementptr inbounds %1, %1* %75, i64 0, i32 3, i64 0
  %77 = tail call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* nonnull %69, i64 %70, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i64 0, i64 0), i8* nonnull %74, i8* nonnull %76) #9
  %78 = load %26**, %26*** %29, align 8
  %79 = getelementptr inbounds %26*, %26** %78, i64 %38
  %80 = load %26*, %26** %79, align 8
  %81 = getelementptr inbounds %26, %26* %80, i64 0, i32 1
  %82 = load %1*, %1** %81, align 8
  %83 = getelementptr inbounds %1, %1* %82, i64 0, i32 3, i64 0
  %84 = getelementptr inbounds %1, %1* %82, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = tail call i32 @add_assoc_str_ex(%4* %1, i8* nonnull %83, i64 %85, %1* %61) #9
  %87 = load %26**, %26*** %29, align 8
  br label %88

88:                                               ; preds = %35, %45
  %89 = phi %26** [ %36, %35 ], [ %87, %45 ]
  %90 = add i32 %39, 1
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %26*, %26** %89, i64 %91
  %93 = load %26*, %26** %92, align 8
  %94 = icmp eq %26* %93, null
  br i1 %94, label %95, label %35

95:                                               ; preds = %88, %32, %26, %20, %7, %25
  ret void
}

declare dso_local i32 @ap_php_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @add_assoc_str_ex(%4*, i8*, i64, %1*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getParentClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to %0**
  %29 = load %0*, %0** %28, align 8
  %30 = icmp eq %0* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @zend_reflection_class_factory(%0* nonnull %29, %4* %1)
  br label %34

32:                                               ; preds = %26
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %31, %32, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isSubclassOf(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %4*, align 8
  %4 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 0, i32 2
  %14 = load %0*, %0** %13, align 8
  %15 = load %0*, %0** @reflection_class_ptr, align 8
  %16 = tail call zeroext i8 @instanceof_function(%0* %14, %0* %15) #9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9, %2
  %19 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %19) #9
  br label %90

20:                                               ; preds = %9
  %21 = load %21*, %21** %11, align 8
  %22 = getelementptr inbounds %21, %21* %21, i64 -1, i32 4
  %23 = bitcast %8** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %20
  %27 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %28 = icmp eq %21* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %21, %21* %27, i64 0, i32 2
  %31 = load %0*, %0** %30, align 8
  %32 = load %0*, %0** @reflection_exception_ptr, align 8
  %33 = icmp eq %0* %31, %32
  br i1 %33, label %90, label %34

34:                                               ; preds = %26, %29
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %90

35:                                               ; preds = %20
  %36 = bitcast i8* %24 to %0*
  %37 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @63, i64 0, i64 0), %4** nonnull %3) #9
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %90, label %41

41:                                               ; preds = %35
  %42 = load %4*, %4** %3, align 8
  %43 = getelementptr inbounds %4, %4* %42, i64 0, i32 1
  %44 = bitcast %6* %43 to i8*
  %45 = load i8, i8* %44, align 8
  switch i8 %45, label %77 [
    i8 6, label %46
    i8 8, label %58
  ]

46:                                               ; preds = %41
  %47 = bitcast %4* %42 to %1**
  %48 = load %1*, %1** %47, align 8
  %49 = call %0* @zend_lookup_class(%1* %48) #9
  %50 = icmp eq %0* %49, null
  br i1 %50, label %51, label %80

51:                                               ; preds = %46
  %52 = bitcast %4** %3 to %1***
  %53 = load %0*, %0** @reflection_exception_ptr, align 8
  %54 = load %1**, %1*** %52, align 8
  %55 = load %1*, %1** %54, align 8
  %56 = getelementptr inbounds %1, %1* %55, i64 0, i32 3, i64 0
  %57 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %53, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %56) #9
  br label %90

58:                                               ; preds = %41
  %59 = bitcast %4* %42 to %21**
  %60 = load %21*, %21** %59, align 8
  %61 = getelementptr inbounds %21, %21* %60, i64 0, i32 2
  %62 = load %0*, %0** %61, align 8
  %63 = load %0*, %0** @reflection_class_ptr, align 8
  %64 = call zeroext i8 @instanceof_function(%0* %62, %0* %63) #9
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %58
  %67 = bitcast %4** %3 to %21***
  %68 = load %21**, %21*** %67, align 8
  %69 = load %21*, %21** %68, align 8
  %70 = getelementptr inbounds %21, %21* %69, i64 -1, i32 4
  %71 = bitcast %8** %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @64, i64 0, i64 0)) #9
  br label %90

75:                                               ; preds = %66
  %76 = bitcast i8* %72 to %0*
  br label %80

77:                                               ; preds = %58, %41
  %78 = load %0*, %0** @reflection_exception_ptr, align 8
  %79 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %78, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @65, i64 0, i64 0)) #9
  br label %90

80:                                               ; preds = %75, %46
  %81 = phi %0* [ %76, %75 ], [ %49, %46 ]
  %82 = icmp eq %0* %81, %36
  br i1 %82, label %87, label %83

83:                                               ; preds = %80
  %84 = call zeroext i8 @instanceof_function(%0* %36, %0* %81) #9
  %85 = icmp eq i8 %84, 0
  %86 = select i1 %85, i32 2, i32 3
  br label %87

87:                                               ; preds = %80, %83
  %88 = phi i32 [ 2, %80 ], [ %86, %83 ]
  %89 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %88, i32* %89, align 8
  br label %90

90:                                               ; preds = %35, %29, %87, %77, %74, %51, %34, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_implementsInterface(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %4*, align 8
  %4 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = bitcast %4* %10 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 0, i32 2
  %14 = load %0*, %0** %13, align 8
  %15 = load %0*, %0** @reflection_class_ptr, align 8
  %16 = tail call zeroext i8 @instanceof_function(%0* %14, %0* %15) #9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9, %2
  %19 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %19) #9
  br label %97

20:                                               ; preds = %9
  %21 = load %21*, %21** %11, align 8
  %22 = getelementptr inbounds %21, %21* %21, i64 -1, i32 4
  %23 = bitcast %8** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %20
  %27 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %28 = icmp eq %21* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %21, %21* %27, i64 0, i32 2
  %31 = load %0*, %0** %30, align 8
  %32 = load %0*, %0** @reflection_exception_ptr, align 8
  %33 = icmp eq %0* %31, %32
  br i1 %33, label %97, label %34

34:                                               ; preds = %26, %29
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %97

35:                                               ; preds = %20
  %36 = bitcast i8* %24 to %0*
  %37 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @63, i64 0, i64 0), %4** nonnull %3) #9
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %97, label %41

41:                                               ; preds = %35
  %42 = load %4*, %4** %3, align 8
  %43 = getelementptr inbounds %4, %4* %42, i64 0, i32 1
  %44 = bitcast %6* %43 to i8*
  %45 = load i8, i8* %44, align 8
  switch i8 %45, label %77 [
    i8 6, label %46
    i8 8, label %58
  ]

46:                                               ; preds = %41
  %47 = bitcast %4* %42 to %1**
  %48 = load %1*, %1** %47, align 8
  %49 = call %0* @zend_lookup_class(%1* %48) #9
  %50 = icmp eq %0* %49, null
  br i1 %50, label %51, label %80

51:                                               ; preds = %46
  %52 = bitcast %4** %3 to %1***
  %53 = load %0*, %0** @reflection_exception_ptr, align 8
  %54 = load %1**, %1*** %52, align 8
  %55 = load %1*, %1** %54, align 8
  %56 = getelementptr inbounds %1, %1* %55, i64 0, i32 3, i64 0
  %57 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %53, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @66, i64 0, i64 0), i8* nonnull %56) #9
  br label %97

58:                                               ; preds = %41
  %59 = bitcast %4* %42 to %21**
  %60 = load %21*, %21** %59, align 8
  %61 = getelementptr inbounds %21, %21* %60, i64 0, i32 2
  %62 = load %0*, %0** %61, align 8
  %63 = load %0*, %0** @reflection_class_ptr, align 8
  %64 = call zeroext i8 @instanceof_function(%0* %62, %0* %63) #9
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %58
  %67 = bitcast %4** %3 to %21***
  %68 = load %21**, %21*** %67, align 8
  %69 = load %21*, %21** %68, align 8
  %70 = getelementptr inbounds %21, %21* %69, i64 -1, i32 4
  %71 = bitcast %8** %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @64, i64 0, i64 0)) #9
  br label %97

75:                                               ; preds = %66
  %76 = bitcast i8* %72 to %0*
  br label %80

77:                                               ; preds = %58, %41
  %78 = load %0*, %0** @reflection_exception_ptr, align 8
  %79 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %78, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @65, i64 0, i64 0)) #9
  br label %97

80:                                               ; preds = %46, %75
  %81 = phi %0* [ %76, %75 ], [ %49, %46 ]
  %82 = getelementptr inbounds %0, %0* %81, i64 0, i32 4
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 64
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = load %0*, %0** @reflection_exception_ptr, align 8
  %88 = getelementptr inbounds %0, %0* %81, i64 0, i32 1
  %89 = load %1*, %1** %88, align 8
  %90 = getelementptr inbounds %1, %1* %89, i64 0, i32 3, i64 0
  %91 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %87, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @67, i64 0, i64 0), i8* nonnull %90) #9
  br label %97

92:                                               ; preds = %80
  %93 = call zeroext i8 @instanceof_function(%0* %36, %0* %81) #9
  %94 = icmp eq i8 %93, 0
  %95 = select i1 %94, i32 2, i32 3
  %96 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %95, i32* %96, align 8
  br label %97

97:                                               ; preds = %35, %29, %92, %86, %77, %74, %51, %34, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_isIterable(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %62, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = bitcast %4* %3 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 2
  %19 = load %0*, %0** %18, align 8
  %20 = load %0*, %0** @reflection_class_ptr, align 8
  %21 = tail call zeroext i8 @instanceof_function(%0* %19, %0* %20) #9
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %15, %10
  %24 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %24) #9
  br label %62

25:                                               ; preds = %15
  %26 = load %21*, %21** %16, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %33 = icmp eq %21* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %21, %21* %32, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = icmp eq %0* %36, %37
  br i1 %38, label %62, label %39

39:                                               ; preds = %31, %34
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %62

40:                                               ; preds = %25
  %41 = bitcast i8* %29 to %0*
  %42 = getelementptr inbounds i8, i8* %29, i64 28
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 240
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %48, align 8
  br label %62

49:                                               ; preds = %40
  %50 = getelementptr inbounds i8, i8* %29, i64 400
  %51 = bitcast i8* %50 to %20* (%0*, %4*, i32)**
  %52 = load %20* (%0*, %4*, i32)*, %20* (%0*, %4*, i32)** %51, align 8
  %53 = icmp eq %20* (%0*, %4*, i32)* %52, null
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = load %0*, %0** @zend_ce_traversable, align 8
  %56 = tail call zeroext i8 @instanceof_function(%0* nonnull %41, %0* %55) #9
  %57 = icmp eq i8 %56, 0
  %58 = select i1 %57, i32 2, i32 3
  br label %59

59:                                               ; preds = %49, %54
  %60 = phi i32 [ 3, %49 ], [ %58, %54 ]
  %61 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %60, i32* %61, align 8
  br label %62

62:                                               ; preds = %34, %7, %59, %47, %39, %23
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getExtension(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %51, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = bitcast %4* %3 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 2
  %19 = load %0*, %0** %18, align 8
  %20 = load %0*, %0** @reflection_class_ptr, align 8
  %21 = tail call zeroext i8 @instanceof_function(%0* %19, %0* %20) #9
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %15, %10
  %24 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %24) #9
  br label %51

25:                                               ; preds = %15
  %26 = load %21*, %21** %16, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %33 = icmp eq %21* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %21, %21* %32, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = icmp eq %0* %36, %37
  br i1 %38, label %51, label %39

39:                                               ; preds = %31, %34
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %51

40:                                               ; preds = %25
  %41 = load i8, i8* %29, align 8
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %29, i64 488
  %45 = bitcast i8* %44 to %39**
  %46 = load %39*, %39** %45, align 8
  %47 = icmp eq %39* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %39, %39* %46, i64 0, i32 6
  %50 = load i8*, i8** %49, align 8
  tail call fastcc void @427(%4* %1, i8* %50)
  br label %51

51:                                               ; preds = %40, %48, %43, %34, %7, %39, %23
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getExtensionName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %69, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = bitcast %4* %3 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 2
  %19 = load %0*, %0** %18, align 8
  %20 = load %0*, %0** @reflection_class_ptr, align 8
  %21 = tail call zeroext i8 @instanceof_function(%0* %19, %0* %20) #9
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %15, %10
  %24 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %24) #9
  br label %69

25:                                               ; preds = %15
  %26 = load %21*, %21** %16, align 8
  %27 = getelementptr inbounds %21, %21* %26, i64 -1, i32 4
  %28 = bitcast %8** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %33 = icmp eq %21* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %21, %21* %32, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = load %0*, %0** @reflection_exception_ptr, align 8
  %38 = icmp eq %0* %36, %37
  br i1 %38, label %69, label %39

39:                                               ; preds = %31, %34
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %69

40:                                               ; preds = %25
  %41 = load i8, i8* %29, align 8
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %43, label %67

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %29, i64 488
  %45 = bitcast i8* %44 to %39**
  %46 = load %39*, %39** %45, align 8
  %47 = icmp eq %39* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %39, %39* %46, i64 0, i32 6
  %50 = load i8*, i8** %49, align 8
  %51 = tail call i64 @strlen(i8* %50) #11
  %52 = add i64 %51, 32
  %53 = and i64 %52, -8
  %54 = tail call noalias i8* @_emalloc(i64 %53) #10
  %55 = bitcast i8* %54 to %1*
  %56 = bitcast i8* %54 to i32*
  store i32 1, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 4
  %58 = bitcast i8* %57 to i32*
  store i32 6, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %54, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %54, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %51, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 1 %50, i64 %51, i1 false) #9
  %64 = getelementptr inbounds %1, %1* %55, i64 0, i32 3, i64 %51
  store i8 0, i8* %64, align 1
  %65 = bitcast %4* %1 to i8**
  store i8* %54, i8** %65, align 8
  %66 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %66, align 8
  br label %69

67:                                               ; preds = %43, %40
  %68 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %68, align 8
  br label %69

69:                                               ; preds = %34, %7, %67, %48, %39, %23
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_inNamespace(%23* %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %65, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %62, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %62, label %39

39:                                               ; preds = %30, %25
  %40 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %41 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %42 = icmp eq i8 %40, 6
  br i1 %42, label %43, label %61

43:                                               ; preds = %39
  %44 = bitcast %4* %41 to %1**
  %45 = load %1*, %1** %44, align 8
  %46 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 0
  %47 = getelementptr inbounds %1, %1* %45, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 %48
  br label %52

52:                                               ; preds = %56, %50
  %53 = phi i8* [ %51, %50 ], [ %54, %56 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = icmp ult i8* %54, %46
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = load i8, i8* %54, align 1
  %58 = icmp eq i8 %57, 92
  br i1 %58, label %59, label %52

59:                                               ; preds = %56
  %60 = icmp ugt i8* %54, %46
  br i1 %60, label %62, label %61

61:                                               ; preds = %52, %43, %39, %59
  br label %62

62:                                               ; preds = %59, %10, %30, %61
  %63 = phi i32 [ 2, %61 ], [ 2, %30 ], [ 2, %10 ], [ 3, %59 ]
  %64 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %63, i32* %64, align 8
  br label %65

65:                                               ; preds = %62, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getNamespaceName(%23* %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %85, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %82, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %82, label %39

39:                                               ; preds = %30, %25
  %40 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %41 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %42 = icmp eq i8 %40, 6
  br i1 %42, label %43, label %79

43:                                               ; preds = %39
  %44 = bitcast %4* %41 to %1**
  %45 = load %1*, %1** %44, align 8
  %46 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 0
  %47 = getelementptr inbounds %1, %1* %45, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %79, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %1, %1* %45, i64 0, i32 3, i64 %48
  br label %52

52:                                               ; preds = %56, %50
  %53 = phi i8* [ %51, %50 ], [ %54, %56 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = icmp ult i8* %54, %46
  br i1 %55, label %79, label %56

56:                                               ; preds = %52
  %57 = load i8, i8* %54, align 1
  %58 = icmp eq i8 %57, 92
  br i1 %58, label %59, label %52

59:                                               ; preds = %56
  %60 = icmp ugt i8* %54, %46
  br i1 %60, label %61, label %79

61:                                               ; preds = %59
  %62 = ptrtoint i8* %54 to i64
  %63 = ptrtoint i8* %46 to i64
  %64 = sub i64 %62, %63
  %65 = add i64 %64, 32
  %66 = and i64 %65, -8
  %67 = tail call noalias i8* @_emalloc(i64 %66) #10
  %68 = bitcast i8* %67 to %1*
  %69 = bitcast i8* %67 to i32*
  store i32 1, i32* %69, align 8
  %70 = getelementptr inbounds i8, i8* %67, i64 4
  %71 = bitcast i8* %70 to i32*
  store i32 6, i32* %71, align 4
  %72 = getelementptr inbounds i8, i8* %67, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds i8, i8* %67, i64 16
  %75 = bitcast i8* %74 to i64*
  store i64 %64, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %67, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 1 %46, i64 %64, i1 false) #9
  %77 = getelementptr inbounds %1, %1* %68, i64 0, i32 3, i64 %64
  store i8 0, i8* %77, align 1
  %78 = bitcast %4* %1 to i8**
  store i8* %67, i8** %78, align 8
  br label %82

79:                                               ; preds = %52, %43, %59, %39
  %80 = load i64, i64* bitcast (%1** @zend_empty_string to i64*), align 8
  %81 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  br label %82

82:                                               ; preds = %10, %30, %61, %79
  %83 = phi i32 [ 6, %79 ], [ 5126, %61 ], [ 2, %30 ], [ 2, %10 ]
  %84 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %83, i32* %84, align 8
  br label %85

85:                                               ; preds = %82, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_getShortName(%23* %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %101, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %101

41:                                               ; preds = %30, %25
  %42 = phi i8 [ %28, %25 ], [ %35, %30 ]
  %43 = phi %4* [ %23, %25 ], [ %32, %30 ]
  switch i8 %42, label %87 [
    i8 6, label %44
    i8 10, label %83
  ]

44:                                               ; preds = %41
  %45 = bitcast %4* %43 to %1**
  %46 = load %1*, %1** %45, align 8
  %47 = getelementptr inbounds %1, %1* %46, i64 0, i32 3, i64 0
  %48 = getelementptr inbounds %1, %1* %46, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %87, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %1, %1* %46, i64 0, i32 3, i64 %49
  br label %53

53:                                               ; preds = %57, %51
  %54 = phi i8* [ %52, %51 ], [ %55, %57 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 -1
  %56 = icmp ult i8* %55, %47
  br i1 %56, label %87, label %57

57:                                               ; preds = %53
  %58 = load i8, i8* %55, align 1
  %59 = icmp eq i8 %58, 92
  br i1 %59, label %60, label %53

60:                                               ; preds = %57
  %61 = icmp ugt i8* %55, %47
  br i1 %61, label %62, label %87

62:                                               ; preds = %60
  %63 = ptrtoint i8* %55 to i64
  %64 = ptrtoint i8* %47 to i64
  %65 = xor i64 %63, -1
  %66 = add i64 %49, %64
  %67 = add i64 %66, %65
  %68 = add i64 %67, 32
  %69 = and i64 %68, -8
  %70 = tail call noalias i8* @_emalloc(i64 %69) #10
  %71 = bitcast i8* %70 to %1*
  %72 = bitcast i8* %70 to i32*
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %70, i64 4
  %74 = bitcast i8* %73 to i32*
  store i32 6, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %70, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %70, i64 16
  %78 = bitcast i8* %77 to i64*
  store i64 %67, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %70, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* nonnull align 1 %54, i64 %67, i1 false) #9
  %80 = getelementptr inbounds %1, %1* %71, i64 0, i32 3, i64 %67
  store i8 0, i8* %80, align 1
  %81 = bitcast %4* %1 to i8**
  store i8* %70, i8** %81, align 8
  %82 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %82, align 8
  br label %101

83:                                               ; preds = %41
  %84 = bitcast %4* %43 to %63**
  %85 = load %63*, %63** %84, align 8
  %86 = getelementptr inbounds %63, %63* %85, i64 0, i32 1
  br label %87

87:                                               ; preds = %53, %60, %41, %44, %83
  %88 = phi %4* [ %86, %83 ], [ %43, %44 ], [ %43, %41 ], [ %43, %60 ], [ %43, %53 ]
  %89 = bitcast %4* %88 to %59**
  %90 = load %59*, %59** %89, align 8
  %91 = getelementptr inbounds %4, %4* %88, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = bitcast %4* %1 to %59**
  store %59* %90, %59** %93, align 8
  %94 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %92, i32* %94, align 8
  %95 = and i32 %92, 1024
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %87
  %98 = getelementptr inbounds %59, %59* %90, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  br label %101

101:                                              ; preds = %97, %87, %7, %62, %39
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_object_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_object_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_object___construct(%23* %0, %4* nocapture readnone %1) #0 {
  tail call fastcc void @434(%23* %0, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_property_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_class_constant_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_class_constant_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca %4, align 8
  %5 = alloca %4*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %4, align 8
  %12 = alloca %4, align 8
  %13 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = bitcast %4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @38, i64 0, i64 0), %4** nonnull %5, i8** nonnull %6, i64* nonnull %7) #9
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %280, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %24 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %25 = bitcast %6* %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 8
  %28 = select i1 %27, %4* %23, %4* null
  %29 = bitcast %4* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = load %4*, %4** %5, align 8
  %32 = getelementptr inbounds %4, %4* %31, i64 0, i32 1
  %33 = bitcast %6* %32 to i8*
  %34 = load i8, i8* %33, align 8
  switch i8 %34, label %52 [
    i8 6, label %35
    i8 8, label %47
  ]

35:                                               ; preds = %22
  %36 = bitcast %4* %31 to %1**
  %37 = load %1*, %1** %36, align 8
  %38 = call %0* @zend_lookup_class(%1* %37) #9
  %39 = icmp eq %0* %38, null
  br i1 %39, label %40, label %55

40:                                               ; preds = %35
  %41 = bitcast %4** %5 to %1***
  %42 = load %0*, %0** @reflection_exception_ptr, align 8
  %43 = load %1**, %1*** %41, align 8
  %44 = load %1*, %1** %43, align 8
  %45 = getelementptr inbounds %1, %1* %44, i64 0, i32 3, i64 0
  %46 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %42, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i64 0, i64 0), i8* nonnull %45) #9
  br label %280

47:                                               ; preds = %22
  %48 = bitcast %4* %31 to %21**
  %49 = load %21*, %21** %48, align 8
  %50 = getelementptr inbounds %21, %21* %49, i64 0, i32 2
  %51 = load %0*, %0** %50, align 8
  br label %55

52:                                               ; preds = %22
  %53 = load %0*, %0** @reflection_exception_ptr, align 8
  %54 = call %21* @zend_throw_exception(%0* %53, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @41, i64 0, i64 0), i64 0) #9
  br label %280

55:                                               ; preds = %35, %47
  %56 = phi %0* [ %51, %47 ], [ %38, %35 ]
  %57 = getelementptr inbounds %0, %0* %56, i64 0, i32 11
  %58 = load i8*, i8** %6, align 8
  %59 = load i64, i64* %7, align 8
  %60 = call %4* @zend_hash_str_find(%8* nonnull %57, i8* %58, i64 %59) #9
  %61 = icmp eq %4* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  %63 = bitcast %4* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast i8* %64 to %71*
  %66 = icmp eq i8* %64, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds i8, i8* %64, i64 4
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 131072
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %100, label %93

73:                                               ; preds = %55, %62
  %74 = load %4*, %4** %5, align 8
  %75 = getelementptr inbounds %4, %4* %74, i64 0, i32 1
  %76 = bitcast %6* %75 to i8*
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 8
  br i1 %78, label %79, label %93

79:                                               ; preds = %73
  %80 = bitcast %4* %74 to %21**
  %81 = load %21*, %21** %80, align 8
  %82 = getelementptr inbounds %21, %21* %81, i64 0, i32 3
  %83 = load %22*, %22** %82, align 8
  %84 = getelementptr inbounds %22, %22* %83, i64 0, i32 15
  %85 = load %8* (%4*)*, %8* (%4*)** %84, align 8
  %86 = icmp eq %8* (%4*)* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %79
  %88 = call %8* %85(%4* nonnull %74) #9
  %89 = load i8*, i8** %6, align 8
  %90 = load i64, i64* %7, align 8
  %91 = call zeroext i8 @zend_hash_str_exists(%8* %88, i8* %89, i64 %90) #9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %168

93:                                               ; preds = %87, %79, %73, %67
  %94 = load %0*, %0** @reflection_exception_ptr, align 8
  %95 = getelementptr inbounds %0, %0* %56, i64 0, i32 1
  %96 = load %1*, %1** %95, align 8
  %97 = getelementptr inbounds %1, %1* %96, i64 0, i32 3, i64 0
  %98 = load i8*, i8** %6, align 8
  %99 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %94, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @68, i64 0, i64 0), i8* nonnull %97, i8* %98) #9
  br label %280

100:                                              ; preds = %67
  %101 = and i32 %70, 1024
  %102 = icmp ne i32 %101, 0
  %103 = icmp eq %0* %56, null
  %104 = or i1 %102, %103
  br i1 %104, label %123, label %105

105:                                              ; preds = %100, %119
  %106 = phi %0* [ %109, %119 ], [ %56, %100 ]
  %107 = phi %71* [ null, %119 ], [ %65, %100 ]
  %108 = phi i8* [ null, %119 ], [ %64, %100 ]
  %109 = phi %0* [ %121, %119 ], [ %56, %100 ]
  %110 = getelementptr inbounds %0, %0* %109, i64 0, i32 11
  %111 = load i8*, i8** %6, align 8
  %112 = load i64, i64* %7, align 8
  %113 = call %4* @zend_hash_str_find(%8* nonnull %110, i8* %111, i64 %112) #9
  %114 = icmp eq %4* %113, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %105
  %116 = bitcast %4* %113 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %119, label %123

119:                                              ; preds = %105, %115
  %120 = getelementptr inbounds %0, %0* %109, i64 0, i32 2
  %121 = load %0*, %0** %120, align 8
  %122 = icmp eq %0* %121, null
  br i1 %122, label %123, label %105

123:                                              ; preds = %115, %119, %100
  %124 = phi i8* [ %64, %100 ], [ %108, %115 ], [ null, %119 ]
  %125 = phi %71* [ %65, %100 ], [ %107, %115 ], [ null, %119 ]
  %126 = phi %0* [ %56, %100 ], [ %106, %115 ], [ %109, %119 ]
  %127 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #9
  %128 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #9
  %129 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #9
  %130 = getelementptr inbounds %71, %71* %125, i64 0, i32 2
  %131 = load %1*, %1** %130, align 8
  %132 = call i32 @zend_unmangle_property_name_ex(%1* %131, i8** nonnull %8, i8** nonnull %9, i64* nonnull %10) #9
  %133 = getelementptr inbounds %71, %71* %125, i64 0, i32 4
  %134 = load %0*, %0** %133, align 8
  %135 = getelementptr inbounds %0, %0* %134, i64 0, i32 1
  %136 = load %1*, %1** %135, align 8
  %137 = bitcast %4* %4 to %1**
  store %1* %136, %1** %137, align 8
  %138 = getelementptr inbounds %1, %1* %136, i64 0, i32 0, i32 1
  %139 = bitcast %3* %138 to %57*
  %140 = getelementptr inbounds %57, %57* %139, i64 0, i32 1
  %141 = load i8, i8* %140, align 1
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %123
  %145 = getelementptr inbounds %1, %1* %136, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 8
  br label %148

148:                                              ; preds = %123, %144
  %149 = phi i32 [ 5126, %144 ], [ 6, %123 ]
  %150 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %149, i32* %150, align 8
  %151 = load i8*, i8** %9, align 8
  %152 = load i64, i64* %10, align 8
  %153 = add i64 %152, 32
  %154 = and i64 %153, -8
  %155 = call noalias i8* @_emalloc(i64 %154) #10
  %156 = bitcast i8* %155 to %1*
  %157 = bitcast i8* %155 to i32*
  store i32 1, i32* %157, align 8
  %158 = getelementptr inbounds i8, i8* %155, i64 4
  %159 = bitcast i8* %158 to i32*
  store i32 6, i32* %159, align 4
  %160 = getelementptr inbounds i8, i8* %155, i64 8
  %161 = bitcast i8* %160 to i64*
  store i64 0, i64* %161, align 8
  %162 = getelementptr inbounds i8, i8* %155, i64 16
  %163 = bitcast i8* %162 to i64*
  store i64 %152, i64* %163, align 8
  %164 = getelementptr inbounds i8, i8* %155, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %164, i8* align 1 %151, i64 %152, i1 false) #9
  %165 = getelementptr inbounds %1, %1* %156, i64 0, i32 3, i64 %152
  store i8 0, i8* %165, align 1
  %166 = bitcast %4* %3 to i8**
  store i8* %155, i8** %166, align 8
  %167 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 5126, i32* %167, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #9
  br label %202

168:                                              ; preds = %87
  %169 = getelementptr inbounds %0, %0* %56, i64 0, i32 1
  %170 = load %1*, %1** %169, align 8
  %171 = bitcast %4* %4 to %1**
  store %1* %170, %1** %171, align 8
  %172 = getelementptr inbounds %1, %1* %170, i64 0, i32 0, i32 1
  %173 = bitcast %3* %172 to %57*
  %174 = getelementptr inbounds %57, %57* %173, i64 0, i32 1
  %175 = load i8, i8* %174, align 1
  %176 = and i8 %175, 2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %168
  %179 = getelementptr inbounds %1, %1* %170, i64 0, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = add i32 %180, 1
  store i32 %181, i32* %179, align 8
  br label %182

182:                                              ; preds = %168, %178
  %183 = phi i32 [ 5126, %178 ], [ 6, %168 ]
  %184 = getelementptr inbounds %4, %4* %4, i64 0, i32 1, i32 0
  store i32 %183, i32* %184, align 8
  %185 = load i8*, i8** %6, align 8
  %186 = load i64, i64* %7, align 8
  %187 = add i64 %186, 32
  %188 = and i64 %187, -8
  %189 = call noalias i8* @_emalloc(i64 %188) #10
  %190 = bitcast i8* %189 to %1*
  %191 = bitcast i8* %189 to i32*
  store i32 1, i32* %191, align 8
  %192 = getelementptr inbounds i8, i8* %189, i64 4
  %193 = bitcast i8* %192 to i32*
  store i32 6, i32* %193, align 4
  %194 = getelementptr inbounds i8, i8* %189, i64 8
  %195 = bitcast i8* %194 to i64*
  store i64 0, i64* %195, align 8
  %196 = getelementptr inbounds i8, i8* %189, i64 16
  %197 = bitcast i8* %196 to i64*
  store i64 %186, i64* %197, align 8
  %198 = getelementptr inbounds i8, i8* %189, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %198, i8* align 1 %185, i64 %186, i1 false) #9
  %199 = getelementptr inbounds %1, %1* %190, i64 0, i32 3, i64 %186
  store i8 0, i8* %199, align 1
  %200 = bitcast %4* %3 to i8**
  store i8* %189, i8** %200, align 8
  %201 = getelementptr inbounds %4, %4* %3, i64 0, i32 1, i32 0
  store i32 5126, i32* %201, align 8
  br label %202

202:                                              ; preds = %148, %182
  %203 = phi %0* [ %126, %148 ], [ %56, %182 ]
  %204 = phi i8* [ %124, %148 ], [ null, %182 ]
  %205 = phi i1 [ true, %148 ], [ false, %182 ]
  %206 = bitcast %4* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #9
  %207 = call noalias i8* @_emalloc(i64 32) #10
  %208 = bitcast i8* %207 to i32*
  store i32 1, i32* %208, align 8
  %209 = getelementptr inbounds i8, i8* %207, i64 4
  %210 = bitcast i8* %209 to i32*
  store i32 6, i32* %210, align 4
  %211 = getelementptr inbounds i8, i8* %207, i64 8
  %212 = bitcast i8* %211 to <2 x i64>*
  store <2 x i64> <i64 0, i64 5>, <2 x i64>* %212, align 8
  %213 = getelementptr inbounds i8, i8* %207, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %213, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i1 false) #9
  %214 = getelementptr inbounds i8, i8* %207, i64 29
  store i8 0, i8* %214, align 1
  %215 = bitcast %4* %11 to i8**
  store i8* %207, i8** %215, align 8
  %216 = getelementptr inbounds %4, %4* %11, i64 0, i32 1, i32 0
  store i32 5126, i32* %216, align 8
  call void @zend_std_write_property(%4* %28, %4* nonnull %11, %4* nonnull %4, i8** null) #9
  %217 = getelementptr inbounds %4, %4* %4, i64 0, i32 1
  %218 = bitcast %6* %217 to %58*
  %219 = getelementptr inbounds %58, %58* %218, i64 0, i32 1
  %220 = load i8, i8* %219, align 1
  %221 = and i8 %220, 4
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %229, label %223

223:                                              ; preds = %202
  %224 = bitcast %4* %4 to %59**
  %225 = load %59*, %59** %224, align 8
  %226 = getelementptr inbounds %59, %59* %225, i64 0, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = add i32 %227, -1
  store i32 %228, i32* %226, align 4
  br label %229

229:                                              ; preds = %202, %223
  call void @_zval_ptr_dtor(%4* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #9
  %230 = bitcast %4* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #9
  %231 = call noalias i8* @_emalloc(i64 32) #10
  %232 = bitcast i8* %231 to i32*
  store i32 1, i32* %232, align 8
  %233 = getelementptr inbounds i8, i8* %231, i64 4
  %234 = bitcast i8* %233 to i32*
  store i32 6, i32* %234, align 4
  %235 = getelementptr inbounds i8, i8* %231, i64 8
  %236 = bitcast i8* %235 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %236, align 8
  %237 = getelementptr inbounds i8, i8* %231, i64 24
  %238 = bitcast i8* %237 to i32*
  store i32 1701667182, i32* %238, align 8
  %239 = getelementptr inbounds i8, i8* %231, i64 28
  store i8 0, i8* %239, align 1
  %240 = bitcast %4* %12 to i8**
  store i8* %231, i8** %240, align 8
  %241 = getelementptr inbounds %4, %4* %12, i64 0, i32 1, i32 0
  store i32 5126, i32* %241, align 8
  call void @zend_std_write_property(%4* %28, %4* nonnull %12, %4* nonnull %3, i8** null) #9
  %242 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %243 = bitcast %6* %242 to %58*
  %244 = getelementptr inbounds %58, %58* %243, i64 0, i32 1
  %245 = load i8, i8* %244, align 1
  %246 = and i8 %245, 4
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %254, label %248

248:                                              ; preds = %229
  %249 = bitcast %4* %3 to %59**
  %250 = load %59*, %59** %249, align 8
  %251 = getelementptr inbounds %59, %59* %250, i64 0, i32 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, -1
  store i32 %253, i32* %251, align 4
  br label %254

254:                                              ; preds = %229, %248
  call void @_zval_ptr_dtor(%4* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #9
  %255 = call noalias i8* @_emalloc_40() #9
  br i1 %205, label %267, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds i8, i8* %255, i64 12
  %258 = bitcast i8* %257 to i32*
  store i32 4096, i32* %258, align 4
  %259 = getelementptr inbounds %4, %4* %3, i64 0, i32 0, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds i8, i8* %255, i64 16
  %262 = bitcast i8* %261 to i64*
  store i64 %260, i64* %262, align 8
  %263 = getelementptr inbounds i8, i8* %255, i64 24
  %264 = bitcast i8* %263 to %1**
  store %1* null, %1** %264, align 8
  %265 = getelementptr inbounds i8, i8* %255, i64 32
  %266 = bitcast i8* %265 to %0**
  store %0* %203, %0** %266, align 8
  br label %269

267:                                              ; preds = %254
  %268 = getelementptr inbounds i8, i8* %255, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %268, i8* align 8 %204, i64 32, i1 false)
  br label %269

269:                                              ; preds = %267, %256
  %270 = bitcast i8* %255 to %0**
  store %0* %203, %0** %270, align 8
  %271 = getelementptr inbounds %21, %21* %30, i64 -1, i32 4
  %272 = bitcast %8** %271 to i8**
  store i8* %255, i8** %272, align 8
  %273 = getelementptr inbounds %21, %21* %30, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 5, i32* %273, align 8
  %274 = getelementptr inbounds %21, %21* %30, i64 -1, i32 5
  %275 = bitcast [1 x %4]* %274 to %0**
  store %0* %203, %0** %275, align 8
  %276 = getelementptr inbounds %21, %21* %30, i64 -1, i32 5, i64 0, i32 2
  %277 = bitcast %7* %276 to i8*
  %278 = load i8, i8* %277, align 4
  %279 = and i8 %278, -2
  store i8 %279, i8* %277, align 4
  br label %280

280:                                              ; preds = %2, %269, %93, %52, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret void
}

declare dso_local i32 @zend_unmangle_property_name_ex(%1*, i8**, i8**, i64*) local_unnamed_addr #2

declare dso_local noalias i8* @_emalloc_40() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %52, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %52, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %52

28:                                               ; preds = %12
  %29 = getelementptr inbounds i8, i8* %17, i64 8
  %30 = bitcast i8* %29 to %71*
  call fastcc void @442(%62* nonnull %3, %71* nonnull %30, i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0))
  %31 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %32 = load %1*, %1** %31, align 8
  %33 = icmp eq %1* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %1, %1* %32, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %1, %1* %32, i64 0, i32 3, i64 %36
  store i8 0, i8* %37, align 1
  %38 = load %1*, %1** %31, align 8
  store %1* null, %1** %31, align 8
  br label %41

39:                                               ; preds = %28
  %40 = load %1*, %1** @zend_empty_string, align 8
  br label %41

41:                                               ; preds = %34, %39
  %42 = phi %1* [ %38, %34 ], [ %40, %39 ]
  %43 = bitcast %4* %1 to %1**
  store %1* %42, %1** %43, align 8
  %44 = getelementptr inbounds %1, %1* %42, i64 0, i32 0, i32 1
  %45 = bitcast %3* %44 to %57*
  %46 = getelementptr inbounds %57, %57* %45, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = and i8 %47, 2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i32 5126, i32 6
  %51 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %50, i32* %51, align 8
  br label %52

52:                                               ; preds = %22, %9, %41, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @442(%62* %0, %71* readonly %1, i8* %2, i8* %3) unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %2, i8** %5, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @212, i64 0, i64 0), i8* %3) #9
  %8 = icmp eq %71* %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @213, i64 0, i64 0), i8* %2) #9
  br label %166

10:                                               ; preds = %4
  %11 = getelementptr inbounds %71, %71* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %61

15:                                               ; preds = %10
  %16 = and i32 %12, 4096
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %19 = load %1*, %1** %18, align 8
  %20 = icmp eq %1* %19, null
  br i1 %17, label %39, label %21

21:                                               ; preds = %15
  br i1 %20, label %29, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %1, %1* %19, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 11
  %26 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %22, %21
  %30 = phi i64 [ 11, %21 ], [ %25, %22 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %30) #9
  %31 = load %1*, %1** %18, align 8
  %32 = getelementptr inbounds %1, %1* %31, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  br label %34

34:                                               ; preds = %22, %29
  %35 = phi i64 [ %33, %29 ], [ %24, %22 ]
  %36 = phi %1* [ %31, %29 ], [ %19, %22 ]
  %37 = phi i64 [ %30, %29 ], [ %25, %22 ]
  %38 = getelementptr inbounds %1, %1* %36, i64 0, i32 3, i64 %35
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @214, i64 0, i64 0), i64 11, i1 false) #9
  br label %57

39:                                               ; preds = %15
  br i1 %20, label %47, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %1, %1* %19, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 10
  %44 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %52, label %47

47:                                               ; preds = %40, %39
  %48 = phi i64 [ 10, %39 ], [ %43, %40 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %48) #9
  %49 = load %1*, %1** %18, align 8
  %50 = getelementptr inbounds %1, %1* %49, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %40, %47
  %53 = phi i64 [ %51, %47 ], [ %42, %40 ]
  %54 = phi %1* [ %49, %47 ], [ %19, %40 ]
  %55 = phi i64 [ %48, %47 ], [ %43, %40 ]
  %56 = getelementptr inbounds %1, %1* %54, i64 0, i32 3, i64 %53
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @215, i64 0, i64 0), i64 10, i1 false) #9
  br label %57

57:                                               ; preds = %52, %34
  %58 = phi i64 [ %37, %34 ], [ %55, %52 ]
  %59 = load %1*, %1** %18, align 8
  %60 = getelementptr inbounds %1, %1* %59, i64 0, i32 2
  store i64 %58, i64* %60, align 8
  br label %61

61:                                               ; preds = %57, %10
  %62 = load i32, i32* %11, align 4
  %63 = and i32 %62, 1792
  %64 = trunc i32 %63 to i11
  switch i11 %64, label %134 [
    i11 256, label %65
    i11 -1024, label %86
    i11 512, label %108
  ]

65:                                               ; preds = %61
  %66 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %67 = load %1*, %1** %66, align 8
  %68 = icmp eq %1* %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %1, %1* %67, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 7
  %73 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %81, label %76

76:                                               ; preds = %69, %65
  %77 = phi i64 [ 7, %65 ], [ %72, %69 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %77) #9
  %78 = load %1*, %1** %66, align 8
  %79 = getelementptr inbounds %1, %1* %78, i64 0, i32 2
  %80 = load i64, i64* %79, align 8
  br label %81

81:                                               ; preds = %69, %76
  %82 = phi i64 [ %80, %76 ], [ %71, %69 ]
  %83 = phi %1* [ %78, %76 ], [ %67, %69 ]
  %84 = phi i64 [ %77, %76 ], [ %72, %69 ]
  %85 = getelementptr inbounds %1, %1* %83, i64 0, i32 3, i64 %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @151, i64 0, i64 0), i64 7, i1 false) #9
  br label %129

86:                                               ; preds = %61
  %87 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %88 = load %1*, %1** %87, align 8
  %89 = icmp eq %1* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %1, %1* %88, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 8
  %94 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %93, %95
  br i1 %96, label %102, label %97

97:                                               ; preds = %90, %86
  %98 = phi i64 [ 8, %86 ], [ %93, %90 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %98) #9
  %99 = load %1*, %1** %87, align 8
  %100 = getelementptr inbounds %1, %1* %99, i64 0, i32 2
  %101 = load i64, i64* %100, align 8
  br label %102

102:                                              ; preds = %90, %97
  %103 = phi i64 [ %101, %97 ], [ %92, %90 ]
  %104 = phi %1* [ %99, %97 ], [ %88, %90 ]
  %105 = phi i64 [ %98, %97 ], [ %93, %90 ]
  %106 = getelementptr inbounds %1, %1* %104, i64 0, i32 3, i64 %103
  %107 = bitcast i8* %106 to i64*
  store i64 2334399943808742000, i64* %107, align 1
  br label %129

108:                                              ; preds = %61
  %109 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %110 = load %1*, %1** %109, align 8
  %111 = icmp eq %1* %110, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %1, %1* %110, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 10
  %116 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = icmp ult i64 %115, %117
  br i1 %118, label %124, label %119

119:                                              ; preds = %112, %108
  %120 = phi i64 [ 10, %108 ], [ %115, %112 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %120) #9
  %121 = load %1*, %1** %109, align 8
  %122 = getelementptr inbounds %1, %1* %121, i64 0, i32 2
  %123 = load i64, i64* %122, align 8
  br label %124

124:                                              ; preds = %112, %119
  %125 = phi i64 [ %123, %119 ], [ %114, %112 ]
  %126 = phi %1* [ %121, %119 ], [ %110, %112 ]
  %127 = phi i64 [ %120, %119 ], [ %115, %112 ]
  %128 = getelementptr inbounds %1, %1* %126, i64 0, i32 3, i64 %125
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %128, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @152, i64 0, i64 0), i64 10, i1 false) #9
  br label %129

129:                                              ; preds = %81, %102, %124
  %130 = phi %1** [ %109, %124 ], [ %87, %102 ], [ %66, %81 ]
  %131 = phi i64 [ %127, %124 ], [ %105, %102 ], [ %84, %81 ]
  %132 = load %1*, %1** %130, align 8
  %133 = getelementptr inbounds %1, %1* %132, i64 0, i32 2
  store i64 %131, i64* %133, align 8
  br label %134

134:                                              ; preds = %129, %61
  %135 = load i32, i32* %11, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %161, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %140 = load %1*, %1** %139, align 8
  %141 = icmp eq %1* %140, null
  br i1 %141, label %149, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %1, %1* %140, i64 0, i32 2
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 7
  %146 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %147 = load i64, i64* %146, align 8
  %148 = icmp ult i64 %145, %147
  br i1 %148, label %154, label %149

149:                                              ; preds = %142, %138
  %150 = phi i64 [ 7, %138 ], [ %145, %142 ]
  tail call void @smart_str_erealloc(%62* nonnull %0, i64 %150) #9
  %151 = load %1*, %1** %139, align 8
  %152 = getelementptr inbounds %1, %1* %151, i64 0, i32 2
  %153 = load i64, i64* %152, align 8
  br label %154

154:                                              ; preds = %142, %149
  %155 = phi i64 [ %153, %149 ], [ %144, %142 ]
  %156 = phi %1* [ %151, %149 ], [ %140, %142 ]
  %157 = phi i64 [ %150, %149 ], [ %145, %142 ]
  %158 = getelementptr inbounds %1, %1* %156, i64 0, i32 3, i64 %155
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %158, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @150, i64 0, i64 0), i64 7, i1 false) #9
  %159 = load %1*, %1** %139, align 8
  %160 = getelementptr inbounds %1, %1* %159, i64 0, i32 2
  store i64 %157, i64* %160, align 8
  br label %161

161:                                              ; preds = %134, %154
  %162 = getelementptr inbounds %71, %71* %1, i64 0, i32 2
  %163 = load %1*, %1** %162, align 8
  %164 = call i32 @zend_unmangle_property_name_ex(%1* %163, i8** nonnull %6, i8** nonnull %5, i64* null) #9
  %165 = load i8*, i8** %5, align 8
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @170, i64 0, i64 0), i8* %165) #9
  br label %166

166:                                              ; preds = %161, %9
  %167 = getelementptr inbounds %62, %62* %0, i64 0, i32 0
  %168 = load %1*, %1** %167, align 8
  %169 = icmp eq %1* %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %1, %1* %168, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, 3
  %174 = getelementptr inbounds %62, %62* %0, i64 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = icmp ult i64 %173, %175
  br i1 %176, label %182, label %177

177:                                              ; preds = %170, %166
  %178 = phi i64 [ 3, %166 ], [ %173, %170 ]
  call void @smart_str_erealloc(%62* nonnull %0, i64 %178) #9
  %179 = load %1*, %1** %167, align 8
  %180 = getelementptr inbounds %1, %1* %179, i64 0, i32 2
  %181 = load i64, i64* %180, align 8
  br label %182

182:                                              ; preds = %170, %177
  %183 = phi i64 [ %181, %177 ], [ %172, %170 ]
  %184 = phi %1* [ %179, %177 ], [ %168, %170 ]
  %185 = phi i64 [ %178, %177 ], [ %173, %170 ]
  %186 = getelementptr inbounds %1, %1* %184, i64 0, i32 3, i64 %183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %186, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @216, i64 0, i64 0), i64 3, i1 false) #9
  %187 = load %1*, %1** %167, align 8
  %188 = getelementptr inbounds %1, %1* %187, i64 0, i32 2
  store i64 %185, i64* %188, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_getName(%23* %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %59

41:                                               ; preds = %30, %25
  %42 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %43 = bitcast %4* %42 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %4, %4* %42, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %4* %1 to %59**
  store %59* %44, %59** %47, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 5120
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %41
  %52 = and i32 %46, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %59, %59* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %55, %54, %41, %39, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_isPublic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 4352
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_isPrivate(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1024
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_isProtected(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 512
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_isStatic(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %33, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %33

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = or i32 %30, 2
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %31, i32* %32, align 8
  br label %33

33:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_isDefault(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %17
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, -4097
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %20, %25, %26
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_getModifiers(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %34

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 5889
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 4, i32* %33, align 8
  br label %34

34:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_getValue(%23* %0, %4* nocapture %1) #0 {
  %3 = alloca %4*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %4, align 8
  %8 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %11 = bitcast %6* %10 to i8*
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 8
  br i1 %13, label %14, label %22

14:                                               ; preds = %2
  %15 = bitcast %4* %9 to %21**
  %16 = load %21*, %21** %15, align 8
  %17 = getelementptr inbounds %21, %21* %16, i64 0, i32 2
  %18 = load %0*, %0** %17, align 8
  %19 = load %0*, %0** @reflection_property_ptr, align 8
  %20 = tail call zeroext i8 @instanceof_function(%0* %18, %0* %19) #9
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14, %2
  %23 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %23) #9
  br label %236

24:                                               ; preds = %14
  %25 = load %21*, %21** %15, align 8
  %26 = getelementptr inbounds %21, %21* %25, i64 -1, i32 4
  %27 = bitcast %8** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %32 = icmp eq %21* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %21, %21* %31, i64 0, i32 2
  %35 = load %0*, %0** %34, align 8
  %36 = load %0*, %0** @reflection_exception_ptr, align 8
  %37 = icmp eq %0* %35, %36
  br i1 %37, label %236, label %38

38:                                               ; preds = %30, %33
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %236

39:                                               ; preds = %24
  %40 = getelementptr inbounds i8, i8* %28, i64 8
  %41 = getelementptr inbounds i8, i8* %28, i64 12
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 4352
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %89

46:                                               ; preds = %39
  %47 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5, i64 0, i32 2
  %48 = bitcast %7* %47 to i8*
  %49 = load i8, i8* %48, align 4
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %89

52:                                               ; preds = %46
  %53 = load i8, i8* %11, align 8
  %54 = icmp eq i8 %53, 8
  %55 = select i1 %54, %4* %9, %4* null
  %56 = bitcast %4* %55 to %21**
  %57 = load %21*, %21** %56, align 8
  %58 = getelementptr inbounds %21, %21* %57, i64 0, i32 3
  %59 = load %22*, %22** %58, align 8
  %60 = getelementptr inbounds %22, %22* %59, i64 0, i32 15
  %61 = load %8* (%4*)*, %8* (%4*)** %60, align 8
  %62 = tail call %8* %61(%4* %55) #9
  %63 = tail call %4* @zend_hash_str_find(%8* %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %64 = getelementptr inbounds %4, %4* %63, i64 0, i32 1
  %65 = bitcast %6* %64 to i8*
  %66 = load i8, i8* %65, align 8
  %67 = icmp eq i8 %66, 15
  br i1 %67, label %68, label %76

68:                                               ; preds = %52
  %69 = bitcast %4* %63 to %4**
  %70 = load %4*, %4** %69, align 8
  %71 = getelementptr inbounds %4, %4* %70, i64 0, i32 1
  %72 = bitcast %6* %71 to i8*
  %73 = load i8, i8* %72, align 8
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %74, %4* null, %4* %70
  br label %76

76:                                               ; preds = %52, %68
  %77 = phi %4* [ %75, %68 ], [ %63, %52 ]
  %78 = load %0*, %0** @reflection_exception_ptr, align 8
  %79 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5
  %80 = bitcast [1 x %4]* %79 to %0**
  %81 = load %0*, %0** %80, align 8
  %82 = getelementptr inbounds %0, %0* %81, i64 0, i32 1
  %83 = load %1*, %1** %82, align 8
  %84 = getelementptr inbounds %1, %1* %83, i64 0, i32 3, i64 0
  %85 = bitcast %4* %77 to %1**
  %86 = load %1*, %1** %85, align 8
  %87 = getelementptr inbounds %1, %1* %86, i64 0, i32 3, i64 0
  %88 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %78, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @69, i64 0, i64 0), i8* nonnull %84, i8* nonnull %87) #9
  br label %236

89:                                               ; preds = %39, %46
  %90 = and i32 %43, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %135, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %21, %21* %25, i64 -1, i32 5
  %94 = bitcast [1 x %4]* %93 to %0**
  %95 = load %0*, %0** %94, align 8
  %96 = tail call i32 @zend_update_class_constants(%0* %95) #9
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %236

98:                                               ; preds = %92
  %99 = load %0*, %0** %94, align 8
  %100 = getelementptr inbounds %0, %0* %99, i64 0, i32 9
  %101 = load %4*, %4** %100, align 8
  %102 = bitcast i8* %40 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %4, %4* %101, i64 %104
  %106 = getelementptr inbounds %4, %4* %101, i64 %104, i32 1
  %107 = bitcast %6* %106 to i8*
  %108 = load i8, i8* %107, align 8
  switch i8 %108, label %121 [
    i8 0, label %109
    i8 10, label %117
  ]

109:                                              ; preds = %98
  %110 = getelementptr inbounds %0, %0* %99, i64 0, i32 1
  %111 = load %1*, %1** %110, align 8
  %112 = getelementptr inbounds %1, %1* %111, i64 0, i32 3, i64 0
  %113 = getelementptr inbounds i8, i8* %28, i64 16
  %114 = bitcast i8* %113 to %1**
  %115 = load %1*, %1** %114, align 8
  %116 = getelementptr inbounds %1, %1* %115, i64 0, i32 3, i64 0
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @70, i64 0, i64 0), i8* nonnull %112, i8* nonnull %116) #9
  br label %236

117:                                              ; preds = %98
  %118 = bitcast %4* %105 to %63**
  %119 = load %63*, %63** %118, align 8
  %120 = getelementptr inbounds %63, %63* %119, i64 0, i32 1
  br label %121

121:                                              ; preds = %98, %117
  %122 = phi %4* [ %120, %117 ], [ %105, %98 ]
  %123 = bitcast %4* %122 to %59**
  %124 = load %59*, %59** %123, align 8
  %125 = getelementptr inbounds %4, %4* %122, i64 0, i32 1, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = bitcast %4* %1 to %59**
  store %59* %124, %59** %127, align 8
  %128 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %126, i32* %128, align 8
  %129 = and i32 %126, 1024
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %236, label %131

131:                                              ; preds = %121
  %132 = getelementptr inbounds %59, %59* %124, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  br label %236

135:                                              ; preds = %89
  %136 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #9
  %137 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #9
  %138 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #9
  %139 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #9
  %140 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i64 0, i64 0), %4** nonnull %3) #9
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %235, label %144

144:                                              ; preds = %135
  %145 = bitcast %4** %3 to %21***
  %146 = load %21**, %21*** %145, align 8
  %147 = load %21*, %21** %146, align 8
  %148 = getelementptr inbounds %21, %21* %147, i64 0, i32 2
  %149 = load %0*, %0** %148, align 8
  %150 = getelementptr inbounds i8, i8* %28, i64 32
  %151 = bitcast i8* %150 to %0**
  %152 = load %0*, %0** %151, align 8
  %153 = call zeroext i8 @instanceof_function(%0* %149, %0* %152) #9
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %144
  %156 = load %0*, %0** @reflection_exception_ptr, align 8
  %157 = call %21* @zend_throw_exception(%0* %156, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @71, i64 0, i64 0), i64 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  br label %236

158:                                              ; preds = %144
  %159 = getelementptr inbounds i8, i8* %28, i64 16
  %160 = bitcast i8* %159 to %1**
  %161 = load %1*, %1** %160, align 8
  %162 = call i32 @zend_unmangle_property_name_ex(%1* %161, i8** nonnull %4, i8** nonnull %5, i64* nonnull %6) #9
  %163 = bitcast i8* %28 to %0**
  %164 = load %0*, %0** %163, align 8
  %165 = load %4*, %4** %3, align 8
  %166 = load i8*, i8** %5, align 8
  %167 = load i64, i64* %6, align 8
  %168 = call %4* @zend_read_property(%0* %164, %4* %165, i8* %166, i64 %167, i8 zeroext 0, %4* nonnull %7) #9
  %169 = icmp eq %4* %168, %7
  %170 = getelementptr inbounds %4, %4* %168, i64 0, i32 1
  %171 = bitcast %6* %170 to i8*
  %172 = load i8, i8* %171, align 8
  %173 = icmp eq i8 %172, 10
  br i1 %169, label %193, label %174

174:                                              ; preds = %158
  br i1 %173, label %175, label %179

175:                                              ; preds = %174
  %176 = bitcast %4* %168 to %63**
  %177 = load %63*, %63** %176, align 8
  %178 = getelementptr inbounds %63, %63* %177, i64 0, i32 1
  br label %179

179:                                              ; preds = %174, %175
  %180 = phi %4* [ %178, %175 ], [ %168, %174 ]
  %181 = bitcast %4* %180 to %59**
  %182 = load %59*, %59** %181, align 8
  %183 = getelementptr inbounds %4, %4* %180, i64 0, i32 1, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = bitcast %4* %1 to %59**
  store %59* %182, %59** %185, align 8
  %186 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %184, i32* %186, align 8
  %187 = and i32 %184, 1024
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %234, label %189

189:                                              ; preds = %179
  %190 = getelementptr inbounds %59, %59* %182, i64 0, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = add i32 %191, 1
  store i32 %192, i32* %190, align 4
  br label %234

193:                                              ; preds = %158
  br i1 %173, label %196, label %194

194:                                              ; preds = %193
  %195 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  br label %227

196:                                              ; preds = %193
  %197 = bitcast %4* %7 to %59**
  %198 = load %59*, %59** %197, align 8
  %199 = getelementptr inbounds %59, %59* %198, i64 0, i32 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %211

202:                                              ; preds = %196
  %203 = getelementptr inbounds %59, %59* %198, i64 1
  %204 = bitcast %59* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %59, %59* %198, i64 2, i32 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = getelementptr inbounds %4, %4* %7, i64 0, i32 0, i32 0
  store i64 %205, i64* %208, align 8
  %209 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 %207, i32* %209, align 8
  %210 = bitcast %59* %198 to i8*
  call void @_efree_24(i8* %210) #9
  br label %227

211:                                              ; preds = %196
  %212 = add i32 %200, -1
  store i32 %212, i32* %199, align 4
  %213 = bitcast %4* %7 to %63**
  %214 = load %63*, %63** %213, align 8
  %215 = getelementptr inbounds %63, %63* %214, i64 0, i32 1
  %216 = bitcast %4* %215 to %59**
  %217 = load %59*, %59** %216, align 8
  %218 = getelementptr inbounds %63, %63* %214, i64 0, i32 1, i32 1, i32 0
  %219 = load i32, i32* %218, align 8
  store %59* %217, %59** %197, align 8
  %220 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 %219, i32* %220, align 8
  %221 = and i32 %219, 1024
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %211
  %224 = getelementptr inbounds %59, %59* %217, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %224, align 4
  br label %227

227:                                              ; preds = %194, %223, %211, %202
  %228 = phi i32* [ %195, %194 ], [ %220, %223 ], [ %220, %211 ], [ %209, %202 ]
  %229 = getelementptr inbounds %4, %4* %7, i64 0, i32 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = load i32, i32* %228, align 8
  %232 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %230, i64* %232, align 8
  %233 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %231, i32* %233, align 8
  br label %234

234:                                              ; preds = %227, %179, %189
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  br label %236

235:                                              ; preds = %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  br label %236

236:                                              ; preds = %121, %131, %234, %235, %155, %92, %33, %109, %76, %38, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

declare dso_local %4* @zend_read_property(%0*, %4*, i8*, i64, i8 zeroext, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_setValue(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %4, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %14 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %15 = bitcast %6* %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 8
  br i1 %17, label %18, label %26

18:                                               ; preds = %2
  %19 = bitcast %4* %13 to %21**
  %20 = load %21*, %21** %19, align 8
  %21 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_property_ptr, align 8
  %24 = tail call zeroext i8 @instanceof_function(%0* %22, %0* %23) #9
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18, %2
  %27 = tail call i8* @get_active_function_name() #9
  tail call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @18, i64 0, i64 0), i8* %27) #9
  br label %191

28:                                               ; preds = %18
  %29 = load %21*, %21** %19, align 8
  %30 = getelementptr inbounds %21, %21* %29, i64 -1, i32 4
  %31 = bitcast %8** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %43

34:                                               ; preds = %28
  %35 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %36 = icmp eq %21* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %21, %21* %35, i64 0, i32 2
  %39 = load %0*, %0** %38, align 8
  %40 = load %0*, %0** @reflection_exception_ptr, align 8
  %41 = icmp eq %0* %39, %40
  br i1 %41, label %191, label %42

42:                                               ; preds = %34, %37
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %191

43:                                               ; preds = %28
  %44 = getelementptr inbounds i8, i8* %32, i64 8
  %45 = getelementptr inbounds i8, i8* %32, i64 12
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 256
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %93

50:                                               ; preds = %43
  %51 = getelementptr inbounds %21, %21* %29, i64 -1, i32 5, i64 0, i32 2
  %52 = bitcast %7* %51 to i8*
  %53 = load i8, i8* %52, align 4
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %50
  %57 = load i8, i8* %15, align 8
  %58 = icmp eq i8 %57, 8
  %59 = select i1 %58, %4* %13, %4* null
  %60 = bitcast %4* %59 to %21**
  %61 = load %21*, %21** %60, align 8
  %62 = getelementptr inbounds %21, %21* %61, i64 0, i32 3
  %63 = load %22*, %22** %62, align 8
  %64 = getelementptr inbounds %22, %22* %63, i64 0, i32 15
  %65 = load %8* (%4*)*, %8* (%4*)** %64, align 8
  %66 = tail call %8* %65(%4* %59) #9
  %67 = tail call %4* @zend_hash_str_find(%8* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %68 = getelementptr inbounds %4, %4* %67, i64 0, i32 1
  %69 = bitcast %6* %68 to i8*
  %70 = load i8, i8* %69, align 8
  %71 = icmp eq i8 %70, 15
  br i1 %71, label %72, label %80

72:                                               ; preds = %56
  %73 = bitcast %4* %67 to %4**
  %74 = load %4*, %4** %73, align 8
  %75 = getelementptr inbounds %4, %4* %74, i64 0, i32 1
  %76 = bitcast %6* %75 to i8*
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, %4* null, %4* %74
  br label %80

80:                                               ; preds = %56, %72
  %81 = phi %4* [ %79, %72 ], [ %67, %56 ]
  %82 = load %0*, %0** @reflection_exception_ptr, align 8
  %83 = getelementptr inbounds %21, %21* %29, i64 -1, i32 5
  %84 = bitcast [1 x %4]* %83 to %0**
  %85 = load %0*, %0** %84, align 8
  %86 = getelementptr inbounds %0, %0* %85, i64 0, i32 1
  %87 = load %1*, %1** %86, align 8
  %88 = getelementptr inbounds %1, %1* %87, i64 0, i32 3, i64 0
  %89 = bitcast %4* %81 to %1**
  %90 = load %1*, %1** %89, align 8
  %91 = getelementptr inbounds %1, %1* %90, i64 0, i32 3, i64 0
  %92 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %82, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @69, i64 0, i64 0), i8* nonnull %88, i8* nonnull %91) #9
  br label %191

93:                                               ; preds = %43, %50
  %94 = and i32 %47, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %171, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @63, i64 0, i64 0), %4** nonnull %4) #9
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %101, label %105

101:                                              ; preds = %96
  %102 = load i32, i32* %97, align 4
  %103 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @25, i64 0, i64 0), %4** nonnull %5, %4** nonnull %4) #9
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %191, label %105

105:                                              ; preds = %101, %96
  %106 = getelementptr inbounds %21, %21* %29, i64 -1, i32 5
  %107 = bitcast [1 x %4]* %106 to %0**
  %108 = load %0*, %0** %107, align 8
  %109 = call i32 @zend_update_class_constants(%0* %108) #9
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %191

111:                                              ; preds = %105
  %112 = load %0*, %0** %107, align 8
  %113 = getelementptr inbounds %0, %0* %112, i64 0, i32 9
  %114 = load %4*, %4** %113, align 8
  %115 = bitcast i8* %44 to i32*
  %116 = load i32, i32* %115, align 8
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %4, %4* %114, i64 %117
  %119 = getelementptr inbounds %4, %4* %114, i64 %117, i32 1
  %120 = bitcast %6* %119 to i8*
  %121 = load i8, i8* %120, align 8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %131

123:                                              ; preds = %111
  %124 = getelementptr inbounds %0, %0* %112, i64 0, i32 1
  %125 = load %1*, %1** %124, align 8
  %126 = getelementptr inbounds %1, %1* %125, i64 0, i32 3, i64 0
  %127 = getelementptr inbounds i8, i8* %32, i64 16
  %128 = bitcast i8* %127 to %1**
  %129 = load %1*, %1** %128, align 8
  %130 = getelementptr inbounds %1, %1* %129, i64 0, i32 3, i64 0
  call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @70, i64 0, i64 0), i8* nonnull %126, i8* nonnull %130) #9
  br label %191

131:                                              ; preds = %111
  %132 = load %4*, %4** %4, align 8
  %133 = icmp eq %4* %118, %132
  %134 = bitcast %4* %132 to %63**
  br i1 %133, label %191, label %135

135:                                              ; preds = %131
  %136 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #9
  %137 = icmp eq i8 %121, 10
  br i1 %137, label %138, label %142

138:                                              ; preds = %135
  %139 = bitcast %4* %118 to %63**
  %140 = load %63*, %63** %139, align 8
  %141 = getelementptr inbounds %63, %63* %140, i64 0, i32 1
  br label %142

142:                                              ; preds = %135, %138
  %143 = phi %4* [ %141, %138 ], [ %118, %135 ]
  %144 = getelementptr inbounds %4, %4* %132, i64 0, i32 1
  %145 = bitcast %6* %144 to i8*
  %146 = load i8, i8* %145, align 8
  %147 = icmp eq i8 %146, 10
  br i1 %147, label %148, label %151

148:                                              ; preds = %142
  %149 = load %63*, %63** %134, align 8
  %150 = getelementptr inbounds %63, %63* %149, i64 0, i32 1
  store %4* %150, %4** %4, align 8
  br label %151

151:                                              ; preds = %142, %148
  %152 = phi %4* [ %132, %142 ], [ %150, %148 ]
  %153 = bitcast %4* %143 to %59**
  %154 = getelementptr inbounds %4, %4* %143, i64 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %4, %4* %143, i64 0, i32 1, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = getelementptr inbounds %4, %4* %6, i64 0, i32 0, i32 0
  store i64 %155, i64* %158, align 8
  %159 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 %157, i32* %159, align 8
  %160 = bitcast %4* %152 to %59**
  %161 = load %59*, %59** %160, align 8
  %162 = getelementptr inbounds %4, %4* %152, i64 0, i32 1, i32 0
  %163 = load i32, i32* %162, align 8
  store %59* %161, %59** %153, align 8
  store i32 %163, i32* %156, align 8
  %164 = and i32 %163, 1024
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %151
  %167 = getelementptr inbounds %59, %59* %161, i64 0, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 4
  br label %170

170:                                              ; preds = %151, %166
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #9
  br label %191

171:                                              ; preds = %93
  %172 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #9
  %173 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #9
  %174 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #9
  %175 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %176, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @72, i64 0, i64 0), %4** nonnull %3, %4** nonnull %4) #9
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %190, label %179

179:                                              ; preds = %171
  %180 = getelementptr inbounds i8, i8* %32, i64 16
  %181 = bitcast i8* %180 to %1**
  %182 = load %1*, %1** %181, align 8
  %183 = call i32 @zend_unmangle_property_name_ex(%1* %182, i8** nonnull %7, i8** nonnull %8, i64* nonnull %9) #9
  %184 = bitcast i8* %32 to %0**
  %185 = load %0*, %0** %184, align 8
  %186 = load %4*, %4** %3, align 8
  %187 = load i8*, i8** %8, align 8
  %188 = load i64, i64* %9, align 8
  %189 = load %4*, %4** %4, align 8
  call void @zend_update_property(%0* %185, %4* %186, i8* %187, i64 %188, %4* %189) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #9
  br label %191

190:                                              ; preds = %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #9
  br label %191

191:                                              ; preds = %170, %131, %179, %190, %105, %101, %37, %123, %80, %42, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret void
}

declare dso_local void @zend_update_property(%0*, %4*, i8*, i64, %4*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_getDeclaringClass(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %80, label %16

16:                                               ; preds = %2, %13
  %17 = bitcast %4* %9 to %21**
  %18 = load %21*, %21** %17, align 8
  %19 = getelementptr inbounds %21, %21* %18, i64 -1, i32 4
  %20 = bitcast %8** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %32

23:                                               ; preds = %16
  %24 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %25 = icmp eq %21* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %21, %21* %24, i64 0, i32 2
  %28 = load %0*, %0** %27, align 8
  %29 = load %0*, %0** @reflection_exception_ptr, align 8
  %30 = icmp eq %0* %28, %29
  br i1 %30, label %80, label %31

31:                                               ; preds = %23, %26
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %80

32:                                               ; preds = %16
  %33 = getelementptr inbounds i8, i8* %21, i64 16
  %34 = bitcast i8* %33 to %1**
  %35 = load %1*, %1** %34, align 8
  %36 = call i32 @zend_unmangle_property_name_ex(%1* %35, i8** nonnull %4, i8** nonnull %3, i64* nonnull %5) #9
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %39, align 8
  br label %80

40:                                               ; preds = %32
  %41 = bitcast i8* %21 to %0**
  %42 = load %0*, %0** %41, align 8
  %43 = icmp eq %0* %42, null
  br i1 %43, label %78, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %0, %0* %42, i64 0, i32 11
  %46 = load i8*, i8** %3, align 8
  %47 = load i64, i64* %5, align 8
  %48 = call %4* @zend_hash_str_find(%8* nonnull %45, i8* %46, i64 %47) #9
  %49 = icmp eq %4* %48, null
  br i1 %49, label %78, label %56

50:                                               ; preds = %74
  %51 = getelementptr inbounds %0, %0* %76, i64 0, i32 11
  %52 = load i8*, i8** %3, align 8
  %53 = load i64, i64* %5, align 8
  %54 = call %4* @zend_hash_str_find(%8* nonnull %51, i8* %52, i64 %53) #9
  %55 = icmp eq %4* %54, null
  br i1 %55, label %78, label %56

56:                                               ; preds = %44, %50
  %57 = phi %4* [ %54, %50 ], [ %48, %44 ]
  %58 = phi %0* [ %59, %50 ], [ %42, %44 ]
  %59 = phi %0* [ %76, %50 ], [ %42, %44 ]
  %60 = bitcast %4* %57 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %78, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds i8, i8* %61, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 132096
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %78

69:                                               ; preds = %63
  %70 = getelementptr inbounds i8, i8* %61, i64 24
  %71 = bitcast i8* %70 to %0**
  %72 = load %0*, %0** %71, align 8
  %73 = icmp eq %0* %59, %72
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %0, %0* %59, i64 0, i32 2
  %76 = load %0*, %0** %75, align 8
  %77 = icmp eq %0* %76, null
  br i1 %77, label %78, label %50

78:                                               ; preds = %50, %63, %56, %74, %69, %44, %40
  %79 = phi %0* [ null, %40 ], [ %42, %44 ], [ %59, %69 ], [ %59, %74 ], [ %58, %56 ], [ %58, %63 ], [ %59, %50 ]
  call void @zend_reflection_class_factory(%0* %79, %4* %1)
  br label %80

80:                                               ; preds = %26, %13, %78, %38, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_getDocComment(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %48, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %48

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 24
  %28 = bitcast i8* %27 to %1**
  %29 = load %1*, %1** %28, align 8
  %30 = icmp eq %1* %29, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %26
  %32 = bitcast %4* %1 to %1**
  store %1* %29, %1** %32, align 8
  %33 = getelementptr inbounds %1, %1* %29, i64 0, i32 0, i32 1
  %34 = bitcast %3* %33 to %57*
  %35 = getelementptr inbounds %57, %57* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %40, align 8
  br label %48

41:                                               ; preds = %31
  %42 = getelementptr inbounds %1, %1* %29, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %45, align 8
  br label %48

46:                                               ; preds = %26
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %47, align 8
  br label %48

48:                                               ; preds = %39, %41, %20, %7, %46, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_property_setAccessible(%23* nocapture readonly %0, %4* nocapture readnone %1) #0 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i64 0, i64 0), i8* nonnull %3) #9
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %10 = bitcast %4* %9 to %21**
  %11 = load %21*, %21** %10, align 8
  %12 = load i8, i8* %3, align 1
  %13 = getelementptr inbounds %21, %21* %11, i64 -1, i32 5, i64 0, i32 2
  %14 = bitcast %7* %13 to i8*
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %12, 1
  %17 = and i8 %15, -2
  %18 = or i8 %17, %16
  store i8 %18, i8* %14, align 4
  br label %19

19:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_extension_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %4, align 8
  %7 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0), i8** nonnull %4, i64* nonnull %5) #9
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %101, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %16 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %17 = bitcast %6* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 8
  %20 = select i1 %19, %4* %15, %4* null
  %21 = bitcast %4* %20 to %21**
  %22 = load %21*, %21** %21, align 8
  %23 = load i64, i64* %5, align 8
  %24 = add i64 %23, 1
  %25 = icmp ugt i64 %24, 32768
  br i1 %25, label %26, label %29

26:                                               ; preds = %14
  %27 = call noalias i8* @_emalloc(i64 %24) #10
  %28 = load i64, i64* %5, align 8
  br label %31

29:                                               ; preds = %14
  %30 = alloca i8, i64 %24, align 16
  br label %31

31:                                               ; preds = %29, %26
  %32 = phi i64 [ %28, %26 ], [ %23, %29 ]
  %33 = phi i8* [ %27, %26 ], [ %30, %29 ]
  %34 = load i8*, i8** %4, align 8
  %35 = call i8* @zend_str_tolower_copy(i8* %33, i8* %34, i64 %32) #9
  %36 = load i64, i64* %5, align 8
  %37 = call %4* @zend_hash_str_find(%8* nonnull @module_registry, i8* %33, i64 %36) #9
  %38 = icmp eq %4* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %31
  %40 = bitcast %4* %37 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %49

43:                                               ; preds = %31, %39
  br i1 %25, label %44, label %45

44:                                               ; preds = %43
  call void @_efree(i8* %33) #9
  br label %45

45:                                               ; preds = %44, %43
  %46 = load %0*, %0** @reflection_exception_ptr, align 8
  %47 = load i8*, i8** %4, align 8
  %48 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %46, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @73, i64 0, i64 0), i8* %47) #9
  br label %101

49:                                               ; preds = %39
  br i1 %25, label %50, label %51

50:                                               ; preds = %49
  call void @_efree(i8* %33) #9
  br label %51

51:                                               ; preds = %49, %50
  %52 = getelementptr inbounds i8, i8* %41, i64 32
  %53 = bitcast i8* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = call i64 @strlen(i8* %54) #11
  %56 = add i64 %55, 32
  %57 = and i64 %56, -8
  %58 = call noalias i8* @_emalloc(i64 %57) #10
  %59 = bitcast i8* %58 to %1*
  %60 = bitcast i8* %58 to i32*
  store i32 1, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %58, i64 4
  %62 = bitcast i8* %61 to i32*
  store i32 6, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %58, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %58, i64 16
  %66 = bitcast i8* %65 to i64*
  store i64 %55, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %58, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 1 %54, i64 %55, i1 false) #9
  %68 = getelementptr inbounds %1, %1* %59, i64 0, i32 3, i64 %55
  store i8 0, i8* %68, align 1
  %69 = bitcast %4* %3 to i8**
  store i8* %58, i8** %69, align 8
  %70 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %71 = getelementptr inbounds %6, %6* %70, i64 0, i32 0
  store i32 5126, i32* %71, align 8
  %72 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = call noalias i8* @_emalloc(i64 32) #10
  %74 = bitcast i8* %73 to i32*
  store i32 1, i32* %74, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 4
  %76 = bitcast i8* %75 to i32*
  store i32 6, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %73, i64 8
  %78 = bitcast i8* %77 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds i8, i8* %73, i64 24
  %80 = bitcast i8* %79 to i32*
  store i32 1701667182, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %73, i64 28
  store i8 0, i8* %81, align 1
  %82 = bitcast %4* %6 to i8**
  store i8* %73, i8** %82, align 8
  %83 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 5126, i32* %83, align 8
  call void @zend_std_write_property(%4* %20, %4* nonnull %6, %4* nonnull %3, i8** null) #9
  %84 = bitcast %6* %70 to %58*
  %85 = getelementptr inbounds %58, %58* %84, i64 0, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = and i8 %86, 4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %51
  %90 = bitcast %4* %3 to %59**
  %91 = load %59*, %59** %90, align 8
  %92 = getelementptr inbounds %59, %59* %91, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, -1
  store i32 %94, i32* %92, align 4
  br label %95

95:                                               ; preds = %51, %89
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  %96 = getelementptr inbounds %21, %21* %22, i64 -1, i32 4
  %97 = bitcast %8** %96 to i8**
  store i8* %41, i8** %97, align 8
  %98 = getelementptr inbounds %21, %21* %22, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 0, i32* %98, align 8
  %99 = getelementptr inbounds %21, %21* %22, i64 -1, i32 5
  %100 = bitcast [1 x %4]* %99 to %0**
  store %0* null, %0** %100, align 8
  br label %101

101:                                              ; preds = %2, %95, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = alloca %62, align 8
  %5 = alloca i32, align 4
  %6 = alloca %62, align 8
  %7 = alloca i32, align 4
  %8 = alloca %62, align 8
  %9 = bitcast %62* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %528, label %17

17:                                               ; preds = %2, %14
  %18 = bitcast %4* %10 to %21**
  %19 = load %21*, %21** %18, align 8
  %20 = getelementptr inbounds %21, %21* %19, i64 -1, i32 4
  %21 = bitcast %8** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %17
  %25 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %26 = icmp eq %21* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %21, %21* %25, i64 0, i32 2
  %29 = load %0*, %0** %28, align 8
  %30 = load %0*, %0** @reflection_exception_ptr, align 8
  %31 = icmp eq %0* %29, %30
  br i1 %31, label %528, label %32

32:                                               ; preds = %24, %27
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %528

33:                                               ; preds = %17
  %34 = bitcast i8* %22 to %39*
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @217, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %35 = getelementptr inbounds i8, i8* %22, i64 140
  %36 = load i8, i8* %35, align 4
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %62

38:                                               ; preds = %33
  %39 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %40 = load %1*, %1** %39, align 8
  %41 = icmp eq %1* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %1, %1* %40, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 12
  %46 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %45, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %42, %38
  %50 = phi i64 [ 12, %38 ], [ %45, %42 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %50) #9
  %51 = load %1*, %1** %39, align 8
  %52 = getelementptr inbounds %1, %1* %51, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %49, %42
  %55 = phi i64 [ %53, %49 ], [ %44, %42 ]
  %56 = phi %1* [ %51, %49 ], [ %40, %42 ]
  %57 = phi i64 [ %50, %49 ], [ %45, %42 ]
  %58 = getelementptr inbounds %1, %1* %56, i64 0, i32 3, i64 %55
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @218, i64 0, i64 0), i64 12, i1 false) #9
  %59 = load %1*, %1** %39, align 8
  %60 = getelementptr inbounds %1, %1* %59, i64 0, i32 2
  store i64 %57, i64* %60, align 8
  %61 = load i8, i8* %35, align 4
  br label %62

62:                                               ; preds = %54, %33
  %63 = phi i8 [ %61, %54 ], [ %36, %33 ]
  %64 = icmp eq i8 %63, 2
  br i1 %64, label %65, label %88

65:                                               ; preds = %62
  %66 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %67 = load %1*, %1** %66, align 8
  %68 = icmp eq %1* %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %1, %1* %67, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 11
  %73 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %81, label %76

76:                                               ; preds = %69, %65
  %77 = phi i64 [ 11, %65 ], [ %72, %69 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %77) #9
  %78 = load %1*, %1** %66, align 8
  %79 = getelementptr inbounds %1, %1* %78, i64 0, i32 2
  %80 = load i64, i64* %79, align 8
  br label %81

81:                                               ; preds = %76, %69
  %82 = phi i64 [ %80, %76 ], [ %71, %69 ]
  %83 = phi %1* [ %78, %76 ], [ %67, %69 ]
  %84 = phi i64 [ %77, %76 ], [ %72, %69 ]
  %85 = getelementptr inbounds %1, %1* %83, i64 0, i32 3, i64 %82
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @219, i64 0, i64 0), i64 11, i1 false) #9
  %86 = load %1*, %1** %66, align 8
  %87 = getelementptr inbounds %1, %1* %86, i64 0, i32 2
  store i64 %84, i64* %87, align 8
  br label %88

88:                                               ; preds = %81, %62
  %89 = getelementptr inbounds i8, i8* %22, i64 152
  %90 = bitcast i8* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds i8, i8* %22, i64 32
  %93 = bitcast i8* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %22, i64 88
  %96 = bitcast i8* %95 to i8**
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  %99 = select i1 %98, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @221, i64 0, i64 0), i8* %97
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @220, i64 0, i64 0), i32 %91, i8* %94, i8* %99) #9
  %100 = getelementptr inbounds i8, i8* %22, i64 24
  %101 = bitcast i8* %100 to %40**
  %102 = load %40*, %40** %101, align 8
  %103 = icmp eq %40* %102, null
  br i1 %103, label %254, label %104

104:                                              ; preds = %88
  %105 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %106 = load %1*, %1** %105, align 8
  %107 = icmp eq %1* %106, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %1, %1* %106, i64 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 20
  %112 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = icmp ult i64 %111, %113
  br i1 %114, label %120, label %115

115:                                              ; preds = %108, %104
  %116 = phi i64 [ 20, %104 ], [ %111, %108 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %116) #9
  %117 = load %1*, %1** %105, align 8
  %118 = getelementptr inbounds %1, %1* %117, i64 0, i32 2
  %119 = load i64, i64* %118, align 8
  br label %120

120:                                              ; preds = %115, %108
  %121 = phi i64* [ %118, %115 ], [ %109, %108 ]
  %122 = phi i64 [ %119, %115 ], [ %110, %108 ]
  %123 = phi %1* [ %117, %115 ], [ %106, %108 ]
  %124 = phi i64 [ %116, %115 ], [ %111, %108 ]
  %125 = getelementptr inbounds %1, %1* %123, i64 0, i32 3, i64 %122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @222, i64 0, i64 0), i64 20, i1 false) #9
  store i64 %124, i64* %121, align 8
  %126 = getelementptr inbounds %40, %40* %102, i64 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = icmp eq i8* %127, null
  br i1 %128, label %253, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  br label %131

131:                                              ; preds = %241, %129
  %132 = phi i8* [ %127, %129 ], [ %251, %241 ]
  %133 = phi %40* [ %102, %129 ], [ %249, %241 ]
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @223, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i8* nonnull %132) #9
  %134 = getelementptr inbounds %40, %40* %133, i64 0, i32 3
  %135 = load i8, i8* %134, align 8
  switch i8 %135, label %195 [
    i8 1, label %136
    i8 2, label %156
    i8 3, label %175
  ]

136:                                              ; preds = %131
  %137 = load %1*, %1** %105, align 8
  %138 = icmp eq %1* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %1, %1* %137, i64 0, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 8
  %143 = load i64, i64* %130, align 8
  %144 = icmp ult i64 %142, %143
  br i1 %144, label %150, label %145

145:                                              ; preds = %139, %136
  %146 = phi i64 [ 8, %136 ], [ %142, %139 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %146) #9
  %147 = load %1*, %1** %105, align 8
  %148 = getelementptr inbounds %1, %1* %147, i64 0, i32 2
  %149 = load i64, i64* %148, align 8
  br label %150

150:                                              ; preds = %145, %139
  %151 = phi i64 [ %149, %145 ], [ %141, %139 ]
  %152 = phi %1* [ %147, %145 ], [ %137, %139 ]
  %153 = phi i64 [ %146, %145 ], [ %142, %139 ]
  %154 = getelementptr inbounds %1, %1* %152, i64 0, i32 3, i64 %151
  %155 = bitcast i8* %154 to i64*
  store i64 7234314173708068178, i64* %155, align 1
  br label %214

156:                                              ; preds = %131
  %157 = load %1*, %1** %105, align 8
  %158 = icmp eq %1* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %1, %1* %157, i64 0, i32 2
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 9
  %163 = load i64, i64* %130, align 8
  %164 = icmp ult i64 %162, %163
  br i1 %164, label %170, label %165

165:                                              ; preds = %159, %156
  %166 = phi i64 [ 9, %156 ], [ %162, %159 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %166) #9
  %167 = load %1*, %1** %105, align 8
  %168 = getelementptr inbounds %1, %1* %167, i64 0, i32 2
  %169 = load i64, i64* %168, align 8
  br label %170

170:                                              ; preds = %165, %159
  %171 = phi i64 [ %169, %165 ], [ %161, %159 ]
  %172 = phi %1* [ %167, %165 ], [ %157, %159 ]
  %173 = phi i64 [ %166, %165 ], [ %162, %159 ]
  %174 = getelementptr inbounds %1, %1* %172, i64 0, i32 3, i64 %171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @75, i64 0, i64 0), i64 9, i1 false) #9
  br label %214

175:                                              ; preds = %131
  %176 = load %1*, %1** %105, align 8
  %177 = icmp eq %1* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %1, %1* %176, i64 0, i32 2
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 8
  %182 = load i64, i64* %130, align 8
  %183 = icmp ult i64 %181, %182
  br i1 %183, label %189, label %184

184:                                              ; preds = %178, %175
  %185 = phi i64 [ 8, %175 ], [ %181, %178 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %185) #9
  %186 = load %1*, %1** %105, align 8
  %187 = getelementptr inbounds %1, %1* %186, i64 0, i32 2
  %188 = load i64, i64* %187, align 8
  br label %189

189:                                              ; preds = %184, %178
  %190 = phi i64 [ %188, %184 ], [ %180, %178 ]
  %191 = phi %1* [ %186, %184 ], [ %176, %178 ]
  %192 = phi i64 [ %185, %184 ], [ %181, %178 ]
  %193 = getelementptr inbounds %1, %1* %191, i64 0, i32 3, i64 %190
  %194 = bitcast i8* %193 to i64*
  store i64 7809644653626814543, i64* %194, align 1
  br label %214

195:                                              ; preds = %131
  %196 = load %1*, %1** %105, align 8
  %197 = icmp eq %1* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %1, %1* %196, i64 0, i32 2
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 5
  %202 = load i64, i64* %130, align 8
  %203 = icmp ult i64 %201, %202
  br i1 %203, label %209, label %204

204:                                              ; preds = %198, %195
  %205 = phi i64 [ 5, %195 ], [ %201, %198 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %205) #9
  %206 = load %1*, %1** %105, align 8
  %207 = getelementptr inbounds %1, %1* %206, i64 0, i32 2
  %208 = load i64, i64* %207, align 8
  br label %209

209:                                              ; preds = %204, %198
  %210 = phi i64 [ %208, %204 ], [ %200, %198 ]
  %211 = phi %1* [ %206, %204 ], [ %196, %198 ]
  %212 = phi i64 [ %205, %204 ], [ %201, %198 ]
  %213 = getelementptr inbounds %1, %1* %211, i64 0, i32 3, i64 %210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %213, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @77, i64 0, i64 0), i64 5, i1 false) #9
  br label %214

214:                                              ; preds = %209, %189, %170, %150
  %215 = phi i64 [ %212, %209 ], [ %192, %189 ], [ %173, %170 ], [ %153, %150 ]
  %216 = load %1*, %1** %105, align 8
  %217 = getelementptr inbounds %1, %1* %216, i64 0, i32 2
  store i64 %215, i64* %217, align 8
  %218 = getelementptr inbounds %40, %40* %133, i64 0, i32 1
  %219 = load i8*, i8** %218, align 8
  %220 = icmp eq i8* %219, null
  br i1 %220, label %222, label %221

221:                                              ; preds = %214
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @224, i64 0, i64 0), i8* nonnull %219) #9
  br label %222

222:                                              ; preds = %221, %214
  %223 = getelementptr inbounds %40, %40* %133, i64 0, i32 2
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %227, label %226

226:                                              ; preds = %222
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @224, i64 0, i64 0), i8* nonnull %224) #9
  br label %227

227:                                              ; preds = %226, %222
  %228 = load %1*, %1** %105, align 8
  %229 = icmp eq %1* %228, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %1, %1* %228, i64 0, i32 2
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 4
  %234 = load i64, i64* %130, align 8
  %235 = icmp ult i64 %233, %234
  br i1 %235, label %241, label %236

236:                                              ; preds = %230, %227
  %237 = phi i64 [ 4, %227 ], [ %233, %230 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %237) #9
  %238 = load %1*, %1** %105, align 8
  %239 = getelementptr inbounds %1, %1* %238, i64 0, i32 2
  %240 = load i64, i64* %239, align 8
  br label %241

241:                                              ; preds = %236, %230
  %242 = phi i64 [ %240, %236 ], [ %232, %230 ]
  %243 = phi %1* [ %238, %236 ], [ %228, %230 ]
  %244 = phi i64 [ %237, %236 ], [ %233, %230 ]
  %245 = getelementptr inbounds %1, %1* %243, i64 0, i32 3, i64 %242
  %246 = bitcast i8* %245 to i32*
  store i32 173875241, i32* %246, align 1
  %247 = load %1*, %1** %105, align 8
  %248 = getelementptr inbounds %1, %1* %247, i64 0, i32 2
  store i64 %244, i64* %248, align 8
  %249 = getelementptr inbounds %40, %40* %133, i64 1
  %250 = getelementptr inbounds %40, %40* %249, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %253, label %131

253:                                              ; preds = %241, %120
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  br label %254

254:                                              ; preds = %253, %88
  %255 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %255, i8 0, i64 16, i1 false) #9
  %256 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 39), align 8
  %257 = load i32, i32* %90, align 8
  call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %256, i32 (%4*, i32, %72*, %73*)* nonnull @450, i32 3, %62* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 %257) #9
  %258 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %259 = load %1*, %1** %258, align 8
  %260 = icmp eq %1* %259, null
  br i1 %260, label %319, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds %1, %1* %259, i64 0, i32 2
  %263 = load i64, i64* %262, align 8
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %299, label %265

265:                                              ; preds = %261
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @225, i64 0, i64 0)) #9
  %266 = load %1*, %1** %258, align 8
  %267 = icmp eq %1* %266, null
  br i1 %267, label %296, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %1, %1* %266, i64 0, i32 2
  %270 = load i64, i64* %269, align 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %296, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %1, %1* %266, i64 0, i32 3, i64 0
  %274 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %275 = load %1*, %1** %274, align 8
  %276 = icmp eq %1* %275, null
  br i1 %276, label %284, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %1, %1* %275, i64 0, i32 2
  %279 = load i64, i64* %278, align 8
  %280 = add i64 %279, %270
  %281 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  %282 = load i64, i64* %281, align 8
  %283 = icmp ult i64 %280, %282
  br i1 %283, label %289, label %284

284:                                              ; preds = %277, %272
  %285 = phi i64 [ %270, %272 ], [ %280, %277 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %285) #9
  %286 = load %1*, %1** %274, align 8
  %287 = getelementptr inbounds %1, %1* %286, i64 0, i32 2
  %288 = load i64, i64* %287, align 8
  br label %289

289:                                              ; preds = %284, %277
  %290 = phi i64 [ %288, %284 ], [ %279, %277 ]
  %291 = phi %1* [ %286, %284 ], [ %275, %277 ]
  %292 = phi i64 [ %285, %284 ], [ %280, %277 ]
  %293 = getelementptr inbounds %1, %1* %291, i64 0, i32 3, i64 %290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %293, i8* nonnull align 1 %273, i64 %270, i1 false) #9
  %294 = load %1*, %1** %274, align 8
  %295 = getelementptr inbounds %1, %1* %294, i64 0, i32 2
  store i64 %292, i64* %295, align 8
  br label %296

296:                                              ; preds = %289, %268, %265
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %297 = load %1*, %1** %258, align 8
  %298 = icmp eq %1* %297, null
  br i1 %298, label %319, label %299

299:                                              ; preds = %296, %261
  %300 = phi %1* [ %297, %296 ], [ %259, %261 ]
  %301 = getelementptr inbounds %1, %1* %300, i64 0, i32 0, i32 1
  %302 = bitcast %3* %301 to %57*
  %303 = getelementptr inbounds %57, %57* %302, i64 0, i32 1
  %304 = load i8, i8* %303, align 1
  %305 = and i8 %304, 2
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %307, label %318

307:                                              ; preds = %299
  %308 = getelementptr inbounds %1, %1* %300, i64 0, i32 0, i32 0
  %309 = load i32, i32* %308, align 8
  %310 = add i32 %309, -1
  store i32 %310, i32* %308, align 8
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %318

312:                                              ; preds = %307
  %313 = and i8 %304, 1
  %314 = icmp eq i8 %313, 0
  %315 = bitcast %1* %300 to i8*
  br i1 %314, label %317, label %316

316:                                              ; preds = %312
  call void @free(i8* %315) #9
  br label %318

317:                                              ; preds = %312
  call void @_efree(i8* %315) #9
  br label %318

318:                                              ; preds = %317, %316, %307, %299
  store %1* null, %1** %258, align 8
  br label %319

319:                                              ; preds = %318, %296, %254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #9
  %320 = bitcast %62* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %320) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %320, i8 0, i64 16, i1 false) #9
  %321 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %321) #9
  store i32 0, i32* %5, align 4
  %322 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 12), align 8
  call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %322, i32 (%4*, i32, %72*, %73*)* nonnull @451, i32 4, %62* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i8* nonnull %22, i32* nonnull %5) #9
  %323 = load i32, i32* %5, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %319
  %326 = getelementptr inbounds %62, %62* %4, i64 0, i32 0
  br label %360

327:                                              ; preds = %319
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @226, i64 0, i64 0), i32 %323) #9
  %328 = getelementptr inbounds %62, %62* %4, i64 0, i32 0
  %329 = load %1*, %1** %328, align 8
  %330 = icmp eq %1* %329, null
  br i1 %330, label %359, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %1, %1* %329, i64 0, i32 2
  %333 = load i64, i64* %332, align 8
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %359, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %1, %1* %329, i64 0, i32 3, i64 0
  %337 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %338 = load %1*, %1** %337, align 8
  %339 = icmp eq %1* %338, null
  br i1 %339, label %347, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %1, %1* %338, i64 0, i32 2
  %342 = load i64, i64* %341, align 8
  %343 = add i64 %342, %333
  %344 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = icmp ult i64 %343, %345
  br i1 %346, label %352, label %347

347:                                              ; preds = %340, %335
  %348 = phi i64 [ %333, %335 ], [ %343, %340 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %348) #9
  %349 = load %1*, %1** %337, align 8
  %350 = getelementptr inbounds %1, %1* %349, i64 0, i32 2
  %351 = load i64, i64* %350, align 8
  br label %352

352:                                              ; preds = %347, %340
  %353 = phi i64 [ %351, %347 ], [ %342, %340 ]
  %354 = phi %1* [ %349, %347 ], [ %338, %340 ]
  %355 = phi i64 [ %348, %347 ], [ %343, %340 ]
  %356 = getelementptr inbounds %1, %1* %354, i64 0, i32 3, i64 %353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %356, i8* nonnull align 1 %336, i64 %333, i1 false) #9
  %357 = load %1*, %1** %337, align 8
  %358 = getelementptr inbounds %1, %1* %357, i64 0, i32 2
  store i64 %355, i64* %358, align 8
  br label %359

359:                                              ; preds = %352, %331, %327
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  br label %360

360:                                              ; preds = %359, %325
  %361 = phi %1** [ %326, %325 ], [ %328, %359 ]
  %362 = load %1*, %1** %361, align 8
  %363 = icmp eq %1* %362, null
  br i1 %363, label %383, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %1, %1* %362, i64 0, i32 0, i32 1
  %366 = bitcast %3* %365 to %57*
  %367 = getelementptr inbounds %57, %57* %366, i64 0, i32 1
  %368 = load i8, i8* %367, align 1
  %369 = and i8 %368, 2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %371, label %382

371:                                              ; preds = %364
  %372 = getelementptr inbounds %1, %1* %362, i64 0, i32 0, i32 0
  %373 = load i32, i32* %372, align 8
  %374 = add i32 %373, -1
  store i32 %374, i32* %372, align 8
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %382

376:                                              ; preds = %371
  %377 = and i8 %368, 1
  %378 = icmp eq i8 %377, 0
  %379 = bitcast %1* %362 to i8*
  br i1 %378, label %381, label %380

380:                                              ; preds = %376
  call void @free(i8* %379) #9
  br label %382

381:                                              ; preds = %376
  call void @_efree(i8* %379) #9
  br label %382

382:                                              ; preds = %381, %380, %371, %364
  store %1* null, %1** %361, align 8
  br label %383

383:                                              ; preds = %382, %360
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %321) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %320) #9
  %384 = load %8*, %8** getelementptr inbounds (%44, %44* @compiler_globals, i64 0, i32 5), align 8
  %385 = getelementptr inbounds %8, %8* %384, i64 0, i32 3
  %386 = load %10*, %10** %385, align 8
  %387 = getelementptr inbounds %8, %8* %384, i64 0, i32 4
  %388 = load i32, i32* %387, align 8
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds %10, %10* %386, i64 %389
  %391 = icmp eq i32 %388, 0
  br i1 %391, label %421, label %392

392:                                              ; preds = %383, %414
  %393 = phi i32 [ %415, %414 ], [ 1, %383 ]
  %394 = phi %10* [ %416, %414 ], [ %386, %383 ]
  %395 = getelementptr inbounds %10, %10* %394, i64 0, i32 0, i32 1
  %396 = bitcast %6* %395 to i8*
  %397 = load i8, i8* %396, align 8
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %414, label %399

399:                                              ; preds = %392
  %400 = bitcast %10* %394 to %11**
  %401 = load %11*, %11** %400, align 8
  %402 = getelementptr inbounds %11, %11* %401, i64 0, i32 0, i32 0
  %403 = load i8, i8* %402, align 8
  %404 = icmp eq i8 %403, 1
  br i1 %404, label %405, label %414

405:                                              ; preds = %399
  %406 = getelementptr inbounds %11, %11* %401, i64 0, i32 0, i32 10
  %407 = bitcast i32* %406 to %39**
  %408 = load %39*, %39** %407, align 8
  %409 = icmp eq %39* %408, %34
  br i1 %409, label %410, label %414

410:                                              ; preds = %405
  %411 = icmp eq i32 %393, 0
  br i1 %411, label %413, label %412

412:                                              ; preds = %410
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @227, i64 0, i64 0)) #9
  br label %413

413:                                              ; preds = %412, %410
  call fastcc void @426(%62* nonnull %8, %11* nonnull %401, %0* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @228, i64 0, i64 0)) #9
  br label %414

414:                                              ; preds = %413, %405, %399, %392
  %415 = phi i32 [ %393, %392 ], [ 0, %413 ], [ %393, %405 ], [ %393, %399 ]
  %416 = getelementptr inbounds %10, %10* %394, i64 1
  %417 = icmp eq %10* %416, %390
  br i1 %417, label %418, label %392

418:                                              ; preds = %414
  %419 = icmp eq i32 %415, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %418
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  br label %421

421:                                              ; preds = %420, %418, %383
  %422 = call %1* (i64, i8*, ...) @zend_strpprintf(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @187, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %423 = bitcast %62* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %423) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %423, i8 0, i64 16, i1 false) #9
  %424 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %424) #9
  store i32 0, i32* %7, align 4
  %425 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 11), align 8
  %426 = getelementptr inbounds %1, %1* %422, i64 0, i32 3, i64 0
  call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %425, i32 (%4*, i32, %72*, %73*)* nonnull @452, i32 4, %62* nonnull %6, i8* nonnull %426, i8* nonnull %22, i32* nonnull %7) #9
  %427 = load i32, i32* %7, align 4
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %421
  %430 = getelementptr inbounds %62, %62* %6, i64 0, i32 0
  br label %464

431:                                              ; preds = %421
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @229, i64 0, i64 0), i32 %427) #9
  %432 = getelementptr inbounds %62, %62* %6, i64 0, i32 0
  %433 = load %1*, %1** %432, align 8
  %434 = icmp eq %1* %433, null
  br i1 %434, label %463, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %1, %1* %433, i64 0, i32 2
  %437 = load i64, i64* %436, align 8
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %463, label %439

439:                                              ; preds = %435
  %440 = getelementptr inbounds %1, %1* %433, i64 0, i32 3, i64 0
  %441 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %442 = load %1*, %1** %441, align 8
  %443 = icmp eq %1* %442, null
  br i1 %443, label %451, label %444

444:                                              ; preds = %439
  %445 = getelementptr inbounds %1, %1* %442, i64 0, i32 2
  %446 = load i64, i64* %445, align 8
  %447 = add i64 %446, %437
  %448 = getelementptr inbounds %62, %62* %8, i64 0, i32 1
  %449 = load i64, i64* %448, align 8
  %450 = icmp ult i64 %447, %449
  br i1 %450, label %456, label %451

451:                                              ; preds = %444, %439
  %452 = phi i64 [ %437, %439 ], [ %447, %444 ]
  call void @smart_str_erealloc(%62* nonnull %8, i64 %452) #9
  %453 = load %1*, %1** %441, align 8
  %454 = getelementptr inbounds %1, %1* %453, i64 0, i32 2
  %455 = load i64, i64* %454, align 8
  br label %456

456:                                              ; preds = %451, %444
  %457 = phi i64 [ %455, %451 ], [ %446, %444 ]
  %458 = phi %1* [ %453, %451 ], [ %442, %444 ]
  %459 = phi i64 [ %452, %451 ], [ %447, %444 ]
  %460 = getelementptr inbounds %1, %1* %458, i64 0, i32 3, i64 %457
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %460, i8* nonnull align 1 %440, i64 %437, i1 false) #9
  %461 = load %1*, %1** %441, align 8
  %462 = getelementptr inbounds %1, %1* %461, i64 0, i32 2
  store i64 %459, i64* %462, align 8
  br label %463

463:                                              ; preds = %456, %435, %431
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @205, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  br label %464

464:                                              ; preds = %463, %429
  %465 = phi %1** [ %430, %429 ], [ %432, %463 ]
  %466 = load %1*, %1** %465, align 8
  %467 = icmp eq %1* %466, null
  br i1 %467, label %487, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %1, %1* %466, i64 0, i32 0, i32 1
  %470 = bitcast %3* %469 to %57*
  %471 = getelementptr inbounds %57, %57* %470, i64 0, i32 1
  %472 = load i8, i8* %471, align 1
  %473 = and i8 %472, 2
  %474 = icmp eq i8 %473, 0
  br i1 %474, label %475, label %486

475:                                              ; preds = %468
  %476 = getelementptr inbounds %1, %1* %466, i64 0, i32 0, i32 0
  %477 = load i32, i32* %476, align 8
  %478 = add i32 %477, -1
  store i32 %478, i32* %476, align 8
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %486

480:                                              ; preds = %475
  %481 = and i8 %472, 1
  %482 = icmp eq i8 %481, 0
  %483 = bitcast %1* %466 to i8*
  br i1 %482, label %485, label %484

484:                                              ; preds = %480
  call void @free(i8* %483) #9
  br label %486

485:                                              ; preds = %480
  call void @_efree(i8* %483) #9
  br label %486

486:                                              ; preds = %485, %484, %475, %468
  store %1* null, %1** %465, align 8
  br label %487

487:                                              ; preds = %486, %464
  %488 = getelementptr inbounds %62, %62* %6, i64 0, i32 1
  store i64 0, i64* %488, align 8
  %489 = getelementptr inbounds %1, %1* %422, i64 0, i32 0, i32 1
  %490 = bitcast %3* %489 to %57*
  %491 = getelementptr inbounds %57, %57* %490, i64 0, i32 1
  %492 = load i8, i8* %491, align 1
  %493 = and i8 %492, 2
  %494 = icmp eq i8 %493, 0
  br i1 %494, label %495, label %506

495:                                              ; preds = %487
  %496 = getelementptr inbounds %1, %1* %422, i64 0, i32 0, i32 0
  %497 = load i32, i32* %496, align 8
  %498 = add i32 %497, -1
  store i32 %498, i32* %496, align 8
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %506

500:                                              ; preds = %495
  %501 = and i8 %492, 1
  %502 = icmp eq i8 %501, 0
  %503 = bitcast %1* %422 to i8*
  br i1 %502, label %505, label %504

504:                                              ; preds = %500
  call void @free(i8* %503) #9
  br label %506

505:                                              ; preds = %500
  call void @_efree(i8* %503) #9
  br label %506

506:                                              ; preds = %487, %495, %504, %505
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %424) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %423) #9
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @162, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %507 = getelementptr inbounds %62, %62* %8, i64 0, i32 0
  %508 = load %1*, %1** %507, align 8
  %509 = icmp eq %1* %508, null
  br i1 %509, label %515, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds %1, %1* %508, i64 0, i32 2
  %512 = load i64, i64* %511, align 8
  %513 = getelementptr inbounds %1, %1* %508, i64 0, i32 3, i64 %512
  store i8 0, i8* %513, align 1
  %514 = load %1*, %1** %507, align 8
  store %1* null, %1** %507, align 8
  br label %517

515:                                              ; preds = %506
  %516 = load %1*, %1** @zend_empty_string, align 8
  br label %517

517:                                              ; preds = %510, %515
  %518 = phi %1* [ %514, %510 ], [ %516, %515 ]
  %519 = bitcast %4* %1 to %1**
  store %1* %518, %1** %519, align 8
  %520 = getelementptr inbounds %1, %1* %518, i64 0, i32 0, i32 1
  %521 = bitcast %3* %520 to %57*
  %522 = getelementptr inbounds %57, %57* %521, i64 0, i32 1
  %523 = load i8, i8* %522, align 1
  %524 = and i8 %523, 2
  %525 = icmp eq i8 %524, 0
  %526 = select i1 %525, i32 5126, i32 6
  %527 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %526, i32* %527, align 8
  br label %528

528:                                              ; preds = %27, %14, %517, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getName(%23* %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %59, label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %12 = bitcast %6* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 8
  %15 = select i1 %14, %4* %3, %4* null
  %16 = bitcast %4* %15 to %21**
  %17 = load %21*, %21** %16, align 8
  %18 = getelementptr inbounds %21, %21* %17, i64 0, i32 3
  %19 = load %22*, %22** %18, align 8
  %20 = getelementptr inbounds %22, %22* %19, i64 0, i32 15
  %21 = load %8* (%4*)*, %8* (%4*)** %20, align 8
  %22 = tail call %8* %21(%4* %15) #9
  %23 = tail call %4* @zend_hash_str_find(%8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4) #9
  %24 = icmp eq %4* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %4, %4* %23, i64 0, i32 1
  %27 = bitcast %6* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 15
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = bitcast %4* %23 to %4**
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i64 0, i32 1
  %34 = bitcast %6* %33 to i8*
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq %4* %32, null
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %10
  %40 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 2, i32* %40, align 8
  br label %59

41:                                               ; preds = %30, %25
  %42 = phi %4* [ %23, %25 ], [ %32, %30 ]
  %43 = bitcast %4* %42 to %59**
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %4, %4* %42, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = bitcast %4* %1 to %59**
  store %59* %44, %59** %47, align 8
  %48 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %46, i32* %48, align 8
  %49 = and i32 %46, 5120
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %41
  %52 = and i32 %46, 4096
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_zval_copy_ctor_func(%4* nonnull %1) #9
  br label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %59, %59* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %55, %54, %41, %39, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getVersion(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %50, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %50, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %50

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 88
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 1, i32* %32, align 8
  br label %50

33:                                               ; preds = %26
  %34 = tail call i64 @strlen(i8* nonnull %29) #11
  %35 = add i64 %34, 32
  %36 = and i64 %35, -8
  %37 = tail call noalias i8* @_emalloc(i64 %36) #10
  %38 = bitcast i8* %37 to %1*
  %39 = bitcast i8* %37 to i32*
  store i32 1, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 4
  %41 = bitcast i8* %40 to i32*
  store i32 6, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %37, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 %34, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %37, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 1 %29, i64 %34, i1 false) #9
  %47 = getelementptr inbounds %1, %1* %38, i64 0, i32 3, i64 %34
  store i8 0, i8* %47, align 1
  %48 = bitcast %4* %1 to i8**
  store i8* %37, i8** %48, align 8
  %49 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %49, align 8
  br label %50

50:                                               ; preds = %20, %7, %33, %31, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getFunctions(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = alloca %4, align 8
  %4 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %66, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %66, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %66

28:                                               ; preds = %12
  %29 = bitcast i8* %17 to %39*
  %30 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %31 = load %8*, %8** getelementptr inbounds (%44, %44* @compiler_globals, i64 0, i32 5), align 8
  %32 = getelementptr inbounds %8, %8* %31, i64 0, i32 3
  %33 = load %10*, %10** %32, align 8
  %34 = getelementptr inbounds %8, %8* %31, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %10, %10* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %28
  %40 = bitcast %4* %1 to %8**
  br label %41

41:                                               ; preds = %39, %63
  %42 = phi %10* [ %33, %39 ], [ %64, %63 ]
  %43 = getelementptr inbounds %10, %10* %42, i64 0, i32 0, i32 1
  %44 = bitcast %6* %43 to i8*
  %45 = load i8, i8* %44, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %41
  %48 = bitcast %10* %42 to %11**
  %49 = load %11*, %11** %48, align 8
  %50 = getelementptr inbounds %11, %11* %49, i64 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 1
  br i1 %52, label %53, label %63

53:                                               ; preds = %47
  %54 = getelementptr inbounds %11, %11* %49, i64 0, i32 0, i32 10
  %55 = bitcast i32* %54 to %39**
  %56 = load %39*, %39** %55, align 8
  %57 = icmp eq %39* %56, %29
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  call fastcc void @428(%11* nonnull %49, %4* null, %4* nonnull %3)
  %59 = load %8*, %8** %40, align 8
  %60 = getelementptr inbounds %11, %11* %49, i64 0, i32 0, i32 3
  %61 = load %1*, %1** %60, align 8
  %62 = call %4* @_zend_hash_update(%8* %59, %1* %61, %4* nonnull %3) #9
  br label %63

63:                                               ; preds = %47, %53, %58, %41
  %64 = getelementptr inbounds %10, %10* %42, i64 1
  %65 = icmp eq %10* %64, %37
  br i1 %65, label %66, label %41

66:                                               ; preds = %63, %28, %22, %9, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getConstants(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 12), align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 152
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  tail call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %28, i32 (%4*, i32, %72*, %73*)* nonnull @443, i32 2, %4* %1, i32 %31) #9
  br label %32

32:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @443(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readnone %3) #0 {
  %5 = alloca %4, align 8
  %6 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = bitcast %4* %0 to %74**
  %8 = load %74*, %74** %7, align 8
  %9 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, 41
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  %16 = bitcast i8* %14 to %8***
  %17 = load %8**, %8*** %16, align 8
  br label %33

18:                                               ; preds = %4
  %19 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %10 to i64
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = add i32 %10, 8
  store i32 %23, i32* %9, align 8
  %24 = bitcast i8* %22 to %8***
  %25 = load %8**, %8*** %24, align 8
  %26 = icmp ult i32 %23, 41
  br i1 %26, label %27, label %33

27:                                               ; preds = %18
  %28 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %29 = load i8*, i8** %28, align 8
  %30 = sext i32 %23 to i64
  %31 = getelementptr i8, i8* %29, i64 %30
  %32 = add i32 %10, 16
  store i32 %32, i32* %9, align 8
  br label %38

33:                                               ; preds = %12, %18
  %34 = phi %8** [ %17, %12 ], [ %25, %18 ]
  %35 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr i8, i8* %36, i64 8
  store i8* %37, i8** %35, align 8
  br label %38

38:                                               ; preds = %33, %27
  %39 = phi %8** [ %25, %27 ], [ %34, %33 ]
  %40 = phi i8* [ %31, %27 ], [ %36, %33 ]
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %74, %74* %8, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %68

46:                                               ; preds = %38
  %47 = bitcast %74* %8 to %59**
  %48 = load %59*, %59** %47, align 8
  %49 = getelementptr inbounds %74, %74* %8, i64 0, i32 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = bitcast %4* %5 to %59**
  store %59* %48, %59** %51, align 8
  %52 = getelementptr inbounds %4, %4* %5, i64 0, i32 1, i32 0
  store i32 %50, i32* %52, align 8
  %53 = and i32 %50, 5120
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %46
  %56 = and i32 %50, 4096
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_zval_copy_ctor_func(%4* nonnull %5) #9
  br label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %59, %59* %48, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %60, align 4
  br label %63

63:                                               ; preds = %46, %58, %59
  %64 = load %8*, %8** %39, align 8
  %65 = getelementptr inbounds %74, %74* %8, i64 0, i32 1
  %66 = load %1*, %1** %65, align 8
  %67 = call %4* @_zend_hash_update(%8* %64, %1* %66, %4* nonnull %5) #9
  br label %68

68:                                               ; preds = %63, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getINIEntries(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 39), align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 152
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  tail call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %28, i32 (%4*, i32, %72*, %73*)* nonnull @444, i32 2, %4* %1, i32 %31) #9
  br label %32

32:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @444(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readnone %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %4, align 8
  %8 = bitcast %4* %0 to %37**
  %9 = load %37*, %37** %8, align 8
  %10 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 41
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  %17 = bitcast i8* %15 to %4**
  %18 = load %4*, %4** %17, align 8
  br label %34

19:                                               ; preds = %4
  %20 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %11 to i64
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = add i32 %11, 8
  store i32 %24, i32* %10, align 8
  %25 = bitcast i8* %23 to %4**
  %26 = load %4*, %4** %25, align 8
  %27 = icmp ult i32 %24, 41
  br i1 %27, label %28, label %34

28:                                               ; preds = %19
  %29 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %24 to i64
  %32 = getelementptr i8, i8* %30, i64 %31
  %33 = add i32 %11, 16
  store i32 %33, i32* %10, align 8
  br label %39

34:                                               ; preds = %13, %19
  %35 = phi %4* [ %18, %13 ], [ %26, %19 ]
  %36 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr i8, i8* %37, i64 8
  store i8* %38, i8** %36, align 8
  br label %39

39:                                               ; preds = %34, %28
  %40 = phi %4* [ %26, %28 ], [ %35, %34 ]
  %41 = phi i8* [ %32, %28 ], [ %37, %34 ]
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %37, %37* %9, i64 0, i32 11
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %124

47:                                               ; preds = %39
  %48 = getelementptr inbounds %37, %37* %9, i64 0, i32 5
  %49 = load %1*, %1** %48, align 8
  %50 = icmp eq %1* %49, null
  br i1 %50, label %95, label %51

51:                                               ; preds = %47
  %52 = bitcast %4* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9
  %53 = bitcast %4* %7 to %1**
  store %1* %49, %1** %53, align 8
  %54 = getelementptr inbounds %1, %1* %49, i64 0, i32 0, i32 1
  %55 = bitcast %3* %54 to %57*
  %56 = getelementptr inbounds %57, %57* %55, i64 0, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = and i8 %57, 2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %51
  %61 = getelementptr inbounds %1, %1* %49, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, 1
  store i32 %63, i32* %61, align 8
  br label %64

64:                                               ; preds = %51, %60
  %65 = phi i32 [ 5126, %60 ], [ 6, %51 ]
  %66 = getelementptr inbounds %4, %4* %7, i64 0, i32 1, i32 0
  store i32 %65, i32* %66, align 8
  %67 = bitcast %4* %40 to %8**
  %68 = load %8*, %8** %67, align 8
  %69 = getelementptr inbounds %37, %37* %9, i64 0, i32 0
  %70 = load %1*, %1** %69, align 8
  %71 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = getelementptr inbounds %1, %1* %70, i64 0, i32 3, i64 0
  %73 = getelementptr inbounds %1, %1* %70, i64 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = load i8, i8* %72, align 1
  %76 = icmp sgt i8 %75, 57
  br i1 %76, label %92, label %77

77:                                               ; preds = %64
  %78 = icmp slt i8 %75, 48
  br i1 %78, label %79, label %86

79:                                               ; preds = %77
  %80 = icmp eq i8 %75, 45
  br i1 %80, label %81, label %92

81:                                               ; preds = %79
  %82 = getelementptr inbounds %1, %1* %70, i64 0, i32 3, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = add i8 %83, -48
  %85 = icmp ugt i8 %84, 9
  br i1 %85, label %92, label %86

86:                                               ; preds = %81, %77
  %87 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %72, i64 %74, i64* nonnull %6) #9
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %6, align 8
  %91 = call %4* @_zend_hash_index_update(%8* %68, i64 %90, %4* nonnull %7) #9
  br label %94

92:                                               ; preds = %86, %81, %79, %64
  %93 = call %4* @_zend_hash_update(%8* %68, %1* nonnull %70, %4* nonnull %7) #9
  br label %94

94:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9
  br label %124

95:                                               ; preds = %47
  %96 = bitcast %4* %40 to %8**
  %97 = load %8*, %8** %96, align 8
  %98 = getelementptr inbounds %37, %37* %9, i64 0, i32 0
  %99 = load %1*, %1** %98, align 8
  %100 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #9
  %101 = getelementptr inbounds %1, %1* %99, i64 0, i32 3, i64 0
  %102 = getelementptr inbounds %1, %1* %99, i64 0, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = load i8, i8* %101, align 1
  %105 = icmp sgt i8 %104, 57
  br i1 %105, label %121, label %106

106:                                              ; preds = %95
  %107 = icmp slt i8 %104, 48
  br i1 %107, label %108, label %115

108:                                              ; preds = %106
  %109 = icmp eq i8 %104, 45
  br i1 %109, label %110, label %121

110:                                              ; preds = %108
  %111 = getelementptr inbounds %1, %1* %99, i64 0, i32 3, i64 1
  %112 = load i8, i8* %111, align 1
  %113 = add i8 %112, -48
  %114 = icmp ugt i8 %113, 9
  br i1 %114, label %121, label %115

115:                                              ; preds = %110, %106
  %116 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %101, i64 %103, i64* nonnull %5) #9
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = load i64, i64* %5, align 8
  %120 = call %4* @_zend_hash_index_update(%8* %97, i64 %119, %4* getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 0)) #9
  br label %123

121:                                              ; preds = %115, %110, %108, %95
  %122 = call %4* @_zend_hash_update(%8* %97, %1* nonnull %99, %4* getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 0)) #9
  br label %123

123:                                              ; preds = %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #9
  br label %124

124:                                              ; preds = %94, %123, %39
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getClasses(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %29, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %29

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 11), align 8
  tail call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %28, i32 (%4*, i32, %72*, %73*)* nonnull @445, i32 3, %4* %1, i8* nonnull %15, i32 1) #9
  br label %29

29:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @445(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readonly %3) #0 {
  %5 = alloca %4, align 8
  %6 = bitcast %4* %0 to %0**
  %7 = load %0*, %0** %6, align 8
  %8 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 41
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 8
  store i8* %14, i8** %12, align 8
  %15 = bitcast i8* %13 to %4**
  %16 = load %4*, %4** %15, align 8
  %17 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  br label %28

18:                                               ; preds = %4
  %19 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %9 to i64
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = add i32 %9, 8
  store i32 %23, i32* %8, align 8
  %24 = bitcast i8* %22 to %4**
  %25 = load %4*, %4** %24, align 8
  %26 = bitcast %4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = icmp ult i32 %23, 41
  br i1 %27, label %36, label %28

28:                                               ; preds = %18, %11
  %29 = phi i8* [ %17, %11 ], [ %26, %18 ]
  %30 = phi %4* [ %16, %11 ], [ %25, %18 ]
  %31 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr i8, i8* %32, i64 8
  store i8* %33, i8** %31, align 8
  %34 = bitcast i8* %32 to %39**
  %35 = load %39*, %39** %34, align 8
  br label %51

36:                                               ; preds = %18
  %37 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %38 = load i8*, i8** %37, align 8
  %39 = sext i32 %23 to i64
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = add i32 %9, 16
  store i32 %41, i32* %8, align 8
  %42 = bitcast i8* %40 to %39**
  %43 = load %39*, %39** %42, align 8
  %44 = icmp ult i32 %41, 41
  br i1 %44, label %45, label %51

45:                                               ; preds = %36
  %46 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = sext i32 %41 to i64
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = add i32 %9, 24
  store i32 %50, i32* %8, align 8
  br label %58

51:                                               ; preds = %28, %36
  %52 = phi %39* [ %35, %28 ], [ %43, %36 ]
  %53 = phi %4* [ %30, %28 ], [ %25, %36 ]
  %54 = phi i8* [ %29, %28 ], [ %26, %36 ]
  %55 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr i8, i8* %56, i64 8
  store i8* %57, i8** %55, align 8
  br label %58

58:                                               ; preds = %51, %45
  %59 = phi %39* [ %43, %45 ], [ %52, %51 ]
  %60 = phi %4* [ %25, %45 ], [ %53, %51 ]
  %61 = phi i8* [ %26, %45 ], [ %54, %51 ]
  %62 = phi i8* [ %49, %45 ], [ %56, %51 ]
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %0, %0* %7, i64 0, i32 0
  %66 = load i8, i8* %65, align 8
  %67 = icmp eq i8 %66, 1
  br i1 %67, label %68, label %113

68:                                               ; preds = %58
  %69 = getelementptr inbounds %0, %0* %7, i64 0, i32 39, i32 0, i32 1
  %70 = bitcast i32* %69 to %39**
  %71 = load %39*, %39** %70, align 8
  %72 = icmp eq %39* %71, null
  br i1 %72, label %113, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %39, %39* %71, i64 0, i32 6
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %39, %39* %59, i64 0, i32 6
  %77 = load i8*, i8** %76, align 8
  %78 = tail call i32 @strcasecmp(i8* %75, i8* %77) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %113

80:                                               ; preds = %73
  %81 = getelementptr inbounds %0, %0* %7, i64 0, i32 1
  %82 = load %1*, %1** %81, align 8
  %83 = getelementptr inbounds %1, %1* %82, i64 0, i32 3, i64 0
  %84 = getelementptr inbounds %1, %1* %82, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %73, %73* %3, i64 0, i32 1
  %87 = load %1*, %1** %86, align 8
  %88 = getelementptr inbounds %1, %1* %87, i64 0, i32 3, i64 0
  %89 = getelementptr inbounds %1, %1* %87, i64 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %83, i64 %85, i8* nonnull %88, i64 %90) #9
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, %1** %81, %1** %86
  %94 = load %1*, %1** %93, align 8
  %95 = icmp eq i32 %64, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %80
  call void @zend_reflection_class_factory(%0* nonnull %7, %4* nonnull %5)
  %97 = bitcast %4* %60 to %8**
  %98 = load %8*, %8** %97, align 8
  %99 = call %4* @_zend_hash_update(%8* %98, %1* %94, %4* nonnull %5) #9
  br label %113

100:                                              ; preds = %80
  %101 = getelementptr inbounds %1, %1* %94, i64 0, i32 0, i32 1
  %102 = bitcast %3* %101 to %57*
  %103 = getelementptr inbounds %57, %57* %102, i64 0, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = and i8 %104, 2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %100
  %108 = getelementptr inbounds %1, %1* %94, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 8
  br label %111

111:                                              ; preds = %100, %107
  %112 = tail call i32 @add_next_index_str(%4* %60, %1* nonnull %94) #9
  br label %113

113:                                              ; preds = %96, %111, %73, %68, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #9
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getClassNames(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %29, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %29

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = load %8*, %8** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 11), align 8
  tail call void (%8*, i32 (%4*, i32, %72*, %73*)*, i32, ...) @zend_hash_apply_with_arguments(%8* %28, i32 (%4*, i32, %72*, %73*)* nonnull @445, i32 3, %4* %1, i8* nonnull %15, i32 0) #9
  br label %29

29:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_getDependencies(%23* nocapture readonly %0, %4* %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %99, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %99, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %99

26:                                               ; preds = %10
  %27 = tail call i32 @_array_init(%4* %1, i32 0) #9
  %28 = getelementptr inbounds i8, i8* %15, i64 24
  %29 = bitcast i8* %28 to %40**
  %30 = load %40*, %40** %29, align 8
  %31 = icmp eq %40* %30, null
  br i1 %31, label %99, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %40, %40* %30, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %99, label %36

36:                                               ; preds = %32, %69
  %37 = phi i8** [ %96, %69 ], [ %33, %32 ]
  %38 = getelementptr inbounds i8*, i8** %37, i64 3
  %39 = bitcast i8** %38 to i8*
  %40 = load i8, i8* %39, align 8
  %41 = add i8 %40, -1
  %42 = icmp ult i8 %41, 3
  br i1 %42, label %43, label %50

43:                                               ; preds = %36
  %44 = sext i8 %41 to i64
  %45 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.zim_reflection_extension_getDependencies, i64 0, i64 %44
  %46 = load i8*, i8** %45, align 8
  %47 = sext i8 %41 to i64
  %48 = getelementptr inbounds [3 x i64], [3 x i64]* @switch.table.zim_reflection_extension_getDependencies.1, i64 0, i64 %47
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %36, %43
  %51 = phi i8* [ %46, %43 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @77, i64 0, i64 0), %36 ]
  %52 = phi i64 [ %49, %43 ], [ 5, %36 ]
  %53 = getelementptr inbounds i8*, i8** %37, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %50
  %57 = tail call i64 @strlen(i8* nonnull %54) #11
  %58 = add nuw nsw i64 %52, 1
  %59 = add i64 %58, %57
  br label %60

60:                                               ; preds = %50, %56
  %61 = phi i64 [ %59, %56 ], [ %52, %50 ]
  %62 = getelementptr inbounds i8*, i8** %37, i64 2
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = tail call i64 @strlen(i8* nonnull %63) #11
  %67 = add i64 %61, 1
  %68 = add i64 %67, %66
  br label %69

69:                                               ; preds = %60, %65
  %70 = phi i64 [ %68, %65 ], [ %61, %60 ]
  %71 = add i64 %70, 32
  %72 = and i64 %71, -8
  %73 = tail call noalias i8* @_emalloc(i64 %72) #10
  %74 = bitcast i8* %73 to %1*
  %75 = bitcast i8* %73 to i32*
  store i32 1, i32* %75, align 8
  %76 = getelementptr inbounds i8, i8* %73, i64 4
  %77 = bitcast i8* %76 to i32*
  store i32 6, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %73, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to i64*
  store i64 %70, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %73, i64 24
  %83 = add i64 %70, 1
  %84 = load i8*, i8** %53, align 8
  %85 = icmp ne i8* %84, null
  %86 = select i1 %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)
  %87 = select i1 %85, i8* %84, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)
  %88 = load i8*, i8** %62, align 8
  %89 = icmp ne i8* %88, null
  %90 = select i1 %89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)
  %91 = select i1 %89, i8* %88, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)
  %92 = tail call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* nonnull %82, i64 %83, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @78, i64 0, i64 0), i8* %51, i8* %86, i8* %87, i8* %90, i8* %91) #9
  %93 = load i8*, i8** %37, align 8
  %94 = tail call i64 @strlen(i8* %93) #11
  %95 = tail call i32 @add_assoc_str_ex(%4* %1, i8* %93, i64 %94, %1* %74) #9
  %96 = getelementptr inbounds i8*, i8** %37, i64 4
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %36

99:                                               ; preds = %69, %32, %26, %20, %7, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_info(%23* nocapture readonly %0, %4* nocapture readnone %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %28, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %28, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %28

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to %39*
  tail call void @php_info_print_module(%39* %27) #9
  br label %28

28:                                               ; preds = %20, %7, %26, %25
  ret void
}

declare dso_local void @php_info_print_module(%39*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_isPersistent(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 140
  %28 = load i8, i8* %27, align 4
  %29 = icmp eq i8 %28, 1
  %30 = select i1 %29, i32 3, i32 2
  %31 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_extension_isTemporary(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %32

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 140
  %28 = load i8, i8* %27, align 4
  %29 = icmp eq i8 %28, 2
  %30 = select i1 %29, i32 3, i32 2
  %31 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension_export(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = load %0*, %0** @reflection_zend_extension_ptr, align 8
  %4 = getelementptr %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  tail call fastcc void @425(i32 %5, %4* %1, %0* %3, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension___construct(%23* %0, %4* nocapture readnone %1) #0 {
  %3 = alloca %4, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %4, align 8
  %7 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0), i8** nonnull %4, i64* nonnull %5) #9
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %79, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %16 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 1
  %17 = bitcast %6* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 8
  %20 = select i1 %19, %4* %15, %4* null
  %21 = bitcast %4* %20 to %21**
  %22 = load %21*, %21** %21, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = call %75* @zend_get_extension(i8* %23) #9
  %25 = icmp eq %75* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %14
  %27 = load %0*, %0** @reflection_exception_ptr, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %27, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @80, i64 0, i64 0), i8* %28) #9
  br label %79

30:                                               ; preds = %14
  %31 = getelementptr inbounds %75, %75* %24, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @strlen(i8* %32) #11
  %34 = add i64 %33, 32
  %35 = and i64 %34, -8
  %36 = call noalias i8* @_emalloc(i64 %35) #10
  %37 = bitcast i8* %36 to %1*
  %38 = bitcast i8* %36 to i32*
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 4
  %40 = bitcast i8* %39 to i32*
  store i32 6, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %36, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 16
  %44 = bitcast i8* %43 to i64*
  store i64 %33, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %36, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 1 %32, i64 %33, i1 false) #9
  %46 = getelementptr inbounds %1, %1* %37, i64 0, i32 3, i64 %33
  store i8 0, i8* %46, align 1
  %47 = bitcast %4* %3 to i8**
  store i8* %36, i8** %47, align 8
  %48 = getelementptr inbounds %4, %4* %3, i64 0, i32 1
  %49 = getelementptr inbounds %6, %6* %48, i64 0, i32 0
  store i32 5126, i32* %49, align 8
  %50 = bitcast %4* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = call noalias i8* @_emalloc(i64 32) #10
  %52 = bitcast i8* %51 to i32*
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 4
  %54 = bitcast i8* %53 to i32*
  store i32 6, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %51, i64 8
  %56 = bitcast i8* %55 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4>, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds i8, i8* %51, i64 24
  %58 = bitcast i8* %57 to i32*
  store i32 1701667182, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %51, i64 28
  store i8 0, i8* %59, align 1
  %60 = bitcast %4* %6 to i8**
  store i8* %51, i8** %60, align 8
  %61 = getelementptr inbounds %4, %4* %6, i64 0, i32 1, i32 0
  store i32 5126, i32* %61, align 8
  call void @zend_std_write_property(%4* %20, %4* nonnull %6, %4* nonnull %3, i8** null) #9
  %62 = bitcast %6* %48 to %58*
  %63 = getelementptr inbounds %58, %58* %62, i64 0, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = and i8 %64, 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %30
  %68 = bitcast %4* %3 to %59**
  %69 = load %59*, %59** %68, align 8
  %70 = getelementptr inbounds %59, %59* %69, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, -1
  store i32 %72, i32* %70, align 4
  br label %73

73:                                               ; preds = %30, %67
  call void @_zval_ptr_dtor(%4* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  %74 = getelementptr inbounds %21, %21* %22, i64 -1, i32 4
  %75 = bitcast %8** %74 to %75**
  store %75* %24, %75** %75, align 8
  %76 = getelementptr inbounds %21, %21* %22, i64 -1, i32 5, i64 0, i32 1, i32 0
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %21, %21* %22, i64 -1, i32 5
  %78 = bitcast [1 x %4]* %77 to %0**
  store %0* null, %0** %78, align 8
  br label %79

79:                                               ; preds = %2, %73, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare dso_local %75* @zend_get_extension(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension___toString(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = alloca %62, align 8
  %4 = bitcast %62* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %6 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %95, label %12

12:                                               ; preds = %2, %9
  %13 = bitcast %4* %5 to %21**
  %14 = load %21*, %21** %13, align 8
  %15 = getelementptr inbounds %21, %21* %14, i64 -1, i32 4
  %16 = bitcast %8** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %12
  %20 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %21 = icmp eq %21* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %21, %21* %20, i64 0, i32 2
  %24 = load %0*, %0** %23, align 8
  %25 = load %0*, %0** @reflection_exception_ptr, align 8
  %26 = icmp eq %0* %24, %25
  br i1 %26, label %95, label %27

27:                                               ; preds = %19, %22
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %95

28:                                               ; preds = %12
  %29 = bitcast i8* %17 to i8**
  %30 = load i8*, i8** %29, align 8
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @240, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i8* %30) #9
  %31 = getelementptr inbounds i8, i8* %17, i64 8
  %32 = bitcast i8* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %28
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @160, i64 0, i64 0), i8* nonnull %33) #9
  br label %36

36:                                               ; preds = %35, %28
  %37 = getelementptr inbounds i8, i8* %17, i64 32
  %38 = bitcast i8* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @160, i64 0, i64 0), i8* nonnull %39) #9
  br label %42

42:                                               ; preds = %41, %36
  %43 = getelementptr inbounds i8, i8* %17, i64 16
  %44 = bitcast i8* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %42
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @241, i64 0, i64 0), i8* nonnull %45) #9
  br label %48

48:                                               ; preds = %47, %42
  %49 = getelementptr inbounds i8, i8* %17, i64 24
  %50 = bitcast i8* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @242, i64 0, i64 0), i8* nonnull %51) #9
  br label %54

54:                                               ; preds = %53, %48
  %55 = getelementptr inbounds %62, %62* %3, i64 0, i32 0
  %56 = load %1*, %1** %55, align 8
  %57 = icmp eq %1* %56, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %1, %1* %56, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 2
  %62 = getelementptr inbounds %62, %62* %3, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %70, label %65

65:                                               ; preds = %58, %54
  %66 = phi i64 [ 2, %54 ], [ %61, %58 ]
  call void @smart_str_erealloc(%62* nonnull %3, i64 %66) #9
  %67 = load %1*, %1** %55, align 8
  %68 = getelementptr inbounds %1, %1* %67, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  br label %70

70:                                               ; preds = %58, %65
  %71 = phi i64 [ %69, %65 ], [ %60, %58 ]
  %72 = phi %1* [ %67, %65 ], [ %56, %58 ]
  %73 = phi i64 [ %66, %65 ], [ %61, %58 ]
  %74 = getelementptr inbounds %1, %1* %72, i64 0, i32 3, i64 %71
  %75 = bitcast i8* %74 to i16*
  store i16 2653, i16* %75, align 1
  %76 = load %1*, %1** %55, align 8
  %77 = getelementptr inbounds %1, %1* %76, i64 0, i32 2
  store i64 %73, i64* %77, align 8
  %78 = icmp eq %1* %76, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %1, %1* %76, i64 0, i32 3, i64 %73
  store i8 0, i8* %80, align 1
  %81 = load %1*, %1** %55, align 8
  store %1* null, %1** %55, align 8
  br label %84

82:                                               ; preds = %70
  %83 = load %1*, %1** @zend_empty_string, align 8
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi %1* [ %81, %79 ], [ %83, %82 ]
  %86 = bitcast %4* %1 to %1**
  store %1* %85, %1** %86, align 8
  %87 = getelementptr inbounds %1, %1* %85, i64 0, i32 0, i32 1
  %88 = bitcast %3* %87 to %57*
  %89 = getelementptr inbounds %57, %57* %88, i64 0, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = and i8 %90, 2
  %92 = icmp eq i8 %91, 0
  %93 = select i1 %92, i32 5126, i32 6
  %94 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 %93, i32* %94, align 8
  br label %95

95:                                               ; preds = %22, %9, %84, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension_getName(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %45, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %45, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %45

26:                                               ; preds = %10
  %27 = bitcast i8* %15 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i64 @strlen(i8* %28) #11
  %30 = add i64 %29, 32
  %31 = and i64 %30, -8
  %32 = tail call noalias i8* @_emalloc(i64 %31) #10
  %33 = bitcast i8* %32 to %1*
  %34 = bitcast i8* %32 to i32*
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 6, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %29, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 1 %28, i64 %29, i1 false) #9
  %42 = getelementptr inbounds %1, %1* %33, i64 0, i32 3, i64 %29
  store i8 0, i8* %42, align 1
  %43 = bitcast %4* %1 to i8**
  store i8* %32, i8** %43, align 8
  %44 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %44, align 8
  br label %45

45:                                               ; preds = %20, %7, %26, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension_getVersion(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %52, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %52, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %52

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = tail call i64 @strlen(i8* nonnull %29) #11
  %33 = add i64 %32, 32
  %34 = and i64 %33, -8
  %35 = tail call noalias i8* @_emalloc(i64 %34) #10
  %36 = bitcast i8* %35 to %1*
  %37 = bitcast i8* %35 to i32*
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 6, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %35, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 %32, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 1 %29, i64 %32, i1 false) #9
  %45 = getelementptr inbounds %1, %1* %36, i64 0, i32 3, i64 %32
  store i8 0, i8* %45, align 1
  %46 = bitcast %4* %1 to i8**
  store i8* %35, i8** %46, align 8
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %47, align 8
  br label %52

48:                                               ; preds = %26
  %49 = load i64, i64* bitcast (%1** @zend_empty_string to i64*), align 8
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %51, align 8
  br label %52

52:                                               ; preds = %20, %7, %48, %31, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension_getAuthor(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %52, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %52, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %52

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 16
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = tail call i64 @strlen(i8* nonnull %29) #11
  %33 = add i64 %32, 32
  %34 = and i64 %33, -8
  %35 = tail call noalias i8* @_emalloc(i64 %34) #10
  %36 = bitcast i8* %35 to %1*
  %37 = bitcast i8* %35 to i32*
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 6, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %35, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 %32, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 1 %29, i64 %32, i1 false) #9
  %45 = getelementptr inbounds %1, %1* %36, i64 0, i32 3, i64 %32
  store i8 0, i8* %45, align 1
  %46 = bitcast %4* %1 to i8**
  store i8* %35, i8** %46, align 8
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %47, align 8
  br label %52

48:                                               ; preds = %26
  %49 = load i64, i64* bitcast (%1** @zend_empty_string to i64*), align 8
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %51, align 8
  br label %52

52:                                               ; preds = %20, %7, %48, %31, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension_getURL(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %52, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %52, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %52

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 24
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = tail call i64 @strlen(i8* nonnull %29) #11
  %33 = add i64 %32, 32
  %34 = and i64 %33, -8
  %35 = tail call noalias i8* @_emalloc(i64 %34) #10
  %36 = bitcast i8* %35 to %1*
  %37 = bitcast i8* %35 to i32*
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 6, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %35, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 %32, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 1 %29, i64 %32, i1 false) #9
  %45 = getelementptr inbounds %1, %1* %36, i64 0, i32 3, i64 %32
  store i8 0, i8* %45, align 1
  %46 = bitcast %4* %1 to i8**
  store i8* %35, i8** %46, align 8
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %47, align 8
  br label %52

48:                                               ; preds = %26
  %49 = load i64, i64* bitcast (%1** @zend_empty_string to i64*), align 8
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %51, align 8
  br label %52

52:                                               ; preds = %20, %7, %48, %31, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_reflection_zend_extension_getCopyright(%23* nocapture readonly %0, %4* nocapture %1) #0 {
  %3 = getelementptr inbounds %23, %23* %0, i64 0, i32 4
  %4 = getelementptr inbounds %23, %23* %0, i64 0, i32 4, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0)) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %52, label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %4* %3 to %21**
  %12 = load %21*, %21** %11, align 8
  %13 = getelementptr inbounds %21, %21* %12, i64 -1, i32 4
  %14 = bitcast %8** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = load %21*, %21** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 43), align 8
  %19 = icmp eq %21* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %21, %21* %18, i64 0, i32 2
  %22 = load %0*, %0** %21, align 8
  %23 = load %0*, %0** @reflection_exception_ptr, align 8
  %24 = icmp eq %0* %22, %23
  br i1 %24, label %52, label %25

25:                                               ; preds = %17, %20
  tail call void (%0*, i8*, ...) @zend_throw_error(%0* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @17, i64 0, i64 0)) #9
  br label %52

26:                                               ; preds = %10
  %27 = getelementptr inbounds i8, i8* %15, i64 32
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = tail call i64 @strlen(i8* nonnull %29) #11
  %33 = add i64 %32, 32
  %34 = and i64 %33, -8
  %35 = tail call noalias i8* @_emalloc(i64 %34) #10
  %36 = bitcast i8* %35 to %1*
  %37 = bitcast i8* %35 to i32*
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 6, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %35, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 %32, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 1 %29, i64 %32, i1 false) #9
  %45 = getelementptr inbounds %1, %1* %36, i64 0, i32 3, i64 %32
  store i8 0, i8* %45, align 1
  %46 = bitcast %4* %1 to i8**
  store i8* %35, i8** %46, align 8
  %47 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 5126, i32* %47, align 8
  br label %52

48:                                               ; preds = %26
  %49 = load i64, i64* bitcast (%1** @zend_empty_string to i64*), align 8
  %50 = getelementptr inbounds %4, %4* %1, i64 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %4, %4* %1, i64 0, i32 1, i32 0
  store i32 6, i32* %51, align 8
  br label %52

52:                                               ; preds = %20, %7, %48, %31, %25
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_startup_reflection(i32 %0, i32 %1) #0 {
  %3 = alloca %0, align 8
  %4 = getelementptr inbounds %0, %0* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 504, i8* nonnull %4) #9
  %5 = tail call %22* @zend_get_std_object_handlers() #9
  store %22* %5, %22** @81, align 8
  %6 = tail call %22* @zend_get_std_object_handlers() #9
  %7 = bitcast %22* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%22* @82 to i8*), i8* align 8 %7, i64 224, i1 false)
  store i32 56, i32* getelementptr inbounds (%22, %22* @82, i64 0, i32 0), align 8
  store void (%21*)* @446, void (%21*)** getelementptr inbounds (%22, %22* @82, i64 0, i32 1), align 8
  store %21* (%4*)* null, %21* (%4*)** getelementptr inbounds (%22, %22* @82, i64 0, i32 3), align 8
  store void (%4*, %4*, %4*, i8**)* @447, void (%4*, %4*, %4*, i8**)** getelementptr inbounds (%22, %22* @82, i64 0, i32 5), align 8
  store %8* (%4*, %4**, i32*)* @448, %8* (%4*, %4**, i32*)** getelementptr inbounds (%22, %22* @82, i64 0, i32 25), align 8
  %8 = tail call noalias i8* @__zend_malloc(i64 48) #10
  %9 = bitcast i8* %8 to %1*
  %10 = bitcast i8* %8 to i32*
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 4
  %12 = bitcast i8* %11 to i32*
  store i32 262, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 0, i64 19>, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @83, i64 0, i64 0), i64 19, i1 false) #9
  %16 = getelementptr inbounds i8, i8* %8, i64 43
  store i8 0, i8* %16, align 1
  %17 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %18 = tail call %1* %17(%1* %9) #9
  %19 = getelementptr inbounds %0, %0* %3, i64 0, i32 1
  store %1* %18, %1** %19, align 8
  %20 = getelementptr inbounds %0, %0* %3, i64 0, i32 13
  %21 = getelementptr inbounds %0, %0* %3, i64 0, i32 27
  %22 = getelementptr inbounds %0, %0* %3, i64 0, i32 2
  store %0* null, %0** %22, align 8
  %23 = getelementptr inbounds %0, %0* %3, i64 0, i32 39
  %24 = getelementptr inbounds %0, %0* %3, i64 0, i32 39, i32 0, i32 1
  %25 = bitcast i32* %24 to %39**
  store %39* null, %39** %25, align 8
  %26 = bitcast %30* %23 to %41**
  %27 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 112, i1 false)
  %28 = bitcast %21* (%0*)** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 88, i1 false)
  store %41* getelementptr inbounds ([1 x %41], [1 x %41]* @84, i64 0, i64 0), %41** %26, align 8
  %29 = load %0*, %0** @zend_ce_exception, align 8
  %30 = call %0* @zend_register_internal_class_ex(%0* nonnull %3, %0* %29) #9
  store %0* %30, %0** @reflection_exception_ptr, align 8
  %31 = call noalias i8* @__zend_malloc(i64 40) #10
  %32 = bitcast i8* %31 to %1*
  %33 = bitcast i8* %31 to i32*
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 4
  %35 = bitcast i8* %34 to i32*
  store i32 262, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %31, i64 8
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10>, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds i8, i8* %31, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i64 10, i1 false) #9
  %39 = getelementptr inbounds i8, i8* %31, i64 34
  store i8 0, i8* %39, align 1
  %40 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %41 = call %1* %40(%1* %32) #9
  store %1* %41, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %42 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 112, i1 false)
  %43 = bitcast %21* (%0*)** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 88, i1 false)
  store %41* getelementptr inbounds ([3 x %41], [3 x %41]* @86, i64 0, i64 0), %41** %26, align 8
  %44 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %44, %0** @reflection_ptr, align 8
  %45 = call noalias i8* @__zend_malloc(i64 40) #10
  %46 = bitcast i8* %45 to %1*
  %47 = bitcast i8* %45 to i32*
  store i32 1, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %45, i64 4
  %49 = bitcast i8* %48 to i32*
  store i32 262, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %45, i64 8
  %51 = bitcast i8* %50 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9>, <2 x i64>* %51, align 8
  %52 = getelementptr inbounds i8, i8* %45, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @87, i64 0, i64 0), i64 9, i1 false) #9
  %53 = getelementptr inbounds i8, i8* %45, i64 33
  store i8 0, i8* %53, align 1
  %54 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %55 = call %1* %54(%1* %46) #9
  store %1* %55, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %56 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 112, i1 false)
  %57 = bitcast %21* (%0*)** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 88, i1 false)
  store %41* getelementptr inbounds ([3 x %41], [3 x %41]* @88, i64 0, i64 0), %41** %26, align 8
  %58 = call %0* @zend_register_internal_interface(%0* nonnull %3) #9
  store %0* %58, %0** @reflector_ptr, align 8
  %59 = call noalias i8* @__zend_malloc(i64 56) #10
  %60 = bitcast i8* %59 to %1*
  %61 = bitcast i8* %59 to i32*
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %59, i64 4
  %63 = bitcast i8* %62 to i32*
  store i32 262, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %59, i64 8
  %65 = bitcast i8* %64 to <2 x i64>*
  store <2 x i64> <i64 0, i64 26>, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @89, i64 0, i64 0), i64 26, i1 false) #9
  %67 = getelementptr inbounds i8, i8* %59, i64 50
  store i8 0, i8* %67, align 1
  %68 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %69 = call %1* %68(%1* %60) #9
  store %1* %69, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %70 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 112, i1 false)
  %71 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %72 = bitcast %21* (%0*)** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([27 x %41], [27 x %41]* @90, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %73 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %73, %0** @reflection_function_abstract_ptr, align 8
  %74 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %73, i32 1, %0* %74) #9
  %75 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %76 = call i32 @zend_declare_property_string(%0* %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 2) #9
  %77 = call noalias i8* @__zend_malloc(i64 48) #10
  %78 = bitcast i8* %77 to %1*
  %79 = bitcast i8* %77 to i32*
  store i32 1, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 4
  %81 = bitcast i8* %80 to i32*
  store i32 262, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %77, i64 8
  %83 = bitcast i8* %82 to <2 x i64>*
  store <2 x i64> <i64 0, i64 18>, <2 x i64>* %83, align 8
  %84 = getelementptr inbounds i8, i8* %77, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @91, i64 0, i64 0), i64 18, i1 false) #9
  %85 = getelementptr inbounds i8, i8* %77, i64 42
  store i8 0, i8* %85, align 1
  %86 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %87 = call %1* %86(%1* %78) #9
  store %1* %87, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %88 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 112, i1 false)
  %89 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %90 = bitcast %21* (%0*)** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([8 x %41], [8 x %41]* @92, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %91 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %92 = call %0* @zend_register_internal_class_ex(%0* nonnull %3, %0* %91) #9
  store %0* %92, %0** @reflection_function_ptr, align 8
  %93 = call i32 @zend_declare_property_string(%0* %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %94 = load %0*, %0** @reflection_function_ptr, align 8
  %95 = call i32 @zend_declare_class_constant_long(%0* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @93, i64 0, i64 0), i64 13, i64 262144) #9
  %96 = call noalias i8* @__zend_malloc(i64 48) #10
  %97 = bitcast i8* %96 to %1*
  %98 = bitcast i8* %96 to i32*
  store i32 1, i32* %98, align 8
  %99 = getelementptr inbounds i8, i8* %96, i64 4
  %100 = bitcast i8* %99 to i32*
  store i32 262, i32* %100, align 4
  %101 = getelementptr inbounds i8, i8* %96, i64 8
  %102 = bitcast i8* %101 to <2 x i64>*
  store <2 x i64> <i64 0, i64 19>, <2 x i64>* %102, align 8
  %103 = getelementptr inbounds i8, i8* %96, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @94, i64 0, i64 0), i64 19, i1 false) #9
  %104 = getelementptr inbounds i8, i8* %96, i64 43
  store i8 0, i8* %104, align 1
  %105 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %106 = call %1* %105(%1* %97) #9
  store %1* %106, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %107 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 112, i1 false)
  %108 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %109 = bitcast %21* (%0*)** %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([8 x %41], [8 x %41]* @95, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %110 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %110, %0** @reflection_generator_ptr, align 8
  %111 = call noalias i8* @__zend_malloc(i64 48) #10
  %112 = bitcast i8* %111 to %1*
  %113 = bitcast i8* %111 to i32*
  store i32 1, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 4
  %115 = bitcast i8* %114 to i32*
  store i32 262, i32* %115, align 4
  %116 = getelementptr inbounds i8, i8* %111, i64 8
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> <i64 0, i64 19>, <2 x i64>* %117, align 8
  %118 = getelementptr inbounds i8, i8* %111, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @96, i64 0, i64 0), i64 19, i1 false) #9
  %119 = getelementptr inbounds i8, i8* %111, i64 43
  store i8 0, i8* %119, align 1
  %120 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %121 = call %1* %120(%1* %112) #9
  store %1* %121, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %122 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 112, i1 false)
  %123 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %124 = bitcast %21* (%0*)** %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([23 x %41], [23 x %41]* @97, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %125 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %125, %0** @reflection_parameter_ptr, align 8
  %126 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %125, i32 1, %0* %126) #9
  %127 = load %0*, %0** @reflection_parameter_ptr, align 8
  %128 = call i32 @zend_declare_property_string(%0* %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %129 = call noalias i8* @__zend_malloc(i64 40) #10
  %130 = bitcast i8* %129 to %1*
  %131 = bitcast i8* %129 to i32*
  store i32 1, i32* %131, align 8
  %132 = getelementptr inbounds i8, i8* %129, i64 4
  %133 = bitcast i8* %132 to i32*
  store i32 262, i32* %133, align 4
  %134 = getelementptr inbounds i8, i8* %129, i64 8
  %135 = bitcast i8* %134 to <2 x i64>*
  store <2 x i64> <i64 0, i64 14>, <2 x i64>* %135, align 8
  %136 = getelementptr inbounds i8, i8* %129, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @98, i64 0, i64 0), i64 14, i1 false) #9
  %137 = getelementptr inbounds i8, i8* %129, i64 38
  store i8 0, i8* %137, align 1
  %138 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %139 = call %1* %138(%1* %130) #9
  store %1* %139, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %140 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 0, i64 112, i1 false)
  %141 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %142 = bitcast %21* (%0*)** %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([5 x %41], [5 x %41]* @99, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %143 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %143, %0** @reflection_type_ptr, align 8
  %144 = call noalias i8* @__zend_malloc(i64 48) #10
  %145 = bitcast i8* %144 to %1*
  %146 = bitcast i8* %144 to i32*
  store i32 1, i32* %146, align 8
  %147 = getelementptr inbounds i8, i8* %144, i64 4
  %148 = bitcast i8* %147 to i32*
  store i32 262, i32* %148, align 4
  %149 = getelementptr inbounds i8, i8* %144, i64 8
  %150 = bitcast i8* %149 to <2 x i64>*
  store <2 x i64> <i64 0, i64 19>, <2 x i64>* %150, align 8
  %151 = getelementptr inbounds i8, i8* %144, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @100, i64 0, i64 0), i64 19, i1 false) #9
  %152 = getelementptr inbounds i8, i8* %144, i64 43
  store i8 0, i8* %152, align 1
  %153 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %154 = call %1* %153(%1* %145) #9
  store %1* %154, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %155 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 112, i1 false)
  %156 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %157 = bitcast %21* (%0*)** %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([2 x %41], [2 x %41]* @101, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %158 = load %0*, %0** @reflection_type_ptr, align 8
  %159 = call %0* @zend_register_internal_class_ex(%0* nonnull %3, %0* %158) #9
  store %0* %159, %0** @reflection_named_type_ptr, align 8
  %160 = call noalias i8* @__zend_malloc(i64 48) #10
  %161 = bitcast i8* %160 to %1*
  %162 = bitcast i8* %160 to i32*
  store i32 1, i32* %162, align 8
  %163 = getelementptr inbounds i8, i8* %160, i64 4
  %164 = bitcast i8* %163 to i32*
  store i32 262, i32* %164, align 4
  %165 = getelementptr inbounds i8, i8* %160, i64 8
  %166 = bitcast i8* %165 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %166, align 8
  %167 = getelementptr inbounds i8, i8* %160, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @102, i64 0, i64 0), i64 16, i1 false) #9
  %168 = getelementptr inbounds i8, i8* %160, i64 40
  store i8 0, i8* %168, align 1
  %169 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %170 = call %1* %169(%1* %161) #9
  store %1* %170, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %171 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 112, i1 false)
  %172 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %173 = bitcast %21* (%0*)** %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([19 x %41], [19 x %41]* @103, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %174 = load %0*, %0** @reflection_function_abstract_ptr, align 8
  %175 = call %0* @zend_register_internal_class_ex(%0* nonnull %3, %0* %174) #9
  store %0* %175, %0** @reflection_method_ptr, align 8
  %176 = call i32 @zend_declare_property_string(%0* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %177 = load %0*, %0** @reflection_method_ptr, align 8
  %178 = call i32 @zend_declare_property_string(%0* %177, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %179 = load %0*, %0** @reflection_method_ptr, align 8
  %180 = call i32 @zend_declare_class_constant_long(%0* %179, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @104, i64 0, i64 0), i64 9, i64 1) #9
  %181 = load %0*, %0** @reflection_method_ptr, align 8
  %182 = call i32 @zend_declare_class_constant_long(%0* %181, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @105, i64 0, i64 0), i64 9, i64 256) #9
  %183 = load %0*, %0** @reflection_method_ptr, align 8
  %184 = call i32 @zend_declare_class_constant_long(%0* %183, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @106, i64 0, i64 0), i64 12, i64 512) #9
  %185 = load %0*, %0** @reflection_method_ptr, align 8
  %186 = call i32 @zend_declare_class_constant_long(%0* %185, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @107, i64 0, i64 0), i64 10, i64 1024) #9
  %187 = load %0*, %0** @reflection_method_ptr, align 8
  %188 = call i32 @zend_declare_class_constant_long(%0* %187, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @108, i64 0, i64 0), i64 11, i64 2) #9
  %189 = load %0*, %0** @reflection_method_ptr, align 8
  %190 = call i32 @zend_declare_class_constant_long(%0* %189, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @109, i64 0, i64 0), i64 8, i64 4) #9
  %191 = call noalias i8* @__zend_malloc(i64 40) #10
  %192 = bitcast i8* %191 to %1*
  %193 = bitcast i8* %191 to i32*
  store i32 1, i32* %193, align 8
  %194 = getelementptr inbounds i8, i8* %191, i64 4
  %195 = bitcast i8* %194 to i32*
  store i32 262, i32* %195, align 4
  %196 = getelementptr inbounds i8, i8* %191, i64 8
  %197 = bitcast i8* %196 to <2 x i64>*
  store <2 x i64> <i64 0, i64 15>, <2 x i64>* %197, align 8
  %198 = getelementptr inbounds i8, i8* %191, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %198, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @110, i64 0, i64 0), i64 15, i1 false) #9
  %199 = getelementptr inbounds i8, i8* %191, i64 39
  store i8 0, i8* %199, align 1
  %200 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %201 = call %1* %200(%1* %192) #9
  store %1* %201, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %202 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 0, i64 112, i1 false)
  %203 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %204 = bitcast %21* (%0*)** %203 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([55 x %41], [55 x %41]* @111, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %205 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %205, %0** @reflection_class_ptr, align 8
  %206 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %205, i32 1, %0* %206) #9
  %207 = load %0*, %0** @reflection_class_ptr, align 8
  %208 = call i32 @zend_declare_property_string(%0* %207, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %209 = load %0*, %0** @reflection_class_ptr, align 8
  %210 = call i32 @zend_declare_class_constant_long(%0* %209, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @112, i64 0, i64 0), i64 20, i64 16) #9
  %211 = load %0*, %0** @reflection_class_ptr, align 8
  %212 = call i32 @zend_declare_class_constant_long(%0* %211, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @113, i64 0, i64 0), i64 20, i64 32) #9
  %213 = load %0*, %0** @reflection_class_ptr, align 8
  %214 = call i32 @zend_declare_class_constant_long(%0* %213, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @109, i64 0, i64 0), i64 8, i64 4) #9
  %215 = call noalias i8* @__zend_malloc(i64 48) #10
  %216 = bitcast i8* %215 to %1*
  %217 = bitcast i8* %215 to i32*
  store i32 1, i32* %217, align 8
  %218 = getelementptr inbounds i8, i8* %215, i64 4
  %219 = bitcast i8* %218 to i32*
  store i32 262, i32* %219, align 4
  %220 = getelementptr inbounds i8, i8* %215, i64 8
  %221 = bitcast i8* %220 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %221, align 8
  %222 = getelementptr inbounds i8, i8* %215, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %222, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @114, i64 0, i64 0), i64 16, i1 false) #9
  %223 = getelementptr inbounds i8, i8* %215, i64 40
  store i8 0, i8* %223, align 1
  %224 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %225 = call %1* %224(%1* %216) #9
  store %1* %225, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %226 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 0, i64 112, i1 false)
  %227 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %228 = bitcast %21* (%0*)** %227 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([3 x %41], [3 x %41]* @115, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %229 = load %0*, %0** @reflection_class_ptr, align 8
  %230 = call %0* @zend_register_internal_class_ex(%0* nonnull %3, %0* %229) #9
  store %0* %230, %0** @reflection_object_ptr, align 8
  %231 = call noalias i8* @__zend_malloc(i64 48) #10
  %232 = bitcast i8* %231 to %1*
  %233 = bitcast i8* %231 to i32*
  store i32 1, i32* %233, align 8
  %234 = getelementptr inbounds i8, i8* %231, i64 4
  %235 = bitcast i8* %234 to i32*
  store i32 262, i32* %235, align 4
  %236 = getelementptr inbounds i8, i8* %231, i64 8
  %237 = bitcast i8* %236 to <2 x i64>*
  store <2 x i64> <i64 0, i64 18>, <2 x i64>* %237, align 8
  %238 = getelementptr inbounds i8, i8* %231, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %238, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @116, i64 0, i64 0), i64 18, i1 false) #9
  %239 = getelementptr inbounds i8, i8* %231, i64 42
  store i8 0, i8* %239, align 1
  %240 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %241 = call %1* %240(%1* %232) #9
  store %1* %241, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %242 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 112, i1 false)
  %243 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %244 = bitcast %21* (%0*)** %243 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([17 x %41], [17 x %41]* @117, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %245 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %245, %0** @reflection_property_ptr, align 8
  %246 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %245, i32 1, %0* %246) #9
  %247 = load %0*, %0** @reflection_property_ptr, align 8
  %248 = call i32 @zend_declare_property_string(%0* %247, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %249 = load %0*, %0** @reflection_property_ptr, align 8
  %250 = call i32 @zend_declare_property_string(%0* %249, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %251 = call noalias i8* @__zend_malloc(i64 48) #10
  %252 = bitcast i8* %251 to %1*
  %253 = bitcast i8* %251 to i32*
  store i32 1, i32* %253, align 8
  %254 = getelementptr inbounds i8, i8* %251, i64 4
  %255 = bitcast i8* %254 to i32*
  store i32 262, i32* %255, align 4
  %256 = getelementptr inbounds i8, i8* %251, i64 8
  %257 = bitcast i8* %256 to <2 x i64>*
  store <2 x i64> <i64 0, i64 23>, <2 x i64>* %257, align 8
  %258 = getelementptr inbounds i8, i8* %251, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %258, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @118, i64 0, i64 0), i64 23, i1 false) #9
  %259 = getelementptr inbounds i8, i8* %251, i64 47
  store i8 0, i8* %259, align 1
  %260 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %261 = call %1* %260(%1* %252) #9
  store %1* %261, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %262 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 0, i64 112, i1 false)
  %263 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %264 = bitcast %21* (%0*)** %263 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([13 x %41], [13 x %41]* @119, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %265 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %265, %0** @reflection_class_constant_ptr, align 8
  %266 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %265, i32 1, %0* %266) #9
  %267 = load %0*, %0** @reflection_class_constant_ptr, align 8
  %268 = call i32 @zend_declare_property_string(%0* %267, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %269 = load %0*, %0** @reflection_class_constant_ptr, align 8
  %270 = call i32 @zend_declare_property_string(%0* %269, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %271 = load %0*, %0** @reflection_property_ptr, align 8
  %272 = call i32 @zend_declare_class_constant_long(%0* %271, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @104, i64 0, i64 0), i64 9, i64 1) #9
  %273 = load %0*, %0** @reflection_property_ptr, align 8
  %274 = call i32 @zend_declare_class_constant_long(%0* %273, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @105, i64 0, i64 0), i64 9, i64 256) #9
  %275 = load %0*, %0** @reflection_property_ptr, align 8
  %276 = call i32 @zend_declare_class_constant_long(%0* %275, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @106, i64 0, i64 0), i64 12, i64 512) #9
  %277 = load %0*, %0** @reflection_property_ptr, align 8
  %278 = call i32 @zend_declare_class_constant_long(%0* %277, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @107, i64 0, i64 0), i64 10, i64 1024) #9
  %279 = call noalias i8* @__zend_malloc(i64 48) #10
  %280 = bitcast i8* %279 to %1*
  %281 = bitcast i8* %279 to i32*
  store i32 1, i32* %281, align 8
  %282 = getelementptr inbounds i8, i8* %279, i64 4
  %283 = bitcast i8* %282 to i32*
  store i32 262, i32* %283, align 4
  %284 = getelementptr inbounds i8, i8* %279, i64 8
  %285 = bitcast i8* %284 to <2 x i64>*
  store <2 x i64> <i64 0, i64 19>, <2 x i64>* %285, align 8
  %286 = getelementptr inbounds i8, i8* %279, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %286, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @120, i64 0, i64 0), i64 19, i1 false) #9
  %287 = getelementptr inbounds i8, i8* %279, i64 43
  store i8 0, i8* %287, align 1
  %288 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %289 = call %1* %288(%1* %280) #9
  store %1* %289, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %290 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 0, i64 112, i1 false)
  %291 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %292 = bitcast %21* (%0*)** %291 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %292, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([16 x %41], [16 x %41]* @121, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %293 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %293, %0** @reflection_extension_ptr, align 8
  %294 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %293, i32 1, %0* %294) #9
  %295 = load %0*, %0** @reflection_extension_ptr, align 8
  %296 = call i32 @zend_declare_property_string(%0* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  %297 = call noalias i8* @__zend_malloc(i64 48) #10
  %298 = bitcast i8* %297 to %1*
  %299 = bitcast i8* %297 to i32*
  store i32 1, i32* %299, align 8
  %300 = getelementptr inbounds i8, i8* %297, i64 4
  %301 = bitcast i8* %300 to i32*
  store i32 262, i32* %301, align 4
  %302 = getelementptr inbounds i8, i8* %297, i64 8
  %303 = bitcast i8* %302 to <2 x i64>*
  store <2 x i64> <i64 0, i64 23>, <2 x i64>* %303, align 8
  %304 = getelementptr inbounds i8, i8* %297, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %304, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @122, i64 0, i64 0), i64 23, i1 false) #9
  %305 = getelementptr inbounds i8, i8* %297, i64 47
  store i8 0, i8* %305, align 1
  %306 = load %1* (%1*)*, %1* (%1*)** @zend_new_interned_string, align 8
  %307 = call %1* %306(%1* %298) #9
  store %1* %307, %1** %19, align 8
  store %0* null, %0** %22, align 8
  store %39* null, %39** %25, align 8
  %308 = bitcast %11** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 0, i64 112, i1 false)
  %309 = getelementptr inbounds %21* (%0*)*, %21* (%0*)** %21, i64 1
  %310 = bitcast %21* (%0*)** %309 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 0, i64 80, i1 false)
  store %41* getelementptr inbounds ([10 x %41], [10 x %41]* @123, i64 0, i64 0), %41** %26, align 8
  store %21* (%0*)* @449, %21* (%0*)** %21, align 8
  %311 = call %0* @zend_register_internal_class(%0* nonnull %3) #9
  store %0* %311, %0** @reflection_zend_extension_ptr, align 8
  %312 = load %0*, %0** @reflector_ptr, align 8
  call void (%0*, i32, ...) @zend_class_implements(%0* %311, i32 1, %0* %312) #9
  %313 = load %0*, %0** @reflection_zend_extension_ptr, align 8
  %314 = call i32 @zend_declare_property_string(%0* %313, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i32 256) #9
  call void @llvm.lifetime.end.p0i8(i64 504, i8* nonnull %4) #9
  ret i32 0
}

declare dso_local %22* @zend_get_std_object_handlers() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @446(%21* %0) #0 {
  %2 = getelementptr inbounds %21, %21* %0, i64 -1, i32 4
  %3 = bitcast %8** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %138, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %21, %21* %0, i64 -1, i32 5, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %138 [
    i32 3, label %9
    i32 4, label %46
    i32 1, label %83
    i32 5, label %114
    i32 6, label %115
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast i8* %10 to %11**
  %12 = load %11*, %11** %11, align 8
  %13 = icmp eq %11* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %11, %11* %12, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 2097152
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %11, %11* %12, i64 0, i32 0, i32 3
  %21 = load %1*, %1** %20, align 8
  %22 = getelementptr inbounds %1, %1* %21, i64 0, i32 0, i32 1
  %23 = bitcast %3* %22 to %57*
  %24 = getelementptr inbounds %57, %57* %23, i64 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %19
  %29 = getelementptr inbounds %1, %1* %21, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = and i8 %25, 1
  %35 = icmp eq i8 %34, 0
  %36 = bitcast %1* %21 to i8*
  br i1 %35, label %38, label %37

37:                                               ; preds = %33
  tail call void @free(i8* %36) #9
  br label %39

38:                                               ; preds = %33
  tail call void @_efree(i8* %36) #9
  br label %39

39:                                               ; preds = %38, %37, %28, %19
  %40 = icmp eq %11* %12, getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57)
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  store %1* null, %1** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 3), align 8
  br label %44

42:                                               ; preds = %39
  %43 = getelementptr inbounds %11, %11* %12, i64 0, i32 0, i32 0
  tail call void @_efree(i8* nonnull %43) #9
  br label %44

44:                                               ; preds = %9, %14, %41, %42
  %45 = load i8*, i8** %3, align 8
  tail call void @_efree(i8* %45) #9
  br label %138

46:                                               ; preds = %6
  %47 = getelementptr inbounds i8, i8* %4, i64 8
  %48 = bitcast i8* %47 to %11**
  %49 = load %11*, %11** %48, align 8
  %50 = icmp eq %11* %49, null
  br i1 %50, label %81, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %11, %11* %49, i64 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 2097152
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %81, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %11, %11* %49, i64 0, i32 0, i32 3
  %58 = load %1*, %1** %57, align 8
  %59 = getelementptr inbounds %1, %1* %58, i64 0, i32 0, i32 1
  %60 = bitcast %3* %59 to %57*
  %61 = getelementptr inbounds %57, %57* %60, i64 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %76

65:                                               ; preds = %56
  %66 = getelementptr inbounds %1, %1* %58, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, -1
  store i32 %68, i32* %66, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = and i8 %62, 1
  %72 = icmp eq i8 %71, 0
  %73 = bitcast %1* %58 to i8*
  br i1 %72, label %75, label %74

74:                                               ; preds = %70
  tail call void @free(i8* %73) #9
  br label %76

75:                                               ; preds = %70
  tail call void @_efree(i8* %73) #9
  br label %76

76:                                               ; preds = %75, %74, %65, %56
  %77 = icmp eq %11* %49, getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57)
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  store %1* null, %1** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 3), align 8
  br label %81

79:                                               ; preds = %76
  %80 = getelementptr inbounds %11, %11* %49, i64 0, i32 0, i32 0
  tail call void @_efree(i8* nonnull %80) #9
  br label %81

81:                                               ; preds = %46, %51, %78, %79
  %82 = load i8*, i8** %3, align 8
  tail call void @_efree(i8* %82) #9
  br label %138

83:                                               ; preds = %6
  %84 = getelementptr inbounds i8, i8* %4, i64 4
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 2097152
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %138, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %4, i64 8
  %91 = bitcast i8* %90 to %1**
  %92 = load %1*, %1** %91, align 8
  %93 = getelementptr inbounds %1, %1* %92, i64 0, i32 0, i32 1
  %94 = bitcast %3* %93 to %57*
  %95 = getelementptr inbounds %57, %57* %94, i64 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %89
  %100 = getelementptr inbounds %1, %1* %92, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  store i32 %102, i32* %100, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = and i8 %96, 1
  %106 = icmp eq i8 %105, 0
  %107 = bitcast %1* %92 to i8*
  br i1 %106, label %109, label %108

108:                                              ; preds = %104
  tail call void @free(i8* %107) #9
  br label %110

109:                                              ; preds = %104
  tail call void @_efree(i8* %107) #9
  br label %110

110:                                              ; preds = %109, %108, %99, %89
  %111 = icmp eq i8* %4, getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 0)
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  store %1* null, %1** getelementptr inbounds (%32, %32* @executor_globals, i64 0, i32 57, i32 0, i32 3), align 8
  br label %138

113:                                              ; preds = %110
  tail call void @_efree(i8* nonnull %4) #9
  br label %138

114:                                              ; preds = %6
  tail call void @_efree(i8* nonnull %4) #9
  br label %138

115:                                              ; preds = %6
  %116 = getelementptr inbounds i8, i8* %4, i64 16
  %117 = bitcast i8* %116 to %1**
  %118 = load %1*, %1** %117, align 8
  %119 = getelementptr inbounds %1, %1* %118, i64 0, i32 0, i32 1
  %120 = bitcast %3* %119 to %57*
  %121 = getelementptr inbounds %57, %57* %120, i64 0, i32 1
  %122 = load i8, i8* %121, align 1
  %123 = and i8 %122, 2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %136

125:                                              ; preds = %115
  %126 = getelementptr inbounds %1, %1* %118, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = add i32 %127, -1
  store i32 %128, i32* %126, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %136

130:                                              ; preds = %125
  %131 = and i8 %122, 1
  %132 = icmp eq i8 %131, 0
  %133 = bitcast %1* %118 to i8*
  br i1 %132, label %135, label %134

134:                                              ; preds = %130
  tail call void @free(i8* %133) #9
  br label %136

135:                                              ; preds = %130
  tail call void @_efree(i8* %133) #9
  br label %136

136:                                              ; preds = %115, %125, %134, %135
  %137 = load i8*, i8** %3, align 8
  tail call void @_efree(i8* %137) #9
  br label %138

138:                                              ; preds = %113, %112, %83, %1, %44, %81, %114, %136, %6
  store i8* null, i8** %3, align 8
  %139 = getelementptr inbounds %21, %21* %0, i64 -1, i32 2
  %140 = bitcast %0** %139 to %4*
  tail call void @_zval_ptr_dtor(%4* nonnull %140) #9
  tail call void @zend_object_std_dtor(%21* nonnull %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @447(%4* %0, %4* %1, %4* %2, i8** %3) #0 {
  %5 = getelementptr inbounds %4, %4* %1, i64 0, i32 1
  %6 = bitcast %6* %5 to i8*
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 6
  br i1 %8, label %9, label %41

9:                                                ; preds = %4
  %10 = bitcast %4* %0 to %21**
  %11 = load %21*, %21** %10, align 8
  %12 = getelementptr inbounds %21, %21* %11, i64 0, i32 2
  %13 = load %0*, %0** %12, align 8
  %14 = getelementptr inbounds %0, %0* %13, i64 0, i32 11
  %15 = bitcast %4* %1 to %1**
  %16 = load %1*, %1** %15, align 8
  %17 = tail call zeroext i8 @zend_hash_exists(%8* nonnull %14, %1* %16) #9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %9
  %20 = load %1*, %1** %15, align 8
  %21 = getelementptr inbounds %1, %1* %20, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %41 [
    i64 4, label %23
    i64 5, label %27
  ]

23:                                               ; preds = %19
  %24 = getelementptr inbounds %1, %1* %20, i64 0, i32 3, i64 0
  %25 = tail call i32 @memcmp(i8* nonnull %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 5) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %41

27:                                               ; preds = %19
  %28 = getelementptr inbounds %1, %1* %20, i64 0, i32 3, i64 0
  %29 = tail call i32 @memcmp(i8* nonnull %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i64 6) #11
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %41

31:                                               ; preds = %23, %27
  %32 = phi i8* [ %24, %23 ], [ %28, %27 ]
  %33 = load %0*, %0** @reflection_exception_ptr, align 8
  %34 = load %21*, %21** %10, align 8
  %35 = getelementptr inbounds %21, %21* %34, i64 0, i32 2
  %36 = load %0*, %0** %35, align 8
  %37 = getelementptr inbounds %0, %0* %36, i64 0, i32 1
  %38 = load %1*, %1** %37, align 8
  %39 = getelementptr inbounds %1, %1* %38, i64 0, i32 3, i64 0
  %40 = tail call %21* (%0*, i64, i8*, ...) @zend_throw_exception_ex(%0* %33, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @243, i64 0, i64 0), i8* nonnull %39, i8* nonnull %32) #9
  br label %45

41:                                               ; preds = %19, %23, %27, %9, %4
  %42 = load %22*, %22** @81, align 8
  %43 = getelementptr inbounds %22, %22* %42, i64 0, i32 5
  %44 = load void (%4*, %4*, %4*, i8**)*, void (%4*, %4*, %4*, i8**)** %43, align 8
  tail call void %44(%4* %0, %4* nonnull %1, %4* %2, i8** %3) #9
  br label %45

45:                                               ; preds = %41, %31
  ret void
}

; Function Attrs: nounwind uwtable
define internal %8* @448(%4* %0, %4** nocapture %1, i32* nocapture %2) #0 {
  %4 = bitcast %4* %0 to %21**
  %5 = load %21*, %21** %4, align 8
  %6 = getelementptr inbounds %21, %21* %5, i64 -1, i32 2
  %7 = bitcast %4** %1 to %0***
  store %0** %6, %0*** %7, align 8
  store i32 1, i32* %2, align 4
  %8 = tail call %8* @zend_std_get_properties(%4* %0) #9
  ret %8* %8
}

declare dso_local %0* @zend_register_internal_class_ex(%0*, %0*) local_unnamed_addr #2

declare dso_local %0* @zend_register_internal_class(%0*) local_unnamed_addr #2

declare dso_local %0* @zend_register_internal_interface(%0*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal nonnull %21* @449(%0* %0) #0 {
  %2 = getelementptr %0, %0* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr %0, %0* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %3, 24
  %7 = and i32 %6, 1
  %8 = xor i32 %7, 1
  %9 = sub nsw i32 %5, %8
  %10 = sext i32 %9 to i64
  %11 = shl nsw i64 %10, 4
  %12 = add nsw i64 %11, 112
  %13 = tail call noalias i8* @_ecalloc(i64 1, i64 %12) #12
  %14 = getelementptr inbounds i8, i8* %13, i64 56
  %15 = bitcast i8* %14 to %21*
  %16 = getelementptr inbounds i8, i8* %13, i64 72
  %17 = bitcast i8* %16 to %0**
  store %0* %0, %0** %17, align 8
  tail call void @zend_object_std_init(%21* nonnull %15, %0* %0) #9
  tail call void @object_properties_init(%21* nonnull %15, %0* %0) #9
  %18 = getelementptr inbounds i8, i8* %13, i64 80
  %19 = bitcast i8* %18 to %22**
  store %22* @82, %22** %19, align 8
  ret %21* %15
}

declare dso_local void @zend_class_implements(%0*, i32, ...) local_unnamed_addr #2

declare dso_local i32 @zend_declare_property_string(%0*, i8*, i64, i8*, i32) local_unnamed_addr #2

declare dso_local i32 @zend_declare_class_constant_long(%0*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define hidden void @zm_info_reflection(%39* nocapture readnone %0) #0 {
  tail call void @php_info_print_table_start() #9
  tail call void (i32, ...) @php_info_print_table_header(i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @124, i64 0, i64 0)) #9
  tail call void (i32, ...) @php_info_print_table_row(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @125, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @126, i64 0, i64 0)) #9
  tail call void @php_info_print_table_end() #9
  ret void
}

declare dso_local void @php_info_print_table_start() local_unnamed_addr #2

declare dso_local void @php_info_print_table_header(i32, ...) local_unnamed_addr #2

declare dso_local void @php_info_print_table_row(i32, ...) local_unnamed_addr #2

declare dso_local void @php_info_print_table_end() local_unnamed_addr #2

declare dso_local i32 @zend_parse_arg_bool_slow(%4*, i8*) local_unnamed_addr #2

declare dso_local void @_zval_dtor_func(%59*) local_unnamed_addr #2

declare dso_local i32 @_object_and_properties_init(%4*, %0*, %8*) local_unnamed_addr #2

declare dso_local %4* @zend_hash_str_find(%8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @smart_str_append_printf(%62*, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @zend_get_type_by_const(i32) local_unnamed_addr #2

declare dso_local void @smart_str_erealloc(%62*, i64) local_unnamed_addr #2

declare dso_local void @_efree_24(i8*) local_unnamed_addr #2

declare dso_local noalias i8* @_emalloc_224() local_unnamed_addr #2

; Function Attrs: nounwind
declare dso_local void @free(i8* nocapture) local_unnamed_addr #7

declare dso_local %64* @zend_generator_update_current(%64*, %64*) local_unnamed_addr #2

declare dso_local %1* @zend_resolve_method_name(%0*, %11*) local_unnamed_addr #2

declare dso_local %1* @_zval_get_string_func(%4*) local_unnamed_addr #2

declare dso_local noalias i8* @_emalloc_16() local_unnamed_addr #2

declare dso_local %4* @zend_hash_find(%8*, %1*) local_unnamed_addr #2

declare dso_local i8* @zend_visibility_string(i32) local_unnamed_addr #2

declare dso_local i8* @zend_zval_type_name(%4*) local_unnamed_addr #2

declare dso_local i32 @zend_check_protected(%0*, %0*) local_unnamed_addr #2

declare dso_local %1* @zend_strpprintf(i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) local_unnamed_addr #6

declare dso_local %71* @zend_get_property_info(%0*, %1*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @450(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readnone %3) #0 {
  %5 = bitcast %4* %0 to %37**
  %6 = load %37*, %37** %5, align 8
  %7 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 8
  store i8* %13, i8** %11, align 8
  %14 = bitcast i8* %12 to %62**
  %15 = load %62*, %62** %14, align 8
  br label %25

16:                                               ; preds = %4
  %17 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %8 to i64
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = add i32 %8, 8
  store i32 %21, i32* %7, align 8
  %22 = bitcast i8* %20 to %62**
  %23 = load %62*, %62** %22, align 8
  %24 = icmp ult i32 %21, 41
  br i1 %24, label %32, label %25

25:                                               ; preds = %16, %10
  %26 = phi %62* [ %15, %10 ], [ %23, %16 ]
  %27 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 8
  store i8* %29, i8** %27, align 8
  %30 = bitcast i8* %28 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %47

32:                                               ; preds = %16
  %33 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = sext i32 %21 to i64
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = add i32 %8, 16
  store i32 %37, i32* %7, align 8
  %38 = bitcast i8* %36 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ult i32 %37, 41
  br i1 %40, label %41, label %47

41:                                               ; preds = %32
  %42 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = sext i32 %37 to i64
  %45 = getelementptr i8, i8* %43, i64 %44
  %46 = add i32 %8, 24
  store i32 %46, i32* %7, align 8
  br label %53

47:                                               ; preds = %25, %32
  %48 = phi i8* [ %31, %25 ], [ %39, %32 ]
  %49 = phi %62* [ %26, %25 ], [ %23, %32 ]
  %50 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr i8, i8* %51, i64 8
  store i8* %52, i8** %50, align 8
  br label %53

53:                                               ; preds = %47, %41
  %54 = phi i8* [ %39, %41 ], [ %48, %47 ]
  %55 = phi %62* [ %23, %41 ], [ %49, %47 ]
  %56 = phi i8* [ %45, %41 ], [ %51, %47 ]
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %37, %37* %6, i64 0, i32 11
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %172

62:                                               ; preds = %53
  %63 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  %64 = load %1*, %1** %63, align 8
  %65 = getelementptr inbounds %1, %1* %64, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %55, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @230, i64 0, i64 0), i8* %54, i8* nonnull %65) #9
  %66 = getelementptr inbounds %37, %37* %6, i64 0, i32 8
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 7
  br i1 %68, label %69, label %92

69:                                               ; preds = %62
  %70 = getelementptr inbounds %62, %62* %55, i64 0, i32 0
  %71 = load %1*, %1** %70, align 8
  %72 = icmp eq %1* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %1, %1* %71, i64 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 3
  %77 = getelementptr inbounds %62, %62* %55, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %73, %69
  %81 = phi i64 [ 3, %69 ], [ %76, %73 ]
  tail call void @smart_str_erealloc(%62* nonnull %55, i64 %81) #9
  %82 = load %1*, %1** %70, align 8
  %83 = getelementptr inbounds %1, %1* %82, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  br label %85

85:                                               ; preds = %73, %80
  %86 = phi i64 [ %84, %80 ], [ %75, %73 ]
  %87 = phi %1* [ %82, %80 ], [ %71, %73 ]
  %88 = phi i64 [ %81, %80 ], [ %76, %73 ]
  %89 = getelementptr inbounds %1, %1* %87, i64 0, i32 3, i64 %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @231, i64 0, i64 0), i64 3, i1 false) #9
  %90 = load %1*, %1** %70, align 8
  %91 = getelementptr inbounds %1, %1* %90, i64 0, i32 2
  store i64 %88, i64* %91, align 8
  br label %133

92:                                               ; preds = %62
  %93 = and i32 %67, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %120, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %62, %62* %55, i64 0, i32 0
  %97 = load %1*, %1** %96, align 8
  %98 = icmp eq %1* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %1, %1* %97, i64 0, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 4
  %103 = getelementptr inbounds %62, %62* %55, i64 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = icmp ult i64 %102, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %99, %95
  %107 = phi i64 [ 4, %95 ], [ %102, %99 ]
  tail call void @smart_str_erealloc(%62* nonnull %55, i64 %107) #9
  %108 = load %1*, %1** %96, align 8
  %109 = getelementptr inbounds %1, %1* %108, i64 0, i32 2
  %110 = load i64, i64* %109, align 8
  br label %111

111:                                              ; preds = %99, %106
  %112 = phi i64 [ %110, %106 ], [ %101, %99 ]
  %113 = phi %1* [ %108, %106 ], [ %97, %99 ]
  %114 = phi i64 [ %107, %106 ], [ %102, %99 ]
  %115 = getelementptr inbounds %1, %1* %113, i64 0, i32 3, i64 %112
  %116 = bitcast i8* %115 to i32*
  store i32 1380275029, i32* %116, align 1
  %117 = load %1*, %1** %96, align 8
  %118 = getelementptr inbounds %1, %1* %117, i64 0, i32 2
  store i64 %114, i64* %118, align 8
  %119 = load i32, i32* %66, align 8
  br label %120

120:                                              ; preds = %92, %111
  %121 = phi i32 [ %119, %111 ], [ %67, %92 ]
  %122 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @232, i64 0, i64 0), %111 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), %92 ]
  %123 = and i32 %121, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @233, i64 0, i64 0), i8* %122) #9
  %126 = load i32, i32* %66, align 8
  br label %127

127:                                              ; preds = %120, %125
  %128 = phi i32 [ %126, %125 ], [ %121, %120 ]
  %129 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @232, i64 0, i64 0), %125 ], [ %122, %120 ]
  %130 = and i32 %128, 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %127
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @234, i64 0, i64 0), i8* %129) #9
  br label %133

133:                                              ; preds = %127, %132, %85
  %134 = getelementptr inbounds %62, %62* %55, i64 0, i32 0
  %135 = load %1*, %1** %134, align 8
  %136 = icmp eq %1* %135, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %1, %1* %135, i64 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 4
  %141 = getelementptr inbounds %62, %62* %55, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp ult i64 %140, %142
  br i1 %143, label %149, label %144

144:                                              ; preds = %137, %133
  %145 = phi i64 [ 4, %133 ], [ %140, %137 ]
  tail call void @smart_str_erealloc(%62* nonnull %55, i64 %145) #9
  %146 = load %1*, %1** %134, align 8
  %147 = getelementptr inbounds %1, %1* %146, i64 0, i32 2
  %148 = load i64, i64* %147, align 8
  br label %149

149:                                              ; preds = %137, %144
  %150 = phi i64 [ %148, %144 ], [ %139, %137 ]
  %151 = phi %1* [ %146, %144 ], [ %135, %137 ]
  %152 = phi i64 [ %145, %144 ], [ %140, %137 ]
  %153 = getelementptr inbounds %1, %1* %151, i64 0, i32 3, i64 %150
  %154 = bitcast i8* %153 to i32*
  store i32 173875262, i32* %154, align 1
  %155 = load %1*, %1** %134, align 8
  %156 = getelementptr inbounds %1, %1* %155, i64 0, i32 2
  store i64 %152, i64* %156, align 8
  %157 = getelementptr inbounds %37, %37* %6, i64 0, i32 5
  %158 = load %1*, %1** %157, align 8
  %159 = icmp eq %1* %158, null
  %160 = getelementptr inbounds %1, %1* %158, i64 0, i32 3, i64 0
  %161 = select i1 %159, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i8* %160
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %55, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @235, i64 0, i64 0), i8* %54, i8* %161) #9
  %162 = getelementptr inbounds %37, %37* %6, i64 0, i32 10
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %149
  %166 = getelementptr inbounds %37, %37* %6, i64 0, i32 6
  %167 = load %1*, %1** %166, align 8
  %168 = icmp eq %1* %167, null
  %169 = getelementptr inbounds %1, %1* %167, i64 0, i32 3, i64 0
  %170 = select i1 %168, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @16, i64 0, i64 0), i8* %169
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %55, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @236, i64 0, i64 0), i8* %54, i8* %170) #9
  br label %171

171:                                              ; preds = %149, %165
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* nonnull %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @237, i64 0, i64 0), i8* %54) #9
  br label %172

172:                                              ; preds = %171, %53
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @451(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readnone %3) #0 {
  %5 = bitcast %4* %0 to %74**
  %6 = load %74*, %74** %5, align 8
  %7 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 8
  store i8* %13, i8** %11, align 8
  %14 = bitcast i8* %12 to %62**
  %15 = load %62*, %62** %14, align 8
  br label %25

16:                                               ; preds = %4
  %17 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %8 to i64
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = add i32 %8, 8
  store i32 %21, i32* %7, align 8
  %22 = bitcast i8* %20 to %62**
  %23 = load %62*, %62** %22, align 8
  %24 = icmp ult i32 %21, 41
  br i1 %24, label %32, label %25

25:                                               ; preds = %16, %10
  %26 = phi %62* [ %15, %10 ], [ %23, %16 ]
  %27 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 8
  store i8* %29, i8** %27, align 8
  %30 = bitcast i8* %28 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %41

32:                                               ; preds = %16
  %33 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = sext i32 %21 to i64
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = add i32 %8, 16
  store i32 %37, i32* %7, align 8
  %38 = bitcast i8* %36 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ult i32 %37, 41
  br i1 %40, label %49, label %41

41:                                               ; preds = %32, %25
  %42 = phi i8* [ %31, %25 ], [ %39, %32 ]
  %43 = phi %62* [ %26, %25 ], [ %23, %32 ]
  %44 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr i8, i8* %45, i64 8
  store i8* %46, i8** %44, align 8
  %47 = bitcast i8* %45 to %39**
  %48 = load %39*, %39** %47, align 8
  br label %64

49:                                               ; preds = %32
  %50 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = sext i32 %37 to i64
  %53 = getelementptr i8, i8* %51, i64 %52
  %54 = add i32 %8, 24
  store i32 %54, i32* %7, align 8
  %55 = bitcast i8* %53 to %39**
  %56 = load %39*, %39** %55, align 8
  %57 = icmp ult i32 %54, 41
  br i1 %57, label %58, label %64

58:                                               ; preds = %49
  %59 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %60 = load i8*, i8** %59, align 8
  %61 = sext i32 %54 to i64
  %62 = getelementptr i8, i8* %60, i64 %61
  %63 = add i32 %8, 32
  store i32 %63, i32* %7, align 8
  br label %71

64:                                               ; preds = %41, %49
  %65 = phi %39* [ %48, %41 ], [ %56, %49 ]
  %66 = phi %62* [ %43, %41 ], [ %23, %49 ]
  %67 = phi i8* [ %42, %41 ], [ %39, %49 ]
  %68 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr i8, i8* %69, i64 8
  store i8* %70, i8** %68, align 8
  br label %71

71:                                               ; preds = %64, %58
  %72 = phi %39* [ %56, %58 ], [ %65, %64 ]
  %73 = phi %62* [ %23, %58 ], [ %66, %64 ]
  %74 = phi i8* [ %39, %58 ], [ %67, %64 ]
  %75 = phi i8* [ %62, %58 ], [ %69, %64 ]
  %76 = bitcast i8* %75 to i32**
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %74, %74* %6, i64 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %39, %39* %72, i64 0, i32 22
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %83, label %132

83:                                               ; preds = %71
  %84 = getelementptr inbounds %74, %74* %6, i64 0, i32 1
  %85 = load %1*, %1** %84, align 8
  %86 = getelementptr inbounds %1, %1* %85, i64 0, i32 3, i64 0
  %87 = getelementptr inbounds %74, %74* %6, i64 0, i32 0
  %88 = tail call i8* @zend_zval_type_name(%4* %87) #9
  %89 = getelementptr inbounds %74, %74* %6, i64 0, i32 0, i32 1
  %90 = bitcast %6* %89 to i8*
  %91 = load i8, i8* %90, align 8
  switch i8 %91, label %106 [
    i8 7, label %92
    i8 6, label %93
  ]

92:                                               ; preds = %83
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %73, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @238, i64 0, i64 0), i8* %74, i8* %88, i8* nonnull %86) #9
  br label %129

93:                                               ; preds = %83
  %94 = bitcast %74* %6 to %1**
  %95 = load %1*, %1** %94, align 8
  %96 = getelementptr inbounds %1, %1* %95, i64 0, i32 0, i32 1
  %97 = bitcast %3* %96 to %57*
  %98 = getelementptr inbounds %57, %57* %97, i64 0, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = and i8 %99, 2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %111

102:                                              ; preds = %93
  %103 = getelementptr inbounds %1, %1* %95, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  br label %111

106:                                              ; preds = %83
  %107 = tail call %1* @_zval_get_string_func(%4* nonnull %87) #9
  %108 = getelementptr inbounds %1, %1* %107, i64 0, i32 0, i32 1
  %109 = bitcast %3* %108 to %57*
  %110 = getelementptr inbounds %57, %57* %109, i64 0, i32 1
  br label %111

111:                                              ; preds = %106, %102, %93
  %112 = phi i8* [ %98, %93 ], [ %98, %102 ], [ %110, %106 ]
  %113 = phi %1* [ %95, %93 ], [ %95, %102 ], [ %107, %106 ]
  %114 = getelementptr inbounds %1, %1* %113, i64 0, i32 3, i64 0
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %73, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @239, i64 0, i64 0), i8* %74, i8* %88, i8* nonnull %86, i8* nonnull %114) #9
  %115 = load i8, i8* %112, align 1
  %116 = and i8 %115, 2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %129

118:                                              ; preds = %111
  %119 = getelementptr inbounds %1, %1* %113, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = add i32 %120, -1
  store i32 %121, i32* %119, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %118
  %124 = and i8 %115, 1
  %125 = icmp eq i8 %124, 0
  %126 = bitcast %1* %113 to i8*
  br i1 %125, label %128, label %127

127:                                              ; preds = %123
  tail call void @free(i8* %126) #9
  br label %129

128:                                              ; preds = %123
  tail call void @_efree(i8* %126) #9
  br label %129

129:                                              ; preds = %92, %111, %118, %127, %128
  %130 = load i32, i32* %77, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %77, align 4
  br label %132

132:                                              ; preds = %129, %71
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @452(%4* nocapture readonly %0, i32 %1, %72* nocapture %2, %73* nocapture readonly %3) #0 {
  %5 = bitcast %4* %0 to %0**
  %6 = load %0*, %0** %5, align 8
  %7 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 8
  store i8* %13, i8** %11, align 8
  %14 = bitcast i8* %12 to %62**
  %15 = load %62*, %62** %14, align 8
  br label %25

16:                                               ; preds = %4
  %17 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %8 to i64
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = add i32 %8, 8
  store i32 %21, i32* %7, align 8
  %22 = bitcast i8* %20 to %62**
  %23 = load %62*, %62** %22, align 8
  %24 = icmp ult i32 %21, 41
  br i1 %24, label %32, label %25

25:                                               ; preds = %16, %10
  %26 = phi %62* [ %15, %10 ], [ %23, %16 ]
  %27 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 8
  store i8* %29, i8** %27, align 8
  %30 = bitcast i8* %28 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %41

32:                                               ; preds = %16
  %33 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = sext i32 %21 to i64
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = add i32 %8, 16
  store i32 %37, i32* %7, align 8
  %38 = bitcast i8* %36 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ult i32 %37, 41
  br i1 %40, label %49, label %41

41:                                               ; preds = %32, %25
  %42 = phi i8* [ %31, %25 ], [ %39, %32 ]
  %43 = phi %62* [ %26, %25 ], [ %23, %32 ]
  %44 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr i8, i8* %45, i64 8
  store i8* %46, i8** %44, align 8
  %47 = bitcast i8* %45 to %39**
  %48 = load %39*, %39** %47, align 8
  br label %64

49:                                               ; preds = %32
  %50 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = sext i32 %37 to i64
  %53 = getelementptr i8, i8* %51, i64 %52
  %54 = add i32 %8, 24
  store i32 %54, i32* %7, align 8
  %55 = bitcast i8* %53 to %39**
  %56 = load %39*, %39** %55, align 8
  %57 = icmp ult i32 %54, 41
  br i1 %57, label %58, label %64

58:                                               ; preds = %49
  %59 = getelementptr inbounds %72, %72* %2, i64 0, i32 3
  %60 = load i8*, i8** %59, align 8
  %61 = sext i32 %54 to i64
  %62 = getelementptr i8, i8* %60, i64 %61
  %63 = add i32 %8, 32
  store i32 %63, i32* %7, align 8
  br label %71

64:                                               ; preds = %41, %49
  %65 = phi %39* [ %48, %41 ], [ %56, %49 ]
  %66 = phi %62* [ %43, %41 ], [ %23, %49 ]
  %67 = phi i8* [ %42, %41 ], [ %39, %49 ]
  %68 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr i8, i8* %69, i64 8
  store i8* %70, i8** %68, align 8
  br label %71

71:                                               ; preds = %64, %58
  %72 = phi %39* [ %56, %58 ], [ %65, %64 ]
  %73 = phi %62* [ %23, %58 ], [ %66, %64 ]
  %74 = phi i8* [ %39, %58 ], [ %67, %64 ]
  %75 = phi i8* [ %62, %58 ], [ %69, %64 ]
  %76 = bitcast i8* %75 to i32**
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %0, %0* %6, i64 0, i32 0
  %79 = load i8, i8* %78, align 8
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %81, label %109

81:                                               ; preds = %71
  %82 = getelementptr inbounds %0, %0* %6, i64 0, i32 39, i32 0, i32 1
  %83 = bitcast i32* %82 to %39**
  %84 = load %39*, %39** %83, align 8
  %85 = icmp eq %39* %84, null
  br i1 %85, label %109, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %39, %39* %84, i64 0, i32 6
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %39, %39* %72, i64 0, i32 6
  %90 = load i8*, i8** %89, align 8
  %91 = tail call i32 @strcasecmp(i8* %88, i8* %90) #11
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %109

93:                                               ; preds = %86
  %94 = getelementptr inbounds %0, %0* %6, i64 0, i32 1
  %95 = load %1*, %1** %94, align 8
  %96 = getelementptr inbounds %1, %1* %95, i64 0, i32 3, i64 0
  %97 = getelementptr inbounds %1, %1* %95, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %73, %73* %3, i64 0, i32 1
  %100 = load %1*, %1** %99, align 8
  %101 = getelementptr inbounds %1, %1* %100, i64 0, i32 3, i64 0
  %102 = getelementptr inbounds %1, %1* %100, i64 0, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %96, i64 %98, i8* nonnull %101, i64 %103) #9
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %93
  tail call void (%62*, i8*, ...) @smart_str_append_printf(%62* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i64 0, i64 0)) #9
  tail call fastcc void @436(%62* %73, %0* nonnull %6, %4* null, i8* %74)
  %107 = load i32, i32* %77, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %77, align 4
  br label %109

109:                                              ; preds = %93, %86, %81, %106, %71
  ret i32 0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare dso_local %4* @_zend_hash_index_update(%8*, i64, %4*) local_unnamed_addr #2

declare dso_local i32 @_zend_handle_numeric_str_ex(i8*, i64, i64*) local_unnamed_addr #2

declare dso_local void @zend_object_std_dtor(%21*) local_unnamed_addr #2

declare dso_local %8* @zend_std_get_properties(%4*) local_unnamed_addr #2

; Function Attrs: allocsize(0,1)
declare dso_local noalias i8* @_ecalloc(i64, i64) local_unnamed_addr #8

declare dso_local void @zend_object_std_init(%21*, %0*) local_unnamed_addr #2

declare dso_local void @object_properties_init(%21*, %0*) local_unnamed_addr #2

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn writeonly }
attributes #4 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
