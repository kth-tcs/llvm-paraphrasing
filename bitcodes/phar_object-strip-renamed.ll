; ModuleID = 'phar_object-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/phar/phar_object.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %1, i64, i64, [1 x i8] }
%1 = type { i32, %2 }
%2 = type { i32 }
%3 = type { i8, %0*, %3*, i32, i32, i32, i32, %4*, %4*, %4*, %8, %8, %8, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %11*, %18, %21* (%3*)*, %20* (%3*, %4*, i32)*, i32 (%3*, %3*)*, %11* (%3*, %0*)*, i32 (%4*, i8**, i64*, %24*)*, i32 (%4*, %3*, i8*, i64, %25*)*, i32, i32, %3**, %3**, %26**, %28**, %30 }
%4 = type { %5, %6, %7 }
%5 = type { i64 }
%6 = type { i32 }
%7 = type { i32 }
%8 = type { %1, %9, i32, %10*, i32, i32, i32, i32, i64, void (%4*)* }
%9 = type { i32 }
%10 = type { %4, i64, %0* }
%11 = type { %12 }
%12 = type { i8, [3 x i8], i32, %0*, %3*, %11*, i32, i32, %13*, i32*, i32, %14*, i32, i32, %0**, i32, i32, %16*, %17*, %8*, %0*, i32, i32, %0*, i32, i32, %4*, i32, i8**, [6 x i8*] }
%13 = type { %0*, i64, i8, i8 }
%14 = type { i8*, %15, %15, %15, i32, i32, i8, i8, i8, i8 }
%15 = type { i32 }
%16 = type { i32, i32, i32 }
%17 = type { i32, i32, i32, i32 }
%18 = type { %19*, %11*, %11*, %11*, %11*, %11*, %11* }
%19 = type { void (%20*)*, i32 (%20*)*, %4* (%20*)*, void (%20*, %4*)*, void (%20*)*, void (%20*)*, void (%20*)* }
%20 = type { %21, %4, %19*, i64 }
%21 = type { %1, i32, %3*, %22*, %8*, [1 x %4] }
%22 = type { i32, void (%21*)*, void (%21*)*, %21* (%4*)*, %4* (%4*, %4*, i32, i8**, %4*)*, void (%4*, %4*, %4*, i8**)*, %4* (%4*, %4*, i32, %4*)*, void (%4*, %4*, %4*)*, %4* (%4*, %4*, i32, i8**)*, %4* (%4*, %4*)*, void (%4*, %4*)*, i32 (%4*, %4*, i32, i8**)*, void (%4*, %4*, i8**)*, i32 (%4*, %4*, i32)*, void (%4*, %4*)*, %8* (%4*)*, %11* (%21**, %0*, %4*)*, i32 (%0*, %21*, %23*, %4*)*, %11* (%21*)*, %0* (%21*)*, i32 (%4*, %4*)*, i32 (%4*, %4*, i32)*, i32 (%4*, i64*)*, %8* (%4*, i32*)*, i32 (%4*, %3**, %11**, %21**)*, %8* (%4*, %4**, i32*)*, i32 (i8, %4*, %4*, %4*)*, i32 (%4*, %4*, %4*)* }
%23 = type { %14*, %23*, %4*, %11*, %4, %23*, %8*, i8**, %4* }
%24 = type opaque
%25 = type opaque
%26 = type { %27*, %0*, i32 }
%27 = type { %0*, %3*, %0* }
%28 = type { %27*, %29* }
%29 = type { %3* }
%30 = type { %31 }
%31 = type { %0*, i32, i32, %0* }
%32 = type { %8, %8, %33*, %8, i32, i32, i8*, i32, i32, i32, i32, i8, i8, i8, i32, i32, i32, i32, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, void (%23*, %4*)*, i8*, i32, i32, i8*, i32, i8*, i32, i8*, i32, %52*, %8 }
%33 = type { %34*, %34*, %51* }
%34 = type { %35*, i8*, %39, %39, %44*, i8*, %4, i8, i8, [16 x i8], i32, %50*, %48*, i8*, %50*, i64, i8*, i64, i64, i64, i64, %34* }
%35 = type { i64 (%34*, i8*, i64)*, i64 (%34*, i8*, i64)*, i32 (%34*, i32)*, i32 (%34*)*, i8*, i32 (%34*, i64, i32, i64*)*, i32 (%34*, i32, i8**)*, i32 (%34*, %36*)*, i32 (%34*, i32, i32, i8*)* }
%36 = type { %37 }
%37 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %38, %38, %38, [3 x i64] }
%38 = type { i64, i64 }
%39 = type { %40*, %40*, %34* }
%40 = type { %41*, %4, %40*, %40*, i32, %39*, %42, %50* }
%41 = type { i32 (%34*, %40*, %42*, %42*, i64*, i32)*, void (%40*)*, i8* }
%42 = type { %43*, %43* }
%43 = type { %43*, %43*, %42*, i8*, i64, i8, i8, i32 }
%44 = type { %45*, i8*, i32 }
%45 = type { %34* (%44*, i8*, i8*, i32, %0**, %46*)*, i32 (%44*, %34*)*, i32 (%44*, %34*, %36*)*, i32 (%44*, i8*, i32, %36*, %46*)*, %34* (%44*, i8*, i8*, i32, %0**, %46*)*, i8*, i32 (%44*, i8*, i32, %46*)*, i32 (%44*, i8*, i8*, i32, %46*)*, i32 (%44*, i8*, i32, i32, %46*)*, i32 (%44*, i8*, i32, %46*)*, i32 (%44*, i8*, i32, i8*, %46*)* }
%46 = type { %47*, %4, %50* }
%47 = type { void (%46*, i32, i32, i8*, i32, i64, i64, i8*)*, void (%47*)*, %4, i32, i64, i64 }
%48 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %49*, %48*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%49 = type { %49*, %48*, i32 }
%50 = type { %1, i32, i32, i8* }
%51 = type { i32, i64 }
%52 = type { i8*, i32, i8*, i32, i8*, i32, [12 x i8], i64, i64, %8, %8, %8, i32, i32, i32, %34*, %34*, i32, i32, i32, i8*, %4, i32, i32, i16 }
%53 = type { i8*, i8*, i32 (%53*)*, i32 (%53*)*, i32 ()*, i32 ()*, i64 (i8*, i64)*, void (i8*)*, %37* ()*, i8* (i8*, i64)*, void (i32, i8*, ...)*, i32 (%54*, i32, %55*)*, i32 (%55*)*, void (%54*, i8*)*, i64 (i8*, i64)*, i8* ()*, void (%4*)*, void (i8*, i32)*, double ()*, void ()*, i8*, void ()*, void (i32, i8*, %4*)*, i8*, i32, i32, i32 (i32*)*, i32 ()*, i32 (i32*)*, i32 (i32*)*, i32 (i32, i8*, i8**, i64, i64*)*, void (%8*)*, i32, i8*, %58*, i32 ()* }
%54 = type { i8*, i64 }
%55 = type { %56, i32, i8, i8*, i8* }
%56 = type { %57*, %57*, i64, i64, void (i8*)*, i8, %57* }
%57 = type { %57*, %57*, [1 x i8] }
%58 = type { i8*, {}*, %59*, i32, i32 }
%59 = type { i8*, i64, i8, i8 }
%60 = type { i8*, %61, %55, i64, i8, i8, %37, i8*, i8*, %8*, i64, i32, i8, double, %8, %4, %63 }
%61 = type { i8*, i8*, i8*, i64, i8*, i8*, %34*, i8*, i8, i8, i8, %62*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i8**, i32 }
%62 = type { i8*, i32, void ()*, void (i8*, i8*)* }
%63 = type { i8, %11*, %3*, %3*, %21* }
%64 = type { i8, i64, i8, i8*, i8*, i64, i64, i64, i8, i8, i8, i8, i64, i8, i8, i8, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %65, i8*, %8, i16, i8, i8, i8, %56, [6 x %4], i8, i8, i8, i8*, i8*, i8, i8, i64, [8 x i8], i8, i8, i8, i8, i8, i8, i32, i8*, i8*, i32, i8*, i8*, i8*, i8, i64, i64, i8, i8*, i64, i8*, i8, i8*, i8 }
%65 = type { i8*, i8* }
%66 = type { %4, %4, [32 x %8*], %8**, %8**, %8, %8, [1 x %67]*, i32, i32, %8*, %8*, %8*, %4*, %4*, %69*, %23*, %3*, i64, i32, %8*, %11*, i8, i8, i8, i8, i64, %8, %8, i32, %4, %4, %70, %70, %70, i32, %3*, i64, i32, %8*, %8*, %71*, %72, %21*, %21*, %14*, [3 x %14], %73*, i8, i8, i64, i32, i32, %75*, [16 x %75], i8*, i16, %11, %14, i8, [6 x i8*] }
%67 = type { [8 x i64], i32, %68 }
%68 = type { [16 x i64] }
%69 = type { %4*, %4*, %69* }
%70 = type { i32, i32, i32, i8* }
%71 = type { %0*, i32 (%71*, %0*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, %0*, %0*, void (%71*, i32)*, i32, i32, i32, i32 }
%72 = type { %21**, i32, i32, i32 }
%73 = type { i16, i32, i8, i8, %71*, %74*, i8*, %58*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, void (%73*)*, i8*, i64, i8*, void (i8*)*, void (i8*)*, i32 ()*, i32, i8, i8*, i32, i8* }
%74 = type { i8*, i8*, i8*, i8 }
%75 = type { %8*, i32 }
%76 = type { void (%77*)*, void (%77*, %77*)* }
%77 = type { i8*, %76*, i8*, i64, i8*, i8*, i64, i32, i64, %3*, %3*, %78, %21 }
%78 = type { %79 }
%79 = type { %34*, %80, i8*, i64, i32, i32, %11*, %11*, %11* }
%80 = type { [4096 x i8] }
%81 = type { %8*, %8, %4, i8*, %0*, i8, i8*, [256 x i8], i64, [40 x i8], %82, %63, %82, %63, %56*, %4, i64, i64, i64, i64, i8*, i8*, %36, %36, [625 x i32], i32*, i32, i8, i64, i8*, %3*, i32, %83, %85, %87, %8, %87, %8, i8*, i64, %8*, i32 }
%82 = type { i64, %4, %4*, %4*, %21*, i8, i32 }
%83 = type { %84*, i32 }
%84 = type opaque
%85 = type { %86*, i32 }
%86 = type opaque
%87 = type { %88, %88, %88, %88, %88, %88, %88, i32, i8*, i32, i32, %88, i32, i32, %8* }
%88 = type { %0*, i64 }
%89 = type { %90, i8*, %0*, i32, i8 }
%90 = type { %91 }
%91 = type { i8*, i32, %92, i64 (i8*, i8*, i64)*, i64 (i8*)*, void (i8*)* }
%92 = type { i64, i64, i8*, i8*, i8*, void (i8*)* }
%93 = type { i32, i32, i32, i32, i32, i32, %4, i32, i32, i8*, i32, i64, i64, i64, %34*, %34*, i32, i8*, %52*, %88, i8*, i8, i32, i16, i16 }
%94 = type { i8*, i64, i64 }
%95 = type { i8, i8, i8, i8 }
%96 = type { %1 }
%97 = type { i8*, i32, i8 }
%98 = type { i8*, i8*, i8*, i8*, i8* }
%99 = type { %77 }
%100 = type { %99*, %3*, i8*, %4*, %34*, i32, i32 }
%101 = type { %52*, %34*, i64, i64, i8, %93* }
%102 = type { i8, i8, i16 }
%103 = type { i8, [3 x i8], i32, %0*, %3*, %11*, i32, i32, %13* }
%104 = type { %77 }
%105 = type { %58*, %73* }
%106 = type { i8*, i32 }

@0 = private unnamed_addr constant [3 x i8] c"|b\00", align 1
@1 = private unnamed_addr constant [8 x i8] c"phar://\00", align 1
@zend_empty_string = external dso_local global %0*, align 8
@2 = private unnamed_addr constant [3 x i8] c"pp\00", align 1
@3 = internal global %3* null, align 8
@4 = private unnamed_addr constant [89 x i8] c"Can only mount internal paths within a phar archive, use a relative path instead of \22%s\22\00", align 1
@phar_globals = external dso_local global %32, align 8
@cached_phars = external dso_local global %8, align 8
@5 = private unnamed_addr constant [39 x i8] c"%s is not a phar archive, cannot mount\00", align 1
@6 = private unnamed_addr constant [43 x i8] c"Mounting of %s to %s within phar %s failed\00", align 1
@7 = private unnamed_addr constant [28 x i8] c"Mounting of %s to %s failed\00", align 1
@sapi_module = external dso_local global %53, align 8
@8 = private unnamed_addr constant [9 x i8] c"|s!s!saz\00", align 1
@9 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@sapi_globals = external dso_local global %60, align 8
@10 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@12 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@14 = private unnamed_addr constant [8 x i8] c"OPTIONS\00", align 1
@15 = private unnamed_addr constant [6 x i8] c"PATCH\00", align 1
@16 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1
@17 = private unnamed_addr constant [9 x i8] c"cgi-fcgi\00", align 1
@18 = private unnamed_addr constant [9 x i8] c"fpm-fcgi\00", align 1
@19 = private unnamed_addr constant [4 x i8] c"cgi\00", align 1
@core_globals = external dso_local global %64, align 8
@20 = private unnamed_addr constant [12 x i8] c"SCRIPT_NAME\00", align 1
@21 = private unnamed_addr constant [10 x i8] c"PATH_INFO\00", align 1
@22 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [37 x i8] c"phar error: invalid rewrite callback\00", align 1
@executor_globals = external dso_local global %66, align 8
@25 = private unnamed_addr constant [44 x i8] c"phar error: failed to call rewrite callback\00", align 1
@26 = private unnamed_addr constant [59 x i8] c"phar error: rewrite callback must return a string or false\00", align 1
@27 = private unnamed_addr constant [54 x i8] c"phar error: rewrite callback returned oversized value\00", align 1
@28 = private unnamed_addr constant [87 x i8] c"/home/travis/build/orestisfl/compilation-database/build/php-src/ext/phar/phar_object.c\00", align 1
@29 = private unnamed_addr constant [4 x i8] c"/%s\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"/index.php\00", align 1
@31 = private unnamed_addr constant [31 x i8] c"HTTP/1.1 301 Moved Permanently\00", align 1
@32 = private unnamed_addr constant [15 x i8] c"Location: %s%s\00", align 1
@33 = private unnamed_addr constant [96 x i8] c"Unknown mime type specifier used, only Phar::PHP, Phar::PHPS and a mime type string are allowed\00", align 1
@34 = private unnamed_addr constant [118 x i8] c"Unknown mime type specifier used (not a string or int), only Phar::PHP, Phar::PHPS and a mime type string are allowed\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@36 = private unnamed_addr constant [136 x i8] c"No values passed to Phar::mungServer(), expecting an array of any of these strings: PHP_SELF, REQUEST_URI, SCRIPT_FILENAME, SCRIPT_NAME\00", align 1
@37 = private unnamed_addr constant [142 x i8] c"Too many values passed to Phar::mungServer(), expecting an array of any of these strings: PHP_SELF, REQUEST_URI, SCRIPT_FILENAME, SCRIPT_NAME\00", align 1
@38 = private unnamed_addr constant [143 x i8] c"Non-string value passed to Phar::mungServer(), expecting an array of any of these strings: PHP_SELF, REQUEST_URI, SCRIPT_FILENAME, SCRIPT_NAME\00", align 1
@39 = private unnamed_addr constant [9 x i8] c"PHP_SELF\00", align 1
@40 = private unnamed_addr constant [12 x i8] c"REQUEST_URI\00", align 1
@41 = private unnamed_addr constant [16 x i8] c"SCRIPT_FILENAME\00", align 1
@42 = private unnamed_addr constant [4 x i8] c"|pp\00", align 1
@43 = private unnamed_addr constant [5 x i8] c"|s!l\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"p|s!\00", align 1
@45 = private unnamed_addr constant [6 x i8] c"1.1.1\00", align 1
@46 = private unnamed_addr constant [3 x i8] c"|l\00", align 1
@47 = private unnamed_addr constant [4 x i8] c"p|b\00", align 1
@48 = internal global %3* null, align 8
@49 = private unnamed_addr constant [7 x i8] c"p|ls!l\00", align 1
@50 = private unnamed_addr constant [6 x i8] c"p|ls!\00", align 1
@spl_ce_BadMethodCallException = external dso_local global %3*, align 8
@51 = private unnamed_addr constant [30 x i8] c"Cannot call constructor twice\00", align 1
@spl_ce_UnexpectedValueException = external dso_local global %3*, align 8
@52 = private unnamed_addr constant [32 x i8] c"Phar creation or opening failed\00", align 1
@53 = private unnamed_addr constant [72 x i8] c"PharData class can only be used for non-executable tar and zip archives\00", align 1
@54 = private unnamed_addr constant [64 x i8] c"Phar class can only be used for executable tar and zip archives\00", align 1
@55 = internal global %76 { void (%77*)* @468, void (%77*, %77*)* @469 }, align 8
@56 = private unnamed_addr constant [12 x i8] c"phar://%s%s\00", align 1
@57 = private unnamed_addr constant [10 x i8] c"phar://%s\00", align 1
@spl_ce_RecursiveDirectoryIterator = external dso_local global %3*, align 8
@58 = private unnamed_addr constant [12 x i8] c"__construct\00", align 1
@59 = internal global %3* null, align 8
@60 = private unnamed_addr constant [4 x i8] c"MD5\00", align 1
@61 = private unnamed_addr constant [6 x i8] c"SHA-1\00", align 1
@62 = private unnamed_addr constant [8 x i8] c"SHA-256\00", align 1
@63 = private unnamed_addr constant [8 x i8] c"SHA-512\00", align 1
@module_registry = external dso_local global %8, align 8
@64 = private unnamed_addr constant [8 x i8] c"openssl\00", align 1
@65 = private unnamed_addr constant [8 x i8] c"OpenSSL\00", align 1
@66 = private unnamed_addr constant [3 x i8] c"GZ\00", align 1
@67 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@68 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@69 = private unnamed_addr constant [24 x i8] c"Unknown phar archive \22\22\00", align 1
@70 = private unnamed_addr constant [30 x i8] c"Unknown phar archive \22%s\22: %s\00", align 1
@71 = private unnamed_addr constant [26 x i8] c"Unknown phar archive \22%s\22\00", align 1
@72 = private unnamed_addr constant [56 x i8] c"phar archive \22%s\22 cannot be unlinked from within itself\00", align 1
@73 = private unnamed_addr constant [64 x i8] c"phar archive \22%s\22 is in phar.cache_list, cannot unlinkArchive()\00", align 1
@74 = private unnamed_addr constant [137 x i8] c"phar archive \22%s\22 has open file handles or objects.  fclose() all file handles, and unset() all objects prior to calling unlinkArchive()\00", align 1
@75 = private unnamed_addr constant [51 x i8] c"Cannot call method on an uninitialized Phar object\00", align 1
@76 = private unnamed_addr constant [69 x i8] c"Cannot write to archive - write operations restricted by INI setting\00", align 1
@77 = private unnamed_addr constant [4 x i8] c"p|s\00", align 1
@78 = private unnamed_addr constant [48 x i8] c"Unable to instantiate directory iterator for %s\00", align 1
@spl_ce_RecursiveIteratorIterator = external dso_local global %3*, align 8
@spl_ce_RegexIterator = external dso_local global %3*, align 8
@79 = private unnamed_addr constant [44 x i8] c"Unable to instantiate regex iterator for %s\00", align 1
@80 = private unnamed_addr constant [42 x i8] c"phar \22%s\22 unable to create temporary file\00", align 1
@81 = private unnamed_addr constant [49 x i8] c"phar \22%s\22 is persistent, unable to copy on write\00", align 1
@82 = private unnamed_addr constant [49 x i8] c"Cannot write out phar archive, phar is read-only\00", align 1
@83 = private unnamed_addr constant [4 x i8] c"O|s\00", align 1
@zend_ce_traversable = external dso_local global %3*, align 8
@84 = private unnamed_addr constant [43 x i8] c"phar \22%s\22: unable to create temporary file\00", align 1
@85 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@86 = private unnamed_addr constant [30 x i8] c"Unknown file format specified\00", align 1
@87 = private unnamed_addr constant [5 x i8] c"|lls\00", align 1
@88 = private unnamed_addr constant [60 x i8] c"Cannot write out executable phar archive, phar is read-only\00", align 1
@89 = private unnamed_addr constant [85 x i8] c"Unknown file format specified, please pass one of Phar::PHAR, Phar::TAR or Phar::ZIP\00", align 1
@90 = private unnamed_addr constant [96 x i8] c"Cannot compress entire archive with gzip, zip archives do not support whole-archive compression\00", align 1
@91 = private unnamed_addr constant [69 x i8] c"Cannot compress entire archive with gzip, enable ext/zlib in php.ini\00", align 1
@92 = private unnamed_addr constant [95 x i8] c"Cannot compress entire archive with bz2, zip archives do not support whole-archive compression\00", align 1
@93 = private unnamed_addr constant [67 x i8] c"Cannot compress entire archive with bz2, enable ext/bz2 in php.ini\00", align 1
@94 = private unnamed_addr constant [72 x i8] c"Unknown compression specified, please pass one of Phar::GZ or Phar::BZ2\00", align 1
@95 = private unnamed_addr constant [63 x i8] c"Cannot write out data phar archive, use Phar::TAR or Phar::ZIP\00", align 1
@96 = private unnamed_addr constant [73 x i8] c"Unknown file format specified, please pass one of Phar::TAR or Phar::ZIP\00", align 1
@97 = private unnamed_addr constant [46 x i8] c"Entry %s does not exist and cannot be deleted\00", align 1
@98 = private unnamed_addr constant [50 x i8] c"A Phar alias cannot be set in a plain tar archive\00", align 1
@99 = private unnamed_addr constant [50 x i8] c"A Phar alias cannot be set in a plain zip archive\00", align 1
@100 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@101 = private unnamed_addr constant [82 x i8] c"alias \22%s\22 is already used for archive \22%s\22 and cannot be used for other archives\00", align 1
@102 = private unnamed_addr constant [43 x i8] c"Invalid alias \22%s\22 specified for phar \22%s\22\00", align 1
@103 = private unnamed_addr constant [38 x i8] c"Cannot change stub, phar is read-only\00", align 1
@104 = private unnamed_addr constant [49 x i8] c"A Phar stub cannot be set in a plain tar archive\00", align 1
@105 = private unnamed_addr constant [49 x i8] c"A Phar stub cannot be set in a plain zip archive\00", align 1
@106 = private unnamed_addr constant [4 x i8] c"r|l\00", align 1
@107 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@108 = private unnamed_addr constant [53 x i8] c"Cannot change stub, unable to read from input stream\00", align 1
@109 = private unnamed_addr constant [5 x i8] c"|s!s\00", align 1
@110 = private unnamed_addr constant [72 x i8] c"method accepts no arguments for a tar- or zip-based phar stub, %d given\00", align 1
@111 = private unnamed_addr constant [36 x i8] c"Cannot change stub: phar.readonly=1\00", align 1
@112 = private unnamed_addr constant [50 x i8] c"Cannot set signature algorithm, phar is read-only\00", align 1
@113 = private unnamed_addr constant [4 x i8] c"l|s\00", align 1
@114 = private unnamed_addr constant [45 x i8] c"Cannot set signature algorithm, key too long\00", align 1
@115 = private unnamed_addr constant [38 x i8] c"Unknown signature algorithm specified\00", align 1
@116 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@117 = private unnamed_addr constant [10 x i8] c"hash_type\00", align 1
@118 = private unnamed_addr constant [13 x i8] c"Unknown (%u)\00", align 1
@119 = private unnamed_addr constant [48 x i8] c"Cannot compress phar archive, phar is read-only\00", align 1
@120 = private unnamed_addr constant [66 x i8] c"Cannot compress zip-based archives with whole-archive compression\00", align 1
@121 = private unnamed_addr constant [3 x i8] c"|s\00", align 1
@122 = private unnamed_addr constant [50 x i8] c"Cannot decompress phar archive, phar is read-only\00", align 1
@123 = private unnamed_addr constant [68 x i8] c"Cannot decompress zip-based archives with whole-archive compression\00", align 1
@124 = private unnamed_addr constant [44 x i8] c"Phar is readonly, cannot change compression\00", align 1
@125 = private unnamed_addr constant [75 x i8] c"Cannot compress files within archive with gzip, enable ext/zlib in php.ini\00", align 1
@126 = private unnamed_addr constant [73 x i8] c"Cannot compress files within archive with bz2, enable ext/bz2 in php.ini\00", align 1
@127 = private unnamed_addr constant [131 x i8] c"Cannot compress with Gzip compression, tar archives cannot compress individual files, use compress() to compress the whole archive\00", align 1
@128 = private unnamed_addr constant [91 x i8] c"Cannot compress all files as Gzip, some are compressed as bzip2 and cannot be decompressed\00", align 1
@129 = private unnamed_addr constant [91 x i8] c"Cannot compress all files as Bzip2, some are compressed as gzip and cannot be decompressed\00", align 1
@130 = private unnamed_addr constant [93 x i8] c"Cannot decompress all files, some are compressed as bzip2 or gzip and cannot be decompressed\00", align 1
@131 = private unnamed_addr constant [44 x i8] c"Cannot copy \22%s\22 to \22%s\22, phar is read-only\00", align 1
@132 = private unnamed_addr constant [6 x i8] c".phar\00", align 1
@133 = private unnamed_addr constant [74 x i8] c"file \22%s\22 cannot be copied to file \22%s\22, cannot copy Phar meta-file in %s\00", align 1
@134 = private unnamed_addr constant [77 x i8] c"file \22%s\22 cannot be copied to file \22%s\22, cannot copy to Phar meta-file in %s\00", align 1
@135 = private unnamed_addr constant [67 x i8] c"file \22%s\22 cannot be copied to file \22%s\22, file does not exist in %s\00", align 1
@136 = private unnamed_addr constant [80 x i8] c"file \22%s\22 cannot be copied to file \22%s\22, file must not already exist in phar %s\00", align 1
@137 = private unnamed_addr constant [80 x i8] c"file \22%s\22 contains invalid characters %s, cannot be copied from \22%s\22 in phar %s\00", align 1
@138 = private unnamed_addr constant [28 x i8] c"Entry %s does not exist%s%s\00", align 1
@139 = private unnamed_addr constant [3 x i8] c", \00", align 1
@140 = private unnamed_addr constant [15 x i8] c".phar/stub.php\00", align 1
@141 = private unnamed_addr constant [68 x i8] c"Cannot get stub \22.phar/stub.php\22 directly in phar \22%s\22, use getStub\00", align 1
@142 = private unnamed_addr constant [16 x i8] c".phar/alias.txt\00", align 1
@143 = private unnamed_addr constant [71 x i8] c"Cannot get alias \22.phar/alias.txt\22 directly in phar \22%s\22, use getAlias\00", align 1
@144 = private unnamed_addr constant [72 x i8] c"Cannot directly get any files or directories in magic \22.phar\22 directory\00", align 1
@145 = private unnamed_addr constant [13 x i8] c"phar://%s/%s\00", align 1
@146 = private unnamed_addr constant [63 x i8] c"Write operations disabled by the php.ini setting phar.readonly\00", align 1
@147 = private unnamed_addr constant [3 x i8] c"pr\00", align 1
@148 = private unnamed_addr constant [3 x i8] c"ps\00", align 1
@149 = private unnamed_addr constant [68 x i8] c"Cannot set stub \22.phar/stub.php\22 directly in phar \22%s\22, use setStub\00", align 1
@150 = private unnamed_addr constant [71 x i8] c"Cannot set alias \22.phar/alias.txt\22 directly in phar \22%s\22, use setAlias\00", align 1
@151 = private unnamed_addr constant [63 x i8] c"Cannot set any files or directories in magic \22.phar\22 directory\00", align 1
@152 = private unnamed_addr constant [53 x i8] c"Cannot create a directory in magic \22.phar\22 directory\00", align 1
@153 = private unnamed_addr constant [4 x i8] c"://\00", align 1
@spl_ce_RuntimeException = external dso_local global %3*, align 8
@154 = private unnamed_addr constant [100 x i8] c"phar error: unable to open file \22%s\22 to add to phar archive, open_basedir restrictions prevent this\00", align 1
@155 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@156 = private unnamed_addr constant [60 x i8] c"phar error: unable to open file \22%s\22 to add to phar archive\00", align 1
@157 = private unnamed_addr constant [37 x i8] c"phar error: unable to open phar \22%s\22\00", align 1
@158 = private unnamed_addr constant [71 x i8] c"phar error: unable to read stub of phar \22%s\22 (cannot create %s filter)\00", align 1
@159 = private unnamed_addr constant [20 x i8] c"Unable to read stub\00", align 1
@160 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@161 = private unnamed_addr constant [6 x i8] c"p|z!b\00", align 1
@spl_ce_InvalidArgumentException = external dso_local global %3*, align 8
@162 = private unnamed_addr constant [37 x i8] c"Invalid argument, %s cannot be found\00", align 1
@163 = private unnamed_addr constant [58 x i8] c"Invalid argument, extraction path must be non-zero length\00", align 1
@164 = private unnamed_addr constant [76 x i8] c"Cannot extract to \22%s...\22, destination directory is too long for filesystem\00", align 1
@165 = private unnamed_addr constant [42 x i8] c"Unable to create path \22%s\22 for extraction\00", align 1
@166 = private unnamed_addr constant [74 x i8] c"Unable to use path \22%s\22 for extraction, it is a file, must be a directory\00", align 1
@167 = private unnamed_addr constant [74 x i8] c"Invalid argument, array of filenames to extract contains non-string value\00", align 1
@168 = private unnamed_addr constant [37 x i8] c"Extraction from phar \22%s\22 failed: %s\00", align 1
@169 = private unnamed_addr constant [84 x i8] c"Phar Error: attempted to extract non-existent file or directory \22%s\22 from phar \22%s\22\00", align 1
@170 = private unnamed_addr constant [69 x i8] c"Invalid argument, expected a filename (string) or array of filenames\00", align 1
@171 = private unnamed_addr constant [79 x i8] c"'%s' is not a valid phar archive URL (must have at least phar://filename.phar)\00", align 1
@172 = private unnamed_addr constant [31 x i8] c"Cannot open phar file '%s': %s\00", align 1
@173 = private unnamed_addr constant [27 x i8] c"Cannot open phar file '%s'\00", align 1
@174 = private unnamed_addr constant [55 x i8] c"Cannot access phar file entry '%s' in archive '%s'%s%s\00", align 1
@spl_ce_SplFileInfo = external dso_local global %3*, align 8
@175 = private unnamed_addr constant [59 x i8] c"Cannot call method on an uninitialized PharFileInfo object\00", align 1
@176 = private unnamed_addr constant [35 x i8] c"Unknown compression type specified\00", align 1
@177 = private unnamed_addr constant [47 x i8] c"Phar entry is a directory, does not have a CRC\00", align 1
@178 = private unnamed_addr constant [31 x i8] c"Phar entry was not CRC checked\00", align 1
@179 = private unnamed_addr constant [92 x i8] c"Phar entry \22%s\22 is a temporary directory (not an actual entry in the archive), cannot chmod\00", align 1
@180 = private unnamed_addr constant [86 x i8] c"Cannot modify permissions for file \22%s\22 in phar \22%s\22, write operations are prohibited\00", align 1
@basic_globals = external dso_local global %81, align 8
@181 = private unnamed_addr constant [94 x i8] c"Phar entry is a temporary directory (not an actual entry in the archive), cannot set metadata\00", align 1
@182 = private unnamed_addr constant [97 x i8] c"Phar entry is a temporary directory (not an actual entry in the archive), cannot delete metadata\00", align 1
@183 = private unnamed_addr constant [71 x i8] c"Phar error: Cannot retrieve contents, \22%s\22 in phar \22%s\22 is a directory\00", align 1
@184 = private unnamed_addr constant [60 x i8] c"Phar error: Cannot retrieve contents, \22%s\22 in phar \22%s\22: %s\00", align 1
@185 = private unnamed_addr constant [58 x i8] c"Phar error: Cannot retrieve contents of \22%s\22 in phar \22%s\22\00", align 1
@186 = private unnamed_addr constant [81 x i8] c"Cannot compress with Gzip compression, not possible with tar-based phar archives\00", align 1
@187 = private unnamed_addr constant [50 x i8] c"Phar entry is a directory, cannot set compression\00", align 1
@188 = private unnamed_addr constant [29 x i8] c"Cannot compress deleted file\00", align 1
@189 = private unnamed_addr constant [141 x i8] c"Cannot compress with gzip compression, file is already compressed with bzip2 compression and bz2 extension is not enabled, cannot decompress\00", align 1
@190 = private unnamed_addr constant [105 x i8] c"Phar error: Cannot decompress bzip2-compressed file \22%s\22 in phar \22%s\22 in order to compress with gzip: %s\00", align 1
@191 = private unnamed_addr constant [69 x i8] c"Cannot compress with gzip compression, zlib extension is not enabled\00", align 1
@192 = private unnamed_addr constant [142 x i8] c"Cannot compress with bzip2 compression, file is already compressed with gzip compression and zlib extension is not enabled, cannot decompress\00", align 1
@193 = private unnamed_addr constant [105 x i8] c"Phar error: Cannot decompress gzip-compressed file \22%s\22 in phar \22%s\22 in order to compress with bzip2: %s\00", align 1
@194 = private unnamed_addr constant [69 x i8] c"Cannot compress with bzip2 compression, bz2 extension is not enabled\00", align 1
@195 = private unnamed_addr constant [36 x i8] c"Phar is readonly, cannot decompress\00", align 1
@196 = private unnamed_addr constant [70 x i8] c"Cannot decompress Gzip-compressed file, zlib extension is not enabled\00", align 1
@197 = private unnamed_addr constant [70 x i8] c"Cannot decompress Bzip2-compressed file, bz2 extension is not enabled\00", align 1
@198 = private unnamed_addr constant [84 x i8] c"Cannot decompress entry \22%s\22, phar error: Cannot open phar archive \22%s\22 for reading\00", align 1
@199 = internal constant [4 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @402, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @403, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@200 = private unnamed_addr constant [11 x i8] c"__destruct\00", align 1
@201 = internal constant [1 x %59] [%59 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@202 = private unnamed_addr constant [12 x i8] c"addEmptyDir\00", align 1
@203 = internal constant [2 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @404, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@204 = private unnamed_addr constant [8 x i8] c"addFile\00", align 1
@205 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @405, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@206 = private unnamed_addr constant [14 x i8] c"addFromString\00", align 1
@207 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @405, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @406, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@208 = private unnamed_addr constant [19 x i8] c"buildFromDirectory\00", align 1
@209 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @407, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @408, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@210 = private unnamed_addr constant [18 x i8] c"buildFromIterator\00", align 1
@211 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @409, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @410, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@212 = private unnamed_addr constant [14 x i8] c"compressFiles\00", align 1
@213 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @411, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@214 = private unnamed_addr constant [16 x i8] c"decompressFiles\00", align 1
@215 = private unnamed_addr constant [9 x i8] c"compress\00", align 1
@216 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @411, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @412, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@217 = private unnamed_addr constant [11 x i8] c"decompress\00", align 1
@218 = internal constant [2 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @412, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@219 = private unnamed_addr constant [20 x i8] c"convertToExecutable\00", align 1
@220 = internal constant [4 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @413, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @411, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @412, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@221 = private unnamed_addr constant [14 x i8] c"convertToData\00", align 1
@222 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@223 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @414, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @415, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@224 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@225 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@226 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @416, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@227 = private unnamed_addr constant [12 x i8] c"delMetadata\00", align 1
@228 = private unnamed_addr constant [10 x i8] c"extractTo\00", align 1
@229 = internal constant [4 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @417, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @418, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @419, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@230 = private unnamed_addr constant [9 x i8] c"getAlias\00", align 1
@231 = private unnamed_addr constant [8 x i8] c"getPath\00", align 1
@232 = private unnamed_addr constant [12 x i8] c"getMetadata\00", align 1
@233 = private unnamed_addr constant [12 x i8] c"getModified\00", align 1
@234 = private unnamed_addr constant [13 x i8] c"getSignature\00", align 1
@235 = private unnamed_addr constant [8 x i8] c"getStub\00", align 1
@236 = private unnamed_addr constant [11 x i8] c"getVersion\00", align 1
@237 = private unnamed_addr constant [12 x i8] c"hasMetadata\00", align 1
@238 = private unnamed_addr constant [12 x i8] c"isBuffering\00", align 1
@239 = private unnamed_addr constant [13 x i8] c"isCompressed\00", align 1
@240 = private unnamed_addr constant [13 x i8] c"isFileFormat\00", align 1
@241 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @420, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@242 = private unnamed_addr constant [11 x i8] c"isWritable\00", align 1
@243 = private unnamed_addr constant [13 x i8] c"offsetExists\00", align 1
@244 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @416, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@245 = private unnamed_addr constant [10 x i8] c"offsetGet\00", align 1
@246 = private unnamed_addr constant [10 x i8] c"offsetSet\00", align 1
@247 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @416, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @421, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@248 = private unnamed_addr constant [12 x i8] c"offsetUnset\00", align 1
@249 = private unnamed_addr constant [9 x i8] c"setAlias\00", align 1
@250 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @403, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@251 = private unnamed_addr constant [15 x i8] c"setDefaultStub\00", align 1
@252 = internal constant [3 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @422, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @423, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@253 = private unnamed_addr constant [12 x i8] c"setMetadata\00", align 1
@254 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @424, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@255 = private unnamed_addr constant [22 x i8] c"setSignatureAlgorithm\00", align 1
@256 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @425, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @426, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@257 = private unnamed_addr constant [8 x i8] c"setStub\00", align 1
@258 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @427, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @428, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@259 = private unnamed_addr constant [15 x i8] c"startBuffering\00", align 1
@260 = private unnamed_addr constant [14 x i8] c"stopBuffering\00", align 1
@261 = private unnamed_addr constant [11 x i8] c"apiVersion\00", align 1
@262 = private unnamed_addr constant [12 x i8] c"canCompress\00", align 1
@263 = internal constant [2 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @429, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@264 = private unnamed_addr constant [9 x i8] c"canWrite\00", align 1
@265 = private unnamed_addr constant [18 x i8] c"createDefaultStub\00", align 1
@266 = private unnamed_addr constant [24 x i8] c"getSupportedCompression\00", align 1
@267 = private unnamed_addr constant [23 x i8] c"getSupportedSignatures\00", align 1
@268 = private unnamed_addr constant [19 x i8] c"interceptFileFuncs\00", align 1
@269 = private unnamed_addr constant [20 x i8] c"isValidPharFilename\00", align 1
@270 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @430, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@271 = private unnamed_addr constant [9 x i8] c"loadPhar\00", align 1
@272 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @403, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@273 = private unnamed_addr constant [8 x i8] c"mapPhar\00", align 1
@274 = internal constant [3 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @403, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @431, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@275 = private unnamed_addr constant [8 x i8] c"running\00", align 1
@276 = internal constant [2 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @432, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@277 = private unnamed_addr constant [6 x i8] c"mount\00", align 1
@278 = internal constant [3 x %59] [%59 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @433, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @434, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@279 = private unnamed_addr constant [11 x i8] c"mungServer\00", align 1
@280 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @435, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@281 = private unnamed_addr constant [14 x i8] c"unlinkArchive\00", align 1
@282 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @436, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@283 = private unnamed_addr constant [8 x i8] c"webPhar\00", align 1
@284 = internal constant [6 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @403, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @422, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @437, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @438, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @439, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@php_archive_methods = hidden global [57 x { i8*, void (%23*, %4*)*, %59*, i32, i32 }] [{ i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), void (%23*, %4*)* @zim_Phar___construct, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @199, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @200, i32 0, i32 0), void (%23*, %4*)* @zim_Phar___destruct, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @202, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_addEmptyDir, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @203, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @204, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_addFile, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @205, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @206, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_addFromString, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @207, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @208, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_buildFromDirectory, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @209, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @210, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_buildFromIterator, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @211, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @212, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_compressFiles, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @213, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @214, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_decompressFiles, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @215, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_compress, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @216, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @217, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_decompress, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @218, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @219, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_convertToExecutable, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @220, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @221, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_convertToData, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @220, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_copy, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @223, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @224, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_count, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @225, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_delete, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @226, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @227, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_delMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @228, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_extractTo, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @229, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @230, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getAlias, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @231, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getPath, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @232, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @233, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getModified, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @234, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getSignature, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @235, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getStub, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @236, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getVersion, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @237, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_hasMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @238, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isBuffering, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @239, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isCompressed, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @240, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isFileFormat, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @241, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @242, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isWritable, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @243, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetExists, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @244, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @245, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetGet, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @244, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetSet, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @247, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @248, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetUnset, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @244, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @249, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setAlias, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @250, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setDefaultStub, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @252, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setMetadata, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @254, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @255, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setSignatureAlgorithm, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @256, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @257, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setStub, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @258, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @259, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_startBuffering, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @260, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_stopBuffering, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @261, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_apiVersion, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @262, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_canCompress, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @263, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @264, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_canWrite, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @265, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_createDefaultStub, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @252, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @266, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getSupportedCompression, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @267, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getSupportedSignatures, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_interceptFileFuncs, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @269, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isValidPharFilename, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @270, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @271, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_loadPhar, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @272, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @273, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_mapPhar, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @274, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @275, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_running, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @276, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @277, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_mount, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @278, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_mungServer, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @280, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @281, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_unlinkArchive, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @282, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @283, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_webPhar, %59* getelementptr inbounds ([6 x %59], [6 x %59]* @284, i32 0, i32 0), i32 5, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } zeroinitializer], align 16
@285 = internal constant [5 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @402, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @403, i32 0, i32 0), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @420, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@php_data_methods = hidden global [57 x { i8*, void (%23*, %4*)*, %59*, i32, i32 }] [{ i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), void (%23*, %4*)* @zim_Phar___construct, %59* getelementptr inbounds ([5 x %59], [5 x %59]* @285, i32 0, i32 0), i32 4, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @200, i32 0, i32 0), void (%23*, %4*)* @zim_Phar___destruct, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @202, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_addEmptyDir, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @203, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @204, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_addFile, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @205, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @206, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_addFromString, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @207, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @208, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_buildFromDirectory, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @209, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @210, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_buildFromIterator, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @211, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @212, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_compressFiles, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @213, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @214, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_decompressFiles, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @215, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_compress, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @216, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @217, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_decompress, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @218, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @219, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_convertToExecutable, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @220, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @221, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_convertToData, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @220, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_copy, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @223, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @224, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_count, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @225, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_delete, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @226, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @227, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_delMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @228, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_extractTo, %59* getelementptr inbounds ([4 x %59], [4 x %59]* @229, i32 0, i32 0), i32 3, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @230, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getAlias, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @231, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getPath, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @232, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @233, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getModified, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @234, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getSignature, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @235, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getStub, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @236, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getVersion, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @237, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_hasMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @238, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isBuffering, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @239, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isCompressed, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @240, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isFileFormat, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @241, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @242, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isWritable, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @243, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetExists, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @244, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @245, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetGet, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @244, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @246, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetSet, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @247, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @248, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_offsetUnset, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @244, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @249, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setAlias, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @250, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @251, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setDefaultStub, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @252, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setMetadata, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @254, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @255, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setSignatureAlgorithm, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @256, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @257, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_setStub, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @258, i32 0, i32 0), i32 2, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @259, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_startBuffering, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @260, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_stopBuffering, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @261, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_apiVersion, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @262, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_canCompress, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @263, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @264, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_canWrite, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @265, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_createDefaultStub, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @252, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @266, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getSupportedCompression, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @267, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_getSupportedSignatures, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @268, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_interceptFileFuncs, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @269, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_isValidPharFilename, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @270, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @271, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_loadPhar, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @272, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @273, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_mapPhar, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @274, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @275, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_running, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @276, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @277, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_mount, %59* getelementptr inbounds ([3 x %59], [3 x %59]* @278, i32 0, i32 0), i32 2, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @279, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_mungServer, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @280, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @281, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_unlinkArchive, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @282, i32 0, i32 0), i32 1, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @283, i32 0, i32 0), void (%23*, %4*)* @zim_Phar_webPhar, %59* getelementptr inbounds ([6 x %59], [6 x %59]* @284, i32 0, i32 0), i32 5, i32 261 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } zeroinitializer], align 16
@286 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @401, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@287 = private unnamed_addr constant [6 x i8] c"chmod\00", align 1
@288 = internal constant [2 x %59] [%59 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %59 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @440, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@289 = private unnamed_addr constant [18 x i8] c"getCompressedSize\00", align 1
@290 = private unnamed_addr constant [9 x i8] c"getCRC32\00", align 1
@291 = private unnamed_addr constant [11 x i8] c"getContent\00", align 1
@292 = private unnamed_addr constant [13 x i8] c"getPharFlags\00", align 1
@293 = internal constant [2 x %59] [%59 zeroinitializer, %59 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @411, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@294 = private unnamed_addr constant [13 x i8] c"isCRCChecked\00", align 1
@php_entry_methods = hidden global [16 x { i8*, void (%23*, %4*)*, %59*, i32, i32 }] [{ i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo___construct, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @286, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @200, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo___destruct, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @287, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_chmod, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @288, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @215, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_compress, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @213, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @217, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_decompress, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @227, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_delMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @289, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_getCompressedSize, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @290, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_getCRC32, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @291, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_getContent, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @232, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_getMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @292, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_getPharFlags, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @237, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_hasMetadata, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @239, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_isCompressed, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @293, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @294, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_isCRCChecked, %59* getelementptr inbounds ([1 x %59], [1 x %59]* @201, i32 0, i32 0), i32 0, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @253, i32 0, i32 0), void (%23*, %4*)* @zim_PharFileInfo_setMetadata, %59* getelementptr inbounds ([2 x %59], [2 x %59]* @254, i32 0, i32 0), i32 1, i32 256 }, { i8*, void (%23*, %4*)*, %59*, i32, i32 } zeroinitializer], align 16
@phar_exception_methods = hidden global [1 x %58] zeroinitializer, align 16
@295 = private unnamed_addr constant [14 x i8] c"PharException\00", align 1
@zend_new_interned_string = external dso_local global %0* (%0*)*, align 8
@zend_ce_exception = external dso_local global %3*, align 8
@296 = private unnamed_addr constant [5 x i8] c"Phar\00", align 1
@297 = internal global %3* null, align 8
@zend_ce_countable = external dso_local global %3*, align 8
@zend_ce_arrayaccess = external dso_local global %3*, align 8
@298 = private unnamed_addr constant [9 x i8] c"PharData\00", align 1
@299 = private unnamed_addr constant [13 x i8] c"PharFileInfo\00", align 1
@300 = private unnamed_addr constant [4 x i8] c"BZ2\00", align 1
@301 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@302 = private unnamed_addr constant [5 x i8] c"PHAR\00", align 1
@303 = private unnamed_addr constant [4 x i8] c"TAR\00", align 1
@304 = private unnamed_addr constant [4 x i8] c"ZIP\00", align 1
@305 = private unnamed_addr constant [11 x i8] c"COMPRESSED\00", align 1
@306 = private unnamed_addr constant [4 x i8] c"PHP\00", align 1
@307 = private unnamed_addr constant [5 x i8] c"PHPS\00", align 1
@308 = private unnamed_addr constant [8 x i8] c"OPENSSL\00", align 1
@309 = private unnamed_addr constant [5 x i8] c"SHA1\00", align 1
@310 = private unnamed_addr constant [7 x i8] c"SHA256\00", align 1
@311 = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@312 = private unnamed_addr constant [27 x i8] c"HTTP/1.0 403 Access Denied\00", align 1
@313 = private unnamed_addr constant [81 x i8] c"<html>\0A <head>\0A  <title>Access Denied</title>\0A </head>\0A <body>\0A  <h1>403 - File \00", align 1
@314 = private unnamed_addr constant [36 x i8] c"Access Denied</h1>\0A </body>\0A</html>\00", align 1
@315 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@316 = private unnamed_addr constant [23 x i8] c"HTTP/1.0 404 Not Found\00", align 1
@317 = private unnamed_addr constant [82 x i8] c"<html>\0A <head>\0A  <title>File Not Found</title>\0A </head>\0A <body>\0A  <h1>404 - File \00", align 1
@318 = private unnamed_addr constant [32 x i8] c"Not Found</h1>\0A </body>\0A</html>\00", align 1
@319 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@320 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@321 = private unnamed_addr constant [17 x i8] c"Content-type: %s\00", align 1
@322 = private unnamed_addr constant [19 x i8] c"Content-length: %u\00", align 1
@zend_compile_file = external dso_local global %12* (%89*, i32)*, align 8
@323 = private unnamed_addr constant [15 x i8] c"PHAR_PATH_INFO\00", align 1
@324 = private unnamed_addr constant [16 x i8] c"PATH_TRANSLATED\00", align 1
@325 = private unnamed_addr constant [21 x i8] c"PHAR_PATH_TRANSLATED\00", align 1
@326 = private unnamed_addr constant [17 x i8] c"PHAR_REQUEST_URI\00", align 1
@327 = private unnamed_addr constant [14 x i8] c"PHAR_PHP_SELF\00", align 1
@328 = private unnamed_addr constant [17 x i8] c"PHAR_SCRIPT_NAME\00", align 1
@329 = private unnamed_addr constant [21 x i8] c"PHAR_SCRIPT_FILENAME\00", align 1
@330 = private unnamed_addr constant [30 x i8] c"Iterator %s returned no value\00", align 1
@331 = private unnamed_addr constant [46 x i8] c"Iterator %s returned an invalid stream handle\00", align 1
@332 = private unnamed_addr constant [59 x i8] c"Iterator %s returned an invalid key (must return a string)\00", align 1
@333 = private unnamed_addr constant [47 x i8] c"Iterator %s returned an invalid key (too long)\00", align 1
@334 = private unnamed_addr constant [9 x i8] c"[stream]\00", align 1
@335 = private unnamed_addr constant [79 x i8] c"Iterator %s returns an SplFileInfo object, so base directory must be specified\00", align 1
@336 = private unnamed_addr constant [7 x i8] c"%s%c%s\00", align 1
@337 = private unnamed_addr constant [28 x i8] c"Could not resolve file path\00", align 1
@338 = private unnamed_addr constant [61 x i8] c"Iterator %s returned an invalid value (must return a string)\00", align 1
@339 = private unnamed_addr constant [72 x i8] c"Iterator %s returned a path \22%s\22 that is not in the base directory \22%s\22\00", align 1
@340 = private unnamed_addr constant [68 x i8] c"Iterator %s returned a path \22%s\22 that open_basedir prevents opening\00", align 1
@341 = private unnamed_addr constant [58 x i8] c"Iterator %s returned a file that could not be opened \22%s\22\00", align 1
@342 = private unnamed_addr constant [4 x i8] c"w+b\00", align 1
@343 = private unnamed_addr constant [31 x i8] c"Entry %s cannot be created: %s\00", align 1
@344 = private unnamed_addr constant [32 x i8] c"unable to create temporary file\00", align 1
@345 = private unnamed_addr constant [73 x i8] c"Cannot convert phar archive \22%s\22, unable to open entry \22%s\22 contents: %s\00", align 1
@346 = private unnamed_addr constant [69 x i8] c"Cannot convert phar archive \22%s\22, unable to open entry \22%s\22 contents\00", align 1
@347 = private unnamed_addr constant [69 x i8] c"Cannot convert phar archive \22%s\22, unable to copy entry \22%s\22 contents\00", align 1
@348 = private unnamed_addr constant [14 x i8] c".phar.tar.bz2\00", align 1
@349 = private unnamed_addr constant [13 x i8] c".phar.tar.gz\00", align 1
@350 = private unnamed_addr constant [10 x i8] c".phar.php\00", align 1
@351 = private unnamed_addr constant [10 x i8] c".phar.bz2\00", align 1
@352 = private unnamed_addr constant [10 x i8] c".phar.zip\00", align 1
@353 = private unnamed_addr constant [10 x i8] c".phar.tar\00", align 1
@354 = private unnamed_addr constant [9 x i8] c".phar.gz\00", align 1
@355 = private unnamed_addr constant [9 x i8] c".tar.bz2\00", align 1
@356 = private unnamed_addr constant [8 x i8] c".tar.gz\00", align 1
@357 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@358 = private unnamed_addr constant [5 x i8] c".zip\00", align 1
@359 = private unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @348, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @349, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @351, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @352, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @353, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @354, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @355, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @356, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @357, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @358, i32 0, i32 0)], align 16
@360 = private unnamed_addr constant [4 x i8] c"zip\00", align 1
@361 = private unnamed_addr constant [9 x i8] c"phar.zip\00", align 1
@362 = private unnamed_addr constant [7 x i8] c"tar.gz\00", align 1
@363 = private unnamed_addr constant [12 x i8] c"phar.tar.gz\00", align 1
@364 = private unnamed_addr constant [8 x i8] c"tar.bz2\00", align 1
@365 = private unnamed_addr constant [13 x i8] c"phar.tar.bz2\00", align 1
@366 = private unnamed_addr constant [4 x i8] c"tar\00", align 1
@367 = private unnamed_addr constant [9 x i8] c"phar.tar\00", align 1
@368 = private unnamed_addr constant [8 x i8] c"phar.gz\00", align 1
@369 = private unnamed_addr constant [9 x i8] c"phar.bz2\00", align 1
@370 = private unnamed_addr constant [5 x i8] c"phar\00", align 1
@371 = private unnamed_addr constant [55 x i8] c"data phar converted from \22%s\22 has invalid extension %s\00", align 1
@372 = private unnamed_addr constant [50 x i8] c"phar converted from \22%s\22 has invalid extension %s\00", align 1
@373 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@374 = private unnamed_addr constant [21 x i8] c"New name is too long\00", align 1
@375 = private unnamed_addr constant [98 x i8] c"Unable to add newly converted phar \22%s\22 to the list of phars, new phar name is in phar.cache_list\00", align 1
@376 = private unnamed_addr constant [99 x i8] c"Unable to add newly converted phar \22%s\22 to the list of phars, a phar with that name already exists\00", align 1
@377 = private unnamed_addr constant [58 x i8] c"phar \22%s\22 exists and must be unlinked prior to conversion\00", align 1
@378 = private unnamed_addr constant [35 x i8] c"phar \22%s\22 has invalid extension %s\00", align 1
@379 = private unnamed_addr constant [40 x i8] c"data phar \22%s\22 has invalid extension %s\00", align 1
@380 = private unnamed_addr constant [61 x i8] c"Unable to add newly converted phar \22%s\22 to the list of phars\00", align 1
@381 = private unnamed_addr constant [63 x i8] c"Unable to instantiate phar object when converting archive \22%s\22\00", align 1
@382 = private unnamed_addr constant [51 x i8] c"Cannot create any files in magic \22.phar\22 directory\00", align 1
@383 = private unnamed_addr constant [50 x i8] c"Entry %s does not exist and cannot be created: %s\00", align 1
@384 = private unnamed_addr constant [46 x i8] c"Entry %s does not exist and cannot be created\00", align 1
@385 = private unnamed_addr constant [33 x i8] c"Entry %s could not be written to\00", align 1
@386 = private unnamed_addr constant [54 x i8] c"Directory %s does not exist and cannot be created: %s\00", align 1
@387 = private unnamed_addr constant [50 x i8] c"Directory %s does not exist and cannot be created\00", align 1
@388 = private unnamed_addr constant [81 x i8] c"Cannot extract \22%s...\22 to \22%s...\22, extracted filename is too long for filesystem\00", align 1
@389 = private unnamed_addr constant [36 x i8] c"Cannot extract \22%s\22, internal error\00", align 1
@390 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@391 = private unnamed_addr constant [78 x i8] c"Cannot extract \22%s\22 to \22%s...\22, extracted filename is too long for filesystem\00", align 1
@392 = private unnamed_addr constant [74 x i8] c"Cannot extract \22%s\22 to \22%s\22, openbasedir/safe mode restrictions in effect\00", align 1
@393 = private unnamed_addr constant [49 x i8] c"Cannot extract \22%s\22 to \22%s\22, path already exists\00", align 1
@394 = private unnamed_addr constant [53 x i8] c"Cannot extract \22%s\22, could not create directory \22%s\22\00", align 1
@395 = private unnamed_addr constant [53 x i8] c"Cannot extract \22%s\22, could not open for writing \22%s\22\00", align 1
@396 = private unnamed_addr constant [70 x i8] c"Cannot extract \22%s\22 to \22%s\22, unable to open internal file pointer: %s\00", align 1
@397 = private unnamed_addr constant [66 x i8] c"Cannot extract \22%s\22 to \22%s\22, unable to open internal file pointer\00", align 1
@398 = private unnamed_addr constant [66 x i8] c"Cannot extract \22%s\22 to \22%s\22, unable to seek internal file pointer\00", align 1
@399 = private unnamed_addr constant [53 x i8] c"Cannot extract \22%s\22 to \22%s\22, copying contents failed\00", align 1
@400 = private unnamed_addr constant [61 x i8] c"Cannot extract \22%s\22 to \22%s\22, setting file permissions failed\00", align 1
@401 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@402 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@403 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@404 = private unnamed_addr constant [8 x i8] c"dirname\00", align 1
@405 = private unnamed_addr constant [10 x i8] c"localname\00", align 1
@406 = private unnamed_addr constant [9 x i8] c"contents\00", align 1
@407 = private unnamed_addr constant [9 x i8] c"base_dir\00", align 1
@408 = private unnamed_addr constant [6 x i8] c"regex\00", align 1
@409 = private unnamed_addr constant [9 x i8] c"iterator\00", align 1
@410 = private unnamed_addr constant [15 x i8] c"base_directory\00", align 1
@411 = private unnamed_addr constant [17 x i8] c"compression_type\00", align 1
@412 = private unnamed_addr constant [9 x i8] c"file_ext\00", align 1
@413 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@414 = private unnamed_addr constant [8 x i8] c"newfile\00", align 1
@415 = private unnamed_addr constant [8 x i8] c"oldfile\00", align 1
@416 = private unnamed_addr constant [6 x i8] c"entry\00", align 1
@417 = private unnamed_addr constant [7 x i8] c"pathto\00", align 1
@418 = private unnamed_addr constant [6 x i8] c"files\00", align 1
@419 = private unnamed_addr constant [10 x i8] c"overwrite\00", align 1
@420 = private unnamed_addr constant [11 x i8] c"fileformat\00", align 1
@421 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@422 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@423 = private unnamed_addr constant [9 x i8] c"webindex\00", align 1
@424 = private unnamed_addr constant [9 x i8] c"metadata\00", align 1
@425 = private unnamed_addr constant [10 x i8] c"algorithm\00", align 1
@426 = private unnamed_addr constant [11 x i8] c"privatekey\00", align 1
@427 = private unnamed_addr constant [8 x i8] c"newstub\00", align 1
@428 = private unnamed_addr constant [7 x i8] c"maxlen\00", align 1
@429 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@430 = private unnamed_addr constant [11 x i8] c"executable\00", align 1
@431 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@432 = private unnamed_addr constant [8 x i8] c"retphar\00", align 1
@433 = private unnamed_addr constant [7 x i8] c"inphar\00", align 1
@434 = private unnamed_addr constant [13 x i8] c"externalfile\00", align 1
@435 = private unnamed_addr constant [9 x i8] c"munglist\00", align 1
@436 = private unnamed_addr constant [8 x i8] c"archive\00", align 1
@437 = private unnamed_addr constant [5 x i8] c"f404\00", align 1
@438 = private unnamed_addr constant [10 x i8] c"mimetypes\00", align 1
@439 = private unnamed_addr constant [9 x i8] c"rewrites\00", align 1
@440 = private unnamed_addr constant [6 x i8] c"perms\00", align 1

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_running(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca %4*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca %4*, align 8
  %16 = alloca %0*, align 8
  %17 = alloca %4*, align 8
  %18 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %19 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #13
  %23 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  %24 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  store i8 1, i8* %11, align 1
  %25 = load %23*, %23** %3, align 8
  %26 = getelementptr inbounds %23, %23* %25, i32 0, i32 4
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 2
  %28 = bitcast %7* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i8* %11)
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %33

32:                                               ; preds = %2
  store i32 1, i32* %12, align 4
  br label %122

33:                                               ; preds = %2
  %34 = call i8* @zend_get_executed_filename()
  store i8* %34, i8** %5, align 8
  %35 = load i8*, i8** %5, align 8
  %36 = call i64 @strlen(i8* %35) #14
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %8, align 4
  %38 = load i32, i32* %8, align 4
  %39 = icmp sgt i32 %38, 7
  br i1 %39, label %40, label %102

40:                                               ; preds = %33
  %41 = load i8*, i8** %5, align 8
  %42 = call i32 @memcmp(i8* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i64 7) #14
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %102, label %44

44:                                               ; preds = %40
  %45 = load i8*, i8** %5, align 8
  %46 = load i32, i32* %8, align 4
  %47 = call i32 @phar_split_fname(i8* %45, i32 %46, i8** %6, i32* %9, i8** %7, i32* %10, i32 2, i32 0)
  %48 = icmp eq i32 0, %47
  br i1 %48, label %49, label %102

49:                                               ; preds = %44
  %50 = load i8*, i8** %7, align 8
  call void @_efree(i8* %50)
  %51 = load i8, i8* %11, align 1
  %52 = icmp ne i8 %51, 0
  br i1 %52, label %53, label %78

53:                                               ; preds = %49
  br label %54

54:                                               ; preds = %53
  br label %55

55:                                               ; preds = %54
  %56 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = load %4*, %4** %4, align 8
  store %4* %57, %4** %13, align 8
  %58 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  %59 = load i8*, i8** %5, align 8
  %60 = load i32, i32* %9, align 4
  %61 = add nsw i32 %60, 7
  %62 = sext i32 %61 to i64
  %63 = call %0* @441(i8* %59, i64 %62, i32 0)
  store %0* %63, %0** %14, align 8
  %64 = load %0*, %0** %14, align 8
  %65 = load %4*, %4** %13, align 8
  %66 = getelementptr inbounds %4, %4* %65, i32 0, i32 0
  %67 = bitcast %5* %66 to %0**
  store %0* %64, %0** %67, align 8
  %68 = load %4*, %4** %13, align 8
  %69 = getelementptr inbounds %4, %4* %68, i32 0, i32 1
  %70 = bitcast %6* %69 to i32*
  store i32 5126, i32* %70, align 8
  %71 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #13
  %72 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #13
  br label %73

73:                                               ; preds = %55
  br label %74

74:                                               ; preds = %73
  br label %75

75:                                               ; preds = %74
  br label %76

76:                                               ; preds = %75
  %77 = load i8*, i8** %6, align 8
  call void @_efree(i8* %77)
  store i32 1, i32* %12, align 4
  br label %122

78:                                               ; preds = %49
  br label %79

79:                                               ; preds = %78
  br label %80

80:                                               ; preds = %79
  %81 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %81) #13
  %82 = load %4*, %4** %4, align 8
  store %4* %82, %4** %15, align 8
  %83 = bitcast %0** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %83) #13
  %84 = load i8*, i8** %6, align 8
  %85 = load i32, i32* %9, align 4
  %86 = sext i32 %85 to i64
  %87 = call %0* @441(i8* %84, i64 %86, i32 0)
  store %0* %87, %0** %16, align 8
  %88 = load %0*, %0** %16, align 8
  %89 = load %4*, %4** %15, align 8
  %90 = getelementptr inbounds %4, %4* %89, i32 0, i32 0
  %91 = bitcast %5* %90 to %0**
  store %0* %88, %0** %91, align 8
  %92 = load %4*, %4** %15, align 8
  %93 = getelementptr inbounds %4, %4* %92, i32 0, i32 1
  %94 = bitcast %6* %93 to i32*
  store i32 5126, i32* %94, align 8
  %95 = bitcast %0** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #13
  %96 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #13
  br label %97

97:                                               ; preds = %80
  br label %98

98:                                               ; preds = %97
  br label %99

99:                                               ; preds = %98
  br label %100

100:                                              ; preds = %99
  %101 = load i8*, i8** %6, align 8
  call void @_efree(i8* %101)
  store i32 1, i32* %12, align 4
  br label %122

102:                                              ; preds = %44, %40, %33
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  %105 = bitcast %4** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %105) #13
  %106 = load %4*, %4** %4, align 8
  store %4* %106, %4** %17, align 8
  %107 = bitcast %0** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #13
  %108 = load %0*, %0** @zend_empty_string, align 8
  store %0* %108, %0** %18, align 8
  %109 = load %0*, %0** %18, align 8
  %110 = load %4*, %4** %17, align 8
  %111 = getelementptr inbounds %4, %4* %110, i32 0, i32 0
  %112 = bitcast %5* %111 to %0**
  store %0* %109, %0** %112, align 8
  %113 = load %4*, %4** %17, align 8
  %114 = getelementptr inbounds %4, %4* %113, i32 0, i32 1
  %115 = bitcast %6* %114 to i32*
  store i32 6, i32* %115, align 8
  %116 = bitcast %0** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #13
  %117 = bitcast %4** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #13
  br label %118

118:                                              ; preds = %104
  br label %119

119:                                              ; preds = %118
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  store i32 1, i32* %12, align 4
  br label %122

122:                                              ; preds = %121, %100, %76, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %123 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %123) #13
  %124 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %124) #13
  %125 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %125) #13
  %126 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  %127 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #13
  %128 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #13
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @zend_parse_parameters(i32, i8*, ...) #2

declare dso_local i8* @zend_get_executed_filename() #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

declare dso_local i32 @phar_split_fname(i8*, i32, i8**, i32*, i8**, i32*, i32, i32) #2

declare dso_local void @_efree(i8*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @441(i8* %0, i64 %1, i32 %2) #4 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %0*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %0* @464(i64 %9, i32 %10)
  store %0* %11, %0** %7, align 8
  %12 = load %0*, %0** %7, align 8
  %13 = getelementptr inbounds %0, %0* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 %16, i1 false)
  %17 = load %0*, %0** %7, align 8
  %18 = getelementptr inbounds %0, %0* %17, i32 0, i32 3
  %19 = load i64, i64* %5, align 8
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load %0*, %0** %7, align 8
  %22 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #13
  ret %0* %21
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_mount(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %52*, align 8
  %16 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %17 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store i8* null, i8** %6, align 8
  %19 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  store i8* null, i8** %7, align 8
  %20 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #13
  %23 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  %24 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  %25 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast %52** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = load %23*, %23** %3, align 8
  %29 = getelementptr inbounds %23, %23* %28, i32 0, i32 4
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 2
  %31 = bitcast %7* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0), i8** %8, i64* %13, i8** %9, i64* %14)
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %36

35:                                               ; preds = %2
  store i32 1, i32* %16, align 4
  br label %215

36:                                               ; preds = %2
  %37 = load i64, i64* %13, align 8
  %38 = icmp ugt i64 %37, 2147483647
  %39 = xor i1 %38, true
  %40 = xor i1 %39, true
  %41 = zext i1 %40 to i32
  %42 = sext i32 %41 to i64
  %43 = call i64 @llvm.expect.i64(i64 %42, i64 0)
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %36
  %46 = load i64, i64* %14, align 8
  %47 = icmp ugt i64 %46, 2147483647
  %48 = xor i1 %47, true
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i32
  %51 = sext i32 %50 to i64
  %52 = call i64 @llvm.expect.i64(i64 %51, i64 0)
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %45, %36
  br label %55

55:                                               ; preds = %54
  %56 = load %4*, %4** %4, align 8
  %57 = getelementptr inbounds %4, %4* %56, i32 0, i32 1
  %58 = bitcast %6* %57 to i32*
  store i32 2, i32* %58, align 8
  br label %59

59:                                               ; preds = %55
  br label %60

60:                                               ; preds = %59
  store i32 1, i32* %16, align 4
  br label %215

61:                                               ; preds = %45
  %62 = call i8* @zend_get_executed_filename()
  store i8* %62, i8** %5, align 8
  %63 = load i8*, i8** %5, align 8
  %64 = call i64 @strlen(i8* %63) #14
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %10, align 4
  %66 = load i32, i32* %10, align 4
  %67 = icmp sgt i32 %66, 7
  br i1 %67, label %68, label %171

68:                                               ; preds = %61
  %69 = load i8*, i8** %5, align 8
  %70 = call i32 @memcmp(i8* %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i64 7) #14
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %171, label %72

72:                                               ; preds = %68
  %73 = load i8*, i8** %5, align 8
  %74 = load i32, i32* %10, align 4
  %75 = call i32 @phar_split_fname(i8* %73, i32 %74, i8** %6, i32* %11, i8** %7, i32* %12, i32 2, i32 0)
  %76 = icmp eq i32 0, %75
  br i1 %76, label %77, label %171

77:                                               ; preds = %72
  %78 = load i8*, i8** %7, align 8
  call void @_efree(i8* %78)
  store i8* null, i8** %7, align 8
  %79 = load i64, i64* %13, align 8
  %80 = icmp ugt i64 %79, 7
  br i1 %80, label %81, label %90

81:                                               ; preds = %77
  %82 = load i8*, i8** %8, align 8
  %83 = call i32 @memcmp(i8* %82, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i64 7) #14
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = load %3*, %3** @3, align 8
  %87 = load i8*, i8** %8, align 8
  %88 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %86, i64 0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @4, i32 0, i32 0), i8* %87)
  %89 = load i8*, i8** %6, align 8
  call void @_efree(i8* %89)
  store i32 1, i32* %16, align 4
  br label %215

90:                                               ; preds = %81, %77
  br label %91

91:                                               ; preds = %203, %90
  %92 = load i8*, i8** %6, align 8
  %93 = load i32, i32* %11, align 4
  %94 = sext i32 %93 to i64
  %95 = call i8* @442(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1), i8* %92, i64 %94)
  %96 = bitcast i8* %95 to %52*
  store %52* %96, %52** %15, align 8
  %97 = icmp eq %52* null, %96
  br i1 %97, label %98, label %122

98:                                               ; preds = %91
  %99 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 7), align 8
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %98
  %102 = load i8*, i8** %6, align 8
  %103 = load i32, i32* %11, align 4
  %104 = sext i32 %103 to i64
  %105 = call i8* @442(%8* @cached_phars, i8* %102, i64 %104)
  %106 = bitcast i8* %105 to %52*
  store %52* %106, %52** %15, align 8
  %107 = icmp ne %52* null, %106
  br i1 %107, label %108, label %113

108:                                              ; preds = %101
  %109 = call i32 @phar_copy_on_write(%52** %15)
  %110 = icmp eq i32 0, %109
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  br label %123

112:                                              ; preds = %108
  br label %113

113:                                              ; preds = %112, %101, %98
  %114 = load %3*, %3** @3, align 8
  %115 = load i8*, i8** %6, align 8
  %116 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %114, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @5, i32 0, i32 0), i8* %115)
  %117 = load i8*, i8** %6, align 8
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = load i8*, i8** %6, align 8
  call void @_efree(i8* %120)
  br label %121

121:                                              ; preds = %119, %113
  store i32 1, i32* %16, align 4
  br label %215

122:                                              ; preds = %91
  br label %123

123:                                              ; preds = %196, %195, %181, %122, %111
  %124 = load %52*, %52** %15, align 8
  %125 = load i8*, i8** %9, align 8
  %126 = load i64, i64* %14, align 8
  %127 = trunc i64 %126 to i32
  %128 = load i8*, i8** %8, align 8
  %129 = load i64, i64* %13, align 8
  %130 = trunc i64 %129 to i32
  %131 = call i32 @phar_mount_entry(%52* %124, i8* %125, i32 %127, i8* %128, i32 %130)
  %132 = icmp ne i32 0, %131
  br i1 %132, label %133, label %153

133:                                              ; preds = %123
  %134 = load %3*, %3** @3, align 8
  %135 = load i8*, i8** %8, align 8
  %136 = load i8*, i8** %9, align 8
  %137 = load i8*, i8** %6, align 8
  %138 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %134, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @6, i32 0, i32 0), i8* %135, i8* %136, i8* %137)
  %139 = load i8*, i8** %8, align 8
  %140 = icmp ne i8* %139, null
  br i1 %140, label %141, label %147

141:                                              ; preds = %133
  %142 = load i8*, i8** %8, align 8
  %143 = load i8*, i8** %7, align 8
  %144 = icmp eq i8* %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = load i8*, i8** %7, align 8
  call void @_efree(i8* %146)
  br label %147

147:                                              ; preds = %145, %141, %133
  %148 = load i8*, i8** %6, align 8
  %149 = icmp ne i8* %148, null
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = load i8*, i8** %6, align 8
  call void @_efree(i8* %151)
  br label %152

152:                                              ; preds = %150, %147
  store i32 1, i32* %16, align 4
  br label %215

153:                                              ; preds = %123
  %154 = load i8*, i8** %7, align 8
  %155 = icmp ne i8* %154, null
  br i1 %155, label %156, label %165

156:                                              ; preds = %153
  %157 = load i8*, i8** %8, align 8
  %158 = icmp ne i8* %157, null
  br i1 %158, label %159, label %165

159:                                              ; preds = %156
  %160 = load i8*, i8** %8, align 8
  %161 = load i8*, i8** %7, align 8
  %162 = icmp eq i8* %160, %161
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = load i8*, i8** %7, align 8
  call void @_efree(i8* %164)
  br label %165

165:                                              ; preds = %163, %159, %156, %153
  %166 = load i8*, i8** %6, align 8
  %167 = icmp ne i8* %166, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = load i8*, i8** %6, align 8
  call void @_efree(i8* %169)
  br label %170

170:                                              ; preds = %168, %165
  store i32 1, i32* %16, align 4
  br label %215

171:                                              ; preds = %72, %68, %61
  %172 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1, i32 1, i32 0), align 8
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %182

174:                                              ; preds = %171
  %175 = load i8*, i8** %5, align 8
  %176 = load i32, i32* %10, align 4
  %177 = sext i32 %176 to i64
  %178 = call i8* @442(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1), i8* %175, i64 %177)
  %179 = bitcast i8* %178 to %52*
  store %52* %179, %52** %15, align 8
  %180 = icmp ne %52* null, %179
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  br label %123

182:                                              ; preds = %174, %171
  %183 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 7), align 8
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %182
  %186 = load i8*, i8** %5, align 8
  %187 = load i32, i32* %10, align 4
  %188 = sext i32 %187 to i64
  %189 = call i8* @442(%8* @cached_phars, i8* %186, i64 %188)
  %190 = bitcast i8* %189 to %52*
  store %52* %190, %52** %15, align 8
  %191 = icmp ne %52* null, %190
  br i1 %191, label %192, label %197

192:                                              ; preds = %185
  %193 = call i32 @phar_copy_on_write(%52** %15)
  %194 = icmp eq i32 0, %193
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  br label %123

196:                                              ; preds = %192
  br label %123

197:                                              ; preds = %185, %182
  %198 = load i8*, i8** %8, align 8
  %199 = load i64, i64* %13, align 8
  %200 = trunc i64 %199 to i32
  %201 = call i32 @phar_split_fname(i8* %198, i32 %200, i8** %6, i32* %11, i8** %7, i32* %12, i32 2, i32 0)
  %202 = icmp eq i32 0, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %197
  %204 = load i8*, i8** %7, align 8
  store i8* %204, i8** %8, align 8
  %205 = load i32, i32* %12, align 4
  %206 = sext i32 %205 to i64
  store i64 %206, i64* %13, align 8
  br label %91

207:                                              ; preds = %197
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %209
  %211 = load %3*, %3** @3, align 8
  %212 = load i8*, i8** %8, align 8
  %213 = load i8*, i8** %9, align 8
  %214 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %211, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @7, i32 0, i32 0), i8* %212, i8* %213)
  store i32 0, i32* %16, align 4
  br label %215

215:                                              ; preds = %210, %170, %152, %121, %85, %60, %35
  %216 = bitcast %52** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %216) #13
  %217 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %217) #13
  %218 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %218) #13
  %219 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %219) #13
  %220 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %220) #13
  %221 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %221) #13
  %222 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  %223 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  %224 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #13
  %225 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  %226 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #13
  %227 = load i32, i32* %16, align 4
  switch i32 %227, label %229 [
    i32 0, label %228
    i32 1, label %228
  ]

228:                                              ; preds = %215, %215
  ret void

229:                                              ; preds = %215
  unreachable
}

; Function Attrs: nounwind readnone willreturn
declare i64 @llvm.expect.i64(i64, i64) #5

declare dso_local %21* @zend_throw_exception_ex(%3*, i64, i8*, ...) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @442(%8* %0, i8* %1, i64 %2) #4 {
  %4 = alloca i8*, align 8
  %5 = alloca %8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %4*, align 8
  %9 = alloca i32, align 4
  store %8* %0, %8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %8*, %8** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = call %4* @zend_hash_str_find(%8* %11, i8* %12, i64 %13)
  store %4* %14, %4** %8, align 8
  %15 = load %4*, %4** %8, align 8
  %16 = icmp ne %4* %15, null
  br i1 %16, label %17, label %37

17:                                               ; preds = %3
  br label %18

18:                                               ; preds = %17
  %19 = load %4*, %4** %8, align 8
  %20 = getelementptr inbounds %4, %4* %19, i32 0, i32 0
  %21 = bitcast %5* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ne i8* %22, null
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = call i64 @llvm.expect.i64(i64 %26, i64 0)
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %18
  unreachable

30:                                               ; preds = %18
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  %33 = load %4*, %4** %8, align 8
  %34 = getelementptr inbounds %4, %4* %33, i32 0, i32 0
  %35 = bitcast %5* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

37:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #13
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

declare dso_local i32 @phar_copy_on_write(%52**) #2

declare dso_local i32 @phar_mount_entry(%52*, i8*, i32, i8*, i32) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_webPhar(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %52*, align 8
  %28 = alloca %93*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca %8*, align 8
  %32 = alloca %4*, align 8
  %33 = alloca %4*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca %82, align 8
  %36 = alloca %63, align 8
  %37 = alloca %4, align 8
  %38 = alloca %4, align 8
  %39 = alloca %4*, align 8
  %40 = alloca %0*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i8, align 1
  %43 = alloca %94, align 8
  %44 = alloca i8*, align 8
  %45 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %46 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  store %4* null, %4** %5, align 8
  %47 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store %4* null, %4** %6, align 8
  %48 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store i8* null, i8** %7, align 8
  %49 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i8* null, i8** %9, align 8
  %51 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  store i8* null, i8** %10, align 8
  %52 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  store i8* null, i8** %11, align 8
  %53 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  store i64 0, i64* %12, align 8
  %54 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #13
  store i64 0, i64* %13, align 8
  %55 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  store i64 0, i64* %14, align 8
  %56 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %56) #13
  store i32 0, i32* %15, align 4
  %57 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  %58 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  %59 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store i8* null, i8** %18, align 8
  %60 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #13
  %61 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #13
  %62 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #13
  %63 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #13
  %64 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #13
  store i64 0, i64* %23, align 8
  %65 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %65) #13
  %66 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #13
  %67 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %67) #13
  %68 = bitcast %52** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #13
  store %52* null, %52** %27, align 8
  %69 = bitcast %93** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #13
  store %93* null, %93** %28, align 8
  %70 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #13
  %71 = load i8*, i8** getelementptr inbounds (%53, %53* @sapi_module, i32 0, i32 0), align 8
  %72 = call i64 @strlen(i8* %71) #14
  store i64 %72, i64* %29, align 8
  %73 = load %23*, %23** %3, align 8
  %74 = getelementptr inbounds %23, %23* %73, i32 0, i32 4
  %75 = getelementptr inbounds %4, %4* %74, i32 0, i32 2
  %76 = bitcast %7* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %77, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i32 0, i32 0), i8** %7, i64* %12, i8** %9, i64* %23, i8** %10, i64* %13, %4** %5, %4** %6)
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %81

80:                                               ; preds = %2
  store i32 1, i32* %30, align 4
  br label %844

81:                                               ; preds = %2
  call void @phar_request_initialize()
  %82 = call i8* @zend_get_executed_filename()
  store i8* %82, i8** %16, align 8
  %83 = load i8*, i8** %16, align 8
  %84 = call i64 @strlen(i8* %83) #14
  store i64 %84, i64* %22, align 8
  %85 = load i64, i64* %12, align 8
  %86 = icmp ugt i64 %85, 2147483647
  %87 = xor i1 %86, true
  %88 = xor i1 %87, true
  %89 = zext i1 %88 to i32
  %90 = sext i32 %89 to i64
  %91 = call i64 @llvm.expect.i64(i64 %90, i64 0)
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %111, label %93

93:                                               ; preds = %81
  %94 = load i64, i64* %13, align 8
  %95 = icmp ugt i64 %94, 2147483647
  %96 = xor i1 %95, true
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %111, label %102

102:                                              ; preds = %93
  %103 = load i64, i64* %23, align 8
  %104 = icmp ugt i64 %103, 2147483647
  %105 = xor i1 %104, true
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %102, %93, %81
  br label %112

112:                                              ; preds = %111
  %113 = load %4*, %4** %4, align 8
  %114 = getelementptr inbounds %4, %4* %113, i32 0, i32 1
  %115 = bitcast %6* %114 to i32*
  store i32 2, i32* %115, align 8
  br label %116

116:                                              ; preds = %112
  br label %117

117:                                              ; preds = %116
  store i32 1, i32* %30, align 4
  br label %844

118:                                              ; preds = %102
  %119 = load i8*, i8** %7, align 8
  %120 = load i64, i64* %12, align 8
  %121 = trunc i64 %120 to i32
  %122 = call i32 @phar_open_executed_filename(i8* %119, i32 %121, i8** %8)
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %118
  %125 = load i8*, i8** %8, align 8
  %126 = icmp ne i8* %125, null
  br i1 %126, label %127, label %132

127:                                              ; preds = %124
  %128 = load %3*, %3** @3, align 8
  %129 = load i8*, i8** %8, align 8
  %130 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %128, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %129)
  %131 = load i8*, i8** %8, align 8
  call void @_efree(i8* %131)
  br label %132

132:                                              ; preds = %127, %124
  store i32 1, i32* %30, align 4
  br label %844

133:                                              ; preds = %118
  %134 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %135 = icmp ne i8* %134, null
  br i1 %135, label %136, label %167

136:                                              ; preds = %133
  %137 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 5), align 8
  %138 = icmp ne i8* %137, null
  br i1 %138, label %139, label %167

139:                                              ; preds = %136
  %140 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %141 = call i32 @strcmp(i8* %140, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i32 0, i32 0)) #14
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %168

143:                                              ; preds = %139
  %144 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %145 = call i32 @strcmp(i8* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0)) #14
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %168

147:                                              ; preds = %143
  %148 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %149 = call i32 @strcmp(i8* %148, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i32 0, i32 0)) #14
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %168

151:                                              ; preds = %147
  %152 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %153 = call i32 @strcmp(i8* %152, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0)) #14
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %168

155:                                              ; preds = %151
  %156 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %157 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @14, i32 0, i32 0)) #14
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %159, label %168

159:                                              ; preds = %155
  %160 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %161 = call i32 @strcmp(i8* %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @15, i32 0, i32 0)) #14
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %159
  %164 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 0), align 8
  %165 = call i32 @strcmp(i8* %164, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @16, i32 0, i32 0)) #14
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %163, %136, %133
  store i32 1, i32* %30, align 4
  br label %844

168:                                              ; preds = %163, %159, %155, %151, %147, %143, %139
  %169 = load i8*, i8** %16, align 8
  %170 = load i64, i64* %22, align 8
  %171 = call i8* @443(i8* %169, i32 47, i64 %170)
  store i8* %171, i8** %21, align 8
  %172 = load i8*, i8** %21, align 8
  %173 = icmp ne i8* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %168
  %175 = load i8*, i8** %16, align 8
  store i8* %175, i8** %21, align 8
  br label %179

176:                                              ; preds = %168
  %177 = load i8*, i8** %21, align 8
  %178 = getelementptr inbounds i8, i8* %177, i32 1
  store i8* %178, i8** %21, align 8
  br label %179

179:                                              ; preds = %176, %174
  %180 = load i64, i64* %29, align 8
  %181 = icmp eq i64 %180, 8
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = load i8*, i8** getelementptr inbounds (%53, %53* @sapi_module, i32 0, i32 0), align 8
  %184 = call i32 @strncmp(i8* %183, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @17, i32 0, i32 0), i64 8) #14
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %200

186:                                              ; preds = %182, %179
  %187 = load i64, i64* %29, align 8
  %188 = icmp eq i64 %187, 8
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = load i8*, i8** getelementptr inbounds (%53, %53* @sapi_module, i32 0, i32 0), align 8
  %191 = call i32 @strncmp(i8* %190, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @18, i32 0, i32 0), i64 8) #14
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %200

193:                                              ; preds = %189, %186
  %194 = load i64, i64* %29, align 8
  %195 = icmp eq i64 %194, 3
  br i1 %195, label %196, label %363

196:                                              ; preds = %193
  %197 = load i8*, i8** getelementptr inbounds (%53, %53* @sapi_module, i32 0, i32 0), align 8
  %198 = call i32 @strncmp(i8* %197, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @19, i32 0, i32 0), i64 3) #14
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %363, label %200

200:                                              ; preds = %196, %189, %182
  %201 = call zeroext i8 @444(%4* getelementptr inbounds (%64, %64* @core_globals, i32 0, i32 41, i64 3))
  %202 = zext i8 %201 to i32
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %318

204:                                              ; preds = %200
  %205 = bitcast %8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %205) #13
  %206 = load %8*, %8** bitcast (%5* getelementptr inbounds (%64, %64* @core_globals, i32 0, i32 41, i64 3, i32 0) to %8**), align 8
  store %8* %206, %8** %31, align 8
  %207 = bitcast %4** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %207) #13
  %208 = bitcast %4** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %208) #13
  %209 = load %8*, %8** %31, align 8
  %210 = call %4* @zend_hash_str_find(%8* %209, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @20, i32 0, i32 0), i64 11)
  store %4* %210, %4** %32, align 8
  %211 = icmp eq %4* null, %210
  br i1 %211, label %227, label %212

212:                                              ; preds = %204
  %213 = load %4*, %4** %32, align 8
  %214 = call zeroext i8 @444(%4* %213)
  %215 = zext i8 %214 to i32
  %216 = icmp ne i32 6, %215
  br i1 %216, label %227, label %217

217:                                              ; preds = %212
  %218 = load %4*, %4** %32, align 8
  %219 = getelementptr inbounds %4, %4* %218, i32 0, i32 0
  %220 = bitcast %5* %219 to %0**
  %221 = load %0*, %0** %220, align 8
  %222 = getelementptr inbounds %0, %0* %221, i32 0, i32 3
  %223 = getelementptr inbounds [1 x i8], [1 x i8]* %222, i32 0, i32 0
  %224 = load i8*, i8** %21, align 8
  %225 = call i8* @strstr(i8* %223, i8* %224) #14
  %226 = icmp ne i8* %225, null
  br i1 %226, label %228, label %227

227:                                              ; preds = %217, %212, %204
  store i32 1, i32* %30, align 4
  br label %312

228:                                              ; preds = %217
  %229 = load %8*, %8** %31, align 8
  %230 = call %4* @zend_hash_str_find(%8* %229, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @21, i32 0, i32 0), i64 9)
  store %4* %230, %4** %33, align 8
  %231 = icmp ne %4* null, %230
  br i1 %231, label %232, label %290

232:                                              ; preds = %228
  %233 = load %4*, %4** %33, align 8
  %234 = call zeroext i8 @444(%4* %233)
  %235 = zext i8 %234 to i32
  %236 = icmp eq i32 6, %235
  br i1 %236, label %237, label %290

237:                                              ; preds = %232
  %238 = load %4*, %4** %33, align 8
  %239 = getelementptr inbounds %4, %4* %238, i32 0, i32 0
  %240 = bitcast %5* %239 to %0**
  %241 = load %0*, %0** %240, align 8
  %242 = getelementptr inbounds %0, %0* %241, i32 0, i32 2
  %243 = load i64, i64* %242, align 8
  %244 = trunc i64 %243 to i32
  store i32 %244, i32* %24, align 4
  %245 = load %4*, %4** %33, align 8
  %246 = getelementptr inbounds %4, %4* %245, i32 0, i32 0
  %247 = bitcast %5* %246 to %0**
  %248 = load %0*, %0** %247, align 8
  %249 = getelementptr inbounds %0, %0* %248, i32 0, i32 3
  %250 = getelementptr inbounds [1 x i8], [1 x i8]* %249, i32 0, i32 0
  %251 = load i32, i32* %24, align 4
  %252 = sext i32 %251 to i64
  %253 = call noalias i8* @_estrndup(i8* %250, i64 %252)
  store i8* %253, i8** %19, align 8
  %254 = load %4*, %4** %32, align 8
  %255 = getelementptr inbounds %4, %4* %254, i32 0, i32 0
  %256 = bitcast %5* %255 to %0**
  %257 = load %0*, %0** %256, align 8
  %258 = getelementptr inbounds %0, %0* %257, i32 0, i32 2
  %259 = load i64, i64* %258, align 8
  %260 = load i32, i32* %24, align 4
  %261 = sext i32 %260 to i64
  %262 = add i64 %259, %261
  %263 = add i64 %262, 1
  %264 = call noalias i8* @_emalloc(i64 %263) #15
  store i8* %264, i8** %17, align 8
  %265 = load i8*, i8** %17, align 8
  %266 = load %4*, %4** %32, align 8
  %267 = getelementptr inbounds %4, %4* %266, i32 0, i32 0
  %268 = bitcast %5* %267 to %0**
  %269 = load %0*, %0** %268, align 8
  %270 = getelementptr inbounds %0, %0* %269, i32 0, i32 3
  %271 = getelementptr inbounds [1 x i8], [1 x i8]* %270, i32 0, i32 0
  %272 = load %4*, %4** %32, align 8
  %273 = getelementptr inbounds %4, %4* %272, i32 0, i32 0
  %274 = bitcast %5* %273 to %0**
  %275 = load %0*, %0** %274, align 8
  %276 = getelementptr inbounds %0, %0* %275, i32 0, i32 2
  %277 = load i64, i64* %276, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %265, i8* align 8 %271, i64 %277, i1 false)
  %278 = load i8*, i8** %17, align 8
  %279 = load %4*, %4** %32, align 8
  %280 = getelementptr inbounds %4, %4* %279, i32 0, i32 0
  %281 = bitcast %5* %280 to %0**
  %282 = load %0*, %0** %281, align 8
  %283 = getelementptr inbounds %0, %0* %282, i32 0, i32 2
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds i8, i8* %278, i64 %284
  %286 = load i8*, i8** %19, align 8
  %287 = load i32, i32* %24, align 4
  %288 = add nsw i32 %287, 1
  %289 = sext i32 %288 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %285, i8* align 1 %286, i64 %289, i1 false)
  store i64 1, i64* %14, align 8
  br label %298

290:                                              ; preds = %232, %228
  store i32 0, i32* %24, align 4
  %291 = call noalias i8* @_estrndup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0), i64 0)
  store i8* %291, i8** %19, align 8
  %292 = load %4*, %4** %32, align 8
  %293 = getelementptr inbounds %4, %4* %292, i32 0, i32 0
  %294 = bitcast %5* %293 to %0**
  %295 = load %0*, %0** %294, align 8
  %296 = getelementptr inbounds %0, %0* %295, i32 0, i32 3
  %297 = getelementptr inbounds [1 x i8], [1 x i8]* %296, i32 0, i32 0
  store i8* %297, i8** %17, align 8
  br label %298

298:                                              ; preds = %290, %237
  %299 = load %4*, %4** %32, align 8
  %300 = getelementptr inbounds %4, %4* %299, i32 0, i32 0
  %301 = bitcast %5* %300 to %0**
  %302 = load %0*, %0** %301, align 8
  %303 = getelementptr inbounds %0, %0* %302, i32 0, i32 3
  %304 = getelementptr inbounds [1 x i8], [1 x i8]* %303, i32 0, i32 0
  %305 = load %4*, %4** %32, align 8
  %306 = getelementptr inbounds %4, %4* %305, i32 0, i32 0
  %307 = bitcast %5* %306 to %0**
  %308 = load %0*, %0** %307, align 8
  %309 = getelementptr inbounds %0, %0* %308, i32 0, i32 2
  %310 = load i64, i64* %309, align 8
  %311 = call noalias i8* @_estrndup(i8* %304, i64 %310)
  store i8* %311, i8** %20, align 8
  store i32 0, i32* %30, align 4
  br label %312

312:                                              ; preds = %298, %227
  %313 = bitcast %4** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #13
  %314 = bitcast %4** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %314) #13
  %315 = bitcast %8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %315) #13
  %316 = load i32, i32* %30, align 4
  switch i32 %316, label %844 [
    i32 0, label %317
  ]

317:                                              ; preds = %312
  br label %362

318:                                              ; preds = %200
  %319 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %319) #13
  %320 = call i8* @sapi_getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @20, i32 0, i32 0), i64 11)
  store i8* %320, i8** %34, align 8
  %321 = load i8*, i8** %34, align 8
  %322 = load i8*, i8** %21, align 8
  %323 = call i8* @strstr(i8* %321, i8* %322) #14
  store i8* %323, i8** %20, align 8
  %324 = icmp ne i8* %323, null
  br i1 %324, label %327, label %325

325:                                              ; preds = %318
  %326 = load i8*, i8** %34, align 8
  call void @_efree(i8* %326)
  store i32 1, i32* %30, align 4
  br label %358

327:                                              ; preds = %318
  %328 = call i8* @sapi_getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @21, i32 0, i32 0), i64 9)
  store i8* %328, i8** %17, align 8
  %329 = load i8*, i8** %17, align 8
  %330 = icmp ne i8* %329, null
  br i1 %330, label %331, label %339

331:                                              ; preds = %327
  %332 = load i8*, i8** %17, align 8
  store i8* %332, i8** %19, align 8
  %333 = load i8*, i8** %19, align 8
  %334 = call i64 @strlen(i8* %333) #14
  %335 = trunc i64 %334 to i32
  store i32 %335, i32* %24, align 4
  %336 = load i8*, i8** %34, align 8
  %337 = load i8*, i8** %17, align 8
  %338 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %17, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %336, i8* %337)
  store i64 1, i64* %14, align 8
  br label %342

339:                                              ; preds = %327
  %340 = load i8*, i8** %34, align 8
  store i8* %340, i8** %17, align 8
  store i64 1, i64* %14, align 8
  %341 = call noalias i8* @_estrndup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0), i64 0)
  store i8* %341, i8** %19, align 8
  store i32 0, i32* %24, align 4
  br label %342

342:                                              ; preds = %339, %331
  %343 = load i8*, i8** %34, align 8
  %344 = load i8*, i8** %20, align 8
  %345 = load i8*, i8** %34, align 8
  %346 = ptrtoint i8* %344 to i64
  %347 = ptrtoint i8* %345 to i64
  %348 = sub i64 %346, %347
  %349 = load i64, i64* %22, align 8
  %350 = load i8*, i8** %21, align 8
  %351 = load i8*, i8** %16, align 8
  %352 = ptrtoint i8* %350 to i64
  %353 = ptrtoint i8* %351 to i64
  %354 = sub i64 %352, %353
  %355 = sub i64 %349, %354
  %356 = add i64 %348, %355
  %357 = call noalias i8* @_estrndup(i8* %343, i64 %356)
  store i8* %357, i8** %20, align 8
  store i32 0, i32* %30, align 4
  br label %358

358:                                              ; preds = %342, %325
  %359 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %359) #13
  %360 = load i32, i32* %30, align 4
  switch i32 %360, label %844 [
    i32 0, label %361
  ]

361:                                              ; preds = %358
  br label %362

362:                                              ; preds = %361, %317
  store i32 0, i32* %26, align 4
  br label %418

363:                                              ; preds = %196, %193
  %364 = load i8*, i8** getelementptr inbounds (%60, %60* @sapi_globals, i32 0, i32 1, i32 5), align 8
  store i8* %364, i8** %17, align 8
  %365 = load i8*, i8** %17, align 8
  %366 = load i8*, i8** %21, align 8
  %367 = call i8* @strstr(i8* %365, i8* %366) #14
  store i8* %367, i8** %20, align 8
  %368 = icmp ne i8* %367, null
  br i1 %368, label %370, label %369

369:                                              ; preds = %363
  store i32 1, i32* %30, align 4
  br label %844

370:                                              ; preds = %363
  %371 = load i8*, i8** %17, align 8
  %372 = call i64 @strlen(i8* %371) #14
  %373 = trunc i64 %372 to i32
  store i32 %373, i32* %24, align 4
  %374 = load i8*, i8** %20, align 8
  %375 = load i8*, i8** %17, align 8
  %376 = ptrtoint i8* %374 to i64
  %377 = ptrtoint i8* %375 to i64
  %378 = sub i64 %376, %377
  %379 = load i64, i64* %22, align 8
  %380 = load i8*, i8** %21, align 8
  %381 = load i8*, i8** %16, align 8
  %382 = ptrtoint i8* %380 to i64
  %383 = ptrtoint i8* %381 to i64
  %384 = sub i64 %382, %383
  %385 = sub i64 %379, %384
  %386 = add i64 %378, %385
  %387 = load i32, i32* %24, align 4
  %388 = sext i32 %387 to i64
  %389 = sub i64 %388, %386
  %390 = trunc i64 %389 to i32
  store i32 %390, i32* %24, align 4
  %391 = load i8*, i8** %20, align 8
  %392 = load i64, i64* %22, align 8
  %393 = load i8*, i8** %21, align 8
  %394 = load i8*, i8** %16, align 8
  %395 = ptrtoint i8* %393 to i64
  %396 = ptrtoint i8* %394 to i64
  %397 = sub i64 %395, %396
  %398 = sub i64 %392, %397
  %399 = getelementptr inbounds i8, i8* %391, i64 %398
  %400 = load i32, i32* %24, align 4
  %401 = sext i32 %400 to i64
  %402 = call noalias i8* @_estrndup(i8* %399, i64 %401)
  store i8* %402, i8** %19, align 8
  %403 = load i8*, i8** %17, align 8
  %404 = load i8*, i8** %20, align 8
  %405 = load i8*, i8** %17, align 8
  %406 = ptrtoint i8* %404 to i64
  %407 = ptrtoint i8* %405 to i64
  %408 = sub i64 %406, %407
  %409 = load i64, i64* %22, align 8
  %410 = load i8*, i8** %21, align 8
  %411 = load i8*, i8** %16, align 8
  %412 = ptrtoint i8* %410 to i64
  %413 = ptrtoint i8* %411 to i64
  %414 = sub i64 %412, %413
  %415 = sub i64 %409, %414
  %416 = add i64 %408, %415
  %417 = call noalias i8* @_estrndup(i8* %403, i64 %416)
  store i8* %417, i8** %20, align 8
  store i32 1, i32* %26, align 4
  br label %418

418:                                              ; preds = %370, %362
  %419 = load %4*, %4** %6, align 8
  %420 = icmp ne %4* %419, null
  br i1 %420, label %421, label %570

421:                                              ; preds = %418
  %422 = bitcast %82* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* %422) #13
  %423 = bitcast %63* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %423) #13
  %424 = bitcast %4* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %424) #13
  %425 = bitcast %4* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %425) #13
  br label %426

426:                                              ; preds = %421
  br label %427

427:                                              ; preds = %426
  %428 = bitcast %4** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %428) #13
  store %4* %37, %4** %39, align 8
  %429 = bitcast %0** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %429) #13
  %430 = load i8*, i8** %19, align 8
  %431 = load i32, i32* %24, align 4
  %432 = sext i32 %431 to i64
  %433 = call %0* @441(i8* %430, i64 %432, i32 0)
  store %0* %433, %0** %40, align 8
  %434 = load %0*, %0** %40, align 8
  %435 = load %4*, %4** %39, align 8
  %436 = getelementptr inbounds %4, %4* %435, i32 0, i32 0
  %437 = bitcast %5* %436 to %0**
  store %0* %434, %0** %437, align 8
  %438 = load %4*, %4** %39, align 8
  %439 = getelementptr inbounds %4, %4* %438, i32 0, i32 1
  %440 = bitcast %6* %439 to i32*
  store i32 5126, i32* %440, align 8
  %441 = bitcast %0** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %441) #13
  %442 = bitcast %4** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %442) #13
  br label %443

443:                                              ; preds = %427
  br label %444

444:                                              ; preds = %443
  br label %445

445:                                              ; preds = %444
  br label %446

446:                                              ; preds = %445
  %447 = load %4*, %4** %6, align 8
  %448 = call i32 @zend_fcall_info_init(%4* %447, i32 0, %82* %35, %63* %36, %0** null, i8** null)
  %449 = icmp eq i32 -1, %448
  br i1 %449, label %450, label %459

450:                                              ; preds = %446
  %451 = load %3*, %3** @3, align 8
  %452 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %451, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @24, i32 0, i32 0))
  %453 = load i64, i64* %14, align 8
  %454 = icmp ne i64 %453, 0
  br i1 %454, label %455, label %457

455:                                              ; preds = %450
  %456 = load i8*, i8** %17, align 8
  call void @_efree(i8* %456)
  br label %457

457:                                              ; preds = %455, %450
  %458 = load i8*, i8** %20, align 8
  call void @_efree(i8* %458)
  store i32 1, i32* %30, align 4
  br label %563

459:                                              ; preds = %446
  %460 = getelementptr inbounds %82, %82* %35, i32 0, i32 6
  store i32 1, i32* %460, align 4
  %461 = getelementptr inbounds %82, %82* %35, i32 0, i32 3
  store %4* %37, %4** %461, align 8
  %462 = call i32 @445(%4* %37)
  %463 = getelementptr inbounds %82, %82* %35, i32 0, i32 2
  store %4* %38, %4** %463, align 8
  %464 = call i32 @zend_call_function(%82* %35, %63* %36)
  %465 = icmp eq i32 -1, %464
  br i1 %465, label %466, label %479

466:                                              ; preds = %459
  %467 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %468 = icmp ne %21* %467, null
  br i1 %468, label %472, label %469

469:                                              ; preds = %466
  %470 = load %3*, %3** @3, align 8
  %471 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %470, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @25, i32 0, i32 0))
  br label %472

472:                                              ; preds = %469, %466
  %473 = load i64, i64* %14, align 8
  %474 = icmp ne i64 %473, 0
  br i1 %474, label %475, label %477

475:                                              ; preds = %472
  %476 = load i8*, i8** %17, align 8
  call void @_efree(i8* %476)
  br label %477

477:                                              ; preds = %475, %472
  %478 = load i8*, i8** %20, align 8
  call void @_efree(i8* %478)
  store i32 1, i32* %30, align 4
  br label %563

479:                                              ; preds = %459
  %480 = getelementptr inbounds %82, %82* %35, i32 0, i32 2
  %481 = load %4*, %4** %480, align 8
  %482 = call zeroext i8 @444(%4* %481)
  %483 = zext i8 %482 to i32
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %489, label %485

485:                                              ; preds = %479
  %486 = call zeroext i8 @444(%4* %38)
  %487 = zext i8 %486 to i32
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %498

489:                                              ; preds = %485, %479
  %490 = load i64, i64* %14, align 8
  %491 = icmp ne i64 %490, 0
  br i1 %491, label %492, label %494

492:                                              ; preds = %489
  %493 = load i8*, i8** %17, align 8
  call void @_efree(i8* %493)
  br label %494

494:                                              ; preds = %492, %489
  %495 = load %3*, %3** @3, align 8
  %496 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %495, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @26, i32 0, i32 0))
  %497 = load i8*, i8** %20, align 8
  call void @_efree(i8* %497)
  store i32 1, i32* %30, align 4
  br label %563

498:                                              ; preds = %485
  %499 = call zeroext i8 @444(%4* %38)
  %500 = zext i8 %499 to i32
  switch i32 %500, label %553 [
    i32 6, label %501
    i32 3, label %544
    i32 2, label %544
  ]

501:                                              ; preds = %498
  %502 = load i8*, i8** %19, align 8
  call void @_efree(i8* %502)
  %503 = getelementptr inbounds %82, %82* %35, i32 0, i32 2
  %504 = load %4*, %4** %503, align 8
  %505 = getelementptr inbounds %4, %4* %504, i32 0, i32 0
  %506 = bitcast %5* %505 to %0**
  %507 = load %0*, %0** %506, align 8
  %508 = getelementptr inbounds %0, %0* %507, i32 0, i32 2
  %509 = load i64, i64* %508, align 8
  %510 = icmp ugt i64 %509, 2147483647
  %511 = xor i1 %510, true
  %512 = xor i1 %511, true
  %513 = zext i1 %512 to i32
  %514 = sext i32 %513 to i64
  %515 = call i64 @llvm.expect.i64(i64 %514, i64 0)
  %516 = icmp ne i64 %515, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %501
  %518 = load %3*, %3** @3, align 8
  %519 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %518, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @27, i32 0, i32 0))
  store i32 1, i32* %30, align 4
  br label %563

520:                                              ; preds = %501
  %521 = getelementptr inbounds %82, %82* %35, i32 0, i32 2
  %522 = load %4*, %4** %521, align 8
  %523 = getelementptr inbounds %4, %4* %522, i32 0, i32 0
  %524 = bitcast %5* %523 to %0**
  %525 = load %0*, %0** %524, align 8
  %526 = getelementptr inbounds %0, %0* %525, i32 0, i32 3
  %527 = getelementptr inbounds [1 x i8], [1 x i8]* %526, i32 0, i32 0
  %528 = getelementptr inbounds %82, %82* %35, i32 0, i32 2
  %529 = load %4*, %4** %528, align 8
  %530 = getelementptr inbounds %4, %4* %529, i32 0, i32 0
  %531 = bitcast %5* %530 to %0**
  %532 = load %0*, %0** %531, align 8
  %533 = getelementptr inbounds %0, %0* %532, i32 0, i32 2
  %534 = load i64, i64* %533, align 8
  %535 = call noalias i8* @_estrndup(i8* %527, i64 %534)
  store i8* %535, i8** %19, align 8
  %536 = getelementptr inbounds %82, %82* %35, i32 0, i32 2
  %537 = load %4*, %4** %536, align 8
  %538 = getelementptr inbounds %4, %4* %537, i32 0, i32 0
  %539 = bitcast %5* %538 to %0**
  %540 = load %0*, %0** %539, align 8
  %541 = getelementptr inbounds %0, %0* %540, i32 0, i32 2
  %542 = load i64, i64* %541, align 8
  %543 = trunc i64 %542 to i32
  store i32 %543, i32* %24, align 4
  br label %562

544:                                              ; preds = %498, %498
  %545 = load i8*, i8** %19, align 8
  %546 = load i32, i32* %24, align 4
  call void @446(i8* %545, i32 %546)
  %547 = load i64, i64* %14, align 8
  %548 = icmp ne i64 %547, 0
  br i1 %548, label %549, label %551

549:                                              ; preds = %544
  %550 = load i8*, i8** %17, align 8
  call void @_efree(i8* %550)
  br label %551

551:                                              ; preds = %549, %544
  %552 = load i8*, i8** %20, align 8
  call void @_efree(i8* %552)
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 737)
  store i32 1, i32* %30, align 4
  br label %563

553:                                              ; preds = %498
  %554 = load i64, i64* %14, align 8
  %555 = icmp ne i64 %554, 0
  br i1 %555, label %556, label %558

556:                                              ; preds = %553
  %557 = load i8*, i8** %17, align 8
  call void @_efree(i8* %557)
  br label %558

558:                                              ; preds = %556, %553
  %559 = load i8*, i8** %20, align 8
  call void @_efree(i8* %559)
  %560 = load %3*, %3** @3, align 8
  %561 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %560, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @26, i32 0, i32 0))
  store i32 1, i32* %30, align 4
  br label %563

562:                                              ; preds = %520
  store i32 0, i32* %30, align 4
  br label %563

563:                                              ; preds = %562, %558, %551, %517, %494, %477, %457
  %564 = bitcast %4* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %564) #13
  %565 = bitcast %4* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %565) #13
  %566 = bitcast %63* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %566) #13
  %567 = bitcast %82* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 56, i8* %567) #13
  %568 = load i32, i32* %30, align 4
  switch i32 %568, label %844 [
    i32 0, label %569
  ]

569:                                              ; preds = %563
  br label %570

570:                                              ; preds = %569, %418
  %571 = load i32, i32* %24, align 4
  %572 = icmp ne i32 %571, 0
  br i1 %572, label %573, label %577

573:                                              ; preds = %570
  %574 = load i8*, i8** %16, align 8
  %575 = load i64, i64* %22, align 8
  %576 = trunc i64 %575 to i32
  call void @447(i8* %574, i32 %576, i8** %19, i32* %24, i8** %11, i32* %15)
  br label %577

577:                                              ; preds = %573, %570
  %578 = load i32, i32* %24, align 4
  %579 = icmp ne i32 %578, 0
  br i1 %579, label %580, label %589

580:                                              ; preds = %577
  %581 = load i32, i32* %24, align 4
  %582 = icmp eq i32 %581, 1
  br i1 %582, label %583, label %701

583:                                              ; preds = %580
  %584 = load i8*, i8** %19, align 8
  %585 = getelementptr inbounds i8, i8* %584, i64 0
  %586 = load i8, i8* %585, align 1
  %587 = sext i8 %586 to i32
  %588 = icmp eq i32 %587, 47
  br i1 %588, label %589, label %701

589:                                              ; preds = %583, %577
  %590 = load i8*, i8** %19, align 8
  call void @_efree(i8* %590)
  %591 = load i64, i64* %23, align 8
  %592 = icmp ne i64 %591, 0
  br i1 %592, label %593, label %608

593:                                              ; preds = %589
  %594 = load i8*, i8** %9, align 8
  store i8* %594, i8** %19, align 8
  %595 = load i64, i64* %23, align 8
  %596 = trunc i64 %595 to i32
  store i32 %596, i32* %24, align 4
  %597 = load i8*, i8** %19, align 8
  %598 = getelementptr inbounds i8, i8* %597, i64 0
  %599 = load i8, i8* %598, align 1
  %600 = sext i8 %599 to i32
  %601 = icmp ne i32 %600, 47
  br i1 %601, label %602, label %607

602:                                              ; preds = %593
  %603 = load i8*, i8** %9, align 8
  %604 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %19, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @29, i32 0, i32 0), i8* %603)
  %605 = load i32, i32* %24, align 4
  %606 = add nsw i32 %605, 1
  store i32 %606, i32* %24, align 4
  br label %607

607:                                              ; preds = %602, %593
  br label %610

608:                                              ; preds = %589
  %609 = call noalias i8* @_estrndup(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), i64 11)
  store i8* %609, i8** %19, align 8
  store i32 10, i32* %24, align 4
  br label %610

610:                                              ; preds = %608, %607
  %611 = load i8*, i8** %16, align 8
  %612 = load i64, i64* %22, align 8
  %613 = trunc i64 %612 to i32
  %614 = call i32 @phar_get_archive(%52** %27, i8* %611, i32 %613, i8* null, i32 0, i8** null)
  %615 = icmp eq i32 -1, %614
  br i1 %615, label %622, label %616

616:                                              ; preds = %610
  %617 = load %52*, %52** %27, align 8
  %618 = load i8*, i8** %19, align 8
  %619 = load i32, i32* %24, align 4
  %620 = call %93* @phar_get_entry_info(%52* %617, i8* %618, i32 %619, i8** null, i32 0)
  store %93* %620, %93** %28, align 8
  %621 = icmp eq %93* %620, null
  br i1 %621, label %622, label %638

622:                                              ; preds = %616, %610
  %623 = load %52*, %52** %27, align 8
  %624 = load i8*, i8** %16, align 8
  %625 = load i64, i64* %22, align 8
  %626 = trunc i64 %625 to i32
  %627 = load i8*, i8** %10, align 8
  %628 = load i64, i64* %13, align 8
  %629 = trunc i64 %628 to i32
  %630 = load i8*, i8** %19, align 8
  %631 = load i32, i32* %24, align 4
  %632 = sext i32 %631 to i64
  call void @448(%52* %623, i8* %624, i32 %626, i8* %627, i32 %629, i8* %630, i64 %632)
  %633 = load i64, i64* %14, align 8
  %634 = icmp ne i64 %633, 0
  br i1 %634, label %635, label %637

635:                                              ; preds = %622
  %636 = load i8*, i8** %17, align 8
  call void @_efree(i8* %636)
  br label %637

637:                                              ; preds = %635, %622
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 778)
  br label %700

638:                                              ; preds = %616
  %639 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %639) #13
  store i8* null, i8** %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %42) #13
  store i8 0, i8* %42, align 1
  %640 = bitcast %94* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %640) #13
  %641 = bitcast %94* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %641, i8 0, i64 24, i1 false)
  %642 = getelementptr inbounds %94, %94* %43, i32 0, i32 2
  store i64 301, i64* %642, align 8
  %643 = getelementptr inbounds %94, %94* %43, i32 0, i32 1
  store i64 30, i64* %643, align 8
  %644 = getelementptr inbounds %94, %94* %43, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @31, i32 0, i32 0), i8** %644, align 8
  %645 = bitcast %94* %43 to i8*
  %646 = call i32 @sapi_header_op(i32 0, i8* %645)
  %647 = load i32, i32* %26, align 4
  %648 = icmp ne i32 %647, 0
  br i1 %648, label %649, label %658

649:                                              ; preds = %638
  %650 = load i8*, i8** %17, align 8
  %651 = load i8*, i8** %21, align 8
  %652 = call i8* @strstr(i8* %650, i8* %651) #14
  %653 = load i64, i64* %22, align 8
  %654 = getelementptr inbounds i8, i8* %652, i64 %653
  store i8* %654, i8** %41, align 8
  %655 = load i8*, i8** %41, align 8
  %656 = load i8, i8* %655, align 1
  store i8 %656, i8* %42, align 1
  %657 = load i8*, i8** %41, align 8
  store i8 0, i8* %657, align 1
  br label %658

658:                                              ; preds = %649, %638
  %659 = getelementptr inbounds %94, %94* %43, i32 0, i32 2
  store i64 0, i64* %659, align 8
  %660 = load i8*, i8** %17, align 8
  %661 = load i8*, i8** %17, align 8
  %662 = call i64 @strlen(i8* %661) #14
  %663 = sub i64 %662, 1
  %664 = getelementptr inbounds i8, i8* %660, i64 %663
  %665 = load i8, i8* %664, align 1
  %666 = sext i8 %665 to i32
  %667 = icmp eq i32 %666, 47
  br i1 %667, label %668, label %675

668:                                              ; preds = %658
  %669 = getelementptr inbounds %94, %94* %43, i32 0, i32 0
  %670 = load i8*, i8** %17, align 8
  %671 = load i8*, i8** %19, align 8
  %672 = getelementptr inbounds i8, i8* %671, i64 1
  %673 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %669, i64 4096, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @32, i32 0, i32 0), i8* %670, i8* %672)
  %674 = getelementptr inbounds %94, %94* %43, i32 0, i32 1
  store i64 %673, i64* %674, align 8
  br label %681

675:                                              ; preds = %658
  %676 = getelementptr inbounds %94, %94* %43, i32 0, i32 0
  %677 = load i8*, i8** %17, align 8
  %678 = load i8*, i8** %19, align 8
  %679 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %676, i64 4096, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @32, i32 0, i32 0), i8* %677, i8* %678)
  %680 = getelementptr inbounds %94, %94* %43, i32 0, i32 1
  store i64 %679, i64* %680, align 8
  br label %681

681:                                              ; preds = %675, %668
  %682 = load i32, i32* %26, align 4
  %683 = icmp ne i32 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %681
  %685 = load i8, i8* %42, align 1
  %686 = load i8*, i8** %41, align 8
  store i8 %685, i8* %686, align 1
  br label %687

687:                                              ; preds = %684, %681
  %688 = load i64, i64* %14, align 8
  %689 = icmp ne i64 %688, 0
  br i1 %689, label %690, label %692

690:                                              ; preds = %687
  %691 = load i8*, i8** %17, align 8
  call void @_efree(i8* %691)
  br label %692

692:                                              ; preds = %690, %687
  %693 = bitcast %94* %43 to i8*
  %694 = call i32 @sapi_header_op(i32 0, i8* %693)
  %695 = call i32 @sapi_send_headers()
  %696 = getelementptr inbounds %94, %94* %43, i32 0, i32 0
  %697 = load i8*, i8** %696, align 8
  call void @_efree(i8* %697)
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 812)
  %698 = bitcast %94* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %698) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %42) #13
  %699 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %699) #13
  br label %700

700:                                              ; preds = %692, %637
  br label %701

701:                                              ; preds = %700, %583, %580
  %702 = load i8*, i8** %16, align 8
  %703 = load i64, i64* %22, align 8
  %704 = trunc i64 %703 to i32
  %705 = call i32 @phar_get_archive(%52** %27, i8* %702, i32 %704, i8* null, i32 0, i8** null)
  %706 = icmp eq i32 -1, %705
  br i1 %706, label %713, label %707

707:                                              ; preds = %701
  %708 = load %52*, %52** %27, align 8
  %709 = load i8*, i8** %19, align 8
  %710 = load i32, i32* %24, align 4
  %711 = call %93* @phar_get_entry_info(%52* %708, i8* %709, i32 %710, i8** null, i32 0)
  store %93* %711, %93** %28, align 8
  %712 = icmp eq %93* %711, null
  br i1 %712, label %713, label %724

713:                                              ; preds = %707, %701
  %714 = load %52*, %52** %27, align 8
  %715 = load i8*, i8** %16, align 8
  %716 = load i64, i64* %22, align 8
  %717 = trunc i64 %716 to i32
  %718 = load i8*, i8** %10, align 8
  %719 = load i64, i64* %13, align 8
  %720 = trunc i64 %719 to i32
  %721 = load i8*, i8** %19, align 8
  %722 = load i32, i32* %24, align 4
  %723 = sext i32 %722 to i64
  call void @448(%52* %714, i8* %715, i32 %717, i8* %718, i32 %720, i8* %721, i64 %723)
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 822)
  br label %724

724:                                              ; preds = %713, %707
  %725 = load %4*, %4** %5, align 8
  %726 = icmp ne %4* %725, null
  br i1 %726, label %727, label %826

727:                                              ; preds = %724
  %728 = load %4*, %4** %5, align 8
  %729 = getelementptr inbounds %4, %4* %728, i32 0, i32 0
  %730 = bitcast %5* %729 to %8**
  %731 = load %8*, %8** %730, align 8
  %732 = getelementptr inbounds %8, %8* %731, i32 0, i32 5
  %733 = load i32, i32* %732, align 4
  %734 = icmp ne i32 %733, 0
  br i1 %734, label %735, label %826

735:                                              ; preds = %727
  %736 = bitcast i8** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %736) #13
  %737 = load i8*, i8** %19, align 8
  %738 = load i32, i32* %24, align 4
  %739 = sext i32 %738 to i64
  %740 = call i8* @443(i8* %737, i32 46, i64 %739)
  store i8* %740, i8** %44, align 8
  %741 = bitcast %4** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %741) #13
  %742 = load i8*, i8** %44, align 8
  %743 = icmp ne i8* %742, null
  br i1 %743, label %744, label %820

744:                                              ; preds = %735
  %745 = load i8*, i8** %44, align 8
  %746 = getelementptr inbounds i8, i8* %745, i32 1
  store i8* %746, i8** %44, align 8
  %747 = load %4*, %4** %5, align 8
  %748 = getelementptr inbounds %4, %4* %747, i32 0, i32 0
  %749 = bitcast %5* %748 to %8**
  %750 = load %8*, %8** %749, align 8
  %751 = load i8*, i8** %44, align 8
  %752 = load i8*, i8** %44, align 8
  %753 = call i64 @strlen(i8* %752) #14
  %754 = call %4* @zend_hash_str_find(%8* %750, i8* %751, i64 %753)
  store %4* %754, %4** %45, align 8
  %755 = icmp ne %4* null, %754
  br i1 %755, label %756, label %819

756:                                              ; preds = %744
  %757 = load %4*, %4** %45, align 8
  %758 = call zeroext i8 @444(%4* %757)
  %759 = zext i8 %758 to i32
  switch i32 %759, label %802 [
    i32 4, label %760
    i32 6, label %795
  ]

760:                                              ; preds = %756
  %761 = load %4*, %4** %45, align 8
  %762 = getelementptr inbounds %4, %4* %761, i32 0, i32 0
  %763 = bitcast %5* %762 to i64*
  %764 = load i64, i64* %763, align 8
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %772, label %766

766:                                              ; preds = %760
  %767 = load %4*, %4** %45, align 8
  %768 = getelementptr inbounds %4, %4* %767, i32 0, i32 0
  %769 = bitcast %5* %768 to i64*
  %770 = load i64, i64* %769, align 8
  %771 = icmp eq i64 %770, 1
  br i1 %771, label %772, label %778

772:                                              ; preds = %766, %760
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0), i8** %18, align 8
  %773 = load %4*, %4** %45, align 8
  %774 = getelementptr inbounds %4, %4* %773, i32 0, i32 0
  %775 = bitcast %5* %774 to i64*
  %776 = load i64, i64* %775, align 8
  %777 = trunc i64 %776 to i32
  store i32 %777, i32* %25, align 4
  br label %794

778:                                              ; preds = %766
  %779 = load %3*, %3** @3, align 8
  %780 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %779, i64 0, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @33, i32 0, i32 0))
  %781 = load i64, i64* %14, align 8
  %782 = icmp ne i64 %781, 0
  br i1 %782, label %783, label %785

783:                                              ; preds = %778
  %784 = load i8*, i8** %17, align 8
  call void @_efree(i8* %784)
  br label %785

785:                                              ; preds = %783, %778
  %786 = load i8*, i8** %20, align 8
  call void @_efree(i8* %786)
  %787 = load i8*, i8** %19, align 8
  call void @_efree(i8* %787)
  br label %788

788:                                              ; preds = %785
  %789 = load %4*, %4** %4, align 8
  %790 = getelementptr inbounds %4, %4* %789, i32 0, i32 1
  %791 = bitcast %6* %790 to i32*
  store i32 2, i32* %791, align 8
  br label %792

792:                                              ; preds = %788
  br label %793

793:                                              ; preds = %792
  store i32 1, i32* %30, align 4
  br label %821

794:                                              ; preds = %772
  br label %818

795:                                              ; preds = %756
  %796 = load %4*, %4** %45, align 8
  %797 = getelementptr inbounds %4, %4* %796, i32 0, i32 0
  %798 = bitcast %5* %797 to %0**
  %799 = load %0*, %0** %798, align 8
  %800 = getelementptr inbounds %0, %0* %799, i32 0, i32 3
  %801 = getelementptr inbounds [1 x i8], [1 x i8]* %800, i32 0, i32 0
  store i8* %801, i8** %18, align 8
  store i32 2, i32* %25, align 4
  br label %818

802:                                              ; preds = %756
  %803 = load %3*, %3** @3, align 8
  %804 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %803, i64 0, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @34, i32 0, i32 0))
  %805 = load i64, i64* %14, align 8
  %806 = icmp ne i64 %805, 0
  br i1 %806, label %807, label %809

807:                                              ; preds = %802
  %808 = load i8*, i8** %17, align 8
  call void @_efree(i8* %808)
  br label %809

809:                                              ; preds = %807, %802
  %810 = load i8*, i8** %20, align 8
  call void @_efree(i8* %810)
  %811 = load i8*, i8** %19, align 8
  call void @_efree(i8* %811)
  br label %812

812:                                              ; preds = %809
  %813 = load %4*, %4** %4, align 8
  %814 = getelementptr inbounds %4, %4* %813, i32 0, i32 1
  %815 = bitcast %6* %814 to i32*
  store i32 2, i32* %815, align 8
  br label %816

816:                                              ; preds = %812
  br label %817

817:                                              ; preds = %816
  store i32 1, i32* %30, align 4
  br label %821

818:                                              ; preds = %795, %794
  br label %819

819:                                              ; preds = %818, %744
  br label %820

820:                                              ; preds = %819, %735
  store i32 0, i32* %30, align 4
  br label %821

821:                                              ; preds = %820, %817, %793
  %822 = bitcast %4** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %822) #13
  %823 = bitcast i8** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %823) #13
  %824 = load i32, i32* %30, align 4
  switch i32 %824, label %844 [
    i32 0, label %825
  ]

825:                                              ; preds = %821
  br label %826

826:                                              ; preds = %825, %727, %724
  %827 = load i8*, i8** %18, align 8
  %828 = icmp ne i8* %827, null
  br i1 %828, label %832, label %829

829:                                              ; preds = %826
  %830 = load i8*, i8** %19, align 8
  %831 = call i32 @449(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 50), i8* %830, i8** %18)
  store i32 %831, i32* %25, align 4
  br label %832

832:                                              ; preds = %829, %826
  %833 = load %52*, %52** %27, align 8
  %834 = load %93*, %93** %28, align 8
  %835 = load i8*, i8** %18, align 8
  %836 = load i32, i32* %25, align 4
  %837 = load i8*, i8** %19, align 8
  %838 = load i32, i32* %24, align 4
  %839 = load i8*, i8** %16, align 8
  %840 = load i8*, i8** %20, align 8
  %841 = load i8*, i8** %11, align 8
  %842 = load i32, i32* %15, align 4
  %843 = call i32 @450(%52* %833, %93* %834, i8* %835, i32 %836, i8* %837, i32 %838, i8* %839, i8* %840, i8* %841, i32 %842)
  store i32 0, i32* %30, align 4
  br label %844

844:                                              ; preds = %832, %821, %563, %369, %358, %312, %167, %132, %117, %80
  %845 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %845) #13
  %846 = bitcast %93** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %846) #13
  %847 = bitcast %52** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %847) #13
  %848 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %848) #13
  %849 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %849) #13
  %850 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %850) #13
  %851 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %851) #13
  %852 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %852) #13
  %853 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %853) #13
  %854 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %854) #13
  %855 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %855) #13
  %856 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %856) #13
  %857 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %857) #13
  %858 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %858) #13
  %859 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %859) #13
  %860 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %860) #13
  %861 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %861) #13
  %862 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %862) #13
  %863 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %863) #13
  %864 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %864) #13
  %865 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %865) #13
  %866 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %866) #13
  %867 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %867) #13
  %868 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %868) #13
  %869 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %869) #13
  %870 = load i32, i32* %30, align 4
  switch i32 %870, label %872 [
    i32 0, label %871
    i32 1, label %871
  ]

871:                                              ; preds = %844, %844
  ret void

872:                                              ; preds = %844
  unreachable
}

declare dso_local void @phar_request_initialize() #2

declare dso_local i32 @phar_open_executed_filename(i8*, i32, i8**) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @443(i8* %0, i32 %1, i64 %2) #4 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i64, i64* %7, align 8
  %12 = icmp ule i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

14:                                               ; preds = %3
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %7, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = getelementptr inbounds i8, i8* %17, i64 -1
  store i8* %18, i8** %8, align 8
  br label %19

19:                                               ; preds = %34, %14
  %20 = load i8*, i8** %8, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = icmp uge i8* %20, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* %6, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %26, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %33
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 -1
  store i8* %36, i8** %8, align 8
  br label %19

37:                                               ; preds = %19
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %31, %13
  %39 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #13
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @444(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  %3 = load %4*, %4** %2, align 8
  %4 = getelementptr inbounds %4, %4* %3, i32 0, i32 1
  %5 = bitcast %6* %4 to %95*
  %6 = getelementptr inbounds %95, %95* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  ret i8 %7
}

declare dso_local %4* @zend_hash_str_find(%8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

declare dso_local noalias i8* @_estrndup(i8*, i64) #2

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) #6

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i8* @sapi_getenv(i8*, i64) #2

declare dso_local i64 @zend_spprintf(i8**, i64, i8*, ...) #2

declare dso_local i32 @zend_fcall_info_init(%4*, i32, %82*, %63*, %0**, i8**) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @445(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %4*, %4** %2, align 8
  %5 = getelementptr inbounds %4, %4* %4, i32 0, i32 1
  %6 = bitcast %6* %5 to %95*
  %7 = getelementptr inbounds %95, %95* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %4*, %4** %2, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 0
  %22 = bitcast %5* %21 to %96**
  %23 = load %96*, %96** %22, align 8
  %24 = getelementptr inbounds %96, %96* %23, i32 0, i32 0
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

declare dso_local i32 @zend_call_function(%82*, %63*) #2

; Function Attrs: nounwind uwtable
define internal void @446(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %94, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %94* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %6) #13
  %7 = bitcast %94* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  %8 = getelementptr inbounds %94, %94* %5, i32 0, i32 2
  store i64 403, i64* %8, align 8
  %9 = getelementptr inbounds %94, %94* %5, i32 0, i32 1
  store i64 26, i64* %9, align 8
  %10 = getelementptr inbounds %94, %94* %5, i32 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @312, i32 0, i32 0), i8** %10, align 8
  %11 = bitcast %94* %5 to i8*
  %12 = call i32 @sapi_header_op(i32 0, i8* %11)
  %13 = call i32 @sapi_send_headers()
  %14 = call i64 @php_output_write(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @313, i32 0, i32 0), i64 80)
  %15 = call i64 @php_output_write(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @314, i32 0, i32 0), i64 35)
  %16 = bitcast %94* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %16) #13
  ret void
}

declare dso_local void @_zend_bailout(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @447(i8* %0, i32 %1, i8** %2, i32* %3, i8** %4, i32* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %52*, align 8
  %20 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8** %2, i8*** %9, align 8
  store i32* %3, i32** %10, align 8
  store i8** %4, i8*** %11, align 8
  store i32* %5, i32** %12, align 8
  %21 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load i8**, i8*** %9, align 8
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %13, align 8
  %25 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  store i8* null, i8** %14, align 8
  %26 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  store i8* null, i8** %15, align 8
  %27 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i8* null, i8** %16, align 8
  %28 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load i32*, i32** %10, align 8
  %30 = load i32, i32* %29, align 4
  %31 = sub nsw i32 %30, 1
  store i32 %31, i32* %17, align 4
  %32 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 0, i32* %18, align 4
  %33 = bitcast %52** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = load i8*, i8** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = call i8* @442(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1), i8* %34, i64 %36)
  %38 = bitcast i8* %37 to %52*
  store %52* %38, %52** %19, align 8
  %39 = load %52*, %52** %19, align 8
  %40 = icmp ne %52* %39, null
  br i1 %40, label %50, label %41

41:                                               ; preds = %6
  %42 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 7), align 8
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i8*, i8** %7, align 8
  %46 = load i32, i32* %8, align 4
  %47 = sext i32 %46 to i64
  %48 = call i8* @442(%8* @cached_phars, i8* %45, i64 %47)
  %49 = bitcast i8* %48 to %52*
  store %52* %49, %52** %19, align 8
  br label %50

50:                                               ; preds = %44, %41, %6
  br label %51

51:                                               ; preds = %135, %50
  %52 = load %52*, %52** %19, align 8
  %53 = getelementptr inbounds %52, %52* %52, i32 0, i32 9
  %54 = load i8*, i8** %13, align 8
  %55 = load i32, i32* %17, align 4
  %56 = sext i32 %55 to i64
  %57 = call zeroext i8 @zend_hash_str_exists(%8* %53, i8* %54, i64 %56)
  %58 = icmp ne i8 %57, 0
  br i1 %58, label %59, label %83

59:                                               ; preds = %51
  %60 = load i8*, i8** %14, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %75

62:                                               ; preds = %59
  %63 = load i8*, i8** %14, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 0
  store i8 47, i8* %64, align 1
  %65 = load i8*, i8** %14, align 8
  %66 = load i32, i32* %18, align 4
  %67 = add nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = call noalias i8* @_estrndup(i8* %65, i64 %68)
  %70 = load i8**, i8*** %11, align 8
  store i8* %69, i8** %70, align 8
  %71 = load i32, i32* %18, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %18, align 4
  %73 = load i8*, i8** %14, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  store i8 0, i8* %74, align 1
  br label %77

75:                                               ; preds = %59
  %76 = load i8**, i8*** %11, align 8
  store i8* null, i8** %76, align 8
  br label %77

77:                                               ; preds = %75, %62
  %78 = load i32, i32* %18, align 4
  %79 = load i32*, i32** %12, align 8
  store i32 %78, i32* %79, align 4
  %80 = load i32, i32* %17, align 4
  %81 = add nsw i32 %80, 1
  %82 = load i32*, i32** %10, align 8
  store i32 %81, i32* %82, align 4
  store i32 1, i32* %20, align 4
  br label %137

83:                                               ; preds = %51
  %84 = load i8*, i8** %14, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %86, label %101

86:                                               ; preds = %83
  %87 = load i8*, i8** %13, align 8
  %88 = call i8* @strrchr(i8* %87, i32 47) #14
  store i8* %88, i8** %15, align 8
  %89 = load i8*, i8** %14, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 0
  store i8 47, i8* %90, align 1
  %91 = load i8*, i8** %14, align 8
  store i8* %91, i8** %16, align 8
  %92 = load i32, i32* %18, align 4
  %93 = add nsw i32 %92, 1
  %94 = load i32, i32* %17, align 4
  %95 = add nsw i32 %94, %93
  store i32 %95, i32* %17, align 4
  %96 = load i8*, i8** %15, align 8
  store i8* %96, i8** %14, align 8
  %97 = load i8*, i8** %14, align 8
  %98 = icmp ne i8* %97, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %86
  store i32 1, i32* %20, align 4
  br label %137

100:                                              ; preds = %86
  br label %114

101:                                              ; preds = %83
  %102 = load i8*, i8** %13, align 8
  %103 = call i8* @strrchr(i8* %102, i32 47) #14
  store i8* %103, i8** %14, align 8
  %104 = load i8*, i8** %14, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %101
  %107 = load i8*, i8** %16, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = load i8*, i8** %16, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 0
  store i8 47, i8* %111, align 1
  br label %112

112:                                              ; preds = %109, %106
  store i32 1, i32* %20, align 4
  br label %137

113:                                              ; preds = %101
  br label %114

114:                                              ; preds = %113, %100
  %115 = load i8*, i8** %14, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 0
  store i8 0, i8* %116, align 1
  %117 = load i8*, i8** %14, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  %119 = call i64 @strlen(i8* %118) #14
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %18, align 4
  %121 = load i32, i32* %18, align 4
  %122 = add nsw i32 %121, 1
  %123 = load i32, i32* %17, align 4
  %124 = sub nsw i32 %123, %122
  store i32 %124, i32* %17, align 4
  %125 = load i32, i32* %17, align 4
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %127, label %134

127:                                              ; preds = %114
  %128 = load i8*, i8** %16, align 8
  %129 = icmp ne i8* %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = load i8*, i8** %16, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 0
  store i8 47, i8* %132, align 1
  br label %133

133:                                              ; preds = %130, %127
  store i32 1, i32* %20, align 4
  br label %137

134:                                              ; preds = %114
  br label %135

135:                                              ; preds = %134
  br i1 true, label %51, label %136

136:                                              ; preds = %135
  store i32 0, i32* %20, align 4
  br label %137

137:                                              ; preds = %136, %133, %112, %99, %77
  %138 = bitcast %52** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #13
  %139 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %139) #13
  %140 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %140) #13
  %141 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  %142 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #13
  %143 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #13
  %144 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #13
  %145 = load i32, i32* %20, align 4
  switch i32 %145, label %147 [
    i32 0, label %146
    i32 1, label %146
  ]

146:                                              ; preds = %137, %137
  ret void

147:                                              ; preds = %137
  unreachable
}

declare dso_local i32 @phar_get_archive(%52**, i8*, i32, i8*, i32, i8**) #2

declare dso_local %93* @phar_get_entry_info(%52*, i8*, i32, i8**, i32) #2

; Function Attrs: nounwind uwtable
define internal void @448(%52* %0, i8* %1, i32 %2, i8* %3, i32 %4, i8* %5, i64 %6) #0 {
  %8 = alloca %52*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %94, align 8
  %16 = alloca %93*, align 8
  %17 = alloca i32, align 4
  store %52* %0, %52** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  store i64 %6, i64* %14, align 8
  %18 = bitcast %94* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %18) #13
  %19 = bitcast %94* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  %20 = bitcast %93** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %52*, %52** %8, align 8
  %22 = icmp ne %52* %21, null
  br i1 %22, label %23, label %41

23:                                               ; preds = %7
  %24 = load i32, i32* %12, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %23
  %27 = load %52*, %52** %8, align 8
  %28 = load i8*, i8** %11, align 8
  %29 = load i32, i32* %12, align 4
  %30 = call %93* @phar_get_entry_info(%52* %27, i8* %28, i32 %29, i8** null, i32 1)
  store %93* %30, %93** %16, align 8
  %31 = load %93*, %93** %16, align 8
  %32 = icmp ne %93* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %26
  %34 = load %52*, %52** %8, align 8
  %35 = load %93*, %93** %16, align 8
  %36 = load i8*, i8** %11, align 8
  %37 = load i32, i32* %12, align 4
  %38 = load i8*, i8** %9, align 8
  %39 = call i32 @450(%52* %34, %93* %35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @315, i32 0, i32 0), i32 0, i8* %36, i32 %37, i8* %38, i8* null, i8* null, i32 0)
  store i32 1, i32* %17, align 4
  br label %50

40:                                               ; preds = %26
  br label %41

41:                                               ; preds = %40, %23, %7
  %42 = getelementptr inbounds %94, %94* %15, i32 0, i32 2
  store i64 404, i64* %42, align 8
  %43 = getelementptr inbounds %94, %94* %15, i32 0, i32 1
  store i64 22, i64* %43, align 8
  %44 = getelementptr inbounds %94, %94* %15, i32 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @316, i32 0, i32 0), i8** %44, align 8
  %45 = bitcast %94* %15 to i8*
  %46 = call i32 @sapi_header_op(i32 0, i8* %45)
  %47 = call i32 @sapi_send_headers()
  %48 = call i64 @php_output_write(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @317, i32 0, i32 0), i64 81)
  %49 = call i64 @php_output_write(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @318, i32 0, i32 0), i64 31)
  store i32 0, i32* %17, align 4
  br label %50

50:                                               ; preds = %41, %33
  %51 = bitcast %93** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #13
  %52 = bitcast %94* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %52) #13
  %53 = load i32, i32* %17, align 4
  switch i32 %53, label %55 [
    i32 0, label %54
    i32 1, label %54
  ]

54:                                               ; preds = %50, %50
  ret void

55:                                               ; preds = %50
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare dso_local i32 @sapi_header_op(i32, i8*) #2

declare dso_local i32 @sapi_send_headers() #2

; Function Attrs: nounwind uwtable
define internal i32 @449(%8* %0, i8* %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %97*, align 8
  %10 = alloca i32, align 4
  store %8* %0, %8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8** %2, i8*** %7, align 8
  %11 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast %97** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load i8*, i8** %6, align 8
  %14 = call i8* @strrchr(i8* %13, i32 46) #14
  store i8* %14, i8** %8, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = load i8**, i8*** %7, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @319, i32 0, i32 0), i8** %18, align 8
  store i32 2, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %40

19:                                               ; preds = %3
  %20 = load i8*, i8** %8, align 8
  %21 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %21, i8** %8, align 8
  %22 = load %8*, %8** %5, align 8
  %23 = load i8*, i8** %8, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = call i64 @strlen(i8* %24) #14
  %26 = call i8* @442(%8* %22, i8* %23, i64 %25)
  %27 = bitcast i8* %26 to %97*
  store %97* %27, %97** %9, align 8
  %28 = icmp eq %97* null, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  %30 = load i8**, i8*** %7, align 8
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @320, i32 0, i32 0), i8** %30, align 8
  store i32 2, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %40

31:                                               ; preds = %19
  %32 = load %97*, %97** %9, align 8
  %33 = getelementptr inbounds %97, %97* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = load i8**, i8*** %7, align 8
  store i8* %34, i8** %35, align 8
  %36 = load %97*, %97** %9, align 8
  %37 = getelementptr inbounds %97, %97* %36, i32 0, i32 2
  %38 = load i8, i8* %37, align 4
  %39 = sext i8 %38 to i32
  store i32 %39, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %40

40:                                               ; preds = %31, %29, %17
  %41 = bitcast %97** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #13
  %42 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #13
  %43 = load i32, i32* %4, align 4
  ret i32 %43
}

; Function Attrs: nounwind uwtable
define internal i32 @450(%52* %0, %93* %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i8* %7, i8* %8, i32 %9) #0 {
  %11 = alloca i32, align 4
  %12 = alloca %52*, align 8
  %13 = alloca %93*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca [8192 x i8], align 16
  %24 = alloca i8*, align 8
  %25 = alloca %98, align 8
  %26 = alloca %94, align 8
  %27 = alloca i64, align 8
  %28 = alloca %4, align 8
  %29 = alloca i64, align 8
  %30 = alloca %89, align 8
  %31 = alloca %12*, align 8
  %32 = alloca %4, align 8
  %33 = alloca %34*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca [1 x %67]*, align 8
  %38 = alloca [1 x %67], align 16
  store %52* %0, %52** %12, align 8
  store %93* %1, %93** %13, align 8
  store i8* %2, i8** %14, align 8
  store i32 %3, i32* %15, align 4
  store i8* %4, i8** %16, align 8
  store i32 %5, i32* %17, align 4
  store i8* %6, i8** %18, align 8
  store i8* %7, i8** %19, align 8
  store i8* %8, i8** %20, align 8
  store i32 %9, i32* %21, align 4
  %39 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i8* null, i8** %22, align 8
  %40 = bitcast [8192 x i8]* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* %40) #13
  %41 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %98* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %42) #13
  %43 = bitcast %94* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %43) #13
  %44 = bitcast %94* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false)
  %45 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast %4* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %46) #13
  %47 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast %89* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* %48) #13
  %49 = bitcast %12** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast %4* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %50) #13
  %51 = bitcast %34** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  %52 = bitcast i64* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  %53 = load i32, i32* %15, align 4
  switch i32 %53, label %302 [
    i32 1, label %54
    i32 2, label %73
    i32 0, label %167
  ]

54:                                               ; preds = %10
  %55 = load i8*, i8** %19, align 8
  call void @_efree(i8* %55)
  %56 = load i8*, i8** %16, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 47
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = load i8*, i8** %18, align 8
  %63 = load i8*, i8** %16, align 8
  %64 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %22, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @56, i32 0, i32 0), i8* %62, i8* %63)
  br label %69

65:                                               ; preds = %54
  %66 = load i8*, i8** %18, align 8
  %67 = load i8*, i8** %16, align 8
  %68 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %22, i64 4096, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @145, i32 0, i32 0), i8* %66, i8* %67)
  br label %69

69:                                               ; preds = %65, %61
  call void @php_get_highlight_struct(%98* %25)
  %70 = load i8*, i8** %22, align 8
  %71 = call i32 @highlight_file(i8* %70, %98* %25)
  %72 = load i8*, i8** %22, align 8
  call void @_efree(i8* %72)
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 168)
  br label %73

73:                                               ; preds = %10, %69
  %74 = load i8*, i8** %19, align 8
  call void @_efree(i8* %74)
  %75 = getelementptr inbounds %94, %94* %26, i32 0, i32 0
  %76 = load i8*, i8** %14, align 8
  %77 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %75, i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @321, i32 0, i32 0), i8* %76)
  %78 = getelementptr inbounds %94, %94* %26, i32 0, i32 1
  store i64 %77, i64* %78, align 8
  %79 = bitcast %94* %26 to i8*
  %80 = call i32 @sapi_header_op(i32 0, i8* %79)
  %81 = getelementptr inbounds %94, %94* %26, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_efree(i8* %82)
  %83 = getelementptr inbounds %94, %94* %26, i32 0, i32 0
  %84 = load %93*, %93** %13, align 8
  %85 = getelementptr inbounds %93, %93* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %83, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @322, i32 0, i32 0), i32 %86)
  %88 = getelementptr inbounds %94, %94* %26, i32 0, i32 1
  store i64 %87, i64* %88, align 8
  %89 = bitcast %94* %26 to i8*
  %90 = call i32 @sapi_header_op(i32 0, i8* %89)
  %91 = getelementptr inbounds %94, %94* %26, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_efree(i8* %92)
  %93 = call i32 @sapi_send_headers()
  %94 = icmp eq i32 -1, %93
  br i1 %94, label %95, label %96

95:                                               ; preds = %73
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 180)
  br label %96

96:                                               ; preds = %95, %73
  %97 = load %93*, %93** %13, align 8
  %98 = call %34* @phar_get_efp(%93* %97, i32 1)
  store %34* %98, %34** %33, align 8
  %99 = load %34*, %34** %33, align 8
  %100 = icmp ne %34* %99, null
  br i1 %100, label %123, label %101

101:                                              ; preds = %96
  %102 = bitcast i8** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %102) #13
  %103 = load %52*, %52** %12, align 8
  %104 = load %93*, %93** %13, align 8
  %105 = call %93* @phar_open_jit(%52* %103, %93* %104, i8** %35)
  %106 = icmp ne %93* %105, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %101
  %108 = load i8*, i8** %35, align 8
  %109 = icmp ne i8* %108, null
  br i1 %109, label %110, label %115

110:                                              ; preds = %107
  %111 = load %3*, %3** @3, align 8
  %112 = load i8*, i8** %35, align 8
  %113 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %111, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %112)
  %114 = load i8*, i8** %35, align 8
  call void @_efree(i8* %114)
  br label %115

115:                                              ; preds = %110, %107
  store i32 -1, i32* %11, align 4
  store i32 1, i32* %36, align 4
  br label %119

116:                                              ; preds = %101
  %117 = load %93*, %93** %13, align 8
  %118 = call %34* @phar_get_efp(%93* %117, i32 1)
  store %34* %118, %34** %33, align 8
  store i32 0, i32* %36, align 4
  br label %119

119:                                              ; preds = %116, %115
  %120 = bitcast i8** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #13
  %121 = load i32, i32* %36, align 4
  switch i32 %121, label %303 [
    i32 0, label %122
  ]

122:                                              ; preds = %119
  br label %123

123:                                              ; preds = %122, %96
  store i64 0, i64* %34, align 8
  %124 = load %93*, %93** %13, align 8
  %125 = call i32 @phar_seek_efp(%93* %124, i64 0, i32 0, i64 0, i32 1)
  br label %126

126:                                              ; preds = %165, %123
  %127 = load %34*, %34** %33, align 8
  %128 = getelementptr inbounds [8192 x i8], [8192 x i8]* %23, i32 0, i32 0
  %129 = load %93*, %93** %13, align 8
  %130 = getelementptr inbounds %93, %93* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = zext i32 %131 to i64
  %133 = load i64, i64* %34, align 8
  %134 = sub nsw i64 %132, %133
  %135 = icmp slt i64 8192, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %144

137:                                              ; preds = %126
  %138 = load %93*, %93** %13, align 8
  %139 = getelementptr inbounds %93, %93* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = zext i32 %140 to i64
  %142 = load i64, i64* %34, align 8
  %143 = sub nsw i64 %141, %142
  br label %144

144:                                              ; preds = %137, %136
  %145 = phi i64 [ 8192, %136 ], [ %143, %137 ]
  %146 = call i64 @_php_stream_read(%34* %127, i8* %128, i64 %145)
  store i64 %146, i64* %27, align 8
  %147 = load i64, i64* %27, align 8
  %148 = icmp ugt i64 %147, 0
  br i1 %148, label %149, label %164

149:                                              ; preds = %144
  %150 = getelementptr inbounds [8192 x i8], [8192 x i8]* %23, i32 0, i32 0
  %151 = load i64, i64* %27, align 8
  %152 = call i64 @php_output_write(i8* %150, i64 %151)
  %153 = load i64, i64* %27, align 8
  %154 = load i64, i64* %34, align 8
  %155 = add i64 %154, %153
  store i64 %155, i64* %34, align 8
  %156 = load i64, i64* %34, align 8
  %157 = load %93*, %93** %13, align 8
  %158 = getelementptr inbounds %93, %93* %157, i32 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = zext i32 %159 to i64
  %161 = icmp eq i64 %156, %160
  br i1 %161, label %162, label %163

162:                                              ; preds = %149
  br label %166

163:                                              ; preds = %149
  br label %164

164:                                              ; preds = %163, %144
  br label %165

165:                                              ; preds = %164
  br i1 true, label %126, label %166

166:                                              ; preds = %165, %162
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 211)
  br label %167

167:                                              ; preds = %10, %166
  %168 = load i8*, i8** %19, align 8
  %169 = icmp ne i8* %168, null
  br i1 %169, label %170, label %177

170:                                              ; preds = %167
  %171 = load i8*, i8** %18, align 8
  %172 = load i8*, i8** %16, align 8
  %173 = load i32, i32* %17, align 4
  %174 = load i8*, i8** %19, align 8
  %175 = load i32, i32* %21, align 4
  call void @467(i8* %171, i8* %172, i32 %173, i8* %174, i32 %175)
  %176 = load i8*, i8** %19, align 8
  call void @_efree(i8* %176)
  br label %177

177:                                              ; preds = %170, %167
  %178 = load i8*, i8** %16, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 0
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %181, 47
  br i1 %182, label %183, label %187

183:                                              ; preds = %177
  %184 = load i8*, i8** %18, align 8
  %185 = load i8*, i8** %16, align 8
  %186 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %22, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @56, i32 0, i32 0), i8* %184, i8* %185)
  store i64 %186, i64* %29, align 8
  br label %191

187:                                              ; preds = %177
  %188 = load i8*, i8** %18, align 8
  %189 = load i8*, i8** %16, align 8
  %190 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %22, i64 4096, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @145, i32 0, i32 0), i8* %188, i8* %189)
  store i64 %190, i64* %29, align 8
  br label %191

191:                                              ; preds = %187, %183
  %192 = getelementptr inbounds %89, %89* %30, i32 0, i32 3
  store i32 0, i32* %192, align 8
  %193 = getelementptr inbounds %89, %89* %30, i32 0, i32 0
  %194 = bitcast %90* %193 to i32*
  store i32 0, i32* %194, align 8
  %195 = load i8*, i8** %22, align 8
  %196 = getelementptr inbounds %89, %89* %30, i32 0, i32 1
  store i8* %195, i8** %196, align 8
  %197 = getelementptr inbounds %89, %89* %30, i32 0, i32 2
  store %0* null, %0** %197, align 8
  %198 = getelementptr inbounds %89, %89* %30, i32 0, i32 4
  store i8 0, i8* %198, align 4
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  br label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %4, %4* %28, i32 0, i32 1
  %201 = bitcast %6* %200 to i32*
  store i32 1, i32* %201, align 8
  br label %202

202:                                              ; preds = %199
  br label %203

203:                                              ; preds = %202
  %204 = load i8*, i8** %22, align 8
  %205 = load i64, i64* %29, align 8
  %206 = call %4* @_zend_hash_str_add(%8* getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 6), i8* %204, i64 %205, %4* %28)
  %207 = icmp ne %4* %206, null
  br i1 %207, label %208, label %261

208:                                              ; preds = %203
  %209 = load i8*, i8** %16, align 8
  %210 = load i32, i32* %17, align 4
  %211 = sext i32 %210 to i64
  %212 = call i8* @443(i8* %209, i32 47, i64 %211)
  store i8* %212, i8** %24, align 8
  %213 = icmp ne i8* %212, null
  br i1 %213, label %214, label %251

214:                                              ; preds = %208
  store i32 1, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 42), align 4
  %215 = load i8*, i8** %16, align 8
  %216 = load i8*, i8** %24, align 8
  %217 = icmp eq i8* %215, %216
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  store i32 0, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  br label %250

219:                                              ; preds = %214
  %220 = load i8*, i8** %16, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 0
  %222 = load i8, i8* %221, align 1
  %223 = sext i8 %222 to i32
  %224 = icmp eq i32 %223, 47
  br i1 %224, label %225, label %238

225:                                              ; preds = %219
  %226 = load i8*, i8** %24, align 8
  %227 = load i8*, i8** %16, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 1
  %229 = ptrtoint i8* %226 to i64
  %230 = ptrtoint i8* %228 to i64
  %231 = sub i64 %229, %230
  %232 = trunc i64 %231 to i32
  store i32 %232, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  %233 = load i8*, i8** %16, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 1
  %235 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  %236 = sext i32 %235 to i64
  %237 = call noalias i8* @_estrndup(i8* %234, i64 %236)
  store i8* %237, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  br label %249

238:                                              ; preds = %219
  %239 = load i8*, i8** %24, align 8
  %240 = load i8*, i8** %16, align 8
  %241 = ptrtoint i8* %239 to i64
  %242 = ptrtoint i8* %240 to i64
  %243 = sub i64 %241, %242
  %244 = trunc i64 %243 to i32
  store i32 %244, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  %245 = load i8*, i8** %16, align 8
  %246 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  %247 = sext i32 %246 to i64
  %248 = call noalias i8* @_estrndup(i8* %245, i64 %247)
  store i8* %248, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  br label %249

249:                                              ; preds = %238, %225
  br label %250

250:                                              ; preds = %249, %218
  br label %251

251:                                              ; preds = %250, %208
  %252 = load %12* (%89*, i32)*, %12* (%89*, i32)** @zend_compile_file, align 8
  %253 = call %12* %252(%89* %30, i32 8)
  store %12* %253, %12** %31, align 8
  %254 = load %12*, %12** %31, align 8
  %255 = icmp ne %12* %254, null
  br i1 %255, label %260, label %256

256:                                              ; preds = %251
  %257 = load i8*, i8** %22, align 8
  %258 = load i64, i64* %29, align 8
  %259 = call i32 @zend_hash_str_del(%8* getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 6), i8* %257, i64 %258)
  br label %260

260:                                              ; preds = %256, %251
  call void @zend_destroy_file_handle(%89* %30)
  br label %263

261:                                              ; preds = %203
  %262 = load i8*, i8** %22, align 8
  call void @_efree(i8* %262)
  store %12* null, %12** %31, align 8
  br label %263

263:                                              ; preds = %261, %260
  %264 = load %12*, %12** %31, align 8
  %265 = icmp ne %12* %264, null
  br i1 %265, label %266, label %301

266:                                              ; preds = %263
  br label %267

267:                                              ; preds = %266
  %268 = getelementptr inbounds %4, %4* %32, i32 0, i32 1
  %269 = bitcast %6* %268 to i32*
  store i32 0, i32* %269, align 8
  br label %270

270:                                              ; preds = %267
  br label %271

271:                                              ; preds = %270
  %272 = bitcast [1 x %67]** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %272) #13
  %273 = load [1 x %67]*, [1 x %67]** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 7), align 8
  store [1 x %67]* %273, [1 x %67]** %37, align 8
  %274 = bitcast [1 x %67]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* %274) #13
  store [1 x %67]* %38, [1 x %67]** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 7), align 8
  %275 = getelementptr inbounds [1 x %67], [1 x %67]* %38, i32 0, i32 0
  %276 = call i32 @_setjmp(%67* %275) #16
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %289

278:                                              ; preds = %271
  %279 = load %12*, %12** %31, align 8
  call void @zend_execute(%12* %279, %4* %32)
  %280 = load i8*, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  %281 = icmp ne i8* %280, null
  br i1 %281, label %282, label %284

282:                                              ; preds = %278
  %283 = load i8*, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  call void @_efree(i8* %283)
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  br label %284

284:                                              ; preds = %282, %278
  store i32 0, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 42), align 4
  %285 = load i8*, i8** %22, align 8
  call void @_efree(i8* %285)
  %286 = load %12*, %12** %31, align 8
  call void @destroy_op_array(%12* %286)
  %287 = load %12*, %12** %31, align 8
  %288 = bitcast %12* %287 to i8*
  call void @_efree(i8* %288)
  call void @_zval_ptr_dtor(%4* %32)
  br label %297

289:                                              ; preds = %271
  %290 = load [1 x %67]*, [1 x %67]** %37, align 8
  store [1 x %67]* %290, [1 x %67]** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 7), align 8
  %291 = load i8*, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  %292 = icmp ne i8* %291, null
  br i1 %292, label %293, label %295

293:                                              ; preds = %289
  %294 = load i8*, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  call void @_efree(i8* %294)
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 41), align 8
  br label %295

295:                                              ; preds = %293, %289
  store i32 0, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 42), align 4
  %296 = load i8*, i8** %22, align 8
  call void @_efree(i8* %296)
  br label %297

297:                                              ; preds = %295, %284
  %298 = load [1 x %67]*, [1 x %67]** %37, align 8
  store [1 x %67]* %298, [1 x %67]** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 7), align 8
  %299 = bitcast [1 x %67]* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 200, i8* %299) #13
  %300 = bitcast [1 x %67]** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #13
  call void @_zend_bailout(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @28, i32 0, i32 0), i32 292)
  br label %301

301:                                              ; preds = %297, %263
  store i32 0, i32* %11, align 4
  store i32 1, i32* %36, align 4
  br label %303

302:                                              ; preds = %10
  store i32 -1, i32* %11, align 4
  store i32 1, i32* %36, align 4
  br label %303

303:                                              ; preds = %302, %301, %119
  %304 = bitcast i64* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304) #13
  %305 = bitcast %34** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #13
  %306 = bitcast %4* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %306) #13
  %307 = bitcast %12** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #13
  %308 = bitcast %89* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %308) #13
  %309 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %309) #13
  %310 = bitcast %4* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %310) #13
  %311 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %311) #13
  %312 = bitcast %94* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %312) #13
  %313 = bitcast %98* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %313) #13
  %314 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %314) #13
  %315 = bitcast [8192 x i8]* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* %315) #13
  %316 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %316) #13
  %317 = load i32, i32* %11, align 4
  ret i32 %317
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_mungServer(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %8*, align 8
  %9 = alloca %10*, align 8
  %10 = alloca %10*, align 8
  %11 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  %16 = getelementptr inbounds %4, %4* %15, i32 0, i32 2
  %17 = bitcast %7* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), %4** %5)
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  store i32 1, i32* %7, align 4
  br label %180

22:                                               ; preds = %2
  %23 = load %4*, %4** %5, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %8**
  %26 = load %8*, %8** %25, align 8
  %27 = getelementptr inbounds %8, %8* %26, i32 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = load %3*, %3** @3, align 8
  %32 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %31, i64 0, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @36, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %180

33:                                               ; preds = %22
  %34 = load %4*, %4** %5, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %8**
  %37 = load %8*, %8** %36, align 8
  %38 = getelementptr inbounds %8, %8* %37, i32 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = icmp ugt i32 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = load %3*, %3** @3, align 8
  %43 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %42, i64 0, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @37, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %180

44:                                               ; preds = %33
  call void @phar_request_initialize()
  br label %45

45:                                               ; preds = %44
  %46 = bitcast %8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = load %4*, %4** %5, align 8
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 0
  %49 = bitcast %5* %48 to %8**
  %50 = load %8*, %8** %49, align 8
  store %8* %50, %8** %8, align 8
  %51 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  %52 = load %8*, %8** %8, align 8
  %53 = getelementptr inbounds %8, %8* %52, i32 0, i32 3
  %54 = load %10*, %10** %53, align 8
  store %10* %54, %10** %9, align 8
  %55 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  %56 = load %10*, %10** %9, align 8
  %57 = load %8*, %8** %8, align 8
  %58 = getelementptr inbounds %8, %8* %57, i32 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %10, %10* %56, i64 %60
  store %10* %61, %10** %10, align 8
  br label %62

62:                                               ; preds = %168, %45
  %63 = load %10*, %10** %9, align 8
  %64 = load %10*, %10** %10, align 8
  %65 = icmp ne %10* %63, %64
  br i1 %65, label %66, label %171

66:                                               ; preds = %62
  %67 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %67) #13
  %68 = load %10*, %10** %9, align 8
  %69 = getelementptr inbounds %10, %10* %68, i32 0, i32 0
  store %4* %69, %4** %11, align 8
  %70 = load %4*, %4** %11, align 8
  %71 = call zeroext i8 @444(%4* %70)
  %72 = zext i8 %71 to i32
  %73 = icmp eq i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 0)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %66
  store i32 6, i32* %7, align 4
  br label %164

81:                                               ; preds = %66
  %82 = load %4*, %4** %11, align 8
  store %4* %82, %4** %6, align 8
  %83 = load %4*, %4** %6, align 8
  %84 = call zeroext i8 @444(%4* %83)
  %85 = zext i8 %84 to i32
  %86 = icmp ne i32 %85, 6
  br i1 %86, label %87, label %90

87:                                               ; preds = %81
  %88 = load %3*, %3** @3, align 8
  %89 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %88, i64 0, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @38, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %164

90:                                               ; preds = %81
  %91 = load %4*, %4** %6, align 8
  %92 = getelementptr inbounds %4, %4* %91, i32 0, i32 0
  %93 = bitcast %5* %92 to %0**
  %94 = load %0*, %0** %93, align 8
  %95 = getelementptr inbounds %0, %0* %94, i32 0, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, 8
  br i1 %97, label %98, label %110

98:                                               ; preds = %90
  %99 = load %4*, %4** %6, align 8
  %100 = getelementptr inbounds %4, %4* %99, i32 0, i32 0
  %101 = bitcast %5* %100 to %0**
  %102 = load %0*, %0** %101, align 8
  %103 = getelementptr inbounds %0, %0* %102, i32 0, i32 3
  %104 = getelementptr inbounds [1 x i8], [1 x i8]* %103, i32 0, i32 0
  %105 = call i32 @strncmp(i8* %104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @39, i32 0, i32 0), i64 8) #14
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %98
  %108 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %109 = or i32 %108, 1
  store i32 %109, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  br label %110

110:                                              ; preds = %107, %98, %90
  %111 = load %4*, %4** %6, align 8
  %112 = getelementptr inbounds %4, %4* %111, i32 0, i32 0
  %113 = bitcast %5* %112 to %0**
  %114 = load %0*, %0** %113, align 8
  %115 = getelementptr inbounds %0, %0* %114, i32 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 11
  br i1 %117, label %118, label %143

118:                                              ; preds = %110
  %119 = load %4*, %4** %6, align 8
  %120 = getelementptr inbounds %4, %4* %119, i32 0, i32 0
  %121 = bitcast %5* %120 to %0**
  %122 = load %0*, %0** %121, align 8
  %123 = getelementptr inbounds %0, %0* %122, i32 0, i32 3
  %124 = getelementptr inbounds [1 x i8], [1 x i8]* %123, i32 0, i32 0
  %125 = call i32 @strncmp(i8* %124, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @40, i32 0, i32 0), i64 11) #14
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %118
  %128 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %129 = or i32 %128, 2
  store i32 %129, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  br label %130

130:                                              ; preds = %127, %118
  %131 = load %4*, %4** %6, align 8
  %132 = getelementptr inbounds %4, %4* %131, i32 0, i32 0
  %133 = bitcast %5* %132 to %0**
  %134 = load %0*, %0** %133, align 8
  %135 = getelementptr inbounds %0, %0* %134, i32 0, i32 3
  %136 = getelementptr inbounds [1 x i8], [1 x i8]* %135, i32 0, i32 0
  %137 = call i32 @strncmp(i8* %136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @20, i32 0, i32 0), i64 11) #14
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %130
  %140 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %141 = or i32 %140, 4
  store i32 %141, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  br label %142

142:                                              ; preds = %139, %130
  br label %143

143:                                              ; preds = %142, %110
  %144 = load %4*, %4** %6, align 8
  %145 = getelementptr inbounds %4, %4* %144, i32 0, i32 0
  %146 = bitcast %5* %145 to %0**
  %147 = load %0*, %0** %146, align 8
  %148 = getelementptr inbounds %0, %0* %147, i32 0, i32 2
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %149, 15
  br i1 %150, label %151, label %163

151:                                              ; preds = %143
  %152 = load %4*, %4** %6, align 8
  %153 = getelementptr inbounds %4, %4* %152, i32 0, i32 0
  %154 = bitcast %5* %153 to %0**
  %155 = load %0*, %0** %154, align 8
  %156 = getelementptr inbounds %0, %0* %155, i32 0, i32 3
  %157 = getelementptr inbounds [1 x i8], [1 x i8]* %156, i32 0, i32 0
  %158 = call i32 @strncmp(i8* %157, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @41, i32 0, i32 0), i64 15) #14
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %151
  %161 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %162 = or i32 %161, 8
  store i32 %162, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  br label %163

163:                                              ; preds = %160, %151, %143
  store i32 0, i32* %7, align 4
  br label %164

164:                                              ; preds = %163, %87, %80
  %165 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  %166 = load i32, i32* %7, align 4
  switch i32 %166, label %172 [
    i32 0, label %167
    i32 6, label %168
  ]

167:                                              ; preds = %164
  br label %168

168:                                              ; preds = %167, %164
  %169 = load %10*, %10** %9, align 8
  %170 = getelementptr inbounds %10, %10* %169, i32 1
  store %10* %170, %10** %9, align 8
  br label %62

171:                                              ; preds = %62
  store i32 0, i32* %7, align 4
  br label %172

172:                                              ; preds = %171, %164
  %173 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %173) #13
  %174 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %174) #13
  %175 = bitcast %8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %175) #13
  %176 = load i32, i32* %7, align 4
  switch i32 %176, label %180 [
    i32 0, label %177
  ]

177:                                              ; preds = %172
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  store i32 0, i32* %7, align 4
  br label %180

180:                                              ; preds = %179, %172, %41, %30, %21
  %181 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #13
  %182 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #13
  %183 = load i32, i32* %7, align 4
  switch i32 %183, label %185 [
    i32 0, label %184
    i32 1, label %184
  ]

184:                                              ; preds = %180, %180
  ret void

185:                                              ; preds = %180
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_interceptFileFuncs(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %5 = load %23*, %23** %3, align 8
  %6 = getelementptr inbounds %23, %23* %5, i32 0, i32 4
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 2
  %8 = bitcast %7* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 1)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %25

18:                                               ; preds = %2
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 2
  %22 = bitcast %7* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %25

25:                                               ; preds = %18, %17
  %26 = phi i32 [ 0, %17 ], [ %24, %18 ]
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  br label %30

29:                                               ; preds = %25
  call void @phar_intercept_functions()
  br label %30

30:                                               ; preds = %29, %28
  ret void
}

declare dso_local void @phar_intercept_functions() #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_createDefaultStub(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %4*, align 8
  %13 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  store i8* null, i8** %5, align 8
  %15 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i8* null, i8** %6, align 8
  %16 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store i64 0, i64* %9, align 8
  %19 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  store i64 0, i64* %10, align 8
  %20 = load %23*, %23** %3, align 8
  %21 = getelementptr inbounds %23, %23* %20, i32 0, i32 4
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 2
  %23 = bitcast %7* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @42, i32 0, i32 0), i8** %5, i64* %9, i8** %6, i64* %10)
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %28

27:                                               ; preds = %2
  store i32 1, i32* %11, align 4
  br label %56

28:                                               ; preds = %2
  %29 = load i8*, i8** %5, align 8
  %30 = load i8*, i8** %6, align 8
  %31 = call %0* @phar_create_default_stub(i8* %29, i8* %30, i8** %7)
  store %0* %31, %0** %8, align 8
  %32 = load i8*, i8** %7, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = load %3*, %3** @3, align 8
  %36 = load i8*, i8** %7, align 8
  %37 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %35, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %36)
  %38 = load i8*, i8** %7, align 8
  call void @_efree(i8* %38)
  store i32 1, i32* %11, align 4
  br label %56

39:                                               ; preds = %28
  br label %40

40:                                               ; preds = %39
  %41 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = load %4*, %4** %4, align 8
  store %4* %42, %4** %12, align 8
  %43 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = load %0*, %0** %8, align 8
  store %0* %44, %0** %13, align 8
  %45 = load %0*, %0** %13, align 8
  %46 = load %4*, %4** %12, align 8
  %47 = getelementptr inbounds %4, %4* %46, i32 0, i32 0
  %48 = bitcast %5* %47 to %0**
  store %0* %45, %0** %48, align 8
  %49 = load %4*, %4** %12, align 8
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 1
  %51 = bitcast %6* %50 to i32*
  store i32 5126, i32* %51, align 8
  %52 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #13
  %53 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #13
  br label %54

54:                                               ; preds = %40
  br label %55

55:                                               ; preds = %54
  store i32 1, i32* %11, align 4
  br label %56

56:                                               ; preds = %55, %34, %27
  %57 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #13
  %58 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #13
  %59 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #13
  %60 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #13
  %61 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #13
  %62 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #13
  ret void
}

declare dso_local %0* @phar_create_default_stub(i8*, i8*, i8**) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_mapPhar(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  store i8* null, i8** %5, align 8
  %11 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  store i64 0, i64* %7, align 8
  %13 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  store i64 0, i64* %8, align 8
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  %16 = getelementptr inbounds %4, %4* %15, i32 0, i32 2
  %17 = bitcast %7* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i32 0, i32 0), i8** %5, i64* %7, i64* %8)
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  store i32 1, i32* %9, align 4
  br label %60

22:                                               ; preds = %2
  %23 = load i64, i64* %7, align 8
  %24 = icmp ugt i64 %23, 2147483647
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %22
  br label %32

32:                                               ; preds = %31
  %33 = load %4*, %4** %4, align 8
  %34 = getelementptr inbounds %4, %4* %33, i32 0, i32 1
  %35 = bitcast %6* %34 to i32*
  store i32 2, i32* %35, align 8
  br label %36

36:                                               ; preds = %32
  br label %37

37:                                               ; preds = %36
  store i32 1, i32* %9, align 4
  br label %60

38:                                               ; preds = %22
  call void @phar_request_initialize()
  br label %39

39:                                               ; preds = %38
  %40 = load i8*, i8** %5, align 8
  %41 = load i64, i64* %7, align 8
  %42 = trunc i64 %41 to i32
  %43 = call i32 @phar_open_executed_filename(i8* %40, i32 %42, i8** %6)
  %44 = icmp eq i32 %43, 0
  %45 = zext i1 %44 to i64
  %46 = select i1 %44, i32 3, i32 2
  %47 = load %4*, %4** %4, align 8
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 1
  %49 = bitcast %6* %48 to i32*
  store i32 %46, i32* %49, align 8
  br label %50

50:                                               ; preds = %39
  br label %51

51:                                               ; preds = %50
  %52 = load i8*, i8** %6, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = load %3*, %3** @3, align 8
  %56 = load i8*, i8** %6, align 8
  %57 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %55, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %56)
  %58 = load i8*, i8** %6, align 8
  call void @_efree(i8* %58)
  br label %59

59:                                               ; preds = %54, %51
  store i32 0, i32* %9, align 4
  br label %60

60:                                               ; preds = %59, %37, %21
  %61 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #13
  %62 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #13
  %63 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #13
  %64 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #13
  %65 = load i32, i32* %9, align 4
  switch i32 %65, label %67 [
    i32 0, label %66
    i32 1, label %66
  ]

66:                                               ; preds = %60, %60
  ret void

67:                                               ; preds = %60
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_loadPhar(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %11 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  store i8* null, i8** %6, align 8
  %13 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i64 0, i64* %9, align 8
  %16 = load %23*, %23** %3, align 8
  %17 = getelementptr inbounds %23, %23* %16, i32 0, i32 4
  %18 = getelementptr inbounds %4, %4* %17, i32 0, i32 2
  %19 = bitcast %7* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8** %5, i64* %8, i8** %6, i64* %9)
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  store i32 1, i32* %10, align 4
  br label %74

24:                                               ; preds = %2
  %25 = load i64, i64* %9, align 8
  %26 = icmp ugt i64 %25, 2147483647
  %27 = xor i1 %26, true
  %28 = xor i1 %27, true
  %29 = zext i1 %28 to i32
  %30 = sext i32 %29 to i64
  %31 = call i64 @llvm.expect.i64(i64 %30, i64 0)
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %24
  %34 = load i64, i64* %8, align 8
  %35 = icmp ugt i64 %34, 2147483647
  %36 = xor i1 %35, true
  %37 = xor i1 %36, true
  %38 = zext i1 %37 to i32
  %39 = sext i32 %38 to i64
  %40 = call i64 @llvm.expect.i64(i64 %39, i64 0)
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %33, %24
  br label %43

43:                                               ; preds = %42
  %44 = load %4*, %4** %4, align 8
  %45 = getelementptr inbounds %4, %4* %44, i32 0, i32 1
  %46 = bitcast %6* %45 to i32*
  store i32 2, i32* %46, align 8
  br label %47

47:                                               ; preds = %43
  br label %48

48:                                               ; preds = %47
  store i32 1, i32* %10, align 4
  br label %74

49:                                               ; preds = %33
  call void @phar_request_initialize()
  br label %50

50:                                               ; preds = %49
  %51 = load i8*, i8** %5, align 8
  %52 = load i64, i64* %8, align 8
  %53 = trunc i64 %52 to i32
  %54 = load i8*, i8** %6, align 8
  %55 = load i64, i64* %9, align 8
  %56 = trunc i64 %55 to i32
  %57 = call i32 @phar_open_from_filename(i8* %51, i32 %53, i8* %54, i32 %56, i32 8, %52** null, i8** %7)
  %58 = icmp eq i32 %57, 0
  %59 = zext i1 %58 to i64
  %60 = select i1 %58, i32 3, i32 2
  %61 = load %4*, %4** %4, align 8
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 1
  %63 = bitcast %6* %62 to i32*
  store i32 %60, i32* %63, align 8
  br label %64

64:                                               ; preds = %50
  br label %65

65:                                               ; preds = %64
  %66 = load i8*, i8** %7, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %65
  %69 = load %3*, %3** @3, align 8
  %70 = load i8*, i8** %7, align 8
  %71 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %69, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %70)
  %72 = load i8*, i8** %7, align 8
  call void @_efree(i8* %72)
  br label %73

73:                                               ; preds = %68, %65
  store i32 0, i32* %10, align 4
  br label %74

74:                                               ; preds = %73, %48, %23
  %75 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #13
  %76 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #13
  %77 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #13
  %78 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #13
  %79 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #13
  %80 = load i32, i32* %10, align 4
  switch i32 %80, label %82 [
    i32 0, label %81
    i32 1, label %81
  ]

81:                                               ; preds = %74, %74
  ret void

82:                                               ; preds = %74
  unreachable
}

declare dso_local i32 @phar_open_from_filename(i8*, i32, i8*, i32, i32, %52**, i8**) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_apiVersion(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %7 = load %23*, %23** %3, align 8
  %8 = getelementptr inbounds %23, %23* %7, i32 0, i32 4
  %9 = getelementptr inbounds %4, %4* %8, i32 0, i32 2
  %10 = bitcast %7* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = call i64 @llvm.expect.i64(i64 %16, i64 1)
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  br label %27

20:                                               ; preds = %2
  %21 = load %23*, %23** %3, align 8
  %22 = getelementptr inbounds %23, %23* %21, i32 0, i32 4
  %23 = getelementptr inbounds %4, %4* %22, i32 0, i32 2
  %24 = bitcast %7* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %27

27:                                               ; preds = %20, %19
  %28 = phi i32 [ 0, %19 ], [ %26, %20 ]
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  br label %49

31:                                               ; preds = %27
  br label %32

32:                                               ; preds = %31
  br label %33

33:                                               ; preds = %32
  %34 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = load %4*, %4** %4, align 8
  store %4* %35, %4** %5, align 8
  %36 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = call %0* @441(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @45, i32 0, i32 0), i64 5, i32 0)
  store %0* %37, %0** %6, align 8
  %38 = load %0*, %0** %6, align 8
  %39 = load %4*, %4** %5, align 8
  %40 = getelementptr inbounds %4, %4* %39, i32 0, i32 0
  %41 = bitcast %5* %40 to %0**
  store %0* %38, %0** %41, align 8
  %42 = load %4*, %4** %5, align 8
  %43 = getelementptr inbounds %4, %4* %42, i32 0, i32 1
  %44 = bitcast %6* %43 to i32*
  store i32 5126, i32* %44, align 8
  %45 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #13
  %46 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #13
  br label %47

47:                                               ; preds = %33
  br label %48

48:                                               ; preds = %47
  br label %49

49:                                               ; preds = %48, %30
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_canCompress(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #13
  store i64 0, i64* %5, align 8
  %8 = load %23*, %23** %3, align 8
  %9 = getelementptr inbounds %23, %23* %8, i32 0, i32 4
  %10 = getelementptr inbounds %4, %4* %9, i32 0, i32 2
  %11 = bitcast %7* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @46, i32 0, i32 0), i64* %5)
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i32 1, i32* %6, align 4
  br label %72

16:                                               ; preds = %2
  call void @phar_request_initialize()
  %17 = load i64, i64* %5, align 8
  switch i64 %17, label %52 [
    i64 4096, label %18
    i64 8192, label %35
  ]

18:                                               ; preds = %16
  %19 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %18
  br label %22

22:                                               ; preds = %21
  %23 = load %4*, %4** %4, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 1
  %25 = bitcast %6* %24 to i32*
  store i32 3, i32* %25, align 8
  br label %26

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %26
  store i32 1, i32* %6, align 4
  br label %72

28:                                               ; preds = %18
  br label %29

29:                                               ; preds = %28
  %30 = load %4*, %4** %4, align 8
  %31 = getelementptr inbounds %4, %4* %30, i32 0, i32 1
  %32 = bitcast %6* %31 to i32*
  store i32 2, i32* %32, align 8
  br label %33

33:                                               ; preds = %29
  br label %34

34:                                               ; preds = %33
  store i32 1, i32* %6, align 4
  br label %72

35:                                               ; preds = %16
  %36 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  br label %39

39:                                               ; preds = %38
  %40 = load %4*, %4** %4, align 8
  %41 = getelementptr inbounds %4, %4* %40, i32 0, i32 1
  %42 = bitcast %6* %41 to i32*
  store i32 3, i32* %42, align 8
  br label %43

43:                                               ; preds = %39
  br label %44

44:                                               ; preds = %43
  store i32 1, i32* %6, align 4
  br label %72

45:                                               ; preds = %35
  br label %46

46:                                               ; preds = %45
  %47 = load %4*, %4** %4, align 8
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 1
  %49 = bitcast %6* %48 to i32*
  store i32 2, i32* %49, align 8
  br label %50

50:                                               ; preds = %46
  br label %51

51:                                               ; preds = %50
  store i32 1, i32* %6, align 4
  br label %72

52:                                               ; preds = %16
  %53 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %55, %52
  br label %59

59:                                               ; preds = %58
  %60 = load %4*, %4** %4, align 8
  %61 = getelementptr inbounds %4, %4* %60, i32 0, i32 1
  %62 = bitcast %6* %61 to i32*
  store i32 3, i32* %62, align 8
  br label %63

63:                                               ; preds = %59
  br label %64

64:                                               ; preds = %63
  store i32 1, i32* %6, align 4
  br label %72

65:                                               ; preds = %55
  br label %66

66:                                               ; preds = %65
  %67 = load %4*, %4** %4, align 8
  %68 = getelementptr inbounds %4, %4* %67, i32 0, i32 1
  %69 = bitcast %6* %68 to i32*
  store i32 2, i32* %69, align 8
  br label %70

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %70
  store i32 1, i32* %6, align 4
  br label %72

72:                                               ; preds = %71, %64, %51, %44, %34, %27, %15
  %73 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_canWrite(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %5 = load %23*, %23** %3, align 8
  %6 = getelementptr inbounds %23, %23* %5, i32 0, i32 4
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 2
  %8 = bitcast %7* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 1)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %25

18:                                               ; preds = %2
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 2
  %22 = bitcast %7* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %25

25:                                               ; preds = %18, %17
  %26 = phi i32 [ 0, %17 ], [ %24, %18 ]
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  br label %40

29:                                               ; preds = %25
  br label %30

30:                                               ; preds = %29
  %31 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %32 = icmp ne i32 %31, 0
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i64
  %35 = select i1 %33, i32 3, i32 2
  %36 = load %4*, %4** %4, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 1
  %38 = bitcast %6* %37 to i32*
  store i32 %35, i32* %38, align 8
  br label %39

39:                                               ; preds = %30
  br label %40

40:                                               ; preds = %39, %28
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_isValidPharFilename(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #13
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #13
  store i8 1, i8* %10, align 1
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 2
  %20 = bitcast %7* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @47, i32 0, i32 0), i8** %5, i64* %7, i8* %10)
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  store i32 1, i32* %11, align 4
  br label %58

25:                                               ; preds = %2
  %26 = load i64, i64* %7, align 8
  %27 = icmp ugt i64 %26, 2147483647
  %28 = xor i1 %27, true
  %29 = xor i1 %28, true
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = call i64 @llvm.expect.i64(i64 %31, i64 0)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %25
  br label %35

35:                                               ; preds = %34
  %36 = load %4*, %4** %4, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 1
  %38 = bitcast %6* %37 to i32*
  store i32 2, i32* %38, align 8
  br label %39

39:                                               ; preds = %35
  br label %40

40:                                               ; preds = %39
  store i32 1, i32* %11, align 4
  br label %58

41:                                               ; preds = %25
  %42 = load i8, i8* %10, align 1
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %9, align 4
  br label %44

44:                                               ; preds = %41
  %45 = load i8*, i8** %5, align 8
  %46 = load i64, i64* %7, align 8
  %47 = trunc i64 %46 to i32
  %48 = load i32, i32* %9, align 4
  %49 = call i32 @phar_detect_phar_fname_ext(i8* %45, i32 %47, i8** %6, i32* %8, i32 %48, i32 2, i32 1)
  %50 = icmp eq i32 %49, 0
  %51 = zext i1 %50 to i64
  %52 = select i1 %50, i32 3, i32 2
  %53 = load %4*, %4** %4, align 8
  %54 = getelementptr inbounds %4, %4* %53, i32 0, i32 1
  %55 = bitcast %6* %54 to i32*
  store i32 %52, i32* %55, align 8
  br label %56

56:                                               ; preds = %44
  br label %57

57:                                               ; preds = %56
  store i32 0, i32* %11, align 4
  br label %58

58:                                               ; preds = %57, %40, %24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #13
  %59 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #13
  %60 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %60) #13
  %61 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #13
  %62 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #13
  %63 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #13
  %64 = load i32, i32* %11, align 4
  switch i32 %64, label %66 [
    i32 0, label %65
    i32 1, label %65
  ]

65:                                               ; preds = %58, %58
  ret void

66:                                               ; preds = %58
  unreachable
}

declare dso_local i32 @phar_detect_phar_fname_ext(i8*, i32, i8**, i32*, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar___construct(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %99*, align 8
  %19 = alloca %52*, align 8
  %20 = alloca %4*, align 8
  %21 = alloca %4, align 8
  %22 = alloca %4, align 8
  %23 = alloca i32, align 4
  %24 = alloca %4*, align 8
  %25 = alloca %0*, align 8
  %26 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %27 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  store i8* null, i8** %6, align 8
  %29 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i8* null, i8** %8, align 8
  %31 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i8* null, i8** %9, align 8
  %32 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store i64 0, i64* %12, align 8
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  %38 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i64 12288, i64* %16, align 8
  %39 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i64 0, i64* %17, align 8
  %40 = bitcast %99** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast %52** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %4** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = load %23*, %23** %3, align 8
  %44 = getelementptr inbounds %23, %23* %43, i32 0, i32 4
  %45 = call zeroext i8 @444(%4* %44)
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 8
  br i1 %47, label %48, label %51

48:                                               ; preds = %2
  %49 = load %23*, %23** %3, align 8
  %50 = getelementptr inbounds %23, %23* %49, i32 0, i32 4
  br label %52

51:                                               ; preds = %2
  br label %52

52:                                               ; preds = %51, %48
  %53 = phi %4* [ %50, %48 ], [ null, %51 ]
  store %4* %53, %4** %20, align 8
  %54 = bitcast %4* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %54) #13
  %55 = bitcast %4* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %55) #13
  %56 = load %4*, %4** %20, align 8
  %57 = getelementptr inbounds %4, %4* %56, i32 0, i32 0
  %58 = bitcast %5* %57 to %21**
  %59 = load %21*, %21** %58, align 8
  %60 = bitcast %21* %59 to i8*
  %61 = load %4*, %4** %20, align 8
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 0
  %63 = bitcast %5* %62 to %21**
  %64 = load %21*, %21** %63, align 8
  %65 = getelementptr inbounds %21, %21* %64, i32 0, i32 3
  %66 = load %22*, %22** %65, align 8
  %67 = getelementptr inbounds %22, %22* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  %70 = sub i64 0, %69
  %71 = getelementptr inbounds i8, i8* %60, i64 %70
  %72 = bitcast i8* %71 to %99*
  store %99* %72, %99** %18, align 8
  %73 = load %4*, %4** %20, align 8
  %74 = getelementptr inbounds %4, %4* %73, i32 0, i32 0
  %75 = bitcast %5* %74 to %21**
  %76 = load %21*, %21** %75, align 8
  %77 = getelementptr inbounds %21, %21* %76, i32 0, i32 2
  %78 = load %3*, %3** %77, align 8
  %79 = load %3*, %3** @48, align 8
  %80 = call zeroext i8 @instanceof_function(%3* %78, %3* %79)
  %81 = zext i8 %80 to i32
  store i32 %81, i32* %15, align 4
  %82 = load i32, i32* %15, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %94

84:                                               ; preds = %52
  %85 = load %23*, %23** %3, align 8
  %86 = getelementptr inbounds %23, %23* %85, i32 0, i32 4
  %87 = getelementptr inbounds %4, %4* %86, i32 0, i32 2
  %88 = bitcast %7* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @49, i32 0, i32 0), i8** %5, i64* %11, i64* %16, i8** %6, i64* %12, i64* %17)
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %92, label %93

92:                                               ; preds = %84
  store i32 1, i32* %23, align 4
  br label %380

93:                                               ; preds = %84
  br label %104

94:                                               ; preds = %52
  %95 = load %23*, %23** %3, align 8
  %96 = getelementptr inbounds %23, %23* %95, i32 0, i32 4
  %97 = getelementptr inbounds %4, %4* %96, i32 0, i32 2
  %98 = bitcast %7* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %99, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @50, i32 0, i32 0), i8** %5, i64* %11, i64* %16, i8** %6, i64* %12)
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %102, label %103

102:                                              ; preds = %94
  store i32 1, i32* %23, align 4
  br label %380

103:                                              ; preds = %94
  br label %104

104:                                              ; preds = %103, %93
  %105 = load i64, i64* %12, align 8
  %106 = icmp ugt i64 %105, 2147483647
  %107 = xor i1 %106, true
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = call i64 @llvm.expect.i64(i64 %110, i64 0)
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %122, label %113

113:                                              ; preds = %104
  %114 = load i64, i64* %11, align 8
  %115 = icmp ugt i64 %114, 2147483647
  %116 = xor i1 %115, true
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %113, %104
  br label %123

123:                                              ; preds = %122
  %124 = load %4*, %4** %4, align 8
  %125 = getelementptr inbounds %4, %4* %124, i32 0, i32 1
  %126 = bitcast %6* %125 to i32*
  store i32 2, i32* %126, align 8
  br label %127

127:                                              ; preds = %123
  br label %128

128:                                              ; preds = %127
  store i32 1, i32* %23, align 4
  br label %380

129:                                              ; preds = %113
  %130 = load %99*, %99** %18, align 8
  %131 = bitcast %99* %130 to %52**
  %132 = load %52*, %52** %131, align 8
  %133 = icmp ne %52* %132, null
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %136 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %135, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @51, i32 0, i32 0))
  store i32 1, i32* %23, align 4
  br label %380

137:                                              ; preds = %129
  %138 = load i8*, i8** %5, align 8
  store i8* %138, i8** %10, align 8
  %139 = load i8*, i8** %5, align 8
  %140 = load i64, i64* %11, align 8
  %141 = trunc i64 %140 to i32
  %142 = load i32, i32* %15, align 4
  %143 = icmp ne i32 %142, 0
  %144 = xor i1 %143, true
  %145 = zext i1 %144 to i32
  %146 = call i32 @phar_split_fname(i8* %139, i32 %141, i8** %8, i32* %13, i8** %9, i32* %14, i32 %145, i32 2)
  %147 = icmp eq i32 0, %146
  br i1 %147, label %148, label %152

148:                                              ; preds = %137
  %149 = load i8*, i8** %8, align 8
  store i8* %149, i8** %5, align 8
  %150 = load i32, i32* %13, align 4
  %151 = sext i32 %150 to i64
  store i64 %151, i64* %11, align 8
  br label %152

152:                                              ; preds = %148, %137
  %153 = load i8*, i8** %5, align 8
  %154 = load i64, i64* %11, align 8
  %155 = trunc i64 %154 to i32
  %156 = load i8*, i8** %6, align 8
  %157 = load i64, i64* %12, align 8
  %158 = trunc i64 %157 to i32
  %159 = load i32, i32* %15, align 4
  %160 = call i32 @phar_open_or_create_filename(i8* %153, i32 %155, i8* %156, i32 %158, i32 %159, i32 8, %52** %19, i8** %7)
  %161 = icmp eq i32 %160, -1
  br i1 %161, label %162, label %190

162:                                              ; preds = %152
  %163 = load i8*, i8** %5, align 8
  %164 = load i8*, i8** %8, align 8
  %165 = icmp eq i8* %163, %164
  br i1 %165, label %166, label %173

166:                                              ; preds = %162
  %167 = load i8*, i8** %5, align 8
  %168 = load i8*, i8** %10, align 8
  %169 = icmp ne i8* %167, %168
  br i1 %169, label %170, label %173

170:                                              ; preds = %166
  %171 = load i8*, i8** %8, align 8
  call void @_efree(i8* %171)
  %172 = load i8*, i8** %10, align 8
  store i8* %172, i8** %5, align 8
  br label %173

173:                                              ; preds = %170, %166, %162
  %174 = load i8*, i8** %9, align 8
  %175 = icmp ne i8* %174, null
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = load i8*, i8** %9, align 8
  call void @_efree(i8* %177)
  br label %178

178:                                              ; preds = %176, %173
  %179 = load i8*, i8** %7, align 8
  %180 = icmp ne i8* %179, null
  br i1 %180, label %181, label %186

181:                                              ; preds = %178
  %182 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %183 = load i8*, i8** %7, align 8
  %184 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %182, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %183)
  %185 = load i8*, i8** %7, align 8
  call void @_efree(i8* %185)
  br label %189

186:                                              ; preds = %178
  %187 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %188 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %187, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @52, i32 0, i32 0))
  br label %189

189:                                              ; preds = %186, %181
  store i32 1, i32* %23, align 4
  br label %380

190:                                              ; preds = %152
  %191 = load i32, i32* %15, align 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %222

193:                                              ; preds = %190
  %194 = load %52*, %52** %19, align 8
  %195 = getelementptr inbounds %52, %52* %194, i32 0, i32 24
  %196 = load i16, i16* %195, align 8
  %197 = lshr i16 %196, 6
  %198 = and i16 %197, 1
  %199 = zext i16 %198 to i32
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %222

201:                                              ; preds = %193
  %202 = load %52*, %52** %19, align 8
  %203 = getelementptr inbounds %52, %52* %202, i32 0, i32 24
  %204 = load i16, i16* %203, align 8
  %205 = lshr i16 %204, 3
  %206 = and i16 %205, 1
  %207 = zext i16 %206 to i32
  %208 = icmp ne i32 %207, 0
  br i1 %208, label %209, label %222

209:                                              ; preds = %201
  %210 = load i64, i64* %17, align 8
  %211 = icmp eq i64 %210, 3
  br i1 %211, label %212, label %222

212:                                              ; preds = %209
  %213 = load %52*, %52** %19, align 8
  %214 = getelementptr inbounds %52, %52* %213, i32 0, i32 24
  %215 = load i16, i16* %214, align 8
  %216 = and i16 %215, -33
  %217 = or i16 %216, 32
  store i16 %217, i16* %214, align 8
  %218 = load %52*, %52** %19, align 8
  %219 = getelementptr inbounds %52, %52* %218, i32 0, i32 24
  %220 = load i16, i16* %219, align 8
  %221 = and i16 %220, -65
  store i16 %221, i16* %219, align 8
  br label %222

222:                                              ; preds = %212, %209, %201, %193, %190
  %223 = load i8*, i8** %5, align 8
  %224 = load i8*, i8** %8, align 8
  %225 = icmp eq i8* %223, %224
  br i1 %225, label %226, label %229

226:                                              ; preds = %222
  %227 = load i8*, i8** %8, align 8
  call void @_efree(i8* %227)
  %228 = load i8*, i8** %10, align 8
  store i8* %228, i8** %5, align 8
  br label %229

229:                                              ; preds = %226, %222
  %230 = load i32, i32* %15, align 4
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %240

232:                                              ; preds = %229
  %233 = load %52*, %52** %19, align 8
  %234 = getelementptr inbounds %52, %52* %233, i32 0, i32 24
  %235 = load i16, i16* %234, align 8
  %236 = lshr i16 %235, 7
  %237 = and i16 %236, 1
  %238 = zext i16 %237 to i32
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %251

240:                                              ; preds = %232, %229
  %241 = load i32, i32* %15, align 4
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %262, label %243

243:                                              ; preds = %240
  %244 = load %52*, %52** %19, align 8
  %245 = getelementptr inbounds %52, %52* %244, i32 0, i32 24
  %246 = load i16, i16* %245, align 8
  %247 = lshr i16 %246, 7
  %248 = and i16 %247, 1
  %249 = zext i16 %248 to i32
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %251, label %262

251:                                              ; preds = %243, %232
  %252 = load i32, i32* %15, align 4
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %251
  %255 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %256 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %255, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @53, i32 0, i32 0))
  br label %260

257:                                              ; preds = %251
  %258 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %259 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %258, i64 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @54, i32 0, i32 0))
  br label %260

260:                                              ; preds = %257, %254
  %261 = load i8*, i8** %9, align 8
  call void @_efree(i8* %261)
  store i32 1, i32* %23, align 4
  br label %380

262:                                              ; preds = %243, %240
  %263 = load %52*, %52** %19, align 8
  %264 = getelementptr inbounds %52, %52* %263, i32 0, i32 24
  %265 = load i16, i16* %264, align 8
  %266 = lshr i16 %265, 7
  %267 = and i16 %266, 1
  %268 = zext i16 %267 to i32
  store i32 %268, i32* %15, align 4
  %269 = load %52*, %52** %19, align 8
  %270 = getelementptr inbounds %52, %52* %269, i32 0, i32 24
  %271 = load i16, i16* %270, align 8
  %272 = lshr i16 %271, 8
  %273 = and i16 %272, 1
  %274 = zext i16 %273 to i32
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %281, label %276

276:                                              ; preds = %262
  %277 = load %52*, %52** %19, align 8
  %278 = getelementptr inbounds %52, %52* %277, i32 0, i32 17
  %279 = load i32, i32* %278, align 8
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %278, align 8
  br label %281

281:                                              ; preds = %276, %262
  %282 = load %52*, %52** %19, align 8
  %283 = load %99*, %99** %18, align 8
  %284 = bitcast %99* %283 to %52**
  store %52* %282, %52** %284, align 8
  %285 = load %99*, %99** %18, align 8
  %286 = bitcast %99* %285 to %77*
  %287 = getelementptr inbounds %77, %77* %286, i32 0, i32 1
  store %76* @55, %76** %287, align 8
  %288 = load i8*, i8** %9, align 8
  %289 = icmp ne i8* %288, null
  br i1 %289, label %290, label %297

290:                                              ; preds = %281
  %291 = load %52*, %52** %19, align 8
  %292 = getelementptr inbounds %52, %52* %291, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = load i8*, i8** %9, align 8
  %295 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %5, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @56, i32 0, i32 0), i8* %293, i8* %294)
  store i64 %295, i64* %11, align 8
  %296 = load i8*, i8** %9, align 8
  call void @_efree(i8* %296)
  br label %302

297:                                              ; preds = %281
  %298 = load %52*, %52** %19, align 8
  %299 = getelementptr inbounds %52, %52* %298, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %5, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @57, i32 0, i32 0), i8* %300)
  store i64 %301, i64* %11, align 8
  br label %302

302:                                              ; preds = %297, %290
  br label %303

303:                                              ; preds = %302
  br label %304

304:                                              ; preds = %303
  %305 = bitcast %4** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %305) #13
  store %4* %21, %4** %24, align 8
  %306 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %306) #13
  %307 = load i8*, i8** %5, align 8
  %308 = load i64, i64* %11, align 8
  %309 = call %0* @441(i8* %307, i64 %308, i32 0)
  store %0* %309, %0** %25, align 8
  %310 = load %0*, %0** %25, align 8
  %311 = load %4*, %4** %24, align 8
  %312 = getelementptr inbounds %4, %4* %311, i32 0, i32 0
  %313 = bitcast %5* %312 to %0**
  store %0* %310, %0** %313, align 8
  %314 = load %4*, %4** %24, align 8
  %315 = getelementptr inbounds %4, %4* %314, i32 0, i32 1
  %316 = bitcast %6* %315 to i32*
  store i32 5126, i32* %316, align 8
  %317 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %317) #13
  %318 = bitcast %4** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %318) #13
  br label %319

319:                                              ; preds = %304
  br label %320

320:                                              ; preds = %319
  br label %321

321:                                              ; preds = %320
  br label %322

322:                                              ; preds = %321
  %323 = bitcast %4** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %323) #13
  store %4* %22, %4** %26, align 8
  %324 = load i64, i64* %16, align 8
  %325 = load %4*, %4** %26, align 8
  %326 = getelementptr inbounds %4, %4* %325, i32 0, i32 0
  %327 = bitcast %5* %326 to i64*
  store i64 %324, i64* %327, align 8
  %328 = load %4*, %4** %26, align 8
  %329 = getelementptr inbounds %4, %4* %328, i32 0, i32 1
  %330 = bitcast %6* %329 to i32*
  store i32 4, i32* %330, align 8
  %331 = bitcast %4** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #13
  %332 = load %4*, %4** %20, align 8
  %333 = load %4*, %4** %20, align 8
  %334 = getelementptr inbounds %4, %4* %333, i32 0, i32 0
  %335 = bitcast %5* %334 to %21**
  %336 = load %21*, %21** %335, align 8
  %337 = getelementptr inbounds %21, %21* %336, i32 0, i32 2
  %338 = load %3*, %3** %337, align 8
  %339 = load %3*, %3** @spl_ce_RecursiveDirectoryIterator, align 8
  %340 = getelementptr inbounds %3, %3* %339, i32 0, i32 13
  %341 = call %4* @zend_call_method(%4* %332, %3* %338, %11** %340, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), i64 11, %4* null, i32 2, %4* %21, %4* %22)
  call void @_zval_ptr_dtor(%4* %21)
  %342 = load %52*, %52** %19, align 8
  %343 = getelementptr inbounds %52, %52* %342, i32 0, i32 24
  %344 = load i16, i16* %343, align 8
  %345 = lshr i16 %344, 8
  %346 = and i16 %345, 1
  %347 = zext i16 %346 to i32
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %362, label %349

349:                                              ; preds = %322
  %350 = load i32, i32* %15, align 4
  %351 = load %99*, %99** %18, align 8
  %352 = bitcast %99* %351 to %52**
  %353 = load %52*, %52** %352, align 8
  %354 = getelementptr inbounds %52, %52* %353, i32 0, i32 24
  %355 = trunc i32 %350 to i16
  %356 = load i16, i16* %354, align 8
  %357 = and i16 %355, 1
  %358 = shl i16 %357, 7
  %359 = and i16 %356, -129
  %360 = or i16 %359, %358
  store i16 %360, i16* %354, align 8
  %361 = zext i16 %357 to i32
  br label %374

362:                                              ; preds = %322
  %363 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %364 = icmp ne %21* %363, null
  br i1 %364, label %373, label %365

365:                                              ; preds = %362
  %366 = load %99*, %99** %18, align 8
  %367 = bitcast %99* %366 to %52**
  %368 = load %52*, %52** %367, align 8
  %369 = bitcast %52* %368 to i8*
  %370 = load %99*, %99** %18, align 8
  %371 = bitcast %99* %370 to i8*
  %372 = call i8* @451(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 0), i8* %369, i64 8, i8* %371)
  br label %373

373:                                              ; preds = %365, %362
  br label %374

374:                                              ; preds = %373, %349
  %375 = load %3*, %3** @59, align 8
  %376 = load %99*, %99** %18, align 8
  %377 = bitcast %99* %376 to %77*
  %378 = getelementptr inbounds %77, %77* %377, i32 0, i32 10
  store %3* %375, %3** %378, align 8
  %379 = load i8*, i8** %5, align 8
  call void @_efree(i8* %379)
  store i32 0, i32* %23, align 4
  br label %380

380:                                              ; preds = %374, %260, %189, %134, %128, %102, %92
  %381 = bitcast %4* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %381) #13
  %382 = bitcast %4* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %382) #13
  %383 = bitcast %4** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %383) #13
  %384 = bitcast %52** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %384) #13
  %385 = bitcast %99** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %385) #13
  %386 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %386) #13
  %387 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #13
  %388 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %388) #13
  %389 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %389) #13
  %390 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %390) #13
  %391 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %391) #13
  %392 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %392) #13
  %393 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %393) #13
  %394 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394) #13
  %395 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %395) #13
  %396 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %396) #13
  %397 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %397) #13
  %398 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %398) #13
  %399 = load i32, i32* %23, align 4
  switch i32 %399, label %401 [
    i32 0, label %400
    i32 1, label %400
  ]

400:                                              ; preds = %380, %380
  ret void

401:                                              ; preds = %380
  unreachable
}

declare dso_local zeroext i8 @instanceof_function(%3*, %3*) #2

declare dso_local i32 @zend_parse_parameters_throw(i32, i8*, ...) #2

declare dso_local i32 @phar_open_or_create_filename(i8*, i32, i8*, i32, i32, i32, %52**, i8**) #2

declare dso_local %4* @zend_call_method(%4*, %3*, %11**, i8*, i64, %4*, i32, %4*, %4*) #2

declare dso_local void @_zval_ptr_dtor(%4*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @451(%8* %0, i8* %1, i64 %2, i8* %3) #4 {
  %5 = alloca i8*, align 8
  %6 = alloca %8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %4, align 8
  %11 = alloca %4*, align 8
  %12 = alloca i32, align 4
  store %8* %0, %8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %13 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #13
  %14 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  br label %15

15:                                               ; preds = %4
  %16 = load i8*, i8** %9, align 8
  %17 = getelementptr inbounds %4, %4* %10, i32 0, i32 0
  %18 = bitcast %5* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds %4, %4* %10, i32 0, i32 1
  %20 = bitcast %6* %19 to i32*
  store i32 17, i32* %20, align 8
  br label %21

21:                                               ; preds = %15
  br label %22

22:                                               ; preds = %21
  %23 = load %8*, %8** %6, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = call %4* @_zend_hash_str_add(%8* %23, i8* %24, i64 %25, %4* %10)
  store %4* %26, %4** %11, align 8
  %27 = load %4*, %4** %11, align 8
  %28 = icmp ne %4* %27, null
  br i1 %28, label %29, label %49

29:                                               ; preds = %22
  br label %30

30:                                               ; preds = %29
  %31 = load %4*, %4** %11, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ne i8* %34, null
  %36 = xor i1 %35, true
  %37 = zext i1 %36 to i32
  %38 = sext i32 %37 to i64
  %39 = call i64 @llvm.expect.i64(i64 %38, i64 0)
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %30
  unreachable

42:                                               ; preds = %30
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = load %4*, %4** %11, align 8
  %46 = getelementptr inbounds %4, %4* %45, i32 0, i32 0
  %47 = bitcast %5* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %50

49:                                               ; preds = %22
  store i8* null, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %50

50:                                               ; preds = %49, %44
  %51 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #13
  %52 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %52) #13
  %53 = load i8*, i8** %5, align 8
  ret i8* %53
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getSupportedSignatures(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %5 = load %23*, %23** %3, align 8
  %6 = getelementptr inbounds %23, %23* %5, i32 0, i32 4
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 2
  %8 = bitcast %7* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 1)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %25

18:                                               ; preds = %2
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 2
  %22 = bitcast %7* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %25

25:                                               ; preds = %18, %17
  %26 = phi i32 [ 0, %17 ], [ %24, %18 ]
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  br label %45

29:                                               ; preds = %25
  %30 = load %4*, %4** %4, align 8
  %31 = call i32 @_array_init(%4* %30, i32 0)
  %32 = load %4*, %4** %4, align 8
  %33 = call i32 @add_next_index_stringl(%4* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @60, i32 0, i32 0), i64 3)
  %34 = load %4*, %4** %4, align 8
  %35 = call i32 @add_next_index_stringl(%4* %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @61, i32 0, i32 0), i64 5)
  %36 = load %4*, %4** %4, align 8
  %37 = call i32 @add_next_index_stringl(%4* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @62, i32 0, i32 0), i64 7)
  %38 = load %4*, %4** %4, align 8
  %39 = call i32 @add_next_index_stringl(%4* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @63, i32 0, i32 0), i64 7)
  %40 = call zeroext i8 @zend_hash_str_exists(%8* @module_registry, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @64, i32 0, i32 0), i64 7)
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %29
  %43 = load %4*, %4** %4, align 8
  %44 = call i32 @add_next_index_stringl(%4* %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @65, i32 0, i32 0), i64 7)
  br label %45

45:                                               ; preds = %28, %42, %29
  ret void
}

declare dso_local i32 @_array_init(%4*, i32) #2

declare dso_local i32 @add_next_index_stringl(%4*, i8*, i64) #2

declare dso_local zeroext i8 @zend_hash_str_exists(%8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getSupportedCompression(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %5 = load %23*, %23** %3, align 8
  %6 = getelementptr inbounds %23, %23* %5, i32 0, i32 4
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 2
  %8 = bitcast %7* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 1)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %25

18:                                               ; preds = %2
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 2
  %22 = bitcast %7* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %25

25:                                               ; preds = %18, %17
  %26 = phi i32 [ 0, %17 ], [ %24, %18 ]
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  br label %43

29:                                               ; preds = %25
  %30 = load %4*, %4** %4, align 8
  %31 = call i32 @_array_init(%4* %30, i32 0)
  call void @phar_request_initialize()
  %32 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = load %4*, %4** %4, align 8
  %36 = call i32 @add_next_index_stringl(%4* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @66, i32 0, i32 0), i64 2)
  br label %37

37:                                               ; preds = %34, %29
  %38 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load %4*, %4** %4, align 8
  %42 = call i32 @add_next_index_stringl(%4* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @67, i32 0, i32 0), i64 5)
  br label %43

43:                                               ; preds = %28, %40, %37
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_unlinkArchive(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %52*, align 8
  %15 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #13
  %23 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  %24 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  %25 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load %23*, %23** %3, align 8
  %27 = getelementptr inbounds %23, %23* %26, i32 0, i32 4
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 2
  %29 = bitcast %7* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %10)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %40

33:                                               ; preds = %2
  br label %34

34:                                               ; preds = %33
  %35 = load %4*, %4** %4, align 8
  %36 = getelementptr inbounds %4, %4* %35, i32 0, i32 1
  %37 = bitcast %6* %36 to i32*
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38
  store i32 1, i32* %15, align 4
  br label %160

40:                                               ; preds = %2
  %41 = load i64, i64* %10, align 8
  %42 = icmp ugt i64 %41, 2147483647
  %43 = xor i1 %42, true
  %44 = xor i1 %43, true
  %45 = zext i1 %44 to i32
  %46 = sext i32 %45 to i64
  %47 = call i64 @llvm.expect.i64(i64 %46, i64 0)
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %40
  br label %50

50:                                               ; preds = %49
  %51 = load %4*, %4** %4, align 8
  %52 = getelementptr inbounds %4, %4* %51, i32 0, i32 1
  %53 = bitcast %6* %52 to i32*
  store i32 2, i32* %53, align 8
  br label %54

54:                                               ; preds = %50
  br label %55

55:                                               ; preds = %54
  store i32 1, i32* %15, align 4
  br label %160

56:                                               ; preds = %40
  %57 = load i64, i64* %10, align 8
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = load %3*, %3** @3, align 8
  %61 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %60, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @69, i32 0, i32 0))
  store i32 1, i32* %15, align 4
  br label %160

62:                                               ; preds = %56
  %63 = load i8*, i8** %5, align 8
  %64 = load i64, i64* %10, align 8
  %65 = trunc i64 %64 to i32
  %66 = call i32 @phar_open_from_filename(i8* %63, i32 %65, i8* null, i32 0, i32 8, %52** %14, i8** %6)
  %67 = icmp eq i32 -1, %66
  br i1 %67, label %68, label %82

68:                                               ; preds = %62
  %69 = load i8*, i8** %6, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %71, label %77

71:                                               ; preds = %68
  %72 = load %3*, %3** @3, align 8
  %73 = load i8*, i8** %5, align 8
  %74 = load i8*, i8** %6, align 8
  %75 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %72, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @70, i32 0, i32 0), i8* %73, i8* %74)
  %76 = load i8*, i8** %6, align 8
  call void @_efree(i8* %76)
  br label %81

77:                                               ; preds = %68
  %78 = load %3*, %3** @3, align 8
  %79 = load i8*, i8** %5, align 8
  %80 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %78, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @71, i32 0, i32 0), i8* %79)
  br label %81

81:                                               ; preds = %77, %71
  store i32 1, i32* %15, align 4
  br label %160

82:                                               ; preds = %62
  %83 = call i8* @zend_get_executed_filename()
  store i8* %83, i8** %7, align 8
  %84 = load i8*, i8** %7, align 8
  %85 = call i64 @strlen(i8* %84) #14
  %86 = trunc i64 %85 to i32
  store i32 %86, i32* %11, align 4
  %87 = load i32, i32* %11, align 4
  %88 = icmp sgt i32 %87, 7
  br i1 %88, label %89, label %119

89:                                               ; preds = %82
  %90 = load i8*, i8** %7, align 8
  %91 = call i32 @memcmp(i8* %90, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i64 7) #14
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %119, label %93

93:                                               ; preds = %89
  %94 = load i8*, i8** %7, align 8
  %95 = load i32, i32* %11, align 4
  %96 = call i32 @phar_split_fname(i8* %94, i32 %95, i8** %8, i32* %12, i8** %9, i32* %13, i32 2, i32 0)
  %97 = icmp eq i32 0, %96
  br i1 %97, label %98, label %119

98:                                               ; preds = %93
  %99 = load i32, i32* %12, align 4
  %100 = sext i32 %99 to i64
  %101 = load i64, i64* %10, align 8
  %102 = icmp eq i64 %100, %101
  br i1 %102, label %103, label %116

103:                                              ; preds = %98
  %104 = load i8*, i8** %8, align 8
  %105 = load i8*, i8** %5, align 8
  %106 = load i32, i32* %12, align 4
  %107 = sext i32 %106 to i64
  %108 = call i32 @memcmp(i8* %104, i8* %105, i64 %107) #14
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %103
  %111 = load %3*, %3** @3, align 8
  %112 = load i8*, i8** %5, align 8
  %113 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %111, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @72, i32 0, i32 0), i8* %112)
  %114 = load i8*, i8** %8, align 8
  call void @_efree(i8* %114)
  %115 = load i8*, i8** %9, align 8
  call void @_efree(i8* %115)
  store i32 1, i32* %15, align 4
  br label %160

116:                                              ; preds = %103, %98
  %117 = load i8*, i8** %8, align 8
  call void @_efree(i8* %117)
  %118 = load i8*, i8** %9, align 8
  call void @_efree(i8* %118)
  br label %119

119:                                              ; preds = %116, %93, %89, %82
  %120 = load %52*, %52** %14, align 8
  %121 = getelementptr inbounds %52, %52* %120, i32 0, i32 24
  %122 = load i16, i16* %121, align 8
  %123 = lshr i16 %122, 8
  %124 = and i16 %123, 1
  %125 = zext i16 %124 to i32
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  %128 = load %3*, %3** @3, align 8
  %129 = load i8*, i8** %5, align 8
  %130 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %128, i64 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @73, i32 0, i32 0), i8* %129)
  store i32 1, i32* %15, align 4
  br label %160

131:                                              ; preds = %119
  %132 = load %52*, %52** %14, align 8
  %133 = getelementptr inbounds %52, %52* %132, i32 0, i32 17
  %134 = load i32, i32* %133, align 8
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = load %3*, %3** @3, align 8
  %138 = load i8*, i8** %5, align 8
  %139 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %137, i64 0, i8* getelementptr inbounds ([137 x i8], [137 x i8]* @74, i32 0, i32 0), i8* %138)
  store i32 1, i32* %15, align 4
  br label %160

140:                                              ; preds = %131
  %141 = load %52*, %52** %14, align 8
  %142 = getelementptr inbounds %52, %52* %141, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = load %52*, %52** %14, align 8
  %145 = getelementptr inbounds %52, %52* %144, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = sext i32 %146 to i64
  %148 = call noalias i8* @_estrndup(i8* %143, i64 %147)
  store i8* %148, i8** %5, align 8
  store %52* null, %52** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 49), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 47), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 45), align 8
  %149 = load %52*, %52** %14, align 8
  %150 = call i32 @phar_archive_delref(%52* %149)
  %151 = load i8*, i8** %5, align 8
  %152 = call i32 @unlink(i8* %151) #13
  %153 = load i8*, i8** %5, align 8
  call void @_efree(i8* %153)
  br label %154

154:                                              ; preds = %140
  %155 = load %4*, %4** %4, align 8
  %156 = getelementptr inbounds %4, %4* %155, i32 0, i32 1
  %157 = bitcast %6* %156 to i32*
  store i32 3, i32* %157, align 8
  br label %158

158:                                              ; preds = %154
  br label %159

159:                                              ; preds = %158
  store i32 1, i32* %15, align 4
  br label %160

160:                                              ; preds = %159, %136, %127, %110, %81, %59, %55, %39
  %161 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #13
  %162 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %162) #13
  %163 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %163) #13
  %164 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %164) #13
  %165 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  %166 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #13
  %167 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #13
  %168 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #13
  %169 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #13
  %170 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #13
  ret void
}

declare dso_local i32 @phar_archive_delref(%52*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #8

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar___destruct(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %7 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #13
  %8 = load %23*, %23** %3, align 8
  %9 = getelementptr inbounds %23, %23* %8, i32 0, i32 4
  %10 = call zeroext i8 @444(%4* %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 8
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  br label %17

16:                                               ; preds = %2
  br label %17

17:                                               ; preds = %16, %13
  %18 = phi %4* [ %15, %13 ], [ null, %16 ]
  store %4* %18, %4** %5, align 8
  %19 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = load %4*, %4** %5, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 0
  %22 = bitcast %5* %21 to %21**
  %23 = load %21*, %21** %22, align 8
  %24 = bitcast %21* %23 to i8*
  %25 = load %4*, %4** %5, align 8
  %26 = getelementptr inbounds %4, %4* %25, i32 0, i32 0
  %27 = bitcast %5* %26 to %21**
  %28 = load %21*, %21** %27, align 8
  %29 = getelementptr inbounds %21, %21* %28, i32 0, i32 3
  %30 = load %22*, %22** %29, align 8
  %31 = getelementptr inbounds %22, %22* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = sub i64 0, %33
  %35 = getelementptr inbounds i8, i8* %24, i64 %34
  %36 = bitcast i8* %35 to %99*
  store %99* %36, %99** %6, align 8
  %37 = load %99*, %99** %6, align 8
  %38 = bitcast %99* %37 to %52**
  %39 = load %52*, %52** %38, align 8
  %40 = icmp ne %52* %39, null
  br i1 %40, label %41, label %57

41:                                               ; preds = %17
  %42 = load %99*, %99** %6, align 8
  %43 = bitcast %99* %42 to %52**
  %44 = load %52*, %52** %43, align 8
  %45 = getelementptr inbounds %52, %52* %44, i32 0, i32 24
  %46 = load i16, i16* %45, align 8
  %47 = lshr i16 %46, 8
  %48 = and i16 %47, 1
  %49 = zext i16 %48 to i32
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %41
  %52 = load %99*, %99** %6, align 8
  %53 = bitcast %99* %52 to %52**
  %54 = load %52*, %52** %53, align 8
  %55 = bitcast %52* %54 to i8*
  %56 = call i32 @zend_hash_str_del(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 0), i8* %55, i64 8)
  br label %57

57:                                               ; preds = %51, %41, %17
  %58 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #13
  %59 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #13
  ret void
}

declare dso_local i32 @zend_hash_str_del(%8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_buildFromDirectory(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca %4, align 8
  %12 = alloca %4, align 8
  %13 = alloca %4, align 8
  %14 = alloca %4, align 8
  %15 = alloca %4, align 8
  %16 = alloca %100, align 8
  %17 = alloca %4*, align 8
  %18 = alloca %99*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %4*, align 8
  %21 = alloca %0*, align 8
  %22 = alloca %4*, align 8
  %23 = alloca %4*, align 8
  %24 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %25 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i8* null, i8** %7, align 8
  %28 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  store i64 0, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #13
  store i8 0, i8* %10, align 1
  %30 = bitcast %4* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %30) #13
  %31 = bitcast %4* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %31) #13
  %32 = bitcast %4* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %32) #13
  %33 = bitcast %4* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %33) #13
  %34 = bitcast %4* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %34) #13
  %35 = bitcast %100* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* %35) #13
  %36 = bitcast %4** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = load %23*, %23** %3, align 8
  %38 = getelementptr inbounds %23, %23* %37, i32 0, i32 4
  %39 = call zeroext i8 @444(%4* %38)
  %40 = zext i8 %39 to i32
  %41 = icmp eq i32 %40, 8
  br i1 %41, label %42, label %45

42:                                               ; preds = %2
  %43 = load %23*, %23** %3, align 8
  %44 = getelementptr inbounds %23, %23* %43, i32 0, i32 4
  br label %46

45:                                               ; preds = %2
  br label %46

46:                                               ; preds = %45, %42
  %47 = phi %4* [ %44, %42 ], [ null, %45 ]
  store %4* %47, %4** %17, align 8
  %48 = bitcast %99** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  %49 = load %4*, %4** %17, align 8
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 0
  %51 = bitcast %5* %50 to %21**
  %52 = load %21*, %21** %51, align 8
  %53 = bitcast %21* %52 to i8*
  %54 = load %4*, %4** %17, align 8
  %55 = getelementptr inbounds %4, %4* %54, i32 0, i32 0
  %56 = bitcast %5* %55 to %21**
  %57 = load %21*, %21** %56, align 8
  %58 = getelementptr inbounds %21, %21* %57, i32 0, i32 3
  %59 = load %22*, %22** %58, align 8
  %60 = getelementptr inbounds %22, %22* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = sub i64 0, %62
  %64 = getelementptr inbounds i8, i8* %53, i64 %63
  %65 = bitcast i8* %64 to %99*
  store %99* %65, %99** %18, align 8
  %66 = load %99*, %99** %18, align 8
  %67 = bitcast %99* %66 to %52**
  %68 = load %52*, %52** %67, align 8
  %69 = icmp ne %52* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %46
  %71 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %72 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %71, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %375

73:                                               ; preds = %46
  %74 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %89

76:                                               ; preds = %73
  %77 = load %99*, %99** %18, align 8
  %78 = bitcast %99* %77 to %52**
  %79 = load %52*, %52** %78, align 8
  %80 = getelementptr inbounds %52, %52* %79, i32 0, i32 24
  %81 = load i16, i16* %80, align 8
  %82 = lshr i16 %81, 7
  %83 = and i16 %82, 1
  %84 = zext i16 %83 to i32
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %76
  %87 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %88 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %87, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @76, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %375

89:                                               ; preds = %76, %73
  %90 = load %23*, %23** %3, align 8
  %91 = getelementptr inbounds %23, %23* %90, i32 0, i32 4
  %92 = getelementptr inbounds %4, %4* %91, i32 0, i32 2
  %93 = bitcast %7* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %94, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @77, i32 0, i32 0), i8** %5, i64* %8, i8** %7, i64* %9)
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %97, label %104

97:                                               ; preds = %89
  br label %98

98:                                               ; preds = %97
  %99 = load %4*, %4** %4, align 8
  %100 = getelementptr inbounds %4, %4* %99, i32 0, i32 1
  %101 = bitcast %6* %100 to i32*
  store i32 2, i32* %101, align 8
  br label %102

102:                                              ; preds = %98
  br label %103

103:                                              ; preds = %102
  store i32 1, i32* %19, align 4
  br label %375

104:                                              ; preds = %89
  %105 = load i64, i64* %8, align 8
  %106 = icmp ugt i64 %105, 4294967295
  %107 = xor i1 %106, true
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = call i64 @llvm.expect.i64(i64 %110, i64 0)
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %104
  br label %114

114:                                              ; preds = %113
  %115 = load %4*, %4** %4, align 8
  %116 = getelementptr inbounds %4, %4* %115, i32 0, i32 1
  %117 = bitcast %6* %116 to i32*
  store i32 2, i32* %117, align 8
  br label %118

118:                                              ; preds = %114
  br label %119

119:                                              ; preds = %118
  store i32 1, i32* %19, align 4
  br label %375

120:                                              ; preds = %104
  %121 = load %3*, %3** @spl_ce_RecursiveDirectoryIterator, align 8
  %122 = call i32 @_object_init_ex(%4* %13, %3* %121)
  %123 = icmp ne i32 0, %122
  br i1 %123, label %124, label %138

124:                                              ; preds = %120
  call void @_zval_ptr_dtor(%4* %13)
  %125 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %126 = load %99*, %99** %18, align 8
  %127 = bitcast %99* %126 to %52**
  %128 = load %52*, %52** %127, align 8
  %129 = getelementptr inbounds %52, %52* %128, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %125, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @78, i32 0, i32 0), i8* %130)
  br label %132

132:                                              ; preds = %124
  %133 = load %4*, %4** %4, align 8
  %134 = getelementptr inbounds %4, %4* %133, i32 0, i32 1
  %135 = bitcast %6* %134 to i32*
  store i32 2, i32* %135, align 8
  br label %136

136:                                              ; preds = %132
  br label %137

137:                                              ; preds = %136
  store i32 1, i32* %19, align 4
  br label %375

138:                                              ; preds = %120
  br label %139

139:                                              ; preds = %138
  br label %140

140:                                              ; preds = %139
  %141 = bitcast %4** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %141) #13
  store %4* %11, %4** %20, align 8
  %142 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %142) #13
  %143 = load i8*, i8** %5, align 8
  %144 = load i64, i64* %8, align 8
  %145 = call %0* @441(i8* %143, i64 %144, i32 0)
  store %0* %145, %0** %21, align 8
  %146 = load %0*, %0** %21, align 8
  %147 = load %4*, %4** %20, align 8
  %148 = getelementptr inbounds %4, %4* %147, i32 0, i32 0
  %149 = bitcast %5* %148 to %0**
  store %0* %146, %0** %149, align 8
  %150 = load %4*, %4** %20, align 8
  %151 = getelementptr inbounds %4, %4* %150, i32 0, i32 1
  %152 = bitcast %6* %151 to i32*
  store i32 5126, i32* %152, align 8
  %153 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #13
  %154 = bitcast %4** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #13
  br label %155

155:                                              ; preds = %140
  br label %156

156:                                              ; preds = %155
  br label %157

157:                                              ; preds = %156
  br label %158

158:                                              ; preds = %157
  %159 = bitcast %4** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %159) #13
  store %4* %12, %4** %22, align 8
  %160 = load %4*, %4** %22, align 8
  %161 = getelementptr inbounds %4, %4* %160, i32 0, i32 0
  %162 = bitcast %5* %161 to i64*
  store i64 12288, i64* %162, align 8
  %163 = load %4*, %4** %22, align 8
  %164 = getelementptr inbounds %4, %4* %163, i32 0, i32 1
  %165 = bitcast %6* %164 to i32*
  store i32 4, i32* %165, align 8
  %166 = bitcast %4** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #13
  %167 = load %3*, %3** @spl_ce_RecursiveDirectoryIterator, align 8
  %168 = load %3*, %3** @spl_ce_RecursiveDirectoryIterator, align 8
  %169 = getelementptr inbounds %3, %3* %168, i32 0, i32 13
  %170 = call %4* @zend_call_method(%4* %13, %3* %167, %11** %169, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), i64 11, %4* null, i32 2, %4* %11, %4* %12)
  call void @_zval_ptr_dtor(%4* %11)
  %171 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %172 = icmp ne %21* %171, null
  br i1 %172, label %173, label %180

173:                                              ; preds = %158
  call void @_zval_ptr_dtor(%4* %13)
  br label %174

174:                                              ; preds = %173
  %175 = load %4*, %4** %4, align 8
  %176 = getelementptr inbounds %4, %4* %175, i32 0, i32 1
  %177 = bitcast %6* %176 to i32*
  store i32 2, i32* %177, align 8
  br label %178

178:                                              ; preds = %174
  br label %179

179:                                              ; preds = %178
  store i32 1, i32* %19, align 4
  br label %375

180:                                              ; preds = %158
  %181 = load %3*, %3** @spl_ce_RecursiveIteratorIterator, align 8
  %182 = call i32 @_object_init_ex(%4* %14, %3* %181)
  %183 = icmp ne i32 0, %182
  br i1 %183, label %184, label %198

184:                                              ; preds = %180
  call void @_zval_ptr_dtor(%4* %13)
  call void @_zval_ptr_dtor(%4* %14)
  %185 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %186 = load %99*, %99** %18, align 8
  %187 = bitcast %99* %186 to %52**
  %188 = load %52*, %52** %187, align 8
  %189 = getelementptr inbounds %52, %52* %188, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %185, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @78, i32 0, i32 0), i8* %190)
  br label %192

192:                                              ; preds = %184
  %193 = load %4*, %4** %4, align 8
  %194 = getelementptr inbounds %4, %4* %193, i32 0, i32 1
  %195 = bitcast %6* %194 to i32*
  store i32 2, i32* %195, align 8
  br label %196

196:                                              ; preds = %192
  br label %197

197:                                              ; preds = %196
  store i32 1, i32* %19, align 4
  br label %375

198:                                              ; preds = %180
  %199 = load %3*, %3** @spl_ce_RecursiveIteratorIterator, align 8
  %200 = load %3*, %3** @spl_ce_RecursiveIteratorIterator, align 8
  %201 = getelementptr inbounds %3, %3* %200, i32 0, i32 13
  %202 = call %4* @zend_call_method(%4* %14, %3* %199, %11** %201, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), i64 11, %4* null, i32 1, %4* %13, %4* null)
  %203 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %204 = icmp ne %21* %203, null
  br i1 %204, label %205, label %212

205:                                              ; preds = %198
  call void @_zval_ptr_dtor(%4* %13)
  call void @_zval_ptr_dtor(%4* %14)
  br label %206

206:                                              ; preds = %205
  %207 = load %4*, %4** %4, align 8
  %208 = getelementptr inbounds %4, %4* %207, i32 0, i32 1
  %209 = bitcast %6* %208 to i32*
  store i32 2, i32* %209, align 8
  br label %210

210:                                              ; preds = %206
  br label %211

211:                                              ; preds = %210
  store i32 1, i32* %19, align 4
  br label %375

212:                                              ; preds = %198
  call void @_zval_ptr_dtor(%4* %13)
  %213 = load i64, i64* %9, align 8
  %214 = icmp ugt i64 %213, 0
  br i1 %214, label %215, label %258

215:                                              ; preds = %212
  store i8 1, i8* %10, align 1
  %216 = load %3*, %3** @spl_ce_RegexIterator, align 8
  %217 = call i32 @_object_init_ex(%4* %15, %3* %216)
  %218 = icmp ne i32 0, %217
  br i1 %218, label %219, label %233

219:                                              ; preds = %215
  call void @_zval_ptr_dtor(%4* %14)
  call void @452(%4* %15)
  %220 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %221 = load %99*, %99** %18, align 8
  %222 = bitcast %99* %221 to %52**
  %223 = load %52*, %52** %222, align 8
  %224 = getelementptr inbounds %52, %52* %223, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %220, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @79, i32 0, i32 0), i8* %225)
  br label %227

227:                                              ; preds = %219
  %228 = load %4*, %4** %4, align 8
  %229 = getelementptr inbounds %4, %4* %228, i32 0, i32 1
  %230 = bitcast %6* %229 to i32*
  store i32 2, i32* %230, align 8
  br label %231

231:                                              ; preds = %227
  br label %232

232:                                              ; preds = %231
  store i32 1, i32* %19, align 4
  br label %375

233:                                              ; preds = %215
  br label %234

234:                                              ; preds = %233
  br label %235

235:                                              ; preds = %234
  %236 = bitcast %4** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %236) #13
  store %4* %12, %4** %23, align 8
  %237 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %237) #13
  %238 = load i8*, i8** %7, align 8
  %239 = load i64, i64* %9, align 8
  %240 = call %0* @441(i8* %238, i64 %239, i32 0)
  store %0* %240, %0** %24, align 8
  %241 = load %0*, %0** %24, align 8
  %242 = load %4*, %4** %23, align 8
  %243 = getelementptr inbounds %4, %4* %242, i32 0, i32 0
  %244 = bitcast %5* %243 to %0**
  store %0* %241, %0** %244, align 8
  %245 = load %4*, %4** %23, align 8
  %246 = getelementptr inbounds %4, %4* %245, i32 0, i32 1
  %247 = bitcast %6* %246 to i32*
  store i32 5126, i32* %247, align 8
  %248 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  %249 = bitcast %4** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %249) #13
  br label %250

250:                                              ; preds = %235
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  br label %253

253:                                              ; preds = %252
  %254 = load %3*, %3** @spl_ce_RegexIterator, align 8
  %255 = load %3*, %3** @spl_ce_RegexIterator, align 8
  %256 = getelementptr inbounds %3, %3* %255, i32 0, i32 13
  %257 = call %4* @zend_call_method(%4* %15, %3* %254, %11** %256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), i64 11, %4* null, i32 2, %4* %14, %4* %12)
  call void @_zval_ptr_dtor(%4* %12)
  br label %258

258:                                              ; preds = %253, %212
  %259 = load %4*, %4** %4, align 8
  %260 = call i32 @_array_init(%4* %259, i32 0)
  %261 = load i8, i8* %10, align 1
  %262 = zext i8 %261 to i32
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %270

264:                                              ; preds = %258
  %265 = getelementptr inbounds %4, %4* %15, i32 0, i32 0
  %266 = bitcast %5* %265 to %21**
  %267 = load %21*, %21** %266, align 8
  %268 = getelementptr inbounds %21, %21* %267, i32 0, i32 2
  %269 = load %3*, %3** %268, align 8
  br label %276

270:                                              ; preds = %258
  %271 = getelementptr inbounds %4, %4* %14, i32 0, i32 0
  %272 = bitcast %5* %271 to %21**
  %273 = load %21*, %21** %272, align 8
  %274 = getelementptr inbounds %21, %21* %273, i32 0, i32 2
  %275 = load %3*, %3** %274, align 8
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi %3* [ %269, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %100, %100* %16, i32 0, i32 1
  store %3* %277, %3** %278, align 8
  %279 = load %99*, %99** %18, align 8
  %280 = getelementptr inbounds %100, %100* %16, i32 0, i32 0
  store %99* %279, %99** %280, align 8
  %281 = load i8*, i8** %5, align 8
  %282 = getelementptr inbounds %100, %100* %16, i32 0, i32 2
  store i8* %281, i8** %282, align 8
  %283 = load i64, i64* %8, align 8
  %284 = trunc i64 %283 to i32
  %285 = getelementptr inbounds %100, %100* %16, i32 0, i32 5
  store i32 %284, i32* %285, align 8
  %286 = getelementptr inbounds %100, %100* %16, i32 0, i32 6
  store i32 0, i32* %286, align 4
  %287 = load %4*, %4** %4, align 8
  %288 = getelementptr inbounds %100, %100* %16, i32 0, i32 3
  store %4* %287, %4** %288, align 8
  %289 = call %34* @_php_stream_fopen_tmpfile(i32 0)
  %290 = getelementptr inbounds %100, %100* %16, i32 0, i32 4
  store %34* %289, %34** %290, align 8
  %291 = getelementptr inbounds %100, %100* %16, i32 0, i32 4
  %292 = load %34*, %34** %291, align 8
  %293 = icmp eq %34* %292, null
  br i1 %293, label %294, label %302

294:                                              ; preds = %276
  %295 = load %3*, %3** @3, align 8
  %296 = load %99*, %99** %18, align 8
  %297 = bitcast %99* %296 to %52**
  %298 = load %52*, %52** %297, align 8
  %299 = getelementptr inbounds %52, %52* %298, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %295, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @80, i32 0, i32 0), i8* %300)
  store i32 1, i32* %19, align 4
  br label %375

302:                                              ; preds = %276
  %303 = load %99*, %99** %18, align 8
  %304 = bitcast %99* %303 to %52**
  %305 = load %52*, %52** %304, align 8
  %306 = getelementptr inbounds %52, %52* %305, i32 0, i32 24
  %307 = load i16, i16* %306, align 8
  %308 = lshr i16 %307, 8
  %309 = and i16 %308, 1
  %310 = zext i16 %309 to i32
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %312, label %332

312:                                              ; preds = %302
  %313 = load %99*, %99** %18, align 8
  %314 = bitcast %99* %313 to %52**
  %315 = call i32 @phar_copy_on_write(%52** %314)
  %316 = icmp eq i32 -1, %315
  br i1 %316, label %317, label %332

317:                                              ; preds = %312
  call void @_zval_ptr_dtor(%4* %14)
  %318 = load i8, i8* %10, align 1
  %319 = icmp ne i8 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_zval_ptr_dtor(%4* %15)
  br label %321

321:                                              ; preds = %320, %317
  %322 = getelementptr inbounds %100, %100* %16, i32 0, i32 4
  %323 = load %34*, %34** %322, align 8
  %324 = call i32 @_php_stream_free(%34* %323, i32 3)
  %325 = load %3*, %3** @3, align 8
  %326 = load %99*, %99** %18, align 8
  %327 = bitcast %99* %326 to %52**
  %328 = load %52*, %52** %327, align 8
  %329 = getelementptr inbounds %52, %52* %328, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %325, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %330)
  store i32 1, i32* %19, align 4
  br label %375

332:                                              ; preds = %312, %302
  %333 = load i8, i8* %10, align 1
  %334 = zext i8 %333 to i32
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %332
  br label %338

337:                                              ; preds = %332
  br label %338

338:                                              ; preds = %337, %336
  %339 = phi %4* [ %15, %336 ], [ %14, %337 ]
  %340 = bitcast %100* %16 to i8*
  %341 = call i32 @spl_iterator_apply(%4* %339, i32 (%20*, i8*)* @453, i8* %340)
  %342 = icmp eq i32 0, %341
  br i1 %342, label %343, label %366

343:                                              ; preds = %338
  call void @_zval_ptr_dtor(%4* %14)
  %344 = load i8, i8* %10, align 1
  %345 = icmp ne i8 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_zval_ptr_dtor(%4* %15)
  br label %347

347:                                              ; preds = %346, %343
  %348 = getelementptr inbounds %100, %100* %16, i32 0, i32 4
  %349 = load %34*, %34** %348, align 8
  %350 = load %99*, %99** %18, align 8
  %351 = bitcast %99* %350 to %52**
  %352 = load %52*, %52** %351, align 8
  %353 = getelementptr inbounds %52, %52* %352, i32 0, i32 16
  store %34* %349, %34** %353, align 8
  %354 = load %99*, %99** %18, align 8
  %355 = bitcast %99* %354 to %52**
  %356 = load %52*, %52** %355, align 8
  %357 = call i32 @phar_flush(%52* %356, i8* null, i64 0, i32 0, i8** %6)
  %358 = load i8*, i8** %6, align 8
  %359 = icmp ne i8* %358, null
  br i1 %359, label %360, label %365

360:                                              ; preds = %347
  %361 = load %3*, %3** @3, align 8
  %362 = load i8*, i8** %6, align 8
  %363 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %361, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %362)
  %364 = load i8*, i8** %6, align 8
  call void @_efree(i8* %364)
  br label %365

365:                                              ; preds = %360, %347
  br label %374

366:                                              ; preds = %338
  call void @_zval_ptr_dtor(%4* %14)
  %367 = load i8, i8* %10, align 1
  %368 = icmp ne i8 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_zval_ptr_dtor(%4* %15)
  br label %370

370:                                              ; preds = %369, %366
  %371 = getelementptr inbounds %100, %100* %16, i32 0, i32 4
  %372 = load %34*, %34** %371, align 8
  %373 = call i32 @_php_stream_free(%34* %372, i32 3)
  br label %374

374:                                              ; preds = %370, %365
  store i32 0, i32* %19, align 4
  br label %375

375:                                              ; preds = %374, %321, %294, %232, %211, %197, %179, %137, %119, %103, %86, %70
  %376 = bitcast %99** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376) #13
  %377 = bitcast %4** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377) #13
  %378 = bitcast %100* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 48, i8* %378) #13
  %379 = bitcast %4* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %379) #13
  %380 = bitcast %4* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %380) #13
  %381 = bitcast %4* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %381) #13
  %382 = bitcast %4* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %382) #13
  %383 = bitcast %4* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %383) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #13
  %384 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %384) #13
  %385 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %385) #13
  %386 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %386) #13
  %387 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #13
  %388 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388) #13
  %389 = load i32, i32* %19, align 4
  switch i32 %389, label %391 [
    i32 0, label %390
    i32 1, label %390
  ]

390:                                              ; preds = %375, %375
  ret void

391:                                              ; preds = %375
  unreachable
}

declare dso_local i32 @_object_init_ex(%4*, %3*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @452(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  %3 = load %4*, %4** %2, align 8
  %4 = getelementptr inbounds %4, %4* %3, i32 0, i32 1
  %5 = bitcast %6* %4 to %95*
  %6 = getelementptr inbounds %95, %95* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = load %4*, %4** %2, align 8
  %13 = call i32 @470(%4* %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = load %4*, %4** %2, align 8
  %17 = getelementptr inbounds %4, %4* %16, i32 0, i32 0
  %18 = bitcast %5* %17 to %96**
  %19 = load %96*, %96** %18, align 8
  call void @_zval_dtor_func(%96* %19)
  br label %20

20:                                               ; preds = %15, %11, %1
  ret void
}

declare dso_local %34* @_php_stream_fopen_tmpfile(i32) #2

declare dso_local i32 @_php_stream_free(%34*, i32) #2

declare dso_local i32 @spl_iterator_apply(%4*, i32 (%20*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @453(%20* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %20*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %100*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %101*, align 8
  %12 = alloca %34*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %0*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %3*, align 8
  %23 = alloca %99*, align 8
  %24 = alloca %36, align 8
  %25 = alloca i32, align 4
  %26 = alloca %4, align 8
  %27 = alloca i8*, align 8
  %28 = alloca %4, align 8
  %29 = alloca %77*, align 8
  %30 = alloca %4, align 8
  %31 = alloca i32, align 4
  store %20* %0, %20** %4, align 8
  store i8* %1, i8** %5, align 8
  %32 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #13
  store i8 1, i8* %7, align 1
  %33 = bitcast %100** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = load i8*, i8** %5, align 8
  %35 = bitcast i8* %34 to %100*
  store %100* %35, %100** %8, align 8
  %36 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  %37 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  %38 = load %100*, %100** %8, align 8
  %39 = getelementptr inbounds %100, %100* %38, i32 0, i32 5
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %10, align 4
  %41 = bitcast %101** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %34** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  store i8* null, i8** %16, align 8
  %47 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = load %100*, %100** %8, align 8
  %49 = getelementptr inbounds %100, %100* %48, i32 0, i32 2
  %50 = load i8*, i8** %49, align 8
  store i8* %50, i8** %17, align 8
  %51 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  store i8* null, i8** %18, align 8
  %52 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  store i8* null, i8** %19, align 8
  %53 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  %54 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #13
  %55 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  %56 = load %100*, %100** %8, align 8
  %57 = getelementptr inbounds %100, %100* %56, i32 0, i32 1
  %58 = load %3*, %3** %57, align 8
  store %3* %58, %3** %22, align 8
  %59 = bitcast %99** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  %60 = load %100*, %100** %8, align 8
  %61 = getelementptr inbounds %100, %100* %60, i32 0, i32 0
  %62 = load %99*, %99** %61, align 8
  store %99* %62, %99** %23, align 8
  %63 = bitcast %36* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %63) #13
  %64 = load %20*, %20** %4, align 8
  %65 = getelementptr inbounds %20, %20* %64, i32 0, i32 2
  %66 = load %19*, %19** %65, align 8
  %67 = getelementptr inbounds %19, %19* %66, i32 0, i32 2
  %68 = load %4* (%20*)*, %4* (%20*)** %67, align 8
  %69 = load %20*, %20** %4, align 8
  %70 = call %4* %68(%20* %69)
  store %4* %70, %4** %6, align 8
  %71 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %72 = icmp ne %21* %71, null
  br i1 %72, label %73, label %74

73:                                               ; preds = %2
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

74:                                               ; preds = %2
  %75 = load %4*, %4** %6, align 8
  %76 = icmp ne %4* %75, null
  br i1 %76, label %85, label %77

77:                                               ; preds = %74
  %78 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %79 = load %3*, %3** %22, align 8
  %80 = getelementptr inbounds %3, %3* %79, i32 0, i32 1
  %81 = load %0*, %0** %80, align 8
  %82 = getelementptr inbounds %0, %0* %81, i32 0, i32 3
  %83 = getelementptr inbounds [1 x i8], [1 x i8]* %82, i32 0, i32 0
  %84 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %78, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @330, i32 0, i32 0), i8* %83)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

85:                                               ; preds = %74
  %86 = load %4*, %4** %6, align 8
  %87 = call zeroext i8 @444(%4* %86)
  %88 = zext i8 %87 to i32
  switch i32 %88, label %286 [
    i32 6, label %294
    i32 9, label %89
    i32 8, label %186
  ]

89:                                               ; preds = %85
  %90 = load %4*, %4** %6, align 8
  %91 = call i32 @php_file_le_stream()
  %92 = call i32 @php_file_le_pstream()
  %93 = call i8* @zend_fetch_resource2_ex(%4* %90, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @107, i32 0, i32 0), i32 %91, i32 %92)
  %94 = bitcast i8* %93 to %34*
  store %34* %94, %34** %12, align 8
  %95 = load %34*, %34** %12, align 8
  %96 = icmp ne %34* %95, null
  br i1 %96, label %105, label %97

97:                                               ; preds = %89
  %98 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %99 = load %3*, %3** %22, align 8
  %100 = getelementptr inbounds %3, %3* %99, i32 0, i32 1
  %101 = load %0*, %0** %100, align 8
  %102 = getelementptr inbounds %0, %0* %101, i32 0, i32 3
  %103 = getelementptr inbounds [1 x i8], [1 x i8]* %102, i32 0, i32 0
  %104 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %98, i64 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @331, i32 0, i32 0), i8* %103)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

105:                                              ; preds = %89
  %106 = load %20*, %20** %4, align 8
  %107 = getelementptr inbounds %20, %20* %106, i32 0, i32 2
  %108 = load %19*, %19** %107, align 8
  %109 = getelementptr inbounds %19, %19* %108, i32 0, i32 3
  %110 = load void (%20*, %4*)*, void (%20*, %4*)** %109, align 8
  %111 = icmp ne void (%20*, %4*)* %110, null
  br i1 %111, label %112, label %176

112:                                              ; preds = %105
  %113 = bitcast %4* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %113) #13
  %114 = load %20*, %20** %4, align 8
  %115 = getelementptr inbounds %20, %20* %114, i32 0, i32 2
  %116 = load %19*, %19** %115, align 8
  %117 = getelementptr inbounds %19, %19* %116, i32 0, i32 3
  %118 = load void (%20*, %4*)*, void (%20*, %4*)** %117, align 8
  %119 = load %20*, %20** %4, align 8
  call void %118(%20* %119, %4* %26)
  %120 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %121 = icmp ne %21* %120, null
  br i1 %121, label %122, label %123

122:                                              ; preds = %112
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %172

123:                                              ; preds = %112
  %124 = call zeroext i8 @444(%4* %26)
  %125 = zext i8 %124 to i32
  %126 = icmp ne i32 %125, 6
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  call void @452(%4* %26)
  %128 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %129 = load %3*, %3** %22, align 8
  %130 = getelementptr inbounds %3, %3* %129, i32 0, i32 1
  %131 = load %0*, %0** %130, align 8
  %132 = getelementptr inbounds %0, %0* %131, i32 0, i32 3
  %133 = getelementptr inbounds [1 x i8], [1 x i8]* %132, i32 0, i32 0
  %134 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %128, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @332, i32 0, i32 0), i8* %133)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %172

135:                                              ; preds = %123
  %136 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %137 = bitcast %5* %136 to %0**
  %138 = load %0*, %0** %137, align 8
  %139 = getelementptr inbounds %0, %0* %138, i32 0, i32 2
  %140 = load i64, i64* %139, align 8
  %141 = icmp ugt i64 %140, 2147483647
  %142 = xor i1 %141, true
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i32
  %145 = sext i32 %144 to i64
  %146 = call i64 @llvm.expect.i64(i64 %145, i64 0)
  %147 = icmp ne i64 %146, 0
  br i1 %147, label %148, label %156

148:                                              ; preds = %135
  call void @452(%4* %26)
  %149 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %150 = load %3*, %3** %22, align 8
  %151 = getelementptr inbounds %3, %3* %150, i32 0, i32 1
  %152 = load %0*, %0** %151, align 8
  %153 = getelementptr inbounds %0, %0* %152, i32 0, i32 3
  %154 = getelementptr inbounds [1 x i8], [1 x i8]* %153, i32 0, i32 0
  %155 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %149, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @333, i32 0, i32 0), i8* %154)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %172

156:                                              ; preds = %135
  %157 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %158 = bitcast %5* %157 to %0**
  %159 = load %0*, %0** %158, align 8
  %160 = getelementptr inbounds %0, %0* %159, i32 0, i32 2
  %161 = load i64, i64* %160, align 8
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %9, align 4
  %163 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %164 = bitcast %5* %163 to %0**
  %165 = load %0*, %0** %164, align 8
  %166 = getelementptr inbounds %0, %0* %165, i32 0, i32 3
  %167 = getelementptr inbounds [1 x i8], [1 x i8]* %166, i32 0, i32 0
  %168 = load i32, i32* %9, align 4
  %169 = zext i32 %168 to i64
  %170 = call noalias i8* @_estrndup(i8* %167, i64 %169)
  store i8* %170, i8** %21, align 8
  %171 = load i8*, i8** %21, align 8
  store i8* %171, i8** %18, align 8
  call void @452(%4* %26)
  store i32 0, i32* %25, align 4
  br label %172

172:                                              ; preds = %156, %148, %127, %122
  %173 = bitcast %4* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %173) #13
  %174 = load i32, i32* %25, align 4
  switch i32 %174, label %714 [
    i32 0, label %175
  ]

175:                                              ; preds = %172
  br label %184

176:                                              ; preds = %105
  %177 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %178 = load %3*, %3** %22, align 8
  %179 = getelementptr inbounds %3, %3* %178, i32 0, i32 1
  %180 = load %0*, %0** %179, align 8
  %181 = getelementptr inbounds %0, %0* %180, i32 0, i32 3
  %182 = getelementptr inbounds [1 x i8], [1 x i8]* %181, i32 0, i32 0
  %183 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %177, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @332, i32 0, i32 0), i8* %182)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

184:                                              ; preds = %175
  store i8 0, i8* %7, align 1
  %185 = call %0* @441(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @334, i32 0, i32 0), i64 8, i32 0)
  store %0* %185, %0** %20, align 8
  br label %512

186:                                              ; preds = %85
  %187 = load %4*, %4** %6, align 8
  %188 = getelementptr inbounds %4, %4* %187, i32 0, i32 0
  %189 = bitcast %5* %188 to %21**
  %190 = load %21*, %21** %189, align 8
  %191 = getelementptr inbounds %21, %21* %190, i32 0, i32 2
  %192 = load %3*, %3** %191, align 8
  %193 = load %3*, %3** @spl_ce_SplFileInfo, align 8
  %194 = call zeroext i8 @instanceof_function(%3* %192, %3* %193)
  %195 = icmp ne i8 %194, 0
  br i1 %195, label %196, label %285

196:                                              ; preds = %186
  %197 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %197) #13
  store i8* null, i8** %27, align 8
  %198 = bitcast %4* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %198) #13
  %199 = bitcast %77** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %199) #13
  %200 = load %4*, %4** %6, align 8
  %201 = getelementptr inbounds %4, %4* %200, i32 0, i32 0
  %202 = bitcast %5* %201 to %21**
  %203 = load %21*, %21** %202, align 8
  %204 = bitcast %21* %203 to i8*
  %205 = load %4*, %4** %6, align 8
  %206 = getelementptr inbounds %4, %4* %205, i32 0, i32 0
  %207 = bitcast %5* %206 to %21**
  %208 = load %21*, %21** %207, align 8
  %209 = getelementptr inbounds %21, %21* %208, i32 0, i32 3
  %210 = load %22*, %22** %209, align 8
  %211 = getelementptr inbounds %22, %22* %210, i32 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = sext i32 %212 to i64
  %214 = sub i64 0, %213
  %215 = getelementptr inbounds i8, i8* %204, i64 %214
  %216 = bitcast i8* %215 to %77*
  store %77* %216, %77** %29, align 8
  %217 = load i32, i32* %10, align 4
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %227, label %219

219:                                              ; preds = %196
  %220 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %221 = load %3*, %3** %22, align 8
  %222 = getelementptr inbounds %3, %3* %221, i32 0, i32 1
  %223 = load %0*, %0** %222, align 8
  %224 = getelementptr inbounds %0, %0* %223, i32 0, i32 3
  %225 = getelementptr inbounds [1 x i8], [1 x i8]* %224, i32 0, i32 0
  %226 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %220, i64 0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @335, i32 0, i32 0), i8* %225)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %279

227:                                              ; preds = %196
  %228 = load %77*, %77** %29, align 8
  %229 = getelementptr inbounds %77, %77* %228, i32 0, i32 7
  %230 = load i32, i32* %229, align 8
  switch i32 %230, label %278 [
    i32 1, label %231
    i32 0, label %264
    i32 2, label %264
  ]

231:                                              ; preds = %227
  %232 = load %77*, %77** %29, align 8
  %233 = call i8* @spl_filesystem_object_get_path(%77* %232, i64* null)
  store i8* %233, i8** %27, align 8
  %234 = load i8*, i8** %27, align 8
  %235 = load %77*, %77** %29, align 8
  %236 = getelementptr inbounds %77, %77* %235, i32 0, i32 11
  %237 = bitcast %78* %236 to %79*
  %238 = getelementptr inbounds %79, %79* %237, i32 0, i32 1
  %239 = getelementptr inbounds %80, %80* %238, i32 0, i32 0
  %240 = getelementptr inbounds [4096 x i8], [4096 x i8]* %239, i32 0, i32 0
  %241 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %15, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @336, i32 0, i32 0), i8* %234, i32 47, i8* %240)
  store i64 %241, i64* %13, align 8
  %242 = load i8*, i8** %15, align 8
  %243 = load i64, i64* %13, align 8
  call void @php_stat(i8* %242, i64 %243, i32 13, %4* %28)
  %244 = call zeroext i8 @444(%4* %28)
  %245 = zext i8 %244 to i32
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %249

247:                                              ; preds = %231
  %248 = load i8*, i8** %15, align 8
  call void @_efree(i8* %248)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %279

249:                                              ; preds = %231
  %250 = load i8*, i8** %15, align 8
  %251 = call i8* @expand_filepath(i8* %250, i8* null)
  store i8* %251, i8** %27, align 8
  %252 = load i8*, i8** %15, align 8
  call void @_efree(i8* %252)
  %253 = load i8*, i8** %27, align 8
  %254 = icmp ne i8* %253, null
  br i1 %254, label %255, label %259

255:                                              ; preds = %249
  %256 = load i8*, i8** %27, align 8
  store i8* %256, i8** %15, align 8
  %257 = load i8*, i8** %15, align 8
  %258 = call i64 @strlen(i8* %257) #14
  store i64 %258, i64* %13, align 8
  br label %262

259:                                              ; preds = %249
  %260 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %261 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %260, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @337, i32 0, i32 0))
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %279

262:                                              ; preds = %255
  %263 = load i8*, i8** %15, align 8
  store i8* %263, i8** %18, align 8
  store i32 5, i32* %25, align 4
  br label %279

264:                                              ; preds = %227, %227
  %265 = load %77*, %77** %29, align 8
  %266 = getelementptr inbounds %77, %77* %265, i32 0, i32 5
  %267 = load i8*, i8** %266, align 8
  %268 = call i8* @expand_filepath(i8* %267, i8* null)
  store i8* %268, i8** %15, align 8
  %269 = load i8*, i8** %15, align 8
  %270 = icmp ne i8* %269, null
  br i1 %270, label %274, label %271

271:                                              ; preds = %264
  %272 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %273 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %272, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @337, i32 0, i32 0))
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %279

274:                                              ; preds = %264
  %275 = load i8*, i8** %15, align 8
  %276 = call i64 @strlen(i8* %275) #14
  store i64 %276, i64* %13, align 8
  %277 = load i8*, i8** %15, align 8
  store i8* %277, i8** %18, align 8
  store i32 5, i32* %25, align 4
  br label %279

278:                                              ; preds = %227
  store i32 0, i32* %25, align 4
  br label %279

279:                                              ; preds = %274, %262, %278, %271, %259, %247, %219
  %280 = bitcast %77** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %280) #13
  %281 = bitcast %4* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %281) #13
  %282 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %282) #13
  %283 = load i32, i32* %25, align 4
  switch i32 %283, label %714 [
    i32 0, label %284
    i32 5, label %307
  ]

284:                                              ; preds = %279
  br label %285

285:                                              ; preds = %284, %186
  br label %286

286:                                              ; preds = %85, %285
  %287 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %288 = load %3*, %3** %22, align 8
  %289 = getelementptr inbounds %3, %3* %288, i32 0, i32 1
  %290 = load %0*, %0** %289, align 8
  %291 = getelementptr inbounds %0, %0* %290, i32 0, i32 3
  %292 = getelementptr inbounds [1 x i8], [1 x i8]* %291, i32 0, i32 0
  %293 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %287, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @338, i32 0, i32 0), i8* %292)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

294:                                              ; preds = %85
  %295 = load %4*, %4** %6, align 8
  %296 = getelementptr inbounds %4, %4* %295, i32 0, i32 0
  %297 = bitcast %5* %296 to %0**
  %298 = load %0*, %0** %297, align 8
  %299 = getelementptr inbounds %0, %0* %298, i32 0, i32 3
  %300 = getelementptr inbounds [1 x i8], [1 x i8]* %299, i32 0, i32 0
  store i8* %300, i8** %15, align 8
  %301 = load %4*, %4** %6, align 8
  %302 = getelementptr inbounds %4, %4* %301, i32 0, i32 0
  %303 = bitcast %5* %302 to %0**
  %304 = load %0*, %0** %303, align 8
  %305 = getelementptr inbounds %0, %0* %304, i32 0, i32 2
  %306 = load i64, i64* %305, align 8
  store i64 %306, i64* %13, align 8
  br label %307

307:                                              ; preds = %294, %279
  %308 = load i32, i32* %10, align 4
  %309 = icmp ne i32 %308, 0
  br i1 %309, label %310, label %384

310:                                              ; preds = %307
  %311 = load i8*, i8** %17, align 8
  %312 = call i8* @expand_filepath(i8* %311, i8* null)
  store i8* %312, i8** %19, align 8
  %313 = load i8*, i8** %19, align 8
  %314 = icmp ne i8* %313, null
  br i1 %314, label %323, label %315

315:                                              ; preds = %310
  %316 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %317 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %316, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @337, i32 0, i32 0))
  %318 = load i8*, i8** %18, align 8
  %319 = icmp ne i8* %318, null
  br i1 %319, label %320, label %322

320:                                              ; preds = %315
  %321 = load i8*, i8** %18, align 8
  call void @_efree(i8* %321)
  br label %322

322:                                              ; preds = %320, %315
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

323:                                              ; preds = %310
  %324 = load i8*, i8** %19, align 8
  store i8* %324, i8** %17, align 8
  %325 = load i8*, i8** %17, align 8
  %326 = call i64 @strlen(i8* %325) #14
  %327 = trunc i64 %326 to i32
  store i32 %327, i32* %10, align 4
  %328 = load i8*, i8** %15, align 8
  %329 = load i8*, i8** %17, align 8
  %330 = call i8* @strstr(i8* %328, i8* %329) #14
  %331 = icmp ne i8* %330, null
  br i1 %331, label %332, label %367

332:                                              ; preds = %323
  %333 = load i64, i64* %13, align 8
  %334 = load i32, i32* %10, align 4
  %335 = zext i32 %334 to i64
  %336 = sub i64 %333, %335
  %337 = trunc i64 %336 to i32
  store i32 %337, i32* %9, align 4
  %338 = load i32, i32* %9, align 4
  %339 = icmp ule i32 %338, 0
  br i1 %339, label %340, label %347

340:                                              ; preds = %332
  %341 = load i8*, i8** %18, align 8
  %342 = icmp ne i8* %341, null
  br i1 %342, label %343, label %346

343:                                              ; preds = %340
  %344 = load i8*, i8** %18, align 8
  call void @_efree(i8* %344)
  %345 = load i8*, i8** %19, align 8
  call void @_efree(i8* %345)
  br label %346

346:                                              ; preds = %343, %340
  store i32 0, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

347:                                              ; preds = %332
  %348 = load i8*, i8** %15, align 8
  %349 = load i32, i32* %10, align 4
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %348, i64 %350
  store i8* %351, i8** %21, align 8
  %352 = load i8*, i8** %21, align 8
  %353 = load i8, i8* %352, align 1
  %354 = sext i8 %353 to i32
  %355 = icmp eq i32 %354, 47
  br i1 %355, label %361, label %356

356:                                              ; preds = %347
  %357 = load i8*, i8** %21, align 8
  %358 = load i8, i8* %357, align 1
  %359 = sext i8 %358 to i32
  %360 = icmp eq i32 %359, 92
  br i1 %360, label %361, label %366

361:                                              ; preds = %356, %347
  %362 = load i8*, i8** %21, align 8
  %363 = getelementptr inbounds i8, i8* %362, i32 1
  store i8* %363, i8** %21, align 8
  %364 = load i32, i32* %9, align 4
  %365 = add i32 %364, -1
  store i32 %365, i32* %9, align 4
  br label %366

366:                                              ; preds = %361, %356
  br label %383

367:                                              ; preds = %323
  %368 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %369 = load %3*, %3** %22, align 8
  %370 = getelementptr inbounds %3, %3* %369, i32 0, i32 1
  %371 = load %0*, %0** %370, align 8
  %372 = getelementptr inbounds %0, %0* %371, i32 0, i32 3
  %373 = getelementptr inbounds [1 x i8], [1 x i8]* %372, i32 0, i32 0
  %374 = load i8*, i8** %15, align 8
  %375 = load i8*, i8** %17, align 8
  %376 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %368, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @339, i32 0, i32 0), i8* %373, i8* %374, i8* %375)
  %377 = load i8*, i8** %18, align 8
  %378 = icmp ne i8* %377, null
  br i1 %378, label %379, label %382

379:                                              ; preds = %367
  %380 = load i8*, i8** %18, align 8
  call void @_efree(i8* %380)
  %381 = load i8*, i8** %19, align 8
  call void @_efree(i8* %381)
  br label %382

382:                                              ; preds = %379, %367
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

383:                                              ; preds = %366
  br label %464

384:                                              ; preds = %307
  %385 = load %20*, %20** %4, align 8
  %386 = getelementptr inbounds %20, %20* %385, i32 0, i32 2
  %387 = load %19*, %19** %386, align 8
  %388 = getelementptr inbounds %19, %19* %387, i32 0, i32 3
  %389 = load void (%20*, %4*)*, void (%20*, %4*)** %388, align 8
  %390 = icmp ne void (%20*, %4*)* %389, null
  br i1 %390, label %391, label %455

391:                                              ; preds = %384
  %392 = bitcast %4* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %392) #13
  %393 = load %20*, %20** %4, align 8
  %394 = getelementptr inbounds %20, %20* %393, i32 0, i32 2
  %395 = load %19*, %19** %394, align 8
  %396 = getelementptr inbounds %19, %19* %395, i32 0, i32 3
  %397 = load void (%20*, %4*)*, void (%20*, %4*)** %396, align 8
  %398 = load %20*, %20** %4, align 8
  call void %397(%20* %398, %4* %30)
  %399 = load %21*, %21** getelementptr inbounds (%66, %66* @executor_globals, i32 0, i32 43), align 8
  %400 = icmp ne %21* %399, null
  br i1 %400, label %401, label %402

401:                                              ; preds = %391
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %451

402:                                              ; preds = %391
  %403 = call zeroext i8 @444(%4* %30)
  %404 = zext i8 %403 to i32
  %405 = icmp ne i32 %404, 6
  br i1 %405, label %406, label %414

406:                                              ; preds = %402
  call void @452(%4* %30)
  %407 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %408 = load %3*, %3** %22, align 8
  %409 = getelementptr inbounds %3, %3* %408, i32 0, i32 1
  %410 = load %0*, %0** %409, align 8
  %411 = getelementptr inbounds %0, %0* %410, i32 0, i32 3
  %412 = getelementptr inbounds [1 x i8], [1 x i8]* %411, i32 0, i32 0
  %413 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %407, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @332, i32 0, i32 0), i8* %412)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %451

414:                                              ; preds = %402
  %415 = getelementptr inbounds %4, %4* %30, i32 0, i32 0
  %416 = bitcast %5* %415 to %0**
  %417 = load %0*, %0** %416, align 8
  %418 = getelementptr inbounds %0, %0* %417, i32 0, i32 2
  %419 = load i64, i64* %418, align 8
  %420 = icmp ugt i64 %419, 2147483647
  %421 = xor i1 %420, true
  %422 = xor i1 %421, true
  %423 = zext i1 %422 to i32
  %424 = sext i32 %423 to i64
  %425 = call i64 @llvm.expect.i64(i64 %424, i64 0)
  %426 = icmp ne i64 %425, 0
  br i1 %426, label %427, label %435

427:                                              ; preds = %414
  call void @452(%4* %30)
  %428 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %429 = load %3*, %3** %22, align 8
  %430 = getelementptr inbounds %3, %3* %429, i32 0, i32 1
  %431 = load %0*, %0** %430, align 8
  %432 = getelementptr inbounds %0, %0* %431, i32 0, i32 3
  %433 = getelementptr inbounds [1 x i8], [1 x i8]* %432, i32 0, i32 0
  %434 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %428, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @333, i32 0, i32 0), i8* %433)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %451

435:                                              ; preds = %414
  %436 = getelementptr inbounds %4, %4* %30, i32 0, i32 0
  %437 = bitcast %5* %436 to %0**
  %438 = load %0*, %0** %437, align 8
  %439 = getelementptr inbounds %0, %0* %438, i32 0, i32 2
  %440 = load i64, i64* %439, align 8
  %441 = trunc i64 %440 to i32
  store i32 %441, i32* %9, align 4
  %442 = getelementptr inbounds %4, %4* %30, i32 0, i32 0
  %443 = bitcast %5* %442 to %0**
  %444 = load %0*, %0** %443, align 8
  %445 = getelementptr inbounds %0, %0* %444, i32 0, i32 3
  %446 = getelementptr inbounds [1 x i8], [1 x i8]* %445, i32 0, i32 0
  %447 = load i32, i32* %9, align 4
  %448 = zext i32 %447 to i64
  %449 = call noalias i8* @_estrndup(i8* %446, i64 %448)
  store i8* %449, i8** %21, align 8
  %450 = load i8*, i8** %21, align 8
  store i8* %450, i8** %18, align 8
  call void @452(%4* %30)
  store i32 0, i32* %25, align 4
  br label %451

451:                                              ; preds = %435, %427, %406, %401
  %452 = bitcast %4* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %452) #13
  %453 = load i32, i32* %25, align 4
  switch i32 %453, label %714 [
    i32 0, label %454
  ]

454:                                              ; preds = %451
  br label %463

455:                                              ; preds = %384
  %456 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %457 = load %3*, %3** %22, align 8
  %458 = getelementptr inbounds %3, %3* %457, i32 0, i32 1
  %459 = load %0*, %0** %458, align 8
  %460 = getelementptr inbounds %0, %0* %459, i32 0, i32 3
  %461 = getelementptr inbounds [1 x i8], [1 x i8]* %460, i32 0, i32 0
  %462 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %456, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @332, i32 0, i32 0), i8* %461)
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

463:                                              ; preds = %454
  br label %464

464:                                              ; preds = %463, %383
  %465 = load i8*, i8** %15, align 8
  %466 = call i32 @php_check_open_basedir(i8* %465)
  %467 = icmp ne i32 %466, 0
  br i1 %467, label %468, label %487

468:                                              ; preds = %464
  %469 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %470 = load %3*, %3** %22, align 8
  %471 = getelementptr inbounds %3, %3* %470, i32 0, i32 1
  %472 = load %0*, %0** %471, align 8
  %473 = getelementptr inbounds %0, %0* %472, i32 0, i32 3
  %474 = getelementptr inbounds [1 x i8], [1 x i8]* %473, i32 0, i32 0
  %475 = load i8*, i8** %15, align 8
  %476 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %469, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @340, i32 0, i32 0), i8* %474, i8* %475)
  %477 = load i8*, i8** %18, align 8
  %478 = icmp ne i8* %477, null
  br i1 %478, label %479, label %481

479:                                              ; preds = %468
  %480 = load i8*, i8** %18, align 8
  call void @_efree(i8* %480)
  br label %481

481:                                              ; preds = %479, %468
  %482 = load i8*, i8** %19, align 8
  %483 = icmp ne i8* %482, null
  br i1 %483, label %484, label %486

484:                                              ; preds = %481
  %485 = load i8*, i8** %19, align 8
  call void @_efree(i8* %485)
  br label %486

486:                                              ; preds = %484, %481
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

487:                                              ; preds = %464
  %488 = load i8*, i8** %15, align 8
  %489 = call %34* @_php_stream_open_wrapper_ex(i8* %488, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i32 0, i32 0), i32 16, %0** %20, %46* null)
  store %34* %489, %34** %12, align 8
  %490 = load %34*, %34** %12, align 8
  %491 = icmp ne %34* %490, null
  br i1 %491, label %511, label %492

492:                                              ; preds = %487
  %493 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %494 = load %3*, %3** %22, align 8
  %495 = getelementptr inbounds %3, %3* %494, i32 0, i32 1
  %496 = load %0*, %0** %495, align 8
  %497 = getelementptr inbounds %0, %0* %496, i32 0, i32 3
  %498 = getelementptr inbounds [1 x i8], [1 x i8]* %497, i32 0, i32 0
  %499 = load i8*, i8** %15, align 8
  %500 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %493, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @341, i32 0, i32 0), i8* %498, i8* %499)
  %501 = load i8*, i8** %18, align 8
  %502 = icmp ne i8* %501, null
  br i1 %502, label %503, label %505

503:                                              ; preds = %492
  %504 = load i8*, i8** %18, align 8
  call void @_efree(i8* %504)
  br label %505

505:                                              ; preds = %503, %492
  %506 = load i8*, i8** %19, align 8
  %507 = icmp ne i8* %506, null
  br i1 %507, label %508, label %510

508:                                              ; preds = %505
  %509 = load i8*, i8** %19, align 8
  call void @_efree(i8* %509)
  br label %510

510:                                              ; preds = %508, %505
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

511:                                              ; preds = %487
  br label %512

512:                                              ; preds = %511, %184
  %513 = load i32, i32* %9, align 4
  %514 = zext i32 %513 to i64
  %515 = icmp uge i64 %514, 5
  br i1 %515, label %516, label %542

516:                                              ; preds = %512
  %517 = load i8*, i8** %21, align 8
  %518 = call i32 @memcmp(i8* %517, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %542, label %520

520:                                              ; preds = %516
  %521 = load i8*, i8** %18, align 8
  %522 = icmp ne i8* %521, null
  br i1 %522, label %523, label %525

523:                                              ; preds = %520
  %524 = load i8*, i8** %18, align 8
  call void @_efree(i8* %524)
  br label %525

525:                                              ; preds = %523, %520
  %526 = load i8*, i8** %19, align 8
  %527 = icmp ne i8* %526, null
  br i1 %527, label %528, label %530

528:                                              ; preds = %525
  %529 = load i8*, i8** %19, align 8
  call void @_efree(i8* %529)
  br label %530

530:                                              ; preds = %528, %525
  %531 = load %0*, %0** %20, align 8
  %532 = icmp ne %0* %531, null
  br i1 %532, label %533, label %535

533:                                              ; preds = %530
  %534 = load %0*, %0** %20, align 8
  call void @465(%0* %534)
  br label %535

535:                                              ; preds = %533, %530
  %536 = load i8, i8* %7, align 1
  %537 = icmp ne i8 %536, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %535
  %539 = load %34*, %34** %12, align 8
  %540 = call i32 @_php_stream_free(%34* %539, i32 3)
  br label %541

541:                                              ; preds = %538, %535
  store i32 0, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

542:                                              ; preds = %516, %512
  %543 = load %99*, %99** %23, align 8
  %544 = bitcast %99* %543 to %52**
  %545 = load %52*, %52** %544, align 8
  %546 = getelementptr inbounds %52, %52* %545, i32 0, i32 0
  %547 = load i8*, i8** %546, align 8
  %548 = load %99*, %99** %23, align 8
  %549 = bitcast %99* %548 to %52**
  %550 = load %52*, %52** %549, align 8
  %551 = getelementptr inbounds %52, %52* %550, i32 0, i32 1
  %552 = load i32, i32* %551, align 8
  %553 = load i8*, i8** %21, align 8
  %554 = load i32, i32* %9, align 4
  %555 = call %101* @phar_get_or_create_entry_data(i8* %547, i32 %552, i8* %553, i32 %554, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @342, i32 0, i32 0), i8 signext 0, i8** %16, i32 1)
  store %101* %555, %101** %11, align 8
  %556 = icmp ne %101* %555, null
  br i1 %556, label %584, label %557

557:                                              ; preds = %542
  %558 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %559 = load i8*, i8** %21, align 8
  %560 = load i8*, i8** %16, align 8
  %561 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %558, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @343, i32 0, i32 0), i8* %559, i8* %560)
  %562 = load i8*, i8** %16, align 8
  call void @_efree(i8* %562)
  %563 = load i8*, i8** %18, align 8
  %564 = icmp ne i8* %563, null
  br i1 %564, label %565, label %567

565:                                              ; preds = %557
  %566 = load i8*, i8** %18, align 8
  call void @_efree(i8* %566)
  br label %567

567:                                              ; preds = %565, %557
  %568 = load %0*, %0** %20, align 8
  %569 = icmp ne %0* %568, null
  br i1 %569, label %570, label %572

570:                                              ; preds = %567
  %571 = load %0*, %0** %20, align 8
  call void @465(%0* %571)
  br label %572

572:                                              ; preds = %570, %567
  %573 = load i8*, i8** %19, align 8
  %574 = icmp ne i8* %573, null
  br i1 %574, label %575, label %577

575:                                              ; preds = %572
  %576 = load i8*, i8** %19, align 8
  call void @_efree(i8* %576)
  br label %577

577:                                              ; preds = %575, %572
  %578 = load i8, i8* %7, align 1
  %579 = icmp ne i8 %578, 0
  br i1 %579, label %580, label %583

580:                                              ; preds = %577
  %581 = load %34*, %34** %12, align 8
  %582 = call i32 @_php_stream_free(%34* %581, i32 3)
  br label %583

583:                                              ; preds = %580, %577
  store i32 2, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

584:                                              ; preds = %542
  %585 = load i8*, i8** %16, align 8
  %586 = icmp ne i8* %585, null
  br i1 %586, label %587, label %589

587:                                              ; preds = %584
  %588 = load i8*, i8** %16, align 8
  call void @_efree(i8* %588)
  br label %589

589:                                              ; preds = %587, %584
  %590 = load %101*, %101** %11, align 8
  %591 = getelementptr inbounds %101, %101* %590, i32 0, i32 5
  %592 = load %93*, %93** %591, align 8
  %593 = getelementptr inbounds %93, %93* %592, i32 0, i32 10
  %594 = load i32, i32* %593, align 8
  %595 = icmp eq i32 %594, 2
  br i1 %595, label %596, label %603

596:                                              ; preds = %589
  %597 = load %101*, %101** %11, align 8
  %598 = getelementptr inbounds %101, %101* %597, i32 0, i32 5
  %599 = load %93*, %93** %598, align 8
  %600 = getelementptr inbounds %93, %93* %599, i32 0, i32 14
  %601 = load %34*, %34** %600, align 8
  %602 = call i32 @_php_stream_free(%34* %601, i32 3)
  br label %603

603:                                              ; preds = %596, %589
  %604 = load %101*, %101** %11, align 8
  %605 = getelementptr inbounds %101, %101* %604, i32 0, i32 5
  %606 = load %93*, %93** %605, align 8
  %607 = getelementptr inbounds %93, %93* %606, i32 0, i32 14
  store %34* null, %34** %607, align 8
  %608 = load %101*, %101** %11, align 8
  %609 = getelementptr inbounds %101, %101* %608, i32 0, i32 5
  %610 = load %93*, %93** %609, align 8
  %611 = getelementptr inbounds %93, %93* %610, i32 0, i32 10
  store i32 1, i32* %611, align 8
  %612 = load %100*, %100** %8, align 8
  %613 = getelementptr inbounds %100, %100* %612, i32 0, i32 4
  %614 = load %34*, %34** %613, align 8
  %615 = call i64 @_php_stream_tell(%34* %614)
  %616 = load %101*, %101** %11, align 8
  %617 = getelementptr inbounds %101, %101* %616, i32 0, i32 5
  %618 = load %93*, %93** %617, align 8
  %619 = getelementptr inbounds %93, %93* %618, i32 0, i32 12
  store i64 %615, i64* %619, align 8
  %620 = load %101*, %101** %11, align 8
  %621 = getelementptr inbounds %101, %101* %620, i32 0, i32 5
  %622 = load %93*, %93** %621, align 8
  %623 = getelementptr inbounds %93, %93* %622, i32 0, i32 11
  store i64 %615, i64* %623, align 8
  %624 = load %101*, %101** %11, align 8
  %625 = getelementptr inbounds %101, %101* %624, i32 0, i32 1
  store %34* null, %34** %625, align 8
  %626 = load %34*, %34** %12, align 8
  %627 = load %100*, %100** %8, align 8
  %628 = getelementptr inbounds %100, %100* %627, i32 0, i32 4
  %629 = load %34*, %34** %628, align 8
  %630 = call i32 @_php_stream_copy_to_stream_ex(%34* %626, %34* %629, i64 -1, i64* %14)
  %631 = load %100*, %100** %8, align 8
  %632 = getelementptr inbounds %100, %100* %631, i32 0, i32 4
  %633 = load %34*, %34** %632, align 8
  %634 = call i64 @_php_stream_tell(%34* %633)
  %635 = load %101*, %101** %11, align 8
  %636 = getelementptr inbounds %101, %101* %635, i32 0, i32 5
  %637 = load %93*, %93** %636, align 8
  %638 = getelementptr inbounds %93, %93* %637, i32 0, i32 12
  %639 = load i64, i64* %638, align 8
  %640 = sub nsw i64 %634, %639
  %641 = trunc i64 %640 to i32
  %642 = load %101*, %101** %11, align 8
  %643 = getelementptr inbounds %101, %101* %642, i32 0, i32 5
  %644 = load %93*, %93** %643, align 8
  %645 = getelementptr inbounds %93, %93* %644, i32 0, i32 2
  store i32 %641, i32* %645, align 8
  %646 = load %101*, %101** %11, align 8
  %647 = getelementptr inbounds %101, %101* %646, i32 0, i32 5
  %648 = load %93*, %93** %647, align 8
  %649 = getelementptr inbounds %93, %93* %648, i32 0, i32 0
  store i32 %641, i32* %649, align 8
  %650 = load %34*, %34** %12, align 8
  %651 = call i32 @_php_stream_stat(%34* %650, %36* %24)
  %652 = icmp ne i32 %651, -1
  br i1 %652, label %653, label %662

653:                                              ; preds = %603
  %654 = getelementptr inbounds %36, %36* %24, i32 0, i32 0
  %655 = getelementptr inbounds %37, %37* %654, i32 0, i32 3
  %656 = load i32, i32* %655, align 8
  %657 = and i32 %656, 511
  %658 = load %101*, %101** %11, align 8
  %659 = getelementptr inbounds %101, %101* %658, i32 0, i32 5
  %660 = load %93*, %93** %659, align 8
  %661 = getelementptr inbounds %93, %93* %660, i32 0, i32 4
  store i32 %657, i32* %661, align 8
  br label %676

662:                                              ; preds = %603
  %663 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %663) #13
  %664 = call i32 @umask(i32 0) #13
  store i32 %664, i32* %31, align 4
  %665 = load i32, i32* %31, align 4
  %666 = call i32 @umask(i32 %665) #13
  %667 = load i32, i32* %31, align 4
  %668 = xor i32 %667, -1
  %669 = load %101*, %101** %11, align 8
  %670 = getelementptr inbounds %101, %101* %669, i32 0, i32 5
  %671 = load %93*, %93** %670, align 8
  %672 = getelementptr inbounds %93, %93* %671, i32 0, i32 4
  %673 = load i32, i32* %672, align 8
  %674 = and i32 %673, %668
  store i32 %674, i32* %672, align 8
  %675 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %675) #13
  br label %676

676:                                              ; preds = %662, %653
  br label %677

677:                                              ; preds = %676
  %678 = load i8, i8* %7, align 1
  %679 = icmp ne i8 %678, 0
  br i1 %679, label %680, label %683

680:                                              ; preds = %677
  %681 = load %34*, %34** %12, align 8
  %682 = call i32 @_php_stream_free(%34* %681, i32 3)
  br label %683

683:                                              ; preds = %680, %677
  %684 = load %100*, %100** %8, align 8
  %685 = getelementptr inbounds %100, %100* %684, i32 0, i32 3
  %686 = load %4*, %4** %685, align 8
  %687 = load i8*, i8** %21, align 8
  %688 = load i8*, i8** %21, align 8
  %689 = call i64 @strlen(i8* %688) #14
  %690 = load %0*, %0** %20, align 8
  %691 = call i32 @add_assoc_str_ex(%4* %686, i8* %687, i64 %689, %0* %690)
  %692 = load i8*, i8** %18, align 8
  %693 = icmp ne i8* %692, null
  br i1 %693, label %694, label %696

694:                                              ; preds = %683
  %695 = load i8*, i8** %18, align 8
  call void @_efree(i8* %695)
  br label %696

696:                                              ; preds = %694, %683
  %697 = load i8*, i8** %19, align 8
  %698 = icmp ne i8* %697, null
  br i1 %698, label %699, label %701

699:                                              ; preds = %696
  %700 = load i8*, i8** %19, align 8
  call void @_efree(i8* %700)
  br label %701

701:                                              ; preds = %699, %696
  %702 = load i64, i64* %14, align 8
  %703 = trunc i64 %702 to i32
  %704 = load %101*, %101** %11, align 8
  %705 = getelementptr inbounds %101, %101* %704, i32 0, i32 5
  %706 = load %93*, %93** %705, align 8
  %707 = getelementptr inbounds %93, %93* %706, i32 0, i32 0
  store i32 %703, i32* %707, align 8
  %708 = load %101*, %101** %11, align 8
  %709 = getelementptr inbounds %101, %101* %708, i32 0, i32 5
  %710 = load %93*, %93** %709, align 8
  %711 = getelementptr inbounds %93, %93* %710, i32 0, i32 2
  store i32 %703, i32* %711, align 8
  %712 = load %101*, %101** %11, align 8
  %713 = call i32 @phar_entry_delref(%101* %712)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %25, align 4
  br label %714

714:                                              ; preds = %701, %583, %541, %510, %486, %455, %451, %382, %346, %322, %286, %279, %176, %172, %97, %77, %73
  %715 = bitcast %36* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %715) #13
  %716 = bitcast %99** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %716) #13
  %717 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %717) #13
  %718 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %718) #13
  %719 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %719) #13
  %720 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %720) #13
  %721 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %721) #13
  %722 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %722) #13
  %723 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %723) #13
  %724 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %724) #13
  %725 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %725) #13
  %726 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %726) #13
  %727 = bitcast %34** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %727) #13
  %728 = bitcast %101** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %728) #13
  %729 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %729) #13
  %730 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %730) #13
  %731 = bitcast %100** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %731) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #13
  %732 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %732) #13
  %733 = load i32, i32* %3, align 4
  ret i32 %733
}

declare dso_local i32 @phar_flush(%52*, i8*, i64, i32, i8**) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_buildFromIterator(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %100, align 8
  %10 = alloca %4*, align 8
  %11 = alloca %99*, align 8
  %12 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %13 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i64 0, i64* %7, align 8
  %16 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  store i8* null, i8** %8, align 8
  %17 = bitcast %100* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* %17) #13
  %18 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  %21 = call zeroext i8 @444(%4* %20)
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load %23*, %23** %3, align 8
  %26 = getelementptr inbounds %23, %23* %25, i32 0, i32 4
  br label %28

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %27, %24
  %29 = phi %4* [ %26, %24 ], [ null, %27 ]
  store %4* %29, %4** %10, align 8
  %30 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = load %4*, %4** %10, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to %21**
  %34 = load %21*, %21** %33, align 8
  %35 = bitcast %21* %34 to i8*
  %36 = load %4*, %4** %10, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 0
  %38 = bitcast %5* %37 to %21**
  %39 = load %21*, %21** %38, align 8
  %40 = getelementptr inbounds %21, %21* %39, i32 0, i32 3
  %41 = load %22*, %22** %40, align 8
  %42 = getelementptr inbounds %22, %22* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = sub i64 0, %44
  %46 = getelementptr inbounds i8, i8* %35, i64 %45
  %47 = bitcast i8* %46 to %99*
  store %99* %47, %99** %11, align 8
  %48 = load %99*, %99** %11, align 8
  %49 = bitcast %99* %48 to %52**
  %50 = load %52*, %52** %49, align 8
  %51 = icmp ne %52* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %28
  %53 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %54 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %53, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %188

55:                                               ; preds = %28
  %56 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %71

58:                                               ; preds = %55
  %59 = load %99*, %99** %11, align 8
  %60 = bitcast %99* %59 to %52**
  %61 = load %52*, %52** %60, align 8
  %62 = getelementptr inbounds %52, %52* %61, i32 0, i32 24
  %63 = load i16, i16* %62, align 8
  %64 = lshr i16 %63, 7
  %65 = and i16 %64, 1
  %66 = zext i16 %65 to i32
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %58
  %69 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %70 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %69, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @82, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %188

71:                                               ; preds = %58, %55
  %72 = load %23*, %23** %3, align 8
  %73 = getelementptr inbounds %23, %23* %72, i32 0, i32 4
  %74 = getelementptr inbounds %4, %4* %73, i32 0, i32 2
  %75 = bitcast %7* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = load %3*, %3** @zend_ce_traversable, align 8
  %78 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @83, i32 0, i32 0), %4** %5, %3* %77, i8** %8, i64* %7)
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %87

80:                                               ; preds = %71
  br label %81

81:                                               ; preds = %80
  %82 = load %4*, %4** %4, align 8
  %83 = getelementptr inbounds %4, %4* %82, i32 0, i32 1
  %84 = bitcast %6* %83 to i32*
  store i32 2, i32* %84, align 8
  br label %85

85:                                               ; preds = %81
  br label %86

86:                                               ; preds = %85
  store i32 1, i32* %12, align 4
  br label %188

87:                                               ; preds = %71
  %88 = load i64, i64* %7, align 8
  %89 = icmp ugt i64 %88, 4294967295
  %90 = xor i1 %89, true
  %91 = xor i1 %90, true
  %92 = zext i1 %91 to i32
  %93 = sext i32 %92 to i64
  %94 = call i64 @llvm.expect.i64(i64 %93, i64 0)
  %95 = icmp ne i64 %94, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %87
  br label %97

97:                                               ; preds = %96
  %98 = load %4*, %4** %4, align 8
  %99 = getelementptr inbounds %4, %4* %98, i32 0, i32 1
  %100 = bitcast %6* %99 to i32*
  store i32 2, i32* %100, align 8
  br label %101

101:                                              ; preds = %97
  br label %102

102:                                              ; preds = %101
  store i32 1, i32* %12, align 4
  br label %188

103:                                              ; preds = %87
  %104 = load %99*, %99** %11, align 8
  %105 = bitcast %99* %104 to %52**
  %106 = load %52*, %52** %105, align 8
  %107 = getelementptr inbounds %52, %52* %106, i32 0, i32 24
  %108 = load i16, i16* %107, align 8
  %109 = lshr i16 %108, 8
  %110 = and i16 %109, 1
  %111 = zext i16 %110 to i32
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %126

113:                                              ; preds = %103
  %114 = load %99*, %99** %11, align 8
  %115 = bitcast %99* %114 to %52**
  %116 = call i32 @phar_copy_on_write(%52** %115)
  %117 = icmp eq i32 -1, %116
  br i1 %117, label %118, label %126

118:                                              ; preds = %113
  %119 = load %3*, %3** @3, align 8
  %120 = load %99*, %99** %11, align 8
  %121 = bitcast %99* %120 to %52**
  %122 = load %52*, %52** %121, align 8
  %123 = getelementptr inbounds %52, %52* %122, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %119, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %124)
  store i32 1, i32* %12, align 4
  br label %188

126:                                              ; preds = %113, %103
  %127 = load %4*, %4** %4, align 8
  %128 = call i32 @_array_init(%4* %127, i32 0)
  %129 = load %4*, %4** %5, align 8
  %130 = getelementptr inbounds %4, %4* %129, i32 0, i32 0
  %131 = bitcast %5* %130 to %21**
  %132 = load %21*, %21** %131, align 8
  %133 = getelementptr inbounds %21, %21* %132, i32 0, i32 2
  %134 = load %3*, %3** %133, align 8
  %135 = getelementptr inbounds %100, %100* %9, i32 0, i32 1
  store %3* %134, %3** %135, align 8
  %136 = load %99*, %99** %11, align 8
  %137 = getelementptr inbounds %100, %100* %9, i32 0, i32 0
  store %99* %136, %99** %137, align 8
  %138 = load i8*, i8** %8, align 8
  %139 = getelementptr inbounds %100, %100* %9, i32 0, i32 2
  store i8* %138, i8** %139, align 8
  %140 = load i64, i64* %7, align 8
  %141 = trunc i64 %140 to i32
  %142 = getelementptr inbounds %100, %100* %9, i32 0, i32 5
  store i32 %141, i32* %142, align 8
  %143 = load %4*, %4** %4, align 8
  %144 = getelementptr inbounds %100, %100* %9, i32 0, i32 3
  store %4* %143, %4** %144, align 8
  %145 = getelementptr inbounds %100, %100* %9, i32 0, i32 6
  store i32 0, i32* %145, align 4
  %146 = call %34* @_php_stream_fopen_tmpfile(i32 0)
  %147 = getelementptr inbounds %100, %100* %9, i32 0, i32 4
  store %34* %146, %34** %147, align 8
  %148 = getelementptr inbounds %100, %100* %9, i32 0, i32 4
  %149 = load %34*, %34** %148, align 8
  %150 = icmp eq %34* %149, null
  br i1 %150, label %151, label %159

151:                                              ; preds = %126
  %152 = load %3*, %3** @3, align 8
  %153 = load %99*, %99** %11, align 8
  %154 = bitcast %99* %153 to %52**
  %155 = load %52*, %52** %154, align 8
  %156 = getelementptr inbounds %52, %52* %155, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %152, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @84, i32 0, i32 0), i8* %157)
  store i32 1, i32* %12, align 4
  br label %188

159:                                              ; preds = %126
  %160 = load %4*, %4** %5, align 8
  %161 = bitcast %100* %9 to i8*
  %162 = call i32 @spl_iterator_apply(%4* %160, i32 (%20*, i8*)* @453, i8* %161)
  %163 = icmp eq i32 0, %162
  br i1 %163, label %164, label %183

164:                                              ; preds = %159
  %165 = getelementptr inbounds %100, %100* %9, i32 0, i32 4
  %166 = load %34*, %34** %165, align 8
  %167 = load %99*, %99** %11, align 8
  %168 = bitcast %99* %167 to %52**
  %169 = load %52*, %52** %168, align 8
  %170 = getelementptr inbounds %52, %52* %169, i32 0, i32 16
  store %34* %166, %34** %170, align 8
  %171 = load %99*, %99** %11, align 8
  %172 = bitcast %99* %171 to %52**
  %173 = load %52*, %52** %172, align 8
  %174 = call i32 @phar_flush(%52* %173, i8* null, i64 0, i32 0, i8** %6)
  %175 = load i8*, i8** %6, align 8
  %176 = icmp ne i8* %175, null
  br i1 %176, label %177, label %182

177:                                              ; preds = %164
  %178 = load %3*, %3** @3, align 8
  %179 = load i8*, i8** %6, align 8
  %180 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %178, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %179)
  %181 = load i8*, i8** %6, align 8
  call void @_efree(i8* %181)
  br label %182

182:                                              ; preds = %177, %164
  br label %187

183:                                              ; preds = %159
  %184 = getelementptr inbounds %100, %100* %9, i32 0, i32 4
  %185 = load %34*, %34** %184, align 8
  %186 = call i32 @_php_stream_free(%34* %185, i32 3)
  br label %187

187:                                              ; preds = %183, %182
  store i32 0, i32* %12, align 4
  br label %188

188:                                              ; preds = %187, %151, %118, %102, %86, %68, %52
  %189 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #13
  %190 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %100* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 48, i8* %191) #13
  %192 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #13
  %195 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #13
  %196 = load i32, i32* %12, align 4
  switch i32 %196, label %198 [
    i32 0, label %197
    i32 1, label %197
  ]

197:                                              ; preds = %188, %188
  ret void

198:                                              ; preds = %188
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_count(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %99*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = load %23*, %23** %3, align 8
  %13 = getelementptr inbounds %23, %23* %12, i32 0, i32 4
  %14 = call zeroext i8 @444(%4* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 8
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load %23*, %23** %3, align 8
  %19 = getelementptr inbounds %23, %23* %18, i32 0, i32 4
  br label %21

20:                                               ; preds = %2
  br label %21

21:                                               ; preds = %20, %17
  %22 = phi %4* [ %19, %17 ], [ null, %20 ]
  store %4* %22, %4** %6, align 8
  %23 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %4*, %4** %6, align 8
  %25 = getelementptr inbounds %4, %4* %24, i32 0, i32 0
  %26 = bitcast %5* %25 to %21**
  %27 = load %21*, %21** %26, align 8
  %28 = bitcast %21* %27 to i8*
  %29 = load %4*, %4** %6, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = getelementptr inbounds %21, %21* %32, i32 0, i32 3
  %34 = load %22*, %22** %33, align 8
  %35 = getelementptr inbounds %22, %22* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %28, i64 %38
  %40 = bitcast i8* %39 to %99*
  store %99* %40, %99** %7, align 8
  %41 = load %99*, %99** %7, align 8
  %42 = bitcast %99* %41 to %52**
  %43 = load %52*, %52** %42, align 8
  %44 = icmp ne %52* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %21
  %46 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %47 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %46, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %80

48:                                               ; preds = %21
  %49 = load %23*, %23** %3, align 8
  %50 = getelementptr inbounds %23, %23* %49, i32 0, i32 4
  %51 = getelementptr inbounds %4, %4* %50, i32 0, i32 2
  %52 = bitcast %7* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @46, i32 0, i32 0), i64* %5)
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  br label %57

57:                                               ; preds = %56
  %58 = load %4*, %4** %4, align 8
  %59 = getelementptr inbounds %4, %4* %58, i32 0, i32 1
  %60 = bitcast %6* %59 to i32*
  store i32 2, i32* %60, align 8
  br label %61

61:                                               ; preds = %57
  br label %62

62:                                               ; preds = %61
  store i32 1, i32* %8, align 4
  br label %80

63:                                               ; preds = %48
  %64 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #13
  %65 = load %4*, %4** %4, align 8
  store %4* %65, %4** %9, align 8
  %66 = load %99*, %99** %7, align 8
  %67 = bitcast %99* %66 to %52**
  %68 = load %52*, %52** %67, align 8
  %69 = getelementptr inbounds %52, %52* %68, i32 0, i32 9
  %70 = getelementptr inbounds %8, %8* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = load %4*, %4** %9, align 8
  %74 = getelementptr inbounds %4, %4* %73, i32 0, i32 0
  %75 = bitcast %5* %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = load %4*, %4** %9, align 8
  %77 = getelementptr inbounds %4, %4* %76, i32 0, i32 1
  %78 = bitcast %6* %77 to i32*
  store i32 4, i32* %78, align 8
  %79 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #13
  store i32 1, i32* %8, align 4
  br label %80

80:                                               ; preds = %63, %62, %45
  %81 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #13
  %82 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #13
  %83 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_isFileFormat(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %99*, align 8
  %8 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %6, align 8
  %22 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %6, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %6, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %7, align 8
  %40 = load %99*, %99** %7, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %135

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0), i64* %5)
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %62

55:                                               ; preds = %47
  br label %56

56:                                               ; preds = %55
  %57 = load %4*, %4** %4, align 8
  %58 = getelementptr inbounds %4, %4* %57, i32 0, i32 1
  %59 = bitcast %6* %58 to i32*
  store i32 2, i32* %59, align 8
  br label %60

60:                                               ; preds = %56
  br label %61

61:                                               ; preds = %60
  store i32 1, i32* %8, align 4
  br label %135

62:                                               ; preds = %47
  %63 = load i64, i64* %5, align 8
  switch i64 %63, label %131 [
    i64 2, label %64
    i64 3, label %82
    i64 1, label %100
  ]

64:                                               ; preds = %62
  br label %65

65:                                               ; preds = %64
  %66 = load %99*, %99** %7, align 8
  %67 = bitcast %99* %66 to %52**
  %68 = load %52*, %52** %67, align 8
  %69 = getelementptr inbounds %52, %52* %68, i32 0, i32 24
  %70 = load i16, i16* %69, align 8
  %71 = lshr i16 %70, 6
  %72 = and i16 %71, 1
  %73 = zext i16 %72 to i32
  %74 = icmp ne i32 %73, 0
  %75 = zext i1 %74 to i64
  %76 = select i1 %74, i32 3, i32 2
  %77 = load %4*, %4** %4, align 8
  %78 = getelementptr inbounds %4, %4* %77, i32 0, i32 1
  %79 = bitcast %6* %78 to i32*
  store i32 %76, i32* %79, align 8
  br label %80

80:                                               ; preds = %65
  br label %81

81:                                               ; preds = %80
  store i32 1, i32* %8, align 4
  br label %135

82:                                               ; preds = %62
  br label %83

83:                                               ; preds = %82
  %84 = load %99*, %99** %7, align 8
  %85 = bitcast %99* %84 to %52**
  %86 = load %52*, %52** %85, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 24
  %88 = load i16, i16* %87, align 8
  %89 = lshr i16 %88, 5
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  %93 = zext i1 %92 to i64
  %94 = select i1 %92, i32 3, i32 2
  %95 = load %4*, %4** %4, align 8
  %96 = getelementptr inbounds %4, %4* %95, i32 0, i32 1
  %97 = bitcast %6* %96 to i32*
  store i32 %94, i32* %97, align 8
  br label %98

98:                                               ; preds = %83
  br label %99

99:                                               ; preds = %98
  store i32 1, i32* %8, align 4
  br label %135

100:                                              ; preds = %62
  br label %101

101:                                              ; preds = %100
  %102 = load %99*, %99** %7, align 8
  %103 = bitcast %99* %102 to %52**
  %104 = load %52*, %52** %103, align 8
  %105 = getelementptr inbounds %52, %52* %104, i32 0, i32 24
  %106 = load i16, i16* %105, align 8
  %107 = lshr i16 %106, 6
  %108 = and i16 %107, 1
  %109 = zext i16 %108 to i32
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %122, label %111

111:                                              ; preds = %101
  %112 = load %99*, %99** %7, align 8
  %113 = bitcast %99* %112 to %52**
  %114 = load %52*, %52** %113, align 8
  %115 = getelementptr inbounds %52, %52* %114, i32 0, i32 24
  %116 = load i16, i16* %115, align 8
  %117 = lshr i16 %116, 5
  %118 = and i16 %117, 1
  %119 = zext i16 %118 to i32
  %120 = icmp ne i32 %119, 0
  %121 = xor i1 %120, true
  br label %122

122:                                              ; preds = %111, %101
  %123 = phi i1 [ false, %101 ], [ %121, %111 ]
  %124 = zext i1 %123 to i64
  %125 = select i1 %123, i32 3, i32 2
  %126 = load %4*, %4** %4, align 8
  %127 = getelementptr inbounds %4, %4* %126, i32 0, i32 1
  %128 = bitcast %6* %127 to i32*
  store i32 %125, i32* %128, align 8
  br label %129

129:                                              ; preds = %122
  br label %130

130:                                              ; preds = %129
  store i32 1, i32* %8, align 4
  br label %135

131:                                              ; preds = %62
  %132 = load %3*, %3** @3, align 8
  %133 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %132, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @86, i32 0, i32 0))
  br label %134

134:                                              ; preds = %131
  store i32 0, i32* %8, align 4
  br label %135

135:                                              ; preds = %134, %130, %99, %81, %61, %44
  %136 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #13
  %137 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #13
  %138 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #13
  %139 = load i32, i32* %8, align 4
  switch i32 %139, label %141 [
    i32 0, label %140
    i32 1, label %140
  ]

140:                                              ; preds = %135, %135
  ret void

141:                                              ; preds = %135
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_convertToExecutable(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %21*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %4*, align 8
  %13 = alloca %99*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  store i8* null, i8** %5, align 8
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #13
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store i64 0, i64* %7, align 8
  %19 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #13
  %20 = bitcast %21** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  store i64 9021976, i64* %10, align 8
  %22 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  store i64 9021976, i64* %11, align 8
  %23 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %23*, %23** %3, align 8
  %25 = getelementptr inbounds %23, %23* %24, i32 0, i32 4
  %26 = call zeroext i8 @444(%4* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = load %23*, %23** %3, align 8
  %31 = getelementptr inbounds %23, %23* %30, i32 0, i32 4
  br label %33

32:                                               ; preds = %2
  br label %33

33:                                               ; preds = %32, %29
  %34 = phi %4* [ %31, %29 ], [ null, %32 ]
  store %4* %34, %4** %12, align 8
  %35 = bitcast %99** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = load %4*, %4** %12, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 0
  %38 = bitcast %5* %37 to %21**
  %39 = load %21*, %21** %38, align 8
  %40 = bitcast %21* %39 to i8*
  %41 = load %4*, %4** %12, align 8
  %42 = getelementptr inbounds %4, %4* %41, i32 0, i32 0
  %43 = bitcast %5* %42 to %21**
  %44 = load %21*, %21** %43, align 8
  %45 = getelementptr inbounds %21, %21* %44, i32 0, i32 3
  %46 = load %22*, %22** %45, align 8
  %47 = getelementptr inbounds %22, %22* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = sub i64 0, %49
  %51 = getelementptr inbounds i8, i8* %40, i64 %50
  %52 = bitcast i8* %51 to %99*
  store %99* %52, %99** %13, align 8
  %53 = load %99*, %99** %13, align 8
  %54 = bitcast %99* %53 to %52**
  %55 = load %52*, %52** %54, align 8
  %56 = icmp ne %52* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %33
  %58 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %59 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %58, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

60:                                               ; preds = %33
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @87, i32 0, i32 0), i64* %10, i64* %11, i8** %5, i64* %7)
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %69

68:                                               ; preds = %60
  store i32 1, i32* %14, align 4
  br label %204

69:                                               ; preds = %60
  %70 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %74 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %73, i64 0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @88, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

75:                                               ; preds = %69
  %76 = load i64, i64* %10, align 8
  switch i64 %76, label %103 [
    i64 9021976, label %77
    i64 0, label %77
    i64 1, label %102
    i64 2, label %102
    i64 3, label %102
  ]

77:                                               ; preds = %75, %75
  %78 = load %99*, %99** %13, align 8
  %79 = bitcast %99* %78 to %52**
  %80 = load %52*, %52** %79, align 8
  %81 = getelementptr inbounds %52, %52* %80, i32 0, i32 24
  %82 = load i16, i16* %81, align 8
  %83 = lshr i16 %82, 6
  %84 = and i16 %83, 1
  %85 = zext i16 %84 to i32
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %77
  store i64 2, i64* %10, align 8
  br label %101

88:                                               ; preds = %77
  %89 = load %99*, %99** %13, align 8
  %90 = bitcast %99* %89 to %52**
  %91 = load %52*, %52** %90, align 8
  %92 = getelementptr inbounds %52, %52* %91, i32 0, i32 24
  %93 = load i16, i16* %92, align 8
  %94 = lshr i16 %93, 5
  %95 = and i16 %94, 1
  %96 = zext i16 %95 to i32
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %88
  store i64 3, i64* %10, align 8
  br label %100

99:                                               ; preds = %88
  store i64 1, i64* %10, align 8
  br label %100

100:                                              ; preds = %99, %98
  br label %101

101:                                              ; preds = %100, %87
  br label %106

102:                                              ; preds = %75, %75, %75
  br label %106

103:                                              ; preds = %75
  %104 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %105 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %104, i64 0, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @89, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

106:                                              ; preds = %102, %101
  %107 = load i64, i64* %11, align 8
  switch i64 %107, label %142 [
    i64 9021976, label %108
    i64 0, label %115
    i64 4096, label %116
    i64 8192, label %129
  ]

108:                                              ; preds = %106
  %109 = load %99*, %99** %13, align 8
  %110 = bitcast %99* %109 to %52**
  %111 = load %52*, %52** %110, align 8
  %112 = getelementptr inbounds %52, %52* %111, i32 0, i32 12
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 15728640
  store i32 %114, i32* %8, align 4
  br label %145

115:                                              ; preds = %106
  store i32 0, i32* %8, align 4
  br label %145

116:                                              ; preds = %106
  %117 = load i64, i64* %10, align 8
  %118 = icmp eq i64 %117, 3
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  %120 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %121 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %120, i64 0, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @90, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

122:                                              ; preds = %116
  %123 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %122
  %126 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %127 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %126, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @91, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

128:                                              ; preds = %122
  store i32 1048576, i32* %8, align 4
  br label %145

129:                                              ; preds = %106
  %130 = load i64, i64* %10, align 8
  %131 = icmp eq i64 %130, 3
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %134 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %133, i64 0, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @92, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

135:                                              ; preds = %129
  %136 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %140 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %139, i64 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @93, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

141:                                              ; preds = %135
  store i32 2097152, i32* %8, align 4
  br label %145

142:                                              ; preds = %106
  %143 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %144 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %143, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @94, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

145:                                              ; preds = %141, %128, %115, %108
  %146 = load %99*, %99** %13, align 8
  %147 = bitcast %99* %146 to %52**
  %148 = load %52*, %52** %147, align 8
  %149 = getelementptr inbounds %52, %52* %148, i32 0, i32 24
  %150 = load i16, i16* %149, align 8
  %151 = lshr i16 %150, 7
  %152 = and i16 %151, 1
  %153 = zext i16 %152 to i32
  store i32 %153, i32* %6, align 4
  %154 = load %99*, %99** %13, align 8
  %155 = bitcast %99* %154 to %52**
  %156 = load %52*, %52** %155, align 8
  %157 = getelementptr inbounds %52, %52* %156, i32 0, i32 24
  %158 = load i16, i16* %157, align 8
  %159 = and i16 %158, -129
  store i16 %159, i16* %157, align 8
  %160 = load %99*, %99** %13, align 8
  %161 = bitcast %99* %160 to %52**
  %162 = load %52*, %52** %161, align 8
  %163 = load i64, i64* %10, align 8
  %164 = trunc i64 %163 to i32
  %165 = load i8*, i8** %5, align 8
  %166 = load i32, i32* %8, align 4
  %167 = call %21* @454(%52* %162, i32 %164, i8* %165, i32 %166)
  store %21* %167, %21** %9, align 8
  %168 = load i32, i32* %6, align 4
  %169 = load %99*, %99** %13, align 8
  %170 = bitcast %99* %169 to %52**
  %171 = load %52*, %52** %170, align 8
  %172 = getelementptr inbounds %52, %52* %171, i32 0, i32 24
  %173 = trunc i32 %168 to i16
  %174 = load i16, i16* %172, align 8
  %175 = and i16 %173, 1
  %176 = shl i16 %175, 7
  %177 = and i16 %174, -129
  %178 = or i16 %177, %176
  store i16 %178, i16* %172, align 8
  %179 = zext i16 %175 to i32
  %180 = load %21*, %21** %9, align 8
  %181 = icmp ne %21* %180, null
  br i1 %181, label %182, label %196

182:                                              ; preds = %145
  br label %183

183:                                              ; preds = %182
  %184 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %184) #13
  %185 = load %4*, %4** %4, align 8
  store %4* %185, %4** %15, align 8
  %186 = load %21*, %21** %9, align 8
  %187 = load %4*, %4** %15, align 8
  %188 = getelementptr inbounds %4, %4* %187, i32 0, i32 0
  %189 = bitcast %5* %188 to %21**
  store %21* %186, %21** %189, align 8
  %190 = load %4*, %4** %15, align 8
  %191 = getelementptr inbounds %4, %4* %190, i32 0, i32 1
  %192 = bitcast %6* %191 to i32*
  store i32 1032, i32* %192, align 8
  %193 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  br label %194

194:                                              ; preds = %183
  br label %195

195:                                              ; preds = %194
  br label %203

196:                                              ; preds = %145
  br label %197

197:                                              ; preds = %196
  %198 = load %4*, %4** %4, align 8
  %199 = getelementptr inbounds %4, %4* %198, i32 0, i32 1
  %200 = bitcast %6* %199 to i32*
  store i32 1, i32* %200, align 8
  br label %201

201:                                              ; preds = %197
  br label %202

202:                                              ; preds = %201
  store i32 1, i32* %14, align 4
  br label %204

203:                                              ; preds = %195
  store i32 0, i32* %14, align 4
  br label %204

204:                                              ; preds = %203, %202, %142, %138, %132, %125, %119, %103, %72, %68, %57
  %205 = bitcast %99** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %205) #13
  %206 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #13
  %207 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %207) #13
  %208 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %208) #13
  %209 = bitcast %21** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #13
  %210 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %210) #13
  %211 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %211) #13
  %212 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %212) #13
  %213 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %213) #13
  %214 = load i32, i32* %14, align 4
  switch i32 %214, label %216 [
    i32 0, label %215
    i32 1, label %215
  ]

215:                                              ; preds = %204, %204
  ret void

216:                                              ; preds = %204
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %21* @454(%52* %0, i32 %1, i8* %2, i32 %3) #0 {
  %5 = alloca %21*, align 8
  %6 = alloca %52*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %52*, align 8
  %11 = alloca %93*, align 8
  %12 = alloca %93, align 8
  %13 = alloca %21*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %4*, align 8
  %16 = alloca %4*, align 8
  %17 = alloca %96*, align 8
  %18 = alloca i32, align 4
  %19 = alloca %8*, align 8
  %20 = alloca %10*, align 8
  %21 = alloca %10*, align 8
  %22 = alloca %4*, align 8
  store %52* %0, %52** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %23 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast %93** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %93* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* %25) #13
  %26 = bitcast %21** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  store %52* null, %52** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 49), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 47), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 45), align 8
  %27 = call noalias i8* @_ecalloc(i64 1, i64 328) #17
  %28 = bitcast i8* %27 to %52*
  store %52* %28, %52** %10, align 8
  %29 = load i32, i32* %9, align 4
  %30 = load %52*, %52** %10, align 8
  %31 = getelementptr inbounds %52, %52* %30, i32 0, i32 12
  store i32 %29, i32* %31, align 8
  %32 = load %52*, %52** %6, align 8
  %33 = getelementptr inbounds %52, %52* %32, i32 0, i32 24
  %34 = load i16, i16* %33, align 8
  %35 = lshr i16 %34, 7
  %36 = and i16 %35, 1
  %37 = zext i16 %36 to i32
  %38 = load %52*, %52** %10, align 8
  %39 = getelementptr inbounds %52, %52* %38, i32 0, i32 24
  %40 = trunc i32 %37 to i16
  %41 = load i16, i16* %39, align 8
  %42 = and i16 %40, 1
  %43 = shl i16 %42, 7
  %44 = and i16 %41, -129
  %45 = or i16 %44, %43
  store i16 %45, i16* %39, align 8
  %46 = zext i16 %42 to i32
  %47 = load i32, i32* %7, align 4
  switch i32 %47, label %60 [
    i32 2, label %48
    i32 3, label %54
  ]

48:                                               ; preds = %4
  %49 = load %52*, %52** %10, align 8
  %50 = getelementptr inbounds %52, %52* %49, i32 0, i32 24
  %51 = load i16, i16* %50, align 8
  %52 = and i16 %51, -65
  %53 = or i16 %52, 64
  store i16 %53, i16* %50, align 8
  br label %65

54:                                               ; preds = %4
  %55 = load %52*, %52** %10, align 8
  %56 = getelementptr inbounds %52, %52* %55, i32 0, i32 24
  %57 = load i16, i16* %56, align 8
  %58 = and i16 %57, -33
  %59 = or i16 %58, 32
  store i16 %59, i16* %56, align 8
  br label %65

60:                                               ; preds = %4
  %61 = load %52*, %52** %10, align 8
  %62 = getelementptr inbounds %52, %52* %61, i32 0, i32 24
  %63 = load i16, i16* %62, align 8
  %64 = and i16 %63, -129
  store i16 %64, i16* %62, align 8
  br label %65

65:                                               ; preds = %60, %54, %48
  %66 = load %52*, %52** %10, align 8
  %67 = getelementptr inbounds %52, %52* %66, i32 0, i32 9
  call void @_zend_hash_init(%8* %67, i32 168, void (%4*)* @destroy_phar_manifest_entry, i8 zeroext 0)
  %68 = load %52*, %52** %10, align 8
  %69 = getelementptr inbounds %52, %52* %68, i32 0, i32 11
  call void @_zend_hash_init(%8* %69, i32 8, void (%4*)* null, i8 zeroext 0)
  %70 = load %52*, %52** %10, align 8
  %71 = getelementptr inbounds %52, %52* %70, i32 0, i32 10
  call void @_zend_hash_init(%8* %71, i32 8, void (%4*)* null, i8 zeroext 0)
  %72 = call %34* @_php_stream_fopen_tmpfile(i32 0)
  %73 = load %52*, %52** %10, align 8
  %74 = getelementptr inbounds %52, %52* %73, i32 0, i32 15
  store %34* %72, %34** %74, align 8
  %75 = load %52*, %52** %10, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 15
  %77 = load %34*, %34** %76, align 8
  %78 = icmp eq %34* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %65
  %80 = load %3*, %3** @3, align 8
  %81 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %80, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @344, i32 0, i32 0))
  store %21* null, %21** %5, align 8
  store i32 1, i32* %14, align 4
  br label %384

82:                                               ; preds = %65
  %83 = load %52*, %52** %6, align 8
  %84 = getelementptr inbounds %52, %52* %83, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = load %52*, %52** %10, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 0
  store i8* %85, i8** %87, align 8
  %88 = load %52*, %52** %6, align 8
  %89 = getelementptr inbounds %52, %52* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = load %52*, %52** %10, align 8
  %92 = getelementptr inbounds %52, %52* %91, i32 0, i32 1
  store i32 %90, i32* %92, align 8
  %93 = load %52*, %52** %6, align 8
  %94 = getelementptr inbounds %52, %52* %93, i32 0, i32 24
  %95 = load i16, i16* %94, align 8
  %96 = and i16 %95, 1
  %97 = zext i16 %96 to i32
  %98 = load %52*, %52** %10, align 8
  %99 = getelementptr inbounds %52, %52* %98, i32 0, i32 24
  %100 = trunc i32 %97 to i16
  %101 = load i16, i16* %99, align 8
  %102 = and i16 %100, 1
  %103 = and i16 %101, -2
  %104 = or i16 %103, %102
  store i16 %104, i16* %99, align 8
  %105 = zext i16 %102 to i32
  %106 = load %52*, %52** %6, align 8
  %107 = getelementptr inbounds %52, %52* %106, i32 0, i32 4
  %108 = load i8*, i8** %107, align 8
  %109 = load %52*, %52** %10, align 8
  %110 = getelementptr inbounds %52, %52* %109, i32 0, i32 4
  store i8* %108, i8** %110, align 8
  %111 = load %52*, %52** %6, align 8
  %112 = getelementptr inbounds %52, %52* %111, i32 0, i32 21
  %113 = call zeroext i8 @444(%4* %112)
  %114 = zext i8 %113 to i32
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %170

116:                                              ; preds = %82
  br label %117

117:                                              ; preds = %116
  %118 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %118) #13
  %119 = load %52*, %52** %10, align 8
  %120 = getelementptr inbounds %52, %52* %119, i32 0, i32 21
  store %4* %120, %4** %15, align 8
  %121 = bitcast %4** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %121) #13
  %122 = load %52*, %52** %6, align 8
  %123 = getelementptr inbounds %52, %52* %122, i32 0, i32 21
  store %4* %123, %4** %16, align 8
  %124 = bitcast %96** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %124) #13
  %125 = load %4*, %4** %16, align 8
  %126 = getelementptr inbounds %4, %4* %125, i32 0, i32 0
  %127 = bitcast %5* %126 to %96**
  %128 = load %96*, %96** %127, align 8
  store %96* %128, %96** %17, align 8
  %129 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %129) #13
  %130 = load %4*, %4** %16, align 8
  %131 = getelementptr inbounds %4, %4* %130, i32 0, i32 1
  %132 = bitcast %6* %131 to i32*
  %133 = load i32, i32* %132, align 8
  store i32 %133, i32* %18, align 4
  br label %134

134:                                              ; preds = %117
  %135 = load %96*, %96** %17, align 8
  %136 = load %4*, %4** %15, align 8
  %137 = getelementptr inbounds %4, %4* %136, i32 0, i32 0
  %138 = bitcast %5* %137 to %96**
  store %96* %135, %96** %138, align 8
  %139 = load i32, i32* %18, align 4
  %140 = load %4*, %4** %15, align 8
  %141 = getelementptr inbounds %4, %4* %140, i32 0, i32 1
  %142 = bitcast %6* %141 to i32*
  store i32 %139, i32* %142, align 8
  br label %143

143:                                              ; preds = %134
  br label %144

144:                                              ; preds = %143
  %145 = load i32, i32* %18, align 4
  %146 = and i32 %145, 5120
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %161

148:                                              ; preds = %144
  %149 = load i32, i32* %18, align 4
  %150 = and i32 %149, 4096
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = load %4*, %4** %15, align 8
  call void @_zval_copy_ctor_func(%4* %153)
  br label %160

154:                                              ; preds = %148
  %155 = load %96*, %96** %17, align 8
  %156 = getelementptr inbounds %96, %96* %155, i32 0, i32 0
  %157 = getelementptr inbounds %1, %1* %156, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %157, align 4
  br label %160

160:                                              ; preds = %154, %152
  br label %161

161:                                              ; preds = %160, %144
  %162 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %162) #13
  %163 = bitcast %96** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #13
  %164 = bitcast %4** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #13
  %165 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  br label %166

166:                                              ; preds = %161
  br label %167

167:                                              ; preds = %166
  %168 = load %52*, %52** %10, align 8
  %169 = getelementptr inbounds %52, %52* %168, i32 0, i32 22
  store i32 0, i32* %169, align 8
  br label %170

170:                                              ; preds = %167, %82
  br label %171

171:                                              ; preds = %170
  %172 = bitcast %8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172) #13
  %173 = load %52*, %52** %6, align 8
  %174 = getelementptr inbounds %52, %52* %173, i32 0, i32 9
  store %8* %174, %8** %19, align 8
  %175 = bitcast %10** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %175) #13
  %176 = load %8*, %8** %19, align 8
  %177 = getelementptr inbounds %8, %8* %176, i32 0, i32 3
  %178 = load %10*, %10** %177, align 8
  store %10* %178, %10** %20, align 8
  %179 = bitcast %10** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %179) #13
  %180 = load %10*, %10** %20, align 8
  %181 = load %8*, %8** %19, align 8
  %182 = getelementptr inbounds %8, %8* %181, i32 0, i32 4
  %183 = load i32, i32* %182, align 8
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds %10, %10* %180, i64 %184
  store %10* %185, %10** %21, align 8
  br label %186

186:                                              ; preds = %341, %171
  %187 = load %10*, %10** %20, align 8
  %188 = load %10*, %10** %21, align 8
  %189 = icmp ne %10* %187, %188
  br i1 %189, label %190, label %344

190:                                              ; preds = %186
  %191 = bitcast %4** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %191) #13
  %192 = load %10*, %10** %20, align 8
  %193 = getelementptr inbounds %10, %10* %192, i32 0, i32 0
  store %4* %193, %4** %22, align 8
  %194 = load %4*, %4** %22, align 8
  %195 = call zeroext i8 @444(%4* %194)
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 0
  %198 = xor i1 %197, true
  %199 = xor i1 %198, true
  %200 = zext i1 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = call i64 @llvm.expect.i64(i64 %201, i64 0)
  %203 = icmp ne i64 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %190
  store i32 11, i32* %14, align 4
  br label %337

205:                                              ; preds = %190
  %206 = load %4*, %4** %22, align 8
  %207 = getelementptr inbounds %4, %4* %206, i32 0, i32 0
  %208 = bitcast %5* %207 to i8**
  %209 = load i8*, i8** %208, align 8
  %210 = bitcast i8* %209 to %93*
  store %93* %210, %93** %11, align 8
  %211 = load %93*, %93** %11, align 8
  %212 = bitcast %93* %12 to i8*
  %213 = bitcast %93* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 168, i1 false)
  %214 = getelementptr inbounds %93, %93* %12, i32 0, i32 20
  %215 = load i8*, i8** %214, align 8
  %216 = icmp ne i8* %215, null
  br i1 %216, label %217, label %222

217:                                              ; preds = %205
  %218 = getelementptr inbounds %93, %93* %12, i32 0, i32 20
  %219 = load i8*, i8** %218, align 8
  %220 = call noalias i8* @_estrdup(i8* %219)
  %221 = getelementptr inbounds %93, %93* %12, i32 0, i32 20
  store i8* %220, i8** %221, align 8
  br label %249

222:                                              ; preds = %205
  %223 = getelementptr inbounds %93, %93* %12, i32 0, i32 17
  %224 = load i8*, i8** %223, align 8
  %225 = icmp ne i8* %224, null
  br i1 %225, label %226, label %231

226:                                              ; preds = %222
  %227 = getelementptr inbounds %93, %93* %12, i32 0, i32 17
  %228 = load i8*, i8** %227, align 8
  %229 = call noalias i8* @_estrdup(i8* %228)
  %230 = getelementptr inbounds %93, %93* %12, i32 0, i32 17
  store i8* %229, i8** %230, align 8
  br label %249

231:                                              ; preds = %222
  %232 = getelementptr inbounds %93, %93* %12, i32 0, i32 19
  %233 = getelementptr inbounds %88, %88* %232, i32 0, i32 0
  store %0* null, %0** %233, align 8
  %234 = load %52*, %52** %10, align 8
  %235 = getelementptr inbounds %52, %52* %234, i32 0, i32 15
  %236 = load %34*, %34** %235, align 8
  %237 = call i32 @471(%93* %12, %34* %236)
  %238 = icmp eq i32 -1, %237
  br i1 %238, label %239, label %248

239:                                              ; preds = %231
  %240 = load %52*, %52** %10, align 8
  %241 = getelementptr inbounds %52, %52* %240, i32 0, i32 9
  call void @zend_hash_destroy(%8* %241)
  %242 = load %52*, %52** %10, align 8
  %243 = getelementptr inbounds %52, %52* %242, i32 0, i32 15
  %244 = load %34*, %34** %243, align 8
  %245 = call i32 @_php_stream_free(%34* %244, i32 3)
  %246 = load %52*, %52** %10, align 8
  %247 = bitcast %52* %246 to i8*
  call void @_efree(i8* %247)
  store %21* null, %21** %5, align 8
  store i32 1, i32* %14, align 4
  br label %337

248:                                              ; preds = %231
  br label %249

249:                                              ; preds = %248, %226, %217
  %250 = getelementptr inbounds %93, %93* %12, i32 0, i32 9
  %251 = load i8*, i8** %250, align 8
  %252 = getelementptr inbounds %93, %93* %12, i32 0, i32 8
  %253 = load i32, i32* %252, align 4
  %254 = zext i32 %253 to i64
  %255 = call noalias i8* @_estrndup(i8* %251, i64 %254)
  %256 = getelementptr inbounds %93, %93* %12, i32 0, i32 9
  store i8* %255, i8** %256, align 8
  %257 = getelementptr inbounds %93, %93* %12, i32 0, i32 6
  %258 = call zeroext i8 @444(%4* %257)
  %259 = zext i8 %258 to i32
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %265

261:                                              ; preds = %249
  %262 = getelementptr inbounds %93, %93* %12, i32 0, i32 6
  call void @459(%4* %262)
  %263 = getelementptr inbounds %93, %93* %12, i32 0, i32 19
  %264 = getelementptr inbounds %88, %88* %263, i32 0, i32 0
  store %0* null, %0** %264, align 8
  br label %265

265:                                              ; preds = %261, %249
  %266 = load %52*, %52** %10, align 8
  %267 = getelementptr inbounds %52, %52* %266, i32 0, i32 24
  %268 = load i16, i16* %267, align 8
  %269 = lshr i16 %268, 5
  %270 = and i16 %269, 1
  %271 = zext i16 %270 to i32
  %272 = getelementptr inbounds %93, %93* %12, i32 0, i32 24
  %273 = trunc i32 %271 to i16
  %274 = load i16, i16* %272, align 2
  %275 = and i16 %273, 1
  %276 = shl i16 %275, 7
  %277 = and i16 %274, -129
  %278 = or i16 %277, %276
  store i16 %278, i16* %272, align 2
  %279 = zext i16 %275 to i32
  %280 = load %52*, %52** %10, align 8
  %281 = getelementptr inbounds %52, %52* %280, i32 0, i32 24
  %282 = load i16, i16* %281, align 8
  %283 = lshr i16 %282, 6
  %284 = and i16 %283, 1
  %285 = zext i16 %284 to i32
  %286 = getelementptr inbounds %93, %93* %12, i32 0, i32 24
  %287 = trunc i32 %285 to i16
  %288 = load i16, i16* %286, align 2
  %289 = and i16 %287, 1
  %290 = shl i16 %289, 6
  %291 = and i16 %288, -65
  %292 = or i16 %291, %290
  store i16 %292, i16* %286, align 2
  %293 = zext i16 %289 to i32
  %294 = getelementptr inbounds %93, %93* %12, i32 0, i32 24
  %295 = load i16, i16* %294, align 2
  %296 = lshr i16 %295, 6
  %297 = and i16 %296, 1
  %298 = zext i16 %297 to i32
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %312

300:                                              ; preds = %265
  %301 = load %93*, %93** %11, align 8
  %302 = getelementptr inbounds %93, %93* %301, i32 0, i32 24
  %303 = load i16, i16* %302, align 2
  %304 = lshr i16 %303, 3
  %305 = and i16 %304, 1
  %306 = zext i16 %305 to i32
  %307 = icmp ne i32 %306, 0
  %308 = zext i1 %307 to i64
  %309 = select i1 %307, i32 53, i32 48
  %310 = trunc i32 %309 to i8
  %311 = getelementptr inbounds %93, %93* %12, i32 0, i32 21
  store i8 %310, i8* %311, align 8
  br label %312

312:                                              ; preds = %300, %265
  %313 = getelementptr inbounds %93, %93* %12, i32 0, i32 24
  %314 = load i16, i16* %313, align 2
  %315 = and i16 %314, -3
  %316 = or i16 %315, 2
  store i16 %316, i16* %313, align 2
  %317 = load %52*, %52** %10, align 8
  %318 = getelementptr inbounds %93, %93* %12, i32 0, i32 18
  store %52* %317, %52** %318, align 8
  %319 = getelementptr inbounds %93, %93* %12, i32 0, i32 4
  %320 = load i32, i32* %319, align 8
  %321 = and i32 %320, -61441
  %322 = getelementptr inbounds %93, %93* %12, i32 0, i32 5
  store i32 %321, i32* %322, align 4
  call void @472(%93* %12)
  %323 = load %52*, %52** %10, align 8
  %324 = getelementptr inbounds %52, %52* %323, i32 0, i32 9
  %325 = getelementptr inbounds %93, %93* %12, i32 0, i32 9
  %326 = load i8*, i8** %325, align 8
  %327 = getelementptr inbounds %93, %93* %12, i32 0, i32 8
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i64
  %330 = bitcast %93* %12 to i8*
  %331 = call i8* @460(%8* %324, i8* %326, i64 %329, i8* %330, i64 168)
  %332 = load %52*, %52** %10, align 8
  %333 = getelementptr inbounds %93, %93* %12, i32 0, i32 9
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds %93, %93* %12, i32 0, i32 8
  %336 = load i32, i32* %335, align 4
  call void @phar_add_virtual_dirs(%52* %332, i8* %334, i32 %336)
  store i32 0, i32* %14, align 4
  br label %337

337:                                              ; preds = %312, %239, %204
  %338 = bitcast %4** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #13
  %339 = load i32, i32* %14, align 4
  switch i32 %339, label %345 [
    i32 0, label %340
    i32 11, label %341
  ]

340:                                              ; preds = %337
  br label %341

341:                                              ; preds = %340, %337
  %342 = load %10*, %10** %20, align 8
  %343 = getelementptr inbounds %10, %10* %342, i32 1
  store %10* %343, %10** %20, align 8
  br label %186

344:                                              ; preds = %186
  store i32 0, i32* %14, align 4
  br label %345

345:                                              ; preds = %344, %337
  %346 = bitcast %10** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #13
  %347 = bitcast %10** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347) #13
  %348 = bitcast %8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %348) #13
  %349 = load i32, i32* %14, align 4
  switch i32 %349, label %384 [
    i32 0, label %350
  ]

350:                                              ; preds = %345
  br label %351

351:                                              ; preds = %350
  br label %352

352:                                              ; preds = %351
  %353 = load i8*, i8** %8, align 8
  %354 = call %21* @473(%52** %10, i8* %353)
  store %21* %354, %21** %13, align 8
  %355 = icmp ne %21* %354, null
  br i1 %355, label %356, label %358

356:                                              ; preds = %352
  %357 = load %21*, %21** %13, align 8
  store %21* %357, %21** %5, align 8
  store i32 1, i32* %14, align 4
  br label %384

358:                                              ; preds = %352
  %359 = load %52*, %52** %10, align 8
  %360 = icmp ne %52* %359, null
  br i1 %360, label %361, label %383

361:                                              ; preds = %358
  %362 = load %52*, %52** %10, align 8
  %363 = getelementptr inbounds %52, %52* %362, i32 0, i32 9
  call void @zend_hash_destroy(%8* %363)
  %364 = load %52*, %52** %10, align 8
  %365 = getelementptr inbounds %52, %52* %364, i32 0, i32 11
  call void @zend_hash_destroy(%8* %365)
  %366 = load %52*, %52** %10, align 8
  %367 = getelementptr inbounds %52, %52* %366, i32 0, i32 10
  call void @zend_hash_destroy(%8* %367)
  %368 = load %52*, %52** %10, align 8
  %369 = getelementptr inbounds %52, %52* %368, i32 0, i32 15
  %370 = load %34*, %34** %369, align 8
  %371 = icmp ne %34* %370, null
  br i1 %371, label %372, label %377

372:                                              ; preds = %361
  %373 = load %52*, %52** %10, align 8
  %374 = getelementptr inbounds %52, %52* %373, i32 0, i32 15
  %375 = load %34*, %34** %374, align 8
  %376 = call i32 @_php_stream_free(%34* %375, i32 3)
  br label %377

377:                                              ; preds = %372, %361
  %378 = load %52*, %52** %10, align 8
  %379 = getelementptr inbounds %52, %52* %378, i32 0, i32 0
  %380 = load i8*, i8** %379, align 8
  call void @_efree(i8* %380)
  %381 = load %52*, %52** %10, align 8
  %382 = bitcast %52* %381 to i8*
  call void @_efree(i8* %382)
  br label %383

383:                                              ; preds = %377, %358
  store %21* null, %21** %5, align 8
  store i32 1, i32* %14, align 4
  br label %384

384:                                              ; preds = %383, %356, %345, %79
  %385 = bitcast %21** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %385) #13
  %386 = bitcast %93* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 168, i8* %386) #13
  %387 = bitcast %93** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #13
  %388 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388) #13
  %389 = load %21*, %21** %5, align 8
  ret %21* %389
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_convertToData(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %21*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %4*, align 8
  %13 = alloca %99*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  store i8* null, i8** %5, align 8
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #13
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store i64 0, i64* %7, align 8
  %19 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #13
  %20 = bitcast %21** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  store i64 9021976, i64* %10, align 8
  %22 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  store i64 9021976, i64* %11, align 8
  %23 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %23*, %23** %3, align 8
  %25 = getelementptr inbounds %23, %23* %24, i32 0, i32 4
  %26 = call zeroext i8 @444(%4* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = load %23*, %23** %3, align 8
  %31 = getelementptr inbounds %23, %23* %30, i32 0, i32 4
  br label %33

32:                                               ; preds = %2
  br label %33

33:                                               ; preds = %32, %29
  %34 = phi %4* [ %31, %29 ], [ null, %32 ]
  store %4* %34, %4** %12, align 8
  %35 = bitcast %99** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = load %4*, %4** %12, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 0
  %38 = bitcast %5* %37 to %21**
  %39 = load %21*, %21** %38, align 8
  %40 = bitcast %21* %39 to i8*
  %41 = load %4*, %4** %12, align 8
  %42 = getelementptr inbounds %4, %4* %41, i32 0, i32 0
  %43 = bitcast %5* %42 to %21**
  %44 = load %21*, %21** %43, align 8
  %45 = getelementptr inbounds %21, %21* %44, i32 0, i32 3
  %46 = load %22*, %22** %45, align 8
  %47 = getelementptr inbounds %22, %22* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = sub i64 0, %49
  %51 = getelementptr inbounds i8, i8* %40, i64 %50
  %52 = bitcast i8* %51 to %99*
  store %99* %52, %99** %13, align 8
  %53 = load %99*, %99** %13, align 8
  %54 = bitcast %99* %53 to %52**
  %55 = load %52*, %52** %54, align 8
  %56 = icmp ne %52* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %33
  %58 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %59 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %58, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

60:                                               ; preds = %33
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @87, i32 0, i32 0), i64* %10, i64* %11, i8** %5, i64* %7)
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %69

68:                                               ; preds = %60
  store i32 1, i32* %14, align 4
  br label %204

69:                                               ; preds = %60
  %70 = load i64, i64* %10, align 8
  switch i64 %70, label %102 [
    i64 9021976, label %71
    i64 0, label %71
    i64 1, label %98
    i64 2, label %101
    i64 3, label %101
  ]

71:                                               ; preds = %69, %69
  %72 = load %99*, %99** %13, align 8
  %73 = bitcast %99* %72 to %52**
  %74 = load %52*, %52** %73, align 8
  %75 = getelementptr inbounds %52, %52* %74, i32 0, i32 24
  %76 = load i16, i16* %75, align 8
  %77 = lshr i16 %76, 6
  %78 = and i16 %77, 1
  %79 = zext i16 %78 to i32
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %71
  store i64 2, i64* %10, align 8
  br label %97

82:                                               ; preds = %71
  %83 = load %99*, %99** %13, align 8
  %84 = bitcast %99* %83 to %52**
  %85 = load %52*, %52** %84, align 8
  %86 = getelementptr inbounds %52, %52* %85, i32 0, i32 24
  %87 = load i16, i16* %86, align 8
  %88 = lshr i16 %87, 5
  %89 = and i16 %88, 1
  %90 = zext i16 %89 to i32
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %82
  store i64 3, i64* %10, align 8
  br label %96

93:                                               ; preds = %82
  %94 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %95 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %94, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @95, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

96:                                               ; preds = %92
  br label %97

97:                                               ; preds = %96, %81
  br label %105

98:                                               ; preds = %69
  %99 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %100 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %99, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @95, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

101:                                              ; preds = %69, %69
  br label %105

102:                                              ; preds = %69
  %103 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %104 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %103, i64 0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @96, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

105:                                              ; preds = %101, %97
  %106 = load i64, i64* %11, align 8
  switch i64 %106, label %141 [
    i64 9021976, label %107
    i64 0, label %114
    i64 4096, label %115
    i64 8192, label %128
  ]

107:                                              ; preds = %105
  %108 = load %99*, %99** %13, align 8
  %109 = bitcast %99* %108 to %52**
  %110 = load %52*, %52** %109, align 8
  %111 = getelementptr inbounds %52, %52* %110, i32 0, i32 12
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 15728640
  store i32 %113, i32* %8, align 4
  br label %144

114:                                              ; preds = %105
  store i32 0, i32* %8, align 4
  br label %144

115:                                              ; preds = %105
  %116 = load i64, i64* %10, align 8
  %117 = icmp eq i64 %116, 3
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %120 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %119, i64 0, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @90, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

121:                                              ; preds = %115
  %122 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %126 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %125, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @91, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

127:                                              ; preds = %121
  store i32 1048576, i32* %8, align 4
  br label %144

128:                                              ; preds = %105
  %129 = load i64, i64* %10, align 8
  %130 = icmp eq i64 %129, 3
  br i1 %130, label %131, label %134

131:                                              ; preds = %128
  %132 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %133 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %132, i64 0, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @92, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

134:                                              ; preds = %128
  %135 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %139 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %138, i64 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @93, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

140:                                              ; preds = %134
  store i32 2097152, i32* %8, align 4
  br label %144

141:                                              ; preds = %105
  %142 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %143 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %142, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @94, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %204

144:                                              ; preds = %140, %127, %114, %107
  %145 = load %99*, %99** %13, align 8
  %146 = bitcast %99* %145 to %52**
  %147 = load %52*, %52** %146, align 8
  %148 = getelementptr inbounds %52, %52* %147, i32 0, i32 24
  %149 = load i16, i16* %148, align 8
  %150 = lshr i16 %149, 7
  %151 = and i16 %150, 1
  %152 = zext i16 %151 to i32
  store i32 %152, i32* %6, align 4
  %153 = load %99*, %99** %13, align 8
  %154 = bitcast %99* %153 to %52**
  %155 = load %52*, %52** %154, align 8
  %156 = getelementptr inbounds %52, %52* %155, i32 0, i32 24
  %157 = load i16, i16* %156, align 8
  %158 = and i16 %157, -129
  %159 = or i16 %158, 128
  store i16 %159, i16* %156, align 8
  %160 = load %99*, %99** %13, align 8
  %161 = bitcast %99* %160 to %52**
  %162 = load %52*, %52** %161, align 8
  %163 = load i64, i64* %10, align 8
  %164 = trunc i64 %163 to i32
  %165 = load i8*, i8** %5, align 8
  %166 = load i32, i32* %8, align 4
  %167 = call %21* @454(%52* %162, i32 %164, i8* %165, i32 %166)
  store %21* %167, %21** %9, align 8
  %168 = load i32, i32* %6, align 4
  %169 = load %99*, %99** %13, align 8
  %170 = bitcast %99* %169 to %52**
  %171 = load %52*, %52** %170, align 8
  %172 = getelementptr inbounds %52, %52* %171, i32 0, i32 24
  %173 = trunc i32 %168 to i16
  %174 = load i16, i16* %172, align 8
  %175 = and i16 %173, 1
  %176 = shl i16 %175, 7
  %177 = and i16 %174, -129
  %178 = or i16 %177, %176
  store i16 %178, i16* %172, align 8
  %179 = zext i16 %175 to i32
  %180 = load %21*, %21** %9, align 8
  %181 = icmp ne %21* %180, null
  br i1 %181, label %182, label %196

182:                                              ; preds = %144
  br label %183

183:                                              ; preds = %182
  %184 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %184) #13
  %185 = load %4*, %4** %4, align 8
  store %4* %185, %4** %15, align 8
  %186 = load %21*, %21** %9, align 8
  %187 = load %4*, %4** %15, align 8
  %188 = getelementptr inbounds %4, %4* %187, i32 0, i32 0
  %189 = bitcast %5* %188 to %21**
  store %21* %186, %21** %189, align 8
  %190 = load %4*, %4** %15, align 8
  %191 = getelementptr inbounds %4, %4* %190, i32 0, i32 1
  %192 = bitcast %6* %191 to i32*
  store i32 1032, i32* %192, align 8
  %193 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  br label %194

194:                                              ; preds = %183
  br label %195

195:                                              ; preds = %194
  br label %203

196:                                              ; preds = %144
  br label %197

197:                                              ; preds = %196
  %198 = load %4*, %4** %4, align 8
  %199 = getelementptr inbounds %4, %4* %198, i32 0, i32 1
  %200 = bitcast %6* %199 to i32*
  store i32 1, i32* %200, align 8
  br label %201

201:                                              ; preds = %197
  br label %202

202:                                              ; preds = %201
  store i32 1, i32* %14, align 4
  br label %204

203:                                              ; preds = %195
  store i32 0, i32* %14, align 4
  br label %204

204:                                              ; preds = %203, %202, %141, %137, %131, %124, %118, %102, %98, %93, %68, %57
  %205 = bitcast %99** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %205) #13
  %206 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #13
  %207 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %207) #13
  %208 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %208) #13
  %209 = bitcast %21** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #13
  %210 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %210) #13
  %211 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %211) #13
  %212 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %212) #13
  %213 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %213) #13
  %214 = load i32, i32* %14, align 4
  switch i32 %214, label %216 [
    i32 0, label %215
    i32 1, label %215
  ]

215:                                              ; preds = %204, %204
  ret void

216:                                              ; preds = %204
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_isCompressed(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %4*, align 8
  %9 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %5, align 8
  %22 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %5, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %5, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %6, align 8
  %40 = load %99*, %99** %6, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %115

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 1)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %47
  br label %68

61:                                               ; preds = %47
  %62 = load %23*, %23** %3, align 8
  %63 = getelementptr inbounds %23, %23* %62, i32 0, i32 4
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = bitcast %7* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i32 [ 0, %60 ], [ %67, %61 ]
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 1, i32* %7, align 4
  br label %115

72:                                               ; preds = %68
  %73 = load %99*, %99** %6, align 8
  %74 = bitcast %99* %73 to %52**
  %75 = load %52*, %52** %74, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 12
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 1048576
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %90

80:                                               ; preds = %72
  %81 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %81) #13
  %82 = load %4*, %4** %4, align 8
  store %4* %82, %4** %8, align 8
  %83 = load %4*, %4** %8, align 8
  %84 = getelementptr inbounds %4, %4* %83, i32 0, i32 0
  %85 = bitcast %5* %84 to i64*
  store i64 4096, i64* %85, align 8
  %86 = load %4*, %4** %8, align 8
  %87 = getelementptr inbounds %4, %4* %86, i32 0, i32 1
  %88 = bitcast %6* %87 to i32*
  store i32 4, i32* %88, align 8
  %89 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  store i32 1, i32* %7, align 4
  br label %115

90:                                               ; preds = %72
  %91 = load %99*, %99** %6, align 8
  %92 = bitcast %99* %91 to %52**
  %93 = load %52*, %52** %92, align 8
  %94 = getelementptr inbounds %52, %52* %93, i32 0, i32 12
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 2097152
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %108

98:                                               ; preds = %90
  %99 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %99) #13
  %100 = load %4*, %4** %4, align 8
  store %4* %100, %4** %9, align 8
  %101 = load %4*, %4** %9, align 8
  %102 = getelementptr inbounds %4, %4* %101, i32 0, i32 0
  %103 = bitcast %5* %102 to i64*
  store i64 8192, i64* %103, align 8
  %104 = load %4*, %4** %9, align 8
  %105 = getelementptr inbounds %4, %4* %104, i32 0, i32 1
  %106 = bitcast %6* %105 to i32*
  store i32 4, i32* %106, align 8
  %107 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #13
  store i32 1, i32* %7, align 4
  br label %115

108:                                              ; preds = %90
  br label %109

109:                                              ; preds = %108
  %110 = load %4*, %4** %4, align 8
  %111 = getelementptr inbounds %4, %4* %110, i32 0, i32 1
  %112 = bitcast %6* %111 to i32*
  store i32 2, i32* %112, align 8
  br label %113

113:                                              ; preds = %109
  br label %114

114:                                              ; preds = %113
  store i32 1, i32* %7, align 4
  br label %115

115:                                              ; preds = %114, %98, %80, %71, %44
  %116 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #13
  %117 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_isWritable(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %36, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %99*, align 8
  %8 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast %36* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %9) #13
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %6, align 8
  %22 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %6, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %6, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %7, align 8
  %40 = load %99*, %99** %7, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %135

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 1)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %47
  br label %68

61:                                               ; preds = %47
  %62 = load %23*, %23** %3, align 8
  %63 = getelementptr inbounds %23, %23* %62, i32 0, i32 4
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = bitcast %7* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i32 [ 0, %60 ], [ %67, %61 ]
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 1, i32* %8, align 4
  br label %135

72:                                               ; preds = %68
  %73 = load %99*, %99** %7, align 8
  %74 = bitcast %99* %73 to %52**
  %75 = load %52*, %52** %74, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 24
  %77 = load i16, i16* %76, align 8
  %78 = lshr i16 %77, 2
  %79 = and i16 %78, 1
  %80 = zext i16 %79 to i32
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %72
  br label %83

83:                                               ; preds = %82
  %84 = load %4*, %4** %4, align 8
  %85 = getelementptr inbounds %4, %4* %84, i32 0, i32 1
  %86 = bitcast %6* %85 to i32*
  store i32 2, i32* %86, align 8
  br label %87

87:                                               ; preds = %83
  br label %88

88:                                               ; preds = %87
  store i32 1, i32* %8, align 4
  br label %135

89:                                               ; preds = %72
  %90 = load %99*, %99** %7, align 8
  %91 = bitcast %99* %90 to %52**
  %92 = load %52*, %52** %91, align 8
  %93 = getelementptr inbounds %52, %52* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @_php_stream_stat_path(i8* %94, i32 0, %36* %5, %46* null)
  %96 = icmp ne i32 0, %95
  br i1 %96, label %97, label %121

97:                                               ; preds = %89
  %98 = load %99*, %99** %7, align 8
  %99 = bitcast %99* %98 to %52**
  %100 = load %52*, %52** %99, align 8
  %101 = getelementptr inbounds %52, %52* %100, i32 0, i32 24
  %102 = load i16, i16* %101, align 8
  %103 = lshr i16 %102, 3
  %104 = and i16 %103, 1
  %105 = zext i16 %104 to i32
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %114

107:                                              ; preds = %97
  br label %108

108:                                              ; preds = %107
  %109 = load %4*, %4** %4, align 8
  %110 = getelementptr inbounds %4, %4* %109, i32 0, i32 1
  %111 = bitcast %6* %110 to i32*
  store i32 3, i32* %111, align 8
  br label %112

112:                                              ; preds = %108
  br label %113

113:                                              ; preds = %112
  store i32 1, i32* %8, align 4
  br label %135

114:                                              ; preds = %97
  br label %115

115:                                              ; preds = %114
  %116 = load %4*, %4** %4, align 8
  %117 = getelementptr inbounds %4, %4* %116, i32 0, i32 1
  %118 = bitcast %6* %117 to i32*
  store i32 2, i32* %118, align 8
  br label %119

119:                                              ; preds = %115
  br label %120

120:                                              ; preds = %119
  store i32 1, i32* %8, align 4
  br label %135

121:                                              ; preds = %89
  br label %122

122:                                              ; preds = %121
  %123 = getelementptr inbounds %36, %36* %5, i32 0, i32 0
  %124 = getelementptr inbounds %37, %37* %123, i32 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 146
  %127 = icmp ne i32 %126, 0
  %128 = zext i1 %127 to i64
  %129 = select i1 %127, i32 3, i32 2
  %130 = load %4*, %4** %4, align 8
  %131 = getelementptr inbounds %4, %4* %130, i32 0, i32 1
  %132 = bitcast %6* %131 to i32*
  store i32 %129, i32* %132, align 8
  br label %133

133:                                              ; preds = %122
  br label %134

134:                                              ; preds = %133
  store i32 1, i32* %8, align 4
  br label %135

135:                                              ; preds = %134, %120, %113, %88, %71, %44
  %136 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #13
  %137 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #13
  %138 = bitcast %36* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %138) #13
  ret void
}

declare dso_local i32 @_php_stream_stat_path(i8*, i32, %36*, %46*) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_delete(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %93*, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %99*, align 8
  %11 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast %93** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  %19 = call zeroext i8 @444(%4* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi %4* [ %24, %22 ], [ null, %25 ]
  store %4* %27, %4** %9, align 8
  %28 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = load %4*, %4** %9, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = bitcast %21* %32 to i8*
  %34 = load %4*, %4** %9, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %21**
  %37 = load %21*, %21** %36, align 8
  %38 = getelementptr inbounds %21, %21* %37, i32 0, i32 3
  %39 = load %22*, %22** %38, align 8
  %40 = getelementptr inbounds %22, %22* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = bitcast i8* %44 to %99*
  store %99* %45, %99** %10, align 8
  %46 = load %99*, %99** %10, align 8
  %47 = bitcast %99* %46 to %52**
  %48 = load %52*, %52** %47, align 8
  %49 = icmp ne %52* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %26
  %51 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %52 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %51, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %194

53:                                               ; preds = %26
  %54 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %69

56:                                               ; preds = %53
  %57 = load %99*, %99** %10, align 8
  %58 = bitcast %99* %57 to %52**
  %59 = load %52*, %52** %58, align 8
  %60 = getelementptr inbounds %52, %52* %59, i32 0, i32 24
  %61 = load i16, i16* %60, align 8
  %62 = lshr i16 %61, 7
  %63 = and i16 %62, 1
  %64 = zext i16 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %56
  %67 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %68 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %67, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @82, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %194

69:                                               ; preds = %56, %53
  %70 = load %23*, %23** %3, align 8
  %71 = getelementptr inbounds %23, %23* %70, i32 0, i32 4
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 2
  %73 = bitcast %7* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %6)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %84

77:                                               ; preds = %69
  br label %78

78:                                               ; preds = %77
  %79 = load %4*, %4** %4, align 8
  %80 = getelementptr inbounds %4, %4* %79, i32 0, i32 1
  %81 = bitcast %6* %80 to i32*
  store i32 2, i32* %81, align 8
  br label %82

82:                                               ; preds = %78
  br label %83

83:                                               ; preds = %82
  store i32 1, i32* %11, align 4
  br label %194

84:                                               ; preds = %69
  %85 = load %99*, %99** %10, align 8
  %86 = bitcast %99* %85 to %52**
  %87 = load %52*, %52** %86, align 8
  %88 = getelementptr inbounds %52, %52* %87, i32 0, i32 24
  %89 = load i16, i16* %88, align 8
  %90 = lshr i16 %89, 8
  %91 = and i16 %90, 1
  %92 = zext i16 %91 to i32
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %84
  %95 = load %99*, %99** %10, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = call i32 @phar_copy_on_write(%52** %96)
  %98 = icmp eq i32 -1, %97
  br i1 %98, label %99, label %107

99:                                               ; preds = %94
  %100 = load %3*, %3** @3, align 8
  %101 = load %99*, %99** %10, align 8
  %102 = bitcast %99* %101 to %52**
  %103 = load %52*, %52** %102, align 8
  %104 = getelementptr inbounds %52, %52* %103, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %100, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %105)
  store i32 1, i32* %11, align 4
  br label %194

107:                                              ; preds = %94, %84
  %108 = load %99*, %99** %10, align 8
  %109 = bitcast %99* %108 to %52**
  %110 = load %52*, %52** %109, align 8
  %111 = getelementptr inbounds %52, %52* %110, i32 0, i32 9
  %112 = load i8*, i8** %5, align 8
  %113 = load i64, i64* %6, align 8
  %114 = trunc i64 %113 to i32
  %115 = zext i32 %114 to i64
  %116 = call zeroext i8 @zend_hash_str_exists(%8* %111, i8* %112, i64 %115)
  %117 = icmp ne i8 %116, 0
  br i1 %117, label %118, label %165

118:                                              ; preds = %107
  %119 = load %99*, %99** %10, align 8
  %120 = bitcast %99* %119 to %52**
  %121 = load %52*, %52** %120, align 8
  %122 = getelementptr inbounds %52, %52* %121, i32 0, i32 9
  %123 = load i8*, i8** %5, align 8
  %124 = load i64, i64* %6, align 8
  %125 = trunc i64 %124 to i32
  %126 = zext i32 %125 to i64
  %127 = call i8* @442(%8* %122, i8* %123, i64 %126)
  %128 = bitcast i8* %127 to %93*
  store %93* %128, %93** %8, align 8
  %129 = icmp ne %93* null, %128
  br i1 %129, label %130, label %164

130:                                              ; preds = %118
  %131 = load %93*, %93** %8, align 8
  %132 = getelementptr inbounds %93, %93* %131, i32 0, i32 24
  %133 = load i16, i16* %132, align 2
  %134 = lshr i16 %133, 2
  %135 = and i16 %134, 1
  %136 = zext i16 %135 to i32
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %145

138:                                              ; preds = %130
  br label %139

139:                                              ; preds = %138
  %140 = load %4*, %4** %4, align 8
  %141 = getelementptr inbounds %4, %4* %140, i32 0, i32 1
  %142 = bitcast %6* %141 to i32*
  store i32 3, i32* %142, align 8
  br label %143

143:                                              ; preds = %139
  br label %144

144:                                              ; preds = %143
  store i32 1, i32* %11, align 4
  br label %194

145:                                              ; preds = %130
  %146 = load %93*, %93** %8, align 8
  %147 = getelementptr inbounds %93, %93* %146, i32 0, i32 24
  %148 = load i16, i16* %147, align 2
  %149 = and i16 %148, -5
  %150 = or i16 %149, 4
  store i16 %150, i16* %147, align 2
  %151 = load %93*, %93** %8, align 8
  %152 = getelementptr inbounds %93, %93* %151, i32 0, i32 24
  %153 = load i16, i16* %152, align 2
  %154 = and i16 %153, -3
  %155 = or i16 %154, 2
  store i16 %155, i16* %152, align 2
  %156 = load %99*, %99** %10, align 8
  %157 = bitcast %99* %156 to %52**
  %158 = load %52*, %52** %157, align 8
  %159 = getelementptr inbounds %52, %52* %158, i32 0, i32 24
  %160 = load i16, i16* %159, align 8
  %161 = and i16 %160, -3
  %162 = or i16 %161, 2
  store i16 %162, i16* %159, align 8
  br label %163

163:                                              ; preds = %145
  br label %164

164:                                              ; preds = %163, %118
  br label %175

165:                                              ; preds = %107
  %166 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %167 = load i8*, i8** %5, align 8
  %168 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %166, i64 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @97, i32 0, i32 0), i8* %167)
  br label %169

169:                                              ; preds = %165
  %170 = load %4*, %4** %4, align 8
  %171 = getelementptr inbounds %4, %4* %170, i32 0, i32 1
  %172 = bitcast %6* %171 to i32*
  store i32 2, i32* %172, align 8
  br label %173

173:                                              ; preds = %169
  br label %174

174:                                              ; preds = %173
  store i32 1, i32* %11, align 4
  br label %194

175:                                              ; preds = %164
  %176 = load %99*, %99** %10, align 8
  %177 = bitcast %99* %176 to %52**
  %178 = load %52*, %52** %177, align 8
  %179 = call i32 @phar_flush(%52* %178, i8* null, i64 0, i32 0, i8** %7)
  %180 = load i8*, i8** %7, align 8
  %181 = icmp ne i8* %180, null
  br i1 %181, label %182, label %187

182:                                              ; preds = %175
  %183 = load %3*, %3** @3, align 8
  %184 = load i8*, i8** %7, align 8
  %185 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %183, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %184)
  %186 = load i8*, i8** %7, align 8
  call void @_efree(i8* %186)
  br label %187

187:                                              ; preds = %182, %175
  br label %188

188:                                              ; preds = %187
  %189 = load %4*, %4** %4, align 8
  %190 = getelementptr inbounds %4, %4* %189, i32 0, i32 1
  %191 = bitcast %6* %190 to i32*
  store i32 3, i32* %191, align 8
  br label %192

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  store i32 1, i32* %11, align 4
  br label %194

194:                                              ; preds = %193, %174, %144, %99, %83, %66, %50
  %195 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #13
  %196 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #13
  %197 = bitcast %93** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #13
  %198 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #13
  %199 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #13
  %200 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getAlias(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %4*, align 8
  %9 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %5, align 8
  %22 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %5, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %5, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %6, align 8
  %40 = load %99*, %99** %6, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %123

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 1)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %47
  br label %68

61:                                               ; preds = %47
  %62 = load %23*, %23** %3, align 8
  %63 = getelementptr inbounds %23, %23* %62, i32 0, i32 4
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = bitcast %7* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i32 [ 0, %60 ], [ %67, %61 ]
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 1, i32* %7, align 4
  br label %123

72:                                               ; preds = %68
  %73 = load %99*, %99** %6, align 8
  %74 = bitcast %99* %73 to %52**
  %75 = load %52*, %52** %74, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 4
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ne i8* %77, null
  br i1 %78, label %79, label %122

79:                                               ; preds = %72
  %80 = load %99*, %99** %6, align 8
  %81 = bitcast %99* %80 to %52**
  %82 = load %52*, %52** %81, align 8
  %83 = getelementptr inbounds %52, %52* %82, i32 0, i32 4
  %84 = load i8*, i8** %83, align 8
  %85 = load %99*, %99** %6, align 8
  %86 = bitcast %99* %85 to %52**
  %87 = load %52*, %52** %86, align 8
  %88 = getelementptr inbounds %52, %52* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = icmp ne i8* %84, %89
  br i1 %90, label %91, label %122

91:                                               ; preds = %79
  br label %92

92:                                               ; preds = %91
  br label %93

93:                                               ; preds = %92
  %94 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94) #13
  %95 = load %4*, %4** %4, align 8
  store %4* %95, %4** %8, align 8
  %96 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #13
  %97 = load %99*, %99** %6, align 8
  %98 = bitcast %99* %97 to %52**
  %99 = load %52*, %52** %98, align 8
  %100 = getelementptr inbounds %52, %52* %99, i32 0, i32 4
  %101 = load i8*, i8** %100, align 8
  %102 = load %99*, %99** %6, align 8
  %103 = bitcast %99* %102 to %52**
  %104 = load %52*, %52** %103, align 8
  %105 = getelementptr inbounds %52, %52* %104, i32 0, i32 5
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = call %0* @441(i8* %101, i64 %107, i32 0)
  store %0* %108, %0** %9, align 8
  %109 = load %0*, %0** %9, align 8
  %110 = load %4*, %4** %8, align 8
  %111 = getelementptr inbounds %4, %4* %110, i32 0, i32 0
  %112 = bitcast %5* %111 to %0**
  store %0* %109, %0** %112, align 8
  %113 = load %4*, %4** %8, align 8
  %114 = getelementptr inbounds %4, %4* %113, i32 0, i32 1
  %115 = bitcast %6* %114 to i32*
  store i32 5126, i32* %115, align 8
  %116 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #13
  %117 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #13
  br label %118

118:                                              ; preds = %93
  br label %119

119:                                              ; preds = %118
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  store i32 1, i32* %7, align 4
  br label %123

122:                                              ; preds = %79, %72
  store i32 0, i32* %7, align 4
  br label %123

123:                                              ; preds = %122, %121, %71, %44
  %124 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #13
  %125 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #13
  %126 = load i32, i32* %7, align 4
  switch i32 %126, label %128 [
    i32 0, label %127
    i32 1, label %127
  ]

127:                                              ; preds = %123, %123
  ret void

128:                                              ; preds = %123
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getPath(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %4*, align 8
  %9 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %5, align 8
  %22 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %5, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %5, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %6, align 8
  %40 = load %99*, %99** %6, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %103

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 1)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %47
  br label %68

61:                                               ; preds = %47
  %62 = load %23*, %23** %3, align 8
  %63 = getelementptr inbounds %23, %23* %62, i32 0, i32 4
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = bitcast %7* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i32 [ 0, %60 ], [ %67, %61 ]
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 1, i32* %7, align 4
  br label %103

72:                                               ; preds = %68
  br label %73

73:                                               ; preds = %72
  br label %74

74:                                               ; preds = %73
  %75 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #13
  %76 = load %4*, %4** %4, align 8
  store %4* %76, %4** %8, align 8
  %77 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #13
  %78 = load %99*, %99** %6, align 8
  %79 = bitcast %99* %78 to %52**
  %80 = load %52*, %52** %79, align 8
  %81 = getelementptr inbounds %52, %52* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = load %99*, %99** %6, align 8
  %84 = bitcast %99* %83 to %52**
  %85 = load %52*, %52** %84, align 8
  %86 = getelementptr inbounds %52, %52* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %87 to i64
  %89 = call %0* @441(i8* %82, i64 %88, i32 0)
  store %0* %89, %0** %9, align 8
  %90 = load %0*, %0** %9, align 8
  %91 = load %4*, %4** %8, align 8
  %92 = getelementptr inbounds %4, %4* %91, i32 0, i32 0
  %93 = bitcast %5* %92 to %0**
  store %0* %90, %0** %93, align 8
  %94 = load %4*, %4** %8, align 8
  %95 = getelementptr inbounds %4, %4* %94, i32 0, i32 1
  %96 = bitcast %6* %95 to i32*
  store i32 5126, i32* %96, align 8
  %97 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #13
  %98 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #13
  br label %99

99:                                               ; preds = %74
  br label %100

100:                                              ; preds = %99
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  store i32 1, i32* %7, align 4
  br label %103

103:                                              ; preds = %102, %71, %44
  %104 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #13
  %105 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_setAlias(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %52*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %4*, align 8
  %14 = alloca %99*, align 8
  %15 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #13
  %23 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  store i32 0, i32* %12, align 4
  %24 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = load %23*, %23** %3, align 8
  %26 = getelementptr inbounds %23, %23* %25, i32 0, i32 4
  %27 = call zeroext i8 @444(%4* %26)
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 8
  br i1 %29, label %30, label %33

30:                                               ; preds = %2
  %31 = load %23*, %23** %3, align 8
  %32 = getelementptr inbounds %23, %23* %31, i32 0, i32 4
  br label %34

33:                                               ; preds = %2
  br label %34

34:                                               ; preds = %33, %30
  %35 = phi %4* [ %32, %30 ], [ null, %33 ]
  store %4* %35, %4** %13, align 8
  %36 = bitcast %99** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = load %4*, %4** %13, align 8
  %38 = getelementptr inbounds %4, %4* %37, i32 0, i32 0
  %39 = bitcast %5* %38 to %21**
  %40 = load %21*, %21** %39, align 8
  %41 = bitcast %21* %40 to i8*
  %42 = load %4*, %4** %13, align 8
  %43 = getelementptr inbounds %4, %4* %42, i32 0, i32 0
  %44 = bitcast %5* %43 to %21**
  %45 = load %21*, %21** %44, align 8
  %46 = getelementptr inbounds %21, %21* %45, i32 0, i32 3
  %47 = load %22*, %22** %46, align 8
  %48 = getelementptr inbounds %22, %22* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = sub i64 0, %50
  %52 = getelementptr inbounds i8, i8* %41, i64 %51
  %53 = bitcast i8* %52 to %99*
  store %99* %53, %99** %14, align 8
  %54 = load %99*, %99** %14, align 8
  %55 = bitcast %99* %54 to %52**
  %56 = load %52*, %52** %55, align 8
  %57 = icmp ne %52* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %34
  %59 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %60 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %59, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %15, align 4
  br label %403

61:                                               ; preds = %34
  %62 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %83

64:                                               ; preds = %61
  %65 = load %99*, %99** %14, align 8
  %66 = bitcast %99* %65 to %52**
  %67 = load %52*, %52** %66, align 8
  %68 = getelementptr inbounds %52, %52* %67, i32 0, i32 24
  %69 = load i16, i16* %68, align 8
  %70 = lshr i16 %69, 7
  %71 = and i16 %70, 1
  %72 = zext i16 %71 to i32
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %64
  %75 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %76 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %75, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @82, i32 0, i32 0))
  br label %77

77:                                               ; preds = %74
  %78 = load %4*, %4** %4, align 8
  %79 = getelementptr inbounds %4, %4* %78, i32 0, i32 1
  %80 = bitcast %6* %79 to i32*
  store i32 2, i32* %80, align 8
  br label %81

81:                                               ; preds = %77
  br label %82

82:                                               ; preds = %81
  store i32 1, i32* %15, align 4
  br label %403

83:                                               ; preds = %64, %61
  store %52* null, %52** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 49), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 47), align 8
  store i8* null, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 45), align 8
  %84 = load %99*, %99** %14, align 8
  %85 = bitcast %99* %84 to %52**
  %86 = load %52*, %52** %85, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 24
  %88 = load i16, i16* %87, align 8
  %89 = lshr i16 %88, 7
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %116

93:                                               ; preds = %83
  %94 = load %99*, %99** %14, align 8
  %95 = bitcast %99* %94 to %52**
  %96 = load %52*, %52** %95, align 8
  %97 = getelementptr inbounds %52, %52* %96, i32 0, i32 24
  %98 = load i16, i16* %97, align 8
  %99 = lshr i16 %98, 6
  %100 = and i16 %99, 1
  %101 = zext i16 %100 to i32
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %93
  %104 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %105 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %104, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @98, i32 0, i32 0))
  br label %109

106:                                              ; preds = %93
  %107 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %108 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %107, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @99, i32 0, i32 0))
  br label %109

109:                                              ; preds = %106, %103
  br label %110

110:                                              ; preds = %109
  %111 = load %4*, %4** %4, align 8
  %112 = getelementptr inbounds %4, %4* %111, i32 0, i32 1
  %113 = bitcast %6* %112 to i32*
  store i32 2, i32* %113, align 8
  br label %114

114:                                              ; preds = %110
  br label %115

115:                                              ; preds = %114
  store i32 1, i32* %15, align 4
  br label %403

116:                                              ; preds = %83
  %117 = load %23*, %23** %3, align 8
  %118 = getelementptr inbounds %23, %23* %117, i32 0, i32 4
  %119 = getelementptr inbounds %4, %4* %118, i32 0, i32 2
  %120 = bitcast %7* %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @100, i32 0, i32 0), i8** %5, i64* %9)
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %396

124:                                              ; preds = %116
  %125 = load i64, i64* %9, align 8
  %126 = icmp ugt i64 %125, 2147483647
  %127 = xor i1 %126, true
  %128 = xor i1 %127, true
  %129 = zext i1 %128 to i32
  %130 = sext i32 %129 to i64
  %131 = call i64 @llvm.expect.i64(i64 %130, i64 0)
  %132 = icmp ne i64 %131, 0
  br i1 %132, label %133, label %140

133:                                              ; preds = %124
  br label %134

134:                                              ; preds = %133
  %135 = load %4*, %4** %4, align 8
  %136 = getelementptr inbounds %4, %4* %135, i32 0, i32 1
  %137 = bitcast %6* %136 to i32*
  store i32 2, i32* %137, align 8
  br label %138

138:                                              ; preds = %134
  br label %139

139:                                              ; preds = %138
  store i32 1, i32* %15, align 4
  br label %403

140:                                              ; preds = %124
  %141 = load i64, i64* %9, align 8
  %142 = load %99*, %99** %14, align 8
  %143 = bitcast %99* %142 to %52**
  %144 = load %52*, %52** %143, align 8
  %145 = getelementptr inbounds %52, %52* %144, i32 0, i32 5
  %146 = load i32, i32* %145, align 8
  %147 = sext i32 %146 to i64
  %148 = icmp eq i64 %141, %147
  br i1 %148, label %149, label %166

149:                                              ; preds = %140
  %150 = load %99*, %99** %14, align 8
  %151 = bitcast %99* %150 to %52**
  %152 = load %52*, %52** %151, align 8
  %153 = getelementptr inbounds %52, %52* %152, i32 0, i32 4
  %154 = load i8*, i8** %153, align 8
  %155 = load i8*, i8** %5, align 8
  %156 = load i64, i64* %9, align 8
  %157 = call i32 @memcmp(i8* %154, i8* %155, i64 %156) #14
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %166

159:                                              ; preds = %149
  br label %160

160:                                              ; preds = %159
  %161 = load %4*, %4** %4, align 8
  %162 = getelementptr inbounds %4, %4* %161, i32 0, i32 1
  %163 = bitcast %6* %162 to i32*
  store i32 3, i32* %163, align 8
  br label %164

164:                                              ; preds = %160
  br label %165

165:                                              ; preds = %164
  store i32 1, i32* %15, align 4
  br label %403

166:                                              ; preds = %149, %140
  %167 = load i64, i64* %9, align 8
  %168 = icmp ne i64 %167, 0
  br i1 %168, label %169, label %200

169:                                              ; preds = %166
  %170 = load i8*, i8** %5, align 8
  %171 = load i64, i64* %9, align 8
  %172 = call i8* @442(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 3), i8* %170, i64 %171)
  %173 = bitcast i8* %172 to %52*
  store %52* %173, %52** %8, align 8
  %174 = icmp ne %52* null, %173
  br i1 %174, label %175, label %200

175:                                              ; preds = %169
  %176 = load i8*, i8** %5, align 8
  %177 = load %52*, %52** %8, align 8
  %178 = getelementptr inbounds %52, %52* %177, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %6, i64 0, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @101, i32 0, i32 0), i8* %176, i8* %179)
  %181 = load %52*, %52** %8, align 8
  %182 = load i8*, i8** %5, align 8
  %183 = load i64, i64* %9, align 8
  %184 = trunc i64 %183 to i32
  %185 = call i32 @phar_free_alias(%52* %181, i8* %182, i32 %184)
  %186 = icmp eq i32 0, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %175
  %188 = load i8*, i8** %6, align 8
  call void @_efree(i8* %188)
  br label %222

189:                                              ; preds = %175
  %190 = load %3*, %3** @3, align 8
  %191 = load i8*, i8** %6, align 8
  %192 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %190, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %191)
  %193 = load i8*, i8** %6, align 8
  call void @_efree(i8* %193)
  br label %194

194:                                              ; preds = %189
  %195 = load %4*, %4** %4, align 8
  %196 = getelementptr inbounds %4, %4* %195, i32 0, i32 1
  %197 = bitcast %6* %196 to i32*
  store i32 2, i32* %197, align 8
  br label %198

198:                                              ; preds = %194
  br label %199

199:                                              ; preds = %198
  store i32 1, i32* %15, align 4
  br label %403

200:                                              ; preds = %169, %166
  %201 = load i8*, i8** %5, align 8
  %202 = load i64, i64* %9, align 8
  %203 = trunc i64 %202 to i32
  %204 = call i32 @455(i8* %201, i32 %203)
  %205 = icmp ne i32 %204, 0
  br i1 %205, label %221, label %206

206:                                              ; preds = %200
  %207 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %208 = load i8*, i8** %5, align 8
  %209 = load %99*, %99** %14, align 8
  %210 = bitcast %99* %209 to %52**
  %211 = load %52*, %52** %210, align 8
  %212 = getelementptr inbounds %52, %52* %211, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %207, i64 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @102, i32 0, i32 0), i8* %208, i8* %213)
  br label %215

215:                                              ; preds = %206
  %216 = load %4*, %4** %4, align 8
  %217 = getelementptr inbounds %4, %4* %216, i32 0, i32 1
  %218 = bitcast %6* %217 to i32*
  store i32 2, i32* %218, align 8
  br label %219

219:                                              ; preds = %215
  br label %220

220:                                              ; preds = %219
  store i32 1, i32* %15, align 4
  br label %403

221:                                              ; preds = %200
  br label %222

222:                                              ; preds = %221, %187
  %223 = load %99*, %99** %14, align 8
  %224 = bitcast %99* %223 to %52**
  %225 = load %52*, %52** %224, align 8
  %226 = getelementptr inbounds %52, %52* %225, i32 0, i32 24
  %227 = load i16, i16* %226, align 8
  %228 = lshr i16 %227, 8
  %229 = and i16 %228, 1
  %230 = zext i16 %229 to i32
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %245

232:                                              ; preds = %222
  %233 = load %99*, %99** %14, align 8
  %234 = bitcast %99* %233 to %52**
  %235 = call i32 @phar_copy_on_write(%52** %234)
  %236 = icmp eq i32 -1, %235
  br i1 %236, label %237, label %245

237:                                              ; preds = %232
  %238 = load %3*, %3** @3, align 8
  %239 = load %99*, %99** %14, align 8
  %240 = bitcast %99* %239 to %52**
  %241 = load %52*, %52** %240, align 8
  %242 = getelementptr inbounds %52, %52* %241, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %238, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %243)
  store i32 1, i32* %15, align 4
  br label %403

245:                                              ; preds = %232, %222
  %246 = load %99*, %99** %14, align 8
  %247 = bitcast %99* %246 to %52**
  %248 = load %52*, %52** %247, align 8
  %249 = getelementptr inbounds %52, %52* %248, i32 0, i32 5
  %250 = load i32, i32* %249, align 8
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %252, label %280

252:                                              ; preds = %245
  %253 = load %99*, %99** %14, align 8
  %254 = bitcast %99* %253 to %52**
  %255 = load %52*, %52** %254, align 8
  %256 = getelementptr inbounds %52, %52* %255, i32 0, i32 4
  %257 = load i8*, i8** %256, align 8
  %258 = load %99*, %99** %14, align 8
  %259 = bitcast %99* %258 to %52**
  %260 = load %52*, %52** %259, align 8
  %261 = getelementptr inbounds %52, %52* %260, i32 0, i32 5
  %262 = load i32, i32* %261, align 8
  %263 = sext i32 %262 to i64
  %264 = call i8* @442(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 3), i8* %257, i64 %263)
  %265 = bitcast i8* %264 to %52*
  store %52* %265, %52** %8, align 8
  %266 = icmp ne %52* null, %265
  br i1 %266, label %267, label %280

267:                                              ; preds = %252
  %268 = load %99*, %99** %14, align 8
  %269 = bitcast %99* %268 to %52**
  %270 = load %52*, %52** %269, align 8
  %271 = getelementptr inbounds %52, %52* %270, i32 0, i32 4
  %272 = load i8*, i8** %271, align 8
  %273 = load %99*, %99** %14, align 8
  %274 = bitcast %99* %273 to %52**
  %275 = load %52*, %52** %274, align 8
  %276 = getelementptr inbounds %52, %52* %275, i32 0, i32 5
  %277 = load i32, i32* %276, align 8
  %278 = sext i32 %277 to i64
  %279 = call i32 @zend_hash_str_del(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 3), i8* %272, i64 %278)
  store i32 1, i32* %12, align 4
  br label %280

280:                                              ; preds = %267, %252, %245
  %281 = load %99*, %99** %14, align 8
  %282 = bitcast %99* %281 to %52**
  %283 = load %52*, %52** %282, align 8
  %284 = getelementptr inbounds %52, %52* %283, i32 0, i32 4
  %285 = load i8*, i8** %284, align 8
  store i8* %285, i8** %7, align 8
  %286 = load %99*, %99** %14, align 8
  %287 = bitcast %99* %286 to %52**
  %288 = load %52*, %52** %287, align 8
  %289 = getelementptr inbounds %52, %52* %288, i32 0, i32 5
  %290 = load i32, i32* %289, align 8
  %291 = sext i32 %290 to i64
  store i64 %291, i64* %10, align 8
  %292 = load %99*, %99** %14, align 8
  %293 = bitcast %99* %292 to %52**
  %294 = load %52*, %52** %293, align 8
  %295 = getelementptr inbounds %52, %52* %294, i32 0, i32 24
  %296 = load i16, i16* %295, align 8
  %297 = and i16 %296, 1
  %298 = zext i16 %297 to i32
  store i32 %298, i32* %11, align 4
  %299 = load i64, i64* %9, align 8
  %300 = icmp ne i64 %299, 0
  br i1 %300, label %301, label %309

301:                                              ; preds = %280
  %302 = load i8*, i8** %5, align 8
  %303 = load i64, i64* %9, align 8
  %304 = call noalias i8* @_estrndup(i8* %302, i64 %303)
  %305 = load %99*, %99** %14, align 8
  %306 = bitcast %99* %305 to %52**
  %307 = load %52*, %52** %306, align 8
  %308 = getelementptr inbounds %52, %52* %307, i32 0, i32 4
  store i8* %304, i8** %308, align 8
  br label %314

309:                                              ; preds = %280
  %310 = load %99*, %99** %14, align 8
  %311 = bitcast %99* %310 to %52**
  %312 = load %52*, %52** %311, align 8
  %313 = getelementptr inbounds %52, %52* %312, i32 0, i32 4
  store i8* null, i8** %313, align 8
  br label %314

314:                                              ; preds = %309, %301
  %315 = load i64, i64* %9, align 8
  %316 = trunc i64 %315 to i32
  %317 = load %99*, %99** %14, align 8
  %318 = bitcast %99* %317 to %52**
  %319 = load %52*, %52** %318, align 8
  %320 = getelementptr inbounds %52, %52* %319, i32 0, i32 5
  store i32 %316, i32* %320, align 8
  %321 = load %99*, %99** %14, align 8
  %322 = bitcast %99* %321 to %52**
  %323 = load %52*, %52** %322, align 8
  %324 = getelementptr inbounds %52, %52* %323, i32 0, i32 24
  %325 = load i16, i16* %324, align 8
  %326 = and i16 %325, -2
  store i16 %326, i16* %324, align 8
  %327 = load %99*, %99** %14, align 8
  %328 = bitcast %99* %327 to %52**
  %329 = load %52*, %52** %328, align 8
  %330 = call i32 @phar_flush(%52* %329, i8* null, i64 0, i32 0, i8** %6)
  %331 = load i8*, i8** %6, align 8
  %332 = icmp ne i8* %331, null
  br i1 %332, label %333, label %377

333:                                              ; preds = %314
  %334 = load i8*, i8** %7, align 8
  %335 = load %99*, %99** %14, align 8
  %336 = bitcast %99* %335 to %52**
  %337 = load %52*, %52** %336, align 8
  %338 = getelementptr inbounds %52, %52* %337, i32 0, i32 4
  store i8* %334, i8** %338, align 8
  %339 = load i64, i64* %10, align 8
  %340 = trunc i64 %339 to i32
  %341 = load %99*, %99** %14, align 8
  %342 = bitcast %99* %341 to %52**
  %343 = load %52*, %52** %342, align 8
  %344 = getelementptr inbounds %52, %52* %343, i32 0, i32 5
  store i32 %340, i32* %344, align 8
  %345 = load i32, i32* %11, align 4
  %346 = load %99*, %99** %14, align 8
  %347 = bitcast %99* %346 to %52**
  %348 = load %52*, %52** %347, align 8
  %349 = getelementptr inbounds %52, %52* %348, i32 0, i32 24
  %350 = trunc i32 %345 to i16
  %351 = load i16, i16* %349, align 8
  %352 = and i16 %350, 1
  %353 = and i16 %351, -2
  %354 = or i16 %353, %352
  store i16 %354, i16* %349, align 8
  %355 = zext i16 %352 to i32
  %356 = load %3*, %3** @3, align 8
  %357 = load i8*, i8** %6, align 8
  %358 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %356, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %357)
  %359 = load i32, i32* %12, align 4
  %360 = icmp ne i32 %359, 0
  br i1 %360, label %361, label %369

361:                                              ; preds = %333
  %362 = load i8*, i8** %7, align 8
  %363 = load i64, i64* %10, align 8
  %364 = load %99*, %99** %14, align 8
  %365 = bitcast %99* %364 to %52**
  %366 = load %52*, %52** %365, align 8
  %367 = bitcast %52* %366 to i8*
  %368 = call i8* @451(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 3), i8* %362, i64 %363, i8* %367)
  br label %369

369:                                              ; preds = %361, %333
  %370 = load i8*, i8** %6, align 8
  call void @_efree(i8* %370)
  br label %371

371:                                              ; preds = %369
  %372 = load %4*, %4** %4, align 8
  %373 = getelementptr inbounds %4, %4* %372, i32 0, i32 1
  %374 = bitcast %6* %373 to i32*
  store i32 2, i32* %374, align 8
  br label %375

375:                                              ; preds = %371
  br label %376

376:                                              ; preds = %375
  store i32 1, i32* %15, align 4
  br label %403

377:                                              ; preds = %314
  %378 = load i8*, i8** %5, align 8
  %379 = load i64, i64* %9, align 8
  %380 = load %99*, %99** %14, align 8
  %381 = bitcast %99* %380 to %52**
  %382 = load %52*, %52** %381, align 8
  %383 = bitcast %52* %382 to i8*
  %384 = call i8* @451(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 3), i8* %378, i64 %379, i8* %383)
  %385 = load i8*, i8** %7, align 8
  %386 = icmp ne i8* %385, null
  br i1 %386, label %387, label %389

387:                                              ; preds = %377
  %388 = load i8*, i8** %7, align 8
  call void @_efree(i8* %388)
  br label %389

389:                                              ; preds = %387, %377
  br label %390

390:                                              ; preds = %389
  %391 = load %4*, %4** %4, align 8
  %392 = getelementptr inbounds %4, %4* %391, i32 0, i32 1
  %393 = bitcast %6* %392 to i32*
  store i32 3, i32* %393, align 8
  br label %394

394:                                              ; preds = %390
  br label %395

395:                                              ; preds = %394
  store i32 1, i32* %15, align 4
  br label %403

396:                                              ; preds = %116
  br label %397

397:                                              ; preds = %396
  %398 = load %4*, %4** %4, align 8
  %399 = getelementptr inbounds %4, %4* %398, i32 0, i32 1
  %400 = bitcast %6* %399 to i32*
  store i32 2, i32* %400, align 8
  br label %401

401:                                              ; preds = %397
  br label %402

402:                                              ; preds = %401
  store i32 1, i32* %15, align 4
  br label %403

403:                                              ; preds = %402, %395, %376, %237, %220, %199, %165, %139, %115, %82, %58
  %404 = bitcast %99** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %404) #13
  %405 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %405) #13
  %406 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %406) #13
  %407 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %407) #13
  %408 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %408) #13
  %409 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %409) #13
  %410 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %410) #13
  %411 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411) #13
  %412 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412) #13
  %413 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %413) #13
  ret void
}

declare dso_local i32 @phar_free_alias(%52*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @455(i8* %0, i32 %1) #9 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = sext i32 %6 to i64
  %8 = call i8* @memchr(i8* %5, i32 47, i64 %7) #14
  %9 = icmp ne i8* %8, null
  br i1 %9, label %40, label %10

10:                                               ; preds = %2
  %11 = load i8*, i8** %3, align 8
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = call i8* @memchr(i8* %11, i32 92, i64 %13) #14
  %15 = icmp ne i8* %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %10
  %17 = load i8*, i8** %3, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = call i8* @memchr(i8* %17, i32 58, i64 %19) #14
  %21 = icmp ne i8* %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = load i8*, i8** %3, align 8
  %24 = load i32, i32* %4, align 4
  %25 = sext i32 %24 to i64
  %26 = call i8* @memchr(i8* %23, i32 59, i64 %25) #14
  %27 = icmp ne i8* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %22
  %29 = load i8*, i8** %3, align 8
  %30 = load i32, i32* %4, align 4
  %31 = sext i32 %30 to i64
  %32 = call i8* @memchr(i8* %29, i32 10, i64 %31) #14
  %33 = icmp ne i8* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %28
  %35 = load i8*, i8** %3, align 8
  %36 = load i32, i32* %4, align 4
  %37 = sext i32 %36 to i64
  %38 = call i8* @memchr(i8* %35, i32 13, i64 %37) #14
  %39 = icmp ne i8* %38, null
  br label %40

40:                                               ; preds = %34, %28, %22, %16, %10, %2
  %41 = phi i1 [ true, %28 ], [ true, %22 ], [ true, %16 ], [ true, %10 ], [ true, %2 ], [ %39, %34 ]
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i32
  ret i32 %43
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getVersion(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %11 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = load %23*, %23** %3, align 8
  %13 = getelementptr inbounds %23, %23* %12, i32 0, i32 4
  %14 = call zeroext i8 @444(%4* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 8
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load %23*, %23** %3, align 8
  %19 = getelementptr inbounds %23, %23* %18, i32 0, i32 4
  br label %21

20:                                               ; preds = %2
  br label %21

21:                                               ; preds = %20, %17
  %22 = phi %4* [ %19, %17 ], [ null, %20 ]
  store %4* %22, %4** %5, align 8
  %23 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %4*, %4** %5, align 8
  %25 = getelementptr inbounds %4, %4* %24, i32 0, i32 0
  %26 = bitcast %5* %25 to %21**
  %27 = load %21*, %21** %26, align 8
  %28 = bitcast %21* %27 to i8*
  %29 = load %4*, %4** %5, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = getelementptr inbounds %21, %21* %32, i32 0, i32 3
  %34 = load %22*, %22** %33, align 8
  %35 = getelementptr inbounds %22, %22* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %28, i64 %38
  %40 = bitcast i8* %39 to %99*
  store %99* %40, %99** %6, align 8
  %41 = load %99*, %99** %6, align 8
  %42 = bitcast %99* %41 to %52**
  %43 = load %52*, %52** %42, align 8
  %44 = icmp ne %52* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %21
  %46 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %47 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %46, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %106

48:                                               ; preds = %21
  %49 = load %23*, %23** %3, align 8
  %50 = getelementptr inbounds %23, %23* %49, i32 0, i32 4
  %51 = getelementptr inbounds %4, %4* %50, i32 0, i32 2
  %52 = bitcast %7* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 1)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %48
  br label %69

62:                                               ; preds = %48
  %63 = load %23*, %23** %3, align 8
  %64 = getelementptr inbounds %23, %23* %63, i32 0, i32 4
  %65 = getelementptr inbounds %4, %4* %64, i32 0, i32 2
  %66 = bitcast %7* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %69

69:                                               ; preds = %62, %61
  %70 = phi i32 [ 0, %61 ], [ %68, %62 ]
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store i32 1, i32* %7, align 4
  br label %106

73:                                               ; preds = %69
  br label %74

74:                                               ; preds = %73
  %75 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #13
  %76 = load %99*, %99** %6, align 8
  %77 = bitcast %99* %76 to %52**
  %78 = load %52*, %52** %77, align 8
  %79 = getelementptr inbounds %52, %52* %78, i32 0, i32 6
  %80 = getelementptr inbounds [12 x i8], [12 x i8]* %79, i32 0, i32 0
  store i8* %80, i8** %8, align 8
  br label %81

81:                                               ; preds = %74
  br label %82

82:                                               ; preds = %81
  %83 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %83) #13
  %84 = load %4*, %4** %4, align 8
  store %4* %84, %4** %9, align 8
  %85 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %85) #13
  %86 = load i8*, i8** %8, align 8
  %87 = load i8*, i8** %8, align 8
  %88 = call i64 @strlen(i8* %87) #14
  %89 = call %0* @441(i8* %86, i64 %88, i32 0)
  store %0* %89, %0** %10, align 8
  %90 = load %0*, %0** %10, align 8
  %91 = load %4*, %4** %9, align 8
  %92 = getelementptr inbounds %4, %4* %91, i32 0, i32 0
  %93 = bitcast %5* %92 to %0**
  store %0* %90, %0** %93, align 8
  %94 = load %4*, %4** %9, align 8
  %95 = getelementptr inbounds %4, %4* %94, i32 0, i32 1
  %96 = bitcast %6* %95 to i32*
  store i32 5126, i32* %96, align 8
  %97 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #13
  %98 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #13
  br label %99

99:                                               ; preds = %82
  br label %100

100:                                              ; preds = %99
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  %103 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #13
  br label %104

104:                                              ; preds = %102
  br label %105

105:                                              ; preds = %104
  store i32 1, i32* %7, align 4
  br label %106

106:                                              ; preds = %105, %72, %45
  %107 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #13
  %108 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_startBuffering(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %8 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %23*, %23** %3, align 8
  %10 = getelementptr inbounds %23, %23* %9, i32 0, i32 4
  %11 = call zeroext i8 @444(%4* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %4* [ %16, %14 ], [ null, %17 ]
  store %4* %19, %4** %5, align 8
  %20 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %4*, %4** %5, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %21**
  %24 = load %21*, %21** %23, align 8
  %25 = bitcast %21* %24 to i8*
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = getelementptr inbounds %21, %21* %29, i32 0, i32 3
  %31 = load %22*, %22** %30, align 8
  %32 = getelementptr inbounds %22, %22* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 %35
  %37 = bitcast i8* %36 to %99*
  store %99* %37, %99** %6, align 8
  %38 = load %99*, %99** %6, align 8
  %39 = bitcast %99* %38 to %52**
  %40 = load %52*, %52** %39, align 8
  %41 = icmp ne %52* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %18
  %43 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %44 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %43, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %78

45:                                               ; preds = %18
  %46 = load %23*, %23** %3, align 8
  %47 = getelementptr inbounds %23, %23* %46, i32 0, i32 4
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 2
  %49 = bitcast %7* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 1)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %45
  br label %66

59:                                               ; preds = %45
  %60 = load %23*, %23** %3, align 8
  %61 = getelementptr inbounds %23, %23* %60, i32 0, i32 4
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 2
  %63 = bitcast %7* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %66

66:                                               ; preds = %59, %58
  %67 = phi i32 [ 0, %58 ], [ %65, %59 ]
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 1, i32* %7, align 4
  br label %78

70:                                               ; preds = %66
  %71 = load %99*, %99** %6, align 8
  %72 = bitcast %99* %71 to %52**
  %73 = load %52*, %52** %72, align 8
  %74 = getelementptr inbounds %52, %52* %73, i32 0, i32 24
  %75 = load i16, i16* %74, align 8
  %76 = and i16 %75, -17
  %77 = or i16 %76, 16
  store i16 %77, i16* %74, align 8
  store i32 0, i32* %7, align 4
  br label %78

78:                                               ; preds = %70, %69, %42
  %79 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #13
  %80 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #13
  %81 = load i32, i32* %7, align 4
  switch i32 %81, label %83 [
    i32 0, label %82
    i32 1, label %82
  ]

82:                                               ; preds = %78, %78
  ret void

83:                                               ; preds = %78
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_isBuffering(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %8 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %23*, %23** %3, align 8
  %10 = getelementptr inbounds %23, %23* %9, i32 0, i32 4
  %11 = call zeroext i8 @444(%4* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %4* [ %16, %14 ], [ null, %17 ]
  store %4* %19, %4** %5, align 8
  %20 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %4*, %4** %5, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %21**
  %24 = load %21*, %21** %23, align 8
  %25 = bitcast %21* %24 to i8*
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = getelementptr inbounds %21, %21* %29, i32 0, i32 3
  %31 = load %22*, %22** %30, align 8
  %32 = getelementptr inbounds %22, %22* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 %35
  %37 = bitcast i8* %36 to %99*
  store %99* %37, %99** %6, align 8
  %38 = load %99*, %99** %6, align 8
  %39 = bitcast %99* %38 to %52**
  %40 = load %52*, %52** %39, align 8
  %41 = icmp ne %52* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %18
  %43 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %44 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %43, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %88

45:                                               ; preds = %18
  %46 = load %23*, %23** %3, align 8
  %47 = getelementptr inbounds %23, %23* %46, i32 0, i32 4
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 2
  %49 = bitcast %7* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 1)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %45
  br label %66

59:                                               ; preds = %45
  %60 = load %23*, %23** %3, align 8
  %61 = getelementptr inbounds %23, %23* %60, i32 0, i32 4
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 2
  %63 = bitcast %7* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %66

66:                                               ; preds = %59, %58
  %67 = phi i32 [ 0, %58 ], [ %65, %59 ]
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 1, i32* %7, align 4
  br label %88

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %70
  %72 = load %99*, %99** %6, align 8
  %73 = bitcast %99* %72 to %52**
  %74 = load %52*, %52** %73, align 8
  %75 = getelementptr inbounds %52, %52* %74, i32 0, i32 24
  %76 = load i16, i16* %75, align 8
  %77 = lshr i16 %76, 4
  %78 = and i16 %77, 1
  %79 = zext i16 %78 to i32
  %80 = icmp ne i32 %79, 0
  %81 = zext i1 %80 to i64
  %82 = select i1 %80, i32 3, i32 2
  %83 = load %4*, %4** %4, align 8
  %84 = getelementptr inbounds %4, %4* %83, i32 0, i32 1
  %85 = bitcast %6* %84 to i32*
  store i32 %82, i32* %85, align 8
  br label %86

86:                                               ; preds = %71
  br label %87

87:                                               ; preds = %86
  store i32 1, i32* %7, align 4
  br label %88

88:                                               ; preds = %87, %69, %42
  %89 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  %90 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_stopBuffering(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %99*, align 8
  %8 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %6, align 8
  %22 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %6, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %6, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %7, align 8
  %40 = load %99*, %99** %7, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %107

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 1)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %47
  br label %68

61:                                               ; preds = %47
  %62 = load %23*, %23** %3, align 8
  %63 = getelementptr inbounds %23, %23* %62, i32 0, i32 4
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = bitcast %7* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i32 [ 0, %60 ], [ %67, %61 ]
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 1, i32* %8, align 4
  br label %107

72:                                               ; preds = %68
  %73 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %72
  %76 = load %99*, %99** %7, align 8
  %77 = bitcast %99* %76 to %52**
  %78 = load %52*, %52** %77, align 8
  %79 = getelementptr inbounds %52, %52* %78, i32 0, i32 24
  %80 = load i16, i16* %79, align 8
  %81 = lshr i16 %80, 7
  %82 = and i16 %81, 1
  %83 = zext i16 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %75
  %86 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %87 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %86, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @82, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %107

88:                                               ; preds = %75, %72
  %89 = load %99*, %99** %7, align 8
  %90 = bitcast %99* %89 to %52**
  %91 = load %52*, %52** %90, align 8
  %92 = getelementptr inbounds %52, %52* %91, i32 0, i32 24
  %93 = load i16, i16* %92, align 8
  %94 = and i16 %93, -17
  store i16 %94, i16* %92, align 8
  %95 = load %99*, %99** %7, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = load %52*, %52** %96, align 8
  %98 = call i32 @phar_flush(%52* %97, i8* null, i64 0, i32 0, i8** %5)
  %99 = load i8*, i8** %5, align 8
  %100 = icmp ne i8* %99, null
  br i1 %100, label %101, label %106

101:                                              ; preds = %88
  %102 = load %3*, %3** @3, align 8
  %103 = load i8*, i8** %5, align 8
  %104 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %102, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %103)
  %105 = load i8*, i8** %5, align 8
  call void @_efree(i8* %105)
  br label %106

106:                                              ; preds = %101, %88
  store i32 0, i32* %8, align 4
  br label %107

107:                                              ; preds = %106, %85, %71, %44
  %108 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #13
  %109 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #13
  %110 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #13
  %111 = load i32, i32* %8, align 4
  switch i32 %111, label %113 [
    i32 0, label %112
    i32 1, label %112
  ]

112:                                              ; preds = %107, %107
  ret void

113:                                              ; preds = %107
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_setStub(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %34*, align 8
  %11 = alloca %4*, align 8
  %12 = alloca %99*, align 8
  %13 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %14 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store i64 -1, i64* %9, align 8
  %19 = bitcast %34** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %23*, %23** %3, align 8
  %22 = getelementptr inbounds %23, %23* %21, i32 0, i32 4
  %23 = call zeroext i8 @444(%4* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %23*, %23** %3, align 8
  %28 = getelementptr inbounds %23, %23* %27, i32 0, i32 4
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi %4* [ %28, %26 ], [ null, %29 ]
  store %4* %31, %4** %11, align 8
  %32 = bitcast %99** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = load %4*, %4** %11, align 8
  %34 = getelementptr inbounds %4, %4* %33, i32 0, i32 0
  %35 = bitcast %5* %34 to %21**
  %36 = load %21*, %21** %35, align 8
  %37 = bitcast %21* %36 to i8*
  %38 = load %4*, %4** %11, align 8
  %39 = getelementptr inbounds %4, %4* %38, i32 0, i32 0
  %40 = bitcast %5* %39 to %21**
  %41 = load %21*, %21** %40, align 8
  %42 = getelementptr inbounds %21, %21* %41, i32 0, i32 3
  %43 = load %22*, %22** %42, align 8
  %44 = getelementptr inbounds %22, %22* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = sub i64 0, %46
  %48 = getelementptr inbounds i8, i8* %37, i64 %47
  %49 = bitcast i8* %48 to %99*
  store %99* %49, %99** %12, align 8
  %50 = load %99*, %99** %12, align 8
  %51 = bitcast %99* %50 to %52**
  %52 = load %52*, %52** %51, align 8
  %53 = icmp ne %52* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %30
  %55 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %56 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %55, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %13, align 4
  br label %231

57:                                               ; preds = %30
  %58 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %73

60:                                               ; preds = %57
  %61 = load %99*, %99** %12, align 8
  %62 = bitcast %99* %61 to %52**
  %63 = load %52*, %52** %62, align 8
  %64 = getelementptr inbounds %52, %52* %63, i32 0, i32 24
  %65 = load i16, i16* %64, align 8
  %66 = lshr i16 %65, 7
  %67 = and i16 %66, 1
  %68 = zext i16 %67 to i32
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %60
  %71 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %72 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %71, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @103, i32 0, i32 0))
  store i32 1, i32* %13, align 4
  br label %231

73:                                               ; preds = %60, %57
  %74 = load %99*, %99** %12, align 8
  %75 = bitcast %99* %74 to %52**
  %76 = load %52*, %52** %75, align 8
  %77 = getelementptr inbounds %52, %52* %76, i32 0, i32 24
  %78 = load i16, i16* %77, align 8
  %79 = lshr i16 %78, 7
  %80 = and i16 %79, 1
  %81 = zext i16 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %100

83:                                               ; preds = %73
  %84 = load %99*, %99** %12, align 8
  %85 = bitcast %99* %84 to %52**
  %86 = load %52*, %52** %85, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 24
  %88 = load i16, i16* %87, align 8
  %89 = lshr i16 %88, 6
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %83
  %94 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %95 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %94, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @104, i32 0, i32 0))
  br label %99

96:                                               ; preds = %83
  %97 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %98 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %97, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @105, i32 0, i32 0))
  br label %99

99:                                               ; preds = %96, %93
  store i32 1, i32* %13, align 4
  br label %231

100:                                              ; preds = %73
  %101 = load %23*, %23** %3, align 8
  %102 = getelementptr inbounds %23, %23* %101, i32 0, i32 4
  %103 = getelementptr inbounds %4, %4* %102, i32 0, i32 2
  %104 = bitcast %7* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %105, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @106, i32 0, i32 0), %4** %5, i64* %9)
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %171

108:                                              ; preds = %100
  %109 = load %4*, %4** %5, align 8
  %110 = call i32 @php_file_le_stream()
  %111 = call i32 @php_file_le_pstream()
  %112 = call i8* @zend_fetch_resource2_ex(%4* %109, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @107, i32 0, i32 0), i32 %110, i32 %111)
  %113 = bitcast i8* %112 to %34*
  store %34* %113, %34** %10, align 8
  %114 = icmp ne %34* %113, null
  br i1 %114, label %115, label %167

115:                                              ; preds = %108
  %116 = load i64, i64* %9, align 8
  %117 = icmp sgt i64 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load i64, i64* %9, align 8
  %120 = sub nsw i64 0, %119
  store i64 %120, i64* %9, align 8
  br label %122

121:                                              ; preds = %115
  store i64 -1, i64* %9, align 8
  br label %122

122:                                              ; preds = %121, %118
  %123 = load %99*, %99** %12, align 8
  %124 = bitcast %99* %123 to %52**
  %125 = load %52*, %52** %124, align 8
  %126 = getelementptr inbounds %52, %52* %125, i32 0, i32 24
  %127 = load i16, i16* %126, align 8
  %128 = lshr i16 %127, 8
  %129 = and i16 %128, 1
  %130 = zext i16 %129 to i32
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %145

132:                                              ; preds = %122
  %133 = load %99*, %99** %12, align 8
  %134 = bitcast %99* %133 to %52**
  %135 = call i32 @phar_copy_on_write(%52** %134)
  %136 = icmp eq i32 -1, %135
  br i1 %136, label %137, label %145

137:                                              ; preds = %132
  %138 = load %3*, %3** @3, align 8
  %139 = load %99*, %99** %12, align 8
  %140 = bitcast %99* %139 to %52**
  %141 = load %52*, %52** %140, align 8
  %142 = getelementptr inbounds %52, %52* %141, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %138, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %143)
  store i32 1, i32* %13, align 4
  br label %231

145:                                              ; preds = %132, %122
  %146 = load %99*, %99** %12, align 8
  %147 = bitcast %99* %146 to %52**
  %148 = load %52*, %52** %147, align 8
  %149 = load %4*, %4** %5, align 8
  %150 = bitcast %4* %149 to i8*
  %151 = load i64, i64* %9, align 8
  %152 = call i32 @phar_flush(%52* %148, i8* %150, i64 %151, i32 0, i8** %7)
  %153 = load i8*, i8** %7, align 8
  %154 = icmp ne i8* %153, null
  br i1 %154, label %155, label %160

155:                                              ; preds = %145
  %156 = load %3*, %3** @3, align 8
  %157 = load i8*, i8** %7, align 8
  %158 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %156, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %157)
  %159 = load i8*, i8** %7, align 8
  call void @_efree(i8* %159)
  br label %160

160:                                              ; preds = %155, %145
  br label %161

161:                                              ; preds = %160
  %162 = load %4*, %4** %4, align 8
  %163 = getelementptr inbounds %4, %4* %162, i32 0, i32 1
  %164 = bitcast %6* %163 to i32*
  store i32 3, i32* %164, align 8
  br label %165

165:                                              ; preds = %161
  br label %166

166:                                              ; preds = %165
  store i32 1, i32* %13, align 4
  br label %231

167:                                              ; preds = %108
  %168 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %169 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %168, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @108, i32 0, i32 0))
  br label %170

170:                                              ; preds = %167
  br label %224

171:                                              ; preds = %100
  %172 = load %23*, %23** %3, align 8
  %173 = getelementptr inbounds %23, %23* %172, i32 0, i32 4
  %174 = getelementptr inbounds %4, %4* %173, i32 0, i32 2
  %175 = bitcast %7* %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @100, i32 0, i32 0), i8** %6, i64* %8)
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %223

179:                                              ; preds = %171
  %180 = load %99*, %99** %12, align 8
  %181 = bitcast %99* %180 to %52**
  %182 = load %52*, %52** %181, align 8
  %183 = getelementptr inbounds %52, %52* %182, i32 0, i32 24
  %184 = load i16, i16* %183, align 8
  %185 = lshr i16 %184, 8
  %186 = and i16 %185, 1
  %187 = zext i16 %186 to i32
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %202

189:                                              ; preds = %179
  %190 = load %99*, %99** %12, align 8
  %191 = bitcast %99* %190 to %52**
  %192 = call i32 @phar_copy_on_write(%52** %191)
  %193 = icmp eq i32 -1, %192
  br i1 %193, label %194, label %202

194:                                              ; preds = %189
  %195 = load %3*, %3** @3, align 8
  %196 = load %99*, %99** %12, align 8
  %197 = bitcast %99* %196 to %52**
  %198 = load %52*, %52** %197, align 8
  %199 = getelementptr inbounds %52, %52* %198, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %195, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %200)
  store i32 1, i32* %13, align 4
  br label %231

202:                                              ; preds = %189, %179
  %203 = load %99*, %99** %12, align 8
  %204 = bitcast %99* %203 to %52**
  %205 = load %52*, %52** %204, align 8
  %206 = load i8*, i8** %6, align 8
  %207 = load i64, i64* %8, align 8
  %208 = call i32 @phar_flush(%52* %205, i8* %206, i64 %207, i32 0, i8** %7)
  %209 = load i8*, i8** %7, align 8
  %210 = icmp ne i8* %209, null
  br i1 %210, label %211, label %216

211:                                              ; preds = %202
  %212 = load %3*, %3** @3, align 8
  %213 = load i8*, i8** %7, align 8
  %214 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %212, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %213)
  %215 = load i8*, i8** %7, align 8
  call void @_efree(i8* %215)
  br label %216

216:                                              ; preds = %211, %202
  br label %217

217:                                              ; preds = %216
  %218 = load %4*, %4** %4, align 8
  %219 = getelementptr inbounds %4, %4* %218, i32 0, i32 1
  %220 = bitcast %6* %219 to i32*
  store i32 3, i32* %220, align 8
  br label %221

221:                                              ; preds = %217
  br label %222

222:                                              ; preds = %221
  store i32 1, i32* %13, align 4
  br label %231

223:                                              ; preds = %171
  br label %224

224:                                              ; preds = %223, %170
  br label %225

225:                                              ; preds = %224
  %226 = load %4*, %4** %4, align 8
  %227 = getelementptr inbounds %4, %4* %226, i32 0, i32 1
  %228 = bitcast %6* %227 to i32*
  store i32 2, i32* %228, align 8
  br label %229

229:                                              ; preds = %225
  br label %230

230:                                              ; preds = %229
  store i32 1, i32* %13, align 4
  br label %231

231:                                              ; preds = %230, %222, %194, %166, %137, %99, %70, %54
  %232 = bitcast %99** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #13
  %233 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #13
  %234 = bitcast %34** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #13
  %235 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235) #13
  %236 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %236) #13
  %237 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #13
  %238 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #13
  %239 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %239) #13
  ret void
}

declare dso_local i32 @zend_parse_parameters_ex(i32, i32, i8*, ...) #2

declare dso_local i8* @zend_fetch_resource2_ex(%4*, i8*, i32, i32) #2

declare dso_local i32 @php_file_le_stream() #2

declare dso_local i32 @php_file_le_pstream() #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_setDefaultStub(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %4*, align 8
  %13 = alloca %99*, align 8
  %14 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i8* null, i8** %5, align 8
  %16 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  store i8* null, i8** %6, align 8
  %17 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  store i8* null, i8** %7, align 8
  %18 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store %0* null, %0** %8, align 8
  %19 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  store i64 0, i64* %9, align 8
  %20 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  store i64 0, i64* %10, align 8
  %21 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #13
  store i32 0, i32* %11, align 4
  %22 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  %25 = call zeroext i8 @444(%4* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  %29 = load %23*, %23** %3, align 8
  %30 = getelementptr inbounds %23, %23* %29, i32 0, i32 4
  br label %32

31:                                               ; preds = %2
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi %4* [ %30, %28 ], [ null, %31 ]
  store %4* %33, %4** %12, align 8
  %34 = bitcast %99** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = load %4*, %4** %12, align 8
  %36 = getelementptr inbounds %4, %4* %35, i32 0, i32 0
  %37 = bitcast %5* %36 to %21**
  %38 = load %21*, %21** %37, align 8
  %39 = bitcast %21* %38 to i8*
  %40 = load %4*, %4** %12, align 8
  %41 = getelementptr inbounds %4, %4* %40, i32 0, i32 0
  %42 = bitcast %5* %41 to %21**
  %43 = load %21*, %21** %42, align 8
  %44 = getelementptr inbounds %21, %21* %43, i32 0, i32 3
  %45 = load %22*, %22** %44, align 8
  %46 = getelementptr inbounds %22, %22* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = bitcast i8* %50 to %99*
  store %99* %51, %99** %13, align 8
  %52 = load %99*, %99** %13, align 8
  %53 = bitcast %99* %52 to %52**
  %54 = load %52*, %52** %53, align 8
  %55 = icmp ne %52* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %32
  %57 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %58 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %57, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %14, align 4
  br label %266

59:                                               ; preds = %32
  %60 = load %99*, %99** %13, align 8
  %61 = bitcast %99* %60 to %52**
  %62 = load %52*, %52** %61, align 8
  %63 = getelementptr inbounds %52, %52* %62, i32 0, i32 24
  %64 = load i16, i16* %63, align 8
  %65 = lshr i16 %64, 7
  %66 = and i16 %65, 1
  %67 = zext i16 %66 to i32
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %86

69:                                               ; preds = %59
  %70 = load %99*, %99** %13, align 8
  %71 = bitcast %99* %70 to %52**
  %72 = load %52*, %52** %71, align 8
  %73 = getelementptr inbounds %52, %52* %72, i32 0, i32 24
  %74 = load i16, i16* %73, align 8
  %75 = lshr i16 %74, 6
  %76 = and i16 %75, 1
  %77 = zext i16 %76 to i32
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %69
  %80 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %81 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %80, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @104, i32 0, i32 0))
  br label %85

82:                                               ; preds = %69
  %83 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %84 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %83, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @105, i32 0, i32 0))
  br label %85

85:                                               ; preds = %82, %79
  store i32 1, i32* %14, align 4
  br label %266

86:                                               ; preds = %59
  %87 = load %23*, %23** %3, align 8
  %88 = getelementptr inbounds %23, %23* %87, i32 0, i32 4
  %89 = getelementptr inbounds %4, %4* %88, i32 0, i32 2
  %90 = bitcast %7* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @109, i32 0, i32 0), i8** %5, i64* %9, i8** %6, i64* %10)
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %101

94:                                               ; preds = %86
  br label %95

95:                                               ; preds = %94
  %96 = load %4*, %4** %4, align 8
  %97 = getelementptr inbounds %4, %4* %96, i32 0, i32 1
  %98 = bitcast %6* %97 to i32*
  store i32 2, i32* %98, align 8
  br label %99

99:                                               ; preds = %95
  br label %100

100:                                              ; preds = %99
  store i32 1, i32* %14, align 4
  br label %266

101:                                              ; preds = %86
  %102 = load %23*, %23** %3, align 8
  %103 = getelementptr inbounds %23, %23* %102, i32 0, i32 4
  %104 = getelementptr inbounds %4, %4* %103, i32 0, i32 2
  %105 = bitcast %7* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = icmp ugt i32 %106, 0
  br i1 %107, label %108, label %140

108:                                              ; preds = %101
  %109 = load %99*, %99** %13, align 8
  %110 = bitcast %99* %109 to %52**
  %111 = load %52*, %52** %110, align 8
  %112 = getelementptr inbounds %52, %52* %111, i32 0, i32 24
  %113 = load i16, i16* %112, align 8
  %114 = lshr i16 %113, 6
  %115 = and i16 %114, 1
  %116 = zext i16 %115 to i32
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %128, label %118

118:                                              ; preds = %108
  %119 = load %99*, %99** %13, align 8
  %120 = bitcast %99* %119 to %52**
  %121 = load %52*, %52** %120, align 8
  %122 = getelementptr inbounds %52, %52* %121, i32 0, i32 24
  %123 = load i16, i16* %122, align 8
  %124 = lshr i16 %123, 5
  %125 = and i16 %124, 1
  %126 = zext i16 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %118, %108
  %129 = load %23*, %23** %3, align 8
  %130 = getelementptr inbounds %23, %23* %129, i32 0, i32 4
  %131 = getelementptr inbounds %4, %4* %130, i32 0, i32 2
  %132 = bitcast %7* %131 to i32*
  %133 = load i32, i32* %132, align 4
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @110, i32 0, i32 0), i32 %133)
  br label %134

134:                                              ; preds = %128
  %135 = load %4*, %4** %4, align 8
  %136 = getelementptr inbounds %4, %4* %135, i32 0, i32 1
  %137 = bitcast %6* %136 to i32*
  store i32 2, i32* %137, align 8
  br label %138

138:                                              ; preds = %134
  br label %139

139:                                              ; preds = %138
  store i32 1, i32* %14, align 4
  br label %266

140:                                              ; preds = %118, %101
  %141 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %152

143:                                              ; preds = %140
  %144 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %145 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %144, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @111, i32 0, i32 0))
  br label %146

146:                                              ; preds = %143
  %147 = load %4*, %4** %4, align 8
  %148 = getelementptr inbounds %4, %4* %147, i32 0, i32 1
  %149 = bitcast %6* %148 to i32*
  store i32 2, i32* %149, align 8
  br label %150

150:                                              ; preds = %146
  br label %151

151:                                              ; preds = %150
  store i32 1, i32* %14, align 4
  br label %266

152:                                              ; preds = %140
  %153 = load %99*, %99** %13, align 8
  %154 = bitcast %99* %153 to %52**
  %155 = load %52*, %52** %154, align 8
  %156 = getelementptr inbounds %52, %52* %155, i32 0, i32 24
  %157 = load i16, i16* %156, align 8
  %158 = lshr i16 %157, 6
  %159 = and i16 %158, 1
  %160 = zext i16 %159 to i32
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %195, label %162

162:                                              ; preds = %152
  %163 = load %99*, %99** %13, align 8
  %164 = bitcast %99* %163 to %52**
  %165 = load %52*, %52** %164, align 8
  %166 = getelementptr inbounds %52, %52* %165, i32 0, i32 24
  %167 = load i16, i16* %166, align 8
  %168 = lshr i16 %167, 5
  %169 = and i16 %168, 1
  %170 = zext i16 %169 to i32
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %195, label %172

172:                                              ; preds = %162
  %173 = load i8*, i8** %5, align 8
  %174 = load i8*, i8** %6, align 8
  %175 = call %0* @phar_create_default_stub(i8* %173, i8* %174, i8** %7)
  store %0* %175, %0** %8, align 8
  %176 = load i8*, i8** %7, align 8
  %177 = icmp ne i8* %176, null
  br i1 %177, label %178, label %194

178:                                              ; preds = %172
  %179 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %180 = load i8*, i8** %7, align 8
  %181 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %179, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %180)
  %182 = load i8*, i8** %7, align 8
  call void @_efree(i8* %182)
  %183 = load %0*, %0** %8, align 8
  %184 = icmp ne %0* %183, null
  br i1 %184, label %185, label %187

185:                                              ; preds = %178
  %186 = load %0*, %0** %8, align 8
  call void @456(%0* %186)
  br label %187

187:                                              ; preds = %185, %178
  br label %188

188:                                              ; preds = %187
  %189 = load %4*, %4** %4, align 8
  %190 = getelementptr inbounds %4, %4* %189, i32 0, i32 1
  %191 = bitcast %6* %190 to i32*
  store i32 2, i32* %191, align 8
  br label %192

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  store i32 1, i32* %14, align 4
  br label %266

194:                                              ; preds = %172
  store i32 1, i32* %11, align 4
  br label %195

195:                                              ; preds = %194, %162, %152
  %196 = load %99*, %99** %13, align 8
  %197 = bitcast %99* %196 to %52**
  %198 = load %52*, %52** %197, align 8
  %199 = getelementptr inbounds %52, %52* %198, i32 0, i32 24
  %200 = load i16, i16* %199, align 8
  %201 = lshr i16 %200, 8
  %202 = and i16 %201, 1
  %203 = zext i16 %202 to i32
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %218

205:                                              ; preds = %195
  %206 = load %99*, %99** %13, align 8
  %207 = bitcast %99* %206 to %52**
  %208 = call i32 @phar_copy_on_write(%52** %207)
  %209 = icmp eq i32 -1, %208
  br i1 %209, label %210, label %218

210:                                              ; preds = %205
  %211 = load %3*, %3** @3, align 8
  %212 = load %99*, %99** %13, align 8
  %213 = bitcast %99* %212 to %52**
  %214 = load %52*, %52** %213, align 8
  %215 = getelementptr inbounds %52, %52* %214, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %211, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %216)
  store i32 1, i32* %14, align 4
  br label %266

218:                                              ; preds = %205, %195
  %219 = load %99*, %99** %13, align 8
  %220 = bitcast %99* %219 to %52**
  %221 = load %52*, %52** %220, align 8
  %222 = load %0*, %0** %8, align 8
  %223 = icmp ne %0* %222, null
  br i1 %223, label %224, label %228

224:                                              ; preds = %218
  %225 = load %0*, %0** %8, align 8
  %226 = getelementptr inbounds %0, %0* %225, i32 0, i32 3
  %227 = getelementptr inbounds [1 x i8], [1 x i8]* %226, i32 0, i32 0
  br label %229

228:                                              ; preds = %218
  br label %229

229:                                              ; preds = %228, %224
  %230 = phi i8* [ %227, %224 ], [ null, %228 ]
  %231 = load %0*, %0** %8, align 8
  %232 = icmp ne %0* %231, null
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = load %0*, %0** %8, align 8
  %235 = getelementptr inbounds %0, %0* %234, i32 0, i32 2
  %236 = load i64, i64* %235, align 8
  br label %238

237:                                              ; preds = %229
  br label %238

238:                                              ; preds = %237, %233
  %239 = phi i64 [ %236, %233 ], [ 0, %237 ]
  %240 = call i32 @phar_flush(%52* %221, i8* %230, i64 %239, i32 1, i8** %7)
  %241 = load i32, i32* %11, align 4
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %238
  %244 = load %0*, %0** %8, align 8
  call void @456(%0* %244)
  br label %245

245:                                              ; preds = %243, %238
  %246 = load i8*, i8** %7, align 8
  %247 = icmp ne i8* %246, null
  br i1 %247, label %248, label %259

248:                                              ; preds = %245
  %249 = load %3*, %3** @3, align 8
  %250 = load i8*, i8** %7, align 8
  %251 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %249, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %250)
  %252 = load i8*, i8** %7, align 8
  call void @_efree(i8* %252)
  br label %253

253:                                              ; preds = %248
  %254 = load %4*, %4** %4, align 8
  %255 = getelementptr inbounds %4, %4* %254, i32 0, i32 1
  %256 = bitcast %6* %255 to i32*
  store i32 2, i32* %256, align 8
  br label %257

257:                                              ; preds = %253
  br label %258

258:                                              ; preds = %257
  store i32 1, i32* %14, align 4
  br label %266

259:                                              ; preds = %245
  br label %260

260:                                              ; preds = %259
  %261 = load %4*, %4** %4, align 8
  %262 = getelementptr inbounds %4, %4* %261, i32 0, i32 1
  %263 = bitcast %6* %262 to i32*
  store i32 3, i32* %263, align 8
  br label %264

264:                                              ; preds = %260
  br label %265

265:                                              ; preds = %264
  store i32 1, i32* %14, align 4
  br label %266

266:                                              ; preds = %265, %258, %210, %193, %151, %139, %100, %85, %56
  %267 = bitcast %99** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #13
  %268 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #13
  %269 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #13
  %271 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #13
  %272 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #13
  %274 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #13
  ret void
}

declare dso_local void @php_error_docref0(i8*, i32, i8*, ...) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @456(%0* %0) #4 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 1
  %6 = bitcast %2* %5 to %102*
  %7 = getelementptr inbounds %102, %102* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %43, label %12

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12
  %14 = load %0*, %0** %2, align 8
  %15 = getelementptr inbounds %0, %0* %14, i32 0, i32 0
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ule i32 %17, 1
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  unreachable

25:                                               ; preds = %13
  br label %26

26:                                               ; preds = %25
  %27 = load %0*, %0** %2, align 8
  %28 = getelementptr inbounds %0, %0* %27, i32 0, i32 0
  %29 = getelementptr inbounds %1, %1* %28, i32 0, i32 1
  %30 = bitcast %2* %29 to %102*
  %31 = getelementptr inbounds %102, %102* %30, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = load %0*, %0** %2, align 8
  %38 = bitcast %0* %37 to i8*
  call void @free(i8* %38) #13
  br label %42

39:                                               ; preds = %26
  %40 = load %0*, %0** %2, align 8
  %41 = bitcast %0* %40 to i8*
  call void @_efree(i8* %41)
  br label %42

42:                                               ; preds = %39, %36
  br label %43

43:                                               ; preds = %42, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_setSignatureAlgorithm(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %99*, align 8
  %11 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  store i8* null, i8** %7, align 8
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i64 0, i64* %8, align 8
  %16 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  %19 = call zeroext i8 @444(%4* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi %4* [ %24, %22 ], [ null, %25 ]
  store %4* %27, %4** %9, align 8
  %28 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = load %4*, %4** %9, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = bitcast %21* %32 to i8*
  %34 = load %4*, %4** %9, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %21**
  %37 = load %21*, %21** %36, align 8
  %38 = getelementptr inbounds %21, %21* %37, i32 0, i32 3
  %39 = load %22*, %22** %38, align 8
  %40 = getelementptr inbounds %22, %22* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = bitcast i8* %44 to %99*
  store %99* %45, %99** %10, align 8
  %46 = load %99*, %99** %10, align 8
  %47 = bitcast %99* %46 to %52**
  %48 = load %52*, %52** %47, align 8
  %49 = icmp ne %52* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %26
  %51 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %52 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %51, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %148

53:                                               ; preds = %26
  %54 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %69

56:                                               ; preds = %53
  %57 = load %99*, %99** %10, align 8
  %58 = bitcast %99* %57 to %52**
  %59 = load %52*, %52** %58, align 8
  %60 = getelementptr inbounds %52, %52* %59, i32 0, i32 24
  %61 = load i16, i16* %60, align 8
  %62 = lshr i16 %61, 7
  %63 = and i16 %62, 1
  %64 = zext i16 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %56
  %67 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %68 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %67, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @112, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %148

69:                                               ; preds = %56, %53
  %70 = load %23*, %23** %3, align 8
  %71 = getelementptr inbounds %23, %23* %70, i32 0, i32 4
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 2
  %73 = bitcast %7* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @113, i32 0, i32 0), i64* %5, i8** %7, i64* %8)
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %69
  store i32 1, i32* %11, align 4
  br label %148

78:                                               ; preds = %69
  %79 = load i64, i64* %8, align 8
  %80 = icmp ugt i64 %79, 2147483647
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 0)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %78
  %88 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %89 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %88, i64 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @114, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %148

90:                                               ; preds = %78
  %91 = load i64, i64* %5, align 8
  switch i64 %91, label %144 [
    i64 3, label %92
    i64 4, label %92
    i64 1, label %92
    i64 2, label %92
    i64 16, label %92
  ]

92:                                               ; preds = %90, %90, %90, %90, %90
  %93 = load %99*, %99** %10, align 8
  %94 = bitcast %99* %93 to %52**
  %95 = load %52*, %52** %94, align 8
  %96 = getelementptr inbounds %52, %52* %95, i32 0, i32 24
  %97 = load i16, i16* %96, align 8
  %98 = lshr i16 %97, 8
  %99 = and i16 %98, 1
  %100 = zext i16 %99 to i32
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %115

102:                                              ; preds = %92
  %103 = load %99*, %99** %10, align 8
  %104 = bitcast %99* %103 to %52**
  %105 = call i32 @phar_copy_on_write(%52** %104)
  %106 = icmp eq i32 -1, %105
  br i1 %106, label %107, label %115

107:                                              ; preds = %102
  %108 = load %3*, %3** @3, align 8
  %109 = load %99*, %99** %10, align 8
  %110 = bitcast %99* %109 to %52**
  %111 = load %52*, %52** %110, align 8
  %112 = getelementptr inbounds %52, %52* %111, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %108, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %113)
  store i32 1, i32* %11, align 4
  br label %148

115:                                              ; preds = %102, %92
  %116 = load i64, i64* %5, align 8
  %117 = trunc i64 %116 to i32
  %118 = load %99*, %99** %10, align 8
  %119 = bitcast %99* %118 to %52**
  %120 = load %52*, %52** %119, align 8
  %121 = getelementptr inbounds %52, %52* %120, i32 0, i32 18
  store i32 %117, i32* %121, align 4
  %122 = load %99*, %99** %10, align 8
  %123 = bitcast %99* %122 to %52**
  %124 = load %52*, %52** %123, align 8
  %125 = getelementptr inbounds %52, %52* %124, i32 0, i32 24
  %126 = load i16, i16* %125, align 8
  %127 = and i16 %126, -3
  %128 = or i16 %127, 2
  store i16 %128, i16* %125, align 8
  %129 = load i8*, i8** %7, align 8
  store i8* %129, i8** getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 43), align 8
  %130 = load i64, i64* %8, align 8
  %131 = trunc i64 %130 to i32
  store i32 %131, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 44), align 8
  %132 = load %99*, %99** %10, align 8
  %133 = bitcast %99* %132 to %52**
  %134 = load %52*, %52** %133, align 8
  %135 = call i32 @phar_flush(%52* %134, i8* null, i64 0, i32 0, i8** %6)
  %136 = load i8*, i8** %6, align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %138, label %143

138:                                              ; preds = %115
  %139 = load %3*, %3** @3, align 8
  %140 = load i8*, i8** %6, align 8
  %141 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %139, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %140)
  %142 = load i8*, i8** %6, align 8
  call void @_efree(i8* %142)
  br label %143

143:                                              ; preds = %138, %115
  br label %147

144:                                              ; preds = %90
  %145 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %146 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %145, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @115, i32 0, i32 0))
  br label %147

147:                                              ; preds = %144, %143
  store i32 0, i32* %11, align 4
  br label %148

148:                                              ; preds = %147, %107, %87, %77, %66, %50
  %149 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #13
  %150 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #13
  %151 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #13
  %152 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #13
  %153 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #13
  %154 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #13
  %155 = load i32, i32* %11, align 4
  switch i32 %155, label %157 [
    i32 0, label %156
    i32 1, label %156
  ]

156:                                              ; preds = %148, %148
  ret void

157:                                              ; preds = %148
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getSignature(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = load %23*, %23** %3, align 8
  %11 = getelementptr inbounds %23, %23* %10, i32 0, i32 4
  %12 = call zeroext i8 @444(%4* %11)
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = load %23*, %23** %3, align 8
  %17 = getelementptr inbounds %23, %23* %16, i32 0, i32 4
  br label %19

18:                                               ; preds = %2
  br label %19

19:                                               ; preds = %18, %15
  %20 = phi %4* [ %17, %15 ], [ null, %18 ]
  store %4* %20, %4** %5, align 8
  %21 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %4*, %4** %5, align 8
  %23 = getelementptr inbounds %4, %4* %22, i32 0, i32 0
  %24 = bitcast %5* %23 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = bitcast %21* %25 to i8*
  %27 = load %4*, %4** %5, align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 0
  %29 = bitcast %5* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = getelementptr inbounds %21, %21* %30, i32 0, i32 3
  %32 = load %22*, %22** %31, align 8
  %33 = getelementptr inbounds %22, %22* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = sub i64 0, %35
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = bitcast i8* %37 to %99*
  store %99* %38, %99** %6, align 8
  %39 = load %99*, %99** %6, align 8
  %40 = bitcast %99* %39 to %52**
  %41 = load %52*, %52** %40, align 8
  %42 = icmp ne %52* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %19
  %44 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %45 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %44, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %135

46:                                               ; preds = %19
  %47 = load %23*, %23** %3, align 8
  %48 = getelementptr inbounds %23, %23* %47, i32 0, i32 4
  %49 = getelementptr inbounds %4, %4* %48, i32 0, i32 2
  %50 = bitcast %7* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 1)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %46
  br label %67

60:                                               ; preds = %46
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %65, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %67

67:                                               ; preds = %60, %59
  %68 = phi i32 [ 0, %59 ], [ %66, %60 ]
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 1, i32* %7, align 4
  br label %135

71:                                               ; preds = %67
  %72 = load %99*, %99** %6, align 8
  %73 = bitcast %99* %72 to %52**
  %74 = load %52*, %52** %73, align 8
  %75 = getelementptr inbounds %52, %52* %74, i32 0, i32 20
  %76 = load i8*, i8** %75, align 8
  %77 = icmp ne i8* %76, null
  br i1 %77, label %78, label %127

78:                                               ; preds = %71
  %79 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79) #13
  %80 = load %4*, %4** %4, align 8
  %81 = call i32 @_array_init(%4* %80, i32 0)
  %82 = load %4*, %4** %4, align 8
  %83 = load %99*, %99** %6, align 8
  %84 = bitcast %99* %83 to %52**
  %85 = load %52*, %52** %84, align 8
  %86 = getelementptr inbounds %52, %52* %85, i32 0, i32 20
  %87 = load i8*, i8** %86, align 8
  %88 = load %99*, %99** %6, align 8
  %89 = bitcast %99* %88 to %52**
  %90 = load %52*, %52** %89, align 8
  %91 = getelementptr inbounds %52, %52* %90, i32 0, i32 19
  %92 = load i32, i32* %91, align 8
  %93 = sext i32 %92 to i64
  %94 = call i32 @add_assoc_stringl_ex(%4* %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @116, i32 0, i32 0), i64 4, i8* %87, i64 %93)
  %95 = load %99*, %99** %6, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 18
  %99 = load i32, i32* %98, align 4
  switch i32 %99, label %115 [
    i32 1, label %100
    i32 2, label %103
    i32 3, label %106
    i32 4, label %109
    i32 16, label %112
  ]

100:                                              ; preds = %78
  %101 = load %4*, %4** %4, align 8
  %102 = call i32 @add_assoc_stringl_ex(%4* %101, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @117, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @60, i32 0, i32 0), i64 3)
  br label %125

103:                                              ; preds = %78
  %104 = load %4*, %4** %4, align 8
  %105 = call i32 @add_assoc_stringl_ex(%4* %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @117, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @61, i32 0, i32 0), i64 5)
  br label %125

106:                                              ; preds = %78
  %107 = load %4*, %4** %4, align 8
  %108 = call i32 @add_assoc_stringl_ex(%4* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @117, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @62, i32 0, i32 0), i64 7)
  br label %125

109:                                              ; preds = %78
  %110 = load %4*, %4** %4, align 8
  %111 = call i32 @add_assoc_stringl_ex(%4* %110, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @117, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @63, i32 0, i32 0), i64 7)
  br label %125

112:                                              ; preds = %78
  %113 = load %4*, %4** %4, align 8
  %114 = call i32 @add_assoc_stringl_ex(%4* %113, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @117, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @65, i32 0, i32 0), i64 7)
  br label %125

115:                                              ; preds = %78
  %116 = load %99*, %99** %6, align 8
  %117 = bitcast %99* %116 to %52**
  %118 = load %52*, %52** %117, align 8
  %119 = getelementptr inbounds %52, %52* %118, i32 0, i32 18
  %120 = load i32, i32* %119, align 4
  %121 = call %0* (i64, i8*, ...) @zend_strpprintf(i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @118, i32 0, i32 0), i32 %120)
  store %0* %121, %0** %8, align 8
  %122 = load %4*, %4** %4, align 8
  %123 = load %0*, %0** %8, align 8
  %124 = call i32 @add_assoc_str_ex(%4* %122, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @117, i32 0, i32 0), i64 9, %0* %123)
  br label %125

125:                                              ; preds = %115, %112, %109, %106, %103, %100
  %126 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  br label %134

127:                                              ; preds = %71
  br label %128

128:                                              ; preds = %127
  %129 = load %4*, %4** %4, align 8
  %130 = getelementptr inbounds %4, %4* %129, i32 0, i32 1
  %131 = bitcast %6* %130 to i32*
  store i32 2, i32* %131, align 8
  br label %132

132:                                              ; preds = %128
  br label %133

133:                                              ; preds = %132
  store i32 1, i32* %7, align 4
  br label %135

134:                                              ; preds = %125
  store i32 0, i32* %7, align 4
  br label %135

135:                                              ; preds = %134, %133, %70, %43
  %136 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #13
  %137 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #13
  %138 = load i32, i32* %7, align 4
  switch i32 %138, label %140 [
    i32 0, label %139
    i32 1, label %139
  ]

139:                                              ; preds = %135, %135
  ret void

140:                                              ; preds = %135
  unreachable
}

declare dso_local i32 @add_assoc_stringl_ex(%4*, i8*, i64, i8*, i64) #2

declare dso_local %0* @zend_strpprintf(i64, i8*, ...) #2

declare dso_local i32 @add_assoc_str_ex(%4*, i8*, i64, %0*) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getModified(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %8 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %23*, %23** %3, align 8
  %10 = getelementptr inbounds %23, %23* %9, i32 0, i32 4
  %11 = call zeroext i8 @444(%4* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %4* [ %16, %14 ], [ null, %17 ]
  store %4* %19, %4** %5, align 8
  %20 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %4*, %4** %5, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %21**
  %24 = load %21*, %21** %23, align 8
  %25 = bitcast %21* %24 to i8*
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = getelementptr inbounds %21, %21* %29, i32 0, i32 3
  %31 = load %22*, %22** %30, align 8
  %32 = getelementptr inbounds %22, %22* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 %35
  %37 = bitcast i8* %36 to %99*
  store %99* %37, %99** %6, align 8
  %38 = load %99*, %99** %6, align 8
  %39 = bitcast %99* %38 to %52**
  %40 = load %52*, %52** %39, align 8
  %41 = icmp ne %52* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %18
  %43 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %44 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %43, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %88

45:                                               ; preds = %18
  %46 = load %23*, %23** %3, align 8
  %47 = getelementptr inbounds %23, %23* %46, i32 0, i32 4
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 2
  %49 = bitcast %7* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 1)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %45
  br label %66

59:                                               ; preds = %45
  %60 = load %23*, %23** %3, align 8
  %61 = getelementptr inbounds %23, %23* %60, i32 0, i32 4
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 2
  %63 = bitcast %7* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %66

66:                                               ; preds = %59, %58
  %67 = phi i32 [ 0, %58 ], [ %65, %59 ]
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 1, i32* %7, align 4
  br label %88

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %70
  %72 = load %99*, %99** %6, align 8
  %73 = bitcast %99* %72 to %52**
  %74 = load %52*, %52** %73, align 8
  %75 = getelementptr inbounds %52, %52* %74, i32 0, i32 24
  %76 = load i16, i16* %75, align 8
  %77 = lshr i16 %76, 1
  %78 = and i16 %77, 1
  %79 = zext i16 %78 to i32
  %80 = icmp ne i32 %79, 0
  %81 = zext i1 %80 to i64
  %82 = select i1 %80, i32 3, i32 2
  %83 = load %4*, %4** %4, align 8
  %84 = getelementptr inbounds %4, %4* %83, i32 0, i32 1
  %85 = bitcast %6* %84 to i32*
  store i32 %82, i32* %85, align 8
  br label %86

86:                                               ; preds = %71
  br label %87

87:                                               ; preds = %86
  store i32 1, i32* %7, align 4
  br label %88

88:                                               ; preds = %87, %69, %42
  %89 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  %90 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_compress(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %21*, align 8
  %10 = alloca %4*, align 8
  %11 = alloca %99*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i8* null, i8** %6, align 8
  %16 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  store i64 0, i64* %7, align 8
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #13
  %18 = bitcast %21** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = load %23*, %23** %3, align 8
  %21 = getelementptr inbounds %23, %23* %20, i32 0, i32 4
  %22 = call zeroext i8 @444(%4* %21)
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, 8
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = load %23*, %23** %3, align 8
  %27 = getelementptr inbounds %23, %23* %26, i32 0, i32 4
  br label %29

28:                                               ; preds = %2
  br label %29

29:                                               ; preds = %28, %25
  %30 = phi %4* [ %27, %25 ], [ null, %28 ]
  store %4* %30, %4** %10, align 8
  %31 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = load %4*, %4** %10, align 8
  %33 = getelementptr inbounds %4, %4* %32, i32 0, i32 0
  %34 = bitcast %5* %33 to %21**
  %35 = load %21*, %21** %34, align 8
  %36 = bitcast %21* %35 to i8*
  %37 = load %4*, %4** %10, align 8
  %38 = getelementptr inbounds %4, %4* %37, i32 0, i32 0
  %39 = bitcast %5* %38 to %21**
  %40 = load %21*, %21** %39, align 8
  %41 = getelementptr inbounds %21, %21* %40, i32 0, i32 3
  %42 = load %22*, %22** %41, align 8
  %43 = getelementptr inbounds %22, %22* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = sub i64 0, %45
  %47 = getelementptr inbounds i8, i8* %36, i64 %46
  %48 = bitcast i8* %47 to %99*
  store %99* %48, %99** %11, align 8
  %49 = load %99*, %99** %11, align 8
  %50 = bitcast %99* %49 to %52**
  %51 = load %52*, %52** %50, align 8
  %52 = icmp ne %52* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %29
  %54 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %55 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %54, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %163

56:                                               ; preds = %29
  %57 = load %23*, %23** %3, align 8
  %58 = getelementptr inbounds %23, %23* %57, i32 0, i32 4
  %59 = getelementptr inbounds %4, %4* %58, i32 0, i32 2
  %60 = bitcast %7* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @113, i32 0, i32 0), i64* %5, i8** %6, i64* %7)
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %65

64:                                               ; preds = %56
  store i32 1, i32* %12, align 4
  br label %163

65:                                               ; preds = %56
  %66 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %65
  %69 = load %99*, %99** %11, align 8
  %70 = bitcast %99* %69 to %52**
  %71 = load %52*, %52** %70, align 8
  %72 = getelementptr inbounds %52, %52* %71, i32 0, i32 24
  %73 = load i16, i16* %72, align 8
  %74 = lshr i16 %73, 7
  %75 = and i16 %74, 1
  %76 = zext i16 %75 to i32
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %68
  %79 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %80 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %79, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @119, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %163

81:                                               ; preds = %68, %65
  %82 = load %99*, %99** %11, align 8
  %83 = bitcast %99* %82 to %52**
  %84 = load %52*, %52** %83, align 8
  %85 = getelementptr inbounds %52, %52* %84, i32 0, i32 24
  %86 = load i16, i16* %85, align 8
  %87 = lshr i16 %86, 5
  %88 = and i16 %87, 1
  %89 = zext i16 %88 to i32
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %81
  %92 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %93 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %92, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @120, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %163

94:                                               ; preds = %81
  %95 = load i64, i64* %5, align 8
  switch i64 %95, label %111 [
    i64 0, label %96
    i64 4096, label %97
    i64 8192, label %104
  ]

96:                                               ; preds = %94
  store i32 0, i32* %8, align 4
  br label %114

97:                                               ; preds = %94
  %98 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  %101 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %102 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %101, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @91, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %163

103:                                              ; preds = %97
  store i32 1048576, i32* %8, align 4
  br label %114

104:                                              ; preds = %94
  %105 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %109 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %108, i64 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @93, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %163

110:                                              ; preds = %104
  store i32 2097152, i32* %8, align 4
  br label %114

111:                                              ; preds = %94
  %112 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %113 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %112, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @94, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %163

114:                                              ; preds = %110, %103, %96
  %115 = load %99*, %99** %11, align 8
  %116 = bitcast %99* %115 to %52**
  %117 = load %52*, %52** %116, align 8
  %118 = getelementptr inbounds %52, %52* %117, i32 0, i32 24
  %119 = load i16, i16* %118, align 8
  %120 = lshr i16 %119, 6
  %121 = and i16 %120, 1
  %122 = zext i16 %121 to i32
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %114
  %125 = load %99*, %99** %11, align 8
  %126 = bitcast %99* %125 to %52**
  %127 = load %52*, %52** %126, align 8
  %128 = load i8*, i8** %6, align 8
  %129 = load i32, i32* %8, align 4
  %130 = call %21* @454(%52* %127, i32 2, i8* %128, i32 %129)
  store %21* %130, %21** %9, align 8
  br label %138

131:                                              ; preds = %114
  %132 = load %99*, %99** %11, align 8
  %133 = bitcast %99* %132 to %52**
  %134 = load %52*, %52** %133, align 8
  %135 = load i8*, i8** %6, align 8
  %136 = load i32, i32* %8, align 4
  %137 = call %21* @454(%52* %134, i32 1, i8* %135, i32 %136)
  store %21* %137, %21** %9, align 8
  br label %138

138:                                              ; preds = %131, %124
  %139 = load %21*, %21** %9, align 8
  %140 = icmp ne %21* %139, null
  br i1 %140, label %141, label %155

141:                                              ; preds = %138
  br label %142

142:                                              ; preds = %141
  %143 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %143) #13
  %144 = load %4*, %4** %4, align 8
  store %4* %144, %4** %13, align 8
  %145 = load %21*, %21** %9, align 8
  %146 = load %4*, %4** %13, align 8
  %147 = getelementptr inbounds %4, %4* %146, i32 0, i32 0
  %148 = bitcast %5* %147 to %21**
  store %21* %145, %21** %148, align 8
  %149 = load %4*, %4** %13, align 8
  %150 = getelementptr inbounds %4, %4* %149, i32 0, i32 1
  %151 = bitcast %6* %150 to i32*
  store i32 1032, i32* %151, align 8
  %152 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #13
  br label %153

153:                                              ; preds = %142
  br label %154

154:                                              ; preds = %153
  br label %162

155:                                              ; preds = %138
  br label %156

156:                                              ; preds = %155
  %157 = load %4*, %4** %4, align 8
  %158 = getelementptr inbounds %4, %4* %157, i32 0, i32 1
  %159 = bitcast %6* %158 to i32*
  store i32 1, i32* %159, align 8
  br label %160

160:                                              ; preds = %156
  br label %161

161:                                              ; preds = %160
  store i32 1, i32* %12, align 4
  br label %163

162:                                              ; preds = %154
  store i32 0, i32* %12, align 4
  br label %163

163:                                              ; preds = %162, %161, %111, %107, %100, %91, %78, %64, %53
  %164 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #13
  %165 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  %166 = bitcast %21** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #13
  %167 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %167) #13
  %168 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #13
  %169 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #13
  %170 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #13
  %171 = load i32, i32* %12, align 4
  switch i32 %171, label %173 [
    i32 0, label %172
    i32 1, label %172
  ]

172:                                              ; preds = %163, %163
  ret void

173:                                              ; preds = %163
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_decompress(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %21*, align 8
  %8 = alloca %4*, align 8
  %9 = alloca %99*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  store i8* null, i8** %5, align 8
  %13 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  store i64 0, i64* %6, align 8
  %14 = bitcast %21** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = load %23*, %23** %3, align 8
  %17 = getelementptr inbounds %23, %23* %16, i32 0, i32 4
  %18 = call zeroext i8 @444(%4* %17)
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 8
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = load %23*, %23** %3, align 8
  %23 = getelementptr inbounds %23, %23* %22, i32 0, i32 4
  br label %25

24:                                               ; preds = %2
  br label %25

25:                                               ; preds = %24, %21
  %26 = phi %4* [ %23, %21 ], [ null, %24 ]
  store %4* %26, %4** %8, align 8
  %27 = bitcast %99** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = load %4*, %4** %8, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = bitcast %21* %31 to i8*
  %33 = load %4*, %4** %8, align 8
  %34 = getelementptr inbounds %4, %4* %33, i32 0, i32 0
  %35 = bitcast %5* %34 to %21**
  %36 = load %21*, %21** %35, align 8
  %37 = getelementptr inbounds %21, %21* %36, i32 0, i32 3
  %38 = load %22*, %22** %37, align 8
  %39 = getelementptr inbounds %22, %22* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = sub i64 0, %41
  %43 = getelementptr inbounds i8, i8* %32, i64 %42
  %44 = bitcast i8* %43 to %99*
  store %99* %44, %99** %9, align 8
  %45 = load %99*, %99** %9, align 8
  %46 = bitcast %99* %45 to %52**
  %47 = load %52*, %52** %46, align 8
  %48 = icmp ne %52* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %25
  %50 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %51 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %50, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %137

52:                                               ; preds = %25
  %53 = load %23*, %23** %3, align 8
  %54 = getelementptr inbounds %23, %23* %53, i32 0, i32 4
  %55 = getelementptr inbounds %4, %4* %54, i32 0, i32 2
  %56 = bitcast %7* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @121, i32 0, i32 0), i8** %5, i64* %6)
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %61

60:                                               ; preds = %52
  store i32 1, i32* %10, align 4
  br label %137

61:                                               ; preds = %52
  %62 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %61
  %65 = load %99*, %99** %9, align 8
  %66 = bitcast %99* %65 to %52**
  %67 = load %52*, %52** %66, align 8
  %68 = getelementptr inbounds %52, %52* %67, i32 0, i32 24
  %69 = load i16, i16* %68, align 8
  %70 = lshr i16 %69, 7
  %71 = and i16 %70, 1
  %72 = zext i16 %71 to i32
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %64
  %75 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %76 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %75, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @122, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %137

77:                                               ; preds = %64, %61
  %78 = load %99*, %99** %9, align 8
  %79 = bitcast %99* %78 to %52**
  %80 = load %52*, %52** %79, align 8
  %81 = getelementptr inbounds %52, %52* %80, i32 0, i32 24
  %82 = load i16, i16* %81, align 8
  %83 = lshr i16 %82, 5
  %84 = and i16 %83, 1
  %85 = zext i16 %84 to i32
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %77
  %88 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %89 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %88, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @123, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %137

90:                                               ; preds = %77
  %91 = load %99*, %99** %9, align 8
  %92 = bitcast %99* %91 to %52**
  %93 = load %52*, %52** %92, align 8
  %94 = getelementptr inbounds %52, %52* %93, i32 0, i32 24
  %95 = load i16, i16* %94, align 8
  %96 = lshr i16 %95, 6
  %97 = and i16 %96, 1
  %98 = zext i16 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %90
  %101 = load %99*, %99** %9, align 8
  %102 = bitcast %99* %101 to %52**
  %103 = load %52*, %52** %102, align 8
  %104 = load i8*, i8** %5, align 8
  %105 = call %21* @454(%52* %103, i32 2, i8* %104, i32 0)
  store %21* %105, %21** %7, align 8
  br label %112

106:                                              ; preds = %90
  %107 = load %99*, %99** %9, align 8
  %108 = bitcast %99* %107 to %52**
  %109 = load %52*, %52** %108, align 8
  %110 = load i8*, i8** %5, align 8
  %111 = call %21* @454(%52* %109, i32 1, i8* %110, i32 0)
  store %21* %111, %21** %7, align 8
  br label %112

112:                                              ; preds = %106, %100
  %113 = load %21*, %21** %7, align 8
  %114 = icmp ne %21* %113, null
  br i1 %114, label %115, label %129

115:                                              ; preds = %112
  br label %116

116:                                              ; preds = %115
  %117 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %117) #13
  %118 = load %4*, %4** %4, align 8
  store %4* %118, %4** %11, align 8
  %119 = load %21*, %21** %7, align 8
  %120 = load %4*, %4** %11, align 8
  %121 = getelementptr inbounds %4, %4* %120, i32 0, i32 0
  %122 = bitcast %5* %121 to %21**
  store %21* %119, %21** %122, align 8
  %123 = load %4*, %4** %11, align 8
  %124 = getelementptr inbounds %4, %4* %123, i32 0, i32 1
  %125 = bitcast %6* %124 to i32*
  store i32 1032, i32* %125, align 8
  %126 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  br label %127

127:                                              ; preds = %116
  br label %128

128:                                              ; preds = %127
  br label %136

129:                                              ; preds = %112
  br label %130

130:                                              ; preds = %129
  %131 = load %4*, %4** %4, align 8
  %132 = getelementptr inbounds %4, %4* %131, i32 0, i32 1
  %133 = bitcast %6* %132 to i32*
  store i32 1, i32* %133, align 8
  br label %134

134:                                              ; preds = %130
  br label %135

135:                                              ; preds = %134
  store i32 1, i32* %10, align 4
  br label %137

136:                                              ; preds = %128
  store i32 0, i32* %10, align 4
  br label %137

137:                                              ; preds = %136, %135, %87, %74, %60, %49
  %138 = bitcast %99** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #13
  %139 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #13
  %140 = bitcast %21** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #13
  %141 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  %142 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #13
  %143 = load i32, i32* %10, align 4
  switch i32 %143, label %145 [
    i32 0, label %144
    i32 1, label %144
  ]

144:                                              ; preds = %137, %137
  ret void

145:                                              ; preds = %137
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_compressFiles(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %4*, align 8
  %9 = alloca %99*, align 8
  %10 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %11 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #13
  %13 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  %17 = call zeroext i8 @444(%4* %16)
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %23*, %23** %3, align 8
  %22 = getelementptr inbounds %23, %23* %21, i32 0, i32 4
  br label %24

23:                                               ; preds = %2
  br label %24

24:                                               ; preds = %23, %20
  %25 = phi %4* [ %22, %20 ], [ null, %23 ]
  store %4* %25, %4** %8, align 8
  %26 = bitcast %99** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = load %4*, %4** %8, align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 0
  %29 = bitcast %5* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = bitcast %21* %30 to i8*
  %32 = load %4*, %4** %8, align 8
  %33 = getelementptr inbounds %4, %4* %32, i32 0, i32 0
  %34 = bitcast %5* %33 to %21**
  %35 = load %21*, %21** %34, align 8
  %36 = getelementptr inbounds %21, %21* %35, i32 0, i32 3
  %37 = load %22*, %22** %36, align 8
  %38 = getelementptr inbounds %22, %22* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = sub i64 0, %40
  %42 = getelementptr inbounds i8, i8* %31, i64 %41
  %43 = bitcast i8* %42 to %99*
  store %99* %43, %99** %9, align 8
  %44 = load %99*, %99** %9, align 8
  %45 = bitcast %99* %44 to %52**
  %46 = load %52*, %52** %45, align 8
  %47 = icmp ne %52* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %24
  %49 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %50 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %49, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %173

51:                                               ; preds = %24
  %52 = load %23*, %23** %3, align 8
  %53 = getelementptr inbounds %23, %23* %52, i32 0, i32 4
  %54 = getelementptr inbounds %4, %4* %53, i32 0, i32 2
  %55 = bitcast %7* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0), i64* %7)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  store i32 1, i32* %10, align 4
  br label %173

60:                                               ; preds = %51
  %61 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = load %99*, %99** %9, align 8
  %65 = bitcast %99* %64 to %52**
  %66 = load %52*, %52** %65, align 8
  %67 = getelementptr inbounds %52, %52* %66, i32 0, i32 24
  %68 = load i16, i16* %67, align 8
  %69 = lshr i16 %68, 7
  %70 = and i16 %69, 1
  %71 = zext i16 %70 to i32
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %63
  %74 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %75 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %74, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @124, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %173

76:                                               ; preds = %63, %60
  %77 = load i64, i64* %7, align 8
  switch i64 %77, label %92 [
    i64 4096, label %78
    i64 8192, label %85
  ]

78:                                               ; preds = %76
  %79 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %83 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %82, i64 0, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @125, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %173

84:                                               ; preds = %78
  store i32 4096, i32* %6, align 4
  br label %95

85:                                               ; preds = %76
  %86 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %90 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %89, i64 0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @126, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %173

91:                                               ; preds = %85
  store i32 8192, i32* %6, align 4
  br label %95

92:                                               ; preds = %76
  %93 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %94 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %93, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @94, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %173

95:                                               ; preds = %91, %84
  %96 = load %99*, %99** %9, align 8
  %97 = bitcast %99* %96 to %52**
  %98 = load %52*, %52** %97, align 8
  %99 = getelementptr inbounds %52, %52* %98, i32 0, i32 24
  %100 = load i16, i16* %99, align 8
  %101 = lshr i16 %100, 6
  %102 = and i16 %101, 1
  %103 = zext i16 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %95
  %106 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %107 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %106, i64 0, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @127, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %173

108:                                              ; preds = %95
  %109 = load %99*, %99** %9, align 8
  %110 = bitcast %99* %109 to %52**
  %111 = load %52*, %52** %110, align 8
  %112 = getelementptr inbounds %52, %52* %111, i32 0, i32 9
  %113 = call i32 @457(%8* %112)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %108
  %116 = load i32, i32* %6, align 4
  %117 = icmp eq i32 %116, 1048576
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %120 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %119, i64 0, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @128, i32 0, i32 0))
  br label %124

121:                                              ; preds = %115
  %122 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %123 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %122, i64 0, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @129, i32 0, i32 0))
  br label %124

124:                                              ; preds = %121, %118
  store i32 1, i32* %10, align 4
  br label %173

125:                                              ; preds = %108
  %126 = load %99*, %99** %9, align 8
  %127 = bitcast %99* %126 to %52**
  %128 = load %52*, %52** %127, align 8
  %129 = getelementptr inbounds %52, %52* %128, i32 0, i32 24
  %130 = load i16, i16* %129, align 8
  %131 = lshr i16 %130, 8
  %132 = and i16 %131, 1
  %133 = zext i16 %132 to i32
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %148

135:                                              ; preds = %125
  %136 = load %99*, %99** %9, align 8
  %137 = bitcast %99* %136 to %52**
  %138 = call i32 @phar_copy_on_write(%52** %137)
  %139 = icmp eq i32 -1, %138
  br i1 %139, label %140, label %148

140:                                              ; preds = %135
  %141 = load %3*, %3** @3, align 8
  %142 = load %99*, %99** %9, align 8
  %143 = bitcast %99* %142 to %52**
  %144 = load %52*, %52** %143, align 8
  %145 = getelementptr inbounds %52, %52* %144, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %141, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %146)
  store i32 1, i32* %10, align 4
  br label %173

148:                                              ; preds = %135, %125
  %149 = load %99*, %99** %9, align 8
  %150 = bitcast %99* %149 to %52**
  %151 = load %52*, %52** %150, align 8
  %152 = getelementptr inbounds %52, %52* %151, i32 0, i32 9
  %153 = load i32, i32* %6, align 4
  call void @458(%8* %152, i32 %153)
  %154 = load %99*, %99** %9, align 8
  %155 = bitcast %99* %154 to %52**
  %156 = load %52*, %52** %155, align 8
  %157 = getelementptr inbounds %52, %52* %156, i32 0, i32 24
  %158 = load i16, i16* %157, align 8
  %159 = and i16 %158, -3
  %160 = or i16 %159, 2
  store i16 %160, i16* %157, align 8
  %161 = load %99*, %99** %9, align 8
  %162 = bitcast %99* %161 to %52**
  %163 = load %52*, %52** %162, align 8
  %164 = call i32 @phar_flush(%52* %163, i8* null, i64 0, i32 0, i8** %5)
  %165 = load i8*, i8** %5, align 8
  %166 = icmp ne i8* %165, null
  br i1 %166, label %167, label %172

167:                                              ; preds = %148
  %168 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %169 = load i8*, i8** %5, align 8
  %170 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %168, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %169)
  %171 = load i8*, i8** %5, align 8
  call void @_efree(i8* %171)
  br label %172

172:                                              ; preds = %167, %148
  store i32 0, i32* %10, align 4
  br label %173

173:                                              ; preds = %172, %140, %124, %105, %92, %88, %81, %73, %59, %48
  %174 = bitcast %99** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %174) #13
  %175 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %175) #13
  %176 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #13
  %177 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %177) #13
  %178 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178) #13
  %179 = load i32, i32* %10, align 4
  switch i32 %179, label %181 [
    i32 0, label %180
    i32 1, label %180
  ]

180:                                              ; preds = %173, %173
  ret void

181:                                              ; preds = %173
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @457(%8* %0) #0 {
  %2 = alloca %8*, align 8
  %3 = alloca i32, align 4
  store %8* %0, %8** %2, align 8
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #13
  store i32 1, i32* %3, align 4
  %5 = load %8*, %8** %2, align 8
  %6 = bitcast i32* %3 to i8*
  call void @zend_hash_apply_with_argument(%8* %5, i32 (%4*, i8*)* @475, i8* %6)
  %7 = load i32, i32* %3, align 4
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #13
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal void @458(%8* %0, i32 %1) #0 {
  %3 = alloca %8*, align 8
  %4 = alloca i32, align 4
  store %8* %0, %8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %8*, %8** %3, align 8
  %6 = bitcast i32* %4 to i8*
  call void @zend_hash_apply_with_argument(%8* %5, i32 (%4*, i8*)* @476, i8* %6)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_decompressFiles(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %99*, align 8
  %8 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %6, align 8
  %22 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %6, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %6, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %7, align 8
  %40 = load %99*, %99** %7, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %169

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 1)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %47
  br label %68

61:                                               ; preds = %47
  %62 = load %23*, %23** %3, align 8
  %63 = getelementptr inbounds %23, %23* %62, i32 0, i32 4
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = bitcast %7* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %68

68:                                               ; preds = %61, %60
  %69 = phi i32 [ 0, %60 ], [ %67, %61 ]
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 1, i32* %8, align 4
  br label %169

72:                                               ; preds = %68
  %73 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %72
  %76 = load %99*, %99** %7, align 8
  %77 = bitcast %99* %76 to %52**
  %78 = load %52*, %52** %77, align 8
  %79 = getelementptr inbounds %52, %52* %78, i32 0, i32 24
  %80 = load i16, i16* %79, align 8
  %81 = lshr i16 %80, 7
  %82 = and i16 %81, 1
  %83 = zext i16 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %75
  %86 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %87 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %86, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @124, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %169

88:                                               ; preds = %75, %72
  %89 = load %99*, %99** %7, align 8
  %90 = bitcast %99* %89 to %52**
  %91 = load %52*, %52** %90, align 8
  %92 = getelementptr inbounds %52, %52* %91, i32 0, i32 9
  %93 = call i32 @457(%8* %92)
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %97 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %96, i64 0, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @130, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %169

98:                                               ; preds = %88
  %99 = load %99*, %99** %7, align 8
  %100 = bitcast %99* %99 to %52**
  %101 = load %52*, %52** %100, align 8
  %102 = getelementptr inbounds %52, %52* %101, i32 0, i32 24
  %103 = load i16, i16* %102, align 8
  %104 = lshr i16 %103, 6
  %105 = and i16 %104, 1
  %106 = zext i16 %105 to i32
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %115

108:                                              ; preds = %98
  br label %109

109:                                              ; preds = %108
  %110 = load %4*, %4** %4, align 8
  %111 = getelementptr inbounds %4, %4* %110, i32 0, i32 1
  %112 = bitcast %6* %111 to i32*
  store i32 3, i32* %112, align 8
  br label %113

113:                                              ; preds = %109
  br label %114

114:                                              ; preds = %113
  store i32 1, i32* %8, align 4
  br label %169

115:                                              ; preds = %98
  %116 = load %99*, %99** %7, align 8
  %117 = bitcast %99* %116 to %52**
  %118 = load %52*, %52** %117, align 8
  %119 = getelementptr inbounds %52, %52* %118, i32 0, i32 24
  %120 = load i16, i16* %119, align 8
  %121 = lshr i16 %120, 8
  %122 = and i16 %121, 1
  %123 = zext i16 %122 to i32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %138

125:                                              ; preds = %115
  %126 = load %99*, %99** %7, align 8
  %127 = bitcast %99* %126 to %52**
  %128 = call i32 @phar_copy_on_write(%52** %127)
  %129 = icmp eq i32 -1, %128
  br i1 %129, label %130, label %138

130:                                              ; preds = %125
  %131 = load %3*, %3** @3, align 8
  %132 = load %99*, %99** %7, align 8
  %133 = bitcast %99* %132 to %52**
  %134 = load %52*, %52** %133, align 8
  %135 = getelementptr inbounds %52, %52* %134, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %131, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %136)
  store i32 1, i32* %8, align 4
  br label %169

138:                                              ; preds = %125, %115
  %139 = load %99*, %99** %7, align 8
  %140 = bitcast %99* %139 to %52**
  %141 = load %52*, %52** %140, align 8
  %142 = getelementptr inbounds %52, %52* %141, i32 0, i32 9
  call void @458(%8* %142, i32 0)
  br label %143

143:                                              ; preds = %138
  %144 = load %99*, %99** %7, align 8
  %145 = bitcast %99* %144 to %52**
  %146 = load %52*, %52** %145, align 8
  %147 = getelementptr inbounds %52, %52* %146, i32 0, i32 24
  %148 = load i16, i16* %147, align 8
  %149 = and i16 %148, -3
  %150 = or i16 %149, 2
  store i16 %150, i16* %147, align 8
  %151 = load %99*, %99** %7, align 8
  %152 = bitcast %99* %151 to %52**
  %153 = load %52*, %52** %152, align 8
  %154 = call i32 @phar_flush(%52* %153, i8* null, i64 0, i32 0, i8** %5)
  %155 = load i8*, i8** %5, align 8
  %156 = icmp ne i8* %155, null
  br i1 %156, label %157, label %162

157:                                              ; preds = %143
  %158 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %159 = load i8*, i8** %5, align 8
  %160 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %158, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %159)
  %161 = load i8*, i8** %5, align 8
  call void @_efree(i8* %161)
  br label %162

162:                                              ; preds = %157, %143
  br label %163

163:                                              ; preds = %162
  %164 = load %4*, %4** %4, align 8
  %165 = getelementptr inbounds %4, %4* %164, i32 0, i32 1
  %166 = bitcast %6* %165 to i32*
  store i32 3, i32* %166, align 8
  br label %167

167:                                              ; preds = %163
  br label %168

168:                                              ; preds = %167
  store i32 1, i32* %8, align 4
  br label %169

169:                                              ; preds = %168, %130, %114, %95, %85, %71, %44
  %170 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #13
  %171 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171) #13
  %172 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %172) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_copy(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %93*, align 8
  %12 = alloca %93, align 8
  %13 = alloca %93*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %4*, align 8
  %16 = alloca %99*, align 8
  %17 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast %93** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %93* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* %25) #13
  %26 = bitcast %93* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 168, i1 false)
  %27 = bitcast %93** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  store i32 0, i32* %14, align 4
  %29 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = load %23*, %23** %3, align 8
  %31 = getelementptr inbounds %23, %23* %30, i32 0, i32 4
  %32 = call zeroext i8 @444(%4* %31)
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 8
  br i1 %34, label %35, label %38

35:                                               ; preds = %2
  %36 = load %23*, %23** %3, align 8
  %37 = getelementptr inbounds %23, %23* %36, i32 0, i32 4
  br label %39

38:                                               ; preds = %2
  br label %39

39:                                               ; preds = %38, %35
  %40 = phi %4* [ %37, %35 ], [ null, %38 ]
  store %4* %40, %4** %15, align 8
  %41 = bitcast %99** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = load %4*, %4** %15, align 8
  %43 = getelementptr inbounds %4, %4* %42, i32 0, i32 0
  %44 = bitcast %5* %43 to %21**
  %45 = load %21*, %21** %44, align 8
  %46 = bitcast %21* %45 to i8*
  %47 = load %4*, %4** %15, align 8
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 0
  %49 = bitcast %5* %48 to %21**
  %50 = load %21*, %21** %49, align 8
  %51 = getelementptr inbounds %21, %21* %50, i32 0, i32 3
  %52 = load %22*, %22** %51, align 8
  %53 = getelementptr inbounds %22, %22* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = sub i64 0, %55
  %57 = getelementptr inbounds i8, i8* %46, i64 %56
  %58 = bitcast i8* %57 to %99*
  store %99* %58, %99** %16, align 8
  %59 = load %99*, %99** %16, align 8
  %60 = bitcast %99* %59 to %52**
  %61 = load %52*, %52** %60, align 8
  %62 = icmp ne %52* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %39
  %64 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %65 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %64, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %17, align 4
  br label %388

66:                                               ; preds = %39
  %67 = load %23*, %23** %3, align 8
  %68 = getelementptr inbounds %23, %23* %67, i32 0, i32 4
  %69 = getelementptr inbounds %4, %4* %68, i32 0, i32 2
  %70 = bitcast %7* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0), i8** %5, i64* %9, i8** %6, i64* %10)
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  store i32 1, i32* %17, align 4
  br label %388

75:                                               ; preds = %66
  %76 = load i64, i64* %10, align 8
  %77 = icmp ugt i64 %76, 2147483647
  %78 = xor i1 %77, true
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = call i64 @llvm.expect.i64(i64 %81, i64 0)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %75
  br label %85

85:                                               ; preds = %84
  %86 = load %4*, %4** %4, align 8
  %87 = getelementptr inbounds %4, %4* %86, i32 0, i32 1
  %88 = bitcast %6* %87 to i32*
  store i32 2, i32* %88, align 8
  br label %89

89:                                               ; preds = %85
  br label %90

90:                                               ; preds = %89
  store i32 1, i32* %17, align 4
  br label %388

91:                                               ; preds = %75
  %92 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %115

94:                                               ; preds = %91
  %95 = load %99*, %99** %16, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 24
  %99 = load i16, i16* %98, align 8
  %100 = lshr i16 %99, 7
  %101 = and i16 %100, 1
  %102 = zext i16 %101 to i32
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %94
  %105 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %106 = load i8*, i8** %5, align 8
  %107 = load i8*, i8** %6, align 8
  %108 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %105, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @131, i32 0, i32 0), i8* %106, i8* %107)
  br label %109

109:                                              ; preds = %104
  %110 = load %4*, %4** %4, align 8
  %111 = getelementptr inbounds %4, %4* %110, i32 0, i32 1
  %112 = bitcast %6* %111 to i32*
  store i32 2, i32* %112, align 8
  br label %113

113:                                              ; preds = %109
  br label %114

114:                                              ; preds = %113
  store i32 1, i32* %17, align 4
  br label %388

115:                                              ; preds = %94, %91
  %116 = load i64, i64* %9, align 8
  %117 = icmp uge i64 %116, 5
  br i1 %117, label %118, label %138

118:                                              ; preds = %115
  %119 = load i8*, i8** %5, align 8
  %120 = call i32 @memcmp(i8* %119, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %118
  %123 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %124 = load i8*, i8** %5, align 8
  %125 = load i8*, i8** %6, align 8
  %126 = load %99*, %99** %16, align 8
  %127 = bitcast %99* %126 to %52**
  %128 = load %52*, %52** %127, align 8
  %129 = getelementptr inbounds %52, %52* %128, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %123, i64 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @133, i32 0, i32 0), i8* %124, i8* %125, i8* %130)
  br label %132

132:                                              ; preds = %122
  %133 = load %4*, %4** %4, align 8
  %134 = getelementptr inbounds %4, %4* %133, i32 0, i32 1
  %135 = bitcast %6* %134 to i32*
  store i32 2, i32* %135, align 8
  br label %136

136:                                              ; preds = %132
  br label %137

137:                                              ; preds = %136
  store i32 1, i32* %17, align 4
  br label %388

138:                                              ; preds = %118, %115
  %139 = load i64, i64* %10, align 8
  %140 = icmp uge i64 %139, 5
  br i1 %140, label %141, label %161

141:                                              ; preds = %138
  %142 = load i8*, i8** %6, align 8
  %143 = call i32 @memcmp(i8* %142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %141
  %146 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %147 = load i8*, i8** %5, align 8
  %148 = load i8*, i8** %6, align 8
  %149 = load %99*, %99** %16, align 8
  %150 = bitcast %99* %149 to %52**
  %151 = load %52*, %52** %150, align 8
  %152 = getelementptr inbounds %52, %52* %151, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %146, i64 0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @134, i32 0, i32 0), i8* %147, i8* %148, i8* %153)
  br label %155

155:                                              ; preds = %145
  %156 = load %4*, %4** %4, align 8
  %157 = getelementptr inbounds %4, %4* %156, i32 0, i32 1
  %158 = bitcast %6* %157 to i32*
  store i32 2, i32* %158, align 8
  br label %159

159:                                              ; preds = %155
  br label %160

160:                                              ; preds = %159
  store i32 1, i32* %17, align 4
  br label %388

161:                                              ; preds = %141, %138
  %162 = load %99*, %99** %16, align 8
  %163 = bitcast %99* %162 to %52**
  %164 = load %52*, %52** %163, align 8
  %165 = getelementptr inbounds %52, %52* %164, i32 0, i32 9
  %166 = load i8*, i8** %5, align 8
  %167 = load i64, i64* %9, align 8
  %168 = trunc i64 %167 to i32
  %169 = zext i32 %168 to i64
  %170 = call zeroext i8 @zend_hash_str_exists(%8* %165, i8* %166, i64 %169)
  %171 = icmp ne i8 %170, 0
  br i1 %171, label %172, label %192

172:                                              ; preds = %161
  %173 = load %99*, %99** %16, align 8
  %174 = bitcast %99* %173 to %52**
  %175 = load %52*, %52** %174, align 8
  %176 = getelementptr inbounds %52, %52* %175, i32 0, i32 9
  %177 = load i8*, i8** %5, align 8
  %178 = load i64, i64* %9, align 8
  %179 = trunc i64 %178 to i32
  %180 = zext i32 %179 to i64
  %181 = call i8* @442(%8* %176, i8* %177, i64 %180)
  %182 = bitcast i8* %181 to %93*
  store %93* %182, %93** %11, align 8
  %183 = icmp eq %93* null, %182
  br i1 %183, label %192, label %184

184:                                              ; preds = %172
  %185 = load %93*, %93** %11, align 8
  %186 = getelementptr inbounds %93, %93* %185, i32 0, i32 24
  %187 = load i16, i16* %186, align 2
  %188 = lshr i16 %187, 2
  %189 = and i16 %188, 1
  %190 = zext i16 %189 to i32
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %192, label %208

192:                                              ; preds = %184, %172, %161
  %193 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %194 = load i8*, i8** %5, align 8
  %195 = load i8*, i8** %6, align 8
  %196 = load %99*, %99** %16, align 8
  %197 = bitcast %99* %196 to %52**
  %198 = load %52*, %52** %197, align 8
  %199 = getelementptr inbounds %52, %52* %198, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %193, i64 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @135, i32 0, i32 0), i8* %194, i8* %195, i8* %200)
  br label %202

202:                                              ; preds = %192
  %203 = load %4*, %4** %4, align 8
  %204 = getelementptr inbounds %4, %4* %203, i32 0, i32 1
  %205 = bitcast %6* %204 to i32*
  store i32 2, i32* %205, align 8
  br label %206

206:                                              ; preds = %202
  br label %207

207:                                              ; preds = %206
  store i32 1, i32* %17, align 4
  br label %388

208:                                              ; preds = %184
  %209 = load %99*, %99** %16, align 8
  %210 = bitcast %99* %209 to %52**
  %211 = load %52*, %52** %210, align 8
  %212 = getelementptr inbounds %52, %52* %211, i32 0, i32 9
  %213 = load i8*, i8** %6, align 8
  %214 = load i64, i64* %10, align 8
  %215 = trunc i64 %214 to i32
  %216 = zext i32 %215 to i64
  %217 = call zeroext i8 @zend_hash_str_exists(%8* %212, i8* %213, i64 %216)
  %218 = icmp ne i8 %217, 0
  br i1 %218, label %219, label %256

219:                                              ; preds = %208
  %220 = load %99*, %99** %16, align 8
  %221 = bitcast %99* %220 to %52**
  %222 = load %52*, %52** %221, align 8
  %223 = getelementptr inbounds %52, %52* %222, i32 0, i32 9
  %224 = load i8*, i8** %6, align 8
  %225 = load i64, i64* %10, align 8
  %226 = trunc i64 %225 to i32
  %227 = zext i32 %226 to i64
  %228 = call i8* @442(%8* %223, i8* %224, i64 %227)
  %229 = bitcast i8* %228 to %93*
  store %93* %229, %93** %13, align 8
  %230 = icmp ne %93* null, %229
  br i1 %230, label %239, label %231

231:                                              ; preds = %219
  %232 = load %93*, %93** %13, align 8
  %233 = getelementptr inbounds %93, %93* %232, i32 0, i32 24
  %234 = load i16, i16* %233, align 2
  %235 = lshr i16 %234, 2
  %236 = and i16 %235, 1
  %237 = zext i16 %236 to i32
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %255, label %239

239:                                              ; preds = %231, %219
  %240 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %241 = load i8*, i8** %5, align 8
  %242 = load i8*, i8** %6, align 8
  %243 = load %99*, %99** %16, align 8
  %244 = bitcast %99* %243 to %52**
  %245 = load %52*, %52** %244, align 8
  %246 = getelementptr inbounds %52, %52* %245, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %240, i64 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @136, i32 0, i32 0), i8* %241, i8* %242, i8* %247)
  br label %249

249:                                              ; preds = %239
  %250 = load %4*, %4** %4, align 8
  %251 = getelementptr inbounds %4, %4* %250, i32 0, i32 1
  %252 = bitcast %6* %251 to i32*
  store i32 2, i32* %252, align 8
  br label %253

253:                                              ; preds = %249
  br label %254

254:                                              ; preds = %253
  store i32 1, i32* %17, align 4
  br label %388

255:                                              ; preds = %231
  br label %256

256:                                              ; preds = %255, %208
  %257 = load i64, i64* %10, align 8
  %258 = trunc i64 %257 to i32
  store i32 %258, i32* %14, align 4
  %259 = call i32 @phar_path_check(i8** %6, i32* %14, i8** %8)
  %260 = icmp ugt i32 %259, 1
  br i1 %260, label %261, label %278

261:                                              ; preds = %256
  %262 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %263 = load i8*, i8** %6, align 8
  %264 = load i8*, i8** %8, align 8
  %265 = load i8*, i8** %5, align 8
  %266 = load %99*, %99** %16, align 8
  %267 = bitcast %99* %266 to %52**
  %268 = load %52*, %52** %267, align 8
  %269 = getelementptr inbounds %52, %52* %268, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %262, i64 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @137, i32 0, i32 0), i8* %263, i8* %264, i8* %265, i8* %270)
  br label %272

272:                                              ; preds = %261
  %273 = load %4*, %4** %4, align 8
  %274 = getelementptr inbounds %4, %4* %273, i32 0, i32 1
  %275 = bitcast %6* %274 to i32*
  store i32 2, i32* %275, align 8
  br label %276

276:                                              ; preds = %272
  br label %277

277:                                              ; preds = %276
  store i32 1, i32* %17, align 4
  br label %388

278:                                              ; preds = %256
  %279 = load i32, i32* %14, align 4
  %280 = sext i32 %279 to i64
  store i64 %280, i64* %10, align 8
  %281 = load %99*, %99** %16, align 8
  %282 = bitcast %99* %281 to %52**
  %283 = load %52*, %52** %282, align 8
  %284 = getelementptr inbounds %52, %52* %283, i32 0, i32 24
  %285 = load i16, i16* %284, align 8
  %286 = lshr i16 %285, 8
  %287 = and i16 %286, 1
  %288 = zext i16 %287 to i32
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %314

290:                                              ; preds = %278
  %291 = load %99*, %99** %16, align 8
  %292 = bitcast %99* %291 to %52**
  %293 = call i32 @phar_copy_on_write(%52** %292)
  %294 = icmp eq i32 -1, %293
  br i1 %294, label %295, label %303

295:                                              ; preds = %290
  %296 = load %3*, %3** @3, align 8
  %297 = load %99*, %99** %16, align 8
  %298 = bitcast %99* %297 to %52**
  %299 = load %52*, %52** %298, align 8
  %300 = getelementptr inbounds %52, %52* %299, i32 0, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %296, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %301)
  store i32 1, i32* %17, align 4
  br label %388

303:                                              ; preds = %290
  %304 = load %99*, %99** %16, align 8
  %305 = bitcast %99* %304 to %52**
  %306 = load %52*, %52** %305, align 8
  %307 = getelementptr inbounds %52, %52* %306, i32 0, i32 9
  %308 = load i8*, i8** %5, align 8
  %309 = load i64, i64* %9, align 8
  %310 = trunc i64 %309 to i32
  %311 = zext i32 %310 to i64
  %312 = call i8* @442(%8* %307, i8* %308, i64 %311)
  %313 = bitcast i8* %312 to %93*
  store %93* %313, %93** %11, align 8
  br label %314

314:                                              ; preds = %303, %278
  %315 = bitcast %93* %12 to i8*
  %316 = load %93*, %93** %11, align 8
  %317 = bitcast %93* %316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %317, i64 168, i1 false)
  %318 = getelementptr inbounds %93, %93* %12, i32 0, i32 6
  %319 = call zeroext i8 @444(%4* %318)
  %320 = zext i8 %319 to i32
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %322, label %326

322:                                              ; preds = %314
  %323 = getelementptr inbounds %93, %93* %12, i32 0, i32 6
  call void @459(%4* %323)
  %324 = getelementptr inbounds %93, %93* %12, i32 0, i32 19
  %325 = getelementptr inbounds %88, %88* %324, i32 0, i32 0
  store %0* null, %0** %325, align 8
  br label %326

326:                                              ; preds = %322, %314
  %327 = load i8*, i8** %6, align 8
  %328 = load i64, i64* %10, align 8
  %329 = call noalias i8* @_estrndup(i8* %327, i64 %328)
  %330 = getelementptr inbounds %93, %93* %12, i32 0, i32 9
  store i8* %329, i8** %330, align 8
  %331 = load i64, i64* %10, align 8
  %332 = trunc i64 %331 to i32
  %333 = getelementptr inbounds %93, %93* %12, i32 0, i32 8
  store i32 %332, i32* %333, align 4
  %334 = getelementptr inbounds %93, %93* %12, i32 0, i32 16
  store i32 0, i32* %334, align 8
  %335 = load %93*, %93** %11, align 8
  %336 = getelementptr inbounds %93, %93* %335, i32 0, i32 10
  %337 = load i32, i32* %336, align 8
  %338 = icmp ne i32 %337, 0
  br i1 %338, label %339, label %354

339:                                              ; preds = %326
  %340 = load %93*, %93** %11, align 8
  %341 = call i32 @phar_copy_entry_fp(%93* %340, %93* %12, i8** %7)
  %342 = icmp eq i32 -1, %341
  br i1 %342, label %343, label %353

343:                                              ; preds = %339
  %344 = getelementptr inbounds %93, %93* %12, i32 0, i32 9
  %345 = load i8*, i8** %344, align 8
  call void @_efree(i8* %345)
  %346 = getelementptr inbounds %93, %93* %12, i32 0, i32 14
  %347 = load %34*, %34** %346, align 8
  %348 = call i32 @_php_stream_free(%34* %347, i32 3)
  %349 = load %3*, %3** @3, align 8
  %350 = load i8*, i8** %7, align 8
  %351 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %349, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %350)
  %352 = load i8*, i8** %7, align 8
  call void @_efree(i8* %352)
  store i32 1, i32* %17, align 4
  br label %388

353:                                              ; preds = %339
  br label %354

354:                                              ; preds = %353, %326
  %355 = load %93*, %93** %11, align 8
  %356 = getelementptr inbounds %93, %93* %355, i32 0, i32 18
  %357 = load %52*, %52** %356, align 8
  %358 = getelementptr inbounds %52, %52* %357, i32 0, i32 9
  %359 = load i8*, i8** %6, align 8
  %360 = load i64, i64* %10, align 8
  %361 = bitcast %93* %12 to i8*
  %362 = call i8* @460(%8* %358, i8* %359, i64 %360, i8* %361, i64 168)
  %363 = load %99*, %99** %16, align 8
  %364 = bitcast %99* %363 to %52**
  %365 = load %52*, %52** %364, align 8
  %366 = getelementptr inbounds %52, %52* %365, i32 0, i32 24
  %367 = load i16, i16* %366, align 8
  %368 = and i16 %367, -3
  %369 = or i16 %368, 2
  store i16 %369, i16* %366, align 8
  %370 = load %99*, %99** %16, align 8
  %371 = bitcast %99* %370 to %52**
  %372 = load %52*, %52** %371, align 8
  %373 = call i32 @phar_flush(%52* %372, i8* null, i64 0, i32 0, i8** %7)
  %374 = load i8*, i8** %7, align 8
  %375 = icmp ne i8* %374, null
  br i1 %375, label %376, label %381

376:                                              ; preds = %354
  %377 = load %3*, %3** @3, align 8
  %378 = load i8*, i8** %7, align 8
  %379 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %377, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %378)
  %380 = load i8*, i8** %7, align 8
  call void @_efree(i8* %380)
  br label %381

381:                                              ; preds = %376, %354
  br label %382

382:                                              ; preds = %381
  %383 = load %4*, %4** %4, align 8
  %384 = getelementptr inbounds %4, %4* %383, i32 0, i32 1
  %385 = bitcast %6* %384 to i32*
  store i32 3, i32* %385, align 8
  br label %386

386:                                              ; preds = %382
  br label %387

387:                                              ; preds = %386
  store i32 1, i32* %17, align 4
  br label %388

388:                                              ; preds = %387, %343, %295, %277, %254, %207, %160, %137, %114, %90, %74, %63
  %389 = bitcast %99** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %389) #13
  %390 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %390) #13
  %391 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %391) #13
  %392 = bitcast %93** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %392) #13
  %393 = bitcast %93* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 168, i8* %393) #13
  %394 = bitcast %93** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394) #13
  %395 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %395) #13
  %396 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %396) #13
  %397 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %397) #13
  %398 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %398) #13
  %399 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %399) #13
  %400 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #13
  ret void
}

declare dso_local i32 @phar_path_check(i8**, i32*, i8**) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @459(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  %3 = load %4*, %4** %2, align 8
  %4 = getelementptr inbounds %4, %4* %3, i32 0, i32 1
  %5 = bitcast %6* %4 to %95*
  %6 = getelementptr inbounds %95, %95* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %1
  %12 = load %4*, %4** %2, align 8
  %13 = getelementptr inbounds %4, %4* %12, i32 0, i32 1
  %14 = bitcast %6* %13 to %95*
  %15 = getelementptr inbounds %95, %95* %14, i32 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = and i32 %17, 16
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %11, %1
  %21 = load %4*, %4** %2, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 1
  %23 = bitcast %6* %22 to %95*
  %24 = getelementptr inbounds %95, %95* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 16
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = load %4*, %4** %2, align 8
  call void @_zval_copy_ctor_func(%4* %30)
  br label %34

31:                                               ; preds = %20
  %32 = load %4*, %4** %2, align 8
  %33 = call i32 @445(%4* %32)
  br label %34

34:                                               ; preds = %31, %29
  br label %35

35:                                               ; preds = %34, %11
  ret void
}

declare dso_local i32 @phar_copy_entry_fp(%93*, %93*, i8**) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @460(%8* %0, i8* %1, i64 %2, i8* %3, i64 %4) #4 {
  %6 = alloca i8*, align 8
  %7 = alloca %8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %4, align 8
  %13 = alloca %4*, align 8
  %14 = alloca i32, align 4
  store %8* %0, %8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i64 %2, i64* %9, align 8
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  %15 = bitcast %4* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #13
  %16 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  br label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %4, %4* %12, i32 0, i32 0
  %19 = bitcast %5* %18 to i8**
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds %4, %4* %12, i32 0, i32 1
  %21 = bitcast %6* %20 to i32*
  store i32 17, i32* %21, align 8
  br label %22

22:                                               ; preds = %17
  br label %23

23:                                               ; preds = %22
  %24 = load %8*, %8** %7, align 8
  %25 = load i8*, i8** %8, align 8
  %26 = load i64, i64* %9, align 8
  %27 = call %4* @_zend_hash_str_add(%8* %24, i8* %25, i64 %26, %4* %12)
  store %4* %27, %4** %13, align 8
  %28 = icmp ne %4* %27, null
  br i1 %28, label %29, label %57

29:                                               ; preds = %23
  %30 = load %8*, %8** %7, align 8
  %31 = getelementptr inbounds %8, %8* %30, i32 0, i32 1
  %32 = bitcast %9* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = load i64, i64* %11, align 8
  %38 = call noalias i8* @__zend_malloc(i64 %37) #15
  br label %42

39:                                               ; preds = %29
  %40 = load i64, i64* %11, align 8
  %41 = call noalias i8* @_emalloc(i64 %40) #15
  br label %42

42:                                               ; preds = %39, %36
  %43 = phi i8* [ %38, %36 ], [ %41, %39 ]
  %44 = load %4*, %4** %13, align 8
  %45 = getelementptr inbounds %4, %4* %44, i32 0, i32 0
  %46 = bitcast %5* %45 to i8**
  store i8* %43, i8** %46, align 8
  %47 = load %4*, %4** %13, align 8
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 0
  %49 = bitcast %5* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = load i8*, i8** %10, align 8
  %52 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %51, i64 %52, i1 false)
  %53 = load %4*, %4** %13, align 8
  %54 = getelementptr inbounds %4, %4* %53, i32 0, i32 0
  %55 = bitcast %5* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  store i8* %56, i8** %6, align 8
  store i32 1, i32* %14, align 4
  br label %58

57:                                               ; preds = %23
  store i8* null, i8** %6, align 8
  store i32 1, i32* %14, align 4
  br label %58

58:                                               ; preds = %57, %42
  %59 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #13
  %60 = bitcast %4* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %60) #13
  %61 = load i8*, i8** %6, align 8
  ret i8* %61
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_offsetExists(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %93*, align 8
  %8 = alloca %4*, align 8
  %9 = alloca %99*, align 8
  %10 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %11 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast %93** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  %17 = call zeroext i8 @444(%4* %16)
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %23*, %23** %3, align 8
  %22 = getelementptr inbounds %23, %23* %21, i32 0, i32 4
  br label %24

23:                                               ; preds = %2
  br label %24

24:                                               ; preds = %23, %20
  %25 = phi %4* [ %22, %20 ], [ null, %23 ]
  store %4* %25, %4** %8, align 8
  %26 = bitcast %99** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = load %4*, %4** %8, align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 0
  %29 = bitcast %5* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = bitcast %21* %30 to i8*
  %32 = load %4*, %4** %8, align 8
  %33 = getelementptr inbounds %4, %4* %32, i32 0, i32 0
  %34 = bitcast %5* %33 to %21**
  %35 = load %21*, %21** %34, align 8
  %36 = getelementptr inbounds %21, %21* %35, i32 0, i32 3
  %37 = load %22*, %22** %36, align 8
  %38 = getelementptr inbounds %22, %22* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = sub i64 0, %40
  %42 = getelementptr inbounds i8, i8* %31, i64 %41
  %43 = bitcast i8* %42 to %99*
  store %99* %43, %99** %9, align 8
  %44 = load %99*, %99** %9, align 8
  %45 = bitcast %99* %44 to %52**
  %46 = load %52*, %52** %45, align 8
  %47 = icmp ne %52* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %24
  %49 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %50 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %49, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %161

51:                                               ; preds = %24
  %52 = load %23*, %23** %3, align 8
  %53 = getelementptr inbounds %23, %23* %52, i32 0, i32 4
  %54 = getelementptr inbounds %4, %4* %53, i32 0, i32 2
  %55 = bitcast %7* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %6)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  store i32 1, i32* %10, align 4
  br label %161

60:                                               ; preds = %51
  %61 = load i64, i64* %6, align 8
  %62 = icmp ugt i64 %61, 2147483647
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %60
  br label %70

70:                                               ; preds = %69
  %71 = load %4*, %4** %4, align 8
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 1
  %73 = bitcast %6* %72 to i32*
  store i32 2, i32* %73, align 8
  br label %74

74:                                               ; preds = %70
  br label %75

75:                                               ; preds = %74
  store i32 1, i32* %10, align 4
  br label %161

76:                                               ; preds = %60
  %77 = load %99*, %99** %9, align 8
  %78 = bitcast %99* %77 to %52**
  %79 = load %52*, %52** %78, align 8
  %80 = getelementptr inbounds %52, %52* %79, i32 0, i32 9
  %81 = load i8*, i8** %5, align 8
  %82 = load i64, i64* %6, align 8
  %83 = trunc i64 %82 to i32
  %84 = zext i32 %83 to i64
  %85 = call zeroext i8 @zend_hash_str_exists(%8* %80, i8* %81, i64 %84)
  %86 = icmp ne i8 %85, 0
  br i1 %86, label %87, label %136

87:                                               ; preds = %76
  %88 = load %99*, %99** %9, align 8
  %89 = bitcast %99* %88 to %52**
  %90 = load %52*, %52** %89, align 8
  %91 = getelementptr inbounds %52, %52* %90, i32 0, i32 9
  %92 = load i8*, i8** %5, align 8
  %93 = load i64, i64* %6, align 8
  %94 = trunc i64 %93 to i32
  %95 = zext i32 %94 to i64
  %96 = call i8* @442(%8* %91, i8* %92, i64 %95)
  %97 = bitcast i8* %96 to %93*
  store %93* %97, %93** %7, align 8
  %98 = icmp ne %93* null, %97
  br i1 %98, label %99, label %115

99:                                               ; preds = %87
  %100 = load %93*, %93** %7, align 8
  %101 = getelementptr inbounds %93, %93* %100, i32 0, i32 24
  %102 = load i16, i16* %101, align 2
  %103 = lshr i16 %102, 2
  %104 = and i16 %103, 1
  %105 = zext i16 %104 to i32
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %114

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  %109 = load %4*, %4** %4, align 8
  %110 = getelementptr inbounds %4, %4* %109, i32 0, i32 1
  %111 = bitcast %6* %110 to i32*
  store i32 2, i32* %111, align 8
  br label %112

112:                                              ; preds = %108
  br label %113

113:                                              ; preds = %112
  store i32 1, i32* %10, align 4
  br label %161

114:                                              ; preds = %99
  br label %115

115:                                              ; preds = %114, %87
  %116 = load i64, i64* %6, align 8
  %117 = icmp uge i64 %116, 5
  br i1 %117, label %118, label %129

118:                                              ; preds = %115
  %119 = load i8*, i8** %5, align 8
  %120 = call i32 @memcmp(i8* %119, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  br label %123

123:                                              ; preds = %122
  %124 = load %4*, %4** %4, align 8
  %125 = getelementptr inbounds %4, %4* %124, i32 0, i32 1
  %126 = bitcast %6* %125 to i32*
  store i32 2, i32* %126, align 8
  br label %127

127:                                              ; preds = %123
  br label %128

128:                                              ; preds = %127
  store i32 1, i32* %10, align 4
  br label %161

129:                                              ; preds = %118, %115
  br label %130

130:                                              ; preds = %129
  %131 = load %4*, %4** %4, align 8
  %132 = getelementptr inbounds %4, %4* %131, i32 0, i32 1
  %133 = bitcast %6* %132 to i32*
  store i32 3, i32* %133, align 8
  br label %134

134:                                              ; preds = %130
  br label %135

135:                                              ; preds = %134
  store i32 1, i32* %10, align 4
  br label %161

136:                                              ; preds = %76
  %137 = load %99*, %99** %9, align 8
  %138 = bitcast %99* %137 to %52**
  %139 = load %52*, %52** %138, align 8
  %140 = getelementptr inbounds %52, %52* %139, i32 0, i32 10
  %141 = load i8*, i8** %5, align 8
  %142 = load i64, i64* %6, align 8
  %143 = trunc i64 %142 to i32
  %144 = zext i32 %143 to i64
  %145 = call zeroext i8 @zend_hash_str_exists(%8* %140, i8* %141, i64 %144)
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %154

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147
  %149 = load %4*, %4** %4, align 8
  %150 = getelementptr inbounds %4, %4* %149, i32 0, i32 1
  %151 = bitcast %6* %150 to i32*
  store i32 3, i32* %151, align 8
  br label %152

152:                                              ; preds = %148
  br label %153

153:                                              ; preds = %152
  store i32 1, i32* %10, align 4
  br label %161

154:                                              ; preds = %136
  br label %155

155:                                              ; preds = %154
  %156 = load %4*, %4** %4, align 8
  %157 = getelementptr inbounds %4, %4* %156, i32 0, i32 1
  %158 = bitcast %6* %157 to i32*
  store i32 2, i32* %158, align 8
  br label %159

159:                                              ; preds = %155
  br label %160

160:                                              ; preds = %159
  store i32 1, i32* %10, align 4
  br label %161

161:                                              ; preds = %160, %153, %135, %128, %113, %75, %59, %48
  %162 = bitcast %99** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162) #13
  %163 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #13
  %164 = bitcast %93** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #13
  %165 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  %166 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_offsetGet(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %4, align 8
  %9 = alloca %93*, align 8
  %10 = alloca %0*, align 8
  %11 = alloca %4*, align 8
  %12 = alloca %99*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %4*, align 8
  %15 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %19) #13
  %20 = bitcast %93** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  %25 = call zeroext i8 @444(%4* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  %29 = load %23*, %23** %3, align 8
  %30 = getelementptr inbounds %23, %23* %29, i32 0, i32 4
  br label %32

31:                                               ; preds = %2
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi %4* [ %30, %28 ], [ null, %31 ]
  store %4* %33, %4** %11, align 8
  %34 = bitcast %99** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = load %4*, %4** %11, align 8
  %36 = getelementptr inbounds %4, %4* %35, i32 0, i32 0
  %37 = bitcast %5* %36 to %21**
  %38 = load %21*, %21** %37, align 8
  %39 = bitcast %21* %38 to i8*
  %40 = load %4*, %4** %11, align 8
  %41 = getelementptr inbounds %4, %4* %40, i32 0, i32 0
  %42 = bitcast %5* %41 to %21**
  %43 = load %21*, %21** %42, align 8
  %44 = getelementptr inbounds %21, %21* %43, i32 0, i32 3
  %45 = load %22*, %22** %44, align 8
  %46 = getelementptr inbounds %22, %22* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = bitcast i8* %50 to %99*
  store %99* %51, %99** %12, align 8
  %52 = load %99*, %99** %12, align 8
  %53 = bitcast %99* %52 to %52**
  %54 = load %52*, %52** %53, align 8
  %55 = icmp ne %52* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %32
  %57 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %58 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %57, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %13, align 4
  br label %192

59:                                               ; preds = %32
  %60 = load %23*, %23** %3, align 8
  %61 = getelementptr inbounds %23, %23* %60, i32 0, i32 4
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 2
  %63 = bitcast %7* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %7)
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %67, label %68

67:                                               ; preds = %59
  store i32 1, i32* %13, align 4
  br label %192

68:                                               ; preds = %59
  %69 = load i64, i64* %7, align 8
  %70 = icmp ugt i64 %69, 2147483647
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %68
  br label %78

78:                                               ; preds = %77
  %79 = load %4*, %4** %4, align 8
  %80 = getelementptr inbounds %4, %4* %79, i32 0, i32 1
  %81 = bitcast %6* %80 to i32*
  store i32 2, i32* %81, align 8
  br label %82

82:                                               ; preds = %78
  br label %83

83:                                               ; preds = %82
  store i32 1, i32* %13, align 4
  br label %192

84:                                               ; preds = %68
  %85 = load %99*, %99** %12, align 8
  %86 = bitcast %99* %85 to %52**
  %87 = load %52*, %52** %86, align 8
  %88 = load i8*, i8** %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = trunc i64 %89 to i32
  %91 = call %93* @phar_get_entry_info_dir(%52* %87, i8* %88, i32 %90, i8 signext 1, i8** %6, i32 0)
  store %93* %91, %93** %9, align 8
  %92 = icmp ne %93* %91, null
  br i1 %92, label %108, label %93

93:                                               ; preds = %84
  %94 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %95 = load i8*, i8** %5, align 8
  %96 = load i8*, i8** %6, align 8
  %97 = icmp ne i8* %96, null
  %98 = zext i1 %97 to i64
  %99 = select i1 %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0)
  %100 = load i8*, i8** %6, align 8
  %101 = icmp ne i8* %100, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %93
  %103 = load i8*, i8** %6, align 8
  br label %105

104:                                              ; preds = %93
  br label %105

105:                                              ; preds = %104, %102
  %106 = phi i8* [ %103, %102 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0), %104 ]
  %107 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %94, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @138, i32 0, i32 0), i8* %95, i8* %99, i8* %106)
  br label %191

108:                                              ; preds = %84
  %109 = load i64, i64* %7, align 8
  %110 = icmp eq i64 %109, 14
  br i1 %110, label %111, label %123

111:                                              ; preds = %108
  %112 = load i8*, i8** %5, align 8
  %113 = call i32 @memcmp(i8* %112, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @140, i32 0, i32 0), i64 14) #14
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %111
  %116 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %117 = load %99*, %99** %12, align 8
  %118 = bitcast %99* %117 to %52**
  %119 = load %52*, %52** %118, align 8
  %120 = getelementptr inbounds %52, %52* %119, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %116, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @141, i32 0, i32 0), i8* %121)
  store i32 1, i32* %13, align 4
  br label %192

123:                                              ; preds = %111, %108
  %124 = load i64, i64* %7, align 8
  %125 = icmp eq i64 %124, 15
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i8*, i8** %5, align 8
  %128 = call i32 @memcmp(i8* %127, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @142, i32 0, i32 0), i64 15) #14
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %126
  %131 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %132 = load %99*, %99** %12, align 8
  %133 = bitcast %99* %132 to %52**
  %134 = load %52*, %52** %133, align 8
  %135 = getelementptr inbounds %52, %52* %134, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %131, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @143, i32 0, i32 0), i8* %136)
  store i32 1, i32* %13, align 4
  br label %192

138:                                              ; preds = %126, %123
  %139 = load i64, i64* %7, align 8
  %140 = icmp uge i64 %139, 5
  br i1 %140, label %141, label %148

141:                                              ; preds = %138
  %142 = load i8*, i8** %5, align 8
  %143 = call i32 @memcmp(i8* %142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %141
  %146 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %147 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %146, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @144, i32 0, i32 0))
  store i32 1, i32* %13, align 4
  br label %192

148:                                              ; preds = %141, %138
  %149 = load %93*, %93** %9, align 8
  %150 = getelementptr inbounds %93, %93* %149, i32 0, i32 24
  %151 = load i16, i16* %150, align 2
  %152 = lshr i16 %151, 5
  %153 = and i16 %152, 1
  %154 = zext i16 %153 to i32
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %148
  %157 = load %93*, %93** %9, align 8
  %158 = getelementptr inbounds %93, %93* %157, i32 0, i32 9
  %159 = load i8*, i8** %158, align 8
  call void @_efree(i8* %159)
  %160 = load %93*, %93** %9, align 8
  %161 = bitcast %93* %160 to i8*
  call void @_efree(i8* %161)
  br label %162

162:                                              ; preds = %156, %148
  %163 = load %99*, %99** %12, align 8
  %164 = bitcast %99* %163 to %52**
  %165 = load %52*, %52** %164, align 8
  %166 = getelementptr inbounds %52, %52* %165, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = load i8*, i8** %5, align 8
  %169 = call %0* (i64, i8*, ...) @zend_strpprintf(i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @145, i32 0, i32 0), i8* %167, i8* %168)
  store %0* %169, %0** %10, align 8
  br label %170

170:                                              ; preds = %162
  %171 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %171) #13
  store %4* %8, %4** %14, align 8
  %172 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172) #13
  %173 = load %0*, %0** %10, align 8
  store %0* %173, %0** %15, align 8
  %174 = load %0*, %0** %15, align 8
  %175 = load %4*, %4** %14, align 8
  %176 = getelementptr inbounds %4, %4* %175, i32 0, i32 0
  %177 = bitcast %5* %176 to %0**
  store %0* %174, %0** %177, align 8
  %178 = load %4*, %4** %14, align 8
  %179 = getelementptr inbounds %4, %4* %178, i32 0, i32 1
  %180 = bitcast %6* %179 to i32*
  store i32 5126, i32* %180, align 8
  %181 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #13
  %182 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #13
  br label %183

183:                                              ; preds = %170
  br label %184

184:                                              ; preds = %183
  %185 = load %99*, %99** %12, align 8
  %186 = bitcast %99* %185 to %77*
  %187 = getelementptr inbounds %77, %77* %186, i32 0, i32 10
  %188 = load %3*, %3** %187, align 8
  %189 = load %4*, %4** %4, align 8
  %190 = call i32 @461(%3* %188, %4* %189, %4* %8)
  call void @_zval_ptr_dtor(%4* %8)
  br label %191

191:                                              ; preds = %184, %105
  store i32 0, i32* %13, align 4
  br label %192

192:                                              ; preds = %191, %145, %130, %115, %83, %67, %56
  %193 = bitcast %99** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #13
  %195 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #13
  %196 = bitcast %93** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #13
  %197 = bitcast %4* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %197) #13
  %198 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #13
  %199 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #13
  %200 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #13
  %201 = load i32, i32* %13, align 4
  switch i32 %201, label %203 [
    i32 0, label %202
    i32 1, label %202
  ]

202:                                              ; preds = %192, %192
  ret void

203:                                              ; preds = %192
  unreachable
}

declare dso_local %93* @phar_get_entry_info_dir(%52*, i8*, i32, i8 signext, i8**, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @461(%3* %0, %4* %1, %4* %2) #9 {
  %4 = alloca %3*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %11*, align 8
  store %3* %0, %3** %4, align 8
  store %4* %1, %4** %5, align 8
  store %4* %2, %4** %6, align 8
  %8 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %3*, %3** %4, align 8
  %10 = getelementptr inbounds %3, %3* %9, i32 0, i32 13
  %11 = load %11*, %11** %10, align 8
  store %11* %11, %11** %7, align 8
  %12 = load %3*, %3** %4, align 8
  %13 = load %4*, %4** %5, align 8
  call void @spl_instantiate(%3* %12, %4* %13)
  %14 = load %4*, %4** %5, align 8
  %15 = load %3*, %3** %4, align 8
  %16 = load %11*, %11** %7, align 8
  %17 = bitcast %11* %16 to %103*
  %18 = getelementptr inbounds %103, %103* %17, i32 0, i32 3
  %19 = load %0*, %0** %18, align 8
  %20 = getelementptr inbounds %0, %0* %19, i32 0, i32 3
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* %20, i32 0, i32 0
  %22 = load %11*, %11** %7, align 8
  %23 = bitcast %11* %22 to %103*
  %24 = getelementptr inbounds %103, %103* %23, i32 0, i32 3
  %25 = load %0*, %0** %24, align 8
  %26 = getelementptr inbounds %0, %0* %25, i32 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = load %4*, %4** %6, align 8
  %29 = call %4* @zend_call_method(%4* %14, %3* %15, %11** %7, i8* %21, i64 %27, %4* null, i32 1, %4* %28, %4* null)
  %30 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_offsetSet(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %4*, align 8
  %11 = alloca %99*, align 8
  %12 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %13 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  store i8* null, i8** %6, align 8
  %15 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  %21 = call zeroext i8 @444(%4* %20)
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load %23*, %23** %3, align 8
  %26 = getelementptr inbounds %23, %23* %25, i32 0, i32 4
  br label %28

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %27, %24
  %29 = phi %4* [ %26, %24 ], [ null, %27 ]
  store %4* %29, %4** %10, align 8
  %30 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = load %4*, %4** %10, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to %21**
  %34 = load %21*, %21** %33, align 8
  %35 = bitcast %21* %34 to i8*
  %36 = load %4*, %4** %10, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 0
  %38 = bitcast %5* %37 to %21**
  %39 = load %21*, %21** %38, align 8
  %40 = getelementptr inbounds %21, %21* %39, i32 0, i32 3
  %41 = load %22*, %22** %40, align 8
  %42 = getelementptr inbounds %22, %22* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = sub i64 0, %44
  %46 = getelementptr inbounds i8, i8* %35, i64 %45
  %47 = bitcast i8* %46 to %99*
  store %99* %47, %99** %11, align 8
  %48 = load %99*, %99** %11, align 8
  %49 = bitcast %99* %48 to %52**
  %50 = load %52*, %52** %49, align 8
  %51 = icmp ne %52* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %28
  %53 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %54 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %53, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %153

55:                                               ; preds = %28
  %56 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %71

58:                                               ; preds = %55
  %59 = load %99*, %99** %11, align 8
  %60 = bitcast %99* %59 to %52**
  %61 = load %52*, %52** %60, align 8
  %62 = getelementptr inbounds %52, %52* %61, i32 0, i32 24
  %63 = load i16, i16* %62, align 8
  %64 = lshr i16 %63, 7
  %65 = and i16 %64, 1
  %66 = zext i16 %65 to i32
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %58
  %69 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %70 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %69, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @146, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %153

71:                                               ; preds = %58, %55
  %72 = load %23*, %23** %3, align 8
  %73 = getelementptr inbounds %23, %23* %72, i32 0, i32 4
  %74 = getelementptr inbounds %4, %4* %73, i32 0, i32 2
  %75 = bitcast %7* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %76, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @147, i32 0, i32 0), i8** %5, i64* %7, %4** %9)
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %79, label %88

79:                                               ; preds = %71
  %80 = load %23*, %23** %3, align 8
  %81 = getelementptr inbounds %23, %23* %80, i32 0, i32 4
  %82 = getelementptr inbounds %4, %4* %81, i32 0, i32 2
  %83 = bitcast %7* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @148, i32 0, i32 0), i8** %5, i64* %7, i8** %6, i64* %8)
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %87, label %88

87:                                               ; preds = %79
  store i32 1, i32* %12, align 4
  br label %153

88:                                               ; preds = %79, %71
  %89 = load i64, i64* %7, align 8
  %90 = icmp ugt i64 %89, 2147483647
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 0)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %88
  br label %98

98:                                               ; preds = %97
  %99 = load %4*, %4** %4, align 8
  %100 = getelementptr inbounds %4, %4* %99, i32 0, i32 1
  %101 = bitcast %6* %100 to i32*
  store i32 2, i32* %101, align 8
  br label %102

102:                                              ; preds = %98
  br label %103

103:                                              ; preds = %102
  store i32 1, i32* %12, align 4
  br label %153

104:                                              ; preds = %88
  %105 = load i64, i64* %7, align 8
  %106 = icmp eq i64 %105, 14
  br i1 %106, label %107, label %119

107:                                              ; preds = %104
  %108 = load i8*, i8** %5, align 8
  %109 = call i32 @memcmp(i8* %108, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @140, i32 0, i32 0), i64 14) #14
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %107
  %112 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %113 = load %99*, %99** %11, align 8
  %114 = bitcast %99* %113 to %52**
  %115 = load %52*, %52** %114, align 8
  %116 = getelementptr inbounds %52, %52* %115, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %112, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @149, i32 0, i32 0), i8* %117)
  store i32 1, i32* %12, align 4
  br label %153

119:                                              ; preds = %107, %104
  %120 = load i64, i64* %7, align 8
  %121 = icmp eq i64 %120, 15
  br i1 %121, label %122, label %134

122:                                              ; preds = %119
  %123 = load i8*, i8** %5, align 8
  %124 = call i32 @memcmp(i8* %123, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @142, i32 0, i32 0), i64 15) #14
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %122
  %127 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %128 = load %99*, %99** %11, align 8
  %129 = bitcast %99* %128 to %52**
  %130 = load %52*, %52** %129, align 8
  %131 = getelementptr inbounds %52, %52* %130, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %127, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @150, i32 0, i32 0), i8* %132)
  store i32 1, i32* %12, align 4
  br label %153

134:                                              ; preds = %122, %119
  %135 = load i64, i64* %7, align 8
  %136 = icmp uge i64 %135, 5
  br i1 %136, label %137, label %144

137:                                              ; preds = %134
  %138 = load i8*, i8** %5, align 8
  %139 = call i32 @memcmp(i8* %138, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %143 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %142, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @151, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %153

144:                                              ; preds = %137, %134
  %145 = load %99*, %99** %11, align 8
  %146 = bitcast %99* %145 to %52**
  %147 = load i8*, i8** %5, align 8
  %148 = load i64, i64* %7, align 8
  %149 = trunc i64 %148 to i32
  %150 = load i8*, i8** %6, align 8
  %151 = load i64, i64* %8, align 8
  %152 = load %4*, %4** %9, align 8
  call void @462(%52** %146, i8* %147, i32 %149, i8* %150, i64 %151, %4* %152)
  store i32 0, i32* %12, align 4
  br label %153

153:                                              ; preds = %144, %141, %126, %111, %103, %87, %68, %52
  %154 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #13
  %155 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %155) #13
  %156 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %156) #13
  %157 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #13
  %158 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #13
  %159 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #13
  %160 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #13
  %161 = load i32, i32* %12, align 4
  switch i32 %161, label %163 [
    i32 0, label %162
    i32 1, label %162
  ]

162:                                              ; preds = %153, %153
  ret void

163:                                              ; preds = %153
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @462(%52** %0, i8* %1, i32 %2, i8* %3, i64 %4, %4* %5) #0 {
  %7 = alloca %52**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %4*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %101*, align 8
  %17 = alloca %34*, align 8
  %18 = alloca %36, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %52** %0, %52*** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  store %4* %5, %4** %12, align 8
  %21 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #13
  store i32 0, i32* %13, align 4
  %22 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast %101** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %34** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  store %34* null, %34** %17, align 8
  %26 = bitcast %36* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %26) #13
  %27 = load i32, i32* %9, align 4
  %28 = icmp sge i32 %27, 5
  br i1 %28, label %29, label %74

29:                                               ; preds = %6
  %30 = load i8*, i8** %8, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp eq i32 47, %33
  %35 = zext i1 %34 to i64
  %36 = select i1 %34, i32 1, i32 0
  store i32 %36, i32* %13, align 4
  %37 = load i8*, i8** %8, align 8
  %38 = load i32, i32* %13, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = call i32 @memcmp(i8* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %73, label %43

43:                                               ; preds = %29
  %44 = load i8*, i8** %8, align 8
  %45 = load i32, i32* %13, align 4
  %46 = add nsw i32 %45, 5
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %50, 47
  br i1 %51, label %70, label %52

52:                                               ; preds = %43
  %53 = load i8*, i8** %8, align 8
  %54 = load i32, i32* %13, align 4
  %55 = add nsw i32 %54, 5
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 92
  br i1 %60, label %70, label %61

61:                                               ; preds = %52
  %62 = load i8*, i8** %8, align 8
  %63 = load i32, i32* %13, align 4
  %64 = add nsw i32 %63, 5
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %61, %52, %43
  %71 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %72 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %71, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @382, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %220

73:                                               ; preds = %61, %29
  br label %74

74:                                               ; preds = %73, %6
  %75 = load %52**, %52*** %7, align 8
  %76 = load %52*, %52** %75, align 8
  %77 = getelementptr inbounds %52, %52* %76, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = load %52**, %52*** %7, align 8
  %80 = load %52*, %52** %79, align 8
  %81 = getelementptr inbounds %52, %52* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = load i8*, i8** %8, align 8
  %84 = load i32, i32* %9, align 4
  %85 = call %101* @phar_get_or_create_entry_data(i8* %78, i32 %82, i8* %83, i32 %84, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @342, i32 0, i32 0), i8 signext 0, i8** %14, i32 1)
  store %101* %85, %101** %16, align 8
  %86 = icmp ne %101* %85, null
  br i1 %86, label %101, label %87

87:                                               ; preds = %74
  %88 = load i8*, i8** %14, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %92 = load i8*, i8** %8, align 8
  %93 = load i8*, i8** %14, align 8
  %94 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %91, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @383, i32 0, i32 0), i8* %92, i8* %93)
  %95 = load i8*, i8** %14, align 8
  call void @_efree(i8* %95)
  br label %100

96:                                               ; preds = %87
  %97 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %98 = load i8*, i8** %8, align 8
  %99 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %97, i64 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @384, i32 0, i32 0), i8* %98)
  br label %100

100:                                              ; preds = %96, %90
  store i32 1, i32* %19, align 4
  br label %220

101:                                              ; preds = %74
  %102 = load i8*, i8** %14, align 8
  %103 = icmp ne i8* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = load i8*, i8** %14, align 8
  call void @_efree(i8* %105)
  br label %106

106:                                              ; preds = %104, %101
  %107 = load %101*, %101** %16, align 8
  %108 = getelementptr inbounds %101, %101* %107, i32 0, i32 5
  %109 = load %93*, %93** %108, align 8
  %110 = getelementptr inbounds %93, %93* %109, i32 0, i32 24
  %111 = load i16, i16* %110, align 2
  %112 = lshr i16 %111, 3
  %113 = and i16 %112, 1
  %114 = zext i16 %113 to i32
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %162, label %116

116:                                              ; preds = %106
  %117 = load i8*, i8** %10, align 8
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %134

119:                                              ; preds = %116
  %120 = load %101*, %101** %16, align 8
  %121 = getelementptr inbounds %101, %101* %120, i32 0, i32 1
  %122 = load %34*, %34** %121, align 8
  %123 = load i8*, i8** %10, align 8
  %124 = load i64, i64* %11, align 8
  %125 = call i64 @_php_stream_write(%34* %122, i8* %123, i64 %124)
  store i64 %125, i64* %15, align 8
  %126 = load i64, i64* %15, align 8
  %127 = load i64, i64* %11, align 8
  %128 = icmp ne i64 %126, %127
  br i1 %128, label %129, label %133

129:                                              ; preds = %119
  %130 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %131 = load i8*, i8** %8, align 8
  %132 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %130, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @385, i32 0, i32 0), i8* %131)
  store i32 1, i32* %19, align 4
  br label %220

133:                                              ; preds = %119
  br label %151

134:                                              ; preds = %116
  %135 = load %4*, %4** %12, align 8
  %136 = call i32 @php_file_le_stream()
  %137 = call i32 @php_file_le_pstream()
  %138 = call i8* @zend_fetch_resource2_ex(%4* %135, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @107, i32 0, i32 0), i32 %136, i32 %137)
  %139 = bitcast i8* %138 to %34*
  store %34* %139, %34** %17, align 8
  %140 = icmp ne %34* %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %134
  %142 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %143 = load i8*, i8** %8, align 8
  %144 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %142, i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @385, i32 0, i32 0), i8* %143)
  store i32 1, i32* %19, align 4
  br label %220

145:                                              ; preds = %134
  %146 = load %34*, %34** %17, align 8
  %147 = load %101*, %101** %16, align 8
  %148 = getelementptr inbounds %101, %101* %147, i32 0, i32 1
  %149 = load %34*, %34** %148, align 8
  %150 = call i32 @_php_stream_copy_to_stream_ex(%34* %146, %34* %149, i64 -1, i64* %15)
  br label %151

151:                                              ; preds = %145, %133
  %152 = load i64, i64* %15, align 8
  %153 = trunc i64 %152 to i32
  %154 = load %101*, %101** %16, align 8
  %155 = getelementptr inbounds %101, %101* %154, i32 0, i32 5
  %156 = load %93*, %93** %155, align 8
  %157 = getelementptr inbounds %93, %93* %156, i32 0, i32 0
  store i32 %153, i32* %157, align 8
  %158 = load %101*, %101** %16, align 8
  %159 = getelementptr inbounds %101, %101* %158, i32 0, i32 5
  %160 = load %93*, %93** %159, align 8
  %161 = getelementptr inbounds %93, %93* %160, i32 0, i32 2
  store i32 %153, i32* %161, align 8
  br label %162

162:                                              ; preds = %151, %106
  %163 = load %34*, %34** %17, align 8
  %164 = icmp ne %34* %163, null
  br i1 %164, label %165, label %178

165:                                              ; preds = %162
  %166 = load %34*, %34** %17, align 8
  %167 = call i32 @_php_stream_stat(%34* %166, %36* %18)
  %168 = icmp ne i32 %167, -1
  br i1 %168, label %169, label %178

169:                                              ; preds = %165
  %170 = getelementptr inbounds %36, %36* %18, i32 0, i32 0
  %171 = getelementptr inbounds %37, %37* %170, i32 0, i32 3
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, 511
  %174 = load %101*, %101** %16, align 8
  %175 = getelementptr inbounds %101, %101* %174, i32 0, i32 5
  %176 = load %93*, %93** %175, align 8
  %177 = getelementptr inbounds %93, %93* %176, i32 0, i32 4
  store i32 %173, i32* %177, align 8
  br label %192

178:                                              ; preds = %165, %162
  %179 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %179) #13
  %180 = call i32 @umask(i32 0) #13
  store i32 %180, i32* %20, align 4
  %181 = load i32, i32* %20, align 4
  %182 = call i32 @umask(i32 %181) #13
  %183 = load i32, i32* %20, align 4
  %184 = xor i32 %183, -1
  %185 = load %101*, %101** %16, align 8
  %186 = getelementptr inbounds %101, %101* %185, i32 0, i32 5
  %187 = load %93*, %93** %186, align 8
  %188 = getelementptr inbounds %93, %93* %187, i32 0, i32 4
  %189 = load i32, i32* %188, align 8
  %190 = and i32 %189, %184
  store i32 %190, i32* %188, align 8
  %191 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  br label %192

192:                                              ; preds = %178, %169
  %193 = load %52**, %52*** %7, align 8
  %194 = getelementptr inbounds %52*, %52** %193, i64 0
  %195 = load %52*, %52** %194, align 8
  %196 = load %101*, %101** %16, align 8
  %197 = getelementptr inbounds %101, %101* %196, i32 0, i32 0
  %198 = load %52*, %52** %197, align 8
  %199 = icmp ne %52* %195, %198
  br i1 %199, label %200, label %205

200:                                              ; preds = %192
  %201 = load %101*, %101** %16, align 8
  %202 = getelementptr inbounds %101, %101* %201, i32 0, i32 0
  %203 = load %52*, %52** %202, align 8
  %204 = load %52**, %52*** %7, align 8
  store %52* %203, %52** %204, align 8
  br label %205

205:                                              ; preds = %200, %192
  %206 = load %101*, %101** %16, align 8
  %207 = call i32 @phar_entry_delref(%101* %206)
  %208 = load %52**, %52*** %7, align 8
  %209 = load %52*, %52** %208, align 8
  %210 = call i32 @phar_flush(%52* %209, i8* null, i64 0, i32 0, i8** %14)
  %211 = load i8*, i8** %14, align 8
  %212 = icmp ne i8* %211, null
  br i1 %212, label %213, label %218

213:                                              ; preds = %205
  %214 = load %3*, %3** @3, align 8
  %215 = load i8*, i8** %14, align 8
  %216 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %214, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %215)
  %217 = load i8*, i8** %14, align 8
  call void @_efree(i8* %217)
  br label %218

218:                                              ; preds = %213, %205
  br label %219

219:                                              ; preds = %218
  store i32 0, i32* %19, align 4
  br label %220

220:                                              ; preds = %219, %141, %129, %100, %70
  %221 = bitcast %36* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %221) #13
  %222 = bitcast %34** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  %223 = bitcast %101** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  %224 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #13
  %225 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  %226 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %226) #13
  %227 = load i32, i32* %19, align 4
  switch i32 %227, label %229 [
    i32 0, label %228
    i32 1, label %228
  ]

228:                                              ; preds = %220, %220
  ret void

229:                                              ; preds = %220
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_offsetUnset(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %93*, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %99*, align 8
  %11 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast %93** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  %19 = call zeroext i8 @444(%4* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi %4* [ %24, %22 ], [ null, %25 ]
  store %4* %27, %4** %9, align 8
  %28 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = load %4*, %4** %9, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = bitcast %21* %32 to i8*
  %34 = load %4*, %4** %9, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %21**
  %37 = load %21*, %21** %36, align 8
  %38 = getelementptr inbounds %21, %21* %37, i32 0, i32 3
  %39 = load %22*, %22** %38, align 8
  %40 = getelementptr inbounds %22, %22* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = bitcast i8* %44 to %99*
  store %99* %45, %99** %10, align 8
  %46 = load %99*, %99** %10, align 8
  %47 = bitcast %99* %46 to %52**
  %48 = load %52*, %52** %47, align 8
  %49 = icmp ne %52* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %26
  %51 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %52 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %51, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %197

53:                                               ; preds = %26
  %54 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %69

56:                                               ; preds = %53
  %57 = load %99*, %99** %10, align 8
  %58 = bitcast %99* %57 to %52**
  %59 = load %52*, %52** %58, align 8
  %60 = getelementptr inbounds %52, %52* %59, i32 0, i32 24
  %61 = load i16, i16* %60, align 8
  %62 = lshr i16 %61, 7
  %63 = and i16 %62, 1
  %64 = zext i16 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %56
  %67 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %68 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %67, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @146, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %197

69:                                               ; preds = %56, %53
  %70 = load %23*, %23** %3, align 8
  %71 = getelementptr inbounds %23, %23* %70, i32 0, i32 4
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 2
  %73 = bitcast %7* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %7)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %78

77:                                               ; preds = %69
  store i32 1, i32* %11, align 4
  br label %197

78:                                               ; preds = %69
  %79 = load i64, i64* %7, align 8
  %80 = icmp ugt i64 %79, 2147483647
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 0)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %94

87:                                               ; preds = %78
  br label %88

88:                                               ; preds = %87
  %89 = load %4*, %4** %4, align 8
  %90 = getelementptr inbounds %4, %4* %89, i32 0, i32 1
  %91 = bitcast %6* %90 to i32*
  store i32 2, i32* %91, align 8
  br label %92

92:                                               ; preds = %88
  br label %93

93:                                               ; preds = %92
  store i32 1, i32* %11, align 4
  br label %197

94:                                               ; preds = %78
  %95 = load %99*, %99** %10, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 9
  %99 = load i8*, i8** %5, align 8
  %100 = load i64, i64* %7, align 8
  %101 = trunc i64 %100 to i32
  %102 = zext i32 %101 to i64
  %103 = call zeroext i8 @zend_hash_str_exists(%8* %98, i8* %99, i64 %102)
  %104 = icmp ne i8 %103, 0
  br i1 %104, label %105, label %189

105:                                              ; preds = %94
  %106 = load %99*, %99** %10, align 8
  %107 = bitcast %99* %106 to %52**
  %108 = load %52*, %52** %107, align 8
  %109 = getelementptr inbounds %52, %52* %108, i32 0, i32 9
  %110 = load i8*, i8** %5, align 8
  %111 = load i64, i64* %7, align 8
  %112 = trunc i64 %111 to i32
  %113 = zext i32 %112 to i64
  %114 = call i8* @442(%8* %109, i8* %110, i64 %113)
  %115 = bitcast i8* %114 to %93*
  store %93* %115, %93** %8, align 8
  %116 = icmp ne %93* null, %115
  br i1 %116, label %117, label %188

117:                                              ; preds = %105
  %118 = load %93*, %93** %8, align 8
  %119 = getelementptr inbounds %93, %93* %118, i32 0, i32 24
  %120 = load i16, i16* %119, align 2
  %121 = lshr i16 %120, 2
  %122 = and i16 %121, 1
  %123 = zext i16 %122 to i32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %117
  store i32 1, i32* %11, align 4
  br label %197

126:                                              ; preds = %117
  %127 = load %99*, %99** %10, align 8
  %128 = bitcast %99* %127 to %52**
  %129 = load %52*, %52** %128, align 8
  %130 = getelementptr inbounds %52, %52* %129, i32 0, i32 24
  %131 = load i16, i16* %130, align 8
  %132 = lshr i16 %131, 8
  %133 = and i16 %132, 1
  %134 = zext i16 %133 to i32
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %160

136:                                              ; preds = %126
  %137 = load %99*, %99** %10, align 8
  %138 = bitcast %99* %137 to %52**
  %139 = call i32 @phar_copy_on_write(%52** %138)
  %140 = icmp eq i32 -1, %139
  br i1 %140, label %141, label %149

141:                                              ; preds = %136
  %142 = load %3*, %3** @3, align 8
  %143 = load %99*, %99** %10, align 8
  %144 = bitcast %99* %143 to %52**
  %145 = load %52*, %52** %144, align 8
  %146 = getelementptr inbounds %52, %52* %145, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %142, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %147)
  store i32 1, i32* %11, align 4
  br label %197

149:                                              ; preds = %136
  %150 = load %99*, %99** %10, align 8
  %151 = bitcast %99* %150 to %52**
  %152 = load %52*, %52** %151, align 8
  %153 = getelementptr inbounds %52, %52* %152, i32 0, i32 9
  %154 = load i8*, i8** %5, align 8
  %155 = load i64, i64* %7, align 8
  %156 = trunc i64 %155 to i32
  %157 = zext i32 %156 to i64
  %158 = call i8* @442(%8* %153, i8* %154, i64 %157)
  %159 = bitcast i8* %158 to %93*
  store %93* %159, %93** %8, align 8
  br label %160

160:                                              ; preds = %149, %126
  %161 = load %93*, %93** %8, align 8
  %162 = getelementptr inbounds %93, %93* %161, i32 0, i32 24
  %163 = load i16, i16* %162, align 2
  %164 = and i16 %163, -3
  store i16 %164, i16* %162, align 2
  %165 = load %93*, %93** %8, align 8
  %166 = getelementptr inbounds %93, %93* %165, i32 0, i32 24
  %167 = load i16, i16* %166, align 2
  %168 = and i16 %167, -5
  %169 = or i16 %168, 4
  store i16 %169, i16* %166, align 2
  %170 = load %99*, %99** %10, align 8
  %171 = bitcast %99* %170 to %52**
  %172 = load %52*, %52** %171, align 8
  %173 = call i32 @phar_flush(%52* %172, i8* null, i64 0, i32 0, i8** %6)
  %174 = load i8*, i8** %6, align 8
  %175 = icmp ne i8* %174, null
  br i1 %175, label %176, label %181

176:                                              ; preds = %160
  %177 = load %3*, %3** @3, align 8
  %178 = load i8*, i8** %6, align 8
  %179 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %177, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %178)
  %180 = load i8*, i8** %6, align 8
  call void @_efree(i8* %180)
  br label %181

181:                                              ; preds = %176, %160
  br label %182

182:                                              ; preds = %181
  %183 = load %4*, %4** %4, align 8
  %184 = getelementptr inbounds %4, %4* %183, i32 0, i32 1
  %185 = bitcast %6* %184 to i32*
  store i32 3, i32* %185, align 8
  br label %186

186:                                              ; preds = %182
  br label %187

187:                                              ; preds = %186
  store i32 1, i32* %11, align 4
  br label %197

188:                                              ; preds = %105
  br label %196

189:                                              ; preds = %94
  br label %190

190:                                              ; preds = %189
  %191 = load %4*, %4** %4, align 8
  %192 = getelementptr inbounds %4, %4* %191, i32 0, i32 1
  %193 = bitcast %6* %192 to i32*
  store i32 2, i32* %193, align 8
  br label %194

194:                                              ; preds = %190
  br label %195

195:                                              ; preds = %194
  store i32 1, i32* %11, align 4
  br label %197

196:                                              ; preds = %188
  store i32 0, i32* %11, align 4
  br label %197

197:                                              ; preds = %196, %195, %187, %141, %125, %93, %77, %66, %50
  %198 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #13
  %199 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #13
  %200 = bitcast %93** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #13
  %201 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %201) #13
  %202 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #13
  %203 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #13
  %204 = load i32, i32* %11, align 4
  switch i32 %204, label %206 [
    i32 0, label %205
    i32 1, label %205
  ]

205:                                              ; preds = %197, %197
  ret void

206:                                              ; preds = %197
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_addEmptyDir(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %4*, align 8
  %8 = alloca %99*, align 8
  %9 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %23*, %23** %3, align 8
  %14 = getelementptr inbounds %23, %23* %13, i32 0, i32 4
  %15 = call zeroext i8 @444(%4* %14)
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 8
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = load %23*, %23** %3, align 8
  %20 = getelementptr inbounds %23, %23* %19, i32 0, i32 4
  br label %22

21:                                               ; preds = %2
  br label %22

22:                                               ; preds = %21, %18
  %23 = phi %4* [ %20, %18 ], [ null, %21 ]
  store %4* %23, %4** %7, align 8
  %24 = bitcast %99** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = load %4*, %4** %7, align 8
  %26 = getelementptr inbounds %4, %4* %25, i32 0, i32 0
  %27 = bitcast %5* %26 to %21**
  %28 = load %21*, %21** %27, align 8
  %29 = bitcast %21* %28 to i8*
  %30 = load %4*, %4** %7, align 8
  %31 = getelementptr inbounds %4, %4* %30, i32 0, i32 0
  %32 = bitcast %5* %31 to %21**
  %33 = load %21*, %21** %32, align 8
  %34 = getelementptr inbounds %21, %21* %33, i32 0, i32 3
  %35 = load %22*, %22** %34, align 8
  %36 = getelementptr inbounds %22, %22* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = sub i64 0, %38
  %40 = getelementptr inbounds i8, i8* %29, i64 %39
  %41 = bitcast i8* %40 to %99*
  store %99* %41, %99** %8, align 8
  %42 = load %99*, %99** %8, align 8
  %43 = bitcast %99* %42 to %52**
  %44 = load %52*, %52** %43, align 8
  %45 = icmp ne %52* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %22
  %47 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %48 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %47, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %90

49:                                               ; preds = %22
  %50 = load %23*, %23** %3, align 8
  %51 = getelementptr inbounds %23, %23* %50, i32 0, i32 4
  %52 = getelementptr inbounds %4, %4* %51, i32 0, i32 2
  %53 = bitcast %7* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %6)
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  store i32 1, i32* %9, align 4
  br label %90

58:                                               ; preds = %49
  %59 = load i64, i64* %6, align 8
  %60 = icmp ugt i64 %59, 2147483647
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %58
  br label %68

68:                                               ; preds = %67
  %69 = load %4*, %4** %4, align 8
  %70 = getelementptr inbounds %4, %4* %69, i32 0, i32 1
  %71 = bitcast %6* %70 to i32*
  store i32 2, i32* %71, align 8
  br label %72

72:                                               ; preds = %68
  br label %73

73:                                               ; preds = %72
  store i32 1, i32* %9, align 4
  br label %90

74:                                               ; preds = %58
  %75 = load i64, i64* %6, align 8
  %76 = icmp uge i64 %75, 5
  br i1 %76, label %77, label %84

77:                                               ; preds = %74
  %78 = load i8*, i8** %5, align 8
  %79 = call i32 @memcmp(i8* %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %83 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %82, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @152, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %90

84:                                               ; preds = %77, %74
  %85 = load %99*, %99** %8, align 8
  %86 = bitcast %99* %85 to %52**
  %87 = load i8*, i8** %5, align 8
  %88 = load i64, i64* %6, align 8
  %89 = trunc i64 %88 to i32
  call void @463(%52** %86, i8* %87, i32 %89)
  store i32 0, i32* %9, align 4
  br label %90

90:                                               ; preds = %84, %81, %73, %57, %46
  %91 = bitcast %99** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #13
  %92 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #13
  %93 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #13
  %94 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #13
  %95 = load i32, i32* %9, align 4
  switch i32 %95, label %97 [
    i32 0, label %96
    i32 1, label %96
  ]

96:                                               ; preds = %90, %90
  ret void

97:                                               ; preds = %90
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @463(%52** %0, i8* %1, i32 %2) #0 {
  %4 = alloca %52**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %101*, align 8
  %9 = alloca i32, align 4
  store %52** %0, %52*** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast %101** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = load %52**, %52*** %4, align 8
  %13 = load %52*, %52** %12, align 8
  %14 = getelementptr inbounds %52, %52* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load %52**, %52*** %4, align 8
  %17 = load %52*, %52** %16, align 8
  %18 = getelementptr inbounds %52, %52* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load i8*, i8** %5, align 8
  %21 = load i32, i32* %6, align 4
  %22 = call %101* @phar_get_or_create_entry_data(i8* %15, i32 %19, i8* %20, i32 %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @342, i32 0, i32 0), i8 signext 2, i8** %7, i32 1)
  store %101* %22, %101** %8, align 8
  %23 = icmp ne %101* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %3
  %25 = load i8*, i8** %7, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = load i8*, i8** %7, align 8
  %31 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %28, i64 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @386, i32 0, i32 0), i8* %29, i8* %30)
  %32 = load i8*, i8** %7, align 8
  call void @_efree(i8* %32)
  br label %37

33:                                               ; preds = %24
  %34 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %35 = load i8*, i8** %5, align 8
  %36 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %34, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @387, i32 0, i32 0), i8* %35)
  br label %37

37:                                               ; preds = %33, %27
  store i32 1, i32* %9, align 4
  br label %70

38:                                               ; preds = %3
  %39 = load i8*, i8** %7, align 8
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = load i8*, i8** %7, align 8
  call void @_efree(i8* %42)
  br label %43

43:                                               ; preds = %41, %38
  %44 = load %101*, %101** %8, align 8
  %45 = getelementptr inbounds %101, %101* %44, i32 0, i32 0
  %46 = load %52*, %52** %45, align 8
  %47 = load %52**, %52*** %4, align 8
  %48 = load %52*, %52** %47, align 8
  %49 = icmp ne %52* %46, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %43
  %51 = load %101*, %101** %8, align 8
  %52 = getelementptr inbounds %101, %101* %51, i32 0, i32 0
  %53 = load %52*, %52** %52, align 8
  %54 = load %52**, %52*** %4, align 8
  store %52* %53, %52** %54, align 8
  br label %55

55:                                               ; preds = %50, %43
  %56 = load %101*, %101** %8, align 8
  %57 = call i32 @phar_entry_delref(%101* %56)
  %58 = load %52**, %52*** %4, align 8
  %59 = load %52*, %52** %58, align 8
  %60 = call i32 @phar_flush(%52* %59, i8* null, i64 0, i32 0, i8** %7)
  %61 = load i8*, i8** %7, align 8
  %62 = icmp ne i8* %61, null
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = load %3*, %3** @3, align 8
  %65 = load i8*, i8** %7, align 8
  %66 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %64, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %65)
  %67 = load i8*, i8** %7, align 8
  call void @_efree(i8* %67)
  br label %68

68:                                               ; preds = %63, %55
  br label %69

69:                                               ; preds = %68
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %69, %37
  %71 = bitcast %101** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #13
  %72 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #13
  %73 = load i32, i32* %9, align 4
  switch i32 %73, label %75 [
    i32 0, label %74
    i32 1, label %74
  ]

74:                                               ; preds = %70, %70
  ret void

75:                                               ; preds = %70
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_addFile(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %34*, align 8
  %10 = alloca %4, align 8
  %11 = alloca %4*, align 8
  %12 = alloca %99*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  store i8* null, i8** %6, align 8
  %17 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  store i64 0, i64* %8, align 8
  %19 = bitcast %34** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %20) #13
  %21 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %23*, %23** %3, align 8
  %23 = getelementptr inbounds %23, %23* %22, i32 0, i32 4
  %24 = call zeroext i8 @444(%4* %23)
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 8
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = load %23*, %23** %3, align 8
  %29 = getelementptr inbounds %23, %23* %28, i32 0, i32 4
  br label %31

30:                                               ; preds = %2
  br label %31

31:                                               ; preds = %30, %27
  %32 = phi %4* [ %29, %27 ], [ null, %30 ]
  store %4* %32, %4** %11, align 8
  %33 = bitcast %99** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = load %4*, %4** %11, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %21**
  %37 = load %21*, %21** %36, align 8
  %38 = bitcast %21* %37 to i8*
  %39 = load %4*, %4** %11, align 8
  %40 = getelementptr inbounds %4, %4* %39, i32 0, i32 0
  %41 = bitcast %5* %40 to %21**
  %42 = load %21*, %21** %41, align 8
  %43 = getelementptr inbounds %21, %21* %42, i32 0, i32 3
  %44 = load %22*, %22** %43, align 8
  %45 = getelementptr inbounds %22, %22* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = sub i64 0, %47
  %49 = getelementptr inbounds i8, i8* %38, i64 %48
  %50 = bitcast i8* %49 to %99*
  store %99* %50, %99** %12, align 8
  %51 = load %99*, %99** %12, align 8
  %52 = bitcast %99* %51 to %52**
  %53 = load %52*, %52** %52, align 8
  %54 = icmp ne %52* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %31
  %56 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %57 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %56, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %13, align 4
  br label %134

58:                                               ; preds = %31
  %59 = load %23*, %23** %3, align 8
  %60 = getelementptr inbounds %23, %23* %59, i32 0, i32 4
  %61 = getelementptr inbounds %4, %4* %60, i32 0, i32 2
  %62 = bitcast %7* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @77, i32 0, i32 0), i8** %5, i64* %7, i8** %6, i64* %8)
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %67

66:                                               ; preds = %58
  store i32 1, i32* %13, align 4
  br label %134

67:                                               ; preds = %58
  %68 = load i64, i64* %7, align 8
  %69 = icmp ugt i64 %68, 2147483647
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 0)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %67
  br label %77

77:                                               ; preds = %76
  %78 = load %4*, %4** %4, align 8
  %79 = getelementptr inbounds %4, %4* %78, i32 0, i32 1
  %80 = bitcast %6* %79 to i32*
  store i32 2, i32* %80, align 8
  br label %81

81:                                               ; preds = %77
  br label %82

82:                                               ; preds = %81
  store i32 1, i32* %13, align 4
  br label %134

83:                                               ; preds = %67
  %84 = load i8*, i8** %5, align 8
  %85 = call i8* @strstr(i8* %84, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @153, i32 0, i32 0)) #14
  %86 = icmp ne i8* %85, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = load i8*, i8** %5, align 8
  %89 = call i32 @php_check_open_basedir(i8* %88)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %93 = load i8*, i8** %5, align 8
  %94 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %92, i64 0, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @154, i32 0, i32 0), i8* %93)
  store i32 1, i32* %13, align 4
  br label %134

95:                                               ; preds = %87, %83
  %96 = load i8*, i8** %5, align 8
  %97 = call %34* @_php_stream_open_wrapper_ex(i8* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i32 0, i32 0), i32 0, %0** null, %46* null)
  store %34* %97, %34** %9, align 8
  %98 = icmp ne %34* %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %101 = load i8*, i8** %5, align 8
  %102 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %100, i64 0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @156, i32 0, i32 0), i8* %101)
  store i32 1, i32* %13, align 4
  br label %134

103:                                              ; preds = %95
  %104 = load i8*, i8** %6, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = load i8*, i8** %6, align 8
  store i8* %107, i8** %5, align 8
  %108 = load i64, i64* %8, align 8
  store i64 %108, i64* %7, align 8
  br label %109

109:                                              ; preds = %106, %103
  br label %110

110:                                              ; preds = %109
  %111 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %111) #13
  store %4* %10, %4** %14, align 8
  %112 = load %34*, %34** %9, align 8
  %113 = getelementptr inbounds %34, %34* %112, i32 0, i32 11
  %114 = load %50*, %50** %113, align 8
  %115 = load %4*, %4** %14, align 8
  %116 = getelementptr inbounds %4, %4* %115, i32 0, i32 0
  %117 = bitcast %5* %116 to %50**
  store %50* %114, %50** %117, align 8
  %118 = load %4*, %4** %14, align 8
  %119 = getelementptr inbounds %4, %4* %118, i32 0, i32 1
  %120 = bitcast %6* %119 to i32*
  store i32 1033, i32* %120, align 8
  %121 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #13
  br label %122

122:                                              ; preds = %110
  br label %123

123:                                              ; preds = %122
  %124 = load %34*, %34** %9, align 8
  %125 = getelementptr inbounds %34, %34* %124, i32 0, i32 7
  %126 = load i8, i8* %125, align 8
  %127 = and i8 %126, -17
  %128 = or i8 %127, 16
  store i8 %128, i8* %125, align 8
  %129 = load %99*, %99** %12, align 8
  %130 = bitcast %99* %129 to %52**
  %131 = load i8*, i8** %5, align 8
  %132 = load i64, i64* %7, align 8
  %133 = trunc i64 %132 to i32
  call void @462(%52** %130, i8* %131, i32 %133, i8* null, i64 0, %4* %10)
  call void @_zval_ptr_dtor(%4* %10)
  store i32 0, i32* %13, align 4
  br label %134

134:                                              ; preds = %123, %99, %91, %82, %66, %55
  %135 = bitcast %99** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #13
  %136 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #13
  %137 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %137) #13
  %138 = bitcast %34** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #13
  %139 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #13
  %140 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #13
  %141 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  %142 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #13
  %143 = load i32, i32* %13, align 4
  switch i32 %143, label %145 [
    i32 0, label %144
    i32 1, label %144
  ]

144:                                              ; preds = %134, %134
  ret void

145:                                              ; preds = %134
  unreachable
}

declare dso_local i32 @php_check_open_basedir(i8*) #2

declare dso_local %34* @_php_stream_open_wrapper_ex(i8*, i8*, i32, %0**, %46*) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_addFromString(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %99*, align 8
  %11 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  %19 = call zeroext i8 @444(%4* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi %4* [ %24, %22 ], [ null, %25 ]
  store %4* %27, %4** %9, align 8
  %28 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = load %4*, %4** %9, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = bitcast %21* %32 to i8*
  %34 = load %4*, %4** %9, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %21**
  %37 = load %21*, %21** %36, align 8
  %38 = getelementptr inbounds %21, %21* %37, i32 0, i32 3
  %39 = load %22*, %22** %38, align 8
  %40 = getelementptr inbounds %22, %22* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = bitcast i8* %44 to %99*
  store %99* %45, %99** %10, align 8
  %46 = load %99*, %99** %10, align 8
  %47 = bitcast %99* %46 to %52**
  %48 = load %52*, %52** %47, align 8
  %49 = icmp ne %52* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %26
  %51 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %52 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %51, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %86

53:                                               ; preds = %26
  %54 = load %23*, %23** %3, align 8
  %55 = getelementptr inbounds %23, %23* %54, i32 0, i32 4
  %56 = getelementptr inbounds %4, %4* %55, i32 0, i32 2
  %57 = bitcast %7* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @148, i32 0, i32 0), i8** %5, i64* %7, i8** %6, i64* %8)
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %62

61:                                               ; preds = %53
  store i32 1, i32* %11, align 4
  br label %86

62:                                               ; preds = %53
  %63 = load i64, i64* %7, align 8
  %64 = icmp ugt i64 %63, 2147483647
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %62
  br label %72

72:                                               ; preds = %71
  %73 = load %4*, %4** %4, align 8
  %74 = getelementptr inbounds %4, %4* %73, i32 0, i32 1
  %75 = bitcast %6* %74 to i32*
  store i32 2, i32* %75, align 8
  br label %76

76:                                               ; preds = %72
  br label %77

77:                                               ; preds = %76
  store i32 1, i32* %11, align 4
  br label %86

78:                                               ; preds = %62
  %79 = load %99*, %99** %10, align 8
  %80 = bitcast %99* %79 to %52**
  %81 = load i8*, i8** %5, align 8
  %82 = load i64, i64* %7, align 8
  %83 = trunc i64 %82 to i32
  %84 = load i8*, i8** %6, align 8
  %85 = load i64, i64* %8, align 8
  call void @462(%52** %80, i8* %81, i32 %83, i8* %84, i64 %85, %4* null)
  store i32 0, i32* %11, align 4
  br label %86

86:                                               ; preds = %78, %77, %61, %50
  %87 = bitcast %99** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #13
  %88 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #13
  %89 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  %90 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #13
  %91 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #13
  %92 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #13
  %93 = load i32, i32* %11, align 4
  switch i32 %93, label %95 [
    i32 0, label %94
    i32 1, label %94
  ]

94:                                               ; preds = %86, %86
  ret void

95:                                               ; preds = %86
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getStub(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %34*, align 8
  %8 = alloca %40*, align 8
  %9 = alloca %93*, align 8
  %10 = alloca %4*, align 8
  %11 = alloca %99*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca %4*, align 8
  %15 = alloca %0*, align 8
  %16 = alloca %4*, align 8
  %17 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %18 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast %40** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  store %40* null, %40** %8, align 8
  %22 = bitcast %93** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %23*, %23** %3, align 8
  %25 = getelementptr inbounds %23, %23* %24, i32 0, i32 4
  %26 = call zeroext i8 @444(%4* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = load %23*, %23** %3, align 8
  %31 = getelementptr inbounds %23, %23* %30, i32 0, i32 4
  br label %33

32:                                               ; preds = %2
  br label %33

33:                                               ; preds = %32, %29
  %34 = phi %4* [ %31, %29 ], [ null, %32 ]
  store %4* %34, %4** %10, align 8
  %35 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = load %4*, %4** %10, align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 0
  %38 = bitcast %5* %37 to %21**
  %39 = load %21*, %21** %38, align 8
  %40 = bitcast %21* %39 to i8*
  %41 = load %4*, %4** %10, align 8
  %42 = getelementptr inbounds %4, %4* %41, i32 0, i32 0
  %43 = bitcast %5* %42 to %21**
  %44 = load %21*, %21** %43, align 8
  %45 = getelementptr inbounds %21, %21* %44, i32 0, i32 3
  %46 = load %22*, %22** %45, align 8
  %47 = getelementptr inbounds %22, %22* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = sub i64 0, %49
  %51 = getelementptr inbounds i8, i8* %40, i64 %50
  %52 = bitcast i8* %51 to %99*
  store %99* %52, %99** %11, align 8
  %53 = load %99*, %99** %11, align 8
  %54 = bitcast %99* %53 to %52**
  %55 = load %52*, %52** %54, align 8
  %56 = icmp ne %52* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %33
  %58 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %59 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %58, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %359

60:                                               ; preds = %33
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 1)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %60
  br label %81

74:                                               ; preds = %60
  %75 = load %23*, %23** %3, align 8
  %76 = getelementptr inbounds %23, %23* %75, i32 0, i32 4
  %77 = getelementptr inbounds %4, %4* %76, i32 0, i32 2
  %78 = bitcast %7* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %79, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %81

81:                                               ; preds = %74, %73
  %82 = phi i32 [ 0, %73 ], [ %80, %74 ]
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  store i32 1, i32* %12, align 4
  br label %359

85:                                               ; preds = %81
  %86 = load %99*, %99** %11, align 8
  %87 = bitcast %99* %86 to %52**
  %88 = load %52*, %52** %87, align 8
  %89 = getelementptr inbounds %52, %52* %88, i32 0, i32 24
  %90 = load i16, i16* %89, align 8
  %91 = lshr i16 %90, 6
  %92 = and i16 %91, 1
  %93 = zext i16 %92 to i32
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %85
  %96 = load %99*, %99** %11, align 8
  %97 = bitcast %99* %96 to %52**
  %98 = load %52*, %52** %97, align 8
  %99 = getelementptr inbounds %52, %52* %98, i32 0, i32 24
  %100 = load i16, i16* %99, align 8
  %101 = lshr i16 %100, 5
  %102 = and i16 %101, 1
  %103 = zext i16 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %235

105:                                              ; preds = %95, %85
  %106 = load %99*, %99** %11, align 8
  %107 = bitcast %99* %106 to %52**
  %108 = load %52*, %52** %107, align 8
  %109 = getelementptr inbounds %52, %52* %108, i32 0, i32 9
  %110 = call i8* @442(%8* %109, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @140, i32 0, i32 0), i64 14)
  %111 = bitcast i8* %110 to %93*
  store %93* %111, %93** %9, align 8
  %112 = icmp ne %93* null, %111
  br i1 %112, label %113, label %215

113:                                              ; preds = %105
  %114 = load %99*, %99** %11, align 8
  %115 = bitcast %99* %114 to %52**
  %116 = load %52*, %52** %115, align 8
  %117 = getelementptr inbounds %52, %52* %116, i32 0, i32 15
  %118 = load %34*, %34** %117, align 8
  %119 = icmp ne %34* %118, null
  br i1 %119, label %120, label %142

120:                                              ; preds = %113
  %121 = load %99*, %99** %11, align 8
  %122 = bitcast %99* %121 to %52**
  %123 = load %52*, %52** %122, align 8
  %124 = getelementptr inbounds %52, %52* %123, i32 0, i32 24
  %125 = load i16, i16* %124, align 8
  %126 = lshr i16 %125, 3
  %127 = and i16 %126, 1
  %128 = zext i16 %127 to i32
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %142, label %130

130:                                              ; preds = %120
  %131 = load %93*, %93** %9, align 8
  %132 = getelementptr inbounds %93, %93* %131, i32 0, i32 4
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 61440
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %142, label %136

136:                                              ; preds = %130
  %137 = load %99*, %99** %11, align 8
  %138 = bitcast %99* %137 to %52**
  %139 = load %52*, %52** %138, align 8
  %140 = getelementptr inbounds %52, %52* %139, i32 0, i32 15
  %141 = load %34*, %34** %140, align 8
  store %34* %141, %34** %7, align 8
  br label %199

142:                                              ; preds = %130, %120, %113
  %143 = load %99*, %99** %11, align 8
  %144 = bitcast %99* %143 to %52**
  %145 = load %52*, %52** %144, align 8
  %146 = getelementptr inbounds %52, %52* %145, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = call %34* @_php_stream_open_wrapper_ex(i8* %147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i32 0, i32 0), i32 0, %0** null, %46* null)
  store %34* %148, %34** %7, align 8
  %149 = icmp ne %34* %148, null
  br i1 %149, label %158, label %150

150:                                              ; preds = %142
  %151 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %152 = load %99*, %99** %11, align 8
  %153 = bitcast %99* %152 to %52**
  %154 = load %52*, %52** %153, align 8
  %155 = getelementptr inbounds %52, %52* %154, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %151, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @157, i32 0, i32 0), i8* %156)
  store i32 1, i32* %12, align 4
  br label %359

158:                                              ; preds = %142
  %159 = load %93*, %93** %9, align 8
  %160 = getelementptr inbounds %93, %93* %159, i32 0, i32 4
  %161 = load i32, i32* %160, align 8
  %162 = and i32 %161, 61440
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %198

164:                                              ; preds = %158
  %165 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165) #13
  %166 = load %93*, %93** %9, align 8
  %167 = call i8* @phar_decompress_filter(%93* %166, i32 0)
  store i8* %167, i8** %13, align 8
  %168 = icmp ne i8* %167, null
  br i1 %168, label %169, label %176

169:                                              ; preds = %164
  %170 = load i8*, i8** %13, align 8
  %171 = load %34*, %34** %7, align 8
  %172 = getelementptr inbounds %34, %34* %171, i32 0, i32 7
  %173 = load i8, i8* %172, align 8
  %174 = and i8 %173, 1
  %175 = call %40* @php_stream_filter_create(i8* %170, %4* null, i8 zeroext %174)
  store %40* %175, %40** %8, align 8
  br label %177

176:                                              ; preds = %164
  store %40* null, %40** %8, align 8
  br label %177

177:                                              ; preds = %176, %169
  %178 = load %40*, %40** %8, align 8
  %179 = icmp ne %40* %178, null
  br i1 %179, label %190, label %180

180:                                              ; preds = %177
  %181 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %182 = load %99*, %99** %11, align 8
  %183 = bitcast %99* %182 to %52**
  %184 = load %52*, %52** %183, align 8
  %185 = getelementptr inbounds %52, %52* %184, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = load %93*, %93** %9, align 8
  %188 = call i8* @phar_decompress_filter(%93* %187, i32 1)
  %189 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %181, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @158, i32 0, i32 0), i8* %186, i8* %188)
  store i32 1, i32* %12, align 4
  br label %194

190:                                              ; preds = %177
  %191 = load %34*, %34** %7, align 8
  %192 = getelementptr inbounds %34, %34* %191, i32 0, i32 2
  %193 = load %40*, %40** %8, align 8
  call void @_php_stream_filter_append(%39* %192, %40* %193)
  store i32 0, i32* %12, align 4
  br label %194

194:                                              ; preds = %190, %180
  %195 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #13
  %196 = load i32, i32* %12, align 4
  switch i32 %196, label %359 [
    i32 0, label %197
  ]

197:                                              ; preds = %194
  br label %198

198:                                              ; preds = %197, %158
  br label %199

199:                                              ; preds = %198, %136
  %200 = load %34*, %34** %7, align 8
  %201 = icmp ne %34* %200, null
  br i1 %201, label %205, label %202

202:                                              ; preds = %199
  %203 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %204 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %203, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @159, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %359

205:                                              ; preds = %199
  %206 = load %34*, %34** %7, align 8
  %207 = load %93*, %93** %9, align 8
  %208 = getelementptr inbounds %93, %93* %207, i32 0, i32 11
  %209 = load i64, i64* %208, align 8
  %210 = call i32 @_php_stream_seek(%34* %206, i64 %209, i32 0)
  %211 = load %93*, %93** %9, align 8
  %212 = getelementptr inbounds %93, %93* %211, i32 0, i32 0
  %213 = load i32, i32* %212, align 8
  %214 = zext i32 %213 to i64
  store i64 %214, i64* %5, align 8
  br label %279

215:                                              ; preds = %105
  br label %216

216:                                              ; preds = %215
  br label %217

217:                                              ; preds = %216
  %218 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %218) #13
  %219 = load %4*, %4** %4, align 8
  store %4* %219, %4** %14, align 8
  %220 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %220) #13
  %221 = load %0*, %0** @zend_empty_string, align 8
  store %0* %221, %0** %15, align 8
  %222 = load %0*, %0** %15, align 8
  %223 = load %4*, %4** %14, align 8
  %224 = getelementptr inbounds %4, %4* %223, i32 0, i32 0
  %225 = bitcast %5* %224 to %0**
  store %0* %222, %0** %225, align 8
  %226 = load %4*, %4** %14, align 8
  %227 = getelementptr inbounds %4, %4* %226, i32 0, i32 1
  %228 = bitcast %6* %227 to i32*
  store i32 6, i32* %228, align 8
  %229 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #13
  %230 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #13
  br label %231

231:                                              ; preds = %217
  br label %232

232:                                              ; preds = %231
  br label %233

233:                                              ; preds = %232
  br label %234

234:                                              ; preds = %233
  store i32 1, i32* %12, align 4
  br label %359

235:                                              ; preds = %95
  %236 = load %99*, %99** %11, align 8
  %237 = bitcast %99* %236 to %52**
  %238 = load %52*, %52** %237, align 8
  %239 = getelementptr inbounds %52, %52* %238, i32 0, i32 8
  %240 = load i64, i64* %239, align 8
  store i64 %240, i64* %5, align 8
  %241 = load %99*, %99** %11, align 8
  %242 = bitcast %99* %241 to %52**
  %243 = load %52*, %52** %242, align 8
  %244 = getelementptr inbounds %52, %52* %243, i32 0, i32 15
  %245 = load %34*, %34** %244, align 8
  %246 = icmp ne %34* %245, null
  br i1 %246, label %247, label %263

247:                                              ; preds = %235
  %248 = load %99*, %99** %11, align 8
  %249 = bitcast %99* %248 to %52**
  %250 = load %52*, %52** %249, align 8
  %251 = getelementptr inbounds %52, %52* %250, i32 0, i32 24
  %252 = load i16, i16* %251, align 8
  %253 = lshr i16 %252, 3
  %254 = and i16 %253, 1
  %255 = zext i16 %254 to i32
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %263, label %257

257:                                              ; preds = %247
  %258 = load %99*, %99** %11, align 8
  %259 = bitcast %99* %258 to %52**
  %260 = load %52*, %52** %259, align 8
  %261 = getelementptr inbounds %52, %52* %260, i32 0, i32 15
  %262 = load %34*, %34** %261, align 8
  store %34* %262, %34** %7, align 8
  br label %270

263:                                              ; preds = %247, %235
  %264 = load %99*, %99** %11, align 8
  %265 = bitcast %99* %264 to %52**
  %266 = load %52*, %52** %265, align 8
  %267 = getelementptr inbounds %52, %52* %266, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = call %34* @_php_stream_open_wrapper_ex(i8* %268, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i32 0, i32 0), i32 0, %0** null, %46* null)
  store %34* %269, %34** %7, align 8
  br label %270

270:                                              ; preds = %263, %257
  %271 = load %34*, %34** %7, align 8
  %272 = icmp ne %34* %271, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %275 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %274, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @159, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  br label %359

276:                                              ; preds = %270
  %277 = load %34*, %34** %7, align 8
  %278 = call i32 @_php_stream_seek(%34* %277, i64 0, i32 0)
  br label %279

279:                                              ; preds = %276, %205
  %280 = load i64, i64* %5, align 8
  %281 = call %0* @464(i64 %280, i32 0)
  store %0* %281, %0** %6, align 8
  %282 = load i64, i64* %5, align 8
  %283 = load %34*, %34** %7, align 8
  %284 = load %0*, %0** %6, align 8
  %285 = getelementptr inbounds %0, %0* %284, i32 0, i32 3
  %286 = getelementptr inbounds [1 x i8], [1 x i8]* %285, i32 0, i32 0
  %287 = load i64, i64* %5, align 8
  %288 = call i64 @_php_stream_read(%34* %283, i8* %286, i64 %287)
  %289 = icmp ne i64 %282, %288
  br i1 %289, label %290, label %305

290:                                              ; preds = %279
  %291 = load %34*, %34** %7, align 8
  %292 = load %99*, %99** %11, align 8
  %293 = bitcast %99* %292 to %52**
  %294 = load %52*, %52** %293, align 8
  %295 = getelementptr inbounds %52, %52* %294, i32 0, i32 15
  %296 = load %34*, %34** %295, align 8
  %297 = icmp ne %34* %291, %296
  br i1 %297, label %298, label %301

298:                                              ; preds = %290
  %299 = load %34*, %34** %7, align 8
  %300 = call i32 @_php_stream_free(%34* %299, i32 3)
  br label %301

301:                                              ; preds = %298, %290
  %302 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %303 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %302, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @159, i32 0, i32 0))
  %304 = load %0*, %0** %6, align 8
  call void @465(%0* %304)
  store i32 1, i32* %12, align 4
  br label %359

305:                                              ; preds = %279
  %306 = load %40*, %40** %8, align 8
  %307 = icmp ne %40* %306, null
  br i1 %307, label %308, label %313

308:                                              ; preds = %305
  %309 = load %40*, %40** %8, align 8
  %310 = call i32 @_php_stream_filter_flush(%40* %309, i32 1)
  %311 = load %40*, %40** %8, align 8
  %312 = call %40* @php_stream_filter_remove(%40* %311, i32 1)
  br label %313

313:                                              ; preds = %308, %305
  %314 = load %34*, %34** %7, align 8
  %315 = load %99*, %99** %11, align 8
  %316 = bitcast %99* %315 to %52**
  %317 = load %52*, %52** %316, align 8
  %318 = getelementptr inbounds %52, %52* %317, i32 0, i32 15
  %319 = load %34*, %34** %318, align 8
  %320 = icmp ne %34* %314, %319
  br i1 %320, label %321, label %324

321:                                              ; preds = %313
  %322 = load %34*, %34** %7, align 8
  %323 = call i32 @_php_stream_free(%34* %322, i32 3)
  br label %324

324:                                              ; preds = %321, %313
  %325 = load %0*, %0** %6, align 8
  %326 = getelementptr inbounds %0, %0* %325, i32 0, i32 3
  %327 = load i64, i64* %5, align 8
  %328 = getelementptr inbounds [1 x i8], [1 x i8]* %326, i64 0, i64 %327
  store i8 0, i8* %328, align 1
  %329 = load i64, i64* %5, align 8
  %330 = load %0*, %0** %6, align 8
  %331 = getelementptr inbounds %0, %0* %330, i32 0, i32 2
  store i64 %329, i64* %331, align 8
  br label %332

332:                                              ; preds = %324
  %333 = bitcast %4** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %333) #13
  %334 = load %4*, %4** %4, align 8
  store %4* %334, %4** %16, align 8
  %335 = bitcast %0** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %335) #13
  %336 = load %0*, %0** %6, align 8
  store %0* %336, %0** %17, align 8
  %337 = load %0*, %0** %17, align 8
  %338 = load %4*, %4** %16, align 8
  %339 = getelementptr inbounds %4, %4* %338, i32 0, i32 0
  %340 = bitcast %5* %339 to %0**
  store %0* %337, %0** %340, align 8
  %341 = load %0*, %0** %17, align 8
  %342 = getelementptr inbounds %0, %0* %341, i32 0, i32 0
  %343 = getelementptr inbounds %1, %1* %342, i32 0, i32 1
  %344 = bitcast %2* %343 to %102*
  %345 = getelementptr inbounds %102, %102* %344, i32 0, i32 1
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = and i32 %347, 2
  %349 = icmp ne i32 %348, 0
  %350 = zext i1 %349 to i64
  %351 = select i1 %349, i32 6, i32 5126
  %352 = load %4*, %4** %16, align 8
  %353 = getelementptr inbounds %4, %4* %352, i32 0, i32 1
  %354 = bitcast %6* %353 to i32*
  store i32 %351, i32* %354, align 8
  %355 = bitcast %0** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %355) #13
  %356 = bitcast %4** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %356) #13
  br label %357

357:                                              ; preds = %332
  br label %358

358:                                              ; preds = %357
  store i32 0, i32* %12, align 4
  br label %359

359:                                              ; preds = %358, %301, %273, %234, %202, %194, %150, %84, %57
  %360 = bitcast %99** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %360) #13
  %361 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %361) #13
  %362 = bitcast %93** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %362) #13
  %363 = bitcast %40** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %363) #13
  %364 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #13
  %365 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %365) #13
  %366 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366) #13
  %367 = load i32, i32* %12, align 4
  switch i32 %367, label %369 [
    i32 0, label %368
    i32 1, label %368
  ]

368:                                              ; preds = %359, %359
  ret void

369:                                              ; preds = %359
  unreachable
}

declare dso_local i8* @phar_decompress_filter(%93*, i32) #2

declare dso_local %40* @php_stream_filter_create(i8*, %4*, i8 zeroext) #2

declare dso_local void @_php_stream_filter_append(%39*, %40*) #2

declare dso_local i32 @_php_stream_seek(%34*, i64, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @464(i64 %0, i32 %1) #4 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %0*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #13
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %10
  %12 = add i64 %11, 1
  %13 = add i64 %12, 8
  %14 = sub i64 %13, 1
  %15 = and i64 %14, -8
  %16 = call noalias i8* @__zend_malloc(i64 %15) #15
  br label %25

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %18
  %20 = add i64 %19, 1
  %21 = add i64 %20, 8
  %22 = sub i64 %21, 1
  %23 = and i64 %22, -8
  %24 = call noalias i8* @_emalloc(i64 %23) #15
  br label %25

25:                                               ; preds = %17, %9
  %26 = phi i8* [ %16, %9 ], [ %24, %17 ]
  %27 = bitcast i8* %26 to %0*
  store %0* %27, %0** %5, align 8
  %28 = load %0*, %0** %5, align 8
  %29 = getelementptr inbounds %0, %0* %28, i32 0, i32 0
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = shl i32 %34, 8
  %36 = or i32 6, %35
  %37 = load %0*, %0** %5, align 8
  %38 = getelementptr inbounds %0, %0* %37, i32 0, i32 0
  %39 = getelementptr inbounds %1, %1* %38, i32 0, i32 1
  %40 = bitcast %2* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = load %0*, %0** %5, align 8
  call void @477(%0* %41)
  %42 = load i64, i64* %3, align 8
  %43 = load %0*, %0** %5, align 8
  %44 = getelementptr inbounds %0, %0* %43, i32 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = load %0*, %0** %5, align 8
  %46 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #13
  ret %0* %45
}

declare dso_local i64 @_php_stream_read(%34*, i8*, i64) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @465(%0* %0) #4 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 1
  %6 = bitcast %2* %5 to %102*
  %7 = getelementptr inbounds %102, %102* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = load %0*, %0** %2, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 0
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = load %0*, %0** %2, align 8
  %21 = getelementptr inbounds %0, %0* %20, i32 0, i32 0
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 1
  %23 = bitcast %2* %22 to %102*
  %24 = getelementptr inbounds %102, %102* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %0*, %0** %2, align 8
  %31 = bitcast %0* %30 to i8*
  call void @free(i8* %31) #13
  br label %35

32:                                               ; preds = %19
  %33 = load %0*, %0** %2, align 8
  %34 = bitcast %0* %33 to i8*
  call void @_efree(i8* %34)
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %12
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

declare dso_local i32 @_php_stream_filter_flush(%40*, i32) #2

declare dso_local %40* @php_stream_filter_remove(%40*, i32) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_hasMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %8 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %23*, %23** %3, align 8
  %10 = getelementptr inbounds %23, %23* %9, i32 0, i32 4
  %11 = call zeroext i8 @444(%4* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %4* [ %16, %14 ], [ null, %17 ]
  store %4* %19, %4** %5, align 8
  %20 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %4*, %4** %5, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %21**
  %24 = load %21*, %21** %23, align 8
  %25 = bitcast %21* %24 to i8*
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = getelementptr inbounds %21, %21* %29, i32 0, i32 3
  %31 = load %22*, %22** %30, align 8
  %32 = getelementptr inbounds %22, %22* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 %35
  %37 = bitcast i8* %36 to %99*
  store %99* %37, %99** %6, align 8
  %38 = load %99*, %99** %6, align 8
  %39 = bitcast %99* %38 to %52**
  %40 = load %52*, %52** %39, align 8
  %41 = icmp ne %52* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %18
  %43 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %44 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %43, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %61

45:                                               ; preds = %18
  br label %46

46:                                               ; preds = %45
  %47 = load %99*, %99** %6, align 8
  %48 = bitcast %99* %47 to %52**
  %49 = load %52*, %52** %48, align 8
  %50 = getelementptr inbounds %52, %52* %49, i32 0, i32 21
  %51 = call zeroext i8 @444(%4* %50)
  %52 = zext i8 %51 to i32
  %53 = icmp ne i32 %52, 0
  %54 = zext i1 %53 to i64
  %55 = select i1 %53, i32 3, i32 2
  %56 = load %4*, %4** %4, align 8
  %57 = getelementptr inbounds %4, %4* %56, i32 0, i32 1
  %58 = bitcast %6* %57 to i32*
  store i32 %55, i32* %58, align 8
  br label %59

59:                                               ; preds = %46
  br label %60

60:                                               ; preds = %59
  store i32 1, i32* %7, align 4
  br label %61

61:                                               ; preds = %60, %42
  %62 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #13
  %63 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_getMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %99*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %4*, align 8
  %11 = alloca %96*, align 8
  %12 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %13 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  %16 = call zeroext i8 @444(%4* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 8
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = load %23*, %23** %3, align 8
  %21 = getelementptr inbounds %23, %23* %20, i32 0, i32 4
  br label %23

22:                                               ; preds = %2
  br label %23

23:                                               ; preds = %22, %19
  %24 = phi %4* [ %21, %19 ], [ null, %22 ]
  store %4* %24, %4** %5, align 8
  %25 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = bitcast %21* %29 to i8*
  %31 = load %4*, %4** %5, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to %21**
  %34 = load %21*, %21** %33, align 8
  %35 = getelementptr inbounds %21, %21* %34, i32 0, i32 3
  %36 = load %22*, %22** %35, align 8
  %37 = getelementptr inbounds %22, %22* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = sub i64 0, %39
  %41 = getelementptr inbounds i8, i8* %30, i64 %40
  %42 = bitcast i8* %41 to %99*
  store %99* %42, %99** %6, align 8
  %43 = load %99*, %99** %6, align 8
  %44 = bitcast %99* %43 to %52**
  %45 = load %52*, %52** %44, align 8
  %46 = icmp ne %52* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %23
  %48 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %49 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %48, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %166

50:                                               ; preds = %23
  %51 = load %23*, %23** %3, align 8
  %52 = getelementptr inbounds %23, %23* %51, i32 0, i32 4
  %53 = getelementptr inbounds %4, %4* %52, i32 0, i32 2
  %54 = bitcast %7* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 1)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %50
  br label %71

64:                                               ; preds = %50
  %65 = load %23*, %23** %3, align 8
  %66 = getelementptr inbounds %23, %23* %65, i32 0, i32 4
  %67 = getelementptr inbounds %4, %4* %66, i32 0, i32 2
  %68 = bitcast %7* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %69, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %71

71:                                               ; preds = %64, %63
  %72 = phi i32 [ 0, %63 ], [ %70, %64 ]
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  store i32 1, i32* %7, align 4
  br label %166

75:                                               ; preds = %71
  %76 = load %99*, %99** %6, align 8
  %77 = bitcast %99* %76 to %52**
  %78 = load %52*, %52** %77, align 8
  %79 = getelementptr inbounds %52, %52* %78, i32 0, i32 21
  %80 = call zeroext i8 @444(%4* %79)
  %81 = zext i8 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %165

83:                                               ; preds = %75
  %84 = load %99*, %99** %6, align 8
  %85 = bitcast %99* %84 to %52**
  %86 = load %52*, %52** %85, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 24
  %88 = load i16, i16* %87, align 8
  %89 = lshr i16 %88, 8
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %118

93:                                               ; preds = %83
  %94 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94) #13
  %95 = load %99*, %99** %6, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 21
  %99 = getelementptr inbounds %4, %4* %98, i32 0, i32 0
  %100 = bitcast %5* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = load %99*, %99** %6, align 8
  %103 = bitcast %99* %102 to %52**
  %104 = load %52*, %52** %103, align 8
  %105 = getelementptr inbounds %52, %52* %104, i32 0, i32 22
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = call noalias i8* @_estrndup(i8* %101, i64 %107)
  store i8* %108, i8** %8, align 8
  %109 = load %4*, %4** %4, align 8
  %110 = load %99*, %99** %6, align 8
  %111 = bitcast %99* %110 to %52**
  %112 = load %52*, %52** %111, align 8
  %113 = getelementptr inbounds %52, %52* %112, i32 0, i32 22
  %114 = load i32, i32* %113, align 8
  %115 = call i32 @phar_parse_metadata(i8** %8, %4* %109, i32 %114)
  %116 = load i8*, i8** %8, align 8
  call void @_efree(i8* %116)
  %117 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #13
  br label %164

118:                                              ; preds = %83
  br label %119

119:                                              ; preds = %118
  %120 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %120) #13
  %121 = load %4*, %4** %4, align 8
  store %4* %121, %4** %9, align 8
  %122 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %122) #13
  %123 = load %99*, %99** %6, align 8
  %124 = bitcast %99* %123 to %52**
  %125 = load %52*, %52** %124, align 8
  %126 = getelementptr inbounds %52, %52* %125, i32 0, i32 21
  store %4* %126, %4** %10, align 8
  %127 = bitcast %96** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #13
  %128 = load %4*, %4** %10, align 8
  %129 = getelementptr inbounds %4, %4* %128, i32 0, i32 0
  %130 = bitcast %5* %129 to %96**
  %131 = load %96*, %96** %130, align 8
  store %96* %131, %96** %11, align 8
  %132 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %132) #13
  %133 = load %4*, %4** %10, align 8
  %134 = getelementptr inbounds %4, %4* %133, i32 0, i32 1
  %135 = bitcast %6* %134 to i32*
  %136 = load i32, i32* %135, align 8
  store i32 %136, i32* %12, align 4
  br label %137

137:                                              ; preds = %119
  %138 = load %96*, %96** %11, align 8
  %139 = load %4*, %4** %9, align 8
  %140 = getelementptr inbounds %4, %4* %139, i32 0, i32 0
  %141 = bitcast %5* %140 to %96**
  store %96* %138, %96** %141, align 8
  %142 = load i32, i32* %12, align 4
  %143 = load %4*, %4** %9, align 8
  %144 = getelementptr inbounds %4, %4* %143, i32 0, i32 1
  %145 = bitcast %6* %144 to i32*
  store i32 %142, i32* %145, align 8
  br label %146

146:                                              ; preds = %137
  br label %147

147:                                              ; preds = %146
  %148 = load i32, i32* %12, align 4
  %149 = and i32 %148, 1024
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = load %96*, %96** %11, align 8
  %153 = getelementptr inbounds %96, %96* %152, i32 0, i32 0
  %154 = getelementptr inbounds %1, %1* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %154, align 4
  br label %157

157:                                              ; preds = %151, %147
  %158 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %158) #13
  %159 = bitcast %96** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #13
  %160 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #13
  %161 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #13
  br label %162

162:                                              ; preds = %157
  br label %163

163:                                              ; preds = %162
  br label %164

164:                                              ; preds = %163, %93
  br label %165

165:                                              ; preds = %164, %75
  store i32 0, i32* %7, align 4
  br label %166

166:                                              ; preds = %165, %74, %47
  %167 = bitcast %99** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #13
  %168 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #13
  %169 = load i32, i32* %7, align 4
  switch i32 %169, label %171 [
    i32 0, label %170
    i32 1, label %170
  ]

170:                                              ; preds = %166, %166
  ret void

171:                                              ; preds = %166
  unreachable
}

declare dso_local i32 @phar_parse_metadata(i8**, %4*, i32) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_setMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %4*, align 8
  %8 = alloca %99*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %4*, align 8
  %11 = alloca %4*, align 8
  %12 = alloca %96*, align 8
  %13 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  %19 = call zeroext i8 @444(%4* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load %23*, %23** %3, align 8
  %24 = getelementptr inbounds %23, %23* %23, i32 0, i32 4
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi %4* [ %24, %22 ], [ null, %25 ]
  store %4* %27, %4** %7, align 8
  %28 = bitcast %99** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = load %4*, %4** %7, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = bitcast %21* %32 to i8*
  %34 = load %4*, %4** %7, align 8
  %35 = getelementptr inbounds %4, %4* %34, i32 0, i32 0
  %36 = bitcast %5* %35 to %21**
  %37 = load %21*, %21** %36, align 8
  %38 = getelementptr inbounds %21, %21* %37, i32 0, i32 3
  %39 = load %22*, %22** %38, align 8
  %40 = getelementptr inbounds %22, %22* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = bitcast i8* %44 to %99*
  store %99* %45, %99** %8, align 8
  %46 = load %99*, %99** %8, align 8
  %47 = bitcast %99* %46 to %52**
  %48 = load %52*, %52** %47, align 8
  %49 = icmp ne %52* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %26
  %51 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %52 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %51, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %188

53:                                               ; preds = %26
  %54 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %69

56:                                               ; preds = %53
  %57 = load %99*, %99** %8, align 8
  %58 = bitcast %99* %57 to %52**
  %59 = load %52*, %52** %58, align 8
  %60 = getelementptr inbounds %52, %52* %59, i32 0, i32 24
  %61 = load i16, i16* %60, align 8
  %62 = lshr i16 %61, 7
  %63 = and i16 %62, 1
  %64 = zext i16 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %56
  %67 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %68 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %67, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @146, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %188

69:                                               ; preds = %56, %53
  %70 = load %23*, %23** %3, align 8
  %71 = getelementptr inbounds %23, %23* %70, i32 0, i32 4
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 2
  %73 = bitcast %7* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @160, i32 0, i32 0), %4** %6)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %78

77:                                               ; preds = %69
  store i32 1, i32* %9, align 4
  br label %188

78:                                               ; preds = %69
  %79 = load %99*, %99** %8, align 8
  %80 = bitcast %99* %79 to %52**
  %81 = load %52*, %52** %80, align 8
  %82 = getelementptr inbounds %52, %52* %81, i32 0, i32 24
  %83 = load i16, i16* %82, align 8
  %84 = lshr i16 %83, 8
  %85 = and i16 %84, 1
  %86 = zext i16 %85 to i32
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %78
  %89 = load %99*, %99** %8, align 8
  %90 = bitcast %99* %89 to %52**
  %91 = call i32 @phar_copy_on_write(%52** %90)
  %92 = icmp eq i32 -1, %91
  br i1 %92, label %93, label %101

93:                                               ; preds = %88
  %94 = load %3*, %3** @3, align 8
  %95 = load %99*, %99** %8, align 8
  %96 = bitcast %99* %95 to %52**
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %94, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %99)
  store i32 1, i32* %9, align 4
  br label %188

101:                                              ; preds = %88, %78
  %102 = load %99*, %99** %8, align 8
  %103 = bitcast %99* %102 to %52**
  %104 = load %52*, %52** %103, align 8
  %105 = getelementptr inbounds %52, %52* %104, i32 0, i32 21
  %106 = call zeroext i8 @444(%4* %105)
  %107 = zext i8 %106 to i32
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %101
  %110 = load %99*, %99** %8, align 8
  %111 = bitcast %99* %110 to %52**
  %112 = load %52*, %52** %111, align 8
  %113 = getelementptr inbounds %52, %52* %112, i32 0, i32 21
  call void @_zval_ptr_dtor(%4* %113)
  br label %114

114:                                              ; preds = %109
  %115 = load %99*, %99** %8, align 8
  %116 = bitcast %99* %115 to %52**
  %117 = load %52*, %52** %116, align 8
  %118 = getelementptr inbounds %52, %52* %117, i32 0, i32 21
  %119 = getelementptr inbounds %4, %4* %118, i32 0, i32 1
  %120 = bitcast %6* %119 to i32*
  store i32 0, i32* %120, align 8
  br label %121

121:                                              ; preds = %114
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122, %101
  br label %124

124:                                              ; preds = %123
  %125 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %125) #13
  %126 = load %99*, %99** %8, align 8
  %127 = bitcast %99* %126 to %52**
  %128 = load %52*, %52** %127, align 8
  %129 = getelementptr inbounds %52, %52* %128, i32 0, i32 21
  store %4* %129, %4** %10, align 8
  %130 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %130) #13
  %131 = load %4*, %4** %6, align 8
  store %4* %131, %4** %11, align 8
  %132 = bitcast %96** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %132) #13
  %133 = load %4*, %4** %11, align 8
  %134 = getelementptr inbounds %4, %4* %133, i32 0, i32 0
  %135 = bitcast %5* %134 to %96**
  %136 = load %96*, %96** %135, align 8
  store %96* %136, %96** %12, align 8
  %137 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %137) #13
  %138 = load %4*, %4** %11, align 8
  %139 = getelementptr inbounds %4, %4* %138, i32 0, i32 1
  %140 = bitcast %6* %139 to i32*
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %13, align 4
  br label %142

142:                                              ; preds = %124
  %143 = load %96*, %96** %12, align 8
  %144 = load %4*, %4** %10, align 8
  %145 = getelementptr inbounds %4, %4* %144, i32 0, i32 0
  %146 = bitcast %5* %145 to %96**
  store %96* %143, %96** %146, align 8
  %147 = load i32, i32* %13, align 4
  %148 = load %4*, %4** %10, align 8
  %149 = getelementptr inbounds %4, %4* %148, i32 0, i32 1
  %150 = bitcast %6* %149 to i32*
  store i32 %147, i32* %150, align 8
  br label %151

151:                                              ; preds = %142
  br label %152

152:                                              ; preds = %151
  %153 = load i32, i32* %13, align 4
  %154 = and i32 %153, 1024
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %152
  %157 = load %96*, %96** %12, align 8
  %158 = getelementptr inbounds %96, %96* %157, i32 0, i32 0
  %159 = getelementptr inbounds %1, %1* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %159, align 4
  br label %162

162:                                              ; preds = %156, %152
  %163 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %163) #13
  %164 = bitcast %96** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #13
  %165 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  %166 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #13
  br label %167

167:                                              ; preds = %162
  br label %168

168:                                              ; preds = %167
  %169 = load %99*, %99** %8, align 8
  %170 = bitcast %99* %169 to %52**
  %171 = load %52*, %52** %170, align 8
  %172 = getelementptr inbounds %52, %52* %171, i32 0, i32 24
  %173 = load i16, i16* %172, align 8
  %174 = and i16 %173, -3
  %175 = or i16 %174, 2
  store i16 %175, i16* %172, align 8
  %176 = load %99*, %99** %8, align 8
  %177 = bitcast %99* %176 to %52**
  %178 = load %52*, %52** %177, align 8
  %179 = call i32 @phar_flush(%52* %178, i8* null, i64 0, i32 0, i8** %5)
  %180 = load i8*, i8** %5, align 8
  %181 = icmp ne i8* %180, null
  br i1 %181, label %182, label %187

182:                                              ; preds = %168
  %183 = load %3*, %3** @3, align 8
  %184 = load i8*, i8** %5, align 8
  %185 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %183, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %184)
  %186 = load i8*, i8** %5, align 8
  call void @_efree(i8* %186)
  br label %187

187:                                              ; preds = %182, %168
  store i32 0, i32* %9, align 4
  br label %188

188:                                              ; preds = %187, %93, %77, %66, %50
  %189 = bitcast %99** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #13
  %190 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = load i32, i32* %9, align 4
  switch i32 %193, label %195 [
    i32 0, label %194
    i32 1, label %194
  ]

194:                                              ; preds = %188, %188
  ret void

195:                                              ; preds = %188
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_delMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %99*, align 8
  %8 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %6, align 8
  %22 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %6, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %6, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %99*
  store %99* %39, %99** %7, align 8
  %40 = load %99*, %99** %7, align 8
  %41 = bitcast %99* %40 to %52**
  %42 = load %52*, %52** %41, align 8
  %43 = icmp ne %52* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %123

47:                                               ; preds = %20
  %48 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = load %99*, %99** %7, align 8
  %52 = bitcast %99* %51 to %52**
  %53 = load %52*, %52** %52, align 8
  %54 = getelementptr inbounds %52, %52* %53, i32 0, i32 24
  %55 = load i16, i16* %54, align 8
  %56 = lshr i16 %55, 7
  %57 = and i16 %56, 1
  %58 = zext i16 %57 to i32
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %50
  %61 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %62 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %61, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @146, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %123

63:                                               ; preds = %50, %47
  %64 = load %99*, %99** %7, align 8
  %65 = bitcast %99* %64 to %52**
  %66 = load %52*, %52** %65, align 8
  %67 = getelementptr inbounds %52, %52* %66, i32 0, i32 21
  %68 = call zeroext i8 @444(%4* %67)
  %69 = zext i8 %68 to i32
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %116

71:                                               ; preds = %63
  %72 = load %99*, %99** %7, align 8
  %73 = bitcast %99* %72 to %52**
  %74 = load %52*, %52** %73, align 8
  %75 = getelementptr inbounds %52, %52* %74, i32 0, i32 21
  call void @_zval_ptr_dtor(%4* %75)
  br label %76

76:                                               ; preds = %71
  %77 = load %99*, %99** %7, align 8
  %78 = bitcast %99* %77 to %52**
  %79 = load %52*, %52** %78, align 8
  %80 = getelementptr inbounds %52, %52* %79, i32 0, i32 21
  %81 = getelementptr inbounds %4, %4* %80, i32 0, i32 1
  %82 = bitcast %6* %81 to i32*
  store i32 0, i32* %82, align 8
  br label %83

83:                                               ; preds = %76
  br label %84

84:                                               ; preds = %83
  %85 = load %99*, %99** %7, align 8
  %86 = bitcast %99* %85 to %52**
  %87 = load %52*, %52** %86, align 8
  %88 = getelementptr inbounds %52, %52* %87, i32 0, i32 24
  %89 = load i16, i16* %88, align 8
  %90 = and i16 %89, -3
  %91 = or i16 %90, 2
  store i16 %91, i16* %88, align 8
  %92 = load %99*, %99** %7, align 8
  %93 = bitcast %99* %92 to %52**
  %94 = load %52*, %52** %93, align 8
  %95 = call i32 @phar_flush(%52* %94, i8* null, i64 0, i32 0, i8** %5)
  %96 = load i8*, i8** %5, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %98, label %109

98:                                               ; preds = %84
  %99 = load %3*, %3** @3, align 8
  %100 = load i8*, i8** %5, align 8
  %101 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %99, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %100)
  %102 = load i8*, i8** %5, align 8
  call void @_efree(i8* %102)
  br label %103

103:                                              ; preds = %98
  %104 = load %4*, %4** %4, align 8
  %105 = getelementptr inbounds %4, %4* %104, i32 0, i32 1
  %106 = bitcast %6* %105 to i32*
  store i32 2, i32* %106, align 8
  br label %107

107:                                              ; preds = %103
  br label %108

108:                                              ; preds = %107
  store i32 1, i32* %8, align 4
  br label %123

109:                                              ; preds = %84
  br label %110

110:                                              ; preds = %109
  %111 = load %4*, %4** %4, align 8
  %112 = getelementptr inbounds %4, %4* %111, i32 0, i32 1
  %113 = bitcast %6* %112 to i32*
  store i32 3, i32* %113, align 8
  br label %114

114:                                              ; preds = %110
  br label %115

115:                                              ; preds = %114
  store i32 1, i32* %8, align 4
  br label %123

116:                                              ; preds = %63
  br label %117

117:                                              ; preds = %116
  %118 = load %4*, %4** %4, align 8
  %119 = getelementptr inbounds %4, %4* %118, i32 0, i32 1
  %120 = bitcast %6* %119 to i32*
  store i32 3, i32* %120, align 8
  br label %121

121:                                              ; preds = %117
  br label %122

122:                                              ; preds = %121
  store i32 1, i32* %8, align 4
  br label %123

123:                                              ; preds = %122, %115, %108, %60, %44
  %124 = bitcast %99** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #13
  %125 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #13
  %126 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_Phar_extractTo(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %34*, align 8
  %6 = alloca %36, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %4*, align 8
  %14 = alloca %4*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8*, align 8
  %17 = alloca %4*, align 8
  %18 = alloca %99*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %21 = bitcast %34** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast %36* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %22) #13
  %23 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  %28 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store %4* null, %4** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  store i8 0, i8* %15, align 1
  %31 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i8* null, i8** %16, align 8
  %32 = bitcast %4** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = load %23*, %23** %3, align 8
  %34 = getelementptr inbounds %23, %23* %33, i32 0, i32 4
  %35 = call zeroext i8 @444(%4* %34)
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 8
  br i1 %37, label %38, label %41

38:                                               ; preds = %2
  %39 = load %23*, %23** %3, align 8
  %40 = getelementptr inbounds %23, %23* %39, i32 0, i32 4
  br label %42

41:                                               ; preds = %2
  br label %42

42:                                               ; preds = %41, %38
  %43 = phi %4* [ %40, %38 ], [ null, %41 ]
  store %4* %43, %4** %17, align 8
  %44 = bitcast %99** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = load %4*, %4** %17, align 8
  %46 = getelementptr inbounds %4, %4* %45, i32 0, i32 0
  %47 = bitcast %5* %46 to %21**
  %48 = load %21*, %21** %47, align 8
  %49 = bitcast %21* %48 to i8*
  %50 = load %4*, %4** %17, align 8
  %51 = getelementptr inbounds %4, %4* %50, i32 0, i32 0
  %52 = bitcast %5* %51 to %21**
  %53 = load %21*, %21** %52, align 8
  %54 = getelementptr inbounds %21, %21* %53, i32 0, i32 3
  %55 = load %22*, %22** %54, align 8
  %56 = getelementptr inbounds %22, %22* %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = sub i64 0, %58
  %60 = getelementptr inbounds i8, i8* %49, i64 %59
  %61 = bitcast i8* %60 to %99*
  store %99* %61, %99** %18, align 8
  %62 = load %99*, %99** %18, align 8
  %63 = bitcast %99* %62 to %52**
  %64 = load %52*, %52** %63, align 8
  %65 = icmp ne %52* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %42
  %67 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %68 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %67, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @75, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %291

69:                                               ; preds = %42
  %70 = load %23*, %23** %3, align 8
  %71 = getelementptr inbounds %23, %23* %70, i32 0, i32 4
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 2
  %73 = bitcast %7* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %74, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @161, i32 0, i32 0), i8** %7, i64* %9, %4** %14, i8* %15)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %78

77:                                               ; preds = %69
  store i32 1, i32* %19, align 4
  br label %291

78:                                               ; preds = %69
  %79 = load %99*, %99** %18, align 8
  %80 = bitcast %99* %79 to %52**
  %81 = load %52*, %52** %80, align 8
  %82 = getelementptr inbounds %52, %52* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = call %34* @_php_stream_open_wrapper_ex(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i32 0, i32 0), i32 18, %0** null, %46* null)
  store %34* %84, %34** %5, align 8
  %85 = load %34*, %34** %5, align 8
  %86 = icmp ne %34* %85, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %78
  %88 = load %3*, %3** @spl_ce_InvalidArgumentException, align 8
  %89 = load %99*, %99** %18, align 8
  %90 = bitcast %99* %89 to %52**
  %91 = load %52*, %52** %90, align 8
  %92 = getelementptr inbounds %52, %52* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %88, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @162, i32 0, i32 0), i8* %93)
  store i32 1, i32* %19, align 4
  br label %291

95:                                               ; preds = %78
  %96 = load %34*, %34** %5, align 8
  %97 = call i32 @_php_stream_free(%34* %96, i32 3)
  %98 = load i64, i64* %9, align 8
  %99 = icmp ult i64 %98, 1
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = load %3*, %3** @spl_ce_InvalidArgumentException, align 8
  %102 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %101, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @163, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %291

103:                                              ; preds = %95
  %104 = load i64, i64* %9, align 8
  %105 = icmp uge i64 %104, 4096
  br i1 %105, label %106, label %115

106:                                              ; preds = %103
  %107 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #13
  %108 = load i8*, i8** %7, align 8
  %109 = call noalias i8* @_estrndup(i8* %108, i64 50)
  store i8* %109, i8** %20, align 8
  %110 = load %3*, %3** @spl_ce_InvalidArgumentException, align 8
  %111 = load i8*, i8** %20, align 8
  %112 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %110, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @164, i32 0, i32 0), i8* %111)
  %113 = load i8*, i8** %20, align 8
  call void @_efree(i8* %113)
  store i32 1, i32* %19, align 4
  %114 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #13
  br label %291

115:                                              ; preds = %103
  %116 = load i8*, i8** %7, align 8
  %117 = call i32 @_php_stream_stat_path(i8* %116, i32 0, %36* %6, %46* null)
  %118 = icmp slt i32 %117, 0
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = load i8*, i8** %7, align 8
  %121 = call i32 @_php_stream_mkdir(i8* %120, i32 511, i32 1, %46* null)
  store i32 %121, i32* %10, align 4
  %122 = load i32, i32* %10, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %119
  %125 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %126 = load i8*, i8** %7, align 8
  %127 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %125, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @165, i32 0, i32 0), i8* %126)
  store i32 1, i32* %19, align 4
  br label %291

128:                                              ; preds = %119
  br label %140

129:                                              ; preds = %115
  %130 = getelementptr inbounds %36, %36* %6, i32 0, i32 0
  %131 = getelementptr inbounds %37, %37* %130, i32 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 16384
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %129
  %136 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %137 = load i8*, i8** %7, align 8
  %138 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %136, i64 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @166, i32 0, i32 0), i8* %137)
  store i32 1, i32* %19, align 4
  br label %291

139:                                              ; preds = %129
  br label %140

140:                                              ; preds = %139, %128
  %141 = load %4*, %4** %14, align 8
  %142 = icmp ne %4* %141, null
  br i1 %142, label %143, label %243

143:                                              ; preds = %140
  %144 = load %4*, %4** %14, align 8
  %145 = call zeroext i8 @444(%4* %144)
  %146 = zext i8 %145 to i32
  switch i32 %146, label %239 [
    i32 1, label %147
    i32 6, label %148
    i32 7, label %153
  ]

147:                                              ; preds = %143
  store %0* null, %0** %8, align 8
  br label %242

148:                                              ; preds = %143
  %149 = load %4*, %4** %14, align 8
  %150 = getelementptr inbounds %4, %4* %149, i32 0, i32 0
  %151 = bitcast %5* %150 to %0**
  %152 = load %0*, %0** %151, align 8
  store %0* %152, %0** %8, align 8
  br label %242

153:                                              ; preds = %143
  %154 = load %4*, %4** %14, align 8
  %155 = getelementptr inbounds %4, %4* %154, i32 0, i32 0
  %156 = bitcast %5* %155 to %8**
  %157 = load %8*, %8** %156, align 8
  %158 = getelementptr inbounds %8, %8* %157, i32 0, i32 5
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %12, align 4
  %160 = load i32, i32* %12, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %169

162:                                              ; preds = %153
  br label %163

163:                                              ; preds = %162
  %164 = load %4*, %4** %4, align 8
  %165 = getelementptr inbounds %4, %4* %164, i32 0, i32 1
  %166 = bitcast %6* %165 to i32*
  store i32 2, i32* %166, align 8
  br label %167

167:                                              ; preds = %163
  br label %168

168:                                              ; preds = %167
  store i32 1, i32* %19, align 4
  br label %291

169:                                              ; preds = %153
  store i32 0, i32* %11, align 4
  br label %170

170:                                              ; preds = %229, %169
  %171 = load i32, i32* %11, align 4
  %172 = load i32, i32* %12, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %232

174:                                              ; preds = %170
  %175 = load %4*, %4** %14, align 8
  %176 = getelementptr inbounds %4, %4* %175, i32 0, i32 0
  %177 = bitcast %5* %176 to %8**
  %178 = load %8*, %8** %177, align 8
  %179 = load i32, i32* %11, align 4
  %180 = sext i32 %179 to i64
  %181 = call %4* @zend_hash_index_find(%8* %178, i64 %180)
  store %4* %181, %4** %13, align 8
  %182 = icmp ne %4* %181, null
  br i1 %182, label %183, label %228

183:                                              ; preds = %174
  %184 = load %4*, %4** %13, align 8
  %185 = call zeroext i8 @444(%4* %184)
  %186 = zext i8 %185 to i32
  %187 = icmp ne i32 6, %186
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = load %3*, %3** @spl_ce_InvalidArgumentException, align 8
  %190 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %189, i64 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @167, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %291

191:                                              ; preds = %183
  %192 = load %99*, %99** %18, align 8
  %193 = bitcast %99* %192 to %52**
  %194 = load %52*, %52** %193, align 8
  %195 = load %4*, %4** %13, align 8
  %196 = getelementptr inbounds %4, %4* %195, i32 0, i32 0
  %197 = bitcast %5* %196 to %0**
  %198 = load %0*, %0** %197, align 8
  %199 = load i8*, i8** %7, align 8
  %200 = load i64, i64* %9, align 8
  %201 = load i8, i8* %15, align 1
  %202 = call i32 @466(%52* %194, %0* %198, i8* %199, i64 %200, i8 zeroext %201, i8** %16)
  switch i32 %202, label %227 [
    i32 -1, label %203
    i32 0, label %213
  ]

203:                                              ; preds = %191
  %204 = load %3*, %3** @3, align 8
  %205 = load %99*, %99** %18, align 8
  %206 = bitcast %99* %205 to %52**
  %207 = load %52*, %52** %206, align 8
  %208 = getelementptr inbounds %52, %52* %207, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = load i8*, i8** %16, align 8
  %211 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %204, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @168, i32 0, i32 0), i8* %209, i8* %210)
  %212 = load i8*, i8** %16, align 8
  call void @_efree(i8* %212)
  store i32 1, i32* %19, align 4
  br label %291

213:                                              ; preds = %191
  %214 = load %3*, %3** @3, align 8
  %215 = load %4*, %4** %13, align 8
  %216 = getelementptr inbounds %4, %4* %215, i32 0, i32 0
  %217 = bitcast %5* %216 to %0**
  %218 = load %0*, %0** %217, align 8
  %219 = getelementptr inbounds %0, %0* %218, i32 0, i32 3
  %220 = getelementptr inbounds [1 x i8], [1 x i8]* %219, i32 0, i32 0
  %221 = load %99*, %99** %18, align 8
  %222 = bitcast %99* %221 to %52**
  %223 = load %52*, %52** %222, align 8
  %224 = getelementptr inbounds %52, %52* %223, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %214, i64 0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @169, i32 0, i32 0), i8* %220, i8* %225)
  store i32 1, i32* %19, align 4
  br label %291

227:                                              ; preds = %191
  br label %228

228:                                              ; preds = %227, %174
  br label %229

229:                                              ; preds = %228
  %230 = load i32, i32* %11, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %11, align 4
  br label %170

232:                                              ; preds = %170
  br label %233

233:                                              ; preds = %232
  %234 = load %4*, %4** %4, align 8
  %235 = getelementptr inbounds %4, %4* %234, i32 0, i32 1
  %236 = bitcast %6* %235 to i32*
  store i32 3, i32* %236, align 8
  br label %237

237:                                              ; preds = %233
  br label %238

238:                                              ; preds = %237
  store i32 1, i32* %19, align 4
  br label %291

239:                                              ; preds = %143
  %240 = load %3*, %3** @spl_ce_InvalidArgumentException, align 8
  %241 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %240, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @170, i32 0, i32 0))
  store i32 1, i32* %19, align 4
  br label %291

242:                                              ; preds = %148, %147
  br label %244

243:                                              ; preds = %140
  store %0* null, %0** %8, align 8
  br label %244

244:                                              ; preds = %243, %242
  %245 = load %99*, %99** %18, align 8
  %246 = bitcast %99* %245 to %52**
  %247 = load %52*, %52** %246, align 8
  %248 = load %0*, %0** %8, align 8
  %249 = load i8*, i8** %7, align 8
  %250 = load i64, i64* %9, align 8
  %251 = load i8, i8* %15, align 1
  %252 = call i32 @466(%52* %247, %0* %248, i8* %249, i64 %250, i8 zeroext %251, i8** %16)
  store i32 %252, i32* %10, align 4
  %253 = load i32, i32* %10, align 4
  %254 = icmp eq i32 -1, %253
  br i1 %254, label %255, label %265

255:                                              ; preds = %244
  %256 = load %3*, %3** @3, align 8
  %257 = load %99*, %99** %18, align 8
  %258 = bitcast %99* %257 to %52**
  %259 = load %52*, %52** %258, align 8
  %260 = getelementptr inbounds %52, %52* %259, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = load i8*, i8** %16, align 8
  %263 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %256, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @168, i32 0, i32 0), i8* %261, i8* %262)
  %264 = load i8*, i8** %16, align 8
  call void @_efree(i8* %264)
  br label %290

265:                                              ; preds = %244
  %266 = load i32, i32* %10, align 4
  %267 = icmp eq i32 0, %266
  br i1 %267, label %268, label %282

268:                                              ; preds = %265
  %269 = load %0*, %0** %8, align 8
  %270 = icmp ne %0* null, %269
  br i1 %270, label %271, label %282

271:                                              ; preds = %268
  %272 = load %3*, %3** @3, align 8
  %273 = load %0*, %0** %8, align 8
  %274 = getelementptr inbounds %0, %0* %273, i32 0, i32 3
  %275 = getelementptr inbounds [1 x i8], [1 x i8]* %274, i32 0, i32 0
  %276 = load %99*, %99** %18, align 8
  %277 = bitcast %99* %276 to %52**
  %278 = load %52*, %52** %277, align 8
  %279 = getelementptr inbounds %52, %52* %278, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %272, i64 0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @169, i32 0, i32 0), i8* %275, i8* %280)
  br label %289

282:                                              ; preds = %268, %265
  br label %283

283:                                              ; preds = %282
  %284 = load %4*, %4** %4, align 8
  %285 = getelementptr inbounds %4, %4* %284, i32 0, i32 1
  %286 = bitcast %6* %285 to i32*
  store i32 3, i32* %286, align 8
  br label %287

287:                                              ; preds = %283
  br label %288

288:                                              ; preds = %287
  store i32 1, i32* %19, align 4
  br label %291

289:                                              ; preds = %271
  br label %290

290:                                              ; preds = %289, %255
  store i32 0, i32* %19, align 4
  br label %291

291:                                              ; preds = %290, %288, %239, %238, %213, %203, %188, %168, %135, %124, %106, %100, %87, %77, %66
  %292 = bitcast %99** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %292) #13
  %293 = bitcast %4** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %293) #13
  %294 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %294) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %295 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %295) #13
  %296 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296) #13
  %297 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %297) #13
  %298 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %298) #13
  %299 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %299) #13
  %300 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #13
  %301 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %301) #13
  %302 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %302) #13
  %303 = bitcast %36* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %303) #13
  %304 = bitcast %34** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304) #13
  %305 = load i32, i32* %19, align 4
  switch i32 %305, label %307 [
    i32 0, label %306
    i32 1, label %306
  ]

306:                                              ; preds = %291, %291
  ret void

307:                                              ; preds = %291
  unreachable
}

declare dso_local i32 @_php_stream_mkdir(i8*, i32, i32, %46*) #2

declare dso_local %4* @zend_hash_index_find(%8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @466(%52* %0, %0* %1, i8* %2, i64 %3, i8 zeroext %4, i8** %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %52*, align 8
  %9 = alloca %0*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca %93*, align 8
  %16 = alloca %8*, align 8
  %17 = alloca %10*, align 8
  %18 = alloca %10*, align 8
  %19 = alloca %4*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %8*, align 8
  %22 = alloca %10*, align 8
  %23 = alloca %10*, align 8
  %24 = alloca %4*, align 8
  store %52* %0, %52** %8, align 8
  store %0* %1, %0** %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  store i8 %4, i8* %12, align 1
  store i8** %5, i8*** %13, align 8
  %25 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %14, align 4
  %26 = bitcast %93** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = load %0*, %0** %9, align 8
  %28 = icmp ne %0* %27, null
  br i1 %28, label %98, label %29

29:                                               ; preds = %6
  br label %30

30:                                               ; preds = %29
  %31 = bitcast %8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = load %52*, %52** %8, align 8
  %33 = getelementptr inbounds %52, %52* %32, i32 0, i32 9
  store %8* %33, %8** %16, align 8
  %34 = bitcast %10** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = load %8*, %8** %16, align 8
  %36 = getelementptr inbounds %8, %8* %35, i32 0, i32 3
  %37 = load %10*, %10** %36, align 8
  store %10* %37, %10** %17, align 8
  %38 = bitcast %10** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = load %10*, %10** %17, align 8
  %40 = load %8*, %8** %16, align 8
  %41 = getelementptr inbounds %8, %8* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %10, %10* %39, i64 %43
  store %10* %44, %10** %18, align 8
  br label %45

45:                                               ; preds = %86, %30
  %46 = load %10*, %10** %17, align 8
  %47 = load %10*, %10** %18, align 8
  %48 = icmp ne %10* %46, %47
  br i1 %48, label %49, label %89

49:                                               ; preds = %45
  %50 = bitcast %4** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  %51 = load %10*, %10** %17, align 8
  %52 = getelementptr inbounds %10, %10* %51, i32 0, i32 0
  store %4* %52, %4** %19, align 8
  %53 = load %4*, %4** %19, align 8
  %54 = call zeroext i8 @444(%4* %53)
  %55 = zext i8 %54 to i32
  %56 = icmp eq i32 %55, 0
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %49
  store i32 6, i32* %20, align 4
  br label %82

64:                                               ; preds = %49
  %65 = load %4*, %4** %19, align 8
  %66 = getelementptr inbounds %4, %4* %65, i32 0, i32 0
  %67 = bitcast %5* %66 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast i8* %68 to %93*
  store %93* %69, %93** %15, align 8
  %70 = load i8, i8* %12, align 1
  %71 = load %93*, %93** %15, align 8
  %72 = load i8*, i8** %10, align 8
  %73 = load i64, i64* %11, align 8
  %74 = trunc i64 %73 to i32
  %75 = load i8**, i8*** %13, align 8
  %76 = call i32 @478(i8 zeroext %70, %93* %71, i8* %72, i32 %74, i8** %75)
  %77 = icmp eq i32 -1, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %64
  store i32 -1, i32* %7, align 4
  store i32 1, i32* %20, align 4
  br label %82

79:                                               ; preds = %64
  %80 = load i32, i32* %14, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %14, align 4
  store i32 0, i32* %20, align 4
  br label %82

82:                                               ; preds = %79, %78, %63
  %83 = bitcast %4** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #13
  %84 = load i32, i32* %20, align 4
  switch i32 %84, label %90 [
    i32 0, label %85
    i32 6, label %86
  ]

85:                                               ; preds = %82
  br label %86

86:                                               ; preds = %85, %82
  %87 = load %10*, %10** %17, align 8
  %88 = getelementptr inbounds %10, %10* %87, i32 1
  store %10* %88, %10** %17, align 8
  br label %45

89:                                               ; preds = %45
  store i32 0, i32* %20, align 4
  br label %90

90:                                               ; preds = %89, %82
  %91 = bitcast %10** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #13
  %92 = bitcast %10** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #13
  %93 = bitcast %8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #13
  %94 = load i32, i32* %20, align 4
  switch i32 %94, label %214 [
    i32 0, label %95
  ]

95:                                               ; preds = %90
  br label %96

96:                                               ; preds = %95
  br label %97

97:                                               ; preds = %96
  br label %212

98:                                               ; preds = %6
  %99 = load %0*, %0** %9, align 8
  %100 = getelementptr inbounds %0, %0* %99, i32 0, i32 3
  %101 = load %0*, %0** %9, align 8
  %102 = getelementptr inbounds %0, %0* %101, i32 0, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %103, 1
  %105 = getelementptr inbounds [1 x i8], [1 x i8]* %100, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 47, %107
  br i1 %108, label %109, label %191

109:                                              ; preds = %98
  br label %110

110:                                              ; preds = %109
  %111 = bitcast %8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %111) #13
  %112 = load %52*, %52** %8, align 8
  %113 = getelementptr inbounds %52, %52* %112, i32 0, i32 9
  store %8* %113, %8** %21, align 8
  %114 = bitcast %10** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %114) #13
  %115 = load %8*, %8** %21, align 8
  %116 = getelementptr inbounds %8, %8* %115, i32 0, i32 3
  %117 = load %10*, %10** %116, align 8
  store %10* %117, %10** %22, align 8
  %118 = bitcast %10** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %118) #13
  %119 = load %10*, %10** %22, align 8
  %120 = load %8*, %8** %21, align 8
  %121 = getelementptr inbounds %8, %8* %120, i32 0, i32 4
  %122 = load i32, i32* %121, align 8
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %10, %10* %119, i64 %123
  store %10* %124, %10** %23, align 8
  br label %125

125:                                              ; preds = %179, %110
  %126 = load %10*, %10** %22, align 8
  %127 = load %10*, %10** %23, align 8
  %128 = icmp ne %10* %126, %127
  br i1 %128, label %129, label %182

129:                                              ; preds = %125
  %130 = bitcast %4** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %130) #13
  %131 = load %10*, %10** %22, align 8
  %132 = getelementptr inbounds %10, %10* %131, i32 0, i32 0
  store %4* %132, %4** %24, align 8
  %133 = load %4*, %4** %24, align 8
  %134 = call zeroext i8 @444(%4* %133)
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %135, 0
  %137 = xor i1 %136, true
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = call i64 @llvm.expect.i64(i64 %140, i64 0)
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %129
  store i32 11, i32* %20, align 4
  br label %175

144:                                              ; preds = %129
  %145 = load %4*, %4** %24, align 8
  %146 = getelementptr inbounds %4, %4* %145, i32 0, i32 0
  %147 = bitcast %5* %146 to i8**
  %148 = load i8*, i8** %147, align 8
  %149 = bitcast i8* %148 to %93*
  store %93* %149, %93** %15, align 8
  %150 = load %0*, %0** %9, align 8
  %151 = getelementptr inbounds %0, %0* %150, i32 0, i32 3
  %152 = getelementptr inbounds [1 x i8], [1 x i8]* %151, i32 0, i32 0
  %153 = load %93*, %93** %15, align 8
  %154 = getelementptr inbounds %93, %93* %153, i32 0, i32 9
  %155 = load i8*, i8** %154, align 8
  %156 = load %0*, %0** %9, align 8
  %157 = getelementptr inbounds %0, %0* %156, i32 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = call i32 @strncmp(i8* %152, i8* %155, i64 %158) #14
  %160 = icmp ne i32 0, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %144
  store i32 11, i32* %20, align 4
  br label %175

162:                                              ; preds = %144
  %163 = load i8, i8* %12, align 1
  %164 = load %93*, %93** %15, align 8
  %165 = load i8*, i8** %10, align 8
  %166 = load i64, i64* %11, align 8
  %167 = trunc i64 %166 to i32
  %168 = load i8**, i8*** %13, align 8
  %169 = call i32 @478(i8 zeroext %163, %93* %164, i8* %165, i32 %167, i8** %168)
  %170 = icmp eq i32 -1, %169
  br i1 %170, label %171, label %172

171:                                              ; preds = %162
  store i32 -1, i32* %7, align 4
  store i32 1, i32* %20, align 4
  br label %175

172:                                              ; preds = %162
  %173 = load i32, i32* %14, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %14, align 4
  store i32 0, i32* %20, align 4
  br label %175

175:                                              ; preds = %172, %171, %161, %143
  %176 = bitcast %4** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #13
  %177 = load i32, i32* %20, align 4
  switch i32 %177, label %183 [
    i32 0, label %178
    i32 11, label %179
  ]

178:                                              ; preds = %175
  br label %179

179:                                              ; preds = %178, %175
  %180 = load %10*, %10** %22, align 8
  %181 = getelementptr inbounds %10, %10* %180, i32 1
  store %10* %181, %10** %22, align 8
  br label %125

182:                                              ; preds = %125
  store i32 0, i32* %20, align 4
  br label %183

183:                                              ; preds = %182, %175
  %184 = bitcast %10** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #13
  %185 = bitcast %10** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185) #13
  %186 = bitcast %8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #13
  %187 = load i32, i32* %20, align 4
  switch i32 %187, label %214 [
    i32 0, label %188
  ]

188:                                              ; preds = %183
  br label %189

189:                                              ; preds = %188
  br label %190

190:                                              ; preds = %189
  br label %211

191:                                              ; preds = %98
  %192 = load %52*, %52** %8, align 8
  %193 = getelementptr inbounds %52, %52* %192, i32 0, i32 9
  %194 = load %0*, %0** %9, align 8
  %195 = call i8* @479(%8* %193, %0* %194)
  %196 = bitcast i8* %195 to %93*
  store %93* %196, %93** %15, align 8
  %197 = load %93*, %93** %15, align 8
  %198 = icmp eq %93* null, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %191
  store i32 0, i32* %7, align 4
  store i32 1, i32* %20, align 4
  br label %214

200:                                              ; preds = %191
  %201 = load i8, i8* %12, align 1
  %202 = load %93*, %93** %15, align 8
  %203 = load i8*, i8** %10, align 8
  %204 = load i64, i64* %11, align 8
  %205 = trunc i64 %204 to i32
  %206 = load i8**, i8*** %13, align 8
  %207 = call i32 @478(i8 zeroext %201, %93* %202, i8* %203, i32 %205, i8** %206)
  %208 = icmp eq i32 -1, %207
  br i1 %208, label %209, label %210

209:                                              ; preds = %200
  store i32 -1, i32* %7, align 4
  store i32 1, i32* %20, align 4
  br label %214

210:                                              ; preds = %200
  store i32 1, i32* %7, align 4
  store i32 1, i32* %20, align 4
  br label %214

211:                                              ; preds = %190
  br label %212

212:                                              ; preds = %211, %97
  %213 = load i32, i32* %14, align 4
  store i32 %213, i32* %7, align 4
  store i32 1, i32* %20, align 4
  br label %214

214:                                              ; preds = %212, %210, %209, %199, %183, %90
  %215 = bitcast %93** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %215) #13
  %216 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %216) #13
  %217 = load i32, i32* %7, align 4
  ret i32 %217
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo___construct(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %104*, align 8
  %13 = alloca %93*, align 8
  %14 = alloca %52*, align 8
  %15 = alloca %4*, align 8
  %16 = alloca %4, align 8
  %17 = alloca i32, align 4
  %18 = alloca %4*, align 8
  %19 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %20 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  %26 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = bitcast %104** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast %93** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = load %23*, %23** %3, align 8
  %32 = getelementptr inbounds %23, %23* %31, i32 0, i32 4
  %33 = call zeroext i8 @444(%4* %32)
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 8
  br i1 %35, label %36, label %39

36:                                               ; preds = %2
  %37 = load %23*, %23** %3, align 8
  %38 = getelementptr inbounds %23, %23* %37, i32 0, i32 4
  br label %40

39:                                               ; preds = %2
  br label %40

40:                                               ; preds = %39, %36
  %41 = phi %4* [ %38, %36 ], [ null, %39 ]
  store %4* %41, %4** %15, align 8
  %42 = bitcast %4* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %42) #13
  %43 = load %23*, %23** %3, align 8
  %44 = getelementptr inbounds %23, %23* %43, i32 0, i32 4
  %45 = getelementptr inbounds %4, %4* %44, i32 0, i32 2
  %46 = bitcast %7* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = call i32 (i32, i8*, ...) @zend_parse_parameters_throw(i32 %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i8** %5, i64* %9)
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %50, label %51

50:                                               ; preds = %40
  store i32 1, i32* %17, align 4
  br label %174

51:                                               ; preds = %40
  %52 = load %4*, %4** %15, align 8
  %53 = getelementptr inbounds %4, %4* %52, i32 0, i32 0
  %54 = bitcast %5* %53 to %21**
  %55 = load %21*, %21** %54, align 8
  %56 = bitcast %21* %55 to i8*
  %57 = load %4*, %4** %15, align 8
  %58 = getelementptr inbounds %4, %4* %57, i32 0, i32 0
  %59 = bitcast %5* %58 to %21**
  %60 = load %21*, %21** %59, align 8
  %61 = getelementptr inbounds %21, %21* %60, i32 0, i32 3
  %62 = load %22*, %22** %61, align 8
  %63 = getelementptr inbounds %22, %22* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = sub i64 0, %65
  %67 = getelementptr inbounds i8, i8* %56, i64 %66
  %68 = bitcast i8* %67 to %104*
  store %104* %68, %104** %12, align 8
  %69 = load %104*, %104** %12, align 8
  %70 = bitcast %104* %69 to %93**
  %71 = load %93*, %93** %70, align 8
  %72 = icmp ne %93* %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %51
  %74 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %75 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %74, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @51, i32 0, i32 0))
  store i32 1, i32* %17, align 4
  br label %174

76:                                               ; preds = %51
  %77 = load i64, i64* %9, align 8
  %78 = icmp ult i64 %77, 7
  br i1 %78, label %89, label %79

79:                                               ; preds = %76
  %80 = load i8*, i8** %5, align 8
  %81 = call i32 @memcmp(i8* %80, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i64 7) #14
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = load i8*, i8** %5, align 8
  %85 = load i64, i64* %9, align 8
  %86 = trunc i64 %85 to i32
  %87 = call i32 @phar_split_fname(i8* %84, i32 %86, i8** %6, i32* %10, i8** %7, i32* %11, i32 2, i32 0)
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %93

89:                                               ; preds = %83, %79, %76
  %90 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %91 = load i8*, i8** %5, align 8
  %92 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %90, i64 0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @171, i32 0, i32 0), i8* %91)
  store i32 1, i32* %17, align 4
  br label %174

93:                                               ; preds = %83
  %94 = load i8*, i8** %6, align 8
  %95 = load i32, i32* %10, align 4
  %96 = call i32 @phar_open_from_filename(i8* %94, i32 %95, i8* null, i32 0, i32 8, %52** %14, i8** %8)
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %114

98:                                               ; preds = %93
  %99 = load i8*, i8** %6, align 8
  call void @_efree(i8* %99)
  %100 = load i8*, i8** %7, align 8
  call void @_efree(i8* %100)
  %101 = load i8*, i8** %8, align 8
  %102 = icmp ne i8* %101, null
  br i1 %102, label %103, label %109

103:                                              ; preds = %98
  %104 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %105 = load i8*, i8** %5, align 8
  %106 = load i8*, i8** %8, align 8
  %107 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %104, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @172, i32 0, i32 0), i8* %105, i8* %106)
  %108 = load i8*, i8** %8, align 8
  call void @_efree(i8* %108)
  br label %113

109:                                              ; preds = %98
  %110 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %111 = load i8*, i8** %5, align 8
  %112 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %110, i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @173, i32 0, i32 0), i8* %111)
  br label %113

113:                                              ; preds = %109, %103
  store i32 1, i32* %17, align 4
  br label %174

114:                                              ; preds = %93
  %115 = load %52*, %52** %14, align 8
  %116 = load i8*, i8** %7, align 8
  %117 = load i32, i32* %11, align 4
  %118 = call %93* @phar_get_entry_info_dir(%52* %115, i8* %116, i32 %117, i8 signext 1, i8** %8, i32 1)
  store %93* %118, %93** %13, align 8
  %119 = icmp eq %93* %118, null
  br i1 %119, label %120, label %138

120:                                              ; preds = %114
  %121 = load %3*, %3** @spl_ce_RuntimeException, align 8
  %122 = load i8*, i8** %7, align 8
  %123 = load i8*, i8** %6, align 8
  %124 = load i8*, i8** %8, align 8
  %125 = icmp ne i8* %124, null
  %126 = zext i1 %125 to i64
  %127 = select i1 %125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0)
  %128 = load i8*, i8** %8, align 8
  %129 = icmp ne i8* %128, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %120
  %131 = load i8*, i8** %8, align 8
  br label %133

132:                                              ; preds = %120
  br label %133

133:                                              ; preds = %132, %130
  %134 = phi i8* [ %131, %130 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0), %132 ]
  %135 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %121, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @174, i32 0, i32 0), i8* %122, i8* %123, i8* %127, i8* %134)
  %136 = load i8*, i8** %6, align 8
  call void @_efree(i8* %136)
  %137 = load i8*, i8** %7, align 8
  call void @_efree(i8* %137)
  store i32 1, i32* %17, align 4
  br label %174

138:                                              ; preds = %114
  %139 = load i8*, i8** %6, align 8
  call void @_efree(i8* %139)
  %140 = load i8*, i8** %7, align 8
  call void @_efree(i8* %140)
  %141 = load %93*, %93** %13, align 8
  %142 = load %104*, %104** %12, align 8
  %143 = bitcast %104* %142 to %93**
  store %93* %141, %93** %143, align 8
  br label %144

144:                                              ; preds = %138
  br label %145

145:                                              ; preds = %144
  %146 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %146) #13
  store %4* %16, %4** %18, align 8
  %147 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147) #13
  %148 = load i8*, i8** %5, align 8
  %149 = load i64, i64* %9, align 8
  %150 = call %0* @441(i8* %148, i64 %149, i32 0)
  store %0* %150, %0** %19, align 8
  %151 = load %0*, %0** %19, align 8
  %152 = load %4*, %4** %18, align 8
  %153 = getelementptr inbounds %4, %4* %152, i32 0, i32 0
  %154 = bitcast %5* %153 to %0**
  store %0* %151, %0** %154, align 8
  %155 = load %4*, %4** %18, align 8
  %156 = getelementptr inbounds %4, %4* %155, i32 0, i32 1
  %157 = bitcast %6* %156 to i32*
  store i32 5126, i32* %157, align 8
  %158 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #13
  %159 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #13
  br label %160

160:                                              ; preds = %145
  br label %161

161:                                              ; preds = %160
  br label %162

162:                                              ; preds = %161
  br label %163

163:                                              ; preds = %162
  %164 = load %4*, %4** %15, align 8
  %165 = load %4*, %4** %15, align 8
  %166 = getelementptr inbounds %4, %4* %165, i32 0, i32 0
  %167 = bitcast %5* %166 to %21**
  %168 = load %21*, %21** %167, align 8
  %169 = getelementptr inbounds %21, %21* %168, i32 0, i32 2
  %170 = load %3*, %3** %169, align 8
  %171 = load %3*, %3** @spl_ce_SplFileInfo, align 8
  %172 = getelementptr inbounds %3, %3* %171, i32 0, i32 13
  %173 = call %4* @zend_call_method(%4* %164, %3* %170, %11** %172, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), i64 11, %4* null, i32 1, %4* %16, %4* null)
  call void @_zval_ptr_dtor(%4* %16)
  store i32 0, i32* %17, align 4
  br label %174

174:                                              ; preds = %163, %133, %113, %89, %73, %50
  %175 = bitcast %4* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %175) #13
  %176 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #13
  %177 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #13
  %178 = bitcast %93** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178) #13
  %179 = bitcast %104** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %179) #13
  %180 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %180) #13
  %181 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %181) #13
  %182 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #13
  %183 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %183) #13
  %184 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #13
  %185 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185) #13
  %186 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #13
  %187 = load i32, i32* %17, align 4
  switch i32 %187, label %189 [
    i32 0, label %188
    i32 1, label %188
  ]

188:                                              ; preds = %174, %174
  ret void

189:                                              ; preds = %174
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo___destruct(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %7 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #13
  %8 = load %23*, %23** %3, align 8
  %9 = getelementptr inbounds %23, %23* %8, i32 0, i32 4
  %10 = call zeroext i8 @444(%4* %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 8
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  br label %17

16:                                               ; preds = %2
  br label %17

17:                                               ; preds = %16, %13
  %18 = phi %4* [ %15, %13 ], [ null, %16 ]
  store %4* %18, %4** %5, align 8
  %19 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = load %4*, %4** %5, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 0
  %22 = bitcast %5* %21 to %21**
  %23 = load %21*, %21** %22, align 8
  %24 = bitcast %21* %23 to i8*
  %25 = load %4*, %4** %5, align 8
  %26 = getelementptr inbounds %4, %4* %25, i32 0, i32 0
  %27 = bitcast %5* %26 to %21**
  %28 = load %21*, %21** %27, align 8
  %29 = getelementptr inbounds %21, %21* %28, i32 0, i32 3
  %30 = load %22*, %22** %29, align 8
  %31 = getelementptr inbounds %22, %22* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = sub i64 0, %33
  %35 = getelementptr inbounds i8, i8* %24, i64 %34
  %36 = bitcast i8* %35 to %104*
  store %104* %36, %104** %6, align 8
  %37 = load %104*, %104** %6, align 8
  %38 = bitcast %104* %37 to %93**
  %39 = load %93*, %93** %38, align 8
  %40 = icmp ne %93* %39, null
  br i1 %40, label %41, label %75

41:                                               ; preds = %17
  %42 = load %104*, %104** %6, align 8
  %43 = bitcast %104* %42 to %93**
  %44 = load %93*, %93** %43, align 8
  %45 = getelementptr inbounds %93, %93* %44, i32 0, i32 24
  %46 = load i16, i16* %45, align 2
  %47 = lshr i16 %46, 5
  %48 = and i16 %47, 1
  %49 = zext i16 %48 to i32
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %41
  %52 = load %104*, %104** %6, align 8
  %53 = bitcast %104* %52 to %93**
  %54 = load %93*, %93** %53, align 8
  %55 = getelementptr inbounds %93, %93* %54, i32 0, i32 9
  %56 = load i8*, i8** %55, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %68

58:                                               ; preds = %51
  %59 = load %104*, %104** %6, align 8
  %60 = bitcast %104* %59 to %93**
  %61 = load %93*, %93** %60, align 8
  %62 = getelementptr inbounds %93, %93* %61, i32 0, i32 9
  %63 = load i8*, i8** %62, align 8
  call void @_efree(i8* %63)
  %64 = load %104*, %104** %6, align 8
  %65 = bitcast %104* %64 to %93**
  %66 = load %93*, %93** %65, align 8
  %67 = getelementptr inbounds %93, %93* %66, i32 0, i32 9
  store i8* null, i8** %67, align 8
  br label %68

68:                                               ; preds = %58, %51
  %69 = load %104*, %104** %6, align 8
  %70 = bitcast %104* %69 to %93**
  %71 = load %93*, %93** %70, align 8
  %72 = bitcast %93* %71 to i8*
  call void @_efree(i8* %72)
  %73 = load %104*, %104** %6, align 8
  %74 = bitcast %104* %73 to %93**
  store %93* null, %93** %74, align 8
  br label %75

75:                                               ; preds = %68, %41, %17
  %76 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #13
  %77 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_getCompressedSize(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = load %23*, %23** %3, align 8
  %11 = getelementptr inbounds %23, %23* %10, i32 0, i32 4
  %12 = call zeroext i8 @444(%4* %11)
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = load %23*, %23** %3, align 8
  %17 = getelementptr inbounds %23, %23* %16, i32 0, i32 4
  br label %19

18:                                               ; preds = %2
  br label %19

19:                                               ; preds = %18, %15
  %20 = phi %4* [ %17, %15 ], [ null, %18 ]
  store %4* %20, %4** %5, align 8
  %21 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %4*, %4** %5, align 8
  %23 = getelementptr inbounds %4, %4* %22, i32 0, i32 0
  %24 = bitcast %5* %23 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = bitcast %21* %25 to i8*
  %27 = load %4*, %4** %5, align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 0
  %29 = bitcast %5* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = getelementptr inbounds %21, %21* %30, i32 0, i32 3
  %32 = load %22*, %22** %31, align 8
  %33 = getelementptr inbounds %22, %22* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = sub i64 0, %35
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = bitcast i8* %37 to %104*
  store %104* %38, %104** %6, align 8
  %39 = load %104*, %104** %6, align 8
  %40 = bitcast %104* %39 to %93**
  %41 = load %93*, %93** %40, align 8
  %42 = icmp ne %93* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %19
  %44 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %45 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %44, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %87

46:                                               ; preds = %19
  %47 = load %23*, %23** %3, align 8
  %48 = getelementptr inbounds %23, %23* %47, i32 0, i32 4
  %49 = getelementptr inbounds %4, %4* %48, i32 0, i32 2
  %50 = bitcast %7* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 1)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %46
  br label %67

60:                                               ; preds = %46
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %65, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %67

67:                                               ; preds = %60, %59
  %68 = phi i32 [ 0, %59 ], [ %66, %60 ]
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 1, i32* %7, align 4
  br label %87

71:                                               ; preds = %67
  %72 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #13
  %73 = load %4*, %4** %4, align 8
  store %4* %73, %4** %8, align 8
  %74 = load %104*, %104** %6, align 8
  %75 = bitcast %104* %74 to %93**
  %76 = load %93*, %93** %75, align 8
  %77 = getelementptr inbounds %93, %93* %76, i32 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = zext i32 %78 to i64
  %80 = load %4*, %4** %8, align 8
  %81 = getelementptr inbounds %4, %4* %80, i32 0, i32 0
  %82 = bitcast %5* %81 to i64*
  store i64 %79, i64* %82, align 8
  %83 = load %4*, %4** %8, align 8
  %84 = getelementptr inbounds %4, %4* %83, i32 0, i32 1
  %85 = bitcast %6* %84 to i32*
  store i32 4, i32* %85, align 8
  %86 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #13
  store i32 1, i32* %7, align 4
  br label %87

87:                                               ; preds = %71, %70, %43
  %88 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #13
  %89 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_isCompressed(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %104*, align 8
  %8 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  store i64 9021976, i64* %5, align 8
  %10 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %23*, %23** %3, align 8
  %12 = getelementptr inbounds %23, %23* %11, i32 0, i32 4
  %13 = call zeroext i8 @444(%4* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %23*, %23** %3, align 8
  %18 = getelementptr inbounds %23, %23* %17, i32 0, i32 4
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %16
  %21 = phi %4* [ %18, %16 ], [ null, %19 ]
  store %4* %21, %4** %6, align 8
  %22 = bitcast %104** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %4*, %4** %6, align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 0
  %25 = bitcast %5* %24 to %21**
  %26 = load %21*, %21** %25, align 8
  %27 = bitcast %21* %26 to i8*
  %28 = load %4*, %4** %6, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 0
  %30 = bitcast %5* %29 to %21**
  %31 = load %21*, %21** %30, align 8
  %32 = getelementptr inbounds %21, %21* %31, i32 0, i32 3
  %33 = load %22*, %22** %32, align 8
  %34 = getelementptr inbounds %22, %22* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %104*
  store %104* %39, %104** %7, align 8
  %40 = load %104*, %104** %7, align 8
  %41 = bitcast %104* %40 to %93**
  %42 = load %93*, %93** %41, align 8
  %43 = icmp ne %93* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %20
  %45 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %46 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %45, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %110

47:                                               ; preds = %20
  %48 = load %23*, %23** %3, align 8
  %49 = getelementptr inbounds %23, %23* %48, i32 0, i32 4
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = bitcast %7* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @46, i32 0, i32 0), i64* %5)
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  store i32 1, i32* %8, align 4
  br label %110

56:                                               ; preds = %47
  %57 = load i64, i64* %5, align 8
  switch i64 %57, label %106 [
    i64 9021976, label %58
    i64 4096, label %74
    i64 8192, label %90
  ]

58:                                               ; preds = %56
  br label %59

59:                                               ; preds = %58
  %60 = load %104*, %104** %7, align 8
  %61 = bitcast %104* %60 to %93**
  %62 = load %93*, %93** %61, align 8
  %63 = getelementptr inbounds %93, %93* %62, i32 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 61440
  %66 = icmp ne i32 %65, 0
  %67 = zext i1 %66 to i64
  %68 = select i1 %66, i32 3, i32 2
  %69 = load %4*, %4** %4, align 8
  %70 = getelementptr inbounds %4, %4* %69, i32 0, i32 1
  %71 = bitcast %6* %70 to i32*
  store i32 %68, i32* %71, align 8
  br label %72

72:                                               ; preds = %59
  br label %73

73:                                               ; preds = %72
  store i32 1, i32* %8, align 4
  br label %110

74:                                               ; preds = %56
  br label %75

75:                                               ; preds = %74
  %76 = load %104*, %104** %7, align 8
  %77 = bitcast %104* %76 to %93**
  %78 = load %93*, %93** %77, align 8
  %79 = getelementptr inbounds %93, %93* %78, i32 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 4096
  %82 = icmp ne i32 %81, 0
  %83 = zext i1 %82 to i64
  %84 = select i1 %82, i32 3, i32 2
  %85 = load %4*, %4** %4, align 8
  %86 = getelementptr inbounds %4, %4* %85, i32 0, i32 1
  %87 = bitcast %6* %86 to i32*
  store i32 %84, i32* %87, align 8
  br label %88

88:                                               ; preds = %75
  br label %89

89:                                               ; preds = %88
  store i32 1, i32* %8, align 4
  br label %110

90:                                               ; preds = %56
  br label %91

91:                                               ; preds = %90
  %92 = load %104*, %104** %7, align 8
  %93 = bitcast %104* %92 to %93**
  %94 = load %93*, %93** %93, align 8
  %95 = getelementptr inbounds %93, %93* %94, i32 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 8192
  %98 = icmp ne i32 %97, 0
  %99 = zext i1 %98 to i64
  %100 = select i1 %98, i32 3, i32 2
  %101 = load %4*, %4** %4, align 8
  %102 = getelementptr inbounds %4, %4* %101, i32 0, i32 1
  %103 = bitcast %6* %102 to i32*
  store i32 %100, i32* %103, align 8
  br label %104

104:                                              ; preds = %91
  br label %105

105:                                              ; preds = %104
  store i32 1, i32* %8, align 4
  br label %110

106:                                              ; preds = %56
  %107 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %108 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %107, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @176, i32 0, i32 0))
  br label %109

109:                                              ; preds = %106
  store i32 0, i32* %8, align 4
  br label %110

110:                                              ; preds = %109, %105, %89, %73, %55, %44
  %111 = bitcast %104** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #13
  %112 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #13
  %113 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #13
  %114 = load i32, i32* %8, align 4
  switch i32 %114, label %116 [
    i32 0, label %115
    i32 1, label %115
  ]

115:                                              ; preds = %110, %110
  ret void

116:                                              ; preds = %110
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_getCRC32(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = load %23*, %23** %3, align 8
  %11 = getelementptr inbounds %23, %23* %10, i32 0, i32 4
  %12 = call zeroext i8 @444(%4* %11)
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = load %23*, %23** %3, align 8
  %17 = getelementptr inbounds %23, %23* %16, i32 0, i32 4
  br label %19

18:                                               ; preds = %2
  br label %19

19:                                               ; preds = %18, %15
  %20 = phi %4* [ %17, %15 ], [ null, %18 ]
  store %4* %20, %4** %5, align 8
  %21 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %4*, %4** %5, align 8
  %23 = getelementptr inbounds %4, %4* %22, i32 0, i32 0
  %24 = bitcast %5* %23 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = bitcast %21* %25 to i8*
  %27 = load %4*, %4** %5, align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 0
  %29 = bitcast %5* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = getelementptr inbounds %21, %21* %30, i32 0, i32 3
  %32 = load %22*, %22** %31, align 8
  %33 = getelementptr inbounds %22, %22* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = sub i64 0, %35
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = bitcast i8* %37 to %104*
  store %104* %38, %104** %6, align 8
  %39 = load %104*, %104** %6, align 8
  %40 = bitcast %104* %39 to %93**
  %41 = load %93*, %93** %40, align 8
  %42 = icmp ne %93* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %19
  %44 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %45 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %44, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %113

46:                                               ; preds = %19
  %47 = load %23*, %23** %3, align 8
  %48 = getelementptr inbounds %23, %23* %47, i32 0, i32 4
  %49 = getelementptr inbounds %4, %4* %48, i32 0, i32 2
  %50 = bitcast %7* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 1)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %46
  br label %67

60:                                               ; preds = %46
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %65, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %67

67:                                               ; preds = %60, %59
  %68 = phi i32 [ 0, %59 ], [ %66, %60 ]
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 1, i32* %7, align 4
  br label %113

71:                                               ; preds = %67
  %72 = load %104*, %104** %6, align 8
  %73 = bitcast %104* %72 to %93**
  %74 = load %93*, %93** %73, align 8
  %75 = getelementptr inbounds %93, %93* %74, i32 0, i32 24
  %76 = load i16, i16* %75, align 2
  %77 = lshr i16 %76, 3
  %78 = and i16 %77, 1
  %79 = zext i16 %78 to i32
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %71
  %82 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %83 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %82, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @177, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %113

84:                                               ; preds = %71
  %85 = load %104*, %104** %6, align 8
  %86 = bitcast %104* %85 to %93**
  %87 = load %93*, %93** %86, align 8
  %88 = getelementptr inbounds %93, %93* %87, i32 0, i32 24
  %89 = load i16, i16* %88, align 2
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %109

93:                                               ; preds = %84
  %94 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94) #13
  %95 = load %4*, %4** %4, align 8
  store %4* %95, %4** %8, align 8
  %96 = load %104*, %104** %6, align 8
  %97 = bitcast %104* %96 to %93**
  %98 = load %93*, %93** %97, align 8
  %99 = getelementptr inbounds %93, %93* %98, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = load %4*, %4** %8, align 8
  %103 = getelementptr inbounds %4, %4* %102, i32 0, i32 0
  %104 = bitcast %5* %103 to i64*
  store i64 %101, i64* %104, align 8
  %105 = load %4*, %4** %8, align 8
  %106 = getelementptr inbounds %4, %4* %105, i32 0, i32 1
  %107 = bitcast %6* %106 to i32*
  store i32 4, i32* %107, align 8
  %108 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #13
  store i32 1, i32* %7, align 4
  br label %113

109:                                              ; preds = %84
  %110 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %111 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %110, i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @178, i32 0, i32 0))
  br label %112

112:                                              ; preds = %109
  store i32 0, i32* %7, align 4
  br label %113

113:                                              ; preds = %112, %93, %81, %70, %43
  %114 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #13
  %115 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #13
  %116 = load i32, i32* %7, align 4
  switch i32 %116, label %118 [
    i32 0, label %117
    i32 1, label %117
  ]

117:                                              ; preds = %113, %113
  ret void

118:                                              ; preds = %113
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_isCRCChecked(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  %7 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %8 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %23*, %23** %3, align 8
  %10 = getelementptr inbounds %23, %23* %9, i32 0, i32 4
  %11 = call zeroext i8 @444(%4* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %4* [ %16, %14 ], [ null, %17 ]
  store %4* %19, %4** %5, align 8
  %20 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %4*, %4** %5, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %21**
  %24 = load %21*, %21** %23, align 8
  %25 = bitcast %21* %24 to i8*
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = getelementptr inbounds %21, %21* %29, i32 0, i32 3
  %31 = load %22*, %22** %30, align 8
  %32 = getelementptr inbounds %22, %22* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 %35
  %37 = bitcast i8* %36 to %104*
  store %104* %37, %104** %6, align 8
  %38 = load %104*, %104** %6, align 8
  %39 = bitcast %104* %38 to %93**
  %40 = load %93*, %93** %39, align 8
  %41 = icmp ne %93* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %18
  %43 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %44 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %43, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %87

45:                                               ; preds = %18
  %46 = load %23*, %23** %3, align 8
  %47 = getelementptr inbounds %23, %23* %46, i32 0, i32 4
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 2
  %49 = bitcast %7* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 1)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %45
  br label %66

59:                                               ; preds = %45
  %60 = load %23*, %23** %3, align 8
  %61 = getelementptr inbounds %23, %23* %60, i32 0, i32 4
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 2
  %63 = bitcast %7* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %66

66:                                               ; preds = %59, %58
  %67 = phi i32 [ 0, %58 ], [ %65, %59 ]
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 1, i32* %7, align 4
  br label %87

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %70
  %72 = load %104*, %104** %6, align 8
  %73 = bitcast %104* %72 to %93**
  %74 = load %93*, %93** %73, align 8
  %75 = getelementptr inbounds %93, %93* %74, i32 0, i32 24
  %76 = load i16, i16* %75, align 2
  %77 = and i16 %76, 1
  %78 = zext i16 %77 to i32
  %79 = icmp ne i32 %78, 0
  %80 = zext i1 %79 to i64
  %81 = select i1 %79, i32 3, i32 2
  %82 = load %4*, %4** %4, align 8
  %83 = getelementptr inbounds %4, %4* %82, i32 0, i32 1
  %84 = bitcast %6* %83 to i32*
  store i32 %81, i32* %84, align 8
  br label %85

85:                                               ; preds = %71
  br label %86

86:                                               ; preds = %85
  store i32 1, i32* %7, align 4
  br label %87

87:                                               ; preds = %86, %69, %42
  %88 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #13
  %89 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_getPharFlags(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %4*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %9 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = load %23*, %23** %3, align 8
  %11 = getelementptr inbounds %23, %23* %10, i32 0, i32 4
  %12 = call zeroext i8 @444(%4* %11)
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = load %23*, %23** %3, align 8
  %17 = getelementptr inbounds %23, %23* %16, i32 0, i32 4
  br label %19

18:                                               ; preds = %2
  br label %19

19:                                               ; preds = %18, %15
  %20 = phi %4* [ %17, %15 ], [ null, %18 ]
  store %4* %20, %4** %5, align 8
  %21 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %4*, %4** %5, align 8
  %23 = getelementptr inbounds %4, %4* %22, i32 0, i32 0
  %24 = bitcast %5* %23 to %21**
  %25 = load %21*, %21** %24, align 8
  %26 = bitcast %21* %25 to i8*
  %27 = load %4*, %4** %5, align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 0
  %29 = bitcast %5* %28 to %21**
  %30 = load %21*, %21** %29, align 8
  %31 = getelementptr inbounds %21, %21* %30, i32 0, i32 3
  %32 = load %22*, %22** %31, align 8
  %33 = getelementptr inbounds %22, %22* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = sub i64 0, %35
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = bitcast i8* %37 to %104*
  store %104* %38, %104** %6, align 8
  %39 = load %104*, %104** %6, align 8
  %40 = bitcast %104* %39 to %93**
  %41 = load %93*, %93** %40, align 8
  %42 = icmp ne %93* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %19
  %44 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %45 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %44, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %88

46:                                               ; preds = %19
  %47 = load %23*, %23** %3, align 8
  %48 = getelementptr inbounds %23, %23* %47, i32 0, i32 4
  %49 = getelementptr inbounds %4, %4* %48, i32 0, i32 2
  %50 = bitcast %7* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 1)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %46
  br label %67

60:                                               ; preds = %46
  %61 = load %23*, %23** %3, align 8
  %62 = getelementptr inbounds %23, %23* %61, i32 0, i32 4
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 2
  %64 = bitcast %7* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %65, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %67

67:                                               ; preds = %60, %59
  %68 = phi i32 [ 0, %59 ], [ %66, %60 ]
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 1, i32* %7, align 4
  br label %88

71:                                               ; preds = %67
  %72 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #13
  %73 = load %4*, %4** %4, align 8
  store %4* %73, %4** %8, align 8
  %74 = load %104*, %104** %6, align 8
  %75 = bitcast %104* %74 to %93**
  %76 = load %93*, %93** %75, align 8
  %77 = getelementptr inbounds %93, %93* %76, i32 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, -61952
  %80 = zext i32 %79 to i64
  %81 = load %4*, %4** %8, align 8
  %82 = getelementptr inbounds %4, %4* %81, i32 0, i32 0
  %83 = bitcast %5* %82 to i64*
  store i64 %80, i64* %83, align 8
  %84 = load %4*, %4** %8, align 8
  %85 = getelementptr inbounds %4, %4* %84, i32 0, i32 1
  %86 = bitcast %6* %85 to i32*
  store i32 4, i32* %86, align 8
  %87 = bitcast %4** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #13
  store i32 1, i32* %7, align 4
  br label %88

88:                                               ; preds = %71, %70, %43
  %89 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #13
  %90 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_chmod(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %4*, align 8
  %8 = alloca %104*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %52*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %11 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  %16 = call zeroext i8 @444(%4* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 8
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = load %23*, %23** %3, align 8
  %21 = getelementptr inbounds %23, %23* %20, i32 0, i32 4
  br label %23

22:                                               ; preds = %2
  br label %23

23:                                               ; preds = %22, %19
  %24 = phi %4* [ %21, %19 ], [ null, %22 ]
  store %4* %24, %4** %7, align 8
  %25 = bitcast %104** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load %4*, %4** %7, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = bitcast %21* %29 to i8*
  %31 = load %4*, %4** %7, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to %21**
  %34 = load %21*, %21** %33, align 8
  %35 = getelementptr inbounds %21, %21* %34, i32 0, i32 3
  %36 = load %22*, %22** %35, align 8
  %37 = getelementptr inbounds %22, %22* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = sub i64 0, %39
  %41 = getelementptr inbounds i8, i8* %30, i64 %40
  %42 = bitcast i8* %41 to %104*
  store %104* %42, %104** %8, align 8
  %43 = load %104*, %104** %8, align 8
  %44 = bitcast %104* %43 to %93**
  %45 = load %93*, %93** %44, align 8
  %46 = icmp ne %93* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %23
  %48 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %49 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %48, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %221

50:                                               ; preds = %23
  %51 = load %104*, %104** %8, align 8
  %52 = bitcast %104* %51 to %93**
  %53 = load %93*, %93** %52, align 8
  %54 = getelementptr inbounds %93, %93* %53, i32 0, i32 24
  %55 = load i16, i16* %54, align 2
  %56 = lshr i16 %55, 5
  %57 = and i16 %56, 1
  %58 = zext i16 %57 to i32
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %68

60:                                               ; preds = %50
  %61 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %62 = load %104*, %104** %8, align 8
  %63 = bitcast %104* %62 to %93**
  %64 = load %93*, %93** %63, align 8
  %65 = getelementptr inbounds %93, %93* %64, i32 0, i32 9
  %66 = load i8*, i8** %65, align 8
  %67 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %61, i64 0, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @179, i32 0, i32 0), i8* %66)
  store i32 1, i32* %9, align 4
  br label %221

68:                                               ; preds = %50
  %69 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %98

71:                                               ; preds = %68
  %72 = load %104*, %104** %8, align 8
  %73 = bitcast %104* %72 to %93**
  %74 = load %93*, %93** %73, align 8
  %75 = getelementptr inbounds %93, %93* %74, i32 0, i32 18
  %76 = load %52*, %52** %75, align 8
  %77 = getelementptr inbounds %52, %52* %76, i32 0, i32 24
  %78 = load i16, i16* %77, align 8
  %79 = lshr i16 %78, 7
  %80 = and i16 %79, 1
  %81 = zext i16 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %71
  %84 = load %3*, %3** @3, align 8
  %85 = load %104*, %104** %8, align 8
  %86 = bitcast %104* %85 to %93**
  %87 = load %93*, %93** %86, align 8
  %88 = getelementptr inbounds %93, %93* %87, i32 0, i32 9
  %89 = load i8*, i8** %88, align 8
  %90 = load %104*, %104** %8, align 8
  %91 = bitcast %104* %90 to %93**
  %92 = load %93*, %93** %91, align 8
  %93 = getelementptr inbounds %93, %93* %92, i32 0, i32 18
  %94 = load %52*, %52** %93, align 8
  %95 = getelementptr inbounds %52, %52* %94, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %84, i64 0, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @180, i32 0, i32 0), i8* %89, i8* %96)
  store i32 1, i32* %9, align 4
  br label %221

98:                                               ; preds = %71, %68
  %99 = load %23*, %23** %3, align 8
  %100 = getelementptr inbounds %23, %23* %99, i32 0, i32 4
  %101 = getelementptr inbounds %4, %4* %100, i32 0, i32 2
  %102 = bitcast %7* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0), i64* %6)
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %106, label %107

106:                                              ; preds = %98
  store i32 1, i32* %9, align 4
  br label %221

107:                                              ; preds = %98
  %108 = load %104*, %104** %8, align 8
  %109 = bitcast %104* %108 to %93**
  %110 = load %93*, %93** %109, align 8
  %111 = getelementptr inbounds %93, %93* %110, i32 0, i32 24
  %112 = load i16, i16* %111, align 2
  %113 = lshr i16 %112, 8
  %114 = and i16 %113, 1
  %115 = zext i16 %114 to i32
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %154

117:                                              ; preds = %107
  %118 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %118) #13
  %119 = load %104*, %104** %8, align 8
  %120 = bitcast %104* %119 to %93**
  %121 = load %93*, %93** %120, align 8
  %122 = getelementptr inbounds %93, %93* %121, i32 0, i32 18
  %123 = load %52*, %52** %122, align 8
  store %52* %123, %52** %10, align 8
  %124 = call i32 @phar_copy_on_write(%52** %10)
  %125 = icmp eq i32 -1, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %117
  %127 = load %3*, %3** @3, align 8
  %128 = load %52*, %52** %10, align 8
  %129 = getelementptr inbounds %52, %52* %128, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %127, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %130)
  store i32 1, i32* %9, align 4
  br label %150

132:                                              ; preds = %117
  %133 = load %52*, %52** %10, align 8
  %134 = getelementptr inbounds %52, %52* %133, i32 0, i32 9
  %135 = load %104*, %104** %8, align 8
  %136 = bitcast %104* %135 to %93**
  %137 = load %93*, %93** %136, align 8
  %138 = getelementptr inbounds %93, %93* %137, i32 0, i32 9
  %139 = load i8*, i8** %138, align 8
  %140 = load %104*, %104** %8, align 8
  %141 = bitcast %104* %140 to %93**
  %142 = load %93*, %93** %141, align 8
  %143 = getelementptr inbounds %93, %93* %142, i32 0, i32 8
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = call i8* @442(%8* %134, i8* %139, i64 %145)
  %147 = bitcast i8* %146 to %93*
  %148 = load %104*, %104** %8, align 8
  %149 = bitcast %104* %148 to %93**
  store %93* %147, %93** %149, align 8
  store i32 0, i32* %9, align 4
  br label %150

150:                                              ; preds = %132, %126
  %151 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #13
  %152 = load i32, i32* %9, align 4
  switch i32 %152, label %221 [
    i32 0, label %153
  ]

153:                                              ; preds = %150
  br label %154

154:                                              ; preds = %153, %107
  %155 = load %104*, %104** %8, align 8
  %156 = bitcast %104* %155 to %93**
  %157 = load %93*, %93** %156, align 8
  %158 = getelementptr inbounds %93, %93* %157, i32 0, i32 4
  %159 = load i32, i32* %158, align 8
  %160 = and i32 %159, -512
  store i32 %160, i32* %158, align 8
  %161 = load i64, i64* %6, align 8
  %162 = and i64 %161, 511
  store i64 %162, i64* %6, align 8
  %163 = load i64, i64* %6, align 8
  %164 = load %104*, %104** %8, align 8
  %165 = bitcast %104* %164 to %93**
  %166 = load %93*, %93** %165, align 8
  %167 = getelementptr inbounds %93, %93* %166, i32 0, i32 4
  %168 = load i32, i32* %167, align 8
  %169 = zext i32 %168 to i64
  %170 = or i64 %169, %163
  %171 = trunc i64 %170 to i32
  store i32 %171, i32* %167, align 8
  %172 = load %104*, %104** %8, align 8
  %173 = bitcast %104* %172 to %93**
  %174 = load %93*, %93** %173, align 8
  %175 = getelementptr inbounds %93, %93* %174, i32 0, i32 4
  %176 = load i32, i32* %175, align 8
  %177 = load %104*, %104** %8, align 8
  %178 = bitcast %104* %177 to %93**
  %179 = load %93*, %93** %178, align 8
  %180 = getelementptr inbounds %93, %93* %179, i32 0, i32 5
  store i32 %176, i32* %180, align 4
  %181 = load %104*, %104** %8, align 8
  %182 = bitcast %104* %181 to %93**
  %183 = load %93*, %93** %182, align 8
  %184 = getelementptr inbounds %93, %93* %183, i32 0, i32 18
  %185 = load %52*, %52** %184, align 8
  %186 = getelementptr inbounds %52, %52* %185, i32 0, i32 24
  %187 = load i16, i16* %186, align 8
  %188 = and i16 %187, -3
  %189 = or i16 %188, 2
  store i16 %189, i16* %186, align 8
  %190 = load %104*, %104** %8, align 8
  %191 = bitcast %104* %190 to %93**
  %192 = load %93*, %93** %191, align 8
  %193 = getelementptr inbounds %93, %93* %192, i32 0, i32 24
  %194 = load i16, i16* %193, align 2
  %195 = and i16 %194, -3
  %196 = or i16 %195, 2
  store i16 %196, i16* %193, align 2
  %197 = load i8*, i8** getelementptr inbounds (%81, %81* @basic_globals, i32 0, i32 21), align 8
  %198 = icmp ne i8* %197, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %154
  %200 = load i8*, i8** getelementptr inbounds (%81, %81* @basic_globals, i32 0, i32 21), align 8
  call void @_efree(i8* %200)
  br label %201

201:                                              ; preds = %199, %154
  %202 = load i8*, i8** getelementptr inbounds (%81, %81* @basic_globals, i32 0, i32 20), align 8
  %203 = icmp ne i8* %202, null
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = load i8*, i8** getelementptr inbounds (%81, %81* @basic_globals, i32 0, i32 20), align 8
  call void @_efree(i8* %205)
  br label %206

206:                                              ; preds = %204, %201
  store i8* null, i8** getelementptr inbounds (%81, %81* @basic_globals, i32 0, i32 21), align 8
  store i8* null, i8** getelementptr inbounds (%81, %81* @basic_globals, i32 0, i32 20), align 8
  %207 = load %104*, %104** %8, align 8
  %208 = bitcast %104* %207 to %93**
  %209 = load %93*, %93** %208, align 8
  %210 = getelementptr inbounds %93, %93* %209, i32 0, i32 18
  %211 = load %52*, %52** %210, align 8
  %212 = call i32 @phar_flush(%52* %211, i8* null, i64 0, i32 0, i8** %5)
  %213 = load i8*, i8** %5, align 8
  %214 = icmp ne i8* %213, null
  br i1 %214, label %215, label %220

215:                                              ; preds = %206
  %216 = load %3*, %3** @3, align 8
  %217 = load i8*, i8** %5, align 8
  %218 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %216, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %217)
  %219 = load i8*, i8** %5, align 8
  call void @_efree(i8* %219)
  br label %220

220:                                              ; preds = %215, %206
  store i32 0, i32* %9, align 4
  br label %221

221:                                              ; preds = %220, %150, %106, %83, %60, %47
  %222 = bitcast %104** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  %223 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  %224 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #13
  %225 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  %226 = load i32, i32* %9, align 4
  switch i32 %226, label %228 [
    i32 0, label %227
    i32 1, label %227
  ]

227:                                              ; preds = %221, %221
  ret void

228:                                              ; preds = %221
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_hasMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  %7 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %8 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %23*, %23** %3, align 8
  %10 = getelementptr inbounds %23, %23* %9, i32 0, i32 4
  %11 = call zeroext i8 @444(%4* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %23*, %23** %3, align 8
  %16 = getelementptr inbounds %23, %23* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %4* [ %16, %14 ], [ null, %17 ]
  store %4* %19, %4** %5, align 8
  %20 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %4*, %4** %5, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %21**
  %24 = load %21*, %21** %23, align 8
  %25 = bitcast %21* %24 to i8*
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = getelementptr inbounds %21, %21* %29, i32 0, i32 3
  %31 = load %22*, %22** %30, align 8
  %32 = getelementptr inbounds %22, %22* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 %35
  %37 = bitcast i8* %36 to %104*
  store %104* %37, %104** %6, align 8
  %38 = load %104*, %104** %6, align 8
  %39 = bitcast %104* %38 to %93**
  %40 = load %93*, %93** %39, align 8
  %41 = icmp ne %93* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %18
  %43 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %44 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %43, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %86

45:                                               ; preds = %18
  %46 = load %23*, %23** %3, align 8
  %47 = getelementptr inbounds %23, %23* %46, i32 0, i32 4
  %48 = getelementptr inbounds %4, %4* %47, i32 0, i32 2
  %49 = bitcast %7* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 1)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %45
  br label %66

59:                                               ; preds = %45
  %60 = load %23*, %23** %3, align 8
  %61 = getelementptr inbounds %23, %23* %60, i32 0, i32 4
  %62 = getelementptr inbounds %4, %4* %61, i32 0, i32 2
  %63 = bitcast %7* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %66

66:                                               ; preds = %59, %58
  %67 = phi i32 [ 0, %58 ], [ %65, %59 ]
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 1, i32* %7, align 4
  br label %86

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %70
  %72 = load %104*, %104** %6, align 8
  %73 = bitcast %104* %72 to %93**
  %74 = load %93*, %93** %73, align 8
  %75 = getelementptr inbounds %93, %93* %74, i32 0, i32 6
  %76 = call zeroext i8 @444(%4* %75)
  %77 = zext i8 %76 to i32
  %78 = icmp ne i32 %77, 0
  %79 = zext i1 %78 to i64
  %80 = select i1 %78, i32 3, i32 2
  %81 = load %4*, %4** %4, align 8
  %82 = getelementptr inbounds %4, %4* %81, i32 0, i32 1
  %83 = bitcast %6* %82 to i32*
  store i32 %80, i32* %83, align 8
  br label %84

84:                                               ; preds = %71
  br label %85

85:                                               ; preds = %84
  store i32 1, i32* %7, align 4
  br label %86

86:                                               ; preds = %85, %69, %42
  %87 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #13
  %88 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_getMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %4*, align 8
  %6 = alloca %104*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %4*, align 8
  %11 = alloca %96*, align 8
  %12 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %13 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  %16 = call zeroext i8 @444(%4* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 8
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = load %23*, %23** %3, align 8
  %21 = getelementptr inbounds %23, %23* %20, i32 0, i32 4
  br label %23

22:                                               ; preds = %2
  br label %23

23:                                               ; preds = %22, %19
  %24 = phi %4* [ %21, %19 ], [ null, %22 ]
  store %4* %24, %4** %5, align 8
  %25 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load %4*, %4** %5, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = bitcast %21* %29 to i8*
  %31 = load %4*, %4** %5, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to %21**
  %34 = load %21*, %21** %33, align 8
  %35 = getelementptr inbounds %21, %21* %34, i32 0, i32 3
  %36 = load %22*, %22** %35, align 8
  %37 = getelementptr inbounds %22, %22* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = sub i64 0, %39
  %41 = getelementptr inbounds i8, i8* %30, i64 %40
  %42 = bitcast i8* %41 to %104*
  store %104* %42, %104** %6, align 8
  %43 = load %104*, %104** %6, align 8
  %44 = bitcast %104* %43 to %93**
  %45 = load %93*, %93** %44, align 8
  %46 = icmp ne %93* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %23
  %48 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %49 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %48, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %7, align 4
  br label %166

50:                                               ; preds = %23
  %51 = load %23*, %23** %3, align 8
  %52 = getelementptr inbounds %23, %23* %51, i32 0, i32 4
  %53 = getelementptr inbounds %4, %4* %52, i32 0, i32 2
  %54 = bitcast %7* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 1)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %50
  br label %71

64:                                               ; preds = %50
  %65 = load %23*, %23** %3, align 8
  %66 = getelementptr inbounds %23, %23* %65, i32 0, i32 4
  %67 = getelementptr inbounds %4, %4* %66, i32 0, i32 2
  %68 = bitcast %7* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %69, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %71

71:                                               ; preds = %64, %63
  %72 = phi i32 [ 0, %63 ], [ %70, %64 ]
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  store i32 1, i32* %7, align 4
  br label %166

75:                                               ; preds = %71
  %76 = load %104*, %104** %6, align 8
  %77 = bitcast %104* %76 to %93**
  %78 = load %93*, %93** %77, align 8
  %79 = getelementptr inbounds %93, %93* %78, i32 0, i32 6
  %80 = call zeroext i8 @444(%4* %79)
  %81 = zext i8 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %165

83:                                               ; preds = %75
  %84 = load %104*, %104** %6, align 8
  %85 = bitcast %104* %84 to %93**
  %86 = load %93*, %93** %85, align 8
  %87 = getelementptr inbounds %93, %93* %86, i32 0, i32 24
  %88 = load i16, i16* %87, align 2
  %89 = lshr i16 %88, 8
  %90 = and i16 %89, 1
  %91 = zext i16 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %118

93:                                               ; preds = %83
  %94 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94) #13
  %95 = load %104*, %104** %6, align 8
  %96 = bitcast %104* %95 to %93**
  %97 = load %93*, %93** %96, align 8
  %98 = getelementptr inbounds %93, %93* %97, i32 0, i32 6
  %99 = getelementptr inbounds %4, %4* %98, i32 0, i32 0
  %100 = bitcast %5* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = load %104*, %104** %6, align 8
  %103 = bitcast %104* %102 to %93**
  %104 = load %93*, %93** %103, align 8
  %105 = getelementptr inbounds %93, %93* %104, i32 0, i32 7
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = call noalias i8* @_estrndup(i8* %101, i64 %107)
  store i8* %108, i8** %8, align 8
  %109 = load %4*, %4** %4, align 8
  %110 = load %104*, %104** %6, align 8
  %111 = bitcast %104* %110 to %93**
  %112 = load %93*, %93** %111, align 8
  %113 = getelementptr inbounds %93, %93* %112, i32 0, i32 7
  %114 = load i32, i32* %113, align 8
  %115 = call i32 @phar_parse_metadata(i8** %8, %4* %109, i32 %114)
  %116 = load i8*, i8** %8, align 8
  call void @_efree(i8* %116)
  %117 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #13
  br label %164

118:                                              ; preds = %83
  br label %119

119:                                              ; preds = %118
  %120 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %120) #13
  %121 = load %4*, %4** %4, align 8
  store %4* %121, %4** %9, align 8
  %122 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %122) #13
  %123 = load %104*, %104** %6, align 8
  %124 = bitcast %104* %123 to %93**
  %125 = load %93*, %93** %124, align 8
  %126 = getelementptr inbounds %93, %93* %125, i32 0, i32 6
  store %4* %126, %4** %10, align 8
  %127 = bitcast %96** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #13
  %128 = load %4*, %4** %10, align 8
  %129 = getelementptr inbounds %4, %4* %128, i32 0, i32 0
  %130 = bitcast %5* %129 to %96**
  %131 = load %96*, %96** %130, align 8
  store %96* %131, %96** %11, align 8
  %132 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %132) #13
  %133 = load %4*, %4** %10, align 8
  %134 = getelementptr inbounds %4, %4* %133, i32 0, i32 1
  %135 = bitcast %6* %134 to i32*
  %136 = load i32, i32* %135, align 8
  store i32 %136, i32* %12, align 4
  br label %137

137:                                              ; preds = %119
  %138 = load %96*, %96** %11, align 8
  %139 = load %4*, %4** %9, align 8
  %140 = getelementptr inbounds %4, %4* %139, i32 0, i32 0
  %141 = bitcast %5* %140 to %96**
  store %96* %138, %96** %141, align 8
  %142 = load i32, i32* %12, align 4
  %143 = load %4*, %4** %9, align 8
  %144 = getelementptr inbounds %4, %4* %143, i32 0, i32 1
  %145 = bitcast %6* %144 to i32*
  store i32 %142, i32* %145, align 8
  br label %146

146:                                              ; preds = %137
  br label %147

147:                                              ; preds = %146
  %148 = load i32, i32* %12, align 4
  %149 = and i32 %148, 1024
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = load %96*, %96** %11, align 8
  %153 = getelementptr inbounds %96, %96* %152, i32 0, i32 0
  %154 = getelementptr inbounds %1, %1* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %154, align 4
  br label %157

157:                                              ; preds = %151, %147
  %158 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %158) #13
  %159 = bitcast %96** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #13
  %160 = bitcast %4** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #13
  %161 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #13
  br label %162

162:                                              ; preds = %157
  br label %163

163:                                              ; preds = %162
  br label %164

164:                                              ; preds = %163, %93
  br label %165

165:                                              ; preds = %164, %75
  store i32 0, i32* %7, align 4
  br label %166

166:                                              ; preds = %165, %74, %47
  %167 = bitcast %104** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #13
  %168 = bitcast %4** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #13
  %169 = load i32, i32* %7, align 4
  switch i32 %169, label %171 [
    i32 0, label %170
    i32 1, label %170
  ]

170:                                              ; preds = %166, %166
  ret void

171:                                              ; preds = %166
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_setMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %4*, align 8
  %8 = alloca %104*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %52*, align 8
  %11 = alloca %4*, align 8
  %12 = alloca %4*, align 8
  %13 = alloca %96*, align 8
  %14 = alloca i32, align 4
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = load %23*, %23** %3, align 8
  %19 = getelementptr inbounds %23, %23* %18, i32 0, i32 4
  %20 = call zeroext i8 @444(%4* %19)
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 8
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load %23*, %23** %3, align 8
  %25 = getelementptr inbounds %23, %23* %24, i32 0, i32 4
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %26, %23
  %28 = phi %4* [ %25, %23 ], [ null, %26 ]
  store %4* %28, %4** %7, align 8
  %29 = bitcast %104** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = load %4*, %4** %7, align 8
  %31 = getelementptr inbounds %4, %4* %30, i32 0, i32 0
  %32 = bitcast %5* %31 to %21**
  %33 = load %21*, %21** %32, align 8
  %34 = bitcast %21* %33 to i8*
  %35 = load %4*, %4** %7, align 8
  %36 = getelementptr inbounds %4, %4* %35, i32 0, i32 0
  %37 = bitcast %5* %36 to %21**
  %38 = load %21*, %21** %37, align 8
  %39 = getelementptr inbounds %21, %21* %38, i32 0, i32 3
  %40 = load %22*, %22** %39, align 8
  %41 = getelementptr inbounds %22, %22* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = sub i64 0, %43
  %45 = getelementptr inbounds i8, i8* %34, i64 %44
  %46 = bitcast i8* %45 to %104*
  store %104* %46, %104** %8, align 8
  %47 = load %104*, %104** %8, align 8
  %48 = bitcast %104* %47 to %93**
  %49 = load %93*, %93** %48, align 8
  %50 = icmp ne %93* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %27
  %52 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %53 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %52, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %239

54:                                               ; preds = %27
  %55 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %72

57:                                               ; preds = %54
  %58 = load %104*, %104** %8, align 8
  %59 = bitcast %104* %58 to %93**
  %60 = load %93*, %93** %59, align 8
  %61 = getelementptr inbounds %93, %93* %60, i32 0, i32 18
  %62 = load %52*, %52** %61, align 8
  %63 = getelementptr inbounds %52, %52* %62, i32 0, i32 24
  %64 = load i16, i16* %63, align 8
  %65 = lshr i16 %64, 7
  %66 = and i16 %65, 1
  %67 = zext i16 %66 to i32
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %57
  %70 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %71 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %70, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @146, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %239

72:                                               ; preds = %57, %54
  %73 = load %104*, %104** %8, align 8
  %74 = bitcast %104* %73 to %93**
  %75 = load %93*, %93** %74, align 8
  %76 = getelementptr inbounds %93, %93* %75, i32 0, i32 24
  %77 = load i16, i16* %76, align 2
  %78 = lshr i16 %77, 5
  %79 = and i16 %78, 1
  %80 = zext i16 %79 to i32
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %72
  %83 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %84 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %83, i64 0, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @181, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %239

85:                                               ; preds = %72
  %86 = load %23*, %23** %3, align 8
  %87 = getelementptr inbounds %23, %23* %86, i32 0, i32 4
  %88 = getelementptr inbounds %4, %4* %87, i32 0, i32 2
  %89 = bitcast %7* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @160, i32 0, i32 0), %4** %6)
  %92 = icmp eq i32 %91, -1
  br i1 %92, label %93, label %94

93:                                               ; preds = %85
  store i32 1, i32* %9, align 4
  br label %239

94:                                               ; preds = %85
  %95 = load %104*, %104** %8, align 8
  %96 = bitcast %104* %95 to %93**
  %97 = load %93*, %93** %96, align 8
  %98 = getelementptr inbounds %93, %93* %97, i32 0, i32 24
  %99 = load i16, i16* %98, align 2
  %100 = lshr i16 %99, 8
  %101 = and i16 %100, 1
  %102 = zext i16 %101 to i32
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %141

104:                                              ; preds = %94
  %105 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %105) #13
  %106 = load %104*, %104** %8, align 8
  %107 = bitcast %104* %106 to %93**
  %108 = load %93*, %93** %107, align 8
  %109 = getelementptr inbounds %93, %93* %108, i32 0, i32 18
  %110 = load %52*, %52** %109, align 8
  store %52* %110, %52** %10, align 8
  %111 = call i32 @phar_copy_on_write(%52** %10)
  %112 = icmp eq i32 -1, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %104
  %114 = load %3*, %3** @3, align 8
  %115 = load %52*, %52** %10, align 8
  %116 = getelementptr inbounds %52, %52* %115, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %114, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %117)
  store i32 1, i32* %9, align 4
  br label %137

119:                                              ; preds = %104
  %120 = load %52*, %52** %10, align 8
  %121 = getelementptr inbounds %52, %52* %120, i32 0, i32 9
  %122 = load %104*, %104** %8, align 8
  %123 = bitcast %104* %122 to %93**
  %124 = load %93*, %93** %123, align 8
  %125 = getelementptr inbounds %93, %93* %124, i32 0, i32 9
  %126 = load i8*, i8** %125, align 8
  %127 = load %104*, %104** %8, align 8
  %128 = bitcast %104* %127 to %93**
  %129 = load %93*, %93** %128, align 8
  %130 = getelementptr inbounds %93, %93* %129, i32 0, i32 8
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = call i8* @442(%8* %121, i8* %126, i64 %132)
  %134 = bitcast i8* %133 to %93*
  %135 = load %104*, %104** %8, align 8
  %136 = bitcast %104* %135 to %93**
  store %93* %134, %93** %136, align 8
  store i32 0, i32* %9, align 4
  br label %137

137:                                              ; preds = %119, %113
  %138 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #13
  %139 = load i32, i32* %9, align 4
  switch i32 %139, label %239 [
    i32 0, label %140
  ]

140:                                              ; preds = %137
  br label %141

141:                                              ; preds = %140, %94
  %142 = load %104*, %104** %8, align 8
  %143 = bitcast %104* %142 to %93**
  %144 = load %93*, %93** %143, align 8
  %145 = getelementptr inbounds %93, %93* %144, i32 0, i32 6
  %146 = call zeroext i8 @444(%4* %145)
  %147 = zext i8 %146 to i32
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %163

149:                                              ; preds = %141
  %150 = load %104*, %104** %8, align 8
  %151 = bitcast %104* %150 to %93**
  %152 = load %93*, %93** %151, align 8
  %153 = getelementptr inbounds %93, %93* %152, i32 0, i32 6
  call void @_zval_ptr_dtor(%4* %153)
  br label %154

154:                                              ; preds = %149
  %155 = load %104*, %104** %8, align 8
  %156 = bitcast %104* %155 to %93**
  %157 = load %93*, %93** %156, align 8
  %158 = getelementptr inbounds %93, %93* %157, i32 0, i32 6
  %159 = getelementptr inbounds %4, %4* %158, i32 0, i32 1
  %160 = bitcast %6* %159 to i32*
  store i32 0, i32* %160, align 8
  br label %161

161:                                              ; preds = %154
  br label %162

162:                                              ; preds = %161
  br label %163

163:                                              ; preds = %162, %141
  br label %164

164:                                              ; preds = %163
  %165 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165) #13
  %166 = load %104*, %104** %8, align 8
  %167 = bitcast %104* %166 to %93**
  %168 = load %93*, %93** %167, align 8
  %169 = getelementptr inbounds %93, %93* %168, i32 0, i32 6
  store %4* %169, %4** %11, align 8
  %170 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %170) #13
  %171 = load %4*, %4** %6, align 8
  store %4* %171, %4** %12, align 8
  %172 = bitcast %96** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172) #13
  %173 = load %4*, %4** %12, align 8
  %174 = getelementptr inbounds %4, %4* %173, i32 0, i32 0
  %175 = bitcast %5* %174 to %96**
  %176 = load %96*, %96** %175, align 8
  store %96* %176, %96** %13, align 8
  %177 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %177) #13
  %178 = load %4*, %4** %12, align 8
  %179 = getelementptr inbounds %4, %4* %178, i32 0, i32 1
  %180 = bitcast %6* %179 to i32*
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %14, align 4
  br label %182

182:                                              ; preds = %164
  %183 = load %96*, %96** %13, align 8
  %184 = load %4*, %4** %11, align 8
  %185 = getelementptr inbounds %4, %4* %184, i32 0, i32 0
  %186 = bitcast %5* %185 to %96**
  store %96* %183, %96** %186, align 8
  %187 = load i32, i32* %14, align 4
  %188 = load %4*, %4** %11, align 8
  %189 = getelementptr inbounds %4, %4* %188, i32 0, i32 1
  %190 = bitcast %6* %189 to i32*
  store i32 %187, i32* %190, align 8
  br label %191

191:                                              ; preds = %182
  br label %192

192:                                              ; preds = %191
  %193 = load i32, i32* %14, align 4
  %194 = and i32 %193, 1024
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %192
  %197 = load %96*, %96** %13, align 8
  %198 = getelementptr inbounds %96, %96* %197, i32 0, i32 0
  %199 = getelementptr inbounds %1, %1* %198, i32 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %199, align 4
  br label %202

202:                                              ; preds = %196, %192
  %203 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #13
  %204 = bitcast %96** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #13
  %205 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %205) #13
  %206 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #13
  br label %207

207:                                              ; preds = %202
  br label %208

208:                                              ; preds = %207
  %209 = load %104*, %104** %8, align 8
  %210 = bitcast %104* %209 to %93**
  %211 = load %93*, %93** %210, align 8
  %212 = getelementptr inbounds %93, %93* %211, i32 0, i32 24
  %213 = load i16, i16* %212, align 2
  %214 = and i16 %213, -3
  %215 = or i16 %214, 2
  store i16 %215, i16* %212, align 2
  %216 = load %104*, %104** %8, align 8
  %217 = bitcast %104* %216 to %93**
  %218 = load %93*, %93** %217, align 8
  %219 = getelementptr inbounds %93, %93* %218, i32 0, i32 18
  %220 = load %52*, %52** %219, align 8
  %221 = getelementptr inbounds %52, %52* %220, i32 0, i32 24
  %222 = load i16, i16* %221, align 8
  %223 = and i16 %222, -3
  %224 = or i16 %223, 2
  store i16 %224, i16* %221, align 8
  %225 = load %104*, %104** %8, align 8
  %226 = bitcast %104* %225 to %93**
  %227 = load %93*, %93** %226, align 8
  %228 = getelementptr inbounds %93, %93* %227, i32 0, i32 18
  %229 = load %52*, %52** %228, align 8
  %230 = call i32 @phar_flush(%52* %229, i8* null, i64 0, i32 0, i8** %5)
  %231 = load i8*, i8** %5, align 8
  %232 = icmp ne i8* %231, null
  br i1 %232, label %233, label %238

233:                                              ; preds = %208
  %234 = load %3*, %3** @3, align 8
  %235 = load i8*, i8** %5, align 8
  %236 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %234, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %235)
  %237 = load i8*, i8** %5, align 8
  call void @_efree(i8* %237)
  br label %238

238:                                              ; preds = %233, %208
  store i32 0, i32* %9, align 4
  br label %239

239:                                              ; preds = %238, %137, %93, %82, %69, %51
  %240 = bitcast %104** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %240) #13
  %241 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #13
  %242 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %242) #13
  %243 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #13
  %244 = load i32, i32* %9, align 4
  switch i32 %244, label %246 [
    i32 0, label %245
    i32 1, label %245
  ]

245:                                              ; preds = %239, %239
  ret void

246:                                              ; preds = %239
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_delMetadata(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %104*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %52*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = load %23*, %23** %3, align 8
  %13 = getelementptr inbounds %23, %23* %12, i32 0, i32 4
  %14 = call zeroext i8 @444(%4* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 8
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load %23*, %23** %3, align 8
  %19 = getelementptr inbounds %23, %23* %18, i32 0, i32 4
  br label %21

20:                                               ; preds = %2
  br label %21

21:                                               ; preds = %20, %17
  %22 = phi %4* [ %19, %17 ], [ null, %20 ]
  store %4* %22, %4** %6, align 8
  %23 = bitcast %104** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %4*, %4** %6, align 8
  %25 = getelementptr inbounds %4, %4* %24, i32 0, i32 0
  %26 = bitcast %5* %25 to %21**
  %27 = load %21*, %21** %26, align 8
  %28 = bitcast %21* %27 to i8*
  %29 = load %4*, %4** %6, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = getelementptr inbounds %21, %21* %32, i32 0, i32 3
  %34 = load %22*, %22** %33, align 8
  %35 = getelementptr inbounds %22, %22* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %28, i64 %38
  %40 = bitcast i8* %39 to %104*
  store %104* %40, %104** %7, align 8
  %41 = load %104*, %104** %7, align 8
  %42 = bitcast %104* %41 to %93**
  %43 = load %93*, %93** %42, align 8
  %44 = icmp ne %93* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %21
  %46 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %47 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %46, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %222

48:                                               ; preds = %21
  %49 = load %23*, %23** %3, align 8
  %50 = getelementptr inbounds %23, %23* %49, i32 0, i32 4
  %51 = getelementptr inbounds %4, %4* %50, i32 0, i32 2
  %52 = bitcast %7* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 1)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %48
  br label %69

62:                                               ; preds = %48
  %63 = load %23*, %23** %3, align 8
  %64 = getelementptr inbounds %23, %23* %63, i32 0, i32 4
  %65 = getelementptr inbounds %4, %4* %64, i32 0, i32 2
  %66 = bitcast %7* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %69

69:                                               ; preds = %62, %61
  %70 = phi i32 [ 0, %61 ], [ %68, %62 ]
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store i32 1, i32* %8, align 4
  br label %222

73:                                               ; preds = %69
  %74 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %91

76:                                               ; preds = %73
  %77 = load %104*, %104** %7, align 8
  %78 = bitcast %104* %77 to %93**
  %79 = load %93*, %93** %78, align 8
  %80 = getelementptr inbounds %93, %93* %79, i32 0, i32 18
  %81 = load %52*, %52** %80, align 8
  %82 = getelementptr inbounds %52, %52* %81, i32 0, i32 24
  %83 = load i16, i16* %82, align 8
  %84 = lshr i16 %83, 7
  %85 = and i16 %84, 1
  %86 = zext i16 %85 to i32
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %76
  %89 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %90 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %89, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @146, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %222

91:                                               ; preds = %76, %73
  %92 = load %104*, %104** %7, align 8
  %93 = bitcast %104* %92 to %93**
  %94 = load %93*, %93** %93, align 8
  %95 = getelementptr inbounds %93, %93* %94, i32 0, i32 24
  %96 = load i16, i16* %95, align 2
  %97 = lshr i16 %96, 5
  %98 = and i16 %97, 1
  %99 = zext i16 %98 to i32
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %91
  %102 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %103 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %102, i64 0, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @182, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %222

104:                                              ; preds = %91
  %105 = load %104*, %104** %7, align 8
  %106 = bitcast %104* %105 to %93**
  %107 = load %93*, %93** %106, align 8
  %108 = getelementptr inbounds %93, %93* %107, i32 0, i32 6
  %109 = call zeroext i8 @444(%4* %108)
  %110 = zext i8 %109 to i32
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %215

112:                                              ; preds = %104
  %113 = load %104*, %104** %7, align 8
  %114 = bitcast %104* %113 to %93**
  %115 = load %93*, %93** %114, align 8
  %116 = getelementptr inbounds %93, %93* %115, i32 0, i32 24
  %117 = load i16, i16* %116, align 2
  %118 = lshr i16 %117, 8
  %119 = and i16 %118, 1
  %120 = zext i16 %119 to i32
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %159

122:                                              ; preds = %112
  %123 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %123) #13
  %124 = load %104*, %104** %7, align 8
  %125 = bitcast %104* %124 to %93**
  %126 = load %93*, %93** %125, align 8
  %127 = getelementptr inbounds %93, %93* %126, i32 0, i32 18
  %128 = load %52*, %52** %127, align 8
  store %52* %128, %52** %9, align 8
  %129 = call i32 @phar_copy_on_write(%52** %9)
  %130 = icmp eq i32 -1, %129
  br i1 %130, label %131, label %137

131:                                              ; preds = %122
  %132 = load %3*, %3** @3, align 8
  %133 = load %52*, %52** %9, align 8
  %134 = getelementptr inbounds %52, %52* %133, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %132, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %135)
  store i32 1, i32* %8, align 4
  br label %155

137:                                              ; preds = %122
  %138 = load %52*, %52** %9, align 8
  %139 = getelementptr inbounds %52, %52* %138, i32 0, i32 9
  %140 = load %104*, %104** %7, align 8
  %141 = bitcast %104* %140 to %93**
  %142 = load %93*, %93** %141, align 8
  %143 = getelementptr inbounds %93, %93* %142, i32 0, i32 9
  %144 = load i8*, i8** %143, align 8
  %145 = load %104*, %104** %7, align 8
  %146 = bitcast %104* %145 to %93**
  %147 = load %93*, %93** %146, align 8
  %148 = getelementptr inbounds %93, %93* %147, i32 0, i32 8
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i64
  %151 = call i8* @442(%8* %139, i8* %144, i64 %150)
  %152 = bitcast i8* %151 to %93*
  %153 = load %104*, %104** %7, align 8
  %154 = bitcast %104* %153 to %93**
  store %93* %152, %93** %154, align 8
  store i32 0, i32* %8, align 4
  br label %155

155:                                              ; preds = %137, %131
  %156 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %156) #13
  %157 = load i32, i32* %8, align 4
  switch i32 %157, label %222 [
    i32 0, label %158
  ]

158:                                              ; preds = %155
  br label %159

159:                                              ; preds = %158, %112
  %160 = load %104*, %104** %7, align 8
  %161 = bitcast %104* %160 to %93**
  %162 = load %93*, %93** %161, align 8
  %163 = getelementptr inbounds %93, %93* %162, i32 0, i32 6
  call void @_zval_ptr_dtor(%4* %163)
  br label %164

164:                                              ; preds = %159
  %165 = load %104*, %104** %7, align 8
  %166 = bitcast %104* %165 to %93**
  %167 = load %93*, %93** %166, align 8
  %168 = getelementptr inbounds %93, %93* %167, i32 0, i32 6
  %169 = getelementptr inbounds %4, %4* %168, i32 0, i32 1
  %170 = bitcast %6* %169 to i32*
  store i32 0, i32* %170, align 8
  br label %171

171:                                              ; preds = %164
  br label %172

172:                                              ; preds = %171
  %173 = load %104*, %104** %7, align 8
  %174 = bitcast %104* %173 to %93**
  %175 = load %93*, %93** %174, align 8
  %176 = getelementptr inbounds %93, %93* %175, i32 0, i32 24
  %177 = load i16, i16* %176, align 2
  %178 = and i16 %177, -3
  %179 = or i16 %178, 2
  store i16 %179, i16* %176, align 2
  %180 = load %104*, %104** %7, align 8
  %181 = bitcast %104* %180 to %93**
  %182 = load %93*, %93** %181, align 8
  %183 = getelementptr inbounds %93, %93* %182, i32 0, i32 18
  %184 = load %52*, %52** %183, align 8
  %185 = getelementptr inbounds %52, %52* %184, i32 0, i32 24
  %186 = load i16, i16* %185, align 8
  %187 = and i16 %186, -3
  %188 = or i16 %187, 2
  store i16 %188, i16* %185, align 8
  %189 = load %104*, %104** %7, align 8
  %190 = bitcast %104* %189 to %93**
  %191 = load %93*, %93** %190, align 8
  %192 = getelementptr inbounds %93, %93* %191, i32 0, i32 18
  %193 = load %52*, %52** %192, align 8
  %194 = call i32 @phar_flush(%52* %193, i8* null, i64 0, i32 0, i8** %5)
  %195 = load i8*, i8** %5, align 8
  %196 = icmp ne i8* %195, null
  br i1 %196, label %197, label %208

197:                                              ; preds = %172
  %198 = load %3*, %3** @3, align 8
  %199 = load i8*, i8** %5, align 8
  %200 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %198, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %199)
  %201 = load i8*, i8** %5, align 8
  call void @_efree(i8* %201)
  br label %202

202:                                              ; preds = %197
  %203 = load %4*, %4** %4, align 8
  %204 = getelementptr inbounds %4, %4* %203, i32 0, i32 1
  %205 = bitcast %6* %204 to i32*
  store i32 2, i32* %205, align 8
  br label %206

206:                                              ; preds = %202
  br label %207

207:                                              ; preds = %206
  store i32 1, i32* %8, align 4
  br label %222

208:                                              ; preds = %172
  br label %209

209:                                              ; preds = %208
  %210 = load %4*, %4** %4, align 8
  %211 = getelementptr inbounds %4, %4* %210, i32 0, i32 1
  %212 = bitcast %6* %211 to i32*
  store i32 3, i32* %212, align 8
  br label %213

213:                                              ; preds = %209
  br label %214

214:                                              ; preds = %213
  store i32 1, i32* %8, align 4
  br label %222

215:                                              ; preds = %104
  br label %216

216:                                              ; preds = %215
  %217 = load %4*, %4** %4, align 8
  %218 = getelementptr inbounds %4, %4* %217, i32 0, i32 1
  %219 = bitcast %6* %218 to i32*
  store i32 3, i32* %219, align 8
  br label %220

220:                                              ; preds = %216
  br label %221

221:                                              ; preds = %220
  store i32 1, i32* %8, align 4
  br label %222

222:                                              ; preds = %221, %214, %207, %155, %101, %88, %72, %45
  %223 = bitcast %104** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  %224 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #13
  %225 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_getContent(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %34*, align 8
  %7 = alloca %93*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca %4*, align 8
  %10 = alloca %104*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %4*, align 8
  %13 = alloca %0*, align 8
  %14 = alloca %4*, align 8
  %15 = alloca %0*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast %34** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast %93** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %23*, %23** %3, align 8
  %22 = getelementptr inbounds %23, %23* %21, i32 0, i32 4
  %23 = call zeroext i8 @444(%4* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %23*, %23** %3, align 8
  %28 = getelementptr inbounds %23, %23* %27, i32 0, i32 4
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi %4* [ %28, %26 ], [ null, %29 ]
  store %4* %31, %4** %9, align 8
  %32 = bitcast %104** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = load %4*, %4** %9, align 8
  %34 = getelementptr inbounds %4, %4* %33, i32 0, i32 0
  %35 = bitcast %5* %34 to %21**
  %36 = load %21*, %21** %35, align 8
  %37 = bitcast %21* %36 to i8*
  %38 = load %4*, %4** %9, align 8
  %39 = getelementptr inbounds %4, %4* %38, i32 0, i32 0
  %40 = bitcast %5* %39 to %21**
  %41 = load %21*, %21** %40, align 8
  %42 = getelementptr inbounds %21, %21* %41, i32 0, i32 3
  %43 = load %22*, %22** %42, align 8
  %44 = getelementptr inbounds %22, %22* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = sub i64 0, %46
  %48 = getelementptr inbounds i8, i8* %37, i64 %47
  %49 = bitcast i8* %48 to %104*
  store %104* %49, %104** %10, align 8
  %50 = load %104*, %104** %10, align 8
  %51 = bitcast %104* %50 to %93**
  %52 = load %93*, %93** %51, align 8
  %53 = icmp ne %93* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %30
  %55 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %56 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %55, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %11, align 4
  br label %217

57:                                               ; preds = %30
  %58 = load %23*, %23** %3, align 8
  %59 = getelementptr inbounds %23, %23* %58, i32 0, i32 4
  %60 = getelementptr inbounds %4, %4* %59, i32 0, i32 2
  %61 = bitcast %7* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 1)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %57
  br label %78

71:                                               ; preds = %57
  %72 = load %23*, %23** %3, align 8
  %73 = getelementptr inbounds %23, %23* %72, i32 0, i32 4
  %74 = getelementptr inbounds %4, %4* %73, i32 0, i32 2
  %75 = bitcast %7* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %76, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %78

78:                                               ; preds = %71, %70
  %79 = phi i32 [ 0, %70 ], [ %77, %71 ]
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  store i32 1, i32* %11, align 4
  br label %217

82:                                               ; preds = %78
  %83 = load %104*, %104** %10, align 8
  %84 = bitcast %104* %83 to %93**
  %85 = load %93*, %93** %84, align 8
  %86 = getelementptr inbounds %93, %93* %85, i32 0, i32 24
  %87 = load i16, i16* %86, align 2
  %88 = lshr i16 %87, 3
  %89 = and i16 %88, 1
  %90 = zext i16 %89 to i32
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %107

92:                                               ; preds = %82
  %93 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %94 = load %104*, %104** %10, align 8
  %95 = bitcast %104* %94 to %93**
  %96 = load %93*, %93** %95, align 8
  %97 = getelementptr inbounds %93, %93* %96, i32 0, i32 9
  %98 = load i8*, i8** %97, align 8
  %99 = load %104*, %104** %10, align 8
  %100 = bitcast %104* %99 to %93**
  %101 = load %93*, %93** %100, align 8
  %102 = getelementptr inbounds %93, %93* %101, i32 0, i32 18
  %103 = load %52*, %52** %102, align 8
  %104 = getelementptr inbounds %52, %52* %103, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %93, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @183, i32 0, i32 0), i8* %98, i8* %105)
  store i32 1, i32* %11, align 4
  br label %217

107:                                              ; preds = %82
  %108 = load %104*, %104** %10, align 8
  %109 = bitcast %104* %108 to %93**
  %110 = load %93*, %93** %109, align 8
  %111 = call %93* @phar_get_link_source(%93* %110)
  store %93* %111, %93** %7, align 8
  %112 = load %93*, %93** %7, align 8
  %113 = icmp ne %93* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %107
  %115 = load %104*, %104** %10, align 8
  %116 = bitcast %104* %115 to %93**
  %117 = load %93*, %93** %116, align 8
  store %93* %117, %93** %7, align 8
  br label %118

118:                                              ; preds = %114, %107
  %119 = load %93*, %93** %7, align 8
  %120 = call i32 @phar_open_entry_fp(%93* %119, i8** %5, i32 0)
  %121 = icmp ne i32 0, %120
  br i1 %121, label %122, label %139

122:                                              ; preds = %118
  %123 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %124 = load %104*, %104** %10, align 8
  %125 = bitcast %104* %124 to %93**
  %126 = load %93*, %93** %125, align 8
  %127 = getelementptr inbounds %93, %93* %126, i32 0, i32 9
  %128 = load i8*, i8** %127, align 8
  %129 = load %104*, %104** %10, align 8
  %130 = bitcast %104* %129 to %93**
  %131 = load %93*, %93** %130, align 8
  %132 = getelementptr inbounds %93, %93* %131, i32 0, i32 18
  %133 = load %52*, %52** %132, align 8
  %134 = getelementptr inbounds %52, %52* %133, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = load i8*, i8** %5, align 8
  %137 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %123, i64 0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @184, i32 0, i32 0), i8* %128, i8* %135, i8* %136)
  %138 = load i8*, i8** %5, align 8
  call void @_efree(i8* %138)
  store i32 1, i32* %11, align 4
  br label %217

139:                                              ; preds = %118
  %140 = load %93*, %93** %7, align 8
  %141 = call %34* @phar_get_efp(%93* %140, i32 0)
  store %34* %141, %34** %6, align 8
  %142 = icmp ne %34* %141, null
  br i1 %142, label %158, label %143

143:                                              ; preds = %139
  %144 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %145 = load %104*, %104** %10, align 8
  %146 = bitcast %104* %145 to %93**
  %147 = load %93*, %93** %146, align 8
  %148 = getelementptr inbounds %93, %93* %147, i32 0, i32 9
  %149 = load i8*, i8** %148, align 8
  %150 = load %104*, %104** %10, align 8
  %151 = bitcast %104* %150 to %93**
  %152 = load %93*, %93** %151, align 8
  %153 = getelementptr inbounds %93, %93* %152, i32 0, i32 18
  %154 = load %52*, %52** %153, align 8
  %155 = getelementptr inbounds %52, %52* %154, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %144, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @185, i32 0, i32 0), i8* %149, i8* %156)
  store i32 1, i32* %11, align 4
  br label %217

158:                                              ; preds = %139
  %159 = load %93*, %93** %7, align 8
  %160 = call i32 @phar_seek_efp(%93* %159, i64 0, i32 0, i64 0, i32 0)
  %161 = load %34*, %34** %6, align 8
  %162 = load %93*, %93** %7, align 8
  %163 = getelementptr inbounds %93, %93* %162, i32 0, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = zext i32 %164 to i64
  %166 = call %0* @_php_stream_copy_to_mem(%34* %161, i64 %165, i32 0)
  store %0* %166, %0** %8, align 8
  %167 = load %0*, %0** %8, align 8
  %168 = icmp ne %0* %167, null
  br i1 %168, label %169, label %197

169:                                              ; preds = %158
  br label %170

170:                                              ; preds = %169
  %171 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %171) #13
  %172 = load %4*, %4** %4, align 8
  store %4* %172, %4** %12, align 8
  %173 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %173) #13
  %174 = load %0*, %0** %8, align 8
  store %0* %174, %0** %13, align 8
  %175 = load %0*, %0** %13, align 8
  %176 = load %4*, %4** %12, align 8
  %177 = getelementptr inbounds %4, %4* %176, i32 0, i32 0
  %178 = bitcast %5* %177 to %0**
  store %0* %175, %0** %178, align 8
  %179 = load %0*, %0** %13, align 8
  %180 = getelementptr inbounds %0, %0* %179, i32 0, i32 0
  %181 = getelementptr inbounds %1, %1* %180, i32 0, i32 1
  %182 = bitcast %2* %181 to %102*
  %183 = getelementptr inbounds %102, %102* %182, i32 0, i32 1
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = and i32 %185, 2
  %187 = icmp ne i32 %186, 0
  %188 = zext i1 %187 to i64
  %189 = select i1 %187, i32 6, i32 5126
  %190 = load %4*, %4** %12, align 8
  %191 = getelementptr inbounds %4, %4* %190, i32 0, i32 1
  %192 = bitcast %6* %191 to i32*
  store i32 %189, i32* %192, align 8
  %193 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #13
  br label %195

195:                                              ; preds = %170
  br label %196

196:                                              ; preds = %195
  store i32 1, i32* %11, align 4
  br label %217

197:                                              ; preds = %158
  br label %198

198:                                              ; preds = %197
  br label %199

199:                                              ; preds = %198
  %200 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %200) #13
  %201 = load %4*, %4** %4, align 8
  store %4* %201, %4** %14, align 8
  %202 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #13
  %203 = load %0*, %0** @zend_empty_string, align 8
  store %0* %203, %0** %15, align 8
  %204 = load %0*, %0** %15, align 8
  %205 = load %4*, %4** %14, align 8
  %206 = getelementptr inbounds %4, %4* %205, i32 0, i32 0
  %207 = bitcast %5* %206 to %0**
  store %0* %204, %0** %207, align 8
  %208 = load %4*, %4** %14, align 8
  %209 = getelementptr inbounds %4, %4* %208, i32 0, i32 1
  %210 = bitcast %6* %209 to i32*
  store i32 6, i32* %210, align 8
  %211 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %211) #13
  %212 = bitcast %4** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %212) #13
  br label %213

213:                                              ; preds = %199
  br label %214

214:                                              ; preds = %213
  br label %215

215:                                              ; preds = %214
  br label %216

216:                                              ; preds = %215
  store i32 1, i32* %11, align 4
  br label %217

217:                                              ; preds = %216, %196, %143, %122, %92, %81, %54
  %218 = bitcast %104** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %218) #13
  %219 = bitcast %4** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %219) #13
  %220 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #13
  %221 = bitcast %93** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  %222 = bitcast %34** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  %223 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  ret void
}

declare dso_local %93* @phar_get_link_source(%93*) #2

declare dso_local i32 @phar_open_entry_fp(%93*, i8**, i32) #2

declare dso_local %34* @phar_get_efp(%93*, i32) #2

declare dso_local i32 @phar_seek_efp(%93*, i64, i32, i64, i32) #2

declare dso_local %0* @_php_stream_copy_to_mem(%34*, i64, i32) #2

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_compress(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %4*, align 8
  %8 = alloca %104*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %52*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %11 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = load %23*, %23** %3, align 8
  %15 = getelementptr inbounds %23, %23* %14, i32 0, i32 4
  %16 = call zeroext i8 @444(%4* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 8
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = load %23*, %23** %3, align 8
  %21 = getelementptr inbounds %23, %23* %20, i32 0, i32 4
  br label %23

22:                                               ; preds = %2
  br label %23

23:                                               ; preds = %22, %19
  %24 = phi %4* [ %21, %19 ], [ null, %22 ]
  store %4* %24, %4** %7, align 8
  %25 = bitcast %104** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load %4*, %4** %7, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 0
  %28 = bitcast %5* %27 to %21**
  %29 = load %21*, %21** %28, align 8
  %30 = bitcast %21* %29 to i8*
  %31 = load %4*, %4** %7, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to %21**
  %34 = load %21*, %21** %33, align 8
  %35 = getelementptr inbounds %21, %21* %34, i32 0, i32 3
  %36 = load %22*, %22** %35, align 8
  %37 = getelementptr inbounds %22, %22* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = sub i64 0, %39
  %41 = getelementptr inbounds i8, i8* %30, i64 %40
  %42 = bitcast i8* %41 to %104*
  store %104* %42, %104** %8, align 8
  %43 = load %104*, %104** %8, align 8
  %44 = bitcast %104* %43 to %93**
  %45 = load %93*, %93** %44, align 8
  %46 = icmp ne %93* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %23
  %48 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %49 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %48, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

50:                                               ; preds = %23
  %51 = load %23*, %23** %3, align 8
  %52 = getelementptr inbounds %23, %23* %51, i32 0, i32 4
  %53 = getelementptr inbounds %4, %4* %52, i32 0, i32 2
  %54 = bitcast %7* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0), i64* %5)
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %58, label %59

58:                                               ; preds = %50
  store i32 1, i32* %9, align 4
  br label %367

59:                                               ; preds = %50
  %60 = load %104*, %104** %8, align 8
  %61 = bitcast %104* %60 to %93**
  %62 = load %93*, %93** %61, align 8
  %63 = getelementptr inbounds %93, %93* %62, i32 0, i32 24
  %64 = load i16, i16* %63, align 2
  %65 = lshr i16 %64, 6
  %66 = and i16 %65, 1
  %67 = zext i16 %66 to i32
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %59
  %70 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %71 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %70, i64 0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @186, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

72:                                               ; preds = %59
  %73 = load %104*, %104** %8, align 8
  %74 = bitcast %104* %73 to %93**
  %75 = load %93*, %93** %74, align 8
  %76 = getelementptr inbounds %93, %93* %75, i32 0, i32 24
  %77 = load i16, i16* %76, align 2
  %78 = lshr i16 %77, 3
  %79 = and i16 %78, 1
  %80 = zext i16 %79 to i32
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %72
  %83 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %84 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %83, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @187, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

85:                                               ; preds = %72
  %86 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %103

88:                                               ; preds = %85
  %89 = load %104*, %104** %8, align 8
  %90 = bitcast %104* %89 to %93**
  %91 = load %93*, %93** %90, align 8
  %92 = getelementptr inbounds %93, %93* %91, i32 0, i32 18
  %93 = load %52*, %52** %92, align 8
  %94 = getelementptr inbounds %52, %52* %93, i32 0, i32 24
  %95 = load i16, i16* %94, align 8
  %96 = lshr i16 %95, 7
  %97 = and i16 %96, 1
  %98 = zext i16 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %88
  %101 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %102 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %101, i64 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @124, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

103:                                              ; preds = %88, %85
  %104 = load %104*, %104** %8, align 8
  %105 = bitcast %104* %104 to %93**
  %106 = load %93*, %93** %105, align 8
  %107 = getelementptr inbounds %93, %93* %106, i32 0, i32 24
  %108 = load i16, i16* %107, align 2
  %109 = lshr i16 %108, 2
  %110 = and i16 %109, 1
  %111 = zext i16 %110 to i32
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %103
  %114 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %115 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %114, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @188, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

116:                                              ; preds = %103
  %117 = load %104*, %104** %8, align 8
  %118 = bitcast %104* %117 to %93**
  %119 = load %93*, %93** %118, align 8
  %120 = getelementptr inbounds %93, %93* %119, i32 0, i32 24
  %121 = load i16, i16* %120, align 2
  %122 = lshr i16 %121, 8
  %123 = and i16 %122, 1
  %124 = zext i16 %123 to i32
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %163

126:                                              ; preds = %116
  %127 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #13
  %128 = load %104*, %104** %8, align 8
  %129 = bitcast %104* %128 to %93**
  %130 = load %93*, %93** %129, align 8
  %131 = getelementptr inbounds %93, %93* %130, i32 0, i32 18
  %132 = load %52*, %52** %131, align 8
  store %52* %132, %52** %10, align 8
  %133 = call i32 @phar_copy_on_write(%52** %10)
  %134 = icmp eq i32 -1, %133
  br i1 %134, label %135, label %141

135:                                              ; preds = %126
  %136 = load %3*, %3** @3, align 8
  %137 = load %52*, %52** %10, align 8
  %138 = getelementptr inbounds %52, %52* %137, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %136, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %139)
  store i32 1, i32* %9, align 4
  br label %159

141:                                              ; preds = %126
  %142 = load %52*, %52** %10, align 8
  %143 = getelementptr inbounds %52, %52* %142, i32 0, i32 9
  %144 = load %104*, %104** %8, align 8
  %145 = bitcast %104* %144 to %93**
  %146 = load %93*, %93** %145, align 8
  %147 = getelementptr inbounds %93, %93* %146, i32 0, i32 9
  %148 = load i8*, i8** %147, align 8
  %149 = load %104*, %104** %8, align 8
  %150 = bitcast %104* %149 to %93**
  %151 = load %93*, %93** %150, align 8
  %152 = getelementptr inbounds %93, %93* %151, i32 0, i32 8
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i64
  %155 = call i8* @442(%8* %143, i8* %148, i64 %154)
  %156 = bitcast i8* %155 to %93*
  %157 = load %104*, %104** %8, align 8
  %158 = bitcast %104* %157 to %93**
  store %93* %156, %93** %158, align 8
  store i32 0, i32* %9, align 4
  br label %159

159:                                              ; preds = %141, %135
  %160 = bitcast %52** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #13
  %161 = load i32, i32* %9, align 4
  switch i32 %161, label %367 [
    i32 0, label %162
  ]

162:                                              ; preds = %159
  br label %163

163:                                              ; preds = %162, %116
  %164 = load i64, i64* %5, align 8
  switch i64 %164, label %327 [
    i64 4096, label %165
    i64 8192, label %246
  ]

165:                                              ; preds = %163
  %166 = load %104*, %104** %8, align 8
  %167 = bitcast %104* %166 to %93**
  %168 = load %93*, %93** %167, align 8
  %169 = getelementptr inbounds %93, %93* %168, i32 0, i32 4
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 4096
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  br label %174

174:                                              ; preds = %173
  %175 = load %4*, %4** %4, align 8
  %176 = getelementptr inbounds %4, %4* %175, i32 0, i32 1
  %177 = bitcast %6* %176 to i32*
  store i32 3, i32* %177, align 8
  br label %178

178:                                              ; preds = %174
  br label %179

179:                                              ; preds = %178
  store i32 1, i32* %9, align 4
  br label %367

180:                                              ; preds = %165
  %181 = load %104*, %104** %8, align 8
  %182 = bitcast %104* %181 to %93**
  %183 = load %93*, %93** %182, align 8
  %184 = getelementptr inbounds %93, %93* %183, i32 0, i32 4
  %185 = load i32, i32* %184, align 8
  %186 = and i32 %185, 8192
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %218

188:                                              ; preds = %180
  %189 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %188
  %192 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %193 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %192, i64 0, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @189, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

194:                                              ; preds = %188
  %195 = load %104*, %104** %8, align 8
  %196 = bitcast %104* %195 to %93**
  %197 = load %93*, %93** %196, align 8
  %198 = call i32 @phar_open_entry_fp(%93* %197, i8** %6, i32 1)
  %199 = icmp ne i32 0, %198
  br i1 %199, label %200, label %217

200:                                              ; preds = %194
  %201 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %202 = load %104*, %104** %8, align 8
  %203 = bitcast %104* %202 to %93**
  %204 = load %93*, %93** %203, align 8
  %205 = getelementptr inbounds %93, %93* %204, i32 0, i32 9
  %206 = load i8*, i8** %205, align 8
  %207 = load %104*, %104** %8, align 8
  %208 = bitcast %104* %207 to %93**
  %209 = load %93*, %93** %208, align 8
  %210 = getelementptr inbounds %93, %93* %209, i32 0, i32 18
  %211 = load %52*, %52** %210, align 8
  %212 = getelementptr inbounds %52, %52* %211, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = load i8*, i8** %6, align 8
  %215 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %201, i64 0, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @190, i32 0, i32 0), i8* %206, i8* %213, i8* %214)
  %216 = load i8*, i8** %6, align 8
  call void @_efree(i8* %216)
  store i32 1, i32* %9, align 4
  br label %367

217:                                              ; preds = %194
  br label %218

218:                                              ; preds = %217, %180
  %219 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %218
  %222 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %223 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %222, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @191, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

224:                                              ; preds = %218
  %225 = load %104*, %104** %8, align 8
  %226 = bitcast %104* %225 to %93**
  %227 = load %93*, %93** %226, align 8
  %228 = getelementptr inbounds %93, %93* %227, i32 0, i32 4
  %229 = load i32, i32* %228, align 8
  %230 = load %104*, %104** %8, align 8
  %231 = bitcast %104* %230 to %93**
  %232 = load %93*, %93** %231, align 8
  %233 = getelementptr inbounds %93, %93* %232, i32 0, i32 5
  store i32 %229, i32* %233, align 4
  %234 = load %104*, %104** %8, align 8
  %235 = bitcast %104* %234 to %93**
  %236 = load %93*, %93** %235, align 8
  %237 = getelementptr inbounds %93, %93* %236, i32 0, i32 4
  %238 = load i32, i32* %237, align 8
  %239 = and i32 %238, -61441
  store i32 %239, i32* %237, align 8
  %240 = load %104*, %104** %8, align 8
  %241 = bitcast %104* %240 to %93**
  %242 = load %93*, %93** %241, align 8
  %243 = getelementptr inbounds %93, %93* %242, i32 0, i32 4
  %244 = load i32, i32* %243, align 8
  %245 = or i32 %244, 4096
  store i32 %245, i32* %243, align 8
  br label %330

246:                                              ; preds = %163
  %247 = load %104*, %104** %8, align 8
  %248 = bitcast %104* %247 to %93**
  %249 = load %93*, %93** %248, align 8
  %250 = getelementptr inbounds %93, %93* %249, i32 0, i32 4
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 8192
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %261

254:                                              ; preds = %246
  br label %255

255:                                              ; preds = %254
  %256 = load %4*, %4** %4, align 8
  %257 = getelementptr inbounds %4, %4* %256, i32 0, i32 1
  %258 = bitcast %6* %257 to i32*
  store i32 3, i32* %258, align 8
  br label %259

259:                                              ; preds = %255
  br label %260

260:                                              ; preds = %259
  store i32 1, i32* %9, align 4
  br label %367

261:                                              ; preds = %246
  %262 = load %104*, %104** %8, align 8
  %263 = bitcast %104* %262 to %93**
  %264 = load %93*, %93** %263, align 8
  %265 = getelementptr inbounds %93, %93* %264, i32 0, i32 4
  %266 = load i32, i32* %265, align 8
  %267 = and i32 %266, 4096
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %269, label %299

269:                                              ; preds = %261
  %270 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %275, label %272

272:                                              ; preds = %269
  %273 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %274 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %273, i64 0, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @192, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

275:                                              ; preds = %269
  %276 = load %104*, %104** %8, align 8
  %277 = bitcast %104* %276 to %93**
  %278 = load %93*, %93** %277, align 8
  %279 = call i32 @phar_open_entry_fp(%93* %278, i8** %6, i32 1)
  %280 = icmp ne i32 0, %279
  br i1 %280, label %281, label %298

281:                                              ; preds = %275
  %282 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %283 = load %104*, %104** %8, align 8
  %284 = bitcast %104* %283 to %93**
  %285 = load %93*, %93** %284, align 8
  %286 = getelementptr inbounds %93, %93* %285, i32 0, i32 9
  %287 = load i8*, i8** %286, align 8
  %288 = load %104*, %104** %8, align 8
  %289 = bitcast %104* %288 to %93**
  %290 = load %93*, %93** %289, align 8
  %291 = getelementptr inbounds %93, %93* %290, i32 0, i32 18
  %292 = load %52*, %52** %291, align 8
  %293 = getelementptr inbounds %52, %52* %292, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  %295 = load i8*, i8** %6, align 8
  %296 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %282, i64 0, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @193, i32 0, i32 0), i8* %287, i8* %294, i8* %295)
  %297 = load i8*, i8** %6, align 8
  call void @_efree(i8* %297)
  store i32 1, i32* %9, align 4
  br label %367

298:                                              ; preds = %275
  br label %299

299:                                              ; preds = %298, %261
  %300 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %305, label %302

302:                                              ; preds = %299
  %303 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %304 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %303, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @194, i32 0, i32 0))
  store i32 1, i32* %9, align 4
  br label %367

305:                                              ; preds = %299
  %306 = load %104*, %104** %8, align 8
  %307 = bitcast %104* %306 to %93**
  %308 = load %93*, %93** %307, align 8
  %309 = getelementptr inbounds %93, %93* %308, i32 0, i32 4
  %310 = load i32, i32* %309, align 8
  %311 = load %104*, %104** %8, align 8
  %312 = bitcast %104* %311 to %93**
  %313 = load %93*, %93** %312, align 8
  %314 = getelementptr inbounds %93, %93* %313, i32 0, i32 5
  store i32 %310, i32* %314, align 4
  %315 = load %104*, %104** %8, align 8
  %316 = bitcast %104* %315 to %93**
  %317 = load %93*, %93** %316, align 8
  %318 = getelementptr inbounds %93, %93* %317, i32 0, i32 4
  %319 = load i32, i32* %318, align 8
  %320 = and i32 %319, -61441
  store i32 %320, i32* %318, align 8
  %321 = load %104*, %104** %8, align 8
  %322 = bitcast %104* %321 to %93**
  %323 = load %93*, %93** %322, align 8
  %324 = getelementptr inbounds %93, %93* %323, i32 0, i32 4
  %325 = load i32, i32* %324, align 8
  %326 = or i32 %325, 8192
  store i32 %326, i32* %324, align 8
  br label %330

327:                                              ; preds = %163
  %328 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %329 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %328, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @176, i32 0, i32 0))
  br label %330

330:                                              ; preds = %327, %305, %224
  %331 = load %104*, %104** %8, align 8
  %332 = bitcast %104* %331 to %93**
  %333 = load %93*, %93** %332, align 8
  %334 = getelementptr inbounds %93, %93* %333, i32 0, i32 18
  %335 = load %52*, %52** %334, align 8
  %336 = getelementptr inbounds %52, %52* %335, i32 0, i32 24
  %337 = load i16, i16* %336, align 8
  %338 = and i16 %337, -3
  %339 = or i16 %338, 2
  store i16 %339, i16* %336, align 8
  %340 = load %104*, %104** %8, align 8
  %341 = bitcast %104* %340 to %93**
  %342 = load %93*, %93** %341, align 8
  %343 = getelementptr inbounds %93, %93* %342, i32 0, i32 24
  %344 = load i16, i16* %343, align 2
  %345 = and i16 %344, -3
  %346 = or i16 %345, 2
  store i16 %346, i16* %343, align 2
  %347 = load %104*, %104** %8, align 8
  %348 = bitcast %104* %347 to %93**
  %349 = load %93*, %93** %348, align 8
  %350 = getelementptr inbounds %93, %93* %349, i32 0, i32 18
  %351 = load %52*, %52** %350, align 8
  %352 = call i32 @phar_flush(%52* %351, i8* null, i64 0, i32 0, i8** %6)
  %353 = load i8*, i8** %6, align 8
  %354 = icmp ne i8* %353, null
  br i1 %354, label %355, label %360

355:                                              ; preds = %330
  %356 = load %3*, %3** @3, align 8
  %357 = load i8*, i8** %6, align 8
  %358 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %356, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %357)
  %359 = load i8*, i8** %6, align 8
  call void @_efree(i8* %359)
  br label %360

360:                                              ; preds = %355, %330
  br label %361

361:                                              ; preds = %360
  %362 = load %4*, %4** %4, align 8
  %363 = getelementptr inbounds %4, %4* %362, i32 0, i32 1
  %364 = bitcast %6* %363 to i32*
  store i32 3, i32* %364, align 8
  br label %365

365:                                              ; preds = %361
  br label %366

366:                                              ; preds = %365
  store i32 1, i32* %9, align 4
  br label %367

367:                                              ; preds = %366, %302, %281, %272, %260, %221, %200, %191, %179, %159, %113, %100, %82, %69, %58, %47
  %368 = bitcast %104** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #13
  %369 = bitcast %4** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369) #13
  %370 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #13
  %371 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_PharFileInfo_decompress(%23* %0, %4* %1) #0 {
  %3 = alloca %23*, align 8
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca %104*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %52*, align 8
  store %23* %0, %23** %3, align 8
  store %4* %1, %4** %4, align 8
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = load %23*, %23** %3, align 8
  %13 = getelementptr inbounds %23, %23* %12, i32 0, i32 4
  %14 = call zeroext i8 @444(%4* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 8
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load %23*, %23** %3, align 8
  %19 = getelementptr inbounds %23, %23* %18, i32 0, i32 4
  br label %21

20:                                               ; preds = %2
  br label %21

21:                                               ; preds = %20, %17
  %22 = phi %4* [ %19, %17 ], [ null, %20 ]
  store %4* %22, %4** %6, align 8
  %23 = bitcast %104** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load %4*, %4** %6, align 8
  %25 = getelementptr inbounds %4, %4* %24, i32 0, i32 0
  %26 = bitcast %5* %25 to %21**
  %27 = load %21*, %21** %26, align 8
  %28 = bitcast %21* %27 to i8*
  %29 = load %4*, %4** %6, align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 0
  %31 = bitcast %5* %30 to %21**
  %32 = load %21*, %21** %31, align 8
  %33 = getelementptr inbounds %21, %21* %32, i32 0, i32 3
  %34 = load %22*, %22** %33, align 8
  %35 = getelementptr inbounds %22, %22* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %28, i64 %38
  %40 = bitcast i8* %39 to %104*
  store %104* %40, %104** %7, align 8
  %41 = load %104*, %104** %7, align 8
  %42 = bitcast %104* %41 to %93**
  %43 = load %93*, %93** %42, align 8
  %44 = icmp ne %93* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %21
  %46 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %47 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %46, i64 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @175, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %294

48:                                               ; preds = %21
  %49 = load %23*, %23** %3, align 8
  %50 = getelementptr inbounds %23, %23* %49, i32 0, i32 4
  %51 = getelementptr inbounds %4, %4* %50, i32 0, i32 2
  %52 = bitcast %7* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 1)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %48
  br label %69

62:                                               ; preds = %48
  %63 = load %23*, %23** %3, align 8
  %64 = getelementptr inbounds %23, %23* %63, i32 0, i32 4
  %65 = getelementptr inbounds %4, %4* %64, i32 0, i32 2
  %66 = bitcast %7* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @22, i32 0, i32 0))
  br label %69

69:                                               ; preds = %62, %61
  %70 = phi i32 [ 0, %61 ], [ %68, %62 ]
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store i32 1, i32* %8, align 4
  br label %294

73:                                               ; preds = %69
  %74 = load %104*, %104** %7, align 8
  %75 = bitcast %104* %74 to %93**
  %76 = load %93*, %93** %75, align 8
  %77 = getelementptr inbounds %93, %93* %76, i32 0, i32 24
  %78 = load i16, i16* %77, align 2
  %79 = lshr i16 %78, 3
  %80 = and i16 %79, 1
  %81 = zext i16 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %73
  %84 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %85 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %84, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @187, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %294

86:                                               ; preds = %73
  %87 = load %104*, %104** %7, align 8
  %88 = bitcast %104* %87 to %93**
  %89 = load %93*, %93** %88, align 8
  %90 = getelementptr inbounds %93, %93* %89, i32 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 61440
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %86
  br label %95

95:                                               ; preds = %94
  %96 = load %4*, %4** %4, align 8
  %97 = getelementptr inbounds %4, %4* %96, i32 0, i32 1
  %98 = bitcast %6* %97 to i32*
  store i32 3, i32* %98, align 8
  br label %99

99:                                               ; preds = %95
  br label %100

100:                                              ; preds = %99
  store i32 1, i32* %8, align 4
  br label %294

101:                                              ; preds = %86
  %102 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 5), align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %101
  %105 = load %104*, %104** %7, align 8
  %106 = bitcast %104* %105 to %93**
  %107 = load %93*, %93** %106, align 8
  %108 = getelementptr inbounds %93, %93* %107, i32 0, i32 18
  %109 = load %52*, %52** %108, align 8
  %110 = getelementptr inbounds %52, %52* %109, i32 0, i32 24
  %111 = load i16, i16* %110, align 8
  %112 = lshr i16 %111, 7
  %113 = and i16 %112, 1
  %114 = zext i16 %113 to i32
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %104
  %117 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %118 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %117, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @195, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %294

119:                                              ; preds = %104, %101
  %120 = load %104*, %104** %7, align 8
  %121 = bitcast %104* %120 to %93**
  %122 = load %93*, %93** %121, align 8
  %123 = getelementptr inbounds %93, %93* %122, i32 0, i32 24
  %124 = load i16, i16* %123, align 2
  %125 = lshr i16 %124, 2
  %126 = and i16 %125, 1
  %127 = zext i16 %126 to i32
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %119
  %130 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %131 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %130, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @188, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %294

132:                                              ; preds = %119
  %133 = load %104*, %104** %7, align 8
  %134 = bitcast %104* %133 to %93**
  %135 = load %93*, %93** %134, align 8
  %136 = getelementptr inbounds %93, %93* %135, i32 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 4096
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %146

140:                                              ; preds = %132
  %141 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140
  %144 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %145 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %144, i64 0, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @196, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %294

146:                                              ; preds = %140, %132
  %147 = load %104*, %104** %7, align 8
  %148 = bitcast %104* %147 to %93**
  %149 = load %93*, %93** %148, align 8
  %150 = getelementptr inbounds %93, %93* %149, i32 0, i32 4
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 8192
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %160

154:                                              ; preds = %146
  %155 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %154
  %158 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %159 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %158, i64 0, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @197, i32 0, i32 0))
  store i32 1, i32* %8, align 4
  br label %294

160:                                              ; preds = %154, %146
  %161 = load %104*, %104** %7, align 8
  %162 = bitcast %104* %161 to %93**
  %163 = load %93*, %93** %162, align 8
  %164 = getelementptr inbounds %93, %93* %163, i32 0, i32 24
  %165 = load i16, i16* %164, align 2
  %166 = lshr i16 %165, 8
  %167 = and i16 %166, 1
  %168 = zext i16 %167 to i32
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %207

170:                                              ; preds = %160
  %171 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %171) #13
  %172 = load %104*, %104** %7, align 8
  %173 = bitcast %104* %172 to %93**
  %174 = load %93*, %93** %173, align 8
  %175 = getelementptr inbounds %93, %93* %174, i32 0, i32 18
  %176 = load %52*, %52** %175, align 8
  store %52* %176, %52** %9, align 8
  %177 = call i32 @phar_copy_on_write(%52** %9)
  %178 = icmp eq i32 -1, %177
  br i1 %178, label %179, label %185

179:                                              ; preds = %170
  %180 = load %3*, %3** @3, align 8
  %181 = load %52*, %52** %9, align 8
  %182 = getelementptr inbounds %52, %52* %181, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %180, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @81, i32 0, i32 0), i8* %183)
  store i32 1, i32* %8, align 4
  br label %203

185:                                              ; preds = %170
  %186 = load %52*, %52** %9, align 8
  %187 = getelementptr inbounds %52, %52* %186, i32 0, i32 9
  %188 = load %104*, %104** %7, align 8
  %189 = bitcast %104* %188 to %93**
  %190 = load %93*, %93** %189, align 8
  %191 = getelementptr inbounds %93, %93* %190, i32 0, i32 9
  %192 = load i8*, i8** %191, align 8
  %193 = load %104*, %104** %7, align 8
  %194 = bitcast %104* %193 to %93**
  %195 = load %93*, %93** %194, align 8
  %196 = getelementptr inbounds %93, %93* %195, i32 0, i32 8
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = call i8* @442(%8* %187, i8* %192, i64 %198)
  %200 = bitcast i8* %199 to %93*
  %201 = load %104*, %104** %7, align 8
  %202 = bitcast %104* %201 to %93**
  store %93* %200, %93** %202, align 8
  store i32 0, i32* %8, align 4
  br label %203

203:                                              ; preds = %185, %179
  %204 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #13
  %205 = load i32, i32* %8, align 4
  switch i32 %205, label %294 [
    i32 0, label %206
  ]

206:                                              ; preds = %203
  br label %207

207:                                              ; preds = %206, %160
  %208 = load %104*, %104** %7, align 8
  %209 = bitcast %104* %208 to %93**
  %210 = load %93*, %93** %209, align 8
  %211 = getelementptr inbounds %93, %93* %210, i32 0, i32 14
  %212 = load %34*, %34** %211, align 8
  %213 = icmp ne %34* %212, null
  br i1 %213, label %242, label %214

214:                                              ; preds = %207
  %215 = load %104*, %104** %7, align 8
  %216 = bitcast %104* %215 to %93**
  %217 = load %93*, %93** %216, align 8
  %218 = getelementptr inbounds %93, %93* %217, i32 0, i32 18
  %219 = load %52*, %52** %218, align 8
  %220 = call i32 @phar_open_archive_fp(%52* %219)
  %221 = icmp eq i32 -1, %220
  br i1 %221, label %222, label %237

222:                                              ; preds = %214
  %223 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %224 = load %104*, %104** %7, align 8
  %225 = bitcast %104* %224 to %93**
  %226 = load %93*, %93** %225, align 8
  %227 = getelementptr inbounds %93, %93* %226, i32 0, i32 9
  %228 = load i8*, i8** %227, align 8
  %229 = load %104*, %104** %7, align 8
  %230 = bitcast %104* %229 to %93**
  %231 = load %93*, %93** %230, align 8
  %232 = getelementptr inbounds %93, %93* %231, i32 0, i32 18
  %233 = load %52*, %52** %232, align 8
  %234 = getelementptr inbounds %52, %52* %233, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %223, i64 0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @198, i32 0, i32 0), i8* %228, i8* %235)
  store i32 1, i32* %8, align 4
  br label %294

237:                                              ; preds = %214
  %238 = load %104*, %104** %7, align 8
  %239 = bitcast %104* %238 to %93**
  %240 = load %93*, %93** %239, align 8
  %241 = getelementptr inbounds %93, %93* %240, i32 0, i32 10
  store i32 0, i32* %241, align 8
  br label %242

242:                                              ; preds = %237, %207
  %243 = load %104*, %104** %7, align 8
  %244 = bitcast %104* %243 to %93**
  %245 = load %93*, %93** %244, align 8
  %246 = getelementptr inbounds %93, %93* %245, i32 0, i32 4
  %247 = load i32, i32* %246, align 8
  %248 = load %104*, %104** %7, align 8
  %249 = bitcast %104* %248 to %93**
  %250 = load %93*, %93** %249, align 8
  %251 = getelementptr inbounds %93, %93* %250, i32 0, i32 5
  store i32 %247, i32* %251, align 4
  %252 = load %104*, %104** %7, align 8
  %253 = bitcast %104* %252 to %93**
  %254 = load %93*, %93** %253, align 8
  %255 = getelementptr inbounds %93, %93* %254, i32 0, i32 4
  %256 = load i32, i32* %255, align 8
  %257 = and i32 %256, -61441
  store i32 %257, i32* %255, align 8
  %258 = load %104*, %104** %7, align 8
  %259 = bitcast %104* %258 to %93**
  %260 = load %93*, %93** %259, align 8
  %261 = getelementptr inbounds %93, %93* %260, i32 0, i32 18
  %262 = load %52*, %52** %261, align 8
  %263 = getelementptr inbounds %52, %52* %262, i32 0, i32 24
  %264 = load i16, i16* %263, align 8
  %265 = and i16 %264, -3
  %266 = or i16 %265, 2
  store i16 %266, i16* %263, align 8
  %267 = load %104*, %104** %7, align 8
  %268 = bitcast %104* %267 to %93**
  %269 = load %93*, %93** %268, align 8
  %270 = getelementptr inbounds %93, %93* %269, i32 0, i32 24
  %271 = load i16, i16* %270, align 2
  %272 = and i16 %271, -3
  %273 = or i16 %272, 2
  store i16 %273, i16* %270, align 2
  %274 = load %104*, %104** %7, align 8
  %275 = bitcast %104* %274 to %93**
  %276 = load %93*, %93** %275, align 8
  %277 = getelementptr inbounds %93, %93* %276, i32 0, i32 18
  %278 = load %52*, %52** %277, align 8
  %279 = call i32 @phar_flush(%52* %278, i8* null, i64 0, i32 0, i8** %5)
  %280 = load i8*, i8** %5, align 8
  %281 = icmp ne i8* %280, null
  br i1 %281, label %282, label %287

282:                                              ; preds = %242
  %283 = load %3*, %3** @3, align 8
  %284 = load i8*, i8** %5, align 8
  %285 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %283, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %284)
  %286 = load i8*, i8** %5, align 8
  call void @_efree(i8* %286)
  br label %287

287:                                              ; preds = %282, %242
  br label %288

288:                                              ; preds = %287
  %289 = load %4*, %4** %4, align 8
  %290 = getelementptr inbounds %4, %4* %289, i32 0, i32 1
  %291 = bitcast %6* %290 to i32*
  store i32 3, i32* %291, align 8
  br label %292

292:                                              ; preds = %288
  br label %293

293:                                              ; preds = %292
  store i32 1, i32* %8, align 4
  br label %294

294:                                              ; preds = %293, %222, %203, %157, %143, %129, %116, %100, %83, %72, %45
  %295 = bitcast %104** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %295) #13
  %296 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296) #13
  %297 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %297) #13
  ret void
}

declare dso_local i32 @phar_open_archive_fp(%52*) #2

; Function Attrs: nounwind uwtable
define hidden void @phar_object_init() #0 {
  %1 = alloca %3, align 8
  %2 = alloca %0*, align 8
  %3 = alloca %0*, align 8
  %4 = alloca %0*, align 8
  %5 = alloca %0*, align 8
  %6 = bitcast %3* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %6) #13
  %7 = bitcast %0** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #13
  %8 = call %0* @441(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @295, i32 0, i32 0), i64 13, i32 1)
  store %0* %8, %0** %2, align 8
  %9 = load %0* (%0*)*, %0* (%0*)** @zend_new_interned_string, align 8
  %10 = load %0*, %0** %2, align 8
  %11 = call %0* %9(%0* %10)
  %12 = getelementptr inbounds %3, %3* %1, i32 0, i32 1
  store %0* %11, %0** %12, align 8
  %13 = getelementptr inbounds %3, %3* %1, i32 0, i32 13
  store %11* null, %11** %13, align 8
  %14 = getelementptr inbounds %3, %3* %1, i32 0, i32 14
  store %11* null, %11** %14, align 8
  %15 = getelementptr inbounds %3, %3* %1, i32 0, i32 15
  store %11* null, %11** %15, align 8
  %16 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %16, align 8
  %17 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %17, align 8
  %18 = getelementptr inbounds %3, %3* %1, i32 0, i32 27
  store %21* (%3*)* null, %21* (%3*)** %18, align 8
  %19 = getelementptr inbounds %3, %3* %1, i32 0, i32 29
  store i32 (%3*, %3*)* null, i32 (%3*, %3*)** %19, align 8
  %20 = getelementptr inbounds %3, %3* %1, i32 0, i32 30
  store %11* (%3*, %0*)* null, %11* (%3*, %0*)** %20, align 8
  %21 = getelementptr inbounds %3, %3* %1, i32 0, i32 20
  store %11* null, %11** %21, align 8
  %22 = getelementptr inbounds %3, %3* %1, i32 0, i32 21
  store %11* null, %11** %22, align 8
  %23 = getelementptr inbounds %3, %3* %1, i32 0, i32 22
  store %11* null, %11** %23, align 8
  %24 = getelementptr inbounds %3, %3* %1, i32 0, i32 16
  store %11* null, %11** %24, align 8
  %25 = getelementptr inbounds %3, %3* %1, i32 0, i32 17
  store %11* null, %11** %25, align 8
  %26 = getelementptr inbounds %3, %3* %1, i32 0, i32 18
  store %11* null, %11** %26, align 8
  %27 = getelementptr inbounds %3, %3* %1, i32 0, i32 19
  store %11* null, %11** %27, align 8
  %28 = getelementptr inbounds %3, %3* %1, i32 0, i32 23
  store %11* null, %11** %28, align 8
  %29 = getelementptr inbounds %3, %3* %1, i32 0, i32 24
  store %11* null, %11** %29, align 8
  %30 = getelementptr inbounds %3, %3* %1, i32 0, i32 25
  store %11* null, %11** %30, align 8
  %31 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %31, align 8
  %32 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %32, align 8
  %33 = getelementptr inbounds %3, %3* %1, i32 0, i32 2
  store %3* null, %3** %33, align 8
  %34 = getelementptr inbounds %3, %3* %1, i32 0, i32 33
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %3, %3* %1, i32 0, i32 36
  store %3** null, %3*** %35, align 8
  %36 = getelementptr inbounds %3, %3* %1, i32 0, i32 34
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %3, %3* %1, i32 0, i32 37
  store %26** null, %26*** %37, align 8
  %38 = getelementptr inbounds %3, %3* %1, i32 0, i32 38
  store %28** null, %28*** %38, align 8
  %39 = getelementptr inbounds %3, %3* %1, i32 0, i32 35
  store %3** null, %3*** %39, align 8
  %40 = getelementptr inbounds %3, %3* %1, i32 0, i32 28
  store %20* (%3*, %4*, i32)* null, %20* (%3*, %4*, i32)** %40, align 8
  %41 = getelementptr inbounds %3, %3* %1, i32 0, i32 26
  %42 = getelementptr inbounds %18, %18* %41, i32 0, i32 0
  store %19* null, %19** %42, align 8
  %43 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %44 = bitcast %30* %43 to %105*
  %45 = getelementptr inbounds %105, %105* %44, i32 0, i32 1
  store %73* null, %73** %45, align 8
  %46 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %47 = bitcast %30* %46 to %105*
  %48 = getelementptr inbounds %105, %105* %47, i32 0, i32 0
  store %58* getelementptr inbounds ([1 x %58], [1 x %58]* @phar_exception_methods, i32 0, i32 0), %58** %48, align 8
  %49 = bitcast %0** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #13
  %50 = load %3*, %3** @zend_ce_exception, align 8
  %51 = call %3* @zend_register_internal_class_ex(%3* %1, %3* %50)
  store %3* %51, %3** @3, align 8
  %52 = bitcast %0** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  %53 = call %0* @441(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @296, i32 0, i32 0), i64 4, i32 1)
  store %0* %53, %0** %3, align 8
  %54 = load %0* (%0*)*, %0* (%0*)** @zend_new_interned_string, align 8
  %55 = load %0*, %0** %3, align 8
  %56 = call %0* %54(%0* %55)
  %57 = getelementptr inbounds %3, %3* %1, i32 0, i32 1
  store %0* %56, %0** %57, align 8
  %58 = getelementptr inbounds %3, %3* %1, i32 0, i32 13
  store %11* null, %11** %58, align 8
  %59 = getelementptr inbounds %3, %3* %1, i32 0, i32 14
  store %11* null, %11** %59, align 8
  %60 = getelementptr inbounds %3, %3* %1, i32 0, i32 15
  store %11* null, %11** %60, align 8
  %61 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %61, align 8
  %62 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %62, align 8
  %63 = getelementptr inbounds %3, %3* %1, i32 0, i32 27
  store %21* (%3*)* null, %21* (%3*)** %63, align 8
  %64 = getelementptr inbounds %3, %3* %1, i32 0, i32 29
  store i32 (%3*, %3*)* null, i32 (%3*, %3*)** %64, align 8
  %65 = getelementptr inbounds %3, %3* %1, i32 0, i32 30
  store %11* (%3*, %0*)* null, %11* (%3*, %0*)** %65, align 8
  %66 = getelementptr inbounds %3, %3* %1, i32 0, i32 20
  store %11* null, %11** %66, align 8
  %67 = getelementptr inbounds %3, %3* %1, i32 0, i32 21
  store %11* null, %11** %67, align 8
  %68 = getelementptr inbounds %3, %3* %1, i32 0, i32 22
  store %11* null, %11** %68, align 8
  %69 = getelementptr inbounds %3, %3* %1, i32 0, i32 16
  store %11* null, %11** %69, align 8
  %70 = getelementptr inbounds %3, %3* %1, i32 0, i32 17
  store %11* null, %11** %70, align 8
  %71 = getelementptr inbounds %3, %3* %1, i32 0, i32 18
  store %11* null, %11** %71, align 8
  %72 = getelementptr inbounds %3, %3* %1, i32 0, i32 19
  store %11* null, %11** %72, align 8
  %73 = getelementptr inbounds %3, %3* %1, i32 0, i32 23
  store %11* null, %11** %73, align 8
  %74 = getelementptr inbounds %3, %3* %1, i32 0, i32 24
  store %11* null, %11** %74, align 8
  %75 = getelementptr inbounds %3, %3* %1, i32 0, i32 25
  store %11* null, %11** %75, align 8
  %76 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %76, align 8
  %77 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %77, align 8
  %78 = getelementptr inbounds %3, %3* %1, i32 0, i32 2
  store %3* null, %3** %78, align 8
  %79 = getelementptr inbounds %3, %3* %1, i32 0, i32 33
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %3, %3* %1, i32 0, i32 36
  store %3** null, %3*** %80, align 8
  %81 = getelementptr inbounds %3, %3* %1, i32 0, i32 34
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %3, %3* %1, i32 0, i32 37
  store %26** null, %26*** %82, align 8
  %83 = getelementptr inbounds %3, %3* %1, i32 0, i32 38
  store %28** null, %28*** %83, align 8
  %84 = getelementptr inbounds %3, %3* %1, i32 0, i32 35
  store %3** null, %3*** %84, align 8
  %85 = getelementptr inbounds %3, %3* %1, i32 0, i32 28
  store %20* (%3*, %4*, i32)* null, %20* (%3*, %4*, i32)** %85, align 8
  %86 = getelementptr inbounds %3, %3* %1, i32 0, i32 26
  %87 = getelementptr inbounds %18, %18* %86, i32 0, i32 0
  store %19* null, %19** %87, align 8
  %88 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %89 = bitcast %30* %88 to %105*
  %90 = getelementptr inbounds %105, %105* %89, i32 0, i32 1
  store %73* null, %73** %90, align 8
  %91 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %92 = bitcast %30* %91 to %105*
  %93 = getelementptr inbounds %105, %105* %92, i32 0, i32 0
  store %58* getelementptr inbounds ([57 x %58], [57 x %58]* bitcast ([57 x { i8*, void (%23*, %4*)*, %59*, i32, i32 }]* @php_archive_methods to [57 x %58]*), i32 0, i32 0), %58** %93, align 8
  %94 = bitcast %0** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #13
  %95 = load %3*, %3** @spl_ce_RecursiveDirectoryIterator, align 8
  %96 = call %3* @zend_register_internal_class_ex(%3* %1, %3* %95)
  store %3* %96, %3** @297, align 8
  %97 = load %3*, %3** @297, align 8
  %98 = load %3*, %3** @zend_ce_countable, align 8
  %99 = load %3*, %3** @zend_ce_arrayaccess, align 8
  call void (%3*, i32, ...) @zend_class_implements(%3* %97, i32 2, %3* %98, %3* %99)
  %100 = bitcast %0** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %100) #13
  %101 = call %0* @441(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @298, i32 0, i32 0), i64 8, i32 1)
  store %0* %101, %0** %4, align 8
  %102 = load %0* (%0*)*, %0* (%0*)** @zend_new_interned_string, align 8
  %103 = load %0*, %0** %4, align 8
  %104 = call %0* %102(%0* %103)
  %105 = getelementptr inbounds %3, %3* %1, i32 0, i32 1
  store %0* %104, %0** %105, align 8
  %106 = getelementptr inbounds %3, %3* %1, i32 0, i32 13
  store %11* null, %11** %106, align 8
  %107 = getelementptr inbounds %3, %3* %1, i32 0, i32 14
  store %11* null, %11** %107, align 8
  %108 = getelementptr inbounds %3, %3* %1, i32 0, i32 15
  store %11* null, %11** %108, align 8
  %109 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %109, align 8
  %110 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %110, align 8
  %111 = getelementptr inbounds %3, %3* %1, i32 0, i32 27
  store %21* (%3*)* null, %21* (%3*)** %111, align 8
  %112 = getelementptr inbounds %3, %3* %1, i32 0, i32 29
  store i32 (%3*, %3*)* null, i32 (%3*, %3*)** %112, align 8
  %113 = getelementptr inbounds %3, %3* %1, i32 0, i32 30
  store %11* (%3*, %0*)* null, %11* (%3*, %0*)** %113, align 8
  %114 = getelementptr inbounds %3, %3* %1, i32 0, i32 20
  store %11* null, %11** %114, align 8
  %115 = getelementptr inbounds %3, %3* %1, i32 0, i32 21
  store %11* null, %11** %115, align 8
  %116 = getelementptr inbounds %3, %3* %1, i32 0, i32 22
  store %11* null, %11** %116, align 8
  %117 = getelementptr inbounds %3, %3* %1, i32 0, i32 16
  store %11* null, %11** %117, align 8
  %118 = getelementptr inbounds %3, %3* %1, i32 0, i32 17
  store %11* null, %11** %118, align 8
  %119 = getelementptr inbounds %3, %3* %1, i32 0, i32 18
  store %11* null, %11** %119, align 8
  %120 = getelementptr inbounds %3, %3* %1, i32 0, i32 19
  store %11* null, %11** %120, align 8
  %121 = getelementptr inbounds %3, %3* %1, i32 0, i32 23
  store %11* null, %11** %121, align 8
  %122 = getelementptr inbounds %3, %3* %1, i32 0, i32 24
  store %11* null, %11** %122, align 8
  %123 = getelementptr inbounds %3, %3* %1, i32 0, i32 25
  store %11* null, %11** %123, align 8
  %124 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %124, align 8
  %125 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %125, align 8
  %126 = getelementptr inbounds %3, %3* %1, i32 0, i32 2
  store %3* null, %3** %126, align 8
  %127 = getelementptr inbounds %3, %3* %1, i32 0, i32 33
  store i32 0, i32* %127, align 8
  %128 = getelementptr inbounds %3, %3* %1, i32 0, i32 36
  store %3** null, %3*** %128, align 8
  %129 = getelementptr inbounds %3, %3* %1, i32 0, i32 34
  store i32 0, i32* %129, align 4
  %130 = getelementptr inbounds %3, %3* %1, i32 0, i32 37
  store %26** null, %26*** %130, align 8
  %131 = getelementptr inbounds %3, %3* %1, i32 0, i32 38
  store %28** null, %28*** %131, align 8
  %132 = getelementptr inbounds %3, %3* %1, i32 0, i32 35
  store %3** null, %3*** %132, align 8
  %133 = getelementptr inbounds %3, %3* %1, i32 0, i32 28
  store %20* (%3*, %4*, i32)* null, %20* (%3*, %4*, i32)** %133, align 8
  %134 = getelementptr inbounds %3, %3* %1, i32 0, i32 26
  %135 = getelementptr inbounds %18, %18* %134, i32 0, i32 0
  store %19* null, %19** %135, align 8
  %136 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %137 = bitcast %30* %136 to %105*
  %138 = getelementptr inbounds %105, %105* %137, i32 0, i32 1
  store %73* null, %73** %138, align 8
  %139 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %140 = bitcast %30* %139 to %105*
  %141 = getelementptr inbounds %105, %105* %140, i32 0, i32 0
  store %58* getelementptr inbounds ([57 x %58], [57 x %58]* bitcast ([57 x { i8*, void (%23*, %4*)*, %59*, i32, i32 }]* @php_data_methods to [57 x %58]*), i32 0, i32 0), %58** %141, align 8
  %142 = bitcast %0** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #13
  %143 = load %3*, %3** @spl_ce_RecursiveDirectoryIterator, align 8
  %144 = call %3* @zend_register_internal_class_ex(%3* %1, %3* %143)
  store %3* %144, %3** @48, align 8
  %145 = load %3*, %3** @48, align 8
  %146 = load %3*, %3** @zend_ce_countable, align 8
  %147 = load %3*, %3** @zend_ce_arrayaccess, align 8
  call void (%3*, i32, ...) @zend_class_implements(%3* %145, i32 2, %3* %146, %3* %147)
  %148 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %148) #13
  %149 = call %0* @441(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @299, i32 0, i32 0), i64 12, i32 1)
  store %0* %149, %0** %5, align 8
  %150 = load %0* (%0*)*, %0* (%0*)** @zend_new_interned_string, align 8
  %151 = load %0*, %0** %5, align 8
  %152 = call %0* %150(%0* %151)
  %153 = getelementptr inbounds %3, %3* %1, i32 0, i32 1
  store %0* %152, %0** %153, align 8
  %154 = getelementptr inbounds %3, %3* %1, i32 0, i32 13
  store %11* null, %11** %154, align 8
  %155 = getelementptr inbounds %3, %3* %1, i32 0, i32 14
  store %11* null, %11** %155, align 8
  %156 = getelementptr inbounds %3, %3* %1, i32 0, i32 15
  store %11* null, %11** %156, align 8
  %157 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %157, align 8
  %158 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %158, align 8
  %159 = getelementptr inbounds %3, %3* %1, i32 0, i32 27
  store %21* (%3*)* null, %21* (%3*)** %159, align 8
  %160 = getelementptr inbounds %3, %3* %1, i32 0, i32 29
  store i32 (%3*, %3*)* null, i32 (%3*, %3*)** %160, align 8
  %161 = getelementptr inbounds %3, %3* %1, i32 0, i32 30
  store %11* (%3*, %0*)* null, %11* (%3*, %0*)** %161, align 8
  %162 = getelementptr inbounds %3, %3* %1, i32 0, i32 20
  store %11* null, %11** %162, align 8
  %163 = getelementptr inbounds %3, %3* %1, i32 0, i32 21
  store %11* null, %11** %163, align 8
  %164 = getelementptr inbounds %3, %3* %1, i32 0, i32 22
  store %11* null, %11** %164, align 8
  %165 = getelementptr inbounds %3, %3* %1, i32 0, i32 16
  store %11* null, %11** %165, align 8
  %166 = getelementptr inbounds %3, %3* %1, i32 0, i32 17
  store %11* null, %11** %166, align 8
  %167 = getelementptr inbounds %3, %3* %1, i32 0, i32 18
  store %11* null, %11** %167, align 8
  %168 = getelementptr inbounds %3, %3* %1, i32 0, i32 19
  store %11* null, %11** %168, align 8
  %169 = getelementptr inbounds %3, %3* %1, i32 0, i32 23
  store %11* null, %11** %169, align 8
  %170 = getelementptr inbounds %3, %3* %1, i32 0, i32 24
  store %11* null, %11** %170, align 8
  %171 = getelementptr inbounds %3, %3* %1, i32 0, i32 25
  store %11* null, %11** %171, align 8
  %172 = getelementptr inbounds %3, %3* %1, i32 0, i32 31
  store i32 (%4*, i8**, i64*, %24*)* null, i32 (%4*, i8**, i64*, %24*)** %172, align 8
  %173 = getelementptr inbounds %3, %3* %1, i32 0, i32 32
  store i32 (%4*, %3*, i8*, i64, %25*)* null, i32 (%4*, %3*, i8*, i64, %25*)** %173, align 8
  %174 = getelementptr inbounds %3, %3* %1, i32 0, i32 2
  store %3* null, %3** %174, align 8
  %175 = getelementptr inbounds %3, %3* %1, i32 0, i32 33
  store i32 0, i32* %175, align 8
  %176 = getelementptr inbounds %3, %3* %1, i32 0, i32 36
  store %3** null, %3*** %176, align 8
  %177 = getelementptr inbounds %3, %3* %1, i32 0, i32 34
  store i32 0, i32* %177, align 4
  %178 = getelementptr inbounds %3, %3* %1, i32 0, i32 37
  store %26** null, %26*** %178, align 8
  %179 = getelementptr inbounds %3, %3* %1, i32 0, i32 38
  store %28** null, %28*** %179, align 8
  %180 = getelementptr inbounds %3, %3* %1, i32 0, i32 35
  store %3** null, %3*** %180, align 8
  %181 = getelementptr inbounds %3, %3* %1, i32 0, i32 28
  store %20* (%3*, %4*, i32)* null, %20* (%3*, %4*, i32)** %181, align 8
  %182 = getelementptr inbounds %3, %3* %1, i32 0, i32 26
  %183 = getelementptr inbounds %18, %18* %182, i32 0, i32 0
  store %19* null, %19** %183, align 8
  %184 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %185 = bitcast %30* %184 to %105*
  %186 = getelementptr inbounds %105, %105* %185, i32 0, i32 1
  store %73* null, %73** %186, align 8
  %187 = getelementptr inbounds %3, %3* %1, i32 0, i32 39
  %188 = bitcast %30* %187 to %105*
  %189 = getelementptr inbounds %105, %105* %188, i32 0, i32 0
  store %58* getelementptr inbounds ([16 x %58], [16 x %58]* bitcast ([16 x { i8*, void (%23*, %4*)*, %59*, i32, i32 }]* @php_entry_methods to [16 x %58]*), i32 0, i32 0), %58** %189, align 8
  %190 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = load %3*, %3** @spl_ce_SplFileInfo, align 8
  %192 = call %3* @zend_register_internal_class_ex(%3* %1, %3* %191)
  store %3* %192, %3** @59, align 8
  %193 = load %3*, %3** @297, align 8
  %194 = call i32 @zend_declare_class_constant_long(%3* %193, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @300, i32 0, i32 0), i64 3, i64 8192)
  %195 = load %3*, %3** @297, align 8
  %196 = call i32 @zend_declare_class_constant_long(%3* %195, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @66, i32 0, i32 0), i64 2, i64 4096)
  %197 = load %3*, %3** @297, align 8
  %198 = call i32 @zend_declare_class_constant_long(%3* %197, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @301, i32 0, i32 0), i64 4, i64 0)
  %199 = load %3*, %3** @297, align 8
  %200 = call i32 @zend_declare_class_constant_long(%3* %199, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @302, i32 0, i32 0), i64 4, i64 1)
  %201 = load %3*, %3** @297, align 8
  %202 = call i32 @zend_declare_class_constant_long(%3* %201, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @303, i32 0, i32 0), i64 3, i64 2)
  %203 = load %3*, %3** @297, align 8
  %204 = call i32 @zend_declare_class_constant_long(%3* %203, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @304, i32 0, i32 0), i64 3, i64 3)
  %205 = load %3*, %3** @297, align 8
  %206 = call i32 @zend_declare_class_constant_long(%3* %205, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @305, i32 0, i32 0), i64 10, i64 61440)
  %207 = load %3*, %3** @297, align 8
  %208 = call i32 @zend_declare_class_constant_long(%3* %207, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @306, i32 0, i32 0), i64 3, i64 0)
  %209 = load %3*, %3** @297, align 8
  %210 = call i32 @zend_declare_class_constant_long(%3* %209, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @307, i32 0, i32 0), i64 4, i64 1)
  %211 = load %3*, %3** @297, align 8
  %212 = call i32 @zend_declare_class_constant_long(%3* %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @60, i32 0, i32 0), i64 3, i64 1)
  %213 = load %3*, %3** @297, align 8
  %214 = call i32 @zend_declare_class_constant_long(%3* %213, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @308, i32 0, i32 0), i64 7, i64 16)
  %215 = load %3*, %3** @297, align 8
  %216 = call i32 @zend_declare_class_constant_long(%3* %215, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @309, i32 0, i32 0), i64 4, i64 2)
  %217 = load %3*, %3** @297, align 8
  %218 = call i32 @zend_declare_class_constant_long(%3* %217, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @310, i32 0, i32 0), i64 6, i64 3)
  %219 = load %3*, %3** @297, align 8
  %220 = call i32 @zend_declare_class_constant_long(%3* %219, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @311, i32 0, i32 0), i64 6, i64 4)
  %221 = bitcast %3* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %221) #13
  ret void
}

declare dso_local %3* @zend_register_internal_class_ex(%3*, %3*) #2

declare dso_local void @zend_class_implements(%3*, i32, ...) #2

declare dso_local i32 @zend_declare_class_constant_long(%3*, i8*, i64, i64) #2

declare dso_local i64 @php_output_write(i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #3

declare dso_local void @php_get_highlight_struct(%98*) #2

declare dso_local i32 @highlight_file(i8*, %98*) #2

declare dso_local %93* @phar_open_jit(%52*, %93*, i8**) #2

; Function Attrs: nounwind uwtable
define internal void @467(i8* %0, i8* %1, i32 %2, i8* %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %8*, align 8
  %12 = alloca %4*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %4, align 8
  %17 = alloca i32, align 4
  %18 = alloca %4*, align 8
  %19 = alloca %0*, align 8
  %20 = alloca %4*, align 8
  %21 = alloca %0*, align 8
  %22 = alloca %0*, align 8
  %23 = alloca %4*, align 8
  %24 = alloca %0*, align 8
  %25 = alloca %4*, align 8
  %26 = alloca %0*, align 8
  %27 = alloca %4*, align 8
  %28 = alloca %0*, align 8
  %29 = alloca %4*, align 8
  %30 = alloca %0*, align 8
  %31 = alloca %4*, align 8
  %32 = alloca %0*, align 8
  %33 = alloca %4*, align 8
  %34 = alloca %0*, align 8
  %35 = alloca %4*, align 8
  %36 = alloca %0*, align 8
  %37 = alloca %4*, align 8
  %38 = alloca %0*, align 8
  %39 = alloca %0*, align 8
  %40 = alloca %4*, align 8
  %41 = alloca %0*, align 8
  %42 = alloca %4*, align 8
  %43 = alloca %0*, align 8
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %44 = bitcast %8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = load i8*, i8** %9, align 8
  %49 = call i64 @strlen(i8* %48) #14
  store i64 %49, i64* %14, align 8
  %50 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  %51 = bitcast %4* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %51) #13
  %52 = call zeroext i8 @444(%4* getelementptr inbounds (%64, %64* @core_globals, i32 0, i32 41, i64 3))
  %53 = zext i8 %52 to i32
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %5
  store i32 1, i32* %17, align 4
  br label %508

56:                                               ; preds = %5
  %57 = load %8*, %8** bitcast (%5* getelementptr inbounds (%64, %64* @core_globals, i32 0, i32 41, i64 3, i32 0) to %8**), align 8
  store %8* %57, %8** %11, align 8
  %58 = load %8*, %8** %11, align 8
  %59 = call %4* @zend_hash_str_find(%8* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @21, i32 0, i32 0), i64 9)
  store %4* %59, %4** %12, align 8
  %60 = icmp ne %4* null, %59
  br i1 %60, label %61, label %143

61:                                               ; preds = %56
  %62 = load %4*, %4** %12, align 8
  %63 = getelementptr inbounds %4, %4* %62, i32 0, i32 0
  %64 = bitcast %5* %63 to %0**
  %65 = load %0*, %0** %64, align 8
  %66 = getelementptr inbounds %0, %0* %65, i32 0, i32 3
  %67 = getelementptr inbounds [1 x i8], [1 x i8]* %66, i32 0, i32 0
  store i8* %67, i8** %13, align 8
  %68 = load %4*, %4** %12, align 8
  %69 = getelementptr inbounds %4, %4* %68, i32 0, i32 0
  %70 = bitcast %5* %69 to %0**
  %71 = load %0*, %0** %70, align 8
  %72 = getelementptr inbounds %0, %0* %71, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %15, align 8
  %74 = load i64, i64* %15, align 8
  %75 = load i32, i32* %8, align 4
  %76 = sext i32 %75 to i64
  %77 = icmp ugt i64 %74, %76
  br i1 %77, label %78, label %142

78:                                               ; preds = %61
  %79 = load i8*, i8** %13, align 8
  %80 = load i8*, i8** %7, align 8
  %81 = load i32, i32* %8, align 4
  %82 = sext i32 %81 to i64
  %83 = call i32 @memcmp(i8* %79, i8* %80, i64 %82) #14
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %142, label %85

85:                                               ; preds = %78
  br label %86

86:                                               ; preds = %85
  %87 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %87) #13
  store %4* %16, %4** %18, align 8
  %88 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %88) #13
  %89 = load %4*, %4** %12, align 8
  %90 = getelementptr inbounds %4, %4* %89, i32 0, i32 0
  %91 = bitcast %5* %90 to %0**
  %92 = load %0*, %0** %91, align 8
  store %0* %92, %0** %19, align 8
  %93 = load %0*, %0** %19, align 8
  %94 = load %4*, %4** %18, align 8
  %95 = getelementptr inbounds %4, %4* %94, i32 0, i32 0
  %96 = bitcast %5* %95 to %0**
  store %0* %93, %0** %96, align 8
  %97 = load %0*, %0** %19, align 8
  %98 = getelementptr inbounds %0, %0* %97, i32 0, i32 0
  %99 = getelementptr inbounds %1, %1* %98, i32 0, i32 1
  %100 = bitcast %2* %99 to %102*
  %101 = getelementptr inbounds %102, %102* %100, i32 0, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = and i32 %103, 2
  %105 = icmp ne i32 %104, 0
  %106 = zext i1 %105 to i64
  %107 = select i1 %105, i32 6, i32 5126
  %108 = load %4*, %4** %18, align 8
  %109 = getelementptr inbounds %4, %4* %108, i32 0, i32 1
  %110 = bitcast %6* %109 to i32*
  store i32 %107, i32* %110, align 8
  %111 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #13
  %112 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #13
  br label %113

113:                                              ; preds = %86
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  %117 = bitcast %4** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %117) #13
  %118 = load %4*, %4** %12, align 8
  store %4* %118, %4** %20, align 8
  %119 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %119) #13
  %120 = load i8*, i8** %13, align 8
  %121 = load i32, i32* %8, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %120, i64 %122
  %124 = load i32, i32* %10, align 4
  %125 = sext i32 %124 to i64
  %126 = call %0* @441(i8* %123, i64 %125, i32 0)
  store %0* %126, %0** %21, align 8
  %127 = load %0*, %0** %21, align 8
  %128 = load %4*, %4** %20, align 8
  %129 = getelementptr inbounds %4, %4* %128, i32 0, i32 0
  %130 = bitcast %5* %129 to %0**
  store %0* %127, %0** %130, align 8
  %131 = load %4*, %4** %20, align 8
  %132 = getelementptr inbounds %4, %4* %131, i32 0, i32 1
  %133 = bitcast %6* %132 to i32*
  store i32 5126, i32* %133, align 8
  %134 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #13
  %135 = bitcast %4** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #13
  br label %136

136:                                              ; preds = %116
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  br label %139

139:                                              ; preds = %138
  %140 = load %8*, %8** %11, align 8
  %141 = call %4* @_zend_hash_str_update(%8* %140, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @323, i32 0, i32 0), i64 14, %4* %16)
  br label %142

142:                                              ; preds = %139, %78, %61
  br label %143

143:                                              ; preds = %142, %56
  %144 = load %8*, %8** %11, align 8
  %145 = call %4* @zend_hash_str_find(%8* %144, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @324, i32 0, i32 0), i64 15)
  store %4* %145, %4** %12, align 8
  %146 = icmp ne %4* null, %145
  br i1 %146, label %147, label %200

147:                                              ; preds = %143
  %148 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %148) #13
  %149 = load i8*, i8** %6, align 8
  %150 = load i8*, i8** %7, align 8
  %151 = call %0* (i64, i8*, ...) @zend_strpprintf(i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @56, i32 0, i32 0), i8* %149, i8* %150)
  store %0* %151, %0** %22, align 8
  br label %152

152:                                              ; preds = %147
  %153 = bitcast %4** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %153) #13
  store %4* %16, %4** %23, align 8
  %154 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %154) #13
  %155 = load %4*, %4** %12, align 8
  %156 = getelementptr inbounds %4, %4* %155, i32 0, i32 0
  %157 = bitcast %5* %156 to %0**
  %158 = load %0*, %0** %157, align 8
  store %0* %158, %0** %24, align 8
  %159 = load %0*, %0** %24, align 8
  %160 = load %4*, %4** %23, align 8
  %161 = getelementptr inbounds %4, %4* %160, i32 0, i32 0
  %162 = bitcast %5* %161 to %0**
  store %0* %159, %0** %162, align 8
  %163 = load %0*, %0** %24, align 8
  %164 = getelementptr inbounds %0, %0* %163, i32 0, i32 0
  %165 = getelementptr inbounds %1, %1* %164, i32 0, i32 1
  %166 = bitcast %2* %165 to %102*
  %167 = getelementptr inbounds %102, %102* %166, i32 0, i32 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = and i32 %169, 2
  %171 = icmp ne i32 %170, 0
  %172 = zext i1 %171 to i64
  %173 = select i1 %171, i32 6, i32 5126
  %174 = load %4*, %4** %23, align 8
  %175 = getelementptr inbounds %4, %4* %174, i32 0, i32 1
  %176 = bitcast %6* %175 to i32*
  store i32 %173, i32* %176, align 8
  %177 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #13
  %178 = bitcast %4** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178) #13
  br label %179

179:                                              ; preds = %152
  br label %180

180:                                              ; preds = %179
  br label %181

181:                                              ; preds = %180
  %182 = bitcast %4** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %182) #13
  %183 = load %4*, %4** %12, align 8
  store %4* %183, %4** %25, align 8
  %184 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %184) #13
  %185 = load %0*, %0** %22, align 8
  store %0* %185, %0** %26, align 8
  %186 = load %0*, %0** %26, align 8
  %187 = load %4*, %4** %25, align 8
  %188 = getelementptr inbounds %4, %4* %187, i32 0, i32 0
  %189 = bitcast %5* %188 to %0**
  store %0* %186, %0** %189, align 8
  %190 = load %4*, %4** %25, align 8
  %191 = getelementptr inbounds %4, %4* %190, i32 0, i32 1
  %192 = bitcast %6* %191 to i32*
  store i32 5126, i32* %192, align 8
  %193 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast %4** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #13
  br label %195

195:                                              ; preds = %181
  br label %196

196:                                              ; preds = %195
  %197 = load %8*, %8** %11, align 8
  %198 = call %4* @_zend_hash_str_update(%8* %197, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @325, i32 0, i32 0), i64 20, %4* %16)
  %199 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #13
  br label %200

200:                                              ; preds = %196, %143
  %201 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  store i32 1, i32* %17, align 4
  br label %508

204:                                              ; preds = %200
  %205 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %206 = and i32 %205, 2
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %293

208:                                              ; preds = %204
  %209 = load %8*, %8** %11, align 8
  %210 = call %4* @zend_hash_str_find(%8* %209, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @40, i32 0, i32 0), i64 11)
  store %4* %210, %4** %12, align 8
  %211 = icmp ne %4* null, %210
  br i1 %211, label %212, label %292

212:                                              ; preds = %208
  %213 = load %4*, %4** %12, align 8
  %214 = getelementptr inbounds %4, %4* %213, i32 0, i32 0
  %215 = bitcast %5* %214 to %0**
  %216 = load %0*, %0** %215, align 8
  %217 = getelementptr inbounds %0, %0* %216, i32 0, i32 3
  %218 = getelementptr inbounds [1 x i8], [1 x i8]* %217, i32 0, i32 0
  store i8* %218, i8** %13, align 8
  %219 = load %4*, %4** %12, align 8
  %220 = getelementptr inbounds %4, %4* %219, i32 0, i32 0
  %221 = bitcast %5* %220 to %0**
  %222 = load %0*, %0** %221, align 8
  %223 = getelementptr inbounds %0, %0* %222, i32 0, i32 2
  %224 = load i64, i64* %223, align 8
  store i64 %224, i64* %15, align 8
  %225 = load i64, i64* %15, align 8
  %226 = load i64, i64* %14, align 8
  %227 = icmp ugt i64 %225, %226
  br i1 %227, label %228, label %291

228:                                              ; preds = %212
  %229 = load i8*, i8** %13, align 8
  %230 = load i8*, i8** %9, align 8
  %231 = load i64, i64* %14, align 8
  %232 = call i32 @memcmp(i8* %229, i8* %230, i64 %231) #14
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %291, label %234

234:                                              ; preds = %228
  br label %235

235:                                              ; preds = %234
  %236 = bitcast %4** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %236) #13
  store %4* %16, %4** %27, align 8
  %237 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %237) #13
  %238 = load %4*, %4** %12, align 8
  %239 = getelementptr inbounds %4, %4* %238, i32 0, i32 0
  %240 = bitcast %5* %239 to %0**
  %241 = load %0*, %0** %240, align 8
  store %0* %241, %0** %28, align 8
  %242 = load %0*, %0** %28, align 8
  %243 = load %4*, %4** %27, align 8
  %244 = getelementptr inbounds %4, %4* %243, i32 0, i32 0
  %245 = bitcast %5* %244 to %0**
  store %0* %242, %0** %245, align 8
  %246 = load %0*, %0** %28, align 8
  %247 = getelementptr inbounds %0, %0* %246, i32 0, i32 0
  %248 = getelementptr inbounds %1, %1* %247, i32 0, i32 1
  %249 = bitcast %2* %248 to %102*
  %250 = getelementptr inbounds %102, %102* %249, i32 0, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = and i32 %252, 2
  %254 = icmp ne i32 %253, 0
  %255 = zext i1 %254 to i64
  %256 = select i1 %254, i32 6, i32 5126
  %257 = load %4*, %4** %27, align 8
  %258 = getelementptr inbounds %4, %4* %257, i32 0, i32 1
  %259 = bitcast %6* %258 to i32*
  store i32 %256, i32* %259, align 8
  %260 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #13
  %261 = bitcast %4** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #13
  br label %262

262:                                              ; preds = %235
  br label %263

263:                                              ; preds = %262
  br label %264

264:                                              ; preds = %263
  br label %265

265:                                              ; preds = %264
  %266 = bitcast %4** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %266) #13
  %267 = load %4*, %4** %12, align 8
  store %4* %267, %4** %29, align 8
  %268 = bitcast %0** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %268) #13
  %269 = load i8*, i8** %13, align 8
  %270 = load i64, i64* %14, align 8
  %271 = getelementptr inbounds i8, i8* %269, i64 %270
  %272 = load i64, i64* %15, align 8
  %273 = load i64, i64* %14, align 8
  %274 = sub i64 %272, %273
  %275 = call %0* @441(i8* %271, i64 %274, i32 0)
  store %0* %275, %0** %30, align 8
  %276 = load %0*, %0** %30, align 8
  %277 = load %4*, %4** %29, align 8
  %278 = getelementptr inbounds %4, %4* %277, i32 0, i32 0
  %279 = bitcast %5* %278 to %0**
  store %0* %276, %0** %279, align 8
  %280 = load %4*, %4** %29, align 8
  %281 = getelementptr inbounds %4, %4* %280, i32 0, i32 1
  %282 = bitcast %6* %281 to i32*
  store i32 5126, i32* %282, align 8
  %283 = bitcast %0** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #13
  %284 = bitcast %4** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %284) #13
  br label %285

285:                                              ; preds = %265
  br label %286

286:                                              ; preds = %285
  br label %287

287:                                              ; preds = %286
  br label %288

288:                                              ; preds = %287
  %289 = load %8*, %8** %11, align 8
  %290 = call %4* @_zend_hash_str_update(%8* %289, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @326, i32 0, i32 0), i64 16, %4* %16)
  br label %291

291:                                              ; preds = %288, %228, %212
  br label %292

292:                                              ; preds = %291, %208
  br label %293

293:                                              ; preds = %292, %204
  %294 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %295 = and i32 %294, 1
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %297, label %382

297:                                              ; preds = %293
  %298 = load %8*, %8** %11, align 8
  %299 = call %4* @zend_hash_str_find(%8* %298, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @39, i32 0, i32 0), i64 8)
  store %4* %299, %4** %12, align 8
  %300 = icmp ne %4* null, %299
  br i1 %300, label %301, label %381

301:                                              ; preds = %297
  %302 = load %4*, %4** %12, align 8
  %303 = getelementptr inbounds %4, %4* %302, i32 0, i32 0
  %304 = bitcast %5* %303 to %0**
  %305 = load %0*, %0** %304, align 8
  %306 = getelementptr inbounds %0, %0* %305, i32 0, i32 3
  %307 = getelementptr inbounds [1 x i8], [1 x i8]* %306, i32 0, i32 0
  store i8* %307, i8** %13, align 8
  %308 = load %4*, %4** %12, align 8
  %309 = getelementptr inbounds %4, %4* %308, i32 0, i32 0
  %310 = bitcast %5* %309 to %0**
  %311 = load %0*, %0** %310, align 8
  %312 = getelementptr inbounds %0, %0* %311, i32 0, i32 2
  %313 = load i64, i64* %312, align 8
  store i64 %313, i64* %15, align 8
  %314 = load i64, i64* %15, align 8
  %315 = load i64, i64* %14, align 8
  %316 = icmp ugt i64 %314, %315
  br i1 %316, label %317, label %380

317:                                              ; preds = %301
  %318 = load i8*, i8** %13, align 8
  %319 = load i8*, i8** %9, align 8
  %320 = load i64, i64* %14, align 8
  %321 = call i32 @memcmp(i8* %318, i8* %319, i64 %320) #14
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %380, label %323

323:                                              ; preds = %317
  br label %324

324:                                              ; preds = %323
  %325 = bitcast %4** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %325) #13
  store %4* %16, %4** %31, align 8
  %326 = bitcast %0** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %326) #13
  %327 = load %4*, %4** %12, align 8
  %328 = getelementptr inbounds %4, %4* %327, i32 0, i32 0
  %329 = bitcast %5* %328 to %0**
  %330 = load %0*, %0** %329, align 8
  store %0* %330, %0** %32, align 8
  %331 = load %0*, %0** %32, align 8
  %332 = load %4*, %4** %31, align 8
  %333 = getelementptr inbounds %4, %4* %332, i32 0, i32 0
  %334 = bitcast %5* %333 to %0**
  store %0* %331, %0** %334, align 8
  %335 = load %0*, %0** %32, align 8
  %336 = getelementptr inbounds %0, %0* %335, i32 0, i32 0
  %337 = getelementptr inbounds %1, %1* %336, i32 0, i32 1
  %338 = bitcast %2* %337 to %102*
  %339 = getelementptr inbounds %102, %102* %338, i32 0, i32 1
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  %342 = and i32 %341, 2
  %343 = icmp ne i32 %342, 0
  %344 = zext i1 %343 to i64
  %345 = select i1 %343, i32 6, i32 5126
  %346 = load %4*, %4** %31, align 8
  %347 = getelementptr inbounds %4, %4* %346, i32 0, i32 1
  %348 = bitcast %6* %347 to i32*
  store i32 %345, i32* %348, align 8
  %349 = bitcast %0** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %349) #13
  %350 = bitcast %4** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %350) #13
  br label %351

351:                                              ; preds = %324
  br label %352

352:                                              ; preds = %351
  br label %353

353:                                              ; preds = %352
  br label %354

354:                                              ; preds = %353
  %355 = bitcast %4** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %355) #13
  %356 = load %4*, %4** %12, align 8
  store %4* %356, %4** %33, align 8
  %357 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %357) #13
  %358 = load i8*, i8** %13, align 8
  %359 = load i64, i64* %14, align 8
  %360 = getelementptr inbounds i8, i8* %358, i64 %359
  %361 = load i64, i64* %15, align 8
  %362 = load i64, i64* %14, align 8
  %363 = sub i64 %361, %362
  %364 = call %0* @441(i8* %360, i64 %363, i32 0)
  store %0* %364, %0** %34, align 8
  %365 = load %0*, %0** %34, align 8
  %366 = load %4*, %4** %33, align 8
  %367 = getelementptr inbounds %4, %4* %366, i32 0, i32 0
  %368 = bitcast %5* %367 to %0**
  store %0* %365, %0** %368, align 8
  %369 = load %4*, %4** %33, align 8
  %370 = getelementptr inbounds %4, %4* %369, i32 0, i32 1
  %371 = bitcast %6* %370 to i32*
  store i32 5126, i32* %371, align 8
  %372 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372) #13
  %373 = bitcast %4** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %373) #13
  br label %374

374:                                              ; preds = %354
  br label %375

375:                                              ; preds = %374
  br label %376

376:                                              ; preds = %375
  br label %377

377:                                              ; preds = %376
  %378 = load %8*, %8** %11, align 8
  %379 = call %4* @_zend_hash_str_update(%8* %378, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @327, i32 0, i32 0), i64 13, %4* %16)
  br label %380

380:                                              ; preds = %377, %317, %301
  br label %381

381:                                              ; preds = %380, %297
  br label %382

382:                                              ; preds = %381, %293
  %383 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %384 = and i32 %383, 4
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %386, label %445

386:                                              ; preds = %382
  %387 = load %8*, %8** %11, align 8
  %388 = call %4* @zend_hash_str_find(%8* %387, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @20, i32 0, i32 0), i64 11)
  store %4* %388, %4** %12, align 8
  %389 = icmp ne %4* null, %388
  br i1 %389, label %390, label %444

390:                                              ; preds = %386
  br label %391

391:                                              ; preds = %390
  %392 = bitcast %4** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %392) #13
  store %4* %16, %4** %35, align 8
  %393 = bitcast %0** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %393) #13
  %394 = load %4*, %4** %12, align 8
  %395 = getelementptr inbounds %4, %4* %394, i32 0, i32 0
  %396 = bitcast %5* %395 to %0**
  %397 = load %0*, %0** %396, align 8
  store %0* %397, %0** %36, align 8
  %398 = load %0*, %0** %36, align 8
  %399 = load %4*, %4** %35, align 8
  %400 = getelementptr inbounds %4, %4* %399, i32 0, i32 0
  %401 = bitcast %5* %400 to %0**
  store %0* %398, %0** %401, align 8
  %402 = load %0*, %0** %36, align 8
  %403 = getelementptr inbounds %0, %0* %402, i32 0, i32 0
  %404 = getelementptr inbounds %1, %1* %403, i32 0, i32 1
  %405 = bitcast %2* %404 to %102*
  %406 = getelementptr inbounds %102, %102* %405, i32 0, i32 1
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i32
  %409 = and i32 %408, 2
  %410 = icmp ne i32 %409, 0
  %411 = zext i1 %410 to i64
  %412 = select i1 %410, i32 6, i32 5126
  %413 = load %4*, %4** %35, align 8
  %414 = getelementptr inbounds %4, %4* %413, i32 0, i32 1
  %415 = bitcast %6* %414 to i32*
  store i32 %412, i32* %415, align 8
  %416 = bitcast %0** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %416) #13
  %417 = bitcast %4** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %417) #13
  br label %418

418:                                              ; preds = %391
  br label %419

419:                                              ; preds = %418
  br label %420

420:                                              ; preds = %419
  br label %421

421:                                              ; preds = %420
  %422 = bitcast %4** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %422) #13
  %423 = load %4*, %4** %12, align 8
  store %4* %423, %4** %37, align 8
  %424 = bitcast %0** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %424) #13
  %425 = load i8*, i8** %7, align 8
  %426 = load i32, i32* %8, align 4
  %427 = sext i32 %426 to i64
  %428 = call %0* @441(i8* %425, i64 %427, i32 0)
  store %0* %428, %0** %38, align 8
  %429 = load %0*, %0** %38, align 8
  %430 = load %4*, %4** %37, align 8
  %431 = getelementptr inbounds %4, %4* %430, i32 0, i32 0
  %432 = bitcast %5* %431 to %0**
  store %0* %429, %0** %432, align 8
  %433 = load %4*, %4** %37, align 8
  %434 = getelementptr inbounds %4, %4* %433, i32 0, i32 1
  %435 = bitcast %6* %434 to i32*
  store i32 5126, i32* %435, align 8
  %436 = bitcast %0** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %436) #13
  %437 = bitcast %4** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %437) #13
  br label %438

438:                                              ; preds = %421
  br label %439

439:                                              ; preds = %438
  br label %440

440:                                              ; preds = %439
  br label %441

441:                                              ; preds = %440
  %442 = load %8*, %8** %11, align 8
  %443 = call %4* @_zend_hash_str_update(%8* %442, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @328, i32 0, i32 0), i64 16, %4* %16)
  br label %444

444:                                              ; preds = %441, %386
  br label %445

445:                                              ; preds = %444, %382
  %446 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 4), align 8
  %447 = and i32 %446, 8
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %449, label %507

449:                                              ; preds = %445
  %450 = load %8*, %8** %11, align 8
  %451 = call %4* @zend_hash_str_find(%8* %450, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @41, i32 0, i32 0), i64 15)
  store %4* %451, %4** %12, align 8
  %452 = icmp ne %4* null, %451
  br i1 %452, label %453, label %506

453:                                              ; preds = %449
  %454 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %454) #13
  %455 = load i8*, i8** %6, align 8
  %456 = load i8*, i8** %7, align 8
  %457 = call %0* (i64, i8*, ...) @zend_strpprintf(i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @56, i32 0, i32 0), i8* %455, i8* %456)
  store %0* %457, %0** %39, align 8
  br label %458

458:                                              ; preds = %453
  %459 = bitcast %4** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %459) #13
  store %4* %16, %4** %40, align 8
  %460 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %460) #13
  %461 = load %4*, %4** %12, align 8
  %462 = getelementptr inbounds %4, %4* %461, i32 0, i32 0
  %463 = bitcast %5* %462 to %0**
  %464 = load %0*, %0** %463, align 8
  store %0* %464, %0** %41, align 8
  %465 = load %0*, %0** %41, align 8
  %466 = load %4*, %4** %40, align 8
  %467 = getelementptr inbounds %4, %4* %466, i32 0, i32 0
  %468 = bitcast %5* %467 to %0**
  store %0* %465, %0** %468, align 8
  %469 = load %0*, %0** %41, align 8
  %470 = getelementptr inbounds %0, %0* %469, i32 0, i32 0
  %471 = getelementptr inbounds %1, %1* %470, i32 0, i32 1
  %472 = bitcast %2* %471 to %102*
  %473 = getelementptr inbounds %102, %102* %472, i32 0, i32 1
  %474 = load i8, i8* %473, align 1
  %475 = zext i8 %474 to i32
  %476 = and i32 %475, 2
  %477 = icmp ne i32 %476, 0
  %478 = zext i1 %477 to i64
  %479 = select i1 %477, i32 6, i32 5126
  %480 = load %4*, %4** %40, align 8
  %481 = getelementptr inbounds %4, %4* %480, i32 0, i32 1
  %482 = bitcast %6* %481 to i32*
  store i32 %479, i32* %482, align 8
  %483 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #13
  %484 = bitcast %4** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484) #13
  br label %485

485:                                              ; preds = %458
  br label %486

486:                                              ; preds = %485
  br label %487

487:                                              ; preds = %486
  %488 = bitcast %4** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %488) #13
  %489 = load %4*, %4** %12, align 8
  store %4* %489, %4** %42, align 8
  %490 = bitcast %0** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %490) #13
  %491 = load %0*, %0** %39, align 8
  store %0* %491, %0** %43, align 8
  %492 = load %0*, %0** %43, align 8
  %493 = load %4*, %4** %42, align 8
  %494 = getelementptr inbounds %4, %4* %493, i32 0, i32 0
  %495 = bitcast %5* %494 to %0**
  store %0* %492, %0** %495, align 8
  %496 = load %4*, %4** %42, align 8
  %497 = getelementptr inbounds %4, %4* %496, i32 0, i32 1
  %498 = bitcast %6* %497 to i32*
  store i32 5126, i32* %498, align 8
  %499 = bitcast %0** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %499) #13
  %500 = bitcast %4** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %500) #13
  br label %501

501:                                              ; preds = %487
  br label %502

502:                                              ; preds = %501
  %503 = load %8*, %8** %11, align 8
  %504 = call %4* @_zend_hash_str_update(%8* %503, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @329, i32 0, i32 0), i64 20, %4* %16)
  %505 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %505) #13
  br label %506

506:                                              ; preds = %502, %449
  br label %507

507:                                              ; preds = %506, %445
  store i32 0, i32* %17, align 4
  br label %508

508:                                              ; preds = %507, %203, %55
  %509 = bitcast %4* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %509) #13
  %510 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %510) #13
  %511 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %511) #13
  %512 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %512) #13
  %513 = bitcast %4** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %513) #13
  %514 = bitcast %8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %514) #13
  %515 = load i32, i32* %17, align 4
  switch i32 %515, label %517 [
    i32 0, label %516
    i32 1, label %516
  ]

516:                                              ; preds = %508, %508
  ret void

517:                                              ; preds = %508
  unreachable
}

declare dso_local %4* @_zend_hash_str_add(%8*, i8*, i64, %4*) #2

declare dso_local void @zend_destroy_file_handle(%89*) #2

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%67*) #10

declare dso_local void @zend_execute(%12*, %4*) #2

declare dso_local void @destroy_op_array(%12*) #2

declare dso_local %4* @_zend_hash_str_update(%8*, i8*, i64, %4*) #2

; Function Attrs: nounwind uwtable
define internal void @468(%77* %0) #0 {
  %2 = alloca %77*, align 8
  %3 = alloca %52*, align 8
  store %77* %0, %77** %2, align 8
  %4 = bitcast %52** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #13
  %5 = load %77*, %77** %2, align 8
  %6 = getelementptr inbounds %77, %77* %5, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8* %7 to %52*
  store %52* %8, %52** %3, align 8
  %9 = load %52*, %52** %3, align 8
  %10 = getelementptr inbounds %52, %52* %9, i32 0, i32 24
  %11 = load i16, i16* %10, align 8
  %12 = lshr i16 %11, 8
  %13 = and i16 %12, 1
  %14 = zext i16 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = load %52*, %52** %3, align 8
  %18 = call i32 @phar_archive_delref(%52* %17)
  br label %19

19:                                               ; preds = %16, %1
  %20 = load %77*, %77** %2, align 8
  %21 = getelementptr inbounds %77, %77* %20, i32 0, i32 0
  store i8* null, i8** %21, align 8
  %22 = bitcast %52** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @469(%77* %0, %77* %1) #0 {
  %3 = alloca %77*, align 8
  %4 = alloca %77*, align 8
  %5 = alloca %52*, align 8
  store %77* %0, %77** %3, align 8
  store %77* %1, %77** %4, align 8
  %6 = bitcast %52** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #13
  %7 = load %77*, %77** %4, align 8
  %8 = getelementptr inbounds %77, %77* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to %52*
  store %52* %10, %52** %5, align 8
  %11 = load %52*, %52** %5, align 8
  %12 = getelementptr inbounds %52, %52* %11, i32 0, i32 24
  %13 = load i16, i16* %12, align 8
  %14 = lshr i16 %13, 8
  %15 = and i16 %14, 1
  %16 = zext i16 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = load %52*, %52** %5, align 8
  %20 = getelementptr inbounds %52, %52* %19, i32 0, i32 17
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 8
  br label %23

23:                                               ; preds = %18, %2
  %24 = bitcast %52** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @470(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %4*, %4** %2, align 8
  %5 = getelementptr inbounds %4, %4* %4, i32 0, i32 1
  %6 = bitcast %6* %5 to %95*
  %7 = getelementptr inbounds %95, %95* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %4*, %4** %2, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 0
  %22 = bitcast %5* %21 to %96**
  %23 = load %96*, %96** %22, align 8
  %24 = getelementptr inbounds %96, %96* %23, i32 0, i32 0
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

declare dso_local void @_zval_dtor_func(%96*) #2

declare dso_local i8* @spl_filesystem_object_get_path(%77*, i64*) #2

declare dso_local void @php_stat(i8*, i64, i32, %4*) #2

declare dso_local i8* @expand_filepath(i8*, i8*) #2

declare dso_local %101* @phar_get_or_create_entry_data(i8*, i32, i8*, i32, i8*, i8 signext, i8**, i32) #2

declare dso_local i64 @_php_stream_tell(%34*) #2

declare dso_local i32 @_php_stream_copy_to_stream_ex(%34*, %34*, i64, i64*) #2

declare dso_local i32 @_php_stream_stat(%34*, %36*) #2

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #8

declare dso_local i32 @phar_entry_delref(%101*) #2

; Function Attrs: allocsize(0,1)
declare dso_local noalias i8* @_ecalloc(i64, i64) #11

declare dso_local void @_zend_hash_init(%8*, i32, void (%4*)*, i8 zeroext) #2

declare dso_local void @destroy_phar_manifest_entry(%4*) #2

declare dso_local void @_zval_copy_ctor_func(%4*) #2

declare dso_local noalias i8* @_estrdup(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @471(%93* %0, %34* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %93*, align 8
  %5 = alloca %34*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %93*, align 8
  %9 = alloca i32, align 4
  store %93* %0, %93** %4, align 8
  store %34* %1, %34** %5, align 8
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast %93** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %93*, %93** %4, align 8
  %14 = call i32 @phar_open_entry_fp(%93* %13, i8** %6, i32 1)
  %15 = icmp eq i32 -1, %14
  br i1 %15, label %16, label %44

16:                                               ; preds = %2
  %17 = load i8*, i8** %6, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %32

19:                                               ; preds = %16
  %20 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %21 = load %93*, %93** %4, align 8
  %22 = getelementptr inbounds %93, %93* %21, i32 0, i32 18
  %23 = load %52*, %52** %22, align 8
  %24 = getelementptr inbounds %52, %52* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = load %93*, %93** %4, align 8
  %27 = getelementptr inbounds %93, %93* %26, i32 0, i32 9
  %28 = load i8*, i8** %27, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %20, i64 0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @345, i32 0, i32 0), i8* %25, i8* %28, i8* %29)
  %31 = load i8*, i8** %6, align 8
  call void @_efree(i8* %31)
  br label %43

32:                                               ; preds = %16
  %33 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %34 = load %93*, %93** %4, align 8
  %35 = getelementptr inbounds %93, %93* %34, i32 0, i32 18
  %36 = load %52*, %52** %35, align 8
  %37 = getelementptr inbounds %52, %52* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = load %93*, %93** %4, align 8
  %40 = getelementptr inbounds %93, %93* %39, i32 0, i32 9
  %41 = load i8*, i8** %40, align 8
  %42 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %33, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @346, i32 0, i32 0), i8* %38, i8* %41)
  br label %43

43:                                               ; preds = %32, %19
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %95

44:                                               ; preds = %2
  %45 = load %93*, %93** %4, align 8
  %46 = call i32 @phar_seek_efp(%93* %45, i64 0, i32 0, i64 0, i32 1)
  %47 = load %34*, %34** %5, align 8
  %48 = call i64 @_php_stream_tell(%34* %47)
  store i64 %48, i64* %7, align 8
  %49 = load %93*, %93** %4, align 8
  %50 = call %93* @phar_get_link_source(%93* %49)
  store %93* %50, %93** %8, align 8
  %51 = load %93*, %93** %8, align 8
  %52 = icmp ne %93* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %44
  %54 = load %93*, %93** %4, align 8
  store %93* %54, %93** %8, align 8
  br label %55

55:                                               ; preds = %53, %44
  %56 = load %93*, %93** %8, align 8
  %57 = call %34* @phar_get_efp(%93* %56, i32 0)
  %58 = load %34*, %34** %5, align 8
  %59 = load %93*, %93** %8, align 8
  %60 = getelementptr inbounds %93, %93* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = zext i32 %61 to i64
  %63 = call i32 @_php_stream_copy_to_stream_ex(%34* %57, %34* %58, i64 %62, i64* null)
  %64 = icmp ne i32 0, %63
  br i1 %64, label %65, label %76

65:                                               ; preds = %55
  %66 = load %3*, %3** @spl_ce_UnexpectedValueException, align 8
  %67 = load %93*, %93** %4, align 8
  %68 = getelementptr inbounds %93, %93* %67, i32 0, i32 18
  %69 = load %52*, %52** %68, align 8
  %70 = getelementptr inbounds %52, %52* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load %93*, %93** %4, align 8
  %73 = getelementptr inbounds %93, %93* %72, i32 0, i32 9
  %74 = load i8*, i8** %73, align 8
  %75 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %66, i64 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @347, i32 0, i32 0), i8* %71, i8* %74)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %95

76:                                               ; preds = %55
  %77 = load %93*, %93** %4, align 8
  %78 = getelementptr inbounds %93, %93* %77, i32 0, i32 10
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %89

81:                                               ; preds = %76
  %82 = load %93*, %93** %4, align 8
  %83 = getelementptr inbounds %93, %93* %82, i32 0, i32 14
  %84 = load %34*, %34** %83, align 8
  %85 = load %93*, %93** %4, align 8
  %86 = getelementptr inbounds %93, %93* %85, i32 0, i32 15
  store %34* %84, %34** %86, align 8
  %87 = load %93*, %93** %4, align 8
  %88 = getelementptr inbounds %93, %93* %87, i32 0, i32 14
  store %34* null, %34** %88, align 8
  br label %89

89:                                               ; preds = %81, %76
  %90 = load %93*, %93** %4, align 8
  %91 = getelementptr inbounds %93, %93* %90, i32 0, i32 10
  store i32 0, i32* %91, align 8
  %92 = load i64, i64* %7, align 8
  %93 = load %93*, %93** %4, align 8
  %94 = getelementptr inbounds %93, %93* %93, i32 0, i32 12
  store i64 %92, i64* %94, align 8
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %95

95:                                               ; preds = %89, %65, %43
  %96 = bitcast %93** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #13
  %97 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #13
  %98 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #13
  %99 = load i32, i32* %3, align 4
  ret i32 %99
}

declare dso_local void @zend_hash_destroy(%8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @472(%93* %0) #9 {
  %2 = alloca %93*, align 8
  %3 = alloca [4096 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %93* %0, %93** %2, align 8
  %7 = bitcast [4096 x i8]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* %7) #13
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #13
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %93*, %93** %2, align 8
  %12 = getelementptr inbounds %93, %93* %11, i32 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = load %93*, %93** %2, align 8
  %15 = getelementptr inbounds %93, %93* %14, i32 0, i32 18
  %16 = load %52*, %52** %15, align 8
  %17 = getelementptr inbounds %52, %52* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %13, %18
  %20 = icmp ult i32 4096, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %1
  br label %32

22:                                               ; preds = %1
  %23 = load %93*, %93** %2, align 8
  %24 = getelementptr inbounds %93, %93* %23, i32 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = load %93*, %93** %2, align 8
  %27 = getelementptr inbounds %93, %93* %26, i32 0, i32 18
  %28 = load %52*, %52** %27, align 8
  %29 = getelementptr inbounds %52, %52* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %25, %30
  br label %32

32:                                               ; preds = %22, %21
  %33 = phi i32 [ 4096, %21 ], [ %31, %22 ]
  store i32 %33, i32* %4, align 4
  %34 = load %93*, %93** %2, align 8
  %35 = getelementptr inbounds %93, %93* %34, i32 0, i32 18
  %36 = load %52*, %52** %35, align 8
  %37 = getelementptr inbounds %52, %52* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %4, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %32
  %42 = load %93*, %93** %2, align 8
  %43 = getelementptr inbounds %93, %93* %42, i32 0, i32 18
  %44 = load %52*, %52** %43, align 8
  %45 = getelementptr inbounds %52, %52* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  br label %49

47:                                               ; preds = %32
  %48 = load i32, i32* %4, align 4
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i32 [ %46, %41 ], [ %48, %47 ]
  %51 = sext i32 %50 to i64
  store i64 %51, i64* %5, align 8
  %52 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %53 = load %93*, %93** %2, align 8
  %54 = getelementptr inbounds %93, %93* %53, i32 0, i32 18
  %55 = load %52*, %52** %54, align 8
  %56 = getelementptr inbounds %52, %52* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %52, i8* align 1 %57, i64 %58, i1 false)
  %59 = load i32, i32* %4, align 4
  %60 = sext i32 %59 to i64
  %61 = load i64, i64* %5, align 8
  %62 = sub i64 %60, %61
  %63 = load %93*, %93** %2, align 8
  %64 = getelementptr inbounds %93, %93* %63, i32 0, i32 8
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %62, %66
  br i1 %67, label %68, label %73

68:                                               ; preds = %49
  %69 = load i32, i32* %4, align 4
  %70 = sext i32 %69 to i64
  %71 = load i64, i64* %5, align 8
  %72 = sub i64 %70, %71
  br label %78

73:                                               ; preds = %49
  %74 = load %93*, %93** %2, align 8
  %75 = getelementptr inbounds %93, %93* %74, i32 0, i32 8
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %73, %68
  %79 = phi i64 [ %72, %68 ], [ %77, %73 ]
  store i64 %79, i64* %6, align 8
  %80 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %81 = load i64, i64* %5, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = load %93*, %93** %2, align 8
  %84 = getelementptr inbounds %93, %93* %83, i32 0, i32 9
  %85 = load i8*, i8** %84, align 8
  %86 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 %85, i64 %86, i1 false)
  %87 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i32 0, i32 0
  %88 = load i32, i32* %4, align 4
  %89 = sext i32 %88 to i64
  %90 = call i64 @zend_hash_func(i8* %87, i64 %89)
  %91 = trunc i64 %90 to i16
  %92 = load %93*, %93** %2, align 8
  %93 = getelementptr inbounds %93, %93* %92, i32 0, i32 23
  store i16 %91, i16* %93, align 8
  %94 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #13
  %95 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #13
  %96 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %96) #13
  %97 = bitcast [4096 x i8]* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* %97) #13
  ret void
}

declare dso_local void @phar_add_virtual_dirs(%52*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal %21* @473(%52** %0, i8* %1) #0 {
  %3 = alloca %21*, align 8
  %4 = alloca %52**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %52*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %4, align 8
  %14 = alloca %4, align 8
  %15 = alloca %3*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %52*, align 8
  %23 = alloca %36, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca [12 x i8*], align 16
  %28 = alloca i32, align 4
  %29 = alloca %4*, align 8
  %30 = alloca %0*, align 8
  store %52** %0, %52*** %4, align 8
  store i8* %1, i8** %5, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i8* null, i8** %6, align 8
  %32 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = load %52**, %52*** %4, align 8
  %34 = load %52*, %52** %33, align 8
  store %52* %34, %52** %7, align 8
  %35 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store i8* null, i8** %8, align 8
  %36 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i8* null, i8** %9, align 8
  %37 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store i8* null, i8** %10, align 8
  %38 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %11, align 8
  %39 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i8* null, i8** %12, align 8
  %40 = bitcast %4* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %40) #13
  %41 = bitcast %4* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %41) #13
  %42 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store i8* null, i8** %16, align 8
  %44 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  %46 = load i8*, i8** %5, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %2
  %49 = load i8*, i8** %5, align 8
  %50 = call i64 @strlen(i8* %49) #14
  br label %52

51:                                               ; preds = %2
  br label %52

52:                                               ; preds = %51, %48
  %53 = phi i64 [ %50, %48 ], [ 0, %51 ]
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %18, align 4
  %55 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  %56 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  %58 = bitcast %52** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  store %52* null, %52** %22, align 8
  %59 = bitcast %36* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %59) #13
  %60 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  %61 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #13
  store i32 0, i32* %25, align 4
  %62 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #13
  store i8* null, i8** %26, align 8
  %63 = bitcast [12 x i8*]* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* %63) #13
  %64 = bitcast [12 x i8*]* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %64, i8* align 16 bitcast ([12 x i8*]* @359 to i8*), i64 96, i1 false)
  %65 = load i8*, i8** %5, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %142, label %67

67:                                               ; preds = %52
  %68 = load %52*, %52** %7, align 8
  %69 = getelementptr inbounds %52, %52* %68, i32 0, i32 24
  %70 = load i16, i16* %69, align 8
  %71 = lshr i16 %70, 5
  %72 = and i16 %71, 1
  %73 = zext i16 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %86

75:                                               ; preds = %67
  %76 = load %52*, %52** %7, align 8
  %77 = getelementptr inbounds %52, %52* %76, i32 0, i32 24
  %78 = load i16, i16* %77, align 8
  %79 = lshr i16 %78, 7
  %80 = and i16 %79, 1
  %81 = zext i16 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %75
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @360, i32 0, i32 0), i8** %5, align 8
  br label %85

84:                                               ; preds = %75
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @361, i32 0, i32 0), i8** %5, align 8
  br label %85

85:                                               ; preds = %84, %83
  br label %141

86:                                               ; preds = %67
  %87 = load %52*, %52** %7, align 8
  %88 = getelementptr inbounds %52, %52* %87, i32 0, i32 24
  %89 = load i16, i16* %88, align 8
  %90 = lshr i16 %89, 6
  %91 = and i16 %90, 1
  %92 = zext i16 %91 to i32
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %132

94:                                               ; preds = %86
  %95 = load %52*, %52** %7, align 8
  %96 = getelementptr inbounds %52, %52* %95, i32 0, i32 12
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %120 [
    i32 1048576, label %98
    i32 2097152, label %109
  ]

98:                                               ; preds = %94
  %99 = load %52*, %52** %7, align 8
  %100 = getelementptr inbounds %52, %52* %99, i32 0, i32 24
  %101 = load i16, i16* %100, align 8
  %102 = lshr i16 %101, 7
  %103 = and i16 %102, 1
  %104 = zext i16 %103 to i32
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %98
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @362, i32 0, i32 0), i8** %5, align 8
  br label %108

107:                                              ; preds = %98
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @363, i32 0, i32 0), i8** %5, align 8
  br label %108

108:                                              ; preds = %107, %106
  br label %131

109:                                              ; preds = %94
  %110 = load %52*, %52** %7, align 8
  %111 = getelementptr inbounds %52, %52* %110, i32 0, i32 24
  %112 = load i16, i16* %111, align 8
  %113 = lshr i16 %112, 7
  %114 = and i16 %113, 1
  %115 = zext i16 %114 to i32
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %109
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @364, i32 0, i32 0), i8** %5, align 8
  br label %119

118:                                              ; preds = %109
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @365, i32 0, i32 0), i8** %5, align 8
  br label %119

119:                                              ; preds = %118, %117
  br label %131

120:                                              ; preds = %94
  %121 = load %52*, %52** %7, align 8
  %122 = getelementptr inbounds %52, %52* %121, i32 0, i32 24
  %123 = load i16, i16* %122, align 8
  %124 = lshr i16 %123, 7
  %125 = and i16 %124, 1
  %126 = zext i16 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %120
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @366, i32 0, i32 0), i8** %5, align 8
  br label %130

129:                                              ; preds = %120
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @367, i32 0, i32 0), i8** %5, align 8
  br label %130

130:                                              ; preds = %129, %128
  br label %131

131:                                              ; preds = %130, %119, %108
  br label %140

132:                                              ; preds = %86
  %133 = load %52*, %52** %7, align 8
  %134 = getelementptr inbounds %52, %52* %133, i32 0, i32 12
  %135 = load i32, i32* %134, align 8
  switch i32 %135, label %138 [
    i32 1048576, label %136
    i32 2097152, label %137
  ]

136:                                              ; preds = %132
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @368, i32 0, i32 0), i8** %5, align 8
  br label %139

137:                                              ; preds = %132
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @369, i32 0, i32 0), i8** %5, align 8
  br label %139

138:                                              ; preds = %132
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @370, i32 0, i32 0), i8** %5, align 8
  br label %139

139:                                              ; preds = %138, %137, %136
  br label %140

140:                                              ; preds = %139, %131
  br label %141

141:                                              ; preds = %140, %85
  br label %169

142:                                              ; preds = %52
  %143 = call i32 @phar_path_check(i8** %5, i32* %18, i8** %17)
  %144 = icmp ugt i32 %143, 1
  br i1 %144, label %145, label %168

145:                                              ; preds = %142
  %146 = load %52*, %52** %7, align 8
  %147 = getelementptr inbounds %52, %52* %146, i32 0, i32 24
  %148 = load i16, i16* %147, align 8
  %149 = lshr i16 %148, 7
  %150 = and i16 %149, 1
  %151 = zext i16 %150 to i32
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %160

153:                                              ; preds = %145
  %154 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %155 = load %52*, %52** %7, align 8
  %156 = getelementptr inbounds %52, %52* %155, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = load i8*, i8** %5, align 8
  %159 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %154, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @371, i32 0, i32 0), i8* %157, i8* %158)
  br label %167

160:                                              ; preds = %145
  %161 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %162 = load %52*, %52** %7, align 8
  %163 = getelementptr inbounds %52, %52* %162, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = load i8*, i8** %5, align 8
  %166 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %161, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @372, i32 0, i32 0), i8* %164, i8* %165)
  br label %167

167:                                              ; preds = %160, %153
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

168:                                              ; preds = %142
  br label %169

169:                                              ; preds = %168, %141
  %170 = load %52*, %52** %7, align 8
  %171 = getelementptr inbounds %52, %52* %170, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = load %52*, %52** %7, align 8
  %174 = getelementptr inbounds %52, %52* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = sext i32 %175 to i64
  %177 = call noalias i8* @_estrndup(i8* %172, i64 %176)
  store i8* %177, i8** %8, align 8
  %178 = load %52*, %52** %7, align 8
  %179 = getelementptr inbounds %52, %52* %178, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = load %52*, %52** %7, align 8
  %182 = getelementptr inbounds %52, %52* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = sext i32 %183 to i64
  %185 = call i8* @443(i8* %180, i32 47, i64 %184)
  store i8* %185, i8** %6, align 8
  %186 = icmp ne i8* %185, null
  br i1 %186, label %187, label %190

187:                                              ; preds = %169
  %188 = load i8*, i8** %6, align 8
  %189 = getelementptr inbounds i8, i8* %188, i32 1
  store i8* %189, i8** %6, align 8
  br label %194

190:                                              ; preds = %169
  %191 = load %52*, %52** %7, align 8
  %192 = getelementptr inbounds %52, %52* %191, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  store i8* %193, i8** %6, align 8
  br label %194

194:                                              ; preds = %190, %187
  %195 = load i8*, i8** %6, align 8
  %196 = call i64 @strlen(i8* %195) #14
  store i64 %196, i64* %20, align 8
  %197 = load i8*, i8** %6, align 8
  %198 = load i64, i64* %20, align 8
  %199 = call noalias i8* @_estrndup(i8* %197, i64 %198)
  store i8* %199, i8** %9, align 8
  store i32 12, i32* %24, align 4
  store i32 0, i32* %25, align 4
  br label %200

200:                                              ; preds = %239, %194
  %201 = load i32, i32* %25, align 4
  %202 = load i32, i32* %24, align 4
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %204, label %242

204:                                              ; preds = %200
  %205 = load i32, i32* %25, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [12 x i8*], [12 x i8*]* %27, i64 0, i64 %206
  %208 = load i8*, i8** %207, align 8
  %209 = call i64 @strlen(i8* %208) #14
  store i64 %209, i64* %21, align 8
  %210 = load i64, i64* %21, align 8
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %238

212:                                              ; preds = %204
  %213 = load i64, i64* %20, align 8
  %214 = load i64, i64* %21, align 8
  %215 = icmp ugt i64 %213, %214
  br i1 %215, label %216, label %238

216:                                              ; preds = %212
  %217 = load i32, i32* %25, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [12 x i8*], [12 x i8*]* %27, i64 0, i64 %218
  %220 = load i8*, i8** %219, align 8
  %221 = load i8*, i8** %9, align 8
  %222 = load i64, i64* %20, align 8
  %223 = load i64, i64* %21, align 8
  %224 = sub i64 %222, %223
  %225 = getelementptr inbounds i8, i8* %221, i64 %224
  %226 = load i64, i64* %21, align 8
  %227 = call i32 @memcmp(i8* %220, i8* %225, i64 %226) #14
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %237

229:                                              ; preds = %216
  %230 = load i8*, i8** %9, align 8
  %231 = load i64, i64* %20, align 8
  %232 = load i64, i64* %21, align 8
  %233 = sub i64 %231, %232
  %234 = getelementptr inbounds i8, i8* %230, i64 %233
  store i8* %234, i8** %26, align 8
  %235 = load i8*, i8** %26, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 0
  store i8 0, i8* %236, align 1
  br label %242

237:                                              ; preds = %216
  br label %238

238:                                              ; preds = %237, %212, %204
  store i8* null, i8** %26, align 8
  br label %239

239:                                              ; preds = %238
  %240 = load i32, i32* %25, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %25, align 4
  br label %200

242:                                              ; preds = %229, %200
  %243 = load i8*, i8** %26, align 8
  %244 = icmp ne i8* %243, null
  br i1 %244, label %254, label %245

245:                                              ; preds = %242
  %246 = load i8*, i8** %9, align 8
  %247 = call i8* @strrchr(i8* %246, i32 46) #14
  store i8* %247, i8** %26, align 8
  %248 = load i8*, i8** %26, align 8
  %249 = icmp ne i8* %248, null
  br i1 %249, label %250, label %253

250:                                              ; preds = %245
  %251 = load i8*, i8** %26, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 0
  store i8 0, i8* %252, align 1
  br label %253

253:                                              ; preds = %250, %245
  br label %254

254:                                              ; preds = %253, %242
  store i8* null, i8** %26, align 8
  %255 = load i8*, i8** %5, align 8
  %256 = getelementptr inbounds i8, i8* %255, i64 0
  %257 = load i8, i8* %256, align 1
  %258 = sext i8 %257 to i32
  %259 = icmp eq i32 %258, 46
  br i1 %259, label %260, label %263

260:                                              ; preds = %254
  %261 = load i8*, i8** %5, align 8
  %262 = getelementptr inbounds i8, i8* %261, i32 1
  store i8* %262, i8** %5, align 8
  br label %263

263:                                              ; preds = %260, %254
  %264 = load i8*, i8** %9, align 8
  %265 = load i8*, i8** %5, align 8
  %266 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %11, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @373, i32 0, i32 0), i8* %264, i8* %265)
  %267 = load i8*, i8** %9, align 8
  call void @_efree(i8* %267)
  %268 = load i8*, i8** %8, align 8
  %269 = load i8*, i8** %8, align 8
  %270 = call i64 @strlen(i8* %269) #14
  %271 = load i64, i64* %20, align 8
  %272 = sub i64 %270, %271
  %273 = call noalias i8* @_estrndup(i8* %268, i64 %272)
  store i8* %273, i8** %10, align 8
  %274 = load i8*, i8** %10, align 8
  %275 = load i8*, i8** %11, align 8
  %276 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %12, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %274, i8* %275)
  store i64 %276, i64* %19, align 8
  %277 = load i64, i64* %19, align 8
  %278 = icmp ugt i64 %277, 2147483647
  %279 = xor i1 %278, true
  %280 = xor i1 %279, true
  %281 = zext i1 %280 to i32
  %282 = sext i32 %281 to i64
  %283 = call i64 @llvm.expect.i64(i64 %282, i64 0)
  %284 = icmp ne i64 %283, 0
  br i1 %284, label %285, label %291

285:                                              ; preds = %263
  %286 = load i8*, i8** %8, align 8
  call void @_efree(i8* %286)
  %287 = load i8*, i8** %10, align 8
  call void @_efree(i8* %287)
  %288 = load i8*, i8** %12, align 8
  call void @_efree(i8* %288)
  %289 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %290 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %289, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @374, i32 0, i32 0))
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

291:                                              ; preds = %263
  %292 = load i64, i64* %19, align 8
  %293 = trunc i64 %292 to i32
  %294 = load %52*, %52** %7, align 8
  %295 = getelementptr inbounds %52, %52* %294, i32 0, i32 1
  store i32 %293, i32* %295, align 8
  %296 = load i8*, i8** %12, align 8
  %297 = load %52*, %52** %7, align 8
  %298 = getelementptr inbounds %52, %52* %297, i32 0, i32 0
  store i8* %296, i8** %298, align 8
  %299 = load i8*, i8** %12, align 8
  %300 = load %52*, %52** %7, align 8
  %301 = getelementptr inbounds %52, %52* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, i8* %299, i64 %303
  %305 = load i8*, i8** %5, align 8
  %306 = call i64 @strlen(i8* %305) #14
  %307 = sub i64 0, %306
  %308 = getelementptr inbounds i8, i8* %304, i64 %307
  %309 = getelementptr inbounds i8, i8* %308, i64 -1
  %310 = load %52*, %52** %7, align 8
  %311 = getelementptr inbounds %52, %52* %310, i32 0, i32 2
  store i8* %309, i8** %311, align 8
  %312 = load i8*, i8** %10, align 8
  call void @_efree(i8* %312)
  %313 = load i8*, i8** %11, align 8
  call void @_efree(i8* %313)
  %314 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 7), align 8
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %316, label %332

316:                                              ; preds = %291
  %317 = load i8*, i8** %12, align 8
  %318 = load %52*, %52** %7, align 8
  %319 = getelementptr inbounds %52, %52* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 8
  %321 = sext i32 %320 to i64
  %322 = call i8* @442(%8* @cached_phars, i8* %317, i64 %321)
  %323 = bitcast i8* %322 to %52*
  store %52* %323, %52** %22, align 8
  %324 = icmp ne %52* null, %323
  br i1 %324, label %325, label %332

325:                                              ; preds = %316
  %326 = load i8*, i8** %8, align 8
  call void @_efree(i8* %326)
  %327 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %328 = load %52*, %52** %7, align 8
  %329 = getelementptr inbounds %52, %52* %328, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %327, i64 0, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @375, i32 0, i32 0), i8* %330)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

332:                                              ; preds = %316, %291
  %333 = load i8*, i8** %12, align 8
  %334 = load %52*, %52** %7, align 8
  %335 = getelementptr inbounds %52, %52* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 8
  %337 = sext i32 %336 to i64
  %338 = call i8* @442(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1), i8* %333, i64 %337)
  %339 = bitcast i8* %338 to %52*
  store %52* %339, %52** %22, align 8
  %340 = icmp ne %52* null, %339
  br i1 %340, label %341, label %442

341:                                              ; preds = %332
  %342 = load %52*, %52** %22, align 8
  %343 = getelementptr inbounds %52, %52* %342, i32 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = load %52*, %52** %7, align 8
  %346 = getelementptr inbounds %52, %52* %345, i32 0, i32 1
  %347 = load i32, i32* %346, align 8
  %348 = icmp eq i32 %344, %347
  br i1 %348, label %349, label %435

349:                                              ; preds = %341
  %350 = load %52*, %52** %22, align 8
  %351 = getelementptr inbounds %52, %52* %350, i32 0, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = load %52*, %52** %7, align 8
  %354 = getelementptr inbounds %52, %52* %353, i32 0, i32 0
  %355 = load i8*, i8** %354, align 8
  %356 = load %52*, %52** %7, align 8
  %357 = getelementptr inbounds %52, %52* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 8
  %359 = sext i32 %358 to i64
  %360 = call i32 @memcmp(i8* %352, i8* %355, i64 %359) #14
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %435, label %362

362:                                              ; preds = %349
  %363 = load %52*, %52** %7, align 8
  %364 = getelementptr inbounds %52, %52* %363, i32 0, i32 9
  %365 = getelementptr inbounds %8, %8* %364, i32 0, i32 5
  %366 = load i32, i32* %365, align 4
  %367 = icmp ne i32 %366, 0
  br i1 %367, label %434, label %368

368:                                              ; preds = %362
  %369 = load %52*, %52** %7, align 8
  %370 = getelementptr inbounds %52, %52* %369, i32 0, i32 24
  %371 = load i16, i16* %370, align 8
  %372 = lshr i16 %371, 6
  %373 = and i16 %372, 1
  %374 = zext i16 %373 to i32
  %375 = load %52*, %52** %22, align 8
  %376 = getelementptr inbounds %52, %52* %375, i32 0, i32 24
  %377 = trunc i32 %374 to i16
  %378 = load i16, i16* %376, align 8
  %379 = and i16 %377, 1
  %380 = shl i16 %379, 6
  %381 = and i16 %378, -65
  %382 = or i16 %381, %380
  store i16 %382, i16* %376, align 8
  %383 = zext i16 %379 to i32
  %384 = load %52*, %52** %7, align 8
  %385 = getelementptr inbounds %52, %52* %384, i32 0, i32 24
  %386 = load i16, i16* %385, align 8
  %387 = lshr i16 %386, 5
  %388 = and i16 %387, 1
  %389 = zext i16 %388 to i32
  %390 = load %52*, %52** %22, align 8
  %391 = getelementptr inbounds %52, %52* %390, i32 0, i32 24
  %392 = trunc i32 %389 to i16
  %393 = load i16, i16* %391, align 8
  %394 = and i16 %392, 1
  %395 = shl i16 %394, 5
  %396 = and i16 %393, -33
  %397 = or i16 %396, %395
  store i16 %397, i16* %391, align 8
  %398 = zext i16 %394 to i32
  %399 = load %52*, %52** %7, align 8
  %400 = getelementptr inbounds %52, %52* %399, i32 0, i32 24
  %401 = load i16, i16* %400, align 8
  %402 = lshr i16 %401, 7
  %403 = and i16 %402, 1
  %404 = zext i16 %403 to i32
  %405 = load %52*, %52** %22, align 8
  %406 = getelementptr inbounds %52, %52* %405, i32 0, i32 24
  %407 = trunc i32 %404 to i16
  %408 = load i16, i16* %406, align 8
  %409 = and i16 %407, 1
  %410 = shl i16 %409, 7
  %411 = and i16 %408, -129
  %412 = or i16 %411, %410
  store i16 %412, i16* %406, align 8
  %413 = zext i16 %409 to i32
  %414 = load %52*, %52** %7, align 8
  %415 = getelementptr inbounds %52, %52* %414, i32 0, i32 12
  %416 = load i32, i32* %415, align 8
  %417 = load %52*, %52** %22, align 8
  %418 = getelementptr inbounds %52, %52* %417, i32 0, i32 12
  store i32 %416, i32* %418, align 8
  %419 = load %52*, %52** %7, align 8
  %420 = getelementptr inbounds %52, %52* %419, i32 0, i32 15
  %421 = load %34*, %34** %420, align 8
  %422 = load %52*, %52** %22, align 8
  %423 = getelementptr inbounds %52, %52* %422, i32 0, i32 15
  store %34* %421, %34** %423, align 8
  %424 = load %52*, %52** %7, align 8
  %425 = getelementptr inbounds %52, %52* %424, i32 0, i32 15
  store %34* null, %34** %425, align 8
  %426 = load %52*, %52** %7, align 8
  call void @phar_destroy_phar_data(%52* %426)
  %427 = load %52**, %52*** %4, align 8
  store %52* null, %52** %427, align 8
  %428 = load %52*, %52** %22, align 8
  store %52* %428, %52** %7, align 8
  %429 = load %52*, %52** %7, align 8
  %430 = getelementptr inbounds %52, %52* %429, i32 0, i32 17
  %431 = load i32, i32* %430, align 8
  %432 = add nsw i32 %431, 1
  store i32 %432, i32* %430, align 8
  %433 = load i8*, i8** %8, align 8
  store i8* %433, i8** %12, align 8
  br label %443

434:                                              ; preds = %362
  br label %435

435:                                              ; preds = %434, %349, %341
  %436 = load i8*, i8** %8, align 8
  call void @_efree(i8* %436)
  %437 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %438 = load %52*, %52** %7, align 8
  %439 = getelementptr inbounds %52, %52* %438, i32 0, i32 0
  %440 = load i8*, i8** %439, align 8
  %441 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %437, i64 0, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @376, i32 0, i32 0), i8* %440)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

442:                                              ; preds = %332
  br label %443

443:                                              ; preds = %442, %368
  %444 = load i8*, i8** %12, align 8
  %445 = call i32 @_php_stream_stat_path(i8* %444, i32 0, %36* %23, %46* null)
  %446 = icmp eq i32 0, %445
  br i1 %446, label %447, label %452

447:                                              ; preds = %443
  %448 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %449 = load i8*, i8** %12, align 8
  %450 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %448, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @377, i32 0, i32 0), i8* %449)
  %451 = load i8*, i8** %8, align 8
  call void @_efree(i8* %451)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

452:                                              ; preds = %443
  %453 = load %52*, %52** %7, align 8
  %454 = getelementptr inbounds %52, %52* %453, i32 0, i32 24
  %455 = load i16, i16* %454, align 8
  %456 = lshr i16 %455, 7
  %457 = and i16 %456, 1
  %458 = zext i16 %457 to i32
  %459 = icmp ne i32 %458, 0
  br i1 %459, label %523, label %460

460:                                              ; preds = %452
  %461 = load i8*, i8** %12, align 8
  %462 = load %52*, %52** %7, align 8
  %463 = getelementptr inbounds %52, %52* %462, i32 0, i32 1
  %464 = load i32, i32* %463, align 8
  %465 = load %52*, %52** %7, align 8
  %466 = getelementptr inbounds %52, %52* %465, i32 0, i32 2
  %467 = load %52*, %52** %7, align 8
  %468 = getelementptr inbounds %52, %52* %467, i32 0, i32 3
  %469 = call i32 @phar_detect_phar_fname_ext(i8* %461, i32 %464, i8** %466, i32* %468, i32 1, i32 1, i32 1)
  %470 = icmp ne i32 0, %469
  br i1 %470, label %471, label %479

471:                                              ; preds = %460
  %472 = load i8*, i8** %8, align 8
  call void @_efree(i8* %472)
  %473 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %474 = load %52*, %52** %7, align 8
  %475 = getelementptr inbounds %52, %52* %474, i32 0, i32 0
  %476 = load i8*, i8** %475, align 8
  %477 = load i8*, i8** %5, align 8
  %478 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %473, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @378, i32 0, i32 0), i8* %476, i8* %477)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

479:                                              ; preds = %460
  %480 = load %52*, %52** %7, align 8
  %481 = getelementptr inbounds %52, %52* %480, i32 0, i32 4
  %482 = load i8*, i8** %481, align 8
  %483 = icmp ne i8* %482, null
  br i1 %483, label %484, label %522

484:                                              ; preds = %479
  %485 = load %52*, %52** %7, align 8
  %486 = getelementptr inbounds %52, %52* %485, i32 0, i32 24
  %487 = load i16, i16* %486, align 8
  %488 = and i16 %487, 1
  %489 = zext i16 %488 to i32
  %490 = icmp ne i32 %489, 0
  br i1 %490, label %491, label %496

491:                                              ; preds = %484
  %492 = load %52*, %52** %7, align 8
  %493 = getelementptr inbounds %52, %52* %492, i32 0, i32 4
  store i8* null, i8** %493, align 8
  %494 = load %52*, %52** %7, align 8
  %495 = getelementptr inbounds %52, %52* %494, i32 0, i32 5
  store i32 0, i32* %495, align 8
  br label %521

496:                                              ; preds = %484
  %497 = load i8*, i8** %12, align 8
  %498 = load i8*, i8** %12, align 8
  %499 = call i64 @strlen(i8* %498) #14
  %500 = call noalias i8* @_estrndup(i8* %497, i64 %499)
  %501 = load %52*, %52** %7, align 8
  %502 = getelementptr inbounds %52, %52* %501, i32 0, i32 4
  store i8* %500, i8** %502, align 8
  %503 = load i8*, i8** %12, align 8
  %504 = call i64 @strlen(i8* %503) #14
  %505 = trunc i64 %504 to i32
  %506 = load %52*, %52** %7, align 8
  %507 = getelementptr inbounds %52, %52* %506, i32 0, i32 5
  store i32 %505, i32* %507, align 8
  %508 = load %52*, %52** %7, align 8
  %509 = getelementptr inbounds %52, %52* %508, i32 0, i32 24
  %510 = load i16, i16* %509, align 8
  %511 = and i16 %510, -2
  %512 = or i16 %511, 1
  store i16 %512, i16* %509, align 8
  %513 = load i8*, i8** %12, align 8
  %514 = load %52*, %52** %7, align 8
  %515 = getelementptr inbounds %52, %52* %514, i32 0, i32 1
  %516 = load i32, i32* %515, align 8
  %517 = sext i32 %516 to i64
  %518 = load %52*, %52** %7, align 8
  %519 = bitcast %52* %518 to i8*
  %520 = call i8* @474(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 3), i8* %513, i64 %517, i8* %519)
  br label %521

521:                                              ; preds = %496, %491
  br label %522

522:                                              ; preds = %521, %479
  br label %547

523:                                              ; preds = %452
  %524 = load i8*, i8** %12, align 8
  %525 = load %52*, %52** %7, align 8
  %526 = getelementptr inbounds %52, %52* %525, i32 0, i32 1
  %527 = load i32, i32* %526, align 8
  %528 = load %52*, %52** %7, align 8
  %529 = getelementptr inbounds %52, %52* %528, i32 0, i32 2
  %530 = load %52*, %52** %7, align 8
  %531 = getelementptr inbounds %52, %52* %530, i32 0, i32 3
  %532 = call i32 @phar_detect_phar_fname_ext(i8* %524, i32 %527, i8** %529, i32* %531, i32 0, i32 1, i32 1)
  %533 = icmp ne i32 0, %532
  br i1 %533, label %534, label %542

534:                                              ; preds = %523
  %535 = load i8*, i8** %8, align 8
  call void @_efree(i8* %535)
  %536 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %537 = load %52*, %52** %7, align 8
  %538 = getelementptr inbounds %52, %52* %537, i32 0, i32 0
  %539 = load i8*, i8** %538, align 8
  %540 = load i8*, i8** %5, align 8
  %541 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %536, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @379, i32 0, i32 0), i8* %539, i8* %540)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

542:                                              ; preds = %523
  %543 = load %52*, %52** %7, align 8
  %544 = getelementptr inbounds %52, %52* %543, i32 0, i32 4
  store i8* null, i8** %544, align 8
  %545 = load %52*, %52** %7, align 8
  %546 = getelementptr inbounds %52, %52* %545, i32 0, i32 5
  store i32 0, i32* %546, align 8
  br label %547

547:                                              ; preds = %542, %522
  %548 = load %52*, %52** %22, align 8
  %549 = icmp ne %52* %548, null
  br i1 %549, label %550, label %554

550:                                              ; preds = %547
  %551 = load %52*, %52** %7, align 8
  %552 = load %52*, %52** %22, align 8
  %553 = icmp eq %52* %551, %552
  br i1 %553, label %554, label %571

554:                                              ; preds = %550, %547
  %555 = load i8*, i8** %12, align 8
  %556 = load %52*, %52** %7, align 8
  %557 = getelementptr inbounds %52, %52* %556, i32 0, i32 1
  %558 = load i32, i32* %557, align 8
  %559 = sext i32 %558 to i64
  %560 = load %52*, %52** %7, align 8
  %561 = bitcast %52* %560 to i8*
  %562 = call i8* @474(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1), i8* %555, i64 %559, i8* %561)
  %563 = icmp eq i8* null, %562
  br i1 %563, label %564, label %571

564:                                              ; preds = %554
  %565 = load i8*, i8** %8, align 8
  call void @_efree(i8* %565)
  %566 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %567 = load %52*, %52** %7, align 8
  %568 = getelementptr inbounds %52, %52* %567, i32 0, i32 0
  %569 = load i8*, i8** %568, align 8
  %570 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %566, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @380, i32 0, i32 0), i8* %569)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

571:                                              ; preds = %554, %550
  %572 = load %52*, %52** %7, align 8
  %573 = call i32 @phar_flush(%52* %572, i8* null, i64 0, i32 1, i8** %16)
  %574 = load i8*, i8** %16, align 8
  %575 = icmp ne i8* %574, null
  br i1 %575, label %576, label %589

576:                                              ; preds = %571
  %577 = load i8*, i8** %12, align 8
  %578 = load %52*, %52** %7, align 8
  %579 = getelementptr inbounds %52, %52* %578, i32 0, i32 1
  %580 = load i32, i32* %579, align 8
  %581 = sext i32 %580 to i64
  %582 = call i32 @zend_hash_str_del(%8* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 1), i8* %577, i64 %581)
  %583 = load %52**, %52*** %4, align 8
  store %52* null, %52** %583, align 8
  %584 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %585 = load i8*, i8** %16, align 8
  %586 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %584, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* %585)
  %587 = load i8*, i8** %16, align 8
  call void @_efree(i8* %587)
  %588 = load i8*, i8** %8, align 8
  call void @_efree(i8* %588)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

589:                                              ; preds = %571
  %590 = load i8*, i8** %8, align 8
  call void @_efree(i8* %590)
  %591 = load %52*, %52** %7, align 8
  %592 = getelementptr inbounds %52, %52* %591, i32 0, i32 24
  %593 = load i16, i16* %592, align 8
  %594 = lshr i16 %593, 7
  %595 = and i16 %594, 1
  %596 = zext i16 %595 to i32
  %597 = icmp ne i32 %596, 0
  br i1 %597, label %598, label %600

598:                                              ; preds = %589
  %599 = load %3*, %3** @48, align 8
  store %3* %599, %3** %15, align 8
  br label %602

600:                                              ; preds = %589
  %601 = load %3*, %3** @297, align 8
  store %3* %601, %3** %15, align 8
  br label %602

602:                                              ; preds = %600, %598
  br label %603

603:                                              ; preds = %602
  %604 = getelementptr inbounds %4, %4* %13, i32 0, i32 1
  %605 = bitcast %6* %604 to i32*
  store i32 1, i32* %605, align 8
  br label %606

606:                                              ; preds = %603
  br label %607

607:                                              ; preds = %606
  %608 = load %3*, %3** %15, align 8
  %609 = call i32 @_object_init_ex(%4* %13, %3* %608)
  %610 = icmp ne i32 0, %609
  br i1 %610, label %611, label %617

611:                                              ; preds = %607
  call void @452(%4* %13)
  %612 = load %3*, %3** @spl_ce_BadMethodCallException, align 8
  %613 = load %52*, %52** %7, align 8
  %614 = getelementptr inbounds %52, %52* %613, i32 0, i32 0
  %615 = load i8*, i8** %614, align 8
  %616 = call %21* (%3*, i64, i8*, ...) @zend_throw_exception_ex(%3* %612, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @381, i32 0, i32 0), i8* %615)
  store %21* null, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

617:                                              ; preds = %607
  br label %618

618:                                              ; preds = %617
  br label %619

619:                                              ; preds = %618
  %620 = bitcast %4** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %620) #13
  store %4* %14, %4** %29, align 8
  %621 = bitcast %0** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %621) #13
  %622 = load %52*, %52** %7, align 8
  %623 = getelementptr inbounds %52, %52* %622, i32 0, i32 0
  %624 = load i8*, i8** %623, align 8
  %625 = load %52*, %52** %7, align 8
  %626 = getelementptr inbounds %52, %52* %625, i32 0, i32 1
  %627 = load i32, i32* %626, align 8
  %628 = sext i32 %627 to i64
  %629 = call %0* @441(i8* %624, i64 %628, i32 0)
  store %0* %629, %0** %30, align 8
  %630 = load %0*, %0** %30, align 8
  %631 = load %4*, %4** %29, align 8
  %632 = getelementptr inbounds %4, %4* %631, i32 0, i32 0
  %633 = bitcast %5* %632 to %0**
  store %0* %630, %0** %633, align 8
  %634 = load %4*, %4** %29, align 8
  %635 = getelementptr inbounds %4, %4* %634, i32 0, i32 1
  %636 = bitcast %6* %635 to i32*
  store i32 5126, i32* %636, align 8
  %637 = bitcast %0** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %637) #13
  %638 = bitcast %4** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %638) #13
  br label %639

639:                                              ; preds = %619
  br label %640

640:                                              ; preds = %639
  br label %641

641:                                              ; preds = %640
  br label %642

642:                                              ; preds = %641
  %643 = load %3*, %3** %15, align 8
  %644 = load %3*, %3** %15, align 8
  %645 = getelementptr inbounds %3, %3* %644, i32 0, i32 13
  %646 = call %4* @zend_call_method(%4* %13, %3* %643, %11** %645, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0), i64 11, %4* null, i32 1, %4* %14, %4* null)
  call void @_zval_ptr_dtor(%4* %14)
  %647 = getelementptr inbounds %4, %4* %13, i32 0, i32 0
  %648 = bitcast %5* %647 to %21**
  %649 = load %21*, %21** %648, align 8
  store %21* %649, %21** %3, align 8
  store i32 1, i32* %28, align 4
  br label %650

650:                                              ; preds = %642, %611, %576, %564, %534, %471, %447, %435, %325, %285, %167
  %651 = bitcast [12 x i8*]* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 96, i8* %651) #13
  %652 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %652) #13
  %653 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %653) #13
  %654 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %654) #13
  %655 = bitcast %36* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %655) #13
  %656 = bitcast %52** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %656) #13
  %657 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %657) #13
  %658 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %658) #13
  %659 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %659) #13
  %660 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %660) #13
  %661 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %661) #13
  %662 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %662) #13
  %663 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %663) #13
  %664 = bitcast %4* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %664) #13
  %665 = bitcast %4* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %665) #13
  %666 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %666) #13
  %667 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %667) #13
  %668 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %668) #13
  %669 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %669) #13
  %670 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %670) #13
  %671 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %671) #13
  %672 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %672) #13
  %673 = load %21*, %21** %3, align 8
  ret %21* %673
}

declare dso_local i64 @zend_hash_func(i8*, i64) #2

declare dso_local void @phar_destroy_phar_data(%52*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @474(%8* %0, i8* %1, i64 %2, i8* %3) #4 {
  %5 = alloca i8*, align 8
  %6 = alloca %8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %4, align 8
  %11 = alloca %4*, align 8
  %12 = alloca i32, align 4
  store %8* %0, %8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %13 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #13
  %14 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  br label %15

15:                                               ; preds = %4
  %16 = load i8*, i8** %9, align 8
  %17 = getelementptr inbounds %4, %4* %10, i32 0, i32 0
  %18 = bitcast %5* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds %4, %4* %10, i32 0, i32 1
  %20 = bitcast %6* %19 to i32*
  store i32 17, i32* %20, align 8
  br label %21

21:                                               ; preds = %15
  br label %22

22:                                               ; preds = %21
  %23 = load %8*, %8** %6, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = call %4* @_zend_hash_str_update(%8* %23, i8* %24, i64 %25, %4* %10)
  store %4* %26, %4** %11, align 8
  %27 = load %4*, %4** %11, align 8
  %28 = icmp ne %4* %27, null
  br i1 %28, label %29, label %49

29:                                               ; preds = %22
  br label %30

30:                                               ; preds = %29
  %31 = load %4*, %4** %11, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 0
  %33 = bitcast %5* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ne i8* %34, null
  %36 = xor i1 %35, true
  %37 = zext i1 %36 to i32
  %38 = sext i32 %37 to i64
  %39 = call i64 @llvm.expect.i64(i64 %38, i64 0)
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %30
  unreachable

42:                                               ; preds = %30
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = load %4*, %4** %11, align 8
  %46 = getelementptr inbounds %4, %4* %45, i32 0, i32 0
  %47 = bitcast %5* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %50

49:                                               ; preds = %22
  store i8* null, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %50

50:                                               ; preds = %49, %44
  %51 = bitcast %4** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #13
  %52 = bitcast %4* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %52) #13
  %53 = load i8*, i8** %5, align 8
  ret i8* %53
}

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #3

; Function Attrs: nounwind
declare dso_local void @free(i8*) #8

declare dso_local void @zend_hash_apply_with_argument(%8*, i32 (%4*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @475(%4* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %93*, align 8
  %7 = alloca i32, align 4
  store %4* %0, %4** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = bitcast %93** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %4*, %4** %4, align 8
  %10 = getelementptr inbounds %4, %4* %9, i32 0, i32 0
  %11 = bitcast %5* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast i8* %12 to %93*
  store %93* %13, %93** %6, align 8
  %14 = load %93*, %93** %6, align 8
  %15 = getelementptr inbounds %93, %93* %14, i32 0, i32 24
  %16 = load i16, i16* %15, align 2
  %17 = lshr i16 %16, 2
  %18 = and i16 %17, 1
  %19 = zext i16 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %49

22:                                               ; preds = %2
  %23 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 10), align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %22
  %26 = load %93*, %93** %6, align 8
  %27 = getelementptr inbounds %93, %93* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 8192
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = load i8*, i8** %5, align 8
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %31, %25
  br label %35

35:                                               ; preds = %34, %22
  %36 = load i32, i32* getelementptr inbounds (%32, %32* @phar_globals, i32 0, i32 9), align 8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = load %93*, %93** %6, align 8
  %40 = getelementptr inbounds %93, %93* %39, i32 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 4096
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = load i8*, i8** %5, align 8
  %46 = bitcast i8* %45 to i32*
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %44, %38
  br label %48

48:                                               ; preds = %47, %35
  store i32 0, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %49

49:                                               ; preds = %48, %21
  %50 = bitcast %93** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #13
  %51 = load i32, i32* %3, align 4
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define internal i32 @476(%4* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %93*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %4* %0, %4** %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = bitcast %93** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = load %4*, %4** %4, align 8
  %11 = getelementptr inbounds %4, %4* %10, i32 0, i32 0
  %12 = bitcast %5* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast i8* %13 to %93*
  store %93* %14, %93** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #13
  %16 = load i8*, i8** %5, align 8
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %19 = load %93*, %93** %6, align 8
  %20 = getelementptr inbounds %93, %93* %19, i32 0, i32 24
  %21 = load i16, i16* %20, align 2
  %22 = lshr i16 %21, 2
  %23 = and i16 %22, 1
  %24 = zext i16 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %47

27:                                               ; preds = %2
  %28 = load %93*, %93** %6, align 8
  %29 = getelementptr inbounds %93, %93* %28, i32 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = load %93*, %93** %6, align 8
  %32 = getelementptr inbounds %93, %93* %31, i32 0, i32 5
  store i32 %30, i32* %32, align 4
  %33 = load %93*, %93** %6, align 8
  %34 = getelementptr inbounds %93, %93* %33, i32 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -61441
  store i32 %36, i32* %34, align 8
  %37 = load i32, i32* %7, align 4
  %38 = load %93*, %93** %6, align 8
  %39 = getelementptr inbounds %93, %93* %38, i32 0, i32 4
  %40 = load i32, i32* %39, align 8
  %41 = or i32 %40, %37
  store i32 %41, i32* %39, align 8
  %42 = load %93*, %93** %6, align 8
  %43 = getelementptr inbounds %93, %93* %42, i32 0, i32 24
  %44 = load i16, i16* %43, align 2
  %45 = and i16 %44, -3
  %46 = or i16 %45, 2
  store i16 %46, i16* %43, align 2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %47

47:                                               ; preds = %27, %26
  %48 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #13
  %49 = bitcast %93** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #13
  %50 = load i32, i32* %3, align 4
  ret i32 %50
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) #6

declare dso_local void @spl_instantiate(%3*, %4*) #2

declare dso_local i64 @_php_stream_write(%34*, i8*, i64) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @477(%0* %0) #4 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @478(i8 zeroext %0, %93* %1, i8* %2, i32 %3, i8** %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %93*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca %36, align 8
  %13 = alloca i64, align 8
  %14 = alloca %34*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %106, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  store i8 %0, i8* %7, align 1
  store %93* %1, %93** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i8** %4, i8*** %11, align 8
  %24 = bitcast %36* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %24) #13
  %25 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast %34** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  %30 = bitcast %106* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %30) #13
  %31 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = load %93*, %93** %8, align 8
  %34 = getelementptr inbounds %93, %93* %33, i32 0, i32 24
  %35 = load i16, i16* %34, align 2
  %36 = lshr i16 %35, 4
  %37 = and i16 %36, 1
  %38 = zext i16 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %5
  store i32 0, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

41:                                               ; preds = %5
  %42 = load %93*, %93** %8, align 8
  %43 = getelementptr inbounds %93, %93* %42, i32 0, i32 8
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp uge i64 %45, 5
  br i1 %46, label %47, label %54

47:                                               ; preds = %41
  %48 = load %93*, %93** %8, align 8
  %49 = getelementptr inbounds %93, %93* %48, i32 0, i32 9
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 @memcmp(i8* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @132, i32 0, i32 0), i64 5) #14
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %47
  store i32 0, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

54:                                               ; preds = %47, %41
  %55 = call noalias i8* @_emalloc_8()
  %56 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  store i8* %55, i8** %56, align 8
  %57 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 0
  store i8 47, i8* %59, align 1
  %60 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %106, %106* %18, i32 0, i32 1
  store i32 1, i32* %63, align 8
  %64 = load %93*, %93** %8, align 8
  %65 = getelementptr inbounds %93, %93* %64, i32 0, i32 9
  %66 = load i8*, i8** %65, align 8
  %67 = call i32 @virtual_file_ex(%106* %18, i8* %66, i32 (%106*)* null, i32 0)
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %54
  %70 = getelementptr inbounds %106, %106* %18, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp sle i32 %71, 1
  br i1 %72, label %73, label %103

73:                                               ; preds = %69, %54
  %74 = call i32* @__errno_location() #18
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 22, %75
  br i1 %76, label %77, label %94

77:                                               ; preds = %73
  %78 = load %93*, %93** %8, align 8
  %79 = getelementptr inbounds %93, %93* %78, i32 0, i32 8
  %80 = load i32, i32* %79, align 4
  %81 = icmp ugt i32 %80, 50
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %83) #13
  %84 = load %93*, %93** %8, align 8
  %85 = getelementptr inbounds %93, %93* %84, i32 0, i32 9
  %86 = load i8*, i8** %85, align 8
  %87 = call noalias i8* @_estrndup(i8* %86, i64 50)
  store i8* %87, i8** %22, align 8
  %88 = load i8**, i8*** %11, align 8
  %89 = load i8*, i8** %22, align 8
  %90 = load i8*, i8** %9, align 8
  %91 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %88, i64 4096, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @388, i32 0, i32 0), i8* %89, i8* %90)
  %92 = load i8*, i8** %22, align 8
  call void @_efree(i8* %92)
  %93 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #13
  br label %100

94:                                               ; preds = %77, %73
  %95 = load i8**, i8*** %11, align 8
  %96 = load %93*, %93** %8, align 8
  %97 = getelementptr inbounds %93, %93* %96, i32 0, i32 9
  %98 = load i8*, i8** %97, align 8
  %99 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %95, i64 4096, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @389, i32 0, i32 0), i8* %98)
  br label %100

100:                                              ; preds = %94, %82
  %101 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_efree(i8* %102)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

103:                                              ; preds = %69
  %104 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 1
  store i8* %106, i8** %19, align 8
  %107 = getelementptr inbounds %106, %106* %18, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = sub nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  store i64 %110, i64* %20, align 8
  %111 = load i8*, i8** %9, align 8
  %112 = load i8*, i8** %19, align 8
  %113 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %15, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @390, i32 0, i32 0), i8* %111, i8* %112)
  store i64 %113, i64* %13, align 8
  %114 = load i64, i64* %13, align 8
  %115 = icmp uge i64 %114, 4096
  br i1 %115, label %116, label %146

116:                                              ; preds = %103
  %117 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %117) #13
  %118 = load i8*, i8** %15, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 50
  store i8 0, i8* %119, align 1
  %120 = load %93*, %93** %8, align 8
  %121 = getelementptr inbounds %93, %93* %120, i32 0, i32 8
  %122 = load i32, i32* %121, align 4
  %123 = icmp ugt i32 %122, 50
  br i1 %123, label %124, label %134

124:                                              ; preds = %116
  %125 = load %93*, %93** %8, align 8
  %126 = getelementptr inbounds %93, %93* %125, i32 0, i32 9
  %127 = load i8*, i8** %126, align 8
  %128 = call noalias i8* @_estrndup(i8* %127, i64 50)
  store i8* %128, i8** %23, align 8
  %129 = load i8**, i8*** %11, align 8
  %130 = load i8*, i8** %23, align 8
  %131 = load i8*, i8** %15, align 8
  %132 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %129, i64 4096, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @388, i32 0, i32 0), i8* %130, i8* %131)
  %133 = load i8*, i8** %23, align 8
  call void @_efree(i8* %133)
  br label %141

134:                                              ; preds = %116
  %135 = load i8**, i8*** %11, align 8
  %136 = load %93*, %93** %8, align 8
  %137 = getelementptr inbounds %93, %93* %136, i32 0, i32 9
  %138 = load i8*, i8** %137, align 8
  %139 = load i8*, i8** %15, align 8
  %140 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %135, i64 4096, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @391, i32 0, i32 0), i8* %138, i8* %139)
  br label %141

141:                                              ; preds = %134, %124
  %142 = load i8*, i8** %15, align 8
  call void @_efree(i8* %142)
  %143 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_efree(i8* %144)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  %145 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #13
  br label %392

146:                                              ; preds = %103
  %147 = load i64, i64* %13, align 8
  %148 = icmp ne i64 %147, 0
  br i1 %148, label %158, label %149

149:                                              ; preds = %146
  %150 = load i8**, i8*** %11, align 8
  %151 = load %93*, %93** %8, align 8
  %152 = getelementptr inbounds %93, %93* %151, i32 0, i32 9
  %153 = load i8*, i8** %152, align 8
  %154 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %150, i64 4096, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @389, i32 0, i32 0), i8* %153)
  %155 = load i8*, i8** %15, align 8
  call void @_efree(i8* %155)
  %156 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_efree(i8* %157)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

158:                                              ; preds = %146
  %159 = load i8*, i8** %15, align 8
  %160 = call i32 @php_check_open_basedir(i8* %159)
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %172

162:                                              ; preds = %158
  %163 = load i8**, i8*** %11, align 8
  %164 = load %93*, %93** %8, align 8
  %165 = getelementptr inbounds %93, %93* %164, i32 0, i32 9
  %166 = load i8*, i8** %165, align 8
  %167 = load i8*, i8** %15, align 8
  %168 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %163, i64 4096, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @392, i32 0, i32 0), i8* %166, i8* %167)
  %169 = load i8*, i8** %15, align 8
  call void @_efree(i8* %169)
  %170 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_efree(i8* %171)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

172:                                              ; preds = %158
  %173 = load i8, i8* %7, align 1
  %174 = icmp ne i8 %173, 0
  br i1 %174, label %189, label %175

175:                                              ; preds = %172
  %176 = load i8*, i8** %15, align 8
  %177 = call i32 @_php_stream_stat_path(i8* %176, i32 0, %36* %12, %46* null)
  %178 = icmp eq i32 0, %177
  br i1 %178, label %179, label %189

179:                                              ; preds = %175
  %180 = load i8**, i8*** %11, align 8
  %181 = load %93*, %93** %8, align 8
  %182 = getelementptr inbounds %93, %93* %181, i32 0, i32 9
  %183 = load i8*, i8** %182, align 8
  %184 = load i8*, i8** %15, align 8
  %185 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %180, i64 4096, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @393, i32 0, i32 0), i8* %183, i8* %184)
  %186 = load i8*, i8** %15, align 8
  call void @_efree(i8* %186)
  %187 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  call void @_efree(i8* %188)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

189:                                              ; preds = %175, %172
  %190 = load i8*, i8** %19, align 8
  %191 = load i64, i64* %20, align 8
  %192 = call i8* @443(i8* %190, i32 47, i64 %191)
  store i8* %192, i8** %16, align 8
  %193 = load i8*, i8** %16, align 8
  %194 = icmp ne i8* %193, null
  br i1 %194, label %195, label %207

195:                                              ; preds = %189
  %196 = load i8*, i8** %15, align 8
  %197 = load i32, i32* %10, align 4
  %198 = sext i32 %197 to i64
  %199 = load i8*, i8** %16, align 8
  %200 = load i8*, i8** %19, align 8
  %201 = ptrtoint i8* %199 to i64
  %202 = ptrtoint i8* %200 to i64
  %203 = sub i64 %201, %202
  %204 = add nsw i64 %198, %203
  %205 = add nsw i64 %204, 1
  %206 = getelementptr inbounds i8, i8* %196, i64 %205
  store i8 0, i8* %206, align 1
  br label %212

207:                                              ; preds = %189
  %208 = load i8*, i8** %15, align 8
  %209 = load i32, i32* %10, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i8, i8* %208, i64 %210
  store i8 0, i8* %211, align 1
  br label %212

212:                                              ; preds = %207, %195
  %213 = load i8*, i8** %15, align 8
  %214 = call i32 @_php_stream_stat_path(i8* %213, i32 0, %36* %12, %46* null)
  %215 = icmp eq i32 -1, %214
  br i1 %215, label %216, label %259

216:                                              ; preds = %212
  %217 = load %93*, %93** %8, align 8
  %218 = getelementptr inbounds %93, %93* %217, i32 0, i32 24
  %219 = load i16, i16* %218, align 2
  %220 = lshr i16 %219, 3
  %221 = and i16 %220, 1
  %222 = zext i16 %221 to i32
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %243

224:                                              ; preds = %216
  %225 = load i8*, i8** %15, align 8
  %226 = load %93*, %93** %8, align 8
  %227 = getelementptr inbounds %93, %93* %226, i32 0, i32 4
  %228 = load i32, i32* %227, align 8
  %229 = and i32 %228, 511
  %230 = call i32 @_php_stream_mkdir(i8* %225, i32 %229, i32 1, %46* null)
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %242, label %232

232:                                              ; preds = %224
  %233 = load i8**, i8*** %11, align 8
  %234 = load %93*, %93** %8, align 8
  %235 = getelementptr inbounds %93, %93* %234, i32 0, i32 9
  %236 = load i8*, i8** %235, align 8
  %237 = load i8*, i8** %15, align 8
  %238 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %233, i64 4096, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @394, i32 0, i32 0), i8* %236, i8* %237)
  %239 = load i8*, i8** %15, align 8
  call void @_efree(i8* %239)
  %240 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  call void @_efree(i8* %241)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

242:                                              ; preds = %224
  br label %258

243:                                              ; preds = %216
  %244 = load i8*, i8** %15, align 8
  %245 = call i32 @_php_stream_mkdir(i8* %244, i32 511, i32 1, %46* null)
  %246 = icmp ne i32 %245, 0
  br i1 %246, label %257, label %247

247:                                              ; preds = %243
  %248 = load i8**, i8*** %11, align 8
  %249 = load %93*, %93** %8, align 8
  %250 = getelementptr inbounds %93, %93* %249, i32 0, i32 9
  %251 = load i8*, i8** %250, align 8
  %252 = load i8*, i8** %15, align 8
  %253 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %248, i64 4096, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @394, i32 0, i32 0), i8* %251, i8* %252)
  %254 = load i8*, i8** %15, align 8
  call void @_efree(i8* %254)
  %255 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  call void @_efree(i8* %256)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

257:                                              ; preds = %243
  br label %258

258:                                              ; preds = %257, %242
  br label %259

259:                                              ; preds = %258, %212
  %260 = load i8*, i8** %16, align 8
  %261 = icmp ne i8* %260, null
  br i1 %261, label %262, label %274

262:                                              ; preds = %259
  %263 = load i8*, i8** %15, align 8
  %264 = load i32, i32* %10, align 4
  %265 = sext i32 %264 to i64
  %266 = load i8*, i8** %16, align 8
  %267 = load i8*, i8** %19, align 8
  %268 = ptrtoint i8* %266 to i64
  %269 = ptrtoint i8* %267 to i64
  %270 = sub i64 %268, %269
  %271 = add nsw i64 %265, %270
  %272 = add nsw i64 %271, 1
  %273 = getelementptr inbounds i8, i8* %263, i64 %272
  store i8 47, i8* %273, align 1
  br label %279

274:                                              ; preds = %259
  %275 = load i8*, i8** %15, align 8
  %276 = load i32, i32* %10, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %275, i64 %277
  store i8 47, i8* %278, align 1
  br label %279

279:                                              ; preds = %274, %262
  store i8* null, i8** %19, align 8
  %280 = getelementptr inbounds %106, %106* %18, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  call void @_efree(i8* %281)
  %282 = load %93*, %93** %8, align 8
  %283 = getelementptr inbounds %93, %93* %282, i32 0, i32 24
  %284 = load i16, i16* %283, align 2
  %285 = lshr i16 %284, 3
  %286 = and i16 %285, 1
  %287 = zext i16 %286 to i32
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %279
  %290 = load i8*, i8** %15, align 8
  call void @_efree(i8* %290)
  store i32 0, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

291:                                              ; preds = %279
  %292 = load i8*, i8** %15, align 8
  %293 = call %34* @_php_stream_open_wrapper_ex(i8* %292, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @342, i32 0, i32 0), i32 8, %0** null, %46* null)
  store %34* %293, %34** %14, align 8
  %294 = load %34*, %34** %14, align 8
  %295 = icmp ne %34* %294, null
  br i1 %295, label %304, label %296

296:                                              ; preds = %291
  %297 = load i8**, i8*** %11, align 8
  %298 = load %93*, %93** %8, align 8
  %299 = getelementptr inbounds %93, %93* %298, i32 0, i32 9
  %300 = load i8*, i8** %299, align 8
  %301 = load i8*, i8** %15, align 8
  %302 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %297, i64 4096, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @395, i32 0, i32 0), i8* %300, i8* %301)
  %303 = load i8*, i8** %15, align 8
  call void @_efree(i8* %303)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

304:                                              ; preds = %291
  %305 = load %93*, %93** %8, align 8
  %306 = call %34* @phar_get_efp(%93* %305, i32 0)
  %307 = icmp ne %34* %306, null
  br i1 %307, label %337, label %308

308:                                              ; preds = %304
  %309 = load %93*, %93** %8, align 8
  %310 = load i8**, i8*** %11, align 8
  %311 = call i32 @phar_open_entry_fp(%93* %309, i8** %310, i32 1)
  %312 = icmp eq i32 -1, %311
  br i1 %312, label %313, label %336

313:                                              ; preds = %308
  %314 = load i8**, i8*** %11, align 8
  %315 = icmp ne i8** %314, null
  br i1 %315, label %316, label %325

316:                                              ; preds = %313
  %317 = load i8**, i8*** %11, align 8
  %318 = load %93*, %93** %8, align 8
  %319 = getelementptr inbounds %93, %93* %318, i32 0, i32 9
  %320 = load i8*, i8** %319, align 8
  %321 = load i8*, i8** %15, align 8
  %322 = load i8**, i8*** %11, align 8
  %323 = load i8*, i8** %322, align 8
  %324 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %317, i64 4096, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @396, i32 0, i32 0), i8* %320, i8* %321, i8* %323)
  br label %332

325:                                              ; preds = %313
  %326 = load i8**, i8*** %11, align 8
  %327 = load %93*, %93** %8, align 8
  %328 = getelementptr inbounds %93, %93* %327, i32 0, i32 9
  %329 = load i8*, i8** %328, align 8
  %330 = load i8*, i8** %15, align 8
  %331 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %326, i64 4096, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @397, i32 0, i32 0), i8* %329, i8* %330)
  br label %332

332:                                              ; preds = %325, %316
  %333 = load i8*, i8** %15, align 8
  call void @_efree(i8* %333)
  %334 = load %34*, %34** %14, align 8
  %335 = call i32 @_php_stream_free(%34* %334, i32 3)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

336:                                              ; preds = %308
  br label %337

337:                                              ; preds = %336, %304
  %338 = load %93*, %93** %8, align 8
  %339 = call i32 @phar_seek_efp(%93* %338, i64 0, i32 0, i64 0, i32 0)
  %340 = icmp eq i32 -1, %339
  br i1 %340, label %341, label %351

341:                                              ; preds = %337
  %342 = load i8**, i8*** %11, align 8
  %343 = load %93*, %93** %8, align 8
  %344 = getelementptr inbounds %93, %93* %343, i32 0, i32 9
  %345 = load i8*, i8** %344, align 8
  %346 = load i8*, i8** %15, align 8
  %347 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %342, i64 4096, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @398, i32 0, i32 0), i8* %345, i8* %346)
  %348 = load i8*, i8** %15, align 8
  call void @_efree(i8* %348)
  %349 = load %34*, %34** %14, align 8
  %350 = call i32 @_php_stream_free(%34* %349, i32 3)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

351:                                              ; preds = %337
  %352 = load %93*, %93** %8, align 8
  %353 = call %34* @phar_get_efp(%93* %352, i32 0)
  %354 = load %34*, %34** %14, align 8
  %355 = load %93*, %93** %8, align 8
  %356 = getelementptr inbounds %93, %93* %355, i32 0, i32 0
  %357 = load i32, i32* %356, align 8
  %358 = zext i32 %357 to i64
  %359 = call i32 @_php_stream_copy_to_stream_ex(%34* %353, %34* %354, i64 %358, i64* null)
  %360 = icmp ne i32 0, %359
  br i1 %360, label %361, label %371

361:                                              ; preds = %351
  %362 = load i8**, i8*** %11, align 8
  %363 = load %93*, %93** %8, align 8
  %364 = getelementptr inbounds %93, %93* %363, i32 0, i32 9
  %365 = load i8*, i8** %364, align 8
  %366 = load i8*, i8** %15, align 8
  %367 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %362, i64 4096, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @399, i32 0, i32 0), i8* %365, i8* %366)
  %368 = load i8*, i8** %15, align 8
  call void @_efree(i8* %368)
  %369 = load %34*, %34** %14, align 8
  %370 = call i32 @_php_stream_free(%34* %369, i32 3)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

371:                                              ; preds = %351
  %372 = load %34*, %34** %14, align 8
  %373 = call i32 @_php_stream_free(%34* %372, i32 3)
  %374 = load %93*, %93** %8, align 8
  %375 = getelementptr inbounds %93, %93* %374, i32 0, i32 4
  %376 = load i32, i32* %375, align 8
  %377 = and i32 %376, 511
  store i32 %377, i32* %17, align 4
  %378 = load i8*, i8** %15, align 8
  %379 = load i32, i32* %17, align 4
  %380 = call i32 @chmod(i8* %378, i32 %379) #13
  %381 = icmp eq i32 -1, %380
  br i1 %381, label %382, label %390

382:                                              ; preds = %371
  %383 = load i8**, i8*** %11, align 8
  %384 = load %93*, %93** %8, align 8
  %385 = getelementptr inbounds %93, %93* %384, i32 0, i32 9
  %386 = load i8*, i8** %385, align 8
  %387 = load i8*, i8** %15, align 8
  %388 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %383, i64 4096, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @400, i32 0, i32 0), i8* %386, i8* %387)
  %389 = load i8*, i8** %15, align 8
  call void @_efree(i8* %389)
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

390:                                              ; preds = %371
  %391 = load i8*, i8** %15, align 8
  call void @_efree(i8* %391)
  store i32 0, i32* %6, align 4
  store i32 1, i32* %21, align 4
  br label %392

392:                                              ; preds = %390, %382, %361, %341, %332, %296, %289, %247, %232, %179, %162, %149, %141, %100, %53, %40
  %393 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %393) #13
  %394 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394) #13
  %395 = bitcast %106* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %395) #13
  %396 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %396) #13
  %397 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %397) #13
  %398 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %398) #13
  %399 = bitcast %34** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %399) #13
  %400 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #13
  %401 = bitcast %36* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %401) #13
  %402 = load i32, i32* %6, align 4
  ret i32 %402
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @479(%8* %0, %0* %1) #4 {
  %3 = alloca i8*, align 8
  %4 = alloca %8*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %4*, align 8
  %7 = alloca i32, align 4
  store %8* %0, %8** %4, align 8
  store %0* %1, %0** %5, align 8
  %8 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %8*, %8** %4, align 8
  %10 = load %0*, %0** %5, align 8
  %11 = call %4* @zend_hash_find(%8* %9, %0* %10)
  store %4* %11, %4** %6, align 8
  %12 = load %4*, %4** %6, align 8
  %13 = icmp ne %4* %12, null
  br i1 %13, label %14, label %34

14:                                               ; preds = %2
  br label %15

15:                                               ; preds = %14
  %16 = load %4*, %4** %6, align 8
  %17 = getelementptr inbounds %4, %4* %16, i32 0, i32 0
  %18 = bitcast %5* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp ne i8* %19, null
  %21 = xor i1 %20, true
  %22 = zext i1 %21 to i32
  %23 = sext i32 %22 to i64
  %24 = call i64 @llvm.expect.i64(i64 %23, i64 0)
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %15
  unreachable

27:                                               ; preds = %15
  br label %28

28:                                               ; preds = %27
  br label %29

29:                                               ; preds = %28
  %30 = load %4*, %4** %6, align 8
  %31 = getelementptr inbounds %4, %4* %30, i32 0, i32 0
  %32 = bitcast %5* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %3, align 8
  store i32 1, i32* %7, align 4
  br label %35

34:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  store i32 1, i32* %7, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = bitcast %4** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #13
  %37 = load i8*, i8** %3, align 8
  ret i8* %37
}

declare dso_local noalias i8* @_emalloc_8() #2

declare dso_local i32 @virtual_file_ex(%106*, i8*, i32 (%106*)*, i32) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #12

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #8

declare dso_local %4* @zend_hash_find(%8*, %0*) #2

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn writeonly }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { allocsize(0) }
attributes #16 = { nounwind returns_twice }
attributes #17 = { allocsize(0,1) }
attributes #18 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
